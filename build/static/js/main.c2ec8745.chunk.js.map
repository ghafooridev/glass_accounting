{"version":3,"sources":["helpers/constant.js","redux/reducers/AlertReducer.js","redux/reducers/dialogReducer.js","services/storage.js","redux/reducers/unitReducer.js","redux/reducers/index.js","redux/store/index.js","redux/actions/AlertAction.js","components/Alert/index.jsx","redux/actions/dialogAction.jsx","components/Modal/Modal.Style.js","components/Modal/index.jsx","themes/default.js","themes/index.js","components/Layout/styles.js","components/Header/styles.js","components/Wrappers/Wrappers.js","context/LayoutContext.js","context/UserContext.js","configs/axios.js","hooks/useApi.js","helpers/utils.js","components/Header/ChangePassword.js","components/Header/Header.js","components/Sidebar/styles.js","components/Sidebar/components/SidebarLink/styles.js","components/Sidebar/components/Dot.js","components/Sidebar/components/SidebarLink/SidebarLink.js","components/Sidebar/Sidebar.js","pages/dashboard/styles.js","components/Widget/styles.js","components/Widget/Widget.js","components/Paper/index.js","pages/dashboard/Dashboard.js","components/Table/TableRowMenu.js","components/Table/TableTop.js","components/Table/TableHead.js","components/Table/TablePaging.js","pages/users/style.js","components/Skeleton/index.js","pages/users/list.js","components/CircularProgress/index.js","pages/users/permission.js","pages/users/detail.js","pages/customers/style.js","pages/customers/filter.js","pages/customers/list.js","components/icons/index.js","pages/customers/account.js","pages/customers/detail.js","pages/customers/transaction.js","pages/employee/style.js","pages/employee/filter.js","pages/employee/list.js","pages/employee/account.js","pages/employee/detail.js","pages/invoice/style.js","pages/invoice/filter.js","pages/invoice/list.js","pages/payment/style.js","pages/payment/personSelector.js","pages/payment/paymnet.js","pages/payment/prePayment.js","pages/invoice/driverPayment.js","pages/invoice/driver.js","redux/actions/unitAction.js","pages/invoice/product.js","pages/invoice/detail.js","pages/invoice/productFastInvoice.js","pages/invoice/fastInvoice.js","pages/cheque/style.js","pages/cheque/cashSelector.js","pages/cheque/spendCheque.js","pages/cheque/list.js","pages/cheque/detail.js","pages/payment/filter.js","pages/payment/list.js","pages/payment/detail.js","pages/product/style.js","pages/product/amountBrif.js","pages/product/transfer.js","pages/product/list.js","pages/product/amount.js","pages/product/detail.js","pages/depot/style.js","pages/depot/amountBrif.js","pages/depot/list.js","pages/depot/detail.js","pages/cash/style.js","pages/cash/transfer.js","pages/cash/list.js","pages/cash/detail.js","pages/driver/style.js","pages/driver/filter.js","pages/driver/list.js","pages/driver/account.js","pages/driver/detail.js","pages/setting/style.js","pages/setting/list.js","pages/category/style.js","pages/category/detail.js","pages/category/index.js","pages/traffic/register.js","pages/employee/logFilter.js","pages/employee/log.js","pages/accountNumber/style.js","pages/accountNumber/detail.js","pages/accountNumber/list.js","pages/cash/paymentDetail.js","pages/cash/paymentReport.js","pages/loan/style.js","pages/loan/detail.js","pages/loan/list.js","components/Layout/index.js","pages/error/styles.js","pages/error/logo.svg","pages/error/Error.js","pages/login/styles.js","pages/login/logo.svg","pages/login/111.jpg","pages/login/Login.js","components/App.js","serviceWorker.js","themes/RTL.js","index.js"],"names":["Constant","API_ADDRESS","TABLE_PAGE_SIZE","EMPLOYEE_CONTACRT","value","label","TRAFFIC_STATUS","PRESENT","APSET","UNITS_MAP","KILOGRAM","GRAM","TON","BOX","SHEL","CUBICMETERS","PALLET","ACTION_TYPES","SHOW_ALERT","HIDE_ALERT","SHOW_DIALOG","HIDE_DIALOG","LOG_IN_USER","LOG_OUT_USER","GET_UNITS","PERSON_TYPE","EMPLOYEE","CUSTOMER","USER","DRIVER","PERSON","STORAGE","CURRENT_USER","TOKEN","MODE","CURRENT_LINK","PRODUCT_UNITS","VALIDATION","REQUIRED","MOBILE_NUMBER","PASSWORD","CARD_NUMBER","POSITIVE_NUMBER","MESSAGES","ERROR_MESSAGE","BAD_CREDENTIAL","PERSON_STATUS","DEBTOR","NODEBT","CREDITOR","PAYMENT_TYPE","INCOME","OUTCOME","ALL","INVOICE_TYPE","SELL","BUY","ALL_PERMISSIONS","USER_SHOW","USER_EDIT","USER_DELETE","CUSTOMER_SHOW","CUSTOMER_EDIT","CUSTOMER_DELETE","DRIVER_SHOW","DRIVER_EDIT","DRIVER_DELETE","EMPLOYEE_SHOW","EMPLOYEE_EDIT","EMPLOYEE_DELETE","PRODUCT_SHOW","PRODUCT_EDIT","PRODUCT_DELETE","DEPOT_SHOW","DEPOT_EDIT","DEPOT_DELETE","ACCOUNT_SHOW","ACCOUNT_EDIT","ACCOUNT_DELETE","PAYMENT_SHOW","PAYMENT_EDIT","INVOICE_SHOW","INVOICE_EDIT","CASH_DESK_SHOW","CASH_DESK_EDIT","CASH_DESK_DELETE","CHEQUE_SHOW","CHEQUE_EDIT","CHEQUE_DELETE","PERMISSIONS","BANK_TRANSACTION_TYPE","initialState","show","text","component","title","size","disableCloseButton","confirm","names","onAction","Storage","setItem","key","data","JSON","stringify","localStorage","getItem","parse","removeItem","unitReducer","state","action","type","payload","appReducer","combineReducers","alert","option","dialog","filter","item","name","unit","rootReducer","store","createStore","applyMiddleware","thunk","dispatch","Alert","useSelector","handleClose","event","reason","AlertAction","Snackbar","open","autoHideDuration","onClose","elevation","variant","severity","styles","makeStyles","theme","container","padding","overflowX","display","justifyContent","alignItems","borderBottom","palette","grey","light","Modal","classes","className","overlay","map","Grow","in","Grid","xs","sm","Number","style","boxShadow","borderRadius","position","zIndex","top","backgroundColor","left","transform","Typography","Button","color","onClick","dialogAction","primary","secondary","warning","success","info","gray","defaultTheme","direction","main","dark","contrastText","danger","hint","background","default","customShadows","widget","widgetDark","widgetWide","overrides","MuiBackdrop","root","MuiMenu","paper","MuiSelect","icon","MuiListItem","button","MuiTouchRipple","child","MuiTableRow","height","MuiTableCell","paddingLeft","head","fontSize","body","PrivateSwitchBase","marginLeft","themes","createMuiTheme","typography","fontFamily","h1","h2","h3","h4","h5","h6","maxWidth","content","flexGrow","spacing","width","minHeight","contentShift","transition","transitions","create","easing","sharp","duration","enteringScreen","fakeToolbar","mixins","toolbar","link","logotype","marginRight","fontWeight","whiteSpace","breakpoints","down","appBar","drawer","leavingScreen","paddingRight","hide","grow","search","fade","common","black","cursor","searchFocused","up","searchIcon","right","searchIconOpened","inputRoot","inputInput","messageContent","flexDirection","headerMenu","marginTop","headerMenuList","headerMenuItem","headerMenuButton","headerMenuButtonSandwich","headerMenuButtonCollapse","headerIcon","headerIconCollapse","profileMenu","minWidth","profileMenuUser","profileMenuItem","profileMenuIcon","profileMenuLink","textDecoration","messageNotification","messageNotificationSide","messageNotificationBodySide","sendMessageButton","margin","marginBottom","textTransform","sendButtonIcon","purchaseBtn","chip","allIcon","incomeIcon","useStyles","badge","Badge","children","colorBrightness","props","Styled","createStyled","getColor","useTheme","styledProps","classnames","weight","getFontWeight","getFontSize","brigtness","multiplier","defaultSize","options","withStyles","LayoutStateContext","React","createContext","LayoutDispatchContext","layoutReducer","isSidebarOpened","Error","LayoutProvider","useReducer","Provider","useLayoutState","context","useContext","undefined","useLayoutDispatch","toggleSidebar","UserStateContext","UserDispatchContext","userReducer","isAuthenticated","currentUser","UserProvider","useUserState","useUserDispatch","loginUser","loginRequest","username","password","history","setIsLoading","setError","a","execute","result","storageService","token","push","http","axios","baseURL","constants","headers","interceptors","response","use","config","method","url","error","code","message","Promise","reject","getProperUrl","urlParams","substring","indexOf","length","useApi","args","useState","pending","setPending","setResult","includes","convertParamsToQueryString","params","URLSearchParams","pickBy","identity","toString","getQueryString","param","URL","window","location","href","replace","searchParams","get","getRandomColorFromTheme","colors","Math","floor","random","getRandomNumber","min","max","persianNumber","en","number","t","substr","hasPermission","permit","FREE","permissions","MainDetail","onSubmit","onDismiss","useForm","control","handleSubmit","errors","reset","isPassword","setIsPassword","passwordRef","useRef","changePasswordRequest","onChangeViewClick","id","oldPassword","prePassword","newPassword","render","onChange","TextField","helperText","fullWidth","rules","required","minLength","inputRef","InputProps","endAdornment","InputAdornment","clsx","repassword","validate","current","Header","date","useHistory","layoutState","layoutDispatch","userDispatch","useLocation","mailMenu","setMailMenu","setProfileMenu","cheques","setCheques","getDashboardRequest","getChequeNotify","notify","onSubmitChangePassword","onDismissChangePassword","useEffect","AppBar","Toolbar","IconButton","classNames","ArrowForward","Date","getDay","toLocaleDateString","format","ticking","timezone","aria-haspopup","aria-controls","e","currentTarget","badgeContent","Menu","Boolean","anchorEl","MenuListProps","disableAutoFocusItem","Divider","MenuItem","chequeDueDate","person","price","Chip","ChangePassword","signOut","menuButton","flexShrink","drawerOpen","drawerClose","mobileBackButton","only","externalLink","linkActive","linkNested","linkIcon","linkIconActive","linkText","linkTextActive","linkTextHidden","opacity","nestedList","sectionTitle","divider","dotBase","dotSmall","dotLarge","Dot","SidebarLink","nested","permission","isOpen","setIsOpen","isLinkActive","pathname","ListItem","linkRoot","disableRipple","ListItemIcon","ListItemText","Link","preventDefault","to","Inbox","Collapse","timeout","unmountOnExit","List","disablePadding","childrenLink","innerWidth","values","md","structure","Constants","withRouter","isPermanent","setPermanent","addEventListener","handleWindowWidthChange","removeEventListener","Drawer","sidebarList","isSmallScreen","datePicker","paperTitle","card","visitsNumberContainer","paddingBottom","progressSection","progressTitle","progress","pieChartLegendWrapper","legendItemContainer","fullHeightBody","tableWidget","progressBarPrimary","progressBarSecondary","performanceLegendWrapper","legendElement","legendElementText","serverOverviewElement","serverOverviewElementText","serverOverviewElementChartWrapper","mainChartBody","mainChartHeader","flexWrap","mainChartHeaderLabels","order","mainChartHeaderLabel","mainChartSelectRoot","borderColor","mainChartSelect","mainChartLegentElement","widgetWrapper","widgetHeader","widgetRoot","widgetBody","noPadding","overflow","moreButton","noWidgetShadow","Widget","noBodyPadding","bodyClass","header","disableWidgetMenu","noHeaderPadding","headerClass","moreButtonRef","isMoreMenuOpen","setMoreMenuOpen","Paper","Fragment","noWrap","bottom","SimplePaper","RADIAN","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","radius","index","x","cos","y","sin","fill","textAnchor","dominantBaseline","toFixed","empoyeeTrafficChart","subject","A","trafficDayliChart","Dashboard","pieChart","setPieChart","paymentChart","setPaymentChart","factorChart","setFactorChart","showFilterBoxPayment","setShowFilterBoxPayment","showFilterBoxFactor","setShowFilterBoxFactor","moment","selectedFromDateFactor","handleFromDateChangeFactor","selectedToDateFactor","handleToDateChangeFactor","selectedFromDatePayment","handleFromDateChangePayment","selectedToDatePayment","handleToDateChangePayment","getPaymentRequest","_d","toISOString","getFactorRequest","onClickPaper","onChnageDateFactor","onChnageDatePayment","getPieChartData","dashboardChart","cashDesks","newCashDesks","getPaymentChart","chart","payments","getFactorChart","invoices","lg","PieChart","Pie","startAngle","endAngle","paddingAngle","dataKey","entry","Cell","upperTitle","ResponsiveContainer","RadarChart","PolarGrid","PolarAngleAxis","PolarRadiusAxis","Radar","stroke","fillOpacity","labelLine","amount","DatePicker","autoOk","inputVariant","okLabel","cancelLabel","labelFunc","class","LineChart","CartesianGrid","strokeDasharray","XAxis","YAxis","Line","activeDot","r","BarChart","Bar","TableRowMenu","hadleAction","setAnchorEl","aria-label","keepMounted","PaperProps","maxHeight","ITEM_HEIGHT","hidden","useToolbarStyles","highlight","lighten","box","TableTop","onAdd","FilterComponent","handleSearch","toolbarClass","addButtonClass","minimal","defaultSearch","showSearchText","setShowSearchText","showFilterBox","setShowFilterBox","searchText","setSearchText","target","onKeyDown","Tooltip","TableHeader","orderBy","onRequestSort","headCells","TableHead","TableRow","headCell","TableCell","textAlign","sortDirection","TableSortLabel","active","property","TablePaging","handleChangePage","count","handleChangeRowsPerPage","page","rowsPerPage","TablePagination","rowsPerPageOptions","onChangePage","onChangeRowsPerPage","labelRowsPerPage","backIconButtonText","nextIconButtonText","labelDisplayedRows","from","table","CustomSkeleton","headCount","Skeleton","MainList","setOrder","setOrderBy","setSearch","setPage","pageSize","setPageSize","list","setList","total","setTotal","getUserRequest","deleteUseRequest","getData","userList","Slide","TableContainer","Table","rowCount","TableBody","row","isAdmin","hover","tabIndex","firstName","lastName","mobile","phone","types","edit","delete","DialogActions","handleAction","colSpan","newPage","parseInt","Circular","flex","heght","CircularProgress","Permission","defaultPermissions","userAccess","setUserAccess","overflowY","FormControlLabel","Checkbox","checked","i","handleChange","array","detail","setDetail","addUserRequest","editUserRequest","detailUserRequest","onSubmitPermission","onDismissPermission","getDetail","onShowPermissionDialog","maxLength","address","status","rootSelect","personType","DEBTIOR","Filter","onFilter","filterData","setFilterData","prop","select","setFilter","getCustomerRequest","customerList","addPermission","accountRemaining","transaction","DeleteIcon","EditIcon","Account","defaultValues","banks","setBanks","bank","selectedBank","setSelectedBank","getBankRequest","getBanks","SelectProps","src","logo","alt","accountCardNumber","accountNumber","accountShaba","multiline","rows","description","newId","uuid","find","isUpdate","accounts","setAccounts","category","setCategory","customerCategory","setCustomerCategory","addCustomerRequest","editCustomerRequest","detailCustomerRequest","customerCategoryRequest","deleteAccountRequest","newAccounts","newData","bankId","allData","setTimeout","onReject","getCustomerCategory","onSubmitAccount","findIndex","accounstTmp","onDismissAccount","onShowDialog","handleDeleteAccount","customerId","PAYMENT_LIST","getTableTitle","toLocaleString","salary","salaryPaperLeft","salaryPaperRight","tab","ABSET","CONTERACT_TYPE","DEPOT","FACTORY","setType","getEmployeeRequest","employeeList","Tabs","indicatorColor","textColor","centered","Tab","contractType","traffic","paddingTop","selectedGender","setSelectedGender","selectedContract","setSelectedContract","addEmployeeRequest","editEmployeeRequest","detailEmployeeRequest","gender","RadioGroup","Radio","outgoIcon","selectedButton","selectedPerson","setSelectedPerson","selectedFromDate","handleFromDateChange","selectedToDate","handleToDateChange","customers","setCustomers","getCustomersRequest","onChnageDate","getCustomers","Autocomplete","getOptionLabel","renderInput","invoiceType","getInvoiceRequest","decodeURIComponent","invoiceList","globalCustomer","customer","headCellsCustomer","headCellsPerson","onSelect","Payment","paymentType","handleChequeDueDateChange","transactionType","selectedTransaction","setSelectedTransaction","cashes","setCashes","cashDeskId","selectedCash","setSelectedCash","getCashRequest","getCashes","getSelectedBank","getSelectedCash","onDone","cashDesk","onChangeBank","onChangeCash","trackingCode","chequeNumber","bankBranch","chequePayTo","naghdPayHeadCells","cardPayHeadCells","checkPayHeadCells","PrePayment","forwardRef","ref","setPayments","useImperativeHandle","onSubmitPaymentActions","isEdit","handleSubmitEditPayment","handleSubmitAddPayment","newPayments","NAGHD","update","$push","CARD","CHECK","$set","handleDeletePayment","$splice","onDismissPayment","onClickPayment","getButtonTitle","ButtonGroup","startIcon","Accordion","expanded","disabled","AccordionSummary","accordionSummary","expandIcon","heading","AccordionDetails","ProductList","driverId","paymentRef","selectedDrivers","setSelectedDrivers","getDriverRequest","driverList","carName","endIcon","perUnit","showPerUnit","setShowPerUnit","units","unitAction","selectedProduct","setSelectedProduct","depotPicker","setDepotPicker","selectedDepot","setSelectedDepot","fee","productFee","setProductFee","getDepotProductRequest","getProductFeeRequest","getDepotRequest","onChangeSelectedProduct","targetUnit","unitBaseId","productList","onSelectProduct","productId","feeProduct","isEmpty","getDepotPicker","allUnits","getProductUnitPicker","depotId","totalFee","categories","join","totalStock","unitBase","driverHeadCell","selectedDate","handleDateChange","invoiceCategory","setInvoiceCategory","drivers","setDrivers","products","setProducts","invoicePerson","setInvoicePerson","setTotalFee","totalPayment","setTotalPayment","discount","setDiscount","pureFee","setPureFee","totalRemaining","setTotalRemaining","addInvoiceRequest","editInvoiceRequest","detailInvoiceRequest","invoiceCategoryRequest","addInvoicePaymentRequest","getPaymentInvoiceRequest","addPaymentDriverRequest","getInvoiceCategory","onSelectPerson","onDismissPerson","getProperProducts","newProducts","categoryId","invoicePayment","invoiceId","personId","paymentsArray","totalPrice","onSubmitDrivers","onDismissDrivers","onDismissDriverPayments","onSubmitDriverPayments","driverPayments","newDriver","selected","onSubmitProduct","product","ProductsTmp","onDismissProduct","onShowProductDialog","onTotalDriverPayments","reduce","n","factorPay","Hidden","smDown","origin","destination","inventory_2","console","log","carPlaque","handlePaymentDriver","handleDeleteDriver","handleDeleteProduct","cashesPrice","chequesPrice","banksPrice","onChangeProductValue","newList","selectedCurrentProduct","productsRef","stocks","trim","CashSelector","chequeId","cashList","SpendCheque","persons","setPersons","setDescription","getPersonsRequest","getPersons","personList","setPaymentType","getChequeRequest","spendRequest","sleepRequest","onSelectCash","cashdeskId","onSubmitSpend","sleep","spend","revert","chequeList","CASH_LIST","cashDeskName","selectedType","setSelectedType","addCashRequest","editCashRequest","detailCashRequest","paymentList","paymentname","loan","isLoan","setIsLoan","setSelectedDate","addPaymentRequest","editPaymentRequest","detailPaymentRequest","stock","depot","deleteIcon","formControl","productName","setUnits","selectedUnit","setSelectedUnit","selectedSource","setSelectedSource","selectedDestination","setSelectedDestination","setAmount","selectedDriver","setSelectedDriver","driverPicker","setDriverPicker","isAddDriver","setIsAddDriver","setNewDriver","setPerUnit","getDriversRequest","categoryIdRequest","transferRequest","addDriverRequest","addTransferPaymentRequest","getDriverCategory","onSubmitTransfer","sourceDepotId","destinationDepotId","newAddedDriver","transferPayments","getDrivers","source","getUnits","getProductRequest","defaultUnit","transfer","seletedUnit","seletedDepot","amounts","setAmounts","selectedCategory","setSelectedCategory","addProductRequest","editProductRequest","detailProductRequest","getProductCategoryRequest","onSubmitAmount","amountTmp","onDismissAmount","filterAmounts","filteredAmount","newObject","perunit","getProductCategory","FormControl","InputLabel","htmlFor","Select","multiple","inputProps","handleDeleteAmount","setData","getAmountRequest","getAmount","depotList","depotCategory","setDepotCategory","addDepotRequest","editDepotRequest","detailDepotRequest","depotCategoryRequest","depotCategoryId","getDepotCategory","filterdCashes","sourceId","destinationId","deleteCashRequest","transferCashDesk","onDismissTransfer","CASH_DESK_LIST","driverCategory","setDriverCategory","driverCategoryRequest","editDriverRequest","detailDriverRequest","descendingComparator","b","getComparator","stableSort","comparator","stabilizedThis","el","sort","slice","defaultValue","setLabel","productCategory","setProductCategory","setAction","GetCustomerCategoryRequest","EditCustomerCategoryRequest","AddCustomerCategoryRequest","GetProductCategoryRequest","EditProductCategoryRequest","AddProductCategoryRequest","GetDepotCategoryRequest","EditDepotCategoryRequest","AddDepotCategoryRequest","GetInvoiceCategoryRequest","EditInvoiceCategoryRequest","AddInvoiceCategoryRequest","GetDriverCategoryRequest","EditDriverCategoryRequest","AddDriverCategoryRequest","invoice","driver","handleAdd","customerCategoryList","depotCategoryList","productCategoryList","invoiceCategoryList","driverCategoryList","addButton","enter","exit","logedEnter","logedExit","register","dateTime","clockConatiner","selectedTime","setSelectedTime","isEditTime","setIsEditTime","editTime","setEditTime","registerRequest","getTrafficRequest","editTrafficRequest","checkToday","employeeId","onEdit","tzOffset","getTimezoneOffset","handleTimeChange","onEditTime","time","toDateString","getTimesElement","times","TimePicker","ampm","orientation","openTo","employee","EmployeeLog","sum","setSum","jMoment","locale","startOf","details","fractionTime","overTime","totalTime","totalOverTime","totalFractionTime","img","grid","copyState","setCopyState","onCopy","copyField","AccountsNumber","setPerson","getCardRequest","onDismissDetail","cardList","personName","handleDetail","CASH","CHEQUE","BANK","PaymentReport","cashId","getPaymentByCashRequest","getLoanRequest","Layout","path","UserList","UserDetail","CustomerList","CustomerDetail","CustomerTransaction","EmployeeList","EmployeeDetail","DriverList","DriverDetail","CashList","CashDetail","CashPaymentReport","ChequeList","ChequeDetail","LoanList","LoanDetail","InvoiceList","InvoiceDetail","FastInvoice","PaymentList","PaymentDetail","ProductDetail","ProductTransfer","DepotList","DepotDetail","Setting","Category","Traffic","TrafficDetail","logotypeText","logotypeIcon","paperRoot","textRow","errorCode","safetyText","backButton","backgroundImage","logotypeContainer","logotypeImage","formContainer","form","greeting","subGreeting","googleButton","googleButtonCreating","googleIcon","creatingButtonContainer","createAccountButton","formDividerContainer","formDividerWord","formDivider","errorMessage","textFieldUnderline","borderBottomColor","textField","formButtons","forgetButton","loginLoader","copyright","isLoading","usernameValue","setUsernameValue","passwordValue","setPasswordValue","unitAcion","back","input","onKeyPress","which","App","exact","PrivateRoute","PublicRoute","Login","rest","createElement","hostname","match","jss","plugins","jssPreset","rtl","RTL","StylesProvider","loadPersian","dialect","usePersianDigits","ReactDOM","utils","JalaliUtils","ThemeProvider","Themes","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c2ec8745.chunk.js","sourcesContent":["const Constant = {\r\n  // API_ADDRESS: \"http://185.204.197.95:5000/\",\r\n  API_ADDRESS: \"http://account.toosbloor.ir\",\r\n  TABLE_PAGE_SIZE: 10,\r\n  EMPLOYEE_CONTACRT: [\r\n    { value: \"FACTORY\", label: \"کارخانه\" },\r\n    { value: \"DEPOT\", label: \"انبار\" },\r\n  ],\r\n  TRAFFIC_STATUS: {\r\n    PRESENT: \"حاضر\",\r\n    APSET: \"غایب\",\r\n  },\r\n  UNITS_MAP: {\r\n    KILOGRAM: \"کیلوگرم\",\r\n    GRAM: \"گرم\",\r\n    TON: \"تن\",\r\n    BOX: \"کارتن\",\r\n    SHEL: \"شل\",\r\n    CUBICMETERS: \"مترمکعب\",\r\n    PALLET: \"پالت\",\r\n  },\r\n  ACTION_TYPES: {\r\n    SHOW_ALERT: \"SHOW_ALERT\",\r\n    HIDE_ALERT: \"HIDE_ALERT\",\r\n    SHOW_DIALOG: \"SHOW_DIALOG\",\r\n    HIDE_DIALOG: \"HIDE_DIALOG\",\r\n    LOG_IN_USER: \"LOG_IN_USER\",\r\n    LOG_OUT_USER: \"LOG_OUT_USER\",\r\n    GET_UNITS: \"GET_UNITS\",\r\n  },\r\n  PERSON_TYPE: {\r\n    EMPLOYEE: \"employee\",\r\n    CUSTOMER: \"customer\",\r\n    USER: \"user\",\r\n    DRIVER: \"driver\",\r\n    PERSON: \"person\",\r\n  },\r\n  STORAGE: {\r\n    CURRENT_USER: \"CURRENT_USER\",\r\n    TOKEN: \"TOKEN\",\r\n    MODE: \"MODE\",\r\n    CURRENT_LINK: \"CURRENT_LINK\",\r\n    PRODUCT_UNITS: \"PRODUCT_UNITS\",\r\n  },\r\n  VALIDATION: {\r\n    REQUIRED: \"این فیلد الزامی است\",\r\n    MOBILE_NUMBER: \"موبایل باید 11 عدد داشته باشد\",\r\n    PASSWORD: \"رمز عبور باید حداقل 5 حرف یا رقم باشد\",\r\n    CARD_NUMBER: \"شماره کارت باید 16 رقم باشد\",\r\n    POSITIVE_NUMBER: \"این عدد باید مثبت باشد\",\r\n  },\r\n  MESSAGES: {},\r\n  ERROR_MESSAGE: {\r\n    BAD_CREDENTIAL: \"نام کاربری یا رمز عبور اشتباه است\",\r\n  },\r\n  PERSON_STATUS: {\r\n    DEBTOR: \"بدهکار\",\r\n    NODEBT: \"بی حساب\",\r\n    CREDITOR: \"طلبکار\",\r\n  },\r\n  PAYMENT_TYPE: {\r\n    INCOME: \"دریافتی\",\r\n    OUTCOME: \"پرداختی\",\r\n    ALL: \"دریافتی و پرداختی\",\r\n  },\r\n  INVOICE_TYPE: {\r\n    SELL: \"فروش\",\r\n    BUY: \"خرید\",\r\n  },\r\n  ALL_PERMISSIONS: {\r\n    USER_SHOW: \"USER_SHOW\",\r\n    USER_EDIT: \"USER_EDIT\",\r\n    USER_DELETE: \"USER_DELETE\",\r\n    CUSTOMER_SHOW: \"CUSTOMER_SHOW\",\r\n    CUSTOMER_EDIT: \"CUSTOMER_EDIT\",\r\n    CUSTOMER_DELETE: \"CUSTOMER_DELETE\",\r\n    DRIVER_SHOW: \"DRIVER_SHOW\",\r\n    DRIVER_EDIT: \"DRIVER_EDIT\",\r\n    DRIVER_DELETE: \"DRIVER_DELETE\",\r\n    EMPLOYEE_SHOW: \"EMPLOYEE_SHOW\",\r\n    EMPLOYEE_EDIT: \"EMPLOYEE_EDIT\",\r\n    EMPLOYEE_DELETE: \"EMPLOYEE_DELETE\",\r\n    PRODUCT_SHOW: \"PRODUCT_SHOW\",\r\n    PRODUCT_EDIT: \"PRODUCT_EDIT\",\r\n    PRODUCT_DELETE: \"PRODUCT_DELETE\",\r\n    DEPOT_SHOW: \"DEPOT_SHOW\",\r\n    DEPOT_EDIT: \"DEPOT_EDIT\",\r\n    DEPOT_DELETE: \"DEPOT_DELETE\",\r\n    ACCOUNT_SHOW: \"ACCOUNT_SHOW\",\r\n    ACCOUNT_EDIT: \"ACCOUNT_EDIT\",\r\n    ACCOUNT_DELETE: \"ACCOUNT_DELETE\",\r\n    PAYMENT_SHOW: \"PAYMENT_SHOW\",\r\n    PAYMENT_EDIT: \"PAYMENT_EDIT\",\r\n    INVOICE_SHOW: \"INVOICE_SHOW\",\r\n    INVOICE_EDIT: \"INVOICE_EDIT\",\r\n    CASH_DESK_SHOW: \"CASH_DESK_SHOW\",\r\n    CASH_DESK_EDIT: \"CASH_DESK_EDIT\",\r\n    CASH_DESK_DELETE: \"CASH_DESK_DELETE\",\r\n    CHEQUE_SHOW: \"CHEQUE_SHOW:\",\r\n    CHEQUE_EDIT: \"CHEQUE_EDIT\",\r\n    CHEQUE_DELETE: \"CHEQUE_DELETE\",\r\n  },\r\n  PERMISSIONS: [\r\n    { value: \"PAYMENT_SHOW\", label: \"لیست پرداختی و دریافتی\" },\r\n    { value: \"PAYMENT_EDIT\", label: \"ویرایش پرداختی و دریافتی \" },\r\n    { value: \"INVOICE_SHOW\", label: \"لیست فاکتور ها\" },\r\n    { value: \"INVOICE_EDIT\", label: \"ویرایش فاکتور ها\" },\r\n    { value: \"CASH_DESK_SHOW\", label: \"لیست صندوق ها\" },\r\n    { value: \"CASH_DESK_EDIT\", label: \"ویرایش صندوق ها\" },\r\n    { value: \"CASH_DESK_DELETE\", label: \"حذف صندوق ها\" },\r\n    { value: \"CHEQUE_SHOW\", label: \"لیست چک ها\" },\r\n    { value: \"CHEQUE_EDIT\", label: \"ویرایش چک ها\" },\r\n    { value: \"CHEQUE_DELETE\", label: \"حذف چک ها\" },\r\n    { value: \"USER_SHOW\", label: \"لیست کاربران\" },\r\n    { value: \"USER_EDIT\", label: \"ویرایش کاربران\" },\r\n    { value: \"USER_DELETE\", label: \"حذف کاربران\" },\r\n    { value: \"EMPLOYEE_SHOW\", label: \"لیست پرسنل\" },\r\n    { value: \"EMPLOYEE_EDIT\", label: \"ویرایش پرسنل\" },\r\n    { value: \"EMPLOYEE_DELETE\", label: \"حذف پرسنل\" },\r\n    { value: \"PRODUCT_SHOW\", label: \"لیست محصولات\" },\r\n    { value: \"PRODUCT_EDIT\", label: \"ویرایش محصولات\" },\r\n    { value: \"PRODUCT_DELETE\", label: \"حذف محصولات\" },\r\n    { value: \"CUSTOMER_SHOW\", label: \"لیست مشتریان\" },\r\n    { value: \"CUSTOMER_EDIT\", label: \"ویرایش مشتریان\" },\r\n    { value: \"CUSTOMER_DELETE\", label: \"حذف مشتریان\" },\r\n    { value: \"DRIVER_SHOW\", label: \"لیست رانندگان\" },\r\n    { value: \"DRIVER_EDIT\", label: \"ویرایش رانندگان\" },\r\n    { value: \"DRIVER_DELETE\", label: \"حذف رانندگان\" },\r\n    { value: \"DEPOT_SHOW\", label: \"لیست انبارها\" },\r\n    { value: \"DEPOT_EDIT\", label: \"ویرایش انبارها\" },\r\n    { value: \"DEPOT_DELETE\", label: \"حذف انبارها\" },\r\n    { value: \"ACCOUNT_SHOW\", label: \"لیست حساب ها\" },\r\n    { value: \"ACCOUNT_EDIT\", label: \"ویرایش حساب ها\" },\r\n  ],\r\n  BANK_TRANSACTION_TYPE: [\r\n    { value: \"کارت به کارت\", label: \"کارت به کارت\" },\r\n    { value: \"دستگاه پوز\", label: \"دستگاه پوز\" },\r\n    { value: \"پایا/ساتنا\", label: \"پایا/ساتنا\" },\r\n    { value: \"واریز به/از حساب\", label: \"واریز به/از حساب\" },\r\n  ],\r\n};\r\nexport default Constant;\r\n","import Constant from \"../../helpers/constant\";\r\n\r\nconst initialState = {\r\n  show: false,\r\n  text: \"\",\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case Constant.ACTION_TYPES.SHOW_ALERT: {\r\n      return {\r\n        ...state,\r\n        ...action.option,\r\n        show: true,\r\n      };\r\n    }\r\n    case Constant.ACTION_TYPES.HIDE_ALERT: {\r\n      return {\r\n        ...state,\r\n        show: false,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import Constant from \"../../helpers/constant\";\r\nconst initialState = {\r\n  show: false,\r\n  component: null,\r\n  title: \"\",\r\n  size: \"8\",\r\n  disableCloseButton: false,\r\n  confirm: false,\r\n  names: [],\r\n  onAction: () => {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case Constant.ACTION_TYPES.SHOW_DIALOG: {\r\n      return {\r\n        ...state,\r\n        ...action.option,\r\n        names: [...state.names, action.option],\r\n      };\r\n    }\r\n    case Constant.ACTION_TYPES.HIDE_DIALOG: {\r\n      return {\r\n        names: state.names.filter((item) => item.name !== action.option.name),\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const Storage = {\r\n  setItem(key, data) {\r\n    if (typeof data === \"object\") {\r\n      data = JSON.stringify(data);\r\n    }\r\n    localStorage.setItem(key, data);\r\n  },\r\n\r\n  getItem(key) {\r\n    let obj = null;\r\n    const value = localStorage.getItem(key);\r\n    if (typeof value === \"object\") {\r\n      obj = JSON.parse(value);\r\n    } else {\r\n      obj = value;\r\n    }\r\n\r\n    return obj;\r\n  },\r\n\r\n  removeItem(key) {\r\n    localStorage.removeItem(key);\r\n  },\r\n};\r\n\r\nexport default Storage;\r\n","import Constant from \"../../helpers/constant\";\r\nimport Storage from \"../../services/storage\";\r\n\r\nconst initialState = JSON.parse(\r\n  Storage.getItem(Constant.STORAGE.PRODUCT_UNITS),\r\n);\r\n\r\nfunction unitReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case Constant.ACTION_TYPES.GET_UNITS: {\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default unitReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport alert from \"./AlertReducer\";\r\nimport dialog from \"./dialogReducer\";\r\nimport unit from \"./unitReducer\";\r\n\r\nconst appReducer = combineReducers({\r\n  alert,\r\n  dialog,\r\n  unit,\r\n});\r\n\r\nconst rootReducer = (state, action) => {\r\n  return appReducer(state, action);\r\n};\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\n\r\nimport rootReducer from \"../reducers\"\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport default store\r\n","import Constant from \"../../helpers/constant\";\r\nimport store from \"../store\";\r\n\r\nexport default {\r\n  show(option) {\r\n    store.dispatch({ type: Constant.ACTION_TYPES.SHOW_ALERT, option });\r\n  },\r\n\r\n  hide() {\r\n    store.dispatch({ type: Constant.ACTION_TYPES.HIDE_ALERT });\r\n  },\r\n};\r\n","import React from \"react\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nimport AlertAction from \"../../redux/actions/AlertAction\";\r\n\r\nconst Alert = function () {\r\n  const { show, text, type } = useSelector((state) => state.alert);\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    AlertAction.hide();\r\n  };\r\n\r\n  return (\r\n    <Snackbar open={show} autoHideDuration={6000} onClose={handleClose}>\r\n      <MuiAlert\r\n        elevation={6}\r\n        variant=\"filled\"\r\n        onClose={handleClose}\r\n        severity={type}\r\n      >\r\n        {text}\r\n      </MuiAlert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import Constant from \"../../helpers/constant\";\r\nimport store from \"../store\";\r\n\r\nexport default {\r\n  show(option) {\r\n    store.dispatch({ type: Constant.ACTION_TYPES.SHOW_DIALOG, option });\r\n  },\r\n\r\n  hide(option) {\r\n    store.dispatch({ type: Constant.ACTION_TYPES.HIDE_DIALOG, option });\r\n  },\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const styles = makeStyles((theme) => ({\r\n  container: {\r\n    padding: \"20px\",\r\n    overflowX: \"hidden\",\r\n  },\r\n  title: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    borderBottom: `1px solid ${theme.palette.grey.light}`,\r\n    padding: \"20px\",\r\n  },\r\n  confirm: {\r\n    padding: \"0px 20px 20px\",\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  // overlay: {\r\n  //   position: \"fixed\",\r\n  //   display: \"none\",\r\n  //   width: \"100%\",\r\n  //   height: \"100%\",\r\n  //   top: 0,\r\n  //   left: 0,\r\n  //   right: 0,\r\n  //   bottom: 0,\r\n  //   backgroundColor: \"rgba(0,0,0,0.5)\",\r\n  //   zIndex: 2,\r\n  //   cursor: \"pointer\",\r\n  // },\r\n}));\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport dialogAction from \"../../redux/actions/dialogAction\";\r\nimport { Grid, Grow, Typography, Button } from \"@material-ui/core\";\r\nimport { styles } from \"./Modal.Style\";\r\n\r\nconst Modal = function () {\r\n  const classes = styles();\r\n  const { names } = useSelector((state) => state.dialog);\r\n\r\n  const onClose = function (item) {\r\n    dialogAction.hide({ name: \"delete\" });\r\n  };\r\n\r\n  return (\r\n    // <Dialog\r\n    //   fullWidth\r\n    //   maxWidth={size}\r\n    //   onClose={onClose}\r\n    //   aria-labelledby=\"simple-dialog-title\"\r\n    //   open={x()}\r\n    //   disableBackdropClick\r\n    // >\r\n    <div className={classes.overlay}>\r\n      {names.map((item) => (\r\n        <Grow in={true}>\r\n          <Grid\r\n            xs={12}\r\n            sm={Number(item.size)}\r\n            container\r\n            style={{\r\n              boxShadow: \"0 3px 10px rgb(0 0 0 / 0.2)\",\r\n              borderRadius: 5,\r\n              padding: 20,\r\n              position: \"fixed\",\r\n              zIndex: 1000,\r\n              top: \"50%\",\r\n              backgroundColor: \"#fff\",\r\n              left: \"50%\",\r\n              transform: \"translate(-50%,-50%)\",\r\n            }}\r\n          >\r\n            <Grid item xs={12} className={classes.title}>\r\n              <Typography variant=\"h6\">{item.title}</Typography>\r\n              {/* {!item.disableCloseButton && (\r\n              <i\r\n                className=\"material-icons\"\r\n                onClick={() => onClose(item)}\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                clear\r\n              </i>\r\n            )} */}\r\n            </Grid>\r\n            {!item.confirm && (\r\n              <Grid item xs={12} className={classes.container}>\r\n                {item.component}\r\n              </Grid>\r\n            )}\r\n            {item.confirm && (\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                className={classes.confirm}\r\n                style={{ justifyContent: \"space-between\" }}\r\n              >\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  onClick={() => onClose(item)}\r\n                >\r\n                  انصراف\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={item.onAction}\r\n                >\r\n                  تایید\r\n                </Button>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </Grow>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","export const primary = \"#00989D\";\r\nexport const secondary = \"#FF5C93\";\r\nexport const warning = \"#FFC260\";\r\nexport const success = \"#3CD4A0\";\r\nexport const info = \"#9013FE\";\r\nexport const gray = \"#B9B9B9\";\r\nexport const orange = \"#F95700FF\";\r\nexport const purple = \"#E69A8DFF\";\r\n\r\nconst defaultTheme = {\r\n  direction: \"rtl\",\r\n\r\n  palette: {\r\n    primary: {\r\n      main: primary,\r\n      light: \"#dcf0fa\",\r\n      dark: primary,\r\n    },\r\n    secondary: {\r\n      main: secondary,\r\n      light: secondary,\r\n      dark: secondary,\r\n      contrastText: \"#FFFFFF\",\r\n    },\r\n    danger: {\r\n      main: secondary,\r\n      light: secondary,\r\n      dark: secondary,\r\n      contrastText: \"#FFFFFF\",\r\n    },\r\n    warning: {\r\n      main: warning,\r\n      light: warning,\r\n      dark: warning,\r\n    },\r\n    success: {\r\n      main: success,\r\n      light: success,\r\n      dark: \"#388e3c\",\r\n    },\r\n    info: {\r\n      main: info,\r\n      light: info,\r\n      dark: info,\r\n    },\r\n    gray: {\r\n      main: gray,\r\n      light: gray,\r\n      dark: gray,\r\n    },\r\n    text: {\r\n      primary: \"#6E6E6E\",\r\n      secondary: \"#6E6E6E\",\r\n      hint: \"#B9B9B9\",\r\n    },\r\n    background: {\r\n      default: \"#F6F7FF\",\r\n      light: \"#F3F5FF\",\r\n    },\r\n  },\r\n  customShadows: {\r\n    widget:\r\n      \"0px 3px 11px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\r\n    widgetDark:\r\n      \"0px 3px 18px 0px #4558A3B3, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\r\n    widgetWide:\r\n      \"0px 12px 33px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\r\n  },\r\n  overrides: {\r\n    MuiBackdrop: {\r\n      root: {\r\n        backgroundColor: \"#4A4A4A1A\",\r\n      },\r\n    },\r\n    MuiMenu: {\r\n      paper: {\r\n        boxShadow:\r\n          \"0px 3px 11px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\r\n      },\r\n    },\r\n    MuiSelect: {\r\n      icon: {\r\n        color: \"#B9B9B9\",\r\n      },\r\n    },\r\n    MuiListItem: {\r\n      root: {\r\n        \"&$selected\": {\r\n          backgroundColor: \"#F3F5FF !important\",\r\n          \"&:focus\": {\r\n            backgroundColor: \"#F3F5FF\",\r\n          },\r\n        },\r\n      },\r\n      button: {\r\n        \"&:hover, &:focus\": {\r\n          backgroundColor: \"#F3F5FF\",\r\n        },\r\n      },\r\n    },\r\n    MuiTouchRipple: {\r\n      child: {\r\n        backgroundColor: \"white\",\r\n      },\r\n    },\r\n    MuiTableRow: {\r\n      root: {\r\n        height: 45,\r\n      },\r\n    },\r\n    MuiTableCell: {\r\n      root: {\r\n        borderBottom: \"1px solid rgba(224, 224, 224, .5)\",\r\n        paddingLeft: 24,\r\n      },\r\n      head: {\r\n        fontSize: \"0.95rem\",\r\n      },\r\n      body: {\r\n        fontSize: \"0.95rem\",\r\n      },\r\n    },\r\n    PrivateSwitchBase: {\r\n      root: {\r\n        marginLeft: 10,\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nexport default defaultTheme;\r\n","import defaultTheme from \"./default\";\r\n\r\nimport { createMuiTheme } from \"@material-ui/core\";\r\n\r\nconst overrides = {\r\n  typography: {\r\n    fontFamily: \"IRANSans\",\r\n    h1: {\r\n      fontSize: \"3rem\",\r\n    },\r\n    h2: {\r\n      fontSize: \"2rem\",\r\n    },\r\n    h3: {\r\n      fontSize: \"1.64rem\",\r\n    },\r\n    h4: {\r\n      fontSize: \"1.5rem\",\r\n    },\r\n    h5: {\r\n      fontSize: \"1.285rem\",\r\n    },\r\n    h6: {\r\n      fontSize: \"1.142rem\",\r\n    },\r\n  },\r\n};\r\n\r\nconst themes = {\r\n  default: createMuiTheme({ ...defaultTheme, ...overrides }),\r\n};\r\n\r\nexport default themes;\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    maxWidth: \"100vw\",\r\n    overflowX: \"hidden\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    width: `calc(100vw - 240px)`,\r\n    minHeight: \"100vh\",\r\n  },\r\n  contentShift: {\r\n    width: `calc(100vw - ${240 + theme.spacing(6)}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  fakeToolbar: {\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  link: {\r\n    '&:not(:first-child)': {\r\n      paddingLeft: 15\r\n    }\r\n  }\r\n}));\r\n","import { makeStyles } from \"@material-ui/styles\";\r\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  logotype: {\r\n    color: \"white\",\r\n    marginLeft: theme.spacing(2.5),\r\n    marginRight: theme.spacing(2.5),\r\n    fontWeight: 500,\r\n    fontSize: 18,\r\n    whiteSpace: \"nowrap\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  appBar: {\r\n    width: \"100vw\",\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  toolbar: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: 25,\r\n    paddingLeft: theme.spacing(2.5),\r\n    width: 36,\r\n    backgroundColor: fade(theme.palette.common.black, 0),\r\n    transition: theme.transitions.create([\"background-color\", \"width\"]),\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n      backgroundColor: fade(theme.palette.common.black, 0.08),\r\n    },\r\n  },\r\n  searchFocused: {\r\n    backgroundColor: fade(theme.palette.common.black, 0.08),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: 250,\r\n    },\r\n  },\r\n  searchIcon: {\r\n    width: 36,\r\n    right: 0,\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    transition: theme.transitions.create(\"right\"),\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n  searchIconOpened: {\r\n    right: theme.spacing(1.25),\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n  },\r\n  inputInput: {\r\n    height: 36,\r\n    padding: 0,\r\n    paddingRight: 36 + theme.spacing(1.25),\r\n    width: \"100%\",\r\n  },\r\n  messageContent: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  headerMenu: {\r\n    marginTop: theme.spacing(7),\r\n  },\r\n  headerMenuList: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  headerMenuItem: {\r\n    \"&:hover, &:focus\": {\r\n      backgroundColor: theme.palette.background.light,\r\n      // color: \"white\",\r\n    },\r\n  },\r\n  headerMenuButton: {\r\n    marginLeft: theme.spacing(2),\r\n    padding: theme.spacing(0.5),\r\n  },\r\n  headerMenuButtonSandwich: {\r\n    marginLeft: 9,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginLeft: 0,\r\n    },\r\n    padding: theme.spacing(0.5),\r\n  },\r\n  headerMenuButtonCollapse: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  headerIcon: {\r\n    fontSize: 28,\r\n    color: \"rgba(255, 255, 255, 0.35)\",\r\n  },\r\n  headerIconCollapse: {\r\n    color: \"white\",\r\n  },\r\n  profileMenu: {\r\n    minWidth: 165,\r\n  },\r\n  profileMenuUser: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    padding: theme.spacing(2),\r\n  },\r\n  profileMenuItem: {\r\n    color: theme.palette.text.hint,\r\n  },\r\n  profileMenuIcon: {\r\n    marginRight: theme.spacing(2),\r\n    color: theme.palette.text.hint,\r\n    \"&:hover\": {\r\n      color: theme.palette.primary.main,\r\n    },\r\n  },\r\n  profileMenuLink: {\r\n    fontSize: 16,\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n  messageNotification: {\r\n    width: \"500px\",\r\n    justifyContent: \"space-between\",\r\n    height: \"auto\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    \"&:hover, &:focus\": {\r\n      backgroundColor: theme.palette.background.light,\r\n    },\r\n  },\r\n  messageNotificationSide: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  messageNotificationBodySide: {\r\n    alignItems: \"flex-start\",\r\n    marginRight: 0,\r\n  },\r\n  sendMessageButton: {\r\n    margin: theme.spacing(4),\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n    textTransform: \"none\",\r\n  },\r\n  sendButtonIcon: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  purchaseBtn: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n    marginRight: theme.spacing(3),\r\n  },\r\n\r\n  chip: {\r\n    color: \"#fff\",\r\n  },\r\n  allIcon: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  INCOME: {\r\n    backgroundColor: theme.palette.success.main,\r\n  },\r\n  incomeIcon: {\r\n    color: theme.palette.success.main,\r\n  },\r\n  OUTCOME: {\r\n    backgroundColor: theme.palette.danger.main,\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport {\r\n  withStyles,\r\n  Badge as BadgeBase,\r\n  Typography as TypographyBase,\r\n  Button as ButtonBase,\r\n} from \"@material-ui/core\";\r\nimport { useTheme, makeStyles } from \"@material-ui/styles\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nvar useStyles = makeStyles(theme => ({\r\n  badge: {\r\n    fontWeight: 600,\r\n    height: 16,\r\n    minWidth: 16,\r\n  },\r\n}));\r\n\r\nfunction Badge({ children, colorBrightness, color, ...props }) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n  var Styled = createStyled({\r\n    badge: {\r\n      backgroundColor: getColor(color, theme, colorBrightness),\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Styled>\r\n      {styledProps => (\r\n        <BadgeBase\r\n          classes={{\r\n            badge: classnames(classes.badge, styledProps.classes.badge),\r\n          }}\r\n          {...props}\r\n        >\r\n          {children}\r\n        </BadgeBase>\r\n      )}\r\n    </Styled>\r\n  );\r\n}\r\n\r\nfunction Typography({\r\n  children,\r\n  weight,\r\n  size,\r\n  colorBrightness,\r\n  color,\r\n  ...props\r\n}) {\r\n  var theme = useTheme();\r\n\r\n  return (\r\n    <TypographyBase\r\n      style={{\r\n        color: getColor(color, theme, colorBrightness),\r\n        fontWeight: getFontWeight(weight),\r\n        fontSize: getFontSize(size, props.variant, theme),\r\n      }}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </TypographyBase>\r\n  );\r\n}\r\n\r\nfunction Button({ children, color, className, ...props }) {\r\n  var theme = useTheme();\r\n\r\n  var Styled = createStyled({\r\n    root: {\r\n      color: getColor(color, theme),\r\n    },\r\n    contained: {\r\n      backgroundColor: getColor(color, theme),\r\n      boxShadow: theme.customShadows.widget,\r\n      color: `${color ? \"white\" : theme.palette.text.primary} !important`,\r\n      \"&:hover\": {\r\n        backgroundColor: getColor(color, theme, \"light\"),\r\n        boxShadow: theme.customShadows.widgetWide,\r\n      },\r\n      \"&:active\": {\r\n        boxShadow: theme.customShadows.widgetWide,\r\n      },\r\n    },\r\n    outlined: {\r\n      color: getColor(color, theme),\r\n      borderColor: getColor(color, theme),\r\n    },\r\n    select: {\r\n      backgroundColor: theme.palette.primary.main,\r\n      color: \"#fff\",\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Styled>\r\n      {({ classes }) => (\r\n        <ButtonBase\r\n          classes={{\r\n            contained: classes.contained,\r\n            root: classes.root,\r\n            outlined: classes.outlined,\r\n          }}\r\n          {...props}\r\n          className={classnames(\r\n            {\r\n              [classes.select]: props.select,\r\n            },\r\n            className,\r\n          )}\r\n        >\r\n          {children}\r\n        </ButtonBase>\r\n      )}\r\n    </Styled>\r\n  );\r\n}\r\n\r\nexport { Badge, Typography, Button };\r\n\r\n// ########################################################################\r\n\r\nfunction getColor(color, theme, brigtness = \"main\") {\r\n  if (color && theme.palette[color] && theme.palette[color][brigtness]) {\r\n    return theme.palette[color][brigtness];\r\n  }\r\n}\r\n\r\nfunction getFontWeight(style) {\r\n  switch (style) {\r\n    case \"light\":\r\n      return 300;\r\n    case \"medium\":\r\n      return 500;\r\n    case \"bold\":\r\n      return 600;\r\n    default:\r\n      return 400;\r\n  }\r\n}\r\n\r\nfunction getFontSize(size, variant = \"\", theme) {\r\n  var multiplier;\r\n\r\n  switch (size) {\r\n    case \"sm\":\r\n      multiplier = 0.8;\r\n      break;\r\n    case \"md\":\r\n      multiplier = 1.5;\r\n      break;\r\n    case \"xl\":\r\n      multiplier = 2;\r\n      break;\r\n    case \"xxl\":\r\n      multiplier = 3;\r\n      break;\r\n    default:\r\n      multiplier = 1;\r\n      break;\r\n  }\r\n\r\n  var defaultSize =\r\n    variant && theme.typography[variant]\r\n      ? theme.typography[variant].fontSize\r\n      : theme.typography.fontSize + \"px\";\r\n\r\n  return `calc(${defaultSize} * ${multiplier})`;\r\n}\r\n\r\nfunction createStyled(styles, options) {\r\n  var Styled = function(props) {\r\n    const { children, ...other } = props;\r\n    return children(other);\r\n  };\r\n\r\n  return withStyles(styles, options)(Styled);\r\n}\r\n","import React from \"react\";\r\n\r\nvar LayoutStateContext = React.createContext();\r\nvar LayoutDispatchContext = React.createContext();\r\n\r\nfunction layoutReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"TOGGLE_SIDEBAR\":\r\n      return { ...state, isSidebarOpened: !state.isSidebarOpened };\r\n    default: {\r\n      throw new Error(`Unhandled action type: ${action.type}`);\r\n    }\r\n  }\r\n}\r\n\r\nfunction LayoutProvider({ children }) {\r\n  var [state, dispatch] = React.useReducer(layoutReducer, {\r\n    isSidebarOpened: true,\r\n  });\r\n  return (\r\n    <LayoutStateContext.Provider value={state}>\r\n      <LayoutDispatchContext.Provider value={dispatch}>\r\n        {children}\r\n      </LayoutDispatchContext.Provider>\r\n    </LayoutStateContext.Provider>\r\n  );\r\n}\r\n\r\nfunction useLayoutState() {\r\n  var context = React.useContext(LayoutStateContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useLayoutState must be used within a LayoutProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\nfunction useLayoutDispatch() {\r\n  var context = React.useContext(LayoutDispatchContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useLayoutDispatch must be used within a LayoutProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\nexport { LayoutProvider, useLayoutState, useLayoutDispatch, toggleSidebar };\r\n\r\n// ###########################################################\r\nfunction toggleSidebar(dispatch) {\r\n  dispatch({\r\n    type: \"TOGGLE_SIDEBAR\",\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport Constant from \"../helpers/constant\";\r\nimport storageService from \"../services/storage\";\r\n\r\nvar UserStateContext = React.createContext();\r\nvar UserDispatchContext = React.createContext();\r\n\r\nfunction userReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"LOGIN_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        currentUser: action.payload,\r\n      };\r\n    case \"SIGN_OUT_SUCCESS\":\r\n      return { ...state, isAuthenticated: false, currentUser: {} };\r\n    default: {\r\n      throw new Error(`Unhandled action type: ${action.type}`);\r\n    }\r\n  }\r\n}\r\n\r\nfunction UserProvider({ children }) {\r\n  var [state, dispatch] = React.useReducer(userReducer, {\r\n    isAuthenticated: !!localStorage.getItem(Constant.STORAGE.TOKEN),\r\n    currentUser: JSON.parse(\r\n      localStorage.getItem(Constant.STORAGE.CURRENT_USER),\r\n    ),\r\n  });\r\n\r\n  return (\r\n    <UserStateContext.Provider value={state}>\r\n      <UserDispatchContext.Provider value={dispatch}>\r\n        {children}\r\n      </UserDispatchContext.Provider>\r\n    </UserStateContext.Provider>\r\n  );\r\n}\r\n\r\nfunction useUserState() {\r\n  var context = React.useContext(UserStateContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useUserState must be used within a UserProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\nfunction useUserDispatch() {\r\n  var context = React.useContext(UserDispatchContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useUserDispatch must be used within a UserProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\nexport { UserProvider, useUserState, useUserDispatch, loginUser, signOut };\r\n\r\n// ###########################################################\r\n\r\nasync function loginUser(\r\n  loginRequest,\r\n  dispatch,\r\n  username,\r\n  password,\r\n  history,\r\n  setIsLoading,\r\n  setError,\r\n) {\r\n  setError(false);\r\n  setIsLoading(true);\r\n  const result = await loginRequest.execute({ username, password });\r\n\r\n  if (result) {\r\n    storageService.setItem(Constant.STORAGE.TOKEN, result.data.token);\r\n    storageService.setItem(Constant.STORAGE.CURRENT_USER, result.data);\r\n    setError(null);\r\n    setIsLoading(false);\r\n    dispatch({ type: \"LOGIN_SUCCESS\", payload: result.data });\r\n\r\n    history.push(\"/app/dashboard\");\r\n  } else {\r\n    setError(true);\r\n    setIsLoading(false);\r\n  }\r\n}\r\n\r\nfunction signOut(dispatch, history) {\r\n  localStorage.removeItem(Constant.STORAGE.TOKEN);\r\n  localStorage.removeItem(Constant.STORAGE.CURRENT_USER);\r\n  dispatch({ type: \"SIGN_OUT_SUCCESS\" });\r\n  history.push(\"/login\");\r\n}\r\n","import axios from \"axios\";\r\nimport { cacheAdapterEnhancer } from \"axios-extensions\";\r\nimport constants from \"../helpers/constant\";\r\nimport storageService from \"../services/storage\";\r\nimport AlertAction from \"../redux/actions/AlertAction\";\r\n\r\nconst http = axios.create({\r\n  baseURL: constants.API_ADDRESS,\r\n  headers: {\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n    \"Access-Control-Allow-Credentials\": \"true\",\r\n  },\r\n  // adapter: cacheAdapterEnhancer(axios.defaults.adapter),\r\n});\r\n\r\n// http.interceptors.request.use(\r\n//   async (config) => {\r\n//     // const accessToken = storageService.getItem(constants.ACCESS_TOKEN);\r\n//     // config.headers = {\r\n//     //   Authorization: `Bearer ${accessToken}`,\r\n//     //   \"Cache-Control\": \"no-cache\",\r\n//     //   Accept: \"application/json\",\r\n//     // };\r\n//     // return config;\r\n//   },\r\n//   (error) => {\r\n//     Promise.reject(error);\r\n//   },\r\n// );\r\n\r\nhttp.interceptors.response.use(\r\n  (result) => {\r\n    // Do something before request is sent\r\n    const { method, url } = result.config;\r\n    if ((method === \"post\" || method === \"put\") && url !== \"auth/login\") {\r\n      return AlertAction.show({\r\n        type: \"success\",\r\n        text: \"اطلاعات با موفقیت ثبت شد\",\r\n      });\r\n    }\r\n    if (method === \"delete\") {\r\n      return AlertAction.show({\r\n        type: \"success\",\r\n        text: \"اطلاعات با موفقیت حذف شد\",\r\n      });\r\n    }\r\n    return result;\r\n  },\r\n  async (error) => {\r\n    const { code, message } = error.response.data.error;\r\n    if (code === \"UNHANDLED_DATABASE_EXCEPTION\") {\r\n      AlertAction.show({\r\n        type: \"error\",\r\n        text: \"خطایی رخ داده است\",\r\n      });\r\n    } else {\r\n      AlertAction.show({\r\n        type: \"error\",\r\n        text: message,\r\n      });\r\n    }\r\n\r\n    // TODO : handle 4xx error here and calling refresh token\r\n    // const originalRequest = error.config;\r\n    // if (error.response.status === 403 && !originalRequest._retry) {\r\n    // const access_token = await refreshAccessToken();\r\n    // axios.defaults.headers.common['Authorization'] = 'Bearer ' + access_token;\r\n    // return axiosApiInstance(originalRequest);\r\n    // }\r\n\r\n    return Promise.reject(error);\r\n  },\r\n);\r\n\r\nexport default http;\r\n","/* eslint-disable */\r\nimport { useState } from \"react\";\r\n\r\nimport http from \"../configs/axios\";\r\n\r\nconst getProperUrl = (url, urlParams) => {\r\n  return `${url.substring(0, url.indexOf(\"?\"))}/${urlParams}?${url.substring(\r\n    url.indexOf(\"?\") + 1,\r\n    url.length,\r\n  )}`;\r\n};\r\n\r\nexport const useApi = (args) => {\r\n  const [pending, setPending] = useState(false);\r\n  const [result, setResult] = useState();\r\n  const [error, setError] = useState();\r\n\r\n  const execute = async function (data, urlParams) {\r\n    setPending(true);\r\n    try {\r\n      let response;\r\n\r\n      if (urlParams) {\r\n        if (args.url.includes(\"?\")) {\r\n          const url = getProperUrl(args.url, urlParams);\r\n          response = await http({ ...args, url, data });\r\n        } else {\r\n          const url = `${args.url}/${urlParams}`;\r\n          response = await http({ ...args, url, data });\r\n        }\r\n      } else {\r\n        response = await http({ ...args, data });\r\n      }\r\n      setResult(response);\r\n      return response?.data;\r\n    } catch (e) {\r\n      setResult(null);\r\n      setError(e);\r\n      throw new Error(e);\r\n    } finally {\r\n      setPending(false);\r\n    }\r\n  };\r\n\r\n  return {\r\n    pending,\r\n    result,\r\n    error,\r\n    execute,\r\n  };\r\n};\r\n","import pickBy from \"lodash/pickBy\";\r\nimport identity from \"lodash/identity\";\r\nimport queryString from \"query-string\";\r\nimport storageService from \"../services/storage\";\r\nimport Constant from \"./constant\";\r\nimport {\r\n  primary,\r\n  secondary,\r\n  success,\r\n  warning,\r\n  info,\r\n  gray,\r\n  purple,\r\n  orange,\r\n} from \"../themes/default\";\r\nimport { number } from \"yup\";\r\n\r\nexport const convertParamsToQueryString = (params) => {\r\n  return new URLSearchParams(pickBy(params, identity)).toString();\r\n};\r\n\r\nexport const getQueryString = (param) => {\r\n  var myUrl = new URL(window.location.href.replace(/#/g, \"\"));\r\n  var param_value = myUrl.searchParams.get(param);\r\n  return param_value;\r\n  // return queryString.parse(window.location.search)[param];\r\n};\r\n\r\nexport const getRandomColor = () => {\r\n  return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\r\n};\r\n\r\nexport const getRandomColorFromTheme = () => {\r\n  const colors = [\r\n    primary,\r\n    secondary,\r\n    success,\r\n    warning,\r\n    orange,\r\n    purple,\r\n    info,\r\n    gray,\r\n  ];\r\n  var color = colors[Math.floor(Math.random() * colors.length)];\r\n\r\n  return color;\r\n};\r\n\r\nexport const getRandomNumber = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nexport const persianNumber = (en) => {\r\n  if ((en || en === 0) && typeof en !== number) {\r\n    return (\"\" + en).replace(/[0-9]/g, function (t) {\r\n      return \"۰۱۲۳۴۵۶۷۸۹\".substr(+t, 1);\r\n    });\r\n  }\r\n};\r\n\r\nexport const getDayOfWeek = (date) => {\r\n  const days = [\r\n    \"یکشنبه\",\r\n    \"دوشنبه\",\r\n    \"سه شنبه\",\r\n    \"چهارشنبه\",\r\n    \"پنج شنبه\",\r\n    \"جمعه\",\r\n    \"شنبه\",\r\n  ];\r\n  return days[date.getDay()];\r\n};\r\n\r\nexport const hasPermission = (permit) => {\r\n  if (permit === Constant.ALL_PERMISSIONS.FREE) {\r\n    return true;\r\n  }\r\n  const { permissions } = JSON.parse(\r\n    storageService.getItem(Constant.STORAGE.CURRENT_USER),\r\n  );\r\n  return permissions.includes(permit);\r\n};\r\n","import React, { useState, useRef } from \"react\";\r\nimport { Grid, TextField, Button, InputAdornment } from \"@material-ui/core\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport clsx from \"clsx\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport storageService from \"../../services/storage\";\r\n\r\nconst MainDetail = ({ onSubmit, onDismiss }) => {\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n  const [isPassword, setIsPassword] = useState(true);\r\n  const passwordRef = useRef(null);\r\n\r\n  const changePasswordRequest = useApi({\r\n    method: \"put\",\r\n    url: `user/password/change`,\r\n  });\r\n\r\n  const onChangeViewClick = function () {\r\n    setIsPassword(!isPassword);\r\n  };\r\n\r\n  const onDone = (data) => {\r\n    const { id } = JSON.parse(\r\n      storageService.getItem(Constant.STORAGE.CURRENT_USER),\r\n    );\r\n    changePasswordRequest.execute({\r\n      id,\r\n      oldPassword: data.prePassword,\r\n      newPassword: data.password,\r\n    });\r\n    onSubmit(data);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onDone)}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Controller\r\n            control={control}\r\n            render={({ onChange, value, name }) => {\r\n              return (\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\" رمز عبور قبلی\"\r\n                  name={name}\r\n                  onChange={onChange}\r\n                  value={value}\r\n                  error={!!errors.prePassword}\r\n                  helperText={\r\n                    errors.prePassword ? errors.prePassword.message : \"\"\r\n                  }\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  type={\"password\"}\r\n                />\r\n              );\r\n            }}\r\n            rules={{\r\n              required: Constant.VALIDATION.REQUIRED,\r\n              minLength: {\r\n                value: 5,\r\n                message: Constant.VALIDATION.PASSWORD,\r\n              },\r\n            }}\r\n            name=\"prePassword\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Controller\r\n            control={control}\r\n            render={({ onChange, value, name }) => {\r\n              return (\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"رمز عبور\"\r\n                  name={name}\r\n                  onChange={onChange}\r\n                  value={value}\r\n                  error={!!errors.password}\r\n                  helperText={errors.password ? errors.password.message : \"\"}\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  type={isPassword ? \"password\" : \"text\"}\r\n                  inputRef={passwordRef}\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <i\r\n                          style={{ cursor: \"pointer\" }}\r\n                          className={clsx(\"material-icons-round\")}\r\n                          onClick={onChangeViewClick}\r\n                        >\r\n                          {isPassword ? \"visibility_off\" : \"visibility\"}\r\n                        </i>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n              );\r\n            }}\r\n            rules={{\r\n              required: Constant.VALIDATION.REQUIRED,\r\n              minLength: {\r\n                value: 5,\r\n                message: Constant.VALIDATION.PASSWORD,\r\n              },\r\n            }}\r\n            name=\"password\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Controller\r\n            control={control}\r\n            render={({ onChange, value, name }) => {\r\n              return (\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"تکرار رمز عبور \"\r\n                  name={name}\r\n                  onChange={onChange}\r\n                  value={value}\r\n                  error={!!errors.repassword}\r\n                  helperText={\r\n                    errors.repassword && \"تکرار رمز عبور با رمز عبور برابر نیست\"\r\n                  }\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  type={\"password\"}\r\n                />\r\n              );\r\n            }}\r\n            rules={{\r\n              validate: (value) => value === passwordRef.current.value,\r\n            }}\r\n            name=\"repassword\"\r\n          />\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n        >\r\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n            تایید\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={onDismiss}>\r\n            انصراف\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MainDetail;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  Chip,\r\n  Divider,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nimport {\r\n  Menu as MenuIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  Person as AccountIcon,\r\n  ArrowForward as ArrowForwardIcon,\r\n} from \"@material-ui/icons\";\r\nimport classNames from \"classnames\";\r\nimport useStyles from \"./styles\";\r\nimport { Badge, Typography } from \"../Wrappers\";\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\nimport { useUserState } from \"../../context/UserContext\";\r\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { persianNumber, getDayOfWeek } from \"../../helpers/utils\";\r\nimport clsx from \"clsx\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport dialogAction from \"../../redux/actions/dialogAction\";\r\nimport ChangePassword from \"./ChangePassword\";\r\nimport Clock from \"react-live-clock\";\r\n\r\nexport default function Header(props) {\r\n  var classes = useStyles();\r\n  const history = useHistory();\r\n  var layoutState = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n  var userDispatch = useUserDispatch();\r\n  const location = useLocation();\r\n  var [mailMenu, setMailMenu] = useState(null);\r\n  var [profileMenu, setProfileMenu] = useState(null);\r\n  var { currentUser } = useUserState();\r\n  const [cheques, setCheques] = useState([]);\r\n\r\n  const getDashboardRequest = useApi({\r\n    method: \"get\",\r\n    url: `notify/cheque`,\r\n  });\r\n\r\n  const getChequeNotify = async () => {\r\n    const notify = await getDashboardRequest.execute();\r\n\r\n    setCheques(notify.data);\r\n  };\r\n\r\n  const onShowAllCheque = () => {\r\n    history.push(\"/app/cheque-list\");\r\n  };\r\n\r\n  const onSubmitChangePassword = () => {\r\n    onDismissChangePassword();\r\n  };\r\n\r\n  const onDismissChangePassword = () => {\r\n    dialogAction.hide({ name: \"password\" });\r\n  };\r\n\r\n  const onChangePassword = () => {\r\n    dialogAction.show({\r\n      title: \"تغییر پسورد\",\r\n      component: (\r\n        <ChangePassword\r\n          onSubmit={onSubmitChangePassword}\r\n          onDismiss={onDismissChangePassword}\r\n        />\r\n      ),\r\n      name: \"password\",\r\n      size: \"4\",\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getChequeNotify();\r\n  }, [location]);\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          onClick={() => toggleSidebar(layoutDispatch)}\r\n          className={classNames(\r\n            classes.headerMenuButtonSandwich,\r\n            classes.headerMenuButtonCollapse,\r\n          )}\r\n        >\r\n          {layoutState.isSidebarOpened ? (\r\n            <ArrowForwardIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          ) : (\r\n            <MenuIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n        </IconButton>\r\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\r\n          سیستم یکپارچه مدیریت\r\n        </Typography>\r\n\r\n        <div className={classes.grow} />\r\n        <div style={{ display: \"flex\" }}>\r\n          <Typography variant=\"h6\" style={{ margin: \"0 10px\" }}>\r\n            {getDayOfWeek(new Date())}\r\n          </Typography>\r\n          <Typography variant=\"h6\">\r\n            {persianNumber(new Date().toLocaleDateString(\"fa-IR\"))}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"h6\"\r\n            style={{\r\n              margin: \"0 10px\",\r\n              width: 70,\r\n              display: \"flex\",\r\n              justifyContent: \"flex-end\",\r\n            }}\r\n          >\r\n            <Clock\r\n              format={\"HH:mm:ss\"}\r\n              ticking={true}\r\n              timezone={\"Asia/Tehran\"}\r\n            />\r\n          </Typography>\r\n        </div>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={(e) => {\r\n            setMailMenu(e.currentTarget);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge badgeContent={cheques?.length} color=\"secondary\">\r\n            <NotificationsIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className={classes.headerMenuButton}\r\n          aria-controls=\"profile-menu\"\r\n          onClick={(e) => setProfileMenu(e.currentTarget)}\r\n        >\r\n          <AccountIcon classes={{ root: classes.headerIcon }} />\r\n        </IconButton>\r\n        <Menu\r\n          id=\"mail-menu\"\r\n          open={Boolean(mailMenu)}\r\n          anchorEl={mailMenu}\r\n          onClose={() => setMailMenu(null)}\r\n          MenuListProps={{ className: classes.headerMenuList }}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h6\" weight=\"medium\">\r\n              یادآوری چک ها\r\n            </Typography>\r\n            <Button color=\"primary\" onClick={onShowAllCheque}>\r\n              نمایش همه چک ها\r\n            </Button>\r\n          </div>\r\n          <Divider />\r\n          {cheques?.map((message) => (\r\n            <MenuItem key={message.id} className={classes.messageNotification}>\r\n              <Typography variant=\"h6\">\r\n                {persianNumber(\r\n                  new Date(message.chequeDueDate).toLocaleDateString(\"fa-IR\"),\r\n                )}\r\n              </Typography>\r\n              <Typography variant=\"h6\">{message.person}</Typography>\r\n              <Typography variant=\"h6\">\r\n                {persianNumber(message.price)}\r\n              </Typography>\r\n              <Typography variant=\"h6\">\r\n                <Chip\r\n                  label={Constant.PAYMENT_TYPE[message.type]}\r\n                  className={clsx(classes.chip, classes[message.type])}\r\n                />\r\n              </Typography>\r\n            </MenuItem>\r\n          ))}\r\n        </Menu>\r\n        <Menu\r\n          id=\"profile-menu\"\r\n          open={Boolean(profileMenu)}\r\n          anchorEl={profileMenu}\r\n          onClose={() => setProfileMenu(null)}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              {currentUser.username}\r\n            </Typography>\r\n          </div>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              color=\"primary\"\r\n              onClick={onChangePassword}\r\n            >\r\n              تغییر پسورد\r\n            </Typography>\r\n          </MenuItem>\r\n\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              color=\"primary\"\r\n              onClick={() => signOut(userDispatch, props.history)}\r\n            >\r\n              خروج از سیستم\r\n            </Typography>\r\n          </MenuItem>\r\n        </Menu>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport default makeStyles(theme => ({\r\n  menuButton: {\r\n    marginLeft: 12,\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 40,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: drawerWidth,\r\n    },\r\n  },\r\n  toolbar: {\r\n    ...theme.mixins.toolbar,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  /* sidebarList: {\r\n    marginTop: theme.spacing(6),\r\n  }, */\r\n  mobileBackButton: {\r\n    marginTop: theme.spacing(0.5),\r\n    marginLeft: 18,\r\n    [theme.breakpoints.only(\"sm\")]: {\r\n      marginTop: theme.spacing(0.625),\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n}));\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  link: {\r\n    textDecoration: \"none\",\r\n    \"&:hover, &:focus\": {\r\n      backgroundColor: theme.palette.background.light,\r\n    },\r\n  },\r\n  externalLink: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    textDecoration: \"none\",\r\n  },\r\n  linkActive: {\r\n    backgroundColor: theme.palette.background.light,\r\n  },\r\n  linkNested: {\r\n    paddingLeft: 0,\r\n    \"&:hover, &:focus\": {\r\n      backgroundColor: \"#FFFFFF\",\r\n    },\r\n  },\r\n  linkIcon: {\r\n    marginRight: theme.spacing(1),\r\n    color: theme.palette.text.secondary + \"99\",\r\n    transition: theme.transitions.create(\"color\"),\r\n    width: 24,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  linkIconActive: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  linkText: {\r\n    padding: 0,\r\n    color: theme.palette.text.secondary + \"CC\",\r\n    transition: theme.transitions.create([\"opacity\", \"color\"]),\r\n    fontSize: 16,\r\n  },\r\n  linkTextActive: {\r\n    color: theme.palette.text.primary,\r\n  },\r\n  linkTextHidden: {\r\n    opacity: 0,\r\n  },\r\n  nestedList: {\r\n    paddingLeft: theme.spacing(2) + 10,\r\n  },\r\n  sectionTitle: {\r\n    marginLeft: theme.spacing(4.5),\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  divider: {\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n    height: 1,\r\n    backgroundColor: \"#D8D8D880\",\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nvar useStyles = makeStyles((theme) => ({\r\n  dotBase: {\r\n    width: 8,\r\n    height: 8,\r\n    backgroundColor: theme.palette.text.hint,\r\n    borderRadius: \"50%\",\r\n    transition: theme.transitions.create(\"background-color\"),\r\n  },\r\n  dotSmall: {\r\n    width: 5,\r\n    height: 5,\r\n  },\r\n  dotLarge: {\r\n    width: 11,\r\n    height: 11,\r\n  },\r\n}));\r\n\r\nexport default function Dot({ size, color }) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  return (\r\n    <div\r\n      className={classnames(classes.dotBase, {\r\n        [classes.dotLarge]: size === \"large\",\r\n        [classes.dotSmall]: size === \"small\",\r\n      })}\r\n      style={{\r\n        backgroundColor:\r\n          color && theme.palette[color] ? theme.palette[color].main : color,\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Inbox as InboxIcon } from \"@material-ui/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useStyles from \"./styles\";\r\nimport Dot from \"../Dot\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport {\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../../../context/LayoutContext\";\r\nimport { hasPermission } from \"../../../../helpers/utils\";\r\n\r\nexport default function SidebarLink({\r\n  link,\r\n  icon,\r\n  label,\r\n  children,\r\n  location,\r\n  isSidebarOpened,\r\n  nested,\r\n  type,\r\n  permission,\r\n}) {\r\n  var classes = useStyles();\r\n  const history = useHistory();\r\n  var layoutDispatch = useLayoutDispatch();\r\n  var theme = useTheme();\r\n\r\n  const onClick = (link) => {\r\n    history.push(link);\r\n    var windowWidth = window.innerWidth;\r\n    var breakpointWidth = theme.breakpoints.values.md;\r\n    var isSmallScreen = windowWidth < breakpointWidth;\r\n\r\n    if (isSmallScreen) {\r\n      toggleSidebar(layoutDispatch);\r\n    }\r\n  };\r\n\r\n  var [isOpen, setIsOpen] = useState(false);\r\n  var isLinkActive =\r\n    link &&\r\n    (location.pathname === link || location.pathname.indexOf(link) !== -1);\r\n\r\n  if (type === \"title\")\r\n    return (\r\n      <Typography\r\n        className={classnames(classes.linkText, classes.sectionTitle, {\r\n          [classes.linkTextHidden]: !isSidebarOpened,\r\n        })}\r\n      >\r\n        {label}\r\n      </Typography>\r\n    );\r\n\r\n  if (type === \"divider\")\r\n    return (\r\n      <>\r\n        {hasPermission(permission) && <Divider className={classes.divider} />}\r\n      </>\r\n    );\r\n  if (link && link.includes(\"http\")) {\r\n    return (\r\n      <ListItem\r\n        button\r\n        className={classes.link}\r\n        classes={{\r\n          root: classnames(classes.linkRoot, {\r\n            [classes.linkActive]: isLinkActive && !nested,\r\n            [classes.linkNested]: nested,\r\n          }),\r\n        }}\r\n        disableRipple\r\n      >\r\n        <div className={classes.externalLink} href={link}>\r\n          <ListItemIcon\r\n            className={classnames(classes.linkIcon, {\r\n              [classes.linkIconActive]: isLinkActive,\r\n            })}\r\n          >\r\n            {nested ? <Dot color={isLinkActive && \"primary\"} /> : icon}\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            classes={{\r\n              primary: classnames(classes.linkText, {\r\n                [classes.linkTextActive]: isLinkActive,\r\n                [classes.linkTextHidden]: !isSidebarOpened,\r\n              }),\r\n            }}\r\n            primary={label}\r\n          />\r\n        </div>\r\n      </ListItem>\r\n    );\r\n  }\r\n  if (!children)\r\n    return (\r\n      <>\r\n        {hasPermission(permission) && (\r\n          <ListItem\r\n            button\r\n            className={classes.link}\r\n            classes={{\r\n              root: classnames(classes.linkRoot, {\r\n                [classes.linkActive]: isLinkActive && !nested,\r\n                [classes.linkNested]: nested,\r\n              }),\r\n            }}\r\n            disableRipple\r\n            onClick={() => {\r\n              onClick(link);\r\n            }}\r\n          >\r\n            <span className={classes.externalLink}>\r\n              <ListItemIcon\r\n                className={classnames(classes.linkIcon, {\r\n                  [classes.linkIconActive]: isLinkActive,\r\n                })}\r\n              >\r\n                {nested ? <Dot color={isLinkActive && \"primary\"} /> : icon}\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                classes={{\r\n                  primary: classnames(classes.linkText, {\r\n                    [classes.linkTextActive]: isLinkActive,\r\n                    [classes.linkTextHidden]: !isSidebarOpened,\r\n                  }),\r\n                }}\r\n                primary={label}\r\n              />\r\n            </span>\r\n          </ListItem>\r\n        )}\r\n      </>\r\n    );\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(permission) && (\r\n        <>\r\n          <ListItem\r\n            button\r\n            component={link && Link}\r\n            onClick={toggleCollapse}\r\n            className={classes.link}\r\n            to={link}\r\n            disableRipple\r\n          >\r\n            <span className={classes.externalLink}>\r\n              <ListItemIcon\r\n                className={classnames(classes.linkIcon, {\r\n                  [classes.linkIconActive]: isLinkActive,\r\n                })}\r\n              >\r\n                {icon ? icon : <InboxIcon />}\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                classes={{\r\n                  primary: classnames(classes.linkText, {\r\n                    [classes.linkTextActive]: isLinkActive,\r\n                    [classes.linkTextHidden]: !isSidebarOpened,\r\n                  }),\r\n                }}\r\n                primary={label}\r\n              />\r\n            </span>\r\n          </ListItem>\r\n          {children && (\r\n            <Collapse\r\n              in={isOpen && isSidebarOpened}\r\n              timeout=\"auto\"\r\n              unmountOnExit\r\n              className={classes.nestedList}\r\n            >\r\n              <List component=\"div\" disablePadding>\r\n                {children.map((childrenLink) => (\r\n                  <SidebarLink\r\n                    key={childrenLink && childrenLink.link}\r\n                    location={location}\r\n                    isSidebarOpened={isSidebarOpened}\r\n                    nested\r\n                    {...childrenLink}\r\n                  />\r\n                ))}\r\n              </List>\r\n            </Collapse>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  // ###########################################################\r\n\r\n  function toggleCollapse(e) {\r\n    if (isSidebarOpened) {\r\n      e.preventDefault();\r\n      setIsOpen(!isOpen);\r\n    }\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\r\nimport { ArrowForward as ArrowForwardIcon } from \"@material-ui/icons\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\nimport useStyles from \"./styles\";\r\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\r\nimport Constants from \"../../helpers/constant\";\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\n\r\nconst structure = [\r\n  {\r\n    id: 0,\r\n    label: \"داشبورد\",\r\n    link: \"/app/dashboard\",\r\n    icon: <i className=\"material-icons-round\">home</i>,\r\n    permission: Constants.ALL_PERMISSIONS.FREE,\r\n  },\r\n  {\r\n    id: 1,\r\n    label: \"کالاها\",\r\n    link: \"/app/product-list\",\r\n    icon: <i className=\"material-icons-round\">inventory_2</i>,\r\n    permission: Constants.ALL_PERMISSIONS.PRODUCT_SHOW,\r\n  },\r\n  {\r\n    id: 2,\r\n    label: \"انبار ها\",\r\n    link: \"/app/depot-list\",\r\n    icon: <i className=\"material-icons-round\">storefront</i>,\r\n    permission: Constants.ALL_PERMISSIONS.DEPOT_SHOW,\r\n  },\r\n  {\r\n    id: 3,\r\n    label: \"صندوق ها\",\r\n    link: \"/app/cash-list\",\r\n    icon: <i className=\"material-icons-round\">account_balance_wallet</i>,\r\n    permission: Constants.ALL_PERMISSIONS.CASH_DESK_SHOW,\r\n  },\r\n  {\r\n    id: 4,\r\n    type: \"divider\",\r\n    permission: Constants.ALL_PERMISSIONS.INVOICE_SHOW,\r\n  },\r\n  {\r\n    id: 5,\r\n    label: \"فاکتور ها\",\r\n    icon: <i className=\"material-icons-round\">receipt</i>,\r\n    permission: Constants.ALL_PERMISSIONS.INVOICE_SHOW,\r\n    children: [\r\n      { label: \"کل فاکتور ها\", link: \"/app/invoice-list?type=ALL\" },\r\n      { label: \"فاکتور خرید\", link: \"/app/invoice-list?type=BUY\" },\r\n      { label: \"فاکتور فروش\", link: \"/app/invoice-list?type=SELL\" },\r\n    ],\r\n  },\r\n  {\r\n    id: 6,\r\n    type: \"divider\",\r\n    permission:\r\n      Constants.ALL_PERMISSIONS.PAYMENT_SHOW ||\r\n      Constants.ALL_PERMISSIONS.CHEQUE_SHOW,\r\n  },\r\n  {\r\n    id: 7,\r\n    label: \"گزارشات مالی\",\r\n    icon: <i className=\"material-icons-round\">monetization_on</i>,\r\n    permission:\r\n      Constants.ALL_PERMISSIONS.PAYMENT_SHOW ||\r\n      Constants.ALL_PERMISSIONS.CHEQUE_SHOW,\r\n    children: [\r\n      { label: \"گردش کل\", link: \"/app/payment-list?type=ALL\" },\r\n      { label: \"لیست دریافتی ها\", link: \"/app/payment-list?type=INCOME\" },\r\n      { label: \"لیست پرداختی ها\", link: \"/app/payment-list?type=OUTCOME\" },\r\n      {\r\n        label: \"لیست چک ها\",\r\n        link: \"/app/cheque-list\",\r\n        permission: Constants.ALL_PERMISSIONS.PAYMENT_SHOW,\r\n      },\r\n      {\r\n        label: \"لیست شماره حساب ها\",\r\n        link: \"/app/accountNumber\",\r\n        permission: Constants.ALL_PERMISSIONS.FREE,\r\n      },\r\n      {\r\n        label: \"لیست وام ها\",\r\n        link: \"/app/loan-list\",\r\n        permission: Constants.ALL_PERMISSIONS.FREE,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 8,\r\n    type: \"divider\",\r\n    permission:\r\n      Constants.ALL_PERMISSIONS.CUSTOMER_SHOW ||\r\n      Constants.ALL_PERMISSIONS.USER_SHOW ||\r\n      Constants.ALL_PERMISSIONS.EMPLOYEE_SHOW ||\r\n      Constants.ALL_PERMISSIONS.DRIVER_EDIT,\r\n  },\r\n  {\r\n    id: 9,\r\n    label: \"اشخاص\",\r\n    icon: <i className=\"material-icons-round\">account_circle</i>,\r\n    // permission:\r\n    //   Constants.ALL_PERMISSIONS.CUSTOMER_SHOW ||\r\n    //   Constants.ALL_PERMISSIONS.USER_SHOW ||\r\n    //   Constants.ALL_PERMISSIONS.EMPLOYEE_SHOW ||\r\n    //   Constants.ALL_PERMISSIONS.DRIVER_EDIT,\r\n    children: [\r\n      {\r\n        label: \"کاربران\",\r\n        link: \"/app/user-list\",\r\n        permission: Constants.ALL_PERMISSIONS.USER_SHOW,\r\n      },\r\n      {\r\n        label: \"مشتریان\",\r\n        link: \"/app/customer-list\",\r\n        permission: Constants.ALL_PERMISSIONS.CUSTOMER_SHOW,\r\n      },\r\n      {\r\n        label: \"پرسنل\",\r\n        link: \"/app/employee-list\",\r\n        permission: Constants.ALL_PERMISSIONS.EMPLOYEE_SHOW,\r\n      },\r\n      {\r\n        label: \"رانندگان\",\r\n        link: \"/app/driver-list\",\r\n        permission: Constants.ALL_PERMISSIONS.DRIVER_SHOW,\r\n      },\r\n    ],\r\n  },\r\n\r\n  { id: 13, type: \"divider\", permission: Constants.ALL_PERMISSIONS.FREE },\r\n  {\r\n    id: 14,\r\n    label: \" حضور و غیاب\",\r\n    link: \"/app/traffic\",\r\n    icon: <i className=\"material-icons-round\">transfer_within_a_station</i>,\r\n    permission: Constants.ALL_PERMISSIONS.FREE,\r\n  },\r\n\r\n  {\r\n    id: 14,\r\n    label: \"دسته بندی ها \",\r\n    link: \"/app/Category\",\r\n    icon: <i className=\"material-icons-round\">category</i>,\r\n    permission: Constants.ALL_PERMISSIONS.FREE,\r\n  },\r\n  // {\r\n  //   id: 15,\r\n  //   label: \"تنظیمات \",\r\n  //   link: \"/app/Settings\",\r\n  //   icon: <i className=\"material-icons-round\">settings</i>,\r\n  //   permission: Constants.ALL_PERMISSIONS.FREE,\r\n  // },\r\n];\r\n\r\nfunction Sidebar({ location }) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // global\r\n  var { isSidebarOpened } = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n\r\n  // local\r\n  var [isPermanent, setPermanent] = useState(true);\r\n\r\n  useEffect(function () {\r\n    window.addEventListener(\"resize\", handleWindowWidthChange);\r\n    handleWindowWidthChange();\r\n    return function cleanup() {\r\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Drawer\r\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\r\n      className={classNames(classes.drawer, {\r\n        [classes.drawerOpen]: isSidebarOpened,\r\n        [classes.drawerClose]: !isSidebarOpened,\r\n      })}\r\n      classes={{\r\n        paper: classNames({\r\n          [classes.drawerOpen]: isSidebarOpened,\r\n          [classes.drawerClose]: !isSidebarOpened,\r\n        }),\r\n      }}\r\n      open={isSidebarOpened}\r\n    >\r\n      <div className={classes.toolbar} />\r\n      <div className={classes.mobileBackButton}>\r\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\r\n          <ArrowForwardIcon\r\n            classes={{\r\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\r\n            }}\r\n          />\r\n        </IconButton>\r\n      </div>\r\n      <List className={classes.sidebarList}>\r\n        {structure.map((link) => (\r\n          <SidebarLink\r\n            key={link.id}\r\n            location={location}\r\n            isSidebarOpened={isSidebarOpened}\r\n            {...link}\r\n          />\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n\r\n  // ##################################################################\r\n  function handleWindowWidthChange() {\r\n    var windowWidth = window.innerWidth;\r\n    var breakpointWidth = theme.breakpoints.values.md;\r\n    var isSmallScreen = windowWidth < breakpointWidth;\r\n\r\n    if (isSmallScreen && isPermanent) {\r\n      setPermanent(false);\r\n      toggleSidebar(layoutDispatch);\r\n    } else if (!isSmallScreen && !isPermanent) {\r\n      setPermanent(true);\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(Sidebar);\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  datePicker: {\r\n    [theme.breakpoints.only(\"xs\")]: {\r\n      margin: \"10px 0\",\r\n    },\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n  paperTitle: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    position: \"relative\",\r\n  },\r\n  card: {\r\n    minHeight: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  visitsNumberContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexGrow: 1,\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n  progressSection: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  progressTitle: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  progress: {\r\n    marginBottom: theme.spacing(1),\r\n    backgroundColor: \"rgb(236, 236, 236)\",\r\n  },\r\n  pieChartLegendWrapper: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"flex-end\",\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  legendItemContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  fullHeightBody: {\r\n    display: \"flex\",\r\n    flexGrow: 1,\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  tableWidget: {\r\n    overflowX: \"auto\",\r\n  },\r\n  progressBarPrimary: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  progressBarSecondary: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  performanceLegendWrapper: {\r\n    display: \"flex\",\r\n    flexGrow: 1,\r\n    alignItems: \"center\",\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  legendElement: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  legendElementText: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  serverOverviewElement: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    maxWidth: \"100%\",\r\n  },\r\n  serverOverviewElementText: {\r\n    minWidth: 145,\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  serverOverviewElementChartWrapper: {\r\n    width: \"100%\",\r\n  },\r\n  mainChartBody: {\r\n    overflowX: \"auto\",\r\n  },\r\n  mainChartHeader: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    [theme.breakpoints.only(\"xs\")]: {\r\n      flexWrap: \"wrap\",\r\n    },\r\n  },\r\n  mainChartHeaderLabels: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    [theme.breakpoints.only(\"xs\")]: {\r\n      order: 3,\r\n      width: \"100%\",\r\n      justifyContent: \"center\",\r\n      marginTop: theme.spacing(3),\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n  },\r\n  mainChartHeaderLabel: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginLeft: theme.spacing(3),\r\n  },\r\n  mainChartSelectRoot: {\r\n    borderColor: theme.palette.text.hint + \"80 !important\",\r\n  },\r\n  mainChartSelect: {\r\n    padding: 10,\r\n    paddingRight: 25,\r\n  },\r\n  mainChartLegentElement: {\r\n    fontSize: \"18px !important\",\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  success: {\r\n    backgroundColor: theme.palette.success.main,\r\n    color: \"#fff\",\r\n  },\r\n  warning: {\r\n    backgroundColor: theme.palette.warning.main,\r\n    color: \"#fff\",\r\n  },\r\n  secondary: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles(theme => ({\r\n  widgetWrapper: {\r\n    display: \"flex\",\r\n    minHeight: \"100%\",\r\n  },\r\n  widgetHeader: {\r\n    padding: theme.spacing(3),\r\n    paddingBottom: theme.spacing(1),\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  widgetRoot: {\r\n    boxShadow: theme.customShadows.widget,\r\n  },\r\n  widgetBody: {\r\n    paddingBottom: theme.spacing(3),\r\n    paddingRight: theme.spacing(3),\r\n    paddingLeft: theme.spacing(3),\r\n  },\r\n  noPadding: {\r\n    padding: 0,\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    flexGrow: 1,\r\n    overflow: \"auto\",\r\n  },\r\n  moreButton: {\r\n    margin: -theme.spacing(1),\r\n    padding: 0,\r\n    width: 40,\r\n    height: 40,\r\n    color: theme.palette.text.hint,\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.primary.main,\r\n      color: \"rgba(255, 255, 255, 0.35)\",\r\n    },\r\n  },\r\n  noWidgetShadow: {\r\n    boxShadow: 'none'\r\n  }\r\n}));\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Paper,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert as MoreIcon } from \"@material-ui/icons\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\nexport default function Widget({\r\n  children,\r\n  title,\r\n  noBodyPadding,\r\n  bodyClass,\r\n  disableWidgetMenu,\r\n  header,\r\n  noHeaderPadding,\r\n  headerClass,\r\n  style,\r\n  noWidgetShadow,\r\n  ...props\r\n}) {\r\n  var classes = useStyles();\r\n\r\n  // local\r\n  var [moreButtonRef, setMoreButtonRef] = useState(null);\r\n  var [isMoreMenuOpen, setMoreMenuOpen] = useState(false);\r\n\r\n  return (\r\n    <div className={classes.widgetWrapper} style={style && { ...style }}>\r\n      <Paper\r\n        className={classes.paper}\r\n        classes={{\r\n          root: classnames(classes.widgetRoot, {\r\n            [classes.noWidgetShadow]: noWidgetShadow,\r\n          }),\r\n        }}\r\n      >\r\n        <div\r\n          className={classnames(classes.widgetHeader, {\r\n            [classes.noPadding]: noHeaderPadding,\r\n            [headerClass]: headerClass,\r\n          })}\r\n        >\r\n          {header ? (\r\n            header\r\n          ) : (\r\n            <React.Fragment>\r\n              <Typography variant=\"h5\" color=\"textSecondary\" noWrap>\r\n                {title}\r\n              </Typography>\r\n              {!true && (\r\n                <IconButton\r\n                  color=\"primary\"\r\n                  classes={{ root: classes.moreButton }}\r\n                  aria-owns=\"widget-menu\"\r\n                  aria-haspopup=\"true\"\r\n                  onClick={() => setMoreMenuOpen(true)}\r\n                  buttonRef={setMoreButtonRef}\r\n                >\r\n                  <MoreIcon />\r\n                </IconButton>\r\n              )}\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n        <div\r\n          className={classnames(classes.widgetBody, {\r\n            [classes.noPadding]: noBodyPadding,\r\n            [bodyClass]: bodyClass,\r\n          })}\r\n        >\r\n          {children}\r\n        </div>\r\n      </Paper>\r\n      <Menu\r\n        id=\"widget-menu\"\r\n        open={isMoreMenuOpen}\r\n        anchorEl={moreButtonRef}\r\n        onClose={() => setMoreMenuOpen(false)}\r\n        disableAutoFocusItem\r\n      >\r\n        <MenuItem>\r\n          <Typography>Edit</Typography>\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <Typography>Copy</Typography>\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <Typography>Delete</Typography>\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <Typography>Print</Typography>\r\n        </MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport classNames from \"classnames\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"relative\",\r\n    overflow: \"hidden\",\r\n    height: \"100%\",\r\n    padding: 20,\r\n    minHeight: 150,\r\n    cursor: \"pointer\",\r\n    transition: \"all 0.5s\",\r\n    backgroundColor: (props) => props.color,\r\n  },\r\n  icon: {\r\n    position: \"absolute\",\r\n    bottom: -20,\r\n    left: -20,\r\n    fontSize: 180,\r\n    color: theme.palette.grey[100],\r\n  },\r\n}));\r\n\r\nexport default function SimplePaper(props) {\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <Paper className={classes.root} onClick={props.onClick} style={props.style}>\r\n      <i className={classNames(\"material-icons-round\", classes.icon)}>\r\n        {props.icon}\r\n      </i>\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Grid, IconButton } from \"@material-ui/core\";\r\nimport MUIToolTip from \"@material-ui/core/Tooltip\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport {\r\n  ResponsiveContainer,\r\n  AreaChart,\r\n  LineChart,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Line,\r\n  Area,\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  YAxis,\r\n  XAxis,\r\n  Bar,\r\n  BarChart,\r\n  PolarRadiusAxis,\r\n  Radar,\r\n  PolarGrid,\r\n  PolarAngleAxis,\r\n  RadarChart,\r\n} from \"recharts\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport useStyles from \"./styles\";\r\nimport Widget from \"../../components/Widget\";\r\nimport { Typography } from \"../../components/Wrappers\";\r\nimport Dot from \"../../components/Sidebar/components/Dot\";\r\n\r\nimport Paper from \"../../components/Paper\";\r\nimport {\r\n  persianNumber,\r\n  getRandomColorFromTheme,\r\n  hasPermission,\r\n} from \"../../helpers/utils\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { useEffect } from \"react\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\n\r\nconst RADIAN = Math.PI / 180;\r\nconst renderCustomizedLabel = ({\r\n  cx,\r\n  cy,\r\n  midAngle,\r\n  innerRadius,\r\n  outerRadius,\r\n  percent,\r\n  index,\r\n}) => {\r\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n  return (\r\n    <text\r\n      x={x}\r\n      y={y}\r\n      fill=\"white\"\r\n      textAnchor={x > cx ? \"start\" : \"end\"}\r\n      dominantBaseline=\"central\"\r\n    >\r\n      {`${persianNumber((percent * 100).toFixed(0))}%`}\r\n    </text>\r\n  );\r\n};\r\n\r\nconst empoyeeTrafficChart = [\r\n  {\r\n    subject: \"فروردین\",\r\n    A: 100,\r\n  },\r\n  {\r\n    subject: \"ادریبهشت\",\r\n    A: 60,\r\n  },\r\n  {\r\n    subject: \"خرداد\",\r\n    A: 69,\r\n  },\r\n  {\r\n    subject: \"تیر\",\r\n    A: 75,\r\n  },\r\n  {\r\n    subject: \"مرداد\",\r\n    A: 95,\r\n  },\r\n  {\r\n    subject: \"شهریور\",\r\n    A: 90,\r\n  },\r\n  {\r\n    subject: \"مهر\",\r\n    A: 62,\r\n  },\r\n  {\r\n    subject: \"آبان\",\r\n    A: 100,\r\n  },\r\n  {\r\n    subject: \"آذر\",\r\n    A: 85,\r\n  },\r\n  {\r\n    subject: \"دی\",\r\n    A: 43,\r\n  },\r\n  {\r\n    subject: \"بهمن\",\r\n    A: 72,\r\n  },\r\n  {\r\n    subject: \"اسفند\",\r\n    A: 86,\r\n  },\r\n];\r\n\r\nconst trafficDayliChart = [\r\n  { name: \"حاضرین\", value: 15, color: \"#00989D\" },\r\n  { name: \"غائبین\", value: 5, color: \"#FF5C93\" },\r\n];\r\n\r\nexport default function Dashboard(props) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n  const history = useHistory();\r\n  const [pieChart, setPieChart] = useState([]);\r\n  const [paymentChart, setPaymentChart] = useState([]);\r\n  const [factorChart, setFactorChart] = useState([]);\r\n  const [showFilterBoxPayment, setShowFilterBoxPayment] = useState(false);\r\n  const [showFilterBoxFactor, setShowFilterBoxFactor] = useState(false);\r\n  const [selectedFromDateFactor, handleFromDateChangeFactor] = useState(\r\n    moment(),\r\n  );\r\n  const [selectedToDateFactor, handleToDateChangeFactor] = useState(moment());\r\n  const [selectedFromDatePayment, handleFromDateChangePayment] = useState(\r\n    moment(),\r\n  );\r\n  const [selectedToDatePayment, handleToDateChangePayment] = useState(moment());\r\n\r\n  const getDashboardRequest = useApi({\r\n    method: \"get\",\r\n    url: `dashboard/cashes`,\r\n  });\r\n\r\n  const getPaymentRequest = useApi({\r\n    method: \"get\",\r\n    url: showFilterBoxPayment\r\n      ? `dashboard/payments?{from:${selectedFromDatePayment._d.toISOString()},to:${selectedToDatePayment._d.toISOString()}}`\r\n      : \"dashboard/payments\",\r\n  });\r\n\r\n  const getFactorRequest = useApi({\r\n    method: \"get\",\r\n    url: showFilterBoxFactor\r\n      ? `dashboard/invoices?{from:${selectedFromDateFactor._d.toISOString()},to:${selectedToDateFactor._d.toISOString()}}`\r\n      : \"dashboard/invoices\",\r\n  });\r\n\r\n  const onClickPaper = (type) => {\r\n    history.push(`/app/${type}`);\r\n  };\r\n\r\n  const onChnageDateFactor = (e, type) => {\r\n    if (type === \"from\") {\r\n      handleFromDateChangeFactor(e);\r\n    } else {\r\n      handleToDateChangeFactor(e);\r\n    }\r\n  };\r\n\r\n  const onChnageDatePayment = (e, type) => {\r\n    if (type === \"from\") {\r\n      handleFromDateChangePayment(e);\r\n    } else {\r\n      handleToDateChangePayment(e);\r\n    }\r\n  };\r\n\r\n  const getPieChartData = async () => {\r\n    const dashboardChart = await getDashboardRequest.execute();\r\n    const { cashDesks } = dashboardChart;\r\n    const newCashDesks = [];\r\n    cashDesks?.map((item) => {\r\n      newCashDesks.push({ ...item, color: getRandomColorFromTheme() });\r\n    });\r\n    setPieChart(newCashDesks);\r\n  };\r\n\r\n  const getPaymentChart = async () => {\r\n    const chart = await getPaymentRequest.execute();\r\n    const { payments } = chart;\r\n    setPaymentChart(payments);\r\n  };\r\n\r\n  const getFactorChart = async () => {\r\n    const chart = await getFactorRequest.execute();\r\n    const { invoices } = chart;\r\n    setFactorChart(invoices);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPieChartData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getPaymentChart();\r\n  }, [selectedFromDatePayment, selectedToDatePayment]);\r\n\r\n  useEffect(() => {\r\n    getFactorChart();\r\n  }, [selectedFromDateFactor, selectedToDateFactor]);\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={4} style={{ marginBottom: 20 }}>\r\n        {hasPermission(Constant.ALL_PERMISSIONS.INVOICE_EDIT) && (\r\n          <Grid item lg={3} md={4} sm={6} xs={12}>\r\n            <Paper\r\n              icon=\"shopping_basket\"\r\n              onClick={() => {\r\n                onClickPaper(\"invoice-detail?type=BUY\");\r\n              }}\r\n            >\r\n              <div className={classes.paperTitle}>\r\n                <Typography variant=\"h3\">ثبت خرید</Typography>\r\n              </div>\r\n            </Paper>\r\n          </Grid>\r\n        )}\r\n        {hasPermission(Constant.ALL_PERMISSIONS.INVOICE_EDIT) && (\r\n          <Grid item lg={3} md={4} sm={6} xs={12}>\r\n            <Paper\r\n              icon=\"sell\"\r\n              onClick={() => {\r\n                onClickPaper(\"invoice-detail?type=SELL\");\r\n              }}\r\n            >\r\n              <div className={classes.paperTitle}>\r\n                <Typography variant=\"h3\">ثبت فروش</Typography>\r\n              </div>\r\n            </Paper>\r\n          </Grid>\r\n        )}\r\n        {hasPermission(Constant.ALL_PERMISSIONS.INVOICE_EDIT) && (\r\n          <Grid item lg={3} md={4} sm={6} xs={12}>\r\n            <Paper\r\n              icon=\"move_to_inbox\"\r\n              onClick={() => {\r\n                onClickPaper(\"payment-detail?type=INCOME\");\r\n              }}\r\n            >\r\n              <div className={classes.paperTitle}>\r\n                <Typography variant=\"h3\">ثبت دریافت</Typography>\r\n              </div>\r\n            </Paper>\r\n          </Grid>\r\n        )}\r\n        {hasPermission(Constant.ALL_PERMISSIONS.PAYMENT_EDIT) && (\r\n          <Grid item lg={3} md={4} sm={6} xs={12}>\r\n            <Paper\r\n              icon=\"unarchive\"\r\n              onClick={() => {\r\n                onClickPaper(\"payment-detail?type=OUTCOME\");\r\n              }}\r\n            >\r\n              <div className={classes.paperTitle}>\r\n                <Typography variant=\"h3\">ثبت پرداخت</Typography>\r\n              </div>\r\n            </Paper>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n      <Grid container spacing={4} style={{ marginBottom: 20 }}>\r\n        {hasPermission(Constant.ALL_PERMISSIONS.INVOICE_EDIT) && (\r\n          <Grid item md={3} xs={6}>\r\n            <Paper\r\n              style={{ backgroundColor: \"#b8e4c4\" }}\r\n              icon=\"bolt\"\r\n              onClick={() => {\r\n                onClickPaper(\"fast_invoice?type=SELL\");\r\n              }}\r\n            >\r\n              <div className={classes.paperTitle}>\r\n                <Typography variant=\"h3\" style={{ color: \"#137333\" }}>\r\n                  فاکتور فروش سریع\r\n                </Typography>\r\n              </div>\r\n            </Paper>\r\n          </Grid>\r\n        )}\r\n        {hasPermission(Constant.ALL_PERMISSIONS.INVOICE_EDIT) && (\r\n          <Grid item md={3} xs={6}>\r\n            <Paper\r\n              style={{ backgroundColor: \"#f9d5d1\" }}\r\n              icon=\"bolt\"\r\n              onClick={() => {\r\n                onClickPaper(\"fast_invoice?type=BUY\");\r\n              }}\r\n            >\r\n              <div className={classes.paperTitle}>\r\n                <Typography variant=\"h3\" style={{ color: \"#c5221f\" }}>\r\n                  فاکتور خرید سریع\r\n                </Typography>\r\n              </div>\r\n            </Paper>\r\n          </Grid>\r\n        )}\r\n        <Grid item lg={6} xs={12}>\r\n          <Paper\r\n            icon=\"transfer_within_a_station\"\r\n            onClick={() => {\r\n              onClickPaper(\"traffic\");\r\n            }}\r\n          >\r\n            <div\r\n              className={classes.paperTitle}\r\n              style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}\r\n            >\r\n              <div>\r\n                <Typography color=\"text-s\" variant=\"h3\">\r\n                  حضور و غیاب\r\n                </Typography>\r\n                <div\r\n                  className={classes.performanceLegendWrapper}\r\n                  style={{ marginTop: 20 }}\r\n                >\r\n                  <div className={classes.legendElement}>\r\n                    <Dot color=\"secondary\" />\r\n                    <Typography\r\n                      color=\"text\"\r\n                      colorBrightness=\"secondary\"\r\n                      className={classes.legendElementText}\r\n                    >\r\n                      غائبین\r\n                    </Typography>\r\n                  </div>\r\n                  <div className={classes.legendElement}>\r\n                    <Dot color=\"primary\" />\r\n                    <Typography\r\n                      color=\"text\"\r\n                      colorBrightness=\"secondary\"\r\n                      className={classes.legendElementText}\r\n                    >\r\n                      حاضرین\r\n                    </Typography>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <PieChart width={250} height={100}>\r\n                <Pie\r\n                  data={trafficDayliChart}\r\n                  cx={120}\r\n                  cy={100}\r\n                  startAngle={180}\r\n                  endAngle={0}\r\n                  innerRadius={60}\r\n                  outerRadius={80}\r\n                  fill=\"#8884d8\"\r\n                  paddingAngle={5}\r\n                  dataKey=\"value\"\r\n                >\r\n                  {trafficDayliChart.map((entry, index) => (\r\n                    <Cell key={`cell-${index}`} fill={entry.color} />\r\n                  ))}\r\n                </Pie>\r\n                <Tooltip />\r\n              </PieChart>\r\n            </div>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={4} style={{ marginBottom: 20 }}>\r\n        <Grid style={{ height: 500 }} item lg={6} xs={12}>\r\n          <Widget\r\n            title=\"میزان حضور پرسنل\"\r\n            upperTitle\r\n            bodyClass={classes.fullHeightBody}\r\n            className={classes.card}\r\n          >\r\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n              <RadarChart\r\n                cx=\"50%\"\r\n                cy=\"50%\"\r\n                outerRadius=\"80%\"\r\n                data={empoyeeTrafficChart}\r\n              >\r\n                <PolarGrid />\r\n                <PolarAngleAxis dataKey=\"subject\" />\r\n                <PolarRadiusAxis />\r\n                <Radar\r\n                  name=\"Mike\"\r\n                  dataKey=\"A\"\r\n                  stroke=\"#8884d8\"\r\n                  fill=\"#8884d8\"\r\n                  fillOpacity={0.6}\r\n                />\r\n              </RadarChart>\r\n            </ResponsiveContainer>\r\n          </Widget>\r\n        </Grid>\r\n\r\n        {hasPermission(Constant.ALL_PERMISSIONS.CASH_DESK_SHOW) && (\r\n          <Grid item lg={6} xs={12}>\r\n            <Widget title=\"موجودی صندوق ها\" upperTitle className={classes.card}>\r\n              <Grid container spacing={2}>\r\n                {pieChart.length && (\r\n                  <Grid item sm={6} xs={12}>\r\n                    <div style={{ width: \"100%\", height: \"330px\" }}>\r\n                      <div style={{ width: \"100%\", height: \"100%\" }}>\r\n                        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                          <PieChart width=\"300\" height=\"400\">\r\n                            <Pie\r\n                              data={pieChart}\r\n                              cx=\"50%\"\r\n                              cy=\"50%\"\r\n                              labelLine={false}\r\n                              label={renderCustomizedLabel}\r\n                              outerRadius={120}\r\n                              fill=\"#8884d8\"\r\n                              dataKey=\"amount\"\r\n                            >\r\n                              {pieChart.map((entry, index) => (\r\n                                <Cell\r\n                                  key={`cell-${index}`}\r\n                                  fill={entry.color}\r\n                                />\r\n                              ))}\r\n                            </Pie>\r\n                          </PieChart>\r\n                        </ResponsiveContainer>\r\n                      </div>\r\n                    </div>\r\n                  </Grid>\r\n                )}\r\n                <Grid item sm={6} xs={12}>\r\n                  <div className={classes.pieChartLegendWrapper}>\r\n                    {pieChart.map(({ name, amount, color }, index) => (\r\n                      <div key={color} className={classes.legendItemContainer}>\r\n                        <Dot color={color} />\r\n                        <Typography\r\n                          variant=\"h6\"\r\n                          style={{ whiteSpace: \"nowrap\" }}\r\n                        >\r\n                          &nbsp;{name}&nbsp;\r\n                        </Typography>\r\n                        <Typography\r\n                          color=\"text\"\r\n                          variant=\"h4\"\r\n                          colorBrightness=\"secondary\"\r\n                        >\r\n                          &nbsp;{persianNumber(amount)}\r\n                        </Typography>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n            </Widget>\r\n          </Grid>\r\n        )}\r\n\r\n        {hasPermission(Constant.ALL_PERMISSIONS.PAYMENT_SHOW) && (\r\n          <Grid item xs={12}>\r\n            <Widget\r\n              bodyClass={classes.mainChartBody}\r\n              header={\r\n                <div className={classes.mainChartHeader}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"text\"\r\n                    colorBrightness=\"secondary\"\r\n                  >\r\n                    دریافتی و پرداختی ها\r\n                  </Typography>\r\n\r\n                  {showFilterBoxPayment && (\r\n                    <>\r\n                      <Grid item lg={3} xs={12} className={classes.datePicker}>\r\n                        <DatePicker\r\n                          autoOk\r\n                          name=\"date\"\r\n                          label=\"از تاریخ\"\r\n                          inputVariant=\"outlined\"\r\n                          okLabel=\"تأیید\"\r\n                          cancelLabel=\"لغو\"\r\n                          labelFunc={(date) =>\r\n                            date ? date.format(\"jYYYY/jMM/jDD\") : \"\"\r\n                          }\r\n                          value={selectedFromDatePayment}\r\n                          onChange={(e) => onChnageDatePayment(e, \"from\")}\r\n                          style={{ width: \"100%\" }}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item lg={3} xs={12} className={classes.datePicker}>\r\n                        <DatePicker\r\n                          autoOk\r\n                          name=\"date\"\r\n                          label=\"تا تاریخ\"\r\n                          inputVariant=\"outlined\"\r\n                          okLabel=\"تأیید\"\r\n                          cancelLabel=\"لغو\"\r\n                          labelFunc={(date) =>\r\n                            date ? date.format(\"jYYYY/jMM/jDD\") : \"\"\r\n                          }\r\n                          value={selectedToDatePayment}\r\n                          onChange={(e) => onChnageDatePayment(e, \"to\")}\r\n                          style={{ width: \"100%\" }}\r\n                        />\r\n                      </Grid>\r\n                    </>\r\n                  )}\r\n                  <div className={classes.mainChartHeaderLabels}>\r\n                    <div className={classes.mainChartHeaderLabel}>\r\n                      <Dot color=\"primary\" />\r\n                      <Typography className={classes.mainChartLegentElement}>\r\n                        دریافتی\r\n                      </Typography>\r\n                    </div>\r\n                    <div className={classes.mainChartHeaderLabel}>\r\n                      <Dot color=\"secondary\" />\r\n                      <Typography className={classes.mainChartLegentElement}>\r\n                        پرداختی\r\n                      </Typography>\r\n                    </div>\r\n                    <MUIToolTip title=\"فیلتر\">\r\n                      <IconButton\r\n                        onClick={() =>\r\n                          setShowFilterBoxPayment(!showFilterBoxPayment)\r\n                        }\r\n                      >\r\n                        <i class=\"material-icons-round\">filter_alt</i>\r\n                      </IconButton>\r\n                    </MUIToolTip>\r\n                  </div>\r\n                </div>\r\n              }\r\n            >\r\n              <ResponsiveContainer width=\"100%\" height={350}>\r\n                <LineChart\r\n                  width={500}\r\n                  height={300}\r\n                  data={paymentChart}\r\n                  margin={{\r\n                    top: 5,\r\n                    right: 30,\r\n                    left: 20,\r\n                    bottom: 5,\r\n                  }}\r\n                >\r\n                  <CartesianGrid strokeDasharray=\"3 3\" />\r\n                  <XAxis dataKey=\"date\" />\r\n                  <YAxis />\r\n                  <Tooltip />\r\n                  <Line\r\n                    type=\"monotone\"\r\n                    dataKey=\"income\"\r\n                    stroke={theme.palette.primary.main}\r\n                    activeDot={{ r: 8 }}\r\n                  />\r\n                  <Line\r\n                    type=\"monotone\"\r\n                    dataKey=\"outcome\"\r\n                    stroke={theme.palette.secondary.main}\r\n                  />\r\n                </LineChart>\r\n              </ResponsiveContainer>\r\n            </Widget>\r\n          </Grid>\r\n        )}\r\n        {hasPermission(Constant.ALL_PERMISSIONS.INVOICE_SHOW) && (\r\n          <Grid item xs={12}>\r\n            <Widget\r\n              bodyClass={classes.mainChartBody}\r\n              header={\r\n                <div className={classes.mainChartHeader}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"text\"\r\n                    colorBrightness=\"secondary\"\r\n                  >\r\n                    مبلغ فاکتور ها\r\n                  </Typography>\r\n                  {showFilterBoxFactor && (\r\n                    <>\r\n                      <Grid item lg={3} xs={12} className={classes.datePicker}>\r\n                        <DatePicker\r\n                          autoOk\r\n                          name=\"date\"\r\n                          label=\"از تاریخ\"\r\n                          inputVariant=\"outlined\"\r\n                          okLabel=\"تأیید\"\r\n                          cancelLabel=\"لغو\"\r\n                          labelFunc={(date) =>\r\n                            date ? date.format(\"jYYYY/jMM/jDD\") : \"\"\r\n                          }\r\n                          value={selectedFromDateFactor}\r\n                          onChange={(e) => onChnageDateFactor(e, \"from\")}\r\n                          style={{ width: \"100%\" }}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item lg={3} xs={12} className={classes.datePicker}>\r\n                        <DatePicker\r\n                          autoOk\r\n                          name=\"date\"\r\n                          label=\"تا تاریخ\"\r\n                          inputVariant=\"outlined\"\r\n                          okLabel=\"تأیید\"\r\n                          cancelLabel=\"لغو\"\r\n                          labelFunc={(date) =>\r\n                            date ? date.format(\"jYYYY/jMM/jDD\") : \"\"\r\n                          }\r\n                          value={selectedToDateFactor}\r\n                          onChange={(e) => onChnageDateFactor(e, \"to\")}\r\n                          style={{ width: \"100%\" }}\r\n                        />\r\n                      </Grid>\r\n                    </>\r\n                  )}\r\n                  <div className={classes.mainChartHeaderLabels}>\r\n                    <div className={classes.mainChartHeaderLabel}>\r\n                      <Dot color=\"primary\" />\r\n                      <Typography className={classes.mainChartLegentElement}>\r\n                        فاکتور فروش\r\n                      </Typography>\r\n                    </div>\r\n                    <div className={classes.mainChartHeaderLabel}>\r\n                      <Dot color=\"secondary\" />\r\n                      <Typography className={classes.mainChartLegentElement}>\r\n                        فاکتور خرید\r\n                      </Typography>\r\n                    </div>\r\n                    <MUIToolTip title=\"فیلتر\">\r\n                      <IconButton\r\n                        onClick={() =>\r\n                          setShowFilterBoxFactor(!showFilterBoxFactor)\r\n                        }\r\n                      >\r\n                        <i class=\"material-icons-round\">filter_alt</i>\r\n                      </IconButton>\r\n                    </MUIToolTip>\r\n                  </div>\r\n                </div>\r\n              }\r\n            >\r\n              {factorChart.length && (\r\n                <div style={{ width: \"100%\", height: \"450px\" }}>\r\n                  <div style={{ width: \"100%\", height: \"100%\" }}>\r\n                    <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                      <BarChart\r\n                        width={100}\r\n                        height={300}\r\n                        data={factorChart}\r\n                        margin={{\r\n                          top: 5,\r\n                          right: 30,\r\n                          left: 20,\r\n                          bottom: 5,\r\n                        }}\r\n                      >\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"date\" />\r\n                        <YAxis />\r\n                        <Tooltip />\r\n                        <Bar dataKey=\"buy\" fill=\"#3CD4A0\" />\r\n                        <Bar dataKey=\"sell\" fill=\"#FF5C93\" />\r\n                      </BarChart>\r\n                    </ResponsiveContainer>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </Widget>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\n// #######################################################################\r\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\r\n  var array = new Array(length).fill();\r\n  let lastValue;\r\n\r\n  return array.map((item, index) => {\r\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\r\n\r\n    while (\r\n      randomValue <= min ||\r\n      randomValue >= max ||\r\n      (lastValue && randomValue - lastValue > maxDiff)\r\n    ) {\r\n      randomValue = Math.floor(Math.random() * multiplier + 1);\r\n    }\r\n\r\n    lastValue = randomValue;\r\n\r\n    return { value: randomValue };\r\n  });\r\n}\r\n\r\nfunction getMainChartData() {\r\n  var resultArray = [];\r\n  var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\r\n  var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\r\n  var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\r\n\r\n  for (let i = 0; i < tablet.length; i++) {\r\n    resultArray.push({\r\n      tablet: tablet[i].value,\r\n      desktop: desktop[i].value,\r\n      mobile: mobile[i].value,\r\n    });\r\n  }\r\n\r\n  return resultArray;\r\n}\r\n","import React from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\n\r\nconst ITEM_HEIGHT = 48;\r\n\r\nexport default function TableRowMenu(props) {\r\n  const { options, hadleAction } = props;\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleSelect = (type) => {\r\n    hadleAction(type);\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <IconButton\r\n        aria-label=\"more\"\r\n        aria-controls=\"long-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n      >\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5,\r\n          },\r\n        }}\r\n      >\r\n        {options.map(\r\n          (option) =>\r\n            !option.hidden && (\r\n              <MenuItem key={option.id} onClick={() => handleSelect(option.id)}>\r\n                {option.title}\r\n              </MenuItem>\r\n            ),\r\n        )}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Toolbar,\r\n  Typography,\r\n  IconButton,\r\n  Tooltip,\r\n  TextField,\r\n  Button,\r\n  Collapse,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/SearchRounded\";\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  box: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst TableTop = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const {\r\n    title,\r\n    onAdd,\r\n    FilterComponent,\r\n    handleSearch,\r\n    toolbarClass,\r\n    addButtonClass,\r\n    minimal,\r\n    defaultSearch,\r\n  } = props;\r\n  const [showSearchText, setShowSearchText] = useState(!!defaultSearch);\r\n  const [showFilterBox, setShowFilterBox] = useState(false);\r\n  const [searchText, setSearchText] = useState(defaultSearch);\r\n\r\n  const onChangeSearch = (event) => {\r\n    const { value } = event.target;\r\n    setSearchText(value);\r\n  };\r\n\r\n  const OnSearchKeyPress = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      handleSearch(searchText);\r\n    }\r\n  };\r\n\r\n  const onRemoveSearch = () => {\r\n    setSearchText(\"\");\r\n    handleSearch(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Toolbar className={clsx(classes.root, toolbarClass)}>\r\n        <Typography variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          {title}\r\n        </Typography>\r\n        <div className={classes.box}>\r\n          {showSearchText && (\r\n            <TextField\r\n              value={searchText}\r\n              size=\"small\"\r\n              label=\"جستجو\"\r\n              variant=\"outlined\"\r\n              onChange={onChangeSearch}\r\n              onKeyDown={OnSearchKeyPress}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <i\r\n                      className=\"material-icons-round\"\r\n                      style={{ cursor: \"pointer\" }}\r\n                      onClick={onRemoveSearch}\r\n                    >\r\n                      clear\r\n                    </i>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n          {handleSearch && (\r\n            <Tooltip title=\"جستجو در جدول\">\r\n              <IconButton\r\n                aria-label=\"filter list\"\r\n                onClick={() => setShowSearchText(!showSearchText)}\r\n              >\r\n                <SearchIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          )}\r\n          {FilterComponent && (\r\n            <Tooltip title=\"فیلتر\">\r\n              <IconButton onClick={() => setShowFilterBox(!showFilterBox)}>\r\n                <i class=\"material-icons-round\">filter_alt</i>\r\n              </IconButton>\r\n            </Tooltip>\r\n          )}\r\n\r\n          {typeof onAdd === \"function\" && (\r\n            <Button\r\n              variant={minimal ? \"\" : \"contained\"}\r\n              color={minimal ? \"\" : \"primary\"}\r\n              className={addButtonClass}\r\n              onClick={onAdd}\r\n            >\r\n              {minimal ? \"\" : \"افزودن\"}\r\n              <span class=\"material-icons-round\" style={{ color: \"white\" }}>\r\n                add\r\n              </span>\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </Toolbar>\r\n      <Collapse in={showFilterBox}>{FilterComponent}</Collapse>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TableTop;\r\n","import React from \"react\";\r\n\r\nimport {\r\n  Typography,\r\n  TableSortLabel,\r\n  TableRow,\r\n  TableCell,\r\n  TableHead,\r\n} from \"@material-ui/core\";\r\n\r\nfunction TableHeader(props) {\r\n  const { order, orderBy, onRequestSort, headCells } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            style={{ textAlign: \"right\" }}\r\n            key={headCell.id}\r\n            padding={\"none\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              className={{ display: \"flex\" }}\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              <Typography variant=\"h6\">{headCell.label}</Typography>\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nexport default TableHeader;\r\n","import React from \"react\";\r\n\r\nimport { TablePagination } from \"@material-ui/core\";\r\n\r\nfunction TablePaging(props) {\r\n  const {\r\n    handleChangePage,\r\n    count,\r\n    handleChangeRowsPerPage,\r\n    page,\r\n    rowsPerPage,\r\n  } = props;\r\n  return (\r\n    <TablePagination\r\n      style={{ display: \"flex\" }}\r\n      rowsPerPageOptions={[10, 25, 50]}\r\n      component=\"div\"\r\n      count={count}\r\n      rowsPerPage={rowsPerPage}\r\n      page={page}\r\n      onChangePage={handleChangePage}\r\n      onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      labelRowsPerPage=\"تعداد ردیف \"\r\n      backIconButtonText=\"صفحه قبل\"\r\n      nextIconButtonText=\"صفحه بعد\"\r\n      labelDisplayedRows={({ from, to, count }) =>\r\n        `${from}-${to} از ${count !== -1 ? count : 0}`\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default TablePaging;\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Grid,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport { getRandomNumber } from \"../../helpers/utils\";\r\n\r\nexport default function CustomSkeleton({ headCount }) {\r\n  return (\r\n    <Paper style={{ padding: 10 }}>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        style={{\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          padding: \"20px 0\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <Grid item style={{ width: `20%` }}>\r\n          <Skeleton variant=\"rect\" />\r\n        </Grid>\r\n        <Grid item style={{ width: `15%` }}>\r\n          <Skeleton variant=\"rect\" />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        style={{ width: \"100%\", display: \"flex\", padding: \"20px 0\" }}\r\n      >\r\n        {headCount.map((item) => {\r\n          return (\r\n            <Grid item style={{ width: `${100 / headCount.length}%` }}>\r\n              <Skeleton variant=\"text\" />\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n      <Divider />\r\n      <div>\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n          style={{ width: \"100%\", display: \"flex\", padding: \"10px 0\" }}\r\n        >\r\n          {headCount.map((item) => {\r\n            return (\r\n              <Grid item style={{ width: `${100 / headCount.length}%` }}>\r\n                <Skeleton\r\n                  variant=\"text\"\r\n                  width={`${getRandomNumber(60, 100)}%`}\r\n                />\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n        <Divider />\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n          style={{ width: \"100%\", display: \"flex\", padding: \"10px 0\" }}\r\n        >\r\n          {headCount.map((item) => {\r\n            return (\r\n              <Grid item style={{ width: `${100 / headCount.length}%` }}>\r\n                <Skeleton\r\n                  variant=\"text\"\r\n                  width={`${getRandomNumber(60, 100)}%`}\r\n                />\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n        <Divider />\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n          style={{ width: \"100%\", display: \"flex\", padding: \"10px 0\" }}\r\n        >\r\n          {headCount.map((item) => {\r\n            return (\r\n              <Grid item style={{ width: `${100 / headCount.length}%` }}>\r\n                <Skeleton\r\n                  variant=\"text\"\r\n                  width={`${getRandomNumber(60, 100)}%`}\r\n                />\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n        <Divider />\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n          style={{ width: \"100%\", display: \"flex\", padding: \"10px 0\" }}\r\n        >\r\n          {headCount.map((item) => {\r\n            return (\r\n              <Grid item style={{ width: `${100 / headCount.length}%` }}>\r\n                <Skeleton\r\n                  variant=\"text\"\r\n                  width={`${getRandomNumber(60, 100)}%`}\r\n                />\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n      </div>\r\n      <Divider />\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        style={{ width: \"100%\", display: \"flex\", padding: \"20px 0\" }}\r\n      >\r\n        <Grid item style={{ width: `10%` }}>\r\n          <Skeleton variant=\"rect\" />\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { convertParamsToQueryString, hasPermission } from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"username\",\r\n    label: \"نام کاربری\",\r\n  },\r\n  {\r\n    id: \"firstName\",\r\n    label: \"نام\",\r\n  },\r\n  { id: \"lastName\", label: \"نام خانوادگی\" },\r\n  {\r\n    id: \"mobile\",\r\n    label: \"موبایل\",\r\n  },\r\n  { id: \"phone\", label: \"تلفن\" },\r\n  { id: \"action\" },\r\n];\r\n\r\nconst MainList = () => {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"username\");\r\n  const [search, setSearch] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const history = useHistory();\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onAdd = () => {\r\n    history.push(\"/app/user-detail?action=add\");\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const getUserRequest = useApi({\r\n    method: \"get\",\r\n    url: `user?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n    })}`,\r\n  });\r\n\r\n  const deleteUseRequest = useApi({\r\n    method: \"delete\",\r\n    url: `user`,\r\n  });\r\n\r\n  const handleAction = (id, type) => {\r\n    const types = {\r\n      edit: () => {\r\n        history.push(`/app/user-detail?action=edit&id=${id}`);\r\n      },\r\n      delete: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            await deleteUseRequest.execute(null, id);\r\n            setList(list.filter((item) => item.id !== id));\r\n            DialogActions.hide({ name: \"delete\" });\r\n          },\r\n          name: \"delete\",\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const getData = async () => {\r\n    const userList = await getUserRequest.execute();\r\n    setList(userList.data);\r\n    setTotal(userList.total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.USER_SHOW) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getUserRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title=\"لیست کاربران\"\r\n                    onAdd={\r\n                      hasPermission(Constant.ALL_PERMISSIONS.USER_EDIT) && onAdd\r\n                    }\r\n                    handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                  />\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          if (!row.isAdmin) {\r\n                            return (\r\n                              <TableRow\r\n                                hover\r\n                                tabIndex={-1}\r\n                                key={row.id}\r\n                                style={{ paddingRight: 10 }}\r\n                              >\r\n                                <TableCell padding=\"none\">\r\n                                  {row.username}\r\n                                </TableCell>\r\n                                <TableCell padding=\"none\">\r\n                                  {row.firstName}\r\n                                </TableCell>\r\n                                <TableCell padding=\"none\">\r\n                                  {row.lastName}\r\n                                </TableCell>\r\n                                <TableCell padding=\"none\">\r\n                                  {row.mobile}\r\n                                </TableCell>\r\n                                <TableCell padding=\"none\">\r\n                                  {row.phone}\r\n                                </TableCell>\r\n\r\n                                <TableCell padding=\"none\">\r\n                                  <TableRowMenu\r\n                                    options={[\r\n                                      {\r\n                                        id: \"edit\",\r\n                                        title: \"ویرایش\",\r\n                                        hidden: !hasPermission(\r\n                                          Constant.ALL_PERMISSIONS.USER_EDIT,\r\n                                        ),\r\n                                      },\r\n                                      {\r\n                                        id: \"delete\",\r\n                                        title: \"حذف\",\r\n                                        hidden: !hasPermission(\r\n                                          Constant.ALL_PERMISSIONS.USER_DELETE,\r\n                                        ),\r\n                                      },\r\n                                    ]}\r\n                                    hadleAction={(type) =>\r\n                                      handleAction(row.id, type)\r\n                                    }\r\n                                  />\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            );\r\n                          }\r\n                        })}\r\n                        {!list.length && !getUserRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default MainList;\r\n","import { CircularProgress } from \"@material-ui/core\";\r\n\r\nconst Circular = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flex: 1,\r\n        heght: \"100vh\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <CircularProgress />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Circular;\r\n","import React, { useState } from \"react\";\r\nimport { Grid, Button, FormControlLabel, Checkbox } from \"@material-ui/core\";\r\n\r\nimport Constant from \"../../helpers/constant\";\r\n\r\nexport default function Permission({ onSubmit, defaultPermissions }) {\r\n  const permissions = Constant.PERMISSIONS;\r\n  const [userAccess, setUserAccess] = useState(defaultPermissions || []);\r\n\r\n  const handleChange = (item) => {\r\n    if (userAccess.includes(item)) {\r\n      return setUserAccess(userAccess.filter((i) => i !== item));\r\n    }\r\n    setUserAccess([...userAccess, item]);\r\n  };\r\n\r\n  const onSelectAll = () => {\r\n    const array = [];\r\n    permissions.map((item) => {\r\n      array.push(item.value);\r\n    });\r\n    setUserAccess(array);\r\n  };\r\n\r\n  const onDeSelectAll = () => {\r\n    setUserAccess([]);\r\n  };\r\n\r\n  return (\r\n    <Grid item sm={12}>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        style={{\r\n          maxHeight: 200,\r\n          overflowY: \"auto\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          flexWrap: \"wrap\",\r\n          marginBottom: 20,\r\n        }}\r\n      >\r\n        {permissions.map((item) => {\r\n          return (\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={userAccess.includes(item.value)}\r\n                  onChange={() => handleChange(item.value)}\r\n                  name={item.value}\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label={item.label}\r\n            />\r\n          );\r\n        })}\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          onClick={() => onSubmit(userAccess)}\r\n        >\r\n          تایید\r\n        </Button>\r\n        <Grid>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={onSelectAll}\r\n            style={{ margin: \"0 10px\" }}\r\n          >\r\n            انتخاب همه\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={onDeSelectAll}>\r\n            حذف همه\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport clsx from \"clsx\";\r\nimport { getQueryString } from \"../../helpers/utils\";\r\nimport CircularProgress from \"../../components/CircularProgress\";\r\nimport Permission from \"./permission\";\r\nimport dialogAction from \"../../redux/actions/dialogAction\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n}));\r\n\r\nexport default function MainDetail() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const id = getQueryString(\"id\");\r\n  const action = getQueryString(\"action\");\r\n  const [detail, setDetail] = useState({});\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n  const [isPassword, setIsPassword] = useState(true);\r\n  const addUserRequest = useApi({\r\n    method: \"post\",\r\n    url: `user`,\r\n  });\r\n  const editUserRequest = useApi({\r\n    method: \"put\",\r\n    url: `user/${id}`,\r\n  });\r\n  const detailUserRequest = useApi({\r\n    method: \"get\",\r\n    url: `user/${id}`,\r\n  });\r\n\r\n  const onChangeViewClick = function () {\r\n    setIsPassword(!isPassword);\r\n  };\r\n\r\n  const onSubmitPermission = async (data, permissions) => {\r\n    const value = { ...data, permissions };\r\n    if (id) {\r\n      await editUserRequest.execute(value);\r\n    } else {\r\n      await addUserRequest.execute(value);\r\n    }\r\n    onDismissPermission();\r\n  };\r\n\r\n  const onDismissPermission = () => {\r\n    dialogAction.hide({ name: \"permission\" });\r\n  };\r\n\r\n  const onShowPermissionDialog = (data) => {\r\n    dialogAction.show({\r\n      title: \"دسترسی ها\",\r\n      component: (\r\n        <Permission\r\n          defaultPermissions={detail?.permissions}\r\n          onSubmit={(value) => onSubmitPermission(data, value)}\r\n          onDismiss={onDismissPermission}\r\n        />\r\n      ),\r\n      name: \"permission\",\r\n      size: \"8\",\r\n      confirm: false,\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    onShowPermissionDialog(data);\r\n  };\r\n\r\n  const onReject = () => {\r\n    history.push(\"/app/user-list\");\r\n  };\r\n\r\n  const getDetail = async () => {\r\n    const detail = await detailUserRequest.execute();\r\n    setDetail(detail.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      getDetail();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(detail);\r\n  }, [reset, detail]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      {!detailUserRequest.pending ? (\r\n        <Grid item lg={6} sm={12} className={classes.root}>\r\n          <Paper className={classes.paper}>\r\n            <Typography\r\n              className={classes.title}\r\n              variant=\"h6\"\r\n              id=\"tableTitle\"\r\n              component=\"div\"\r\n            >\r\n              {id ? \"ویرایش کاربر\" : \"افزودن کاربر\"}\r\n            </Typography>\r\n\r\n            <Grid container spacing={3}>\r\n              <Fragment>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"نام\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.firstName}\r\n                          helperText={\r\n                            errors.firstName ? errors.firstName.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                    name=\"firstName\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"نام خانوادگی\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.lastName}\r\n                          helperText={\r\n                            errors.lastName ? errors.lastName.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                    name=\"lastName\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"نام کاربری\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.username}\r\n                          helperText={\r\n                            errors.username ? errors.username.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                    name=\"username\"\r\n                  />\r\n                </Grid>\r\n                {action === \"add\" && (\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"رمز عبور\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.password}\r\n                            helperText={\r\n                              errors.password ? errors.password.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            type={isPassword ? \"password\" : \"text\"}\r\n                            InputProps={{\r\n                              endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                  <i\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    className={clsx(\r\n                                      \"material-icons-round\",\r\n                                      classes.icon,\r\n                                    )}\r\n                                    onClick={onChangeViewClick}\r\n                                  >\r\n                                    {isPassword\r\n                                      ? \"visibility_off\"\r\n                                      : \"visibility\"}\r\n                                  </i>\r\n                                </InputAdornment>\r\n                              ),\r\n                            }}\r\n                          />\r\n                        );\r\n                      }}\r\n                      rules={{\r\n                        required: Constant.VALIDATION.REQUIRED,\r\n                        minLength: {\r\n                          value: 5,\r\n                          message: Constant.VALIDATION.PASSWORD,\r\n                        },\r\n                      }}\r\n                      name=\"password\"\r\n                    />\r\n                  </Grid>\r\n                )}\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"موبایل\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.mobile}\r\n                          helperText={\r\n                            errors.mobile ? errors.mobile.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    rules={{\r\n                      minLength: {\r\n                        value: 11,\r\n                        message: Constant.VALIDATION.MOBILE_NUMBER,\r\n                      },\r\n                      maxLength: {\r\n                        value: 11,\r\n                        message: Constant.VALIDATION.MOBILE_NUMBER,\r\n                      },\r\n                    }}\r\n                    name=\"mobile\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"تلفن\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.phone}\r\n                          helperText={errors.phone ? errors.phone.message : \"\"}\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    name=\"phone\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"آدرس\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.address}\r\n                          helperText={\r\n                            errors.address ? errors.address.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    name=\"address\"\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                    تایید\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={onReject}\r\n                  >\r\n                    بازگشت\r\n                  </Button>\r\n                </Grid>\r\n              </Fragment>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      ) : (\r\n        <CircularProgress />\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  status: {\r\n    color: \"#fff\",\r\n  },\r\n  CREDITOR: {\r\n    backgroundColor: theme.palette.success.main,\r\n  },\r\n  NODEBT: {\r\n    backgroundColor: theme.palette.gray.main,\r\n  },\r\n  DEBTOR: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: 7,\r\n  },\r\n}));\r\n","import React, { useState } from \"react\";\r\nimport { Grid, TextField, MenuItem, Button, Divider } from \"@material-ui/core\";\r\nimport Constant from \"../../helpers/constant\";\r\n\r\nconst personType = [\r\n  {\r\n    label: \"بدهکار\",\r\n    value: Constant.PERSON_STATUS.DEBTIOR,\r\n  },\r\n  { label: \"بی حساب\", value: Constant.PERSON_STATUS.NODEBT },\r\n  { label: \"طلبکار\", value: Constant.PERSON_STATUS.CREDITOR },\r\n];\r\n\r\nconst Filter = ({ onFilter }) => {\r\n  const [filterData, setFilterData] = useState({ name: \"\", status: \"\" });\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setFilterData({ ...filterData, [prop]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (typeof onFilter === \"function\") {\r\n      onFilter(filterData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3} alignItems=\"center\" style={{ padding: 10 }}>\r\n      <Grid item lg={3} xs={12}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          label=\"نام\"\r\n          onChange={handleChange(\"name\")}\r\n          value={filterData.name}\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n      </Grid>\r\n      <Grid item lg={3} xs={12}>\r\n        <TextField\r\n          select\r\n          label=\"وضعیت\"\r\n          onChange={handleChange(\"status\")}\r\n          value={filterData.status}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        >\r\n          {personType.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Grid>\r\n      <Grid item lg={3} xs={12}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n          تایید\r\n        </Button>\r\n      </Grid>\r\n      <Divider style={{ width: \"100%\" }} />\r\n    </Grid>\r\n  );\r\n};\r\nexport default Filter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Chip,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport {\r\n  convertParamsToQueryString,\r\n  hasPermission,\r\n  persianNumber,\r\n} from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport FilterComponent from \"./filter\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"firstName\",\r\n    label: \"نام\",\r\n  },\r\n  { id: \"lastName\", label: \"نام خانوادگی\" },\r\n  {\r\n    id: \"mobile\",\r\n    label: \"موبایل\",\r\n  },\r\n  { id: \"phone\", label: \"تلفن\" },\r\n  { id: \"remaining\", label: \"مانده حساب\" },\r\n  { id: \"status\", label: \"وضعیت\" },\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function MainList() {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [search, setSearch] = useState();\r\n  const [orderBy, setOrderBy] = useState(\"firstName\");\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [filter, setFilter] = useState();\r\n  const history = useHistory();\r\n  const [total, setTotal] = useState(0);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onAdd = () => {\r\n    history.push(\"/app/customer-detail\");\r\n  };\r\n\r\n  const getCustomerRequest = useApi({\r\n    method: \"get\",\r\n    url: `customer?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n      filter,\r\n    })}`,\r\n  });\r\n\r\n  const deleteUseRequest = useApi({\r\n    method: \"delete\",\r\n    url: `customer`,\r\n  });\r\n\r\n  const handleAction = (row, type) => {\r\n    const types = {\r\n      edit: () => {\r\n        history.push(`/app/customer-detail?id=${row.id}`);\r\n      },\r\n      delete: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            await deleteUseRequest.execute(null, row.id);\r\n            setList(list.filter((item) => item.id !== row.id));\r\n            DialogActions.hide({ name: \"delete\" });\r\n          },\r\n          name: \"delete\",\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n      transaction: () => {\r\n        history.push(`/app/person-transaction?id=${row.id}&type=employee`);\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onFilter = (data) => {\r\n    setFilter(data);\r\n    setPage(0);\r\n  };\r\n\r\n  const getData = async () => {\r\n    const customerList = await getCustomerRequest.execute();\r\n    setList(customerList.data);\r\n    setTotal(customerList.total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize, filter]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.CUSTOMER_SHOW) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getCustomerRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title=\"لیست مشتریان\"\r\n                    onAdd={\r\n                      hasPermission(Constant.ALL_PERMISSIONS.CUSTOMER_EDIT) &&\r\n                      onAdd\r\n                    }\r\n                    FilterComponent={<FilterComponent onFilter={onFilter} />}\r\n                    handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                    addPermission={hasPermission(\r\n                      Constant.ALL_PERMISSIONS.CUSTOMER_EDIT,\r\n                    )}\r\n                  />\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                            >\r\n                              <TableCell padding=\"none\">\r\n                                {row.firstName}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.lastName}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(row.mobile)}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(row.phone)}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(row.accountRemaining)?.replace(\r\n                                  \"-\",\r\n                                  \"\",\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                <Chip\r\n                                  label={Constant.PERSON_STATUS[row.status]}\r\n                                  className={clsx(\r\n                                    classes.status,\r\n                                    classes[row.status],\r\n                                  )}\r\n                                />\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                <TableRowMenu\r\n                                  options={[\r\n                                    { id: \"transaction\", title: \"تراکنش ها\" },\r\n                                    {\r\n                                      id: \"edit\",\r\n                                      title: \"ویرایش\",\r\n                                      hidden: !hasPermission(\r\n                                        Constant.ALL_PERMISSIONS.CUSTOMER_EDIT,\r\n                                      ),\r\n                                    },\r\n                                    {\r\n                                      id: \"delete\",\r\n                                      title: \"حذف\",\r\n                                      hidden: !hasPermission(\r\n                                        Constant.ALL_PERMISSIONS\r\n                                          .CUSTOMER_DELETE,\r\n                                      ),\r\n                                    },\r\n                                  ]}\r\n                                  hadleAction={(type) =>\r\n                                    handleAction(row, type)\r\n                                  }\r\n                                />\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getCustomerRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import clsx from \"clsx\";\r\nimport theme from \"../../themes/default\";\r\n\r\nexport const DeleteIcon = () => {\r\n  return (\r\n    <i\r\n      className={clsx(\"material-icons-round\")}\r\n      style={{ color: theme.palette.danger.main }}\r\n    >\r\n      clear\r\n    </i>\r\n  );\r\n};\r\n\r\nexport const EditIcon = () => {\r\n  return (\r\n    <i\r\n      className={clsx(\"material-icons-round\")}\r\n      style={{ color: theme.palette.primary.main }}\r\n    >\r\n      edit\r\n    </i>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Grid, MenuItem } from \"@material-ui/core\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport styles from \"./style\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nconst Account = ({ onSubmit, onDismiss, defaultValues }) => {\r\n  const [banks, setBanks] = useState([]);\r\n  const [selectedBank, setSelectedBank] = useState(\r\n    defaultValues?.bank.value || 1,\r\n  );\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n  const classes = styles();\r\n\r\n  const getBankRequest = useApi({\r\n    method: \"get\",\r\n    url: `bank`,\r\n  });\r\n\r\n  const getBanks = async () => {\r\n    const result = await getBankRequest.execute();\r\n    setBanks(result.data);\r\n  };\r\n\r\n  const getSelectedBank = () => {\r\n    return banks.find((item) => item.value === selectedBank);\r\n  };\r\n\r\n  const onDone = (data) => {\r\n    const newId = uuid();\r\n    const value = {\r\n      ...data,\r\n      bank: getSelectedBank(),\r\n      id: defaultValues ? defaultValues.id : newId,\r\n      isUpdate: !!defaultValues,\r\n    };\r\n    onSubmit(value);\r\n  };\r\n\r\n  const onChangeBank = (e) => {\r\n    setSelectedBank(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBanks();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(defaultValues);\r\n  }, [reset, defaultValues]);\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          select\r\n          label=\"بانک\"\r\n          onChange={onChangeBank}\r\n          value={selectedBank}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n          name=\"bank\"\r\n          SelectProps={{\r\n            classes: {\r\n              select: classes.rootSelect,\r\n            },\r\n          }}\r\n        >\r\n          {banks.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              <img\r\n                src={`${Constant.API_ADDRESS}/${option.logo}`}\r\n                alt={option.label}\r\n                style={{\r\n                  width: 25,\r\n                  height: 25,\r\n                  borderRadius: \"50%\",\r\n                  marginLeft: 10,\r\n                }}\r\n              />\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                fullWidth\r\n                value={value}\r\n                size=\"small\"\r\n                name={name}\r\n                label=\"شماره کارت\"\r\n                variant=\"outlined\"\r\n                onChange={onChange}\r\n                error={!!errors.accountCardNumber}\r\n                helperText={\r\n                  errors.accountCardNumber\r\n                    ? errors.accountCardNumber.message\r\n                    : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          rules={{\r\n            minLength: {\r\n              value: 16,\r\n              message: Constant.VALIDATION.CARD_NUMBER,\r\n            },\r\n            maxLength: {\r\n              value: 16,\r\n              message: Constant.VALIDATION.CARD_NUMBER,\r\n            },\r\n          }}\r\n          name=\"accountCardNumber\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                fullWidth\r\n                value={value}\r\n                size=\"small\"\r\n                name={name}\r\n                label=\"شماره حساب\"\r\n                variant=\"outlined\"\r\n                onChange={onChange}\r\n                error={!!errors.accountNumber}\r\n                helperText={\r\n                  errors.accountNumber ? errors.accountNumber.message : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          name=\"accountNumber\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                fullWidth\r\n                value={value}\r\n                size=\"small\"\r\n                name={name}\r\n                label=\"شماره شبا\"\r\n                variant=\"outlined\"\r\n                onChange={onChange}\r\n                error={!!errors.accountShaba}\r\n                helperText={\r\n                  errors.accountShaba ? errors.accountShaba.message : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          name=\"accountShaba\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                label=\"توضیحات\"\r\n                multiline\r\n                rows={4}\r\n                variant=\"outlined\"\r\n                name={name}\r\n                onChange={onChange}\r\n                value={value}\r\n                fullWidth\r\n                error={!!errors.description}\r\n                helperText={\r\n                  errors.description ? errors.description.message : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          name=\"description\"\r\n        />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          onClick={handleSubmit(onDone)}\r\n        >\r\n          تایید\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onDismiss}>\r\n          انصراف\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport { DeleteIcon, EditIcon } from \"../../components/icons\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { getQueryString } from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport Account from \"./account\";\r\nimport CircularProgress from \"../../components/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n}));\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"Name\",\r\n    label: \"نام بانک\",\r\n  },\r\n  { id: \"accountNumber\", label: \"شماره حساب \" },\r\n  {\r\n    id: \"CardNumber\",\r\n    label: \"شماره کارت\",\r\n  },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function MainDetail() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const id = getQueryString(\"id\");\r\n  const [detail, setDetail] = useState({});\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [category, setCategory] = useState([]);\r\n  const [customerCategory, setCustomerCategory] = useState(1);\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n\r\n  const addCustomerRequest = useApi({\r\n    method: \"post\",\r\n    url: `customer`,\r\n  });\r\n  const editCustomerRequest = useApi({\r\n    method: \"put\",\r\n    url: `customer/${id}`,\r\n  });\r\n  const detailCustomerRequest = useApi({\r\n    method: \"get\",\r\n    url: `customer/${id}`,\r\n  });\r\n\r\n  const customerCategoryRequest = useApi({\r\n    method: \"get\",\r\n    url: `customer/category`,\r\n  });\r\n\r\n  const deleteAccountRequest = useApi({\r\n    method: \"delete\",\r\n    url: `account`,\r\n  });\r\n\r\n  const onSubmit = async (data) => {\r\n    const newAccounts = [];\r\n    accounts.map((item) => {\r\n      const newData = {\r\n        bankId: item.bank.value || item.bank.id,\r\n        accountCardNumber: item.accountCardNumber,\r\n        accountNumber: item.accountNumber,\r\n        accountShaba: item.accountShaba,\r\n        description: item.description,\r\n        id: item.id.toString().includes(\"-\") ? null : item.id,\r\n      };\r\n      newAccounts.push(newData);\r\n    });\r\n\r\n    const allData = { ...data, accounts: newAccounts, customerCategory };\r\n    if (id) {\r\n      return await editCustomerRequest.execute(allData);\r\n    }\r\n    await addCustomerRequest.execute(allData);\r\n    setTimeout(() => {\r\n      onReject();\r\n    }, 1000);\r\n  };\r\n\r\n  const onReject = () => {\r\n    history.push(\"/app/customer-list\");\r\n  };\r\n\r\n  const getDetail = async () => {\r\n    const detail = await detailCustomerRequest.execute();\r\n    setDetail(detail.data);\r\n    setCustomerCategory(detail.data.customerCategory);\r\n    setAccounts(detail.data.accounts);\r\n  };\r\n\r\n  const getCustomerCategory = async () => {\r\n    const detail = await customerCategoryRequest.execute();\r\n    setCategory(detail.data);\r\n  };\r\n\r\n  const onSubmitAccount = (data) => {\r\n    if (data.isUpdate) {\r\n      const index = accounts.findIndex((item) => item.id === data.id);\r\n      const accounstTmp = [...accounts];\r\n      accounstTmp[index] = data;\r\n      setAccounts(accounstTmp);\r\n    } else {\r\n      setAccounts([...accounts, data]);\r\n    }\r\n    onDismissAccount();\r\n  };\r\n\r\n  const onDismissAccount = () => {\r\n    DialogActions.hide({ name: \"account\" });\r\n  };\r\n\r\n  const onShowDialog = (data) => {\r\n    DialogActions.show({\r\n      title: \" حساب بانکی\",\r\n      component: (\r\n        <Account\r\n          onSubmit={onSubmitAccount}\r\n          onDismiss={onDismissAccount}\r\n          defaultValues={data}\r\n        />\r\n      ),\r\n      name: \"account\",\r\n      size: \"4\",\r\n      confirm: false,\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  const onAddAccount = () => {\r\n    onShowDialog();\r\n  };\r\n\r\n  const handleEditAccount = (data) => {\r\n    onShowDialog(data);\r\n  };\r\n\r\n  const handleDeleteAccount = (row) => {\r\n    debugger;\r\n    DialogActions.show({\r\n      confirm: true,\r\n      title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n      onAction: async () => {\r\n        if (id) {\r\n          await deleteAccountRequest.execute(null, row.id);\r\n        }\r\n        setAccounts(accounts.filter((item) => item.id !== row.id));\r\n        DialogActions.hide({ name: \"delete\" });\r\n      },\r\n      name: \"delete\",\r\n      size: \"6\",\r\n      disableCloseButton: false,\r\n    });\r\n  };\r\n\r\n  const onChangeCategory = (e) => {\r\n    setCustomerCategory(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCustomerCategory();\r\n    if (id) {\r\n      getDetail();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(detail);\r\n  }, [reset, detail]);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        {!detailCustomerRequest.pending ? (\r\n          <Grid item lg={6} sm={12} className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n              <Typography\r\n                className={classes.title}\r\n                variant=\"h6\"\r\n                id=\"tableTitle\"\r\n                component=\"div\"\r\n              >\r\n                {id ? \"ویرایش مشتری\" : \"افزودن مشتری\"}\r\n              </Typography>\r\n\r\n              <Grid container spacing={3}>\r\n                <Fragment>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"نام\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.firstName}\r\n                            helperText={\r\n                              errors.firstName ? errors.firstName.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                      name=\"firstName\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"نام خانوادگی\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.lastName}\r\n                            helperText={\r\n                              errors.lastName ? errors.lastName.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                      name=\"lastName\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"تلفن\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.phone}\r\n                            helperText={\r\n                              errors.phone ? errors.phone.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"phone\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"موبایل\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.mobile}\r\n                            helperText={\r\n                              errors.mobile ? errors.mobile.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      rules={{\r\n                        minLength: {\r\n                          value: 11,\r\n                          message: Constant.VALIDATION.MOBILE_NUMBER,\r\n                        },\r\n                        maxLength: {\r\n                          value: 11,\r\n                          message: Constant.VALIDATION.MOBILE_NUMBER,\r\n                        },\r\n                      }}\r\n                      name=\"mobile\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            type=\"number\"\r\n                            variant=\"outlined\"\r\n                            label=\"مانده از قبل\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.accountRemaining}\r\n                            helperText={\r\n                              errors.accountRemaining\r\n                                ? errors.accountRemaining.message\r\n                                : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"accountRemaining\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    {!!category.length && customerCategory && (\r\n                      <TextField\r\n                        select\r\n                        label=\"دسته بندی\"\r\n                        value={customerCategory}\r\n                        onChange={onChangeCategory}\r\n                        variant=\"outlined\"\r\n                        error={!!errors.customerCategory}\r\n                        helperText={\r\n                          errors.customerCategory\r\n                            ? errors.customerCategory.message\r\n                            : \"\"\r\n                        }\r\n                        fullWidth\r\n                        size=\"small\"\r\n                      >\r\n                        {category.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </TextField>\r\n                    )}\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={onAddAccount}\r\n                    >\r\n                      افزودن حساب بانکی\r\n                    </Button>\r\n                  </Grid>\r\n                  {!!accounts.length && (\r\n                    <Grid item xs={12}>\r\n                      <Paper>\r\n                        <TableContainer style={{ padding: \"0 10px\" }}>\r\n                          <Table\r\n                            className={classes.table}\r\n                            size={\"medium\"}\r\n                            style={{ paddingRight: 10 }}\r\n                          >\r\n                            <TableHeader headCells={headCells} />\r\n\r\n                            <TableBody>\r\n                              {accounts.map((row) => {\r\n                                return (\r\n                                  <TableRow\r\n                                    hover\r\n                                    tabIndex={-1}\r\n                                    key={row.id}\r\n                                    style={{ paddingRight: 10 }}\r\n                                  >\r\n                                    <TableCell padding=\"none\">\r\n                                      <div\r\n                                        style={{\r\n                                          display: \"flex\",\r\n                                          alignItems: \"center\",\r\n                                        }}\r\n                                      >\r\n                                        <img\r\n                                          src={`${Constant.API_ADDRESS}/${row.bank.logo}`}\r\n                                          alt={row.bank.label}\r\n                                          style={{\r\n                                            width: 25,\r\n                                            height: 25,\r\n                                            borderRadius: \"50%\",\r\n                                            marginLeft: 5,\r\n                                          }}\r\n                                        />\r\n                                        {row.bank.name || row.bank.label}\r\n                                      </div>\r\n                                    </TableCell>\r\n                                    <TableCell padding=\"none\">\r\n                                      {row.accountNumber}\r\n                                    </TableCell>\r\n                                    <TableCell padding=\"none\">\r\n                                      {row.accountCardNumber}\r\n                                    </TableCell>\r\n\r\n                                    <TableCell\r\n                                      padding=\"none\"\r\n                                      style={{ textAlign: \"left\" }}\r\n                                    >\r\n                                      <IconButton\r\n                                        onClick={() => handleEditAccount(row)}\r\n                                      >\r\n                                        <EditIcon />\r\n                                      </IconButton>\r\n\r\n                                      <IconButton\r\n                                        onClick={() => handleDeleteAccount(row)}\r\n                                      >\r\n                                        <DeleteIcon />\r\n                                      </IconButton>\r\n                                    </TableCell>\r\n                                  </TableRow>\r\n                                );\r\n                              })}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                      </Paper>\r\n                    </Grid>\r\n                  )}\r\n\r\n                  <Grid item xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"آدرس\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.address}\r\n                            helperText={\r\n                              errors.address ? errors.address.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"address\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            label=\"توضیحات\"\r\n                            multiline\r\n                            rows={4}\r\n                            variant=\"outlined\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            fullWidth\r\n                            error={!!errors.description}\r\n                            helperText={\r\n                              errors.description\r\n                                ? errors.description.message\r\n                                : \"\"\r\n                            }\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"description\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                  >\r\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                      تایید\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      onClick={onReject}\r\n                    >\r\n                      بازگشت\r\n                    </Button>\r\n                  </Grid>\r\n                </Fragment>\r\n              </Grid>\r\n            </Paper>\r\n          </Grid>\r\n        ) : (\r\n          <CircularProgress />\r\n        )}\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Tabs,\r\n  Tab,\r\n  Chip,\r\n} from \"@material-ui/core\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport {\r\n  convertParamsToQueryString,\r\n  persianNumber,\r\n  hasPermission,\r\n} from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport clsx from \"clsx\";\r\nimport { getQueryString } from \"../../helpers/utils\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"date\",\r\n    label: \"تاریخ\",\r\n  },\r\n  { id: \"price\", label: \"مبلغ\" },\r\n  {\r\n    id: \"type\",\r\n    label: \"نوع\",\r\n  },\r\n  {\r\n    id: \"Desc\",\r\n    label: \"بابت\",\r\n  },\r\n  { id: \"action\" },\r\n];\r\n\r\nconst MainList = () => {\r\n  const customerId = getQueryString(\"id\");\r\n  const type = getQueryString(\"type\");\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"date\");\r\n  const [search, setSearch] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const history = useHistory();\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n  };\r\n\r\n  const getPaymentRequest = useApi({\r\n    method: \"get\",\r\n    url: `payment/person/${type}?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n    })}`,\r\n  });\r\n\r\n  const deleteUseRequest = useApi({\r\n    method: \"delete\",\r\n    url: `payment`,\r\n  });\r\n\r\n  const handleAction = (row, type) => {\r\n    const types = {\r\n      edit: () => {\r\n        history.push(\r\n          `/app/payment-detail?type=${row.type}&id=${row.id}&customerId=${customerId}`,\r\n        );\r\n      },\r\n      delete: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            await deleteUseRequest.execute(null, row.id);\r\n            setList(list.filter((item) => item.id !== row.id));\r\n            DialogActions.hide({ name: \"delete\" });\r\n          },\r\n          name: \"delete\",\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const getTableTitle = () => {\r\n    if (list.length)\r\n      return (\r\n        <div>\r\n          لیست تراکنش های{\" \"}\r\n          <b style={{ fontWeight: \"bolder\" }}>{list[0].person}</b>\r\n        </div>\r\n      );\r\n  };\r\n\r\n  const getData = async () => {\r\n    const list = await getPaymentRequest.execute(null, customerId);\r\n    setList(list.data);\r\n    setTotal(list.total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.PAYMENT_LIST) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getPaymentRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title={getTableTitle()}\r\n                    handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                  />\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{\r\n                                paddingRight: 10,\r\n                                backgroundColor:\r\n                                  row.type === \"OUTCOME\"\r\n                                    ? \"#ffe8e8\"\r\n                                    : \"#b1eed9\",\r\n                              }}\r\n                            >\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  new Date(row.date).toLocaleDateString(\r\n                                    \"fa-IR\",\r\n                                  ),\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  Number(row.price).toLocaleString(),\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {Constant.PAYMENT_TYPE[row.type]}\r\n                              </TableCell>\r\n\r\n                              <TableCell padding=\"none\">\r\n                                {row.description}\r\n                              </TableCell>\r\n\r\n                              <TableCell padding=\"none\">\r\n                                <TableRowMenu\r\n                                  options={[\r\n                                    { id: \"edit\", title: \"ویرایش\" },\r\n                                    { id: \"delete\", title: \"حذف\" },\r\n                                  ]}\r\n                                  hadleAction={(type) =>\r\n                                    handleAction(row, type)\r\n                                  }\r\n                                />\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getPaymentRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default MainList;\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  salary: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  salaryPaperLeft: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  salaryPaperRight: {\r\n    marginBottom: theme.spacing(2),\r\n    padding: 20,\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  tab: {\r\n    borderBottom: `1px solid ${theme.palette.gray.main}`,\r\n  },\r\n  status: {\r\n    color: \"#fff\",\r\n  },\r\n  CREDITOR: {\r\n    backgroundColor: theme.palette.success.main,\r\n  },\r\n  NODEBT: {\r\n    backgroundColor: theme.palette.gray.main,\r\n  },\r\n  DEBTIOR: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  PRESENT: {\r\n    backgroundColor: theme.palette.success.main,\r\n  },\r\n  ABSET: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: 7,\r\n  },\r\n}));\r\n","import React, { useState } from \"react\";\r\nimport { Grid, TextField, MenuItem, Button, Divider } from \"@material-ui/core\";\r\nimport Constant from \"../../helpers/constant\";\r\n\r\nconst personType = [\r\n  {\r\n    label: \"بدهکار\",\r\n    value: Constant.PERSON_STATUS.DEBTIOR,\r\n  },\r\n  { label: \"بی حساب\", value: Constant.PERSON_STATUS.NODEBT },\r\n  { label: \"طلبکار\", value: Constant.PERSON_STATUS.CREDITOR },\r\n];\r\n\r\nconst Filter = ({ onFilter }) => {\r\n  const [filterData, setFilterData] = useState({ name: \"\", status: \"\" });\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setFilterData({ ...filterData, [prop]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (typeof onFilter === \"function\") {\r\n      onFilter(filterData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3} alignItems=\"center\" style={{ padding: 10 }}>\r\n      <Grid item lg={3} xs={12}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          label=\"نام\"\r\n          onChange={handleChange(\"name\")}\r\n          value={filterData.name}\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n      </Grid>\r\n      <Grid item lg={3} xs={12}>\r\n        <TextField\r\n          select\r\n          label=\"وضعیت\"\r\n          onChange={handleChange(\"status\")}\r\n          value={filterData.status}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        >\r\n          {personType.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Grid>\r\n      <Grid item lg={3} xs={12}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n          تایید\r\n        </Button>\r\n      </Grid>\r\n      <Divider style={{ width: \"100%\" }} />\r\n    </Grid>\r\n  );\r\n};\r\nexport default Filter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Chip,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { convertParamsToQueryString, hasPermission } from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport FilterComponent from \"./filter\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"firstName\",\r\n    label: \"نام\",\r\n  },\r\n  { id: \"lastName\", label: \"نام خانوادگی\" },\r\n  {\r\n    id: \"محل خدمت\",\r\n    label: \"محل خدمت\",\r\n  },\r\n  {\r\n    id: \"mobile\",\r\n    label: \"موبایل\",\r\n  },\r\n  { id: \"status\", label: \"وضعیت\" },\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function MainList() {\r\n  const CONTERACT_TYPE = {\r\n    DEPOT: \"انبار\",\r\n    FACTORY: \"کارخانه\",\r\n  };\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [search, setSearch] = useState();\r\n  const [orderBy, setOrderBy] = useState(\"firstName\");\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [type, setType] = useState(\"ALL\");\r\n  const [filter, setFilter] = useState();\r\n  const [total, setTotal] = useState(0);\r\n  const history = useHistory();\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onAdd = () => {\r\n    history.push(\"/app/employee-detail\");\r\n  };\r\n\r\n  const getEmployeeRequest = useApi({\r\n    method: \"get\",\r\n    url: `employee?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n      filter,\r\n      type,\r\n    })}`,\r\n  });\r\n\r\n  const deleteUseRequest = useApi({\r\n    method: \"delete\",\r\n    url: `employee`,\r\n  });\r\n\r\n  const handleAction = (row, type) => {\r\n    const { id, firstName, lastName } = row;\r\n    const types = {\r\n      edit: () => {\r\n        history.push(`/app/employee-detail?id=${id}`);\r\n      },\r\n      delete: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            await deleteUseRequest.execute(null, id);\r\n            setList(list.filter((item) => item.id !== id));\r\n            DialogActions.hide({ name: \"delete\" });\r\n          },\r\n          name: \"delete\",\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n      traffic: () => {\r\n        history.push(\r\n          `/app/employee-log?id=${id}&name=${firstName} ${lastName}`,\r\n        );\r\n      },\r\n      transaction: () => {\r\n        history.push(`/app/person-transaction?id=${id}&type=employee`);\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onFilter = (data) => {\r\n    setFilter(data);\r\n    setPage(0);\r\n  };\r\n\r\n  const onChangeType = (e, value) => {\r\n    setType(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const getData = async () => {\r\n    const employeeList = await getEmployeeRequest.execute();\r\n    setList(employeeList.data);\r\n    setTotal(employeeList.total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize, type, filter]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.EMPLOYEE_SHOW) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getEmployeeRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title=\"لیست پرسنل\"\r\n                    onAdd={\r\n                      hasPermission(Constant.ALL_PERMISSIONS.EMPLOYEE_EDIT) &&\r\n                      onAdd\r\n                    }\r\n                    FilterComponent={<FilterComponent onFilter={onFilter} />}\r\n                    handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                  />\r\n                  <div className={classes.tab}>\r\n                    <Tabs\r\n                      value={type}\r\n                      onChange={onChangeType}\r\n                      indicatorColor=\"primary\"\r\n                      textColor=\"primary\"\r\n                      centered\r\n                      variant=\"fullWidth\"\r\n                    >\r\n                      <Tab label=\"کل پرسنل\" value=\"ALL\" />\r\n                      <Tab label=\"پرسنل کارخانه\" value=\"FACTORY\" />\r\n                      <Tab label=\"پرسنل انبار\" value=\"DEPOT\" />\r\n                    </Tabs>\r\n                  </div>\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                            >\r\n                              <TableCell padding=\"none\">\r\n                                {row.firstName}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.lastName}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {CONTERACT_TYPE[row.contractType]}\r\n                              </TableCell>\r\n\r\n                              <TableCell padding=\"none\">{row.mobile}</TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                <Chip\r\n                                  label={Constant.PERSON_STATUS[row.status]}\r\n                                  className={clsx(\r\n                                    classes.status,\r\n                                    classes[row.status],\r\n                                  )}\r\n                                />\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                <TableRowMenu\r\n                                  options={[\r\n                                    { id: \"transaction\", title: \"تراکنش ها\" },\r\n                                    { id: \"traffic\", title: \"گزارش تردد\" },\r\n                                    {\r\n                                      id: \"edit\",\r\n                                      title: \"ویرایش\",\r\n                                      hidden: !hasPermission(\r\n                                        Constant.ALL_PERMISSIONS.EMPLOYEE_EDIT,\r\n                                      ),\r\n                                    },\r\n                                    {\r\n                                      id: \"delete\",\r\n                                      title: \"حذف\",\r\n                                      hidden: !hasPermission(\r\n                                        Constant.ALL_PERMISSIONS\r\n                                          .EMPLOYEE_DELETE,\r\n                                      ),\r\n                                    },\r\n                                  ]}\r\n                                  hadleAction={(type) =>\r\n                                    handleAction(row, type)\r\n                                  }\r\n                                />\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getEmployeeRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Grid, MenuItem } from \"@material-ui/core\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport styles from \"./style\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nconst Account = ({ onSubmit, onDismiss, defaultValues }) => {\r\n  const [banks, setBanks] = useState([]);\r\n  const [selectedBank, setSelectedBank] = useState(\r\n    defaultValues?.bank.value || 1,\r\n  );\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n  const classes = styles();\r\n\r\n  const getBankRequest = useApi({\r\n    method: \"get\",\r\n    url: `bank`,\r\n  });\r\n\r\n  const getBanks = async () => {\r\n    const result = await getBankRequest.execute();\r\n    setBanks(result.data);\r\n  };\r\n\r\n  const getSelectedBank = () => {\r\n    return banks.find((item) => item.value === selectedBank);\r\n  };\r\n\r\n  const onDone = (data) => {\r\n    const newId = uuid();\r\n    const value = {\r\n      ...data,\r\n      bank: getSelectedBank(),\r\n      id: defaultValues ? defaultValues.id : newId,\r\n      isUpdate: !!defaultValues,\r\n    };\r\n    onSubmit(value);\r\n  };\r\n\r\n  const onChangeBank = (e) => {\r\n    setSelectedBank(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBanks();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(defaultValues);\r\n  }, [reset, defaultValues]);\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          select\r\n          label=\"بانک\"\r\n          onChange={onChangeBank}\r\n          value={selectedBank}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n          name=\"bank\"\r\n          SelectProps={{\r\n            classes: {\r\n              select: classes.rootSelect,\r\n            },\r\n          }}\r\n        >\r\n          {banks.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              <img\r\n                src={`${Constant.API_ADDRESS}/${option.logo}`}\r\n                alt={option.label}\r\n                style={{\r\n                  width: 25,\r\n                  height: 25,\r\n                  borderRadius: \"50%\",\r\n                  marginLeft: 10,\r\n                }}\r\n              />\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                fullWidth\r\n                value={value}\r\n                size=\"small\"\r\n                name={name}\r\n                label=\"شماره کارت\"\r\n                variant=\"outlined\"\r\n                onChange={onChange}\r\n                error={!!errors.accountCardNumber}\r\n                helperText={\r\n                  errors.accountCardNumber\r\n                    ? errors.accountCardNumber.message\r\n                    : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          rules={{\r\n            minLength: {\r\n              value: 16,\r\n              message: Constant.VALIDATION.CARD_NUMBER,\r\n            },\r\n            maxLength: {\r\n              value: 16,\r\n              message: Constant.VALIDATION.CARD_NUMBER,\r\n            },\r\n          }}\r\n          name=\"accountCardNumber\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                fullWidth\r\n                value={value}\r\n                size=\"small\"\r\n                name={name}\r\n                label=\"شماره حساب\"\r\n                variant=\"outlined\"\r\n                onChange={onChange}\r\n                error={!!errors.accountNumber}\r\n                helperText={\r\n                  errors.accountNumber ? errors.accountNumber.message : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          name=\"accountNumber\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                fullWidth\r\n                value={value}\r\n                size=\"small\"\r\n                name={name}\r\n                label=\"شماره شبا\"\r\n                variant=\"outlined\"\r\n                onChange={onChange}\r\n                error={!!errors.accountShaba}\r\n                helperText={\r\n                  errors.accountShaba ? errors.accountShaba.message : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          name=\"accountShaba\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                label=\"توضیحات\"\r\n                multiline\r\n                rows={4}\r\n                variant=\"outlined\"\r\n                name={name}\r\n                onChange={onChange}\r\n                value={value}\r\n                fullWidth\r\n                error={!!errors.description}\r\n                helperText={\r\n                  errors.description ? errors.description.message : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          name=\"description\"\r\n        />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          onClick={handleSubmit(onDone)}\r\n        >\r\n          تایید\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onDismiss}>\r\n          انصراف\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  IconButton,\r\n  RadioGroup,\r\n  Radio,\r\n  FormControlLabel,\r\n} from \"@material-ui/core\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport { DeleteIcon, EditIcon } from \"../../components/icons\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { getQueryString } from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport Account from \"./account\";\r\nimport CircularProgress from \"../../components/CircularProgress\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingBottom: 7,\r\n    paddingTop: 7,\r\n  },\r\n}));\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"Name\",\r\n    label: \"نام بانک\",\r\n  },\r\n  { id: \"accountNumber\", label: \"شماره حساب \" },\r\n  {\r\n    id: \"CardNumber\",\r\n    label: \"شماره کارت\",\r\n  },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function MainDetail() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const id = getQueryString(\"id\");\r\n  const [detail, setDetail] = useState({});\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [selectedGender, setSelectedGender] = useState(\"M\");\r\n  const [selectedContract, setSelectedContract] = useState(\"FACTORY\");\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n\r\n  const addEmployeeRequest = useApi({\r\n    method: \"post\",\r\n    url: `employee`,\r\n  });\r\n\r\n  const editEmployeeRequest = useApi({\r\n    method: \"put\",\r\n    url: `employee/${id}`,\r\n  });\r\n\r\n  const detailEmployeeRequest = useApi({\r\n    method: \"get\",\r\n    url: `employee/${id}`,\r\n  });\r\n\r\n  const deleteAccountRequest = useApi({\r\n    method: \"delete\",\r\n    url: `account`,\r\n  });\r\n\r\n  const onSubmit = async (data) => {\r\n    const newAccounts = [];\r\n    accounts.map((item) => {\r\n      const newData = {\r\n        bankId: item.bank.value || item.bank.id,\r\n        accountCardNumber: item.accountCardNumber,\r\n        accountNumber: item.accountNumber,\r\n        accountShaba: item.accountShaba,\r\n        description: item.description,\r\n        id: item.id.toString().includes(\"-\") ? null : item.id,\r\n      };\r\n      newAccounts.push(newData);\r\n    });\r\n\r\n    const allData = {\r\n      ...data,\r\n      accounts: newAccounts,\r\n      contractType: selectedContract,\r\n      gender: selectedGender,\r\n    };\r\n    if (id) {\r\n      return await editEmployeeRequest.execute(allData);\r\n    }\r\n    await addEmployeeRequest.execute(allData);\r\n    setTimeout(() => {\r\n      onReject();\r\n    }, 1000);\r\n  };\r\n\r\n  const onReject = () => {\r\n    history.push(\"/app/employee-list\");\r\n  };\r\n\r\n  const getDetail = async () => {\r\n    const detail = await detailEmployeeRequest.execute();\r\n    setDetail(detail.data);\r\n    setAccounts(detail.data.accounts);\r\n    setSelectedGender(detail.data.gender);\r\n    setSelectedContract(detail.data.contractType);\r\n  };\r\n\r\n  const onSubmitAccount = (data) => {\r\n    if (data.isUpdate) {\r\n      const index = accounts.findIndex((item) => item.id === data.id);\r\n      const accounstTmp = [...accounts];\r\n      accounstTmp[index] = data;\r\n      setAccounts(accounstTmp);\r\n    } else {\r\n      setAccounts([...accounts, data]);\r\n    }\r\n    onDismissAccount();\r\n  };\r\n\r\n  const onDismissAccount = () => {\r\n    DialogActions.hide({ name: \"account\" });\r\n  };\r\n\r\n  const onShowDialog = (data) => {\r\n    DialogActions.show({\r\n      title: \" حساب بانکی\",\r\n      component: (\r\n        <Account\r\n          onSubmit={onSubmitAccount}\r\n          onDismiss={onDismissAccount}\r\n          defaultValues={data}\r\n        />\r\n      ),\r\n      name: \"account\",\r\n      size: \"4\",\r\n      confirm: false,\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  const onAddAccount = () => {\r\n    onShowDialog();\r\n  };\r\n\r\n  const handleEditAccount = (data) => {\r\n    onShowDialog(data);\r\n  };\r\n\r\n  const handleDeleteAccount = (row) => {\r\n    DialogActions.show({\r\n      confirm: true,\r\n      title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n      onAction: async () => {\r\n        if (id) {\r\n          await deleteAccountRequest.execute(null, row.id);\r\n        }\r\n        setAccounts(accounts.filter((item) => item.id !== row.id));\r\n        DialogActions.hide({ name: \"delete\" });\r\n      },\r\n      name: \"delete\",\r\n      size: \"6\",\r\n      disableCloseButton: false,\r\n    });\r\n  };\r\n\r\n  const handleChangeGender = (e) => {\r\n    setSelectedGender(e.target.value);\r\n  };\r\n\r\n  const onChangeContract = (e) => {\r\n    setSelectedContract(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      getDetail();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(detail);\r\n  }, [reset, detail]);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        {!detailEmployeeRequest.pending ? (\r\n          <Grid item lg={6} sm={12} className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n              <Typography\r\n                className={classes.title}\r\n                variant=\"h6\"\r\n                id=\"tableTitle\"\r\n                component=\"div\"\r\n              >\r\n                {id ? \"ویرایش پرسنل\" : \"افزودن پرسنل\"}\r\n              </Typography>\r\n\r\n              <Grid container spacing={3}>\r\n                <Fragment>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"نام\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.firstName}\r\n                            helperText={\r\n                              errors.firstName ? errors.firstName.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                      name=\"firstName\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"نام خانوادگی\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.lastName}\r\n                            helperText={\r\n                              errors.lastName ? errors.lastName.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                      name=\"lastName\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"موبایل\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.mobile}\r\n                            helperText={\r\n                              errors.mobile ? errors.mobile.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      rules={{\r\n                        minLength: {\r\n                          value: 11,\r\n                          message: Constant.VALIDATION.MOBILE_NUMBER,\r\n                        },\r\n                        maxLength: {\r\n                          value: 11,\r\n                          message: Constant.VALIDATION.MOBILE_NUMBER,\r\n                        },\r\n                      }}\r\n                      name=\"mobile\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <RadioGroup\r\n                      aria-label=\"gender\"\r\n                      name=\"gender1\"\r\n                      value={selectedGender}\r\n                      onChange={handleChangeGender}\r\n                      style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"row\",\r\n                        justifyContent: \"space-around\",\r\n                      }}\r\n                    >\r\n                      <FormControlLabel\r\n                        color=\"primary\"\r\n                        value=\"M\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"مرد\"\r\n                      />\r\n                      <FormControlLabel\r\n                        color=\"primary\"\r\n                        value=\"F\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"زن\"\r\n                      />\r\n                    </RadioGroup>\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            type=\"number\"\r\n                            variant=\"outlined\"\r\n                            label=\"مانده از قبل\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.accountRemaining}\r\n                            helperText={\r\n                              errors.accountRemaining\r\n                                ? errors.accountRemaining.message\r\n                                : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"accountRemaining\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item lg={6} xs={12}>\r\n                    <TextField\r\n                      select\r\n                      label=\"نوع قرارداد\"\r\n                      value={selectedContract}\r\n                      onChange={onChangeContract}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      size=\"small\"\r\n                    >\r\n                      {Constant.EMPLOYEE_CONTACRT.map((option) => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </TextField>\r\n                  </Grid>\r\n\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={onAddAccount}\r\n                    >\r\n                      افزودن حساب بانکی\r\n                    </Button>\r\n                  </Grid>\r\n                  {!!accounts.length && (\r\n                    <Grid item xs={12}>\r\n                      <Paper>\r\n                        <TableContainer style={{ padding: \"0 10px\" }}>\r\n                          <Table\r\n                            className={classes.table}\r\n                            size={\"medium\"}\r\n                            style={{ paddingRight: 10 }}\r\n                          >\r\n                            <TableHeader headCells={headCells} />\r\n\r\n                            <TableBody>\r\n                              {accounts.map((row) => {\r\n                                return (\r\n                                  <TableRow\r\n                                    hover\r\n                                    tabIndex={-1}\r\n                                    key={row.id}\r\n                                    style={{ paddingRight: 10 }}\r\n                                  >\r\n                                    <TableCell padding=\"none\">\r\n                                      <div\r\n                                        style={{\r\n                                          display: \"flex\",\r\n                                          alignItems: \"center\",\r\n                                        }}\r\n                                      >\r\n                                        <img\r\n                                          src={`${Constant.API_ADDRESS}/${row.bank.logo}`}\r\n                                          alt={row.bank.label}\r\n                                          style={{\r\n                                            width: 25,\r\n                                            height: 25,\r\n                                            borderRadius: \"50%\",\r\n                                            marginLeft: 5,\r\n                                          }}\r\n                                        />\r\n                                        {row.bank.label || row.bank.name}\r\n                                      </div>\r\n                                    </TableCell>\r\n                                    <TableCell padding=\"none\">\r\n                                      {row.accountNumber}\r\n                                    </TableCell>\r\n                                    <TableCell padding=\"none\">\r\n                                      {row.accountCardNumber}\r\n                                    </TableCell>\r\n\r\n                                    <TableCell\r\n                                      padding=\"none\"\r\n                                      style={{ textAlign: \"left\" }}\r\n                                    >\r\n                                      <IconButton\r\n                                        onClick={() => handleEditAccount(row)}\r\n                                      >\r\n                                        <EditIcon />\r\n                                      </IconButton>\r\n\r\n                                      <IconButton\r\n                                        onClick={() => handleDeleteAccount(row)}\r\n                                      >\r\n                                        <DeleteIcon />\r\n                                      </IconButton>\r\n                                    </TableCell>\r\n                                  </TableRow>\r\n                                );\r\n                              })}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                      </Paper>\r\n                    </Grid>\r\n                  )}\r\n\r\n                  <Grid item xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"آدرس\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.address}\r\n                            helperText={\r\n                              errors.address ? errors.address.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"address\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            label=\"توضیحات\"\r\n                            multiline\r\n                            rows={4}\r\n                            variant=\"outlined\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            fullWidth\r\n                            error={!!errors.description}\r\n                            helperText={\r\n                              errors.description\r\n                                ? errors.description.message\r\n                                : \"\"\r\n                            }\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"description\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                  >\r\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                      تایید\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      onClick={onReject}\r\n                    >\r\n                      بازگشت\r\n                    </Button>\r\n                  </Grid>\r\n                </Fragment>\r\n              </Grid>\r\n            </Paper>\r\n          </Grid>\r\n        ) : (\r\n          <CircularProgress />\r\n        )}\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  tab: {\r\n    borderBottom: `1px solid ${theme.palette.gray.main}`,\r\n  },\r\n  type: {\r\n    color: \"#fff\",\r\n  },\r\n  allIcon: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  SELL: {\r\n    backgroundColor: theme.palette.success.main,\r\n  },\r\n  incomeIcon: {\r\n    color: theme.palette.success.main,\r\n  },\r\n  BUY: {\r\n    backgroundColor: theme.palette.danger.main,\r\n  },\r\n  outgoIcon: {\r\n    color: theme.palette.danger.main,\r\n  },\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingBottom: 7,\r\n    paddingTop: 7,\r\n  },\r\n  selectedButton: {\r\n    backgroundColor: theme.palette.success.main,\r\n    color: \"#fff\",\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.success.main,\r\n    },\r\n  },\r\n}));\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, TextField, MenuItem, Button, Divider } from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n}));\r\nconst Filter = ({ onFilter }) => {\r\n  const classes = useStyles();\r\n  const [selectedPerson, setSelectedPerson] = useState();\r\n  const [selectedFromDate, handleFromDateChange] = useState(moment());\r\n  const [selectedToDate, handleToDateChange] = useState(moment());\r\n  const [customers, setCustomers] = useState([]);\r\n\r\n  const getCustomersRequest = useApi({\r\n    method: \"get\",\r\n    url: \"customer\",\r\n  });\r\n\r\n  const onChangePerson = (e, value) => {\r\n    setSelectedPerson(value);\r\n  };\r\n\r\n  const onChnageDate = (e, type) => {\r\n    if (type === \"from\") {\r\n      handleFromDateChange(e);\r\n    } else {\r\n      handleToDateChange(e);\r\n    }\r\n  };\r\n\r\n  const getCustomers = async () => {\r\n    const customerList = await getCustomersRequest.execute();\r\n    setCustomers(customerList.data);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (typeof onFilter === \"function\") {\r\n      onFilter(\r\n        `{customerId:${\r\n          selectedPerson ? selectedPerson.id : null\r\n        },from:${selectedFromDate._d.toISOString()},to:${selectedToDate._d.toISOString()}}`,\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCustomers();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container spacing={3} alignItems=\"center\" style={{ padding: 10 }}>\r\n      <Grid item lg={3} xs={12} style={{ display: \"flex\" }}>\r\n        <Autocomplete\r\n          id=\"combo-box-demo\"\r\n          onChange={onChangePerson}\r\n          options={customers}\r\n          getOptionLabel={(option) => `${option.firstName} ${option.lastName}`}\r\n          fullWidth\r\n          size=\"small\"\r\n          renderInput={(params) => (\r\n            <TextField {...params} label=\"انتخاب شخص\" variant=\"outlined\" />\r\n          )}\r\n        />\r\n      </Grid>\r\n      <Grid item lg={3} xs={12} className={classes.datePicker}>\r\n        <DatePicker\r\n          autoOk\r\n          name=\"date\"\r\n          label=\"از تاریخ\"\r\n          inputVariant=\"outlined\"\r\n          okLabel=\"تأیید\"\r\n          cancelLabel=\"لغو\"\r\n          labelFunc={(date) => (date ? date.format(\"jYYYY/jMM/jDD\") : \"\")}\r\n          value={selectedFromDate}\r\n          onChange={(e) => onChnageDate(e, \"from\")}\r\n          style={{ width: \"100%\" }}\r\n        />\r\n      </Grid>\r\n      <Grid item lg={3} xs={12} className={classes.datePicker}>\r\n        <DatePicker\r\n          autoOk\r\n          name=\"date\"\r\n          label=\"تا تاریخ\"\r\n          inputVariant=\"outlined\"\r\n          okLabel=\"تأیید\"\r\n          cancelLabel=\"لغو\"\r\n          labelFunc={(date) => (date ? date.format(\"jYYYY/jMM/jDD\") : \"\")}\r\n          value={selectedToDate}\r\n          onChange={(e) => onChnageDate(e, \"to\")}\r\n          style={{ width: \"100%\" }}\r\n        />\r\n      </Grid>\r\n      <Grid item lg={3} xs={12}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n          تایید\r\n        </Button>\r\n      </Grid>\r\n      <Divider style={{ width: \"100%\" }} />\r\n    </Grid>\r\n  );\r\n};\r\nexport default Filter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Tabs,\r\n  Tab,\r\n  Chip,\r\n} from \"@material-ui/core\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport {\r\n  convertParamsToQueryString,\r\n  persianNumber,\r\n  hasPermission,\r\n} from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport clsx from \"clsx\";\r\nimport { getQueryString } from \"../../helpers/utils\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\nimport FilterComponent from \"./filter\";\r\n\r\nconst headCells = [\r\n  { id: \"id\", label: \"شماره فاکتور\" },\r\n  {\r\n    id: \"person\",\r\n    label: \"مشتری\",\r\n  },\r\n  {\r\n    id: \"date\",\r\n    label: \"تاریخ\",\r\n  },\r\n  { id: \"price\", label: \"مبلغ\" },\r\n  {\r\n    id: \"category\",\r\n    label: \"دسته بندی\",\r\n  },\r\n  {\r\n    id: \"type\",\r\n    label: \"نوع\",\r\n  },\r\n\r\n  // { id: \"action\" },\r\n];\r\n\r\nconst MainList = () => {\r\n  const invoiceType = getQueryString(\"type\");\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"date\");\r\n  const [search, setSearch] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [filter, setFilter] = useState();\r\n  const [total, setTotal] = useState(0);\r\n  const [type, setType] = useState(invoiceType);\r\n  const history = useHistory();\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onAdd = () => {\r\n    history.push(`/app/invoice-detail?type=${type}`);\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const getInvoiceRequest = useApi({\r\n    method: \"get\",\r\n    url: decodeURIComponent(\r\n      `invoice?${convertParamsToQueryString({\r\n        page,\r\n        order,\r\n        orderBy,\r\n        pageSize,\r\n        search,\r\n        type,\r\n        filter,\r\n      })}`,\r\n    ),\r\n  });\r\n\r\n  const deleteUseRequest = useApi({\r\n    method: \"delete\",\r\n    url: `invoice`,\r\n  });\r\n\r\n  const handleAction = (id, type) => {\r\n    const types = {\r\n      edit: () => {\r\n        history.push(`/app/invoice-detail?type=${type}&id=${id}`);\r\n      },\r\n      delete: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            await deleteUseRequest.execute(null, id);\r\n            setList(list.filter((item) => item.id !== id));\r\n            DialogActions.hide({ name: \"delete\" });\r\n          },\r\n          name: \"delete\",\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const onChangeType = (e, value) => {\r\n    setType(value);\r\n  };\r\n\r\n  const getTableTitle = () => {\r\n    if (type === \"SELL\") {\r\n      return \"لیست فاکتورهای فروش \";\r\n    } else if (type === \"BUY\") {\r\n      return \"لیست فاکتورهای خرید\";\r\n    }\r\n    return \"لیست تمامی فاکتور ها\";\r\n  };\r\n\r\n  const getData = async () => {\r\n    const invoiceList = await getInvoiceRequest.execute();\r\n    setList(invoiceList.data);\r\n    setTotal(invoiceList.total);\r\n  };\r\n\r\n  const onFilter = (data) => {\r\n    setFilter(data);\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize, type, filter]);\r\n\r\n  useEffect(() => {\r\n    setType(invoiceType);\r\n  }, [invoiceType]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.INVOICE_SHOW) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getInvoiceRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title={getTableTitle()}\r\n                    onAdd={type !== \"ALL\" && onAdd}\r\n                    handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                    FilterComponent={<FilterComponent onFilter={onFilter} />}\r\n                  />\r\n                  <div className={classes.tab}>\r\n                    <Tabs\r\n                      variant=\"fullWidth\"\r\n                      value={type}\r\n                      onChange={onChangeType}\r\n                      indicatorColor=\"primary\"\r\n                      textColor=\"primary\"\r\n                      centered\r\n                    >\r\n                      <Tab\r\n                        icon={\r\n                          <i\r\n                            className={clsx(\r\n                              \"material-icons-round\",\r\n                              classes.allIcon,\r\n                            )}\r\n                          >\r\n                            sync\r\n                          </i>\r\n                        }\r\n                        label=\"کل تراکنش ها\"\r\n                        value=\"ALL\"\r\n                      />\r\n                      <Tab\r\n                        icon={\r\n                          <i\r\n                            className={clsx(\r\n                              \"material-icons-round\",\r\n                              classes.incomeIcon,\r\n                            )}\r\n                          >\r\n                            sell\r\n                          </i>\r\n                        }\r\n                        label=\"فاکتور های فروش\"\r\n                        value=\"SELL\"\r\n                      />\r\n                      <Tab\r\n                        icon={\r\n                          <i\r\n                            className={clsx(\r\n                              \"material-icons-round\",\r\n                              classes.outgoIcon,\r\n                            )}\r\n                          >\r\n                            shopping_basket\r\n                          </i>\r\n                        }\r\n                        label=\"فاکتور های خرید\"\r\n                        value=\"BUY\"\r\n                      />\r\n                    </Tabs>\r\n                  </div>\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                            >\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(row.id)}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.globalCustomer\r\n                                  ? `${row.globalCustomer}(${row.customer})`\r\n                                  : row.customer}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  new Date(row.date).toLocaleDateString(\r\n                                    \"fa-IR\",\r\n                                  ),\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  Number(row.price).toLocaleString(),\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.category}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                <Chip\r\n                                  label={Constant.INVOICE_TYPE[row.type]}\r\n                                  className={clsx(\r\n                                    classes.type,\r\n                                    classes[row.type],\r\n                                  )}\r\n                                />\r\n                              </TableCell>\r\n\r\n                              <TableCell padding=\"none\">\r\n                                <TableRowMenu\r\n                                  options={\r\n                                    [\r\n                                      // { id: \"edit\", title: \"ویرایش\" },\r\n                                      // { id: \"delete\", title: \"حذف\" },\r\n                                    ]\r\n                                  }\r\n                                  hadleAction={(type) =>\r\n                                    handleAction(row.id, type)\r\n                                  }\r\n                                />\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getInvoiceRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default MainList;\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  tab: {\r\n    borderBottom: `1px solid ${theme.palette.gray.main}`,\r\n  },\r\n  type: {\r\n    color: \"#fff\",\r\n  },\r\n  allIcon: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  INCOME: {\r\n    backgroundColor: theme.palette.success.main,\r\n  },\r\n  incomeIcon: {\r\n    color: theme.palette.success.main,\r\n  },\r\n  OUTCOME: {\r\n    backgroundColor: theme.palette.danger.main,\r\n  },\r\n  outgoIcon: {\r\n    color: theme.palette.danger.main,\r\n  },\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingBottom: 7,\r\n    paddingTop: 7,\r\n  },\r\n}));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Typography,\r\n  Chip,\r\n  Button,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { convertParamsToQueryString } from \"../../helpers/utils\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\n\r\nconst headCellsCustomer = [\r\n  {\r\n    id: \"firstName\",\r\n    label: \"نام\",\r\n  },\r\n  { id: \"lastName\", label: \"نام خانوادگی\" },\r\n\r\n  { id: \"status\", label: \"وضعیت\" },\r\n  { id: \"action\" },\r\n];\r\nconst headCellsPerson = [\r\n  { id: \"lastName\", label: \"نام و نام خانوادگی\" },\r\n  { id: \"type\", label: \"نوع شخص\" },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nconst PERSON_TYPE = {\r\n  EMPLOYEE: \"پرسنل\",\r\n  CUSTOMER: \"مشتری\",\r\n  DRIVER: \"راننده\",\r\n};\r\n\r\nexport default function MainList({ onSelect, onDismiss, filter }) {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [search, setSearch] = useState();\r\n  const [orderBy, setOrderBy] = useState(\"firstName\");\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onSelectPerson = (data) => {\r\n    onSelect(data);\r\n  };\r\n\r\n  const getCustomerRequest = useApi({\r\n    method: \"get\",\r\n    url: `${filter}?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n    })}`,\r\n  });\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n  };\r\n\r\n  const getData = async () => {\r\n    const customerList = await getCustomerRequest.execute();\r\n    setList(customerList.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize]);\r\n\r\n  return (\r\n    <div style={{ marginTop: -20 }}>\r\n      <TableTop handleSearch={onSearch} />\r\n      <TableContainer>\r\n        <Table className={classes.table} size={\"medium\"}>\r\n          <TableHeader\r\n            classes={classes}\r\n            order={order}\r\n            orderBy={orderBy}\r\n            onRequestSort={handleRequestSort}\r\n            rowCount={list.length}\r\n            headCells={\r\n              filter === \"person\" ? headCellsPerson : headCellsCustomer\r\n            }\r\n          />\r\n\r\n          <TableBody>\r\n            {list.map((row) => {\r\n              return (\r\n                <TableRow\r\n                  hover\r\n                  tabIndex={-1}\r\n                  key={filter === \"customer\" ? row.id : row.value}\r\n                  style={{ paddingRight: 10 }}\r\n                >\r\n                  {filter === \"person\" && (\r\n                    <TableCell padding=\"none\">{row.label}</TableCell>\r\n                  )}\r\n                  {filter === \"person\" && (\r\n                    <TableCell padding=\"none\">\r\n                      {PERSON_TYPE[row.personType]}\r\n                    </TableCell>\r\n                  )}\r\n\r\n                  {filter === \"customer\" && (\r\n                    <TableCell padding=\"none\">{row.firstName}</TableCell>\r\n                  )}\r\n                  {filter === \"customer\" && (\r\n                    <TableCell padding=\"none\">{row.lastName}</TableCell>\r\n                  )}\r\n\r\n                  {filter === \"customer\" && (\r\n                    <TableCell padding=\"none\">\r\n                      <Chip\r\n                        label={Constant.PERSON_STATUS[row.status]}\r\n                        className={clsx(classes.status, classes[row.status])}\r\n                      />\r\n                    </TableCell>\r\n                  )}\r\n\r\n                  <TableCell padding=\"none\">\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={() => onSelectPerson(row)}\r\n                    >\r\n                      انتخاب شخص\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n            {!list.length && !getCustomerRequest.pending && (\r\n              <TableRow style={{ height: 53 }}>\r\n                <TableCell colSpan={6} style={{ textAlign: \"center\" }}>\r\n                  <Typography variant=\"h6\">\r\n                    داده ای برای نمایش وجود ندارد\r\n                  </Typography>\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePaging\r\n        count={list.length}\r\n        handleChangePage={handleChangePage}\r\n        handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n        page={page}\r\n        rowsPerPage={pageSize}\r\n      />\r\n\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n      >\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n          انصراف\r\n        </Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Grid, MenuItem } from \"@material-ui/core\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport moment from \"moment\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport styles from \"./style\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nconst Payment = ({ onSubmit, onDismiss, defaultValues, paymentType, type }) => {\r\n  const [banks, setBanks] = useState([]);\r\n  const [chequeDueDate, handleChequeDueDateChange] = useState(moment());\r\n  const [selectedTransaction, setSelectedTransaction] = useState(\r\n    defaultValues?.transactionType,\r\n  );\r\n  const [selectedBank, setSelectedBank] = useState(defaultValues?.bankId || 1);\r\n  const [cashes, setCashes] = useState([]);\r\n  const [selectedCash, setSelectedCash] = useState(\r\n    defaultValues?.cashDeskId || 5,\r\n  );\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n  const classes = styles();\r\n\r\n  const getBankRequest = useApi({\r\n    method: \"get\",\r\n    url: `bank`,\r\n  });\r\n\r\n  const getCashRequest = useApi({\r\n    method: \"get\",\r\n    url: `cashdesk/picker`,\r\n  });\r\n\r\n  const getBanks = async () => {\r\n    const result = await getBankRequest.execute();\r\n    setBanks(result.data);\r\n  };\r\n\r\n  const getCashes = async () => {\r\n    const result = await getCashRequest.execute();\r\n    setCashes(result.data);\r\n  };\r\n\r\n  const getSelectedBank = () => {\r\n    return banks.find((item) => item.value === selectedBank);\r\n  };\r\n\r\n  const getSelectedCash = () => {\r\n    return cashes.find((item) => item.value === selectedCash);\r\n  };\r\n\r\n  const onDone = (data) => {\r\n    const newId = uuid();\r\n    let value;\r\n    if (type === \"NAGHD\") {\r\n      value = {\r\n        ...data,\r\n        id: defaultValues ? defaultValues.id : newId,\r\n        cashDeskId: selectedCash,\r\n        cashDesk: getSelectedCash(),\r\n        isUpdate: !!defaultValues,\r\n      };\r\n    } else if (type === \"CARD\") {\r\n      value = {\r\n        ...data,\r\n        id: defaultValues ? defaultValues.id : newId,\r\n        cashDeskId: selectedCash,\r\n        bankId: selectedBank,\r\n        cashDesk: getSelectedCash(),\r\n        bank: getSelectedBank(),\r\n        transactionType: selectedTransaction,\r\n        isUpdate: !!defaultValues,\r\n      };\r\n    } else {\r\n      value = {\r\n        ...data,\r\n        id: defaultValues ? defaultValues.id : newId,\r\n        cashDeskId: selectedCash,\r\n        bankId: selectedBank,\r\n        cashDesk: getSelectedCash(),\r\n        bank: getSelectedBank(),\r\n        chequeDueDate: chequeDueDate._d,\r\n        isUpdate: !!defaultValues,\r\n      };\r\n    }\r\n    return onSubmit(value, type, !!defaultValues);\r\n  };\r\n\r\n  const onChangeBank = (e) => {\r\n    setSelectedBank(e.target.value);\r\n  };\r\n\r\n  const onChangeTransaction = (e) => {\r\n    setSelectedTransaction(e.target.value);\r\n  };\r\n\r\n  const onChangeCash = (e) => {\r\n    setSelectedCash(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBanks();\r\n    getCashes();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(defaultValues);\r\n  }, [reset, defaultValues]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onDone)}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          {type === \"NAGHD\" && (\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  select\r\n                  label=\"صندوق\"\r\n                  onChange={onChangeCash}\r\n                  value={selectedCash}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  name=\"cash\"\r\n                >\r\n                  {cashes.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Controller\r\n                  control={control}\r\n                  render={({ onChange, value, name }) => {\r\n                    return (\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        label=\"مبلغ نقدی\"\r\n                        type=\"number\"\r\n                        name={name}\r\n                        onChange={onChange}\r\n                        value={value}\r\n                        error={!!errors.price}\r\n                        helperText={errors.price ? errors.price.message : \"\"}\r\n                        fullWidth\r\n                        size=\"small\"\r\n                      />\r\n                    );\r\n                  }}\r\n                  name=\"price\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n          {type === \"CARD\" && (\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  select\r\n                  label=\"صندوق\"\r\n                  onChange={onChangeCash}\r\n                  value={selectedCash}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  name=\"cash\"\r\n                >\r\n                  {cashes.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  select\r\n                  label=\"نوع تراکنش\"\r\n                  onChange={onChangeTransaction}\r\n                  value={selectedTransaction}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  name=\"cash\"\r\n                >\r\n                  {Constant.BANK_TRANSACTION_TYPE.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Controller\r\n                  control={control}\r\n                  render={({ onChange, value, name }) => {\r\n                    return (\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        label=\"مبلغ \"\r\n                        type=\"number\"\r\n                        name={name}\r\n                        onChange={onChange}\r\n                        value={value}\r\n                        error={!!errors.price}\r\n                        helperText={errors.price ? errors.price.message : \"\"}\r\n                        fullWidth\r\n                        size=\"small\"\r\n                      />\r\n                    );\r\n                  }}\r\n                  rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                  name=\"price\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Controller\r\n                  control={control}\r\n                  render={({ onChange, value, name }) => {\r\n                    return (\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        label=\"شماره رهگیری\"\r\n                        number\r\n                        name={name}\r\n                        onChange={onChange}\r\n                        value={value}\r\n                        error={!!errors.trackingCode}\r\n                        helperText={\r\n                          errors.trackingCode ? errors.trackingCode.message : \"\"\r\n                        }\r\n                        fullWidth\r\n                        size=\"small\"\r\n                      />\r\n                    );\r\n                  }}\r\n                  name=\"trackingCode\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  select\r\n                  label=\"بانک\"\r\n                  onChange={onChangeBank}\r\n                  value={selectedBank}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  name=\"bank\"\r\n                  SelectProps={{\r\n                    classes: {\r\n                      select: classes.rootSelect,\r\n                    },\r\n                  }}\r\n                >\r\n                  {banks.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      <img\r\n                        src={`${Constant.API_ADDRESS}/${option.logo}`}\r\n                        alt={option.label}\r\n                        style={{\r\n                          width: 25,\r\n                          height: 25,\r\n                          borderRadius: \"50%\",\r\n                          marginLeft: 10,\r\n                        }}\r\n                      />\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n          {type === \"CHECK\" && (\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  select\r\n                  label=\"صندوق\"\r\n                  onChange={onChangeCash}\r\n                  value={selectedCash}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  name=\"cash\"\r\n                >\r\n                  {cashes.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Controller\r\n                  control={control}\r\n                  render={({ onChange, value, name }) => {\r\n                    return (\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        label=\"مبلغ چک\"\r\n                        type=\"number\"\r\n                        name={name}\r\n                        onChange={onChange}\r\n                        value={value}\r\n                        error={!!errors.price}\r\n                        helperText={errors.price ? errors.price.message : \"\"}\r\n                        fullWidth\r\n                        size=\"small\"\r\n                      />\r\n                    );\r\n                  }}\r\n                  rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                  name=\"price\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Controller\r\n                  control={control}\r\n                  render={({ onChange, value, name }) => {\r\n                    return (\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        label=\"شماره چک\"\r\n                        number\r\n                        name={name}\r\n                        onChange={onChange}\r\n                        value={value}\r\n                        error={!!errors.chequeNumber}\r\n                        helperText={\r\n                          errors.chequeNumber ? errors.chequeNumber.message : \"\"\r\n                        }\r\n                        fullWidth\r\n                        size=\"small\"\r\n                      />\r\n                    );\r\n                  }}\r\n                  name=\"chequeNumber\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  select\r\n                  label=\"بانک\"\r\n                  onChange={onChangeBank}\r\n                  value={selectedBank}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  name=\"bank\"\r\n                  SelectProps={{\r\n                    classes: {\r\n                      select: classes.rootSelect,\r\n                    },\r\n                  }}\r\n                >\r\n                  {banks.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      <img\r\n                        src={`${Constant.API_ADDRESS}/${option.logo}`}\r\n                        alt={option.label}\r\n                        style={{\r\n                          width: 25,\r\n                          height: 25,\r\n                          borderRadius: \"50%\",\r\n                          marginLeft: 10,\r\n                        }}\r\n                      />\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Controller\r\n                  control={control}\r\n                  render={({ onChange, value, name }) => {\r\n                    return (\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        label=\"شعبه\"\r\n                        number\r\n                        name={name}\r\n                        onChange={onChange}\r\n                        value={value}\r\n                        error={!!errors.bankBranch}\r\n                        helperText={\r\n                          errors.bankBranch ? errors.bankBranch.message : \"\"\r\n                        }\r\n                        fullWidth\r\n                        size=\"small\"\r\n                      />\r\n                    );\r\n                  }}\r\n                  name=\"bankBranch\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} className={classes.datePicker}>\r\n                <DatePicker\r\n                  name=\"date\"\r\n                  label=\"تاریخ سررسید\"\r\n                  inputVariant=\"outlined\"\r\n                  okLabel=\"تأیید\"\r\n                  cancelLabel=\"لغو\"\r\n                  labelFunc={(date) =>\r\n                    date ? date.format(\"jYYYY/jMM/jDD\") : \"\"\r\n                  }\r\n                  value={chequeDueDate}\r\n                  onChange={handleChequeDueDateChange}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Controller\r\n                  control={control}\r\n                  render={({ onChange, value, name }) => {\r\n                    return (\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        label=\"در وجه\"\r\n                        number\r\n                        name={name}\r\n                        onChange={onChange}\r\n                        value={value}\r\n                        error={!!errors.chequePayTo}\r\n                        helperText={\r\n                          errors.chequePayTo ? errors.chequePayTo.message : \"\"\r\n                        }\r\n                        fullWidth\r\n                        size=\"small\"\r\n                      />\r\n                    );\r\n                  }}\r\n                  name=\"chequePayTo\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            onClick={handleSubmit(onDone)}\r\n          >\r\n            تایید\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n            انصراف\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Payment;\r\n","import React, { useEffect, useState, useImperativeHandle } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  Button,\r\n  ButtonGroup,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Accordion,\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport { DeleteIcon, EditIcon } from \"../../components/icons\";\r\nimport { getQueryString, persianNumber } from \"../../helpers/utils\";\r\nimport dialogAction from \"../../redux/actions/dialogAction\";\r\nimport Payment from \"./paymnet\";\r\nimport update from \"immutability-helper\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingBottom: 7,\r\n    paddingTop: 7,\r\n  },\r\n}));\r\n\r\nconst naghdPayHeadCells = [\r\n  { id: \"cash\", label: \"صندوق\" },\r\n  {\r\n    id: \"amount\",\r\n    label: \"مبلغ \",\r\n  },\r\n  { id: \"action\" },\r\n];\r\nconst cardPayHeadCells = [\r\n  { id: \"cash\", label: \"صندوق\" },\r\n  {\r\n    id: \"amount\",\r\n    label: \"مبلغ \",\r\n  },\r\n  {\r\n    id: \"type\",\r\n    label: \"نوع تراکنش \",\r\n  },\r\n  {\r\n    id: \"bank\",\r\n    label: \"بانک \",\r\n  },\r\n  {\r\n    id: \"code\",\r\n    label: \"شماره رهگیری \",\r\n  },\r\n  { id: \"action\" },\r\n];\r\nconst checkPayHeadCells = [\r\n  { id: \"cash\", label: \"صندوق\" },\r\n  {\r\n    id: \"amount\",\r\n    label: \"مبلغ \",\r\n  },\r\n  { id: \"dueDate\", label: \"تاریخ سررسید\" },\r\n  {\r\n    id: \"bank\",\r\n    label: \"بانک \",\r\n  },\r\n  { id: \"action\" },\r\n];\r\n\r\nconst PrePayment = React.forwardRef((props, ref) => {\r\n  const { defaultValues } = props;\r\n  const classes = useStyles();\r\n  const paymentType = getQueryString(\"type\");\r\n  const [payments, setPayments] = useState();\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return payments;\r\n  });\r\n\r\n  const onSubmitPaymentActions = (value, type, isEdit) => {\r\n    if (isEdit) {\r\n      return handleSubmitEditPayment(value, type);\r\n    }\r\n    return handleSubmitAddPayment(value, type);\r\n  };\r\n\r\n  const handleSubmitAddPayment = (value, type) => {\r\n    let newPayments;\r\n    const types = {\r\n      NAGHD: () => {\r\n        newPayments = update(payments, {\r\n          cashes: { $push: [value] },\r\n        });\r\n      },\r\n      CARD: () => {\r\n        newPayments = update(payments, {\r\n          banks: { $push: [value] },\r\n        });\r\n      },\r\n      CHECK: () => {\r\n        newPayments = update(payments, {\r\n          cheques: { $push: [value] },\r\n        });\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n      setPayments(newPayments);\r\n      dialogAction.hide({ name: \"prePayment\" });\r\n    }\r\n  };\r\n\r\n  const handleSubmitEditPayment = (value, type) => {\r\n    let newPayments;\r\n    const types = {\r\n      NAGHD: () => {\r\n        const index = payments.cashes.findIndex((item) => item.id === value.id);\r\n        newPayments = update(payments, {\r\n          cashes: {\r\n            [index]: { $set: value },\r\n          },\r\n        });\r\n      },\r\n      CARD: () => {\r\n        const index = payments.banks.findIndex((item) => item.id === value.id);\r\n        newPayments = update(payments, {\r\n          banks: {\r\n            [index]: { $set: value },\r\n          },\r\n        });\r\n      },\r\n      CHECK: () => {\r\n        const index = payments.cheques.findIndex(\r\n          (item) => item.id === value.id,\r\n        );\r\n        newPayments = update(payments, {\r\n          cheques: {\r\n            [index]: { $set: value },\r\n          },\r\n        });\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n      setPayments(newPayments);\r\n      dialogAction.hide({ name: \"prePayment\" });\r\n    }\r\n  };\r\n\r\n  const handleDeletePayment = (value, type) => {\r\n    dialogAction.show({\r\n      confirm: true,\r\n      title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n      onAction: () => {\r\n        let newPayments;\r\n        const types = {\r\n          NAGHD: () => {\r\n            const index = payments.cashes.findIndex(\r\n              (item) => item.id === value.id,\r\n            );\r\n            newPayments = update(payments, {\r\n              cashes: { $splice: [[index, 1]] },\r\n            });\r\n          },\r\n          CARD: () => {\r\n            const index = payments.banks.findIndex(\r\n              (item) => item.id === value.id,\r\n            );\r\n            newPayments = update(payments, {\r\n              banks: { $splice: [[index, 1]] },\r\n            });\r\n          },\r\n          CHECK: () => {\r\n            const index = payments.cheques.findIndex(\r\n              (item) => item.id === value.id,\r\n            );\r\n            newPayments = update(payments, {\r\n              cheques: { $splice: [[index, 1]] },\r\n            });\r\n          },\r\n        };\r\n        if (types[type]) {\r\n          types[type]();\r\n          setPayments(newPayments);\r\n          dialogAction.hide({ name: \"delete\" });\r\n        }\r\n      },\r\n      name: \"delete\",\r\n      size: \"6\",\r\n      disableCloseButton: false,\r\n    });\r\n  };\r\n\r\n  const onDismissPayment = () => {\r\n    dialogAction.hide({ name: \"prePayment\" });\r\n  };\r\n\r\n  const onClickPayment = (type, data) => {\r\n    dialogAction.show({\r\n      title: `${paymentType === \"INCOME\" ? \"دریافت\" : \"پرداخت\"} ${\r\n        type === \"NAGHD\" ? \"نقدی\" : type === \"CARD\" ? \"کارتی\" : \"چکی\"\r\n      }`,\r\n      component: (\r\n        <Payment\r\n          onSubmit={onSubmitPaymentActions}\r\n          onDismiss={onDismissPayment}\r\n          defaultValues={data}\r\n          paymentType={paymentType}\r\n          type={type}\r\n        />\r\n      ),\r\n      name: \"prePayment\",\r\n      size: \"4\",\r\n      confirm: false,\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  const getButtonTitle = (type) => {\r\n    const types = {\r\n      NAGHD: () => {\r\n        return (\r\n          <Typography variant=\"button\">\r\n            {paymentType === \"INCOME\" ? \"دریافت نقدی\" : \"پرداخت نقدی\"}(\r\n            {payments?.cashes.length})\r\n          </Typography>\r\n        );\r\n      },\r\n      CARD: () => {\r\n        return (\r\n          <Typography variant=\"button\">\r\n            {paymentType === \"INCOME\" ? \"دریافت کارتی\" : \"پرداخت کارتی\"}(\r\n            {payments?.banks.length})\r\n          </Typography>\r\n        );\r\n      },\r\n      CHECK: () => {\r\n        return (\r\n          <Typography variant=\"button\">\r\n            {paymentType === \"INCOME\" ? \"دریافت چکی\" : \"پرداخت چکی\"}(\r\n            {payments?.cheques.length})\r\n          </Typography>\r\n        );\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      return types[type]();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setPayments(defaultValues);\r\n  }, [defaultValues]);\r\n\r\n  useEffect(() => {\r\n    if (typeof props.onSubmit === \"function\") {\r\n      props.onSubmit(payments);\r\n    }\r\n  }, [payments]);\r\n\r\n  return (\r\n    <>\r\n      <Grid item xs={12} style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <ButtonGroup color=\"primary\">\r\n          <Button\r\n            startIcon={<i className=\"material-icons-round\">local_atm</i>}\r\n            onClick={() => onClickPayment(\"NAGHD\")}\r\n          >\r\n            {getButtonTitle(\"NAGHD\")}\r\n          </Button>\r\n          <Button\r\n            startIcon={<i className=\"material-icons-round\">payment</i>}\r\n            onClick={() => onClickPayment(\"CARD\")}\r\n          >\r\n            {getButtonTitle(\"CARD\")}\r\n          </Button>\r\n          <Button\r\n            startIcon={<i className=\"material-icons-round\">payments</i>}\r\n            onClick={() => onClickPayment(\"CHECK\")}\r\n          >\r\n            {getButtonTitle(\"CHECK\")}\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Grid>\r\n\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Accordion\r\n            expanded={payments?.cashes.length}\r\n            disabled={!payments?.cashes.length}\r\n          >\r\n            <AccordionSummary\r\n              className={classes.accordionSummary}\r\n              expandIcon={<i className=\"material-icons-round\">expand_more</i>}\r\n              aria-controls=\"panel1a-content\"\r\n              id=\"panel1a-header\"\r\n            >\r\n              <Typography className={classes.heading}>نقدی ها</Typography>\r\n            </AccordionSummary>\r\n            {!!payments?.cashes.length && (\r\n              <AccordionDetails>\r\n                <Grid item xs={12}>\r\n                  <Paper>\r\n                    <TableContainer style={{ padding: \"0 10px\" }}>\r\n                      <Table\r\n                        className={classes.table}\r\n                        size={\"medium\"}\r\n                        style={{ paddingRight: 10 }}\r\n                      >\r\n                        <TableHeader headCells={naghdPayHeadCells} />\r\n\r\n                        <TableBody>\r\n                          {payments?.cashes.map((row) => {\r\n                            return (\r\n                              <TableRow\r\n                                hover\r\n                                tabIndex={-1}\r\n                                key={row.id}\r\n                                style={{ paddingRight: 10 }}\r\n                              >\r\n                                <TableCell padding=\"none\">\r\n                                  <div\r\n                                    style={{\r\n                                      display: \"flex\",\r\n                                      alignItems: \"center\",\r\n                                    }}\r\n                                  >\r\n                                    {row.cashDesk?.label}\r\n                                  </div>\r\n                                </TableCell>\r\n                                <TableCell padding=\"none\">\r\n                                  {persianNumber(\r\n                                    Number(row.price).toLocaleString(),\r\n                                  )}\r\n                                </TableCell>\r\n\r\n                                <TableCell\r\n                                  padding=\"none\"\r\n                                  style={{ textAlign: \"left\" }}\r\n                                >\r\n                                  <IconButton\r\n                                    onClick={() => onClickPayment(\"NAGHD\", row)}\r\n                                  >\r\n                                    <EditIcon />\r\n                                  </IconButton>\r\n\r\n                                  <IconButton\r\n                                    onClick={() =>\r\n                                      handleDeletePayment(row, \"NAGHD\")\r\n                                    }\r\n                                  >\r\n                                    <DeleteIcon />\r\n                                  </IconButton>\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            );\r\n                          })}\r\n                        </TableBody>\r\n                      </Table>\r\n                    </TableContainer>\r\n                  </Paper>\r\n                </Grid>\r\n              </AccordionDetails>\r\n            )}\r\n          </Accordion>\r\n          <Accordion\r\n            expanded={payments?.banks.length}\r\n            disabled={!payments?.banks.length}\r\n          >\r\n            <AccordionSummary\r\n              className={classes.accordionSummary}\r\n              expandIcon={<i className=\"material-icons-round\">expand_more</i>}\r\n              aria-controls=\"panel2a-content\"\r\n              id=\"panel2a-header\"\r\n            >\r\n              <Typography className={classes.heading}>کارتی ها</Typography>\r\n            </AccordionSummary>\r\n            {!!payments?.banks.length && (\r\n              <AccordionDetails>\r\n                <Grid item xs={12}>\r\n                  <Paper>\r\n                    <TableContainer style={{ padding: \"0 10px\" }}>\r\n                      <Table\r\n                        className={classes.table}\r\n                        size={\"medium\"}\r\n                        style={{ paddingRight: 10 }}\r\n                      >\r\n                        <TableHeader headCells={cardPayHeadCells} />\r\n\r\n                        <TableBody>\r\n                          {payments?.banks.map((row) => {\r\n                            return (\r\n                              <TableRow\r\n                                hover\r\n                                tabIndex={-1}\r\n                                key={row.id}\r\n                                style={{ paddingRight: 10 }}\r\n                              >\r\n                                <TableCell padding=\"none\">\r\n                                  <div\r\n                                    style={{\r\n                                      display: \"flex\",\r\n                                      alignItems: \"center\",\r\n                                    }}\r\n                                  >\r\n                                    {row.cashDesk?.label}\r\n                                  </div>\r\n                                </TableCell>\r\n                                <TableCell padding=\"none\">\r\n                                  {persianNumber(\r\n                                    Number(row.price).toLocaleString(),\r\n                                  )}\r\n                                </TableCell>\r\n                                <TableCell padding=\"none\">\r\n                                  {row.transactionType}\r\n                                </TableCell>\r\n                                <TableCell padding=\"none\">\r\n                                  {row.bank?.label}\r\n                                </TableCell>\r\n                                <TableCell padding=\"none\">\r\n                                  {row.trackingCode}\r\n                                </TableCell>\r\n\r\n                                <TableCell\r\n                                  padding=\"none\"\r\n                                  style={{ textAlign: \"left\" }}\r\n                                >\r\n                                  <IconButton\r\n                                    onClick={() => onClickPayment(\"CARD\", row)}\r\n                                  >\r\n                                    <EditIcon />\r\n                                  </IconButton>\r\n\r\n                                  <IconButton\r\n                                    onClick={() =>\r\n                                      handleDeletePayment(row, \"CARD\")\r\n                                    }\r\n                                  >\r\n                                    <DeleteIcon />\r\n                                  </IconButton>\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            );\r\n                          })}\r\n                        </TableBody>\r\n                      </Table>\r\n                    </TableContainer>\r\n                  </Paper>\r\n                </Grid>\r\n              </AccordionDetails>\r\n            )}\r\n          </Accordion>\r\n          <Accordion\r\n            expanded={payments?.cheques.length}\r\n            disabled={!payments?.cheques.length}\r\n          >\r\n            <AccordionSummary\r\n              className={classes.accordionSummary}\r\n              expandIcon={<i className=\"material-icons-round\">expand_more</i>}\r\n              aria-controls=\"panel3a-content\"\r\n              id=\"panel3a-header\"\r\n            >\r\n              <Typography className={classes.heading}>چک ها</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              {!!payments?.cheques.length && (\r\n                <Grid item xs={12}>\r\n                  <Paper>\r\n                    <TableContainer style={{ padding: \"0 10px\" }}>\r\n                      <Table\r\n                        className={classes.table}\r\n                        size={\"medium\"}\r\n                        style={{ paddingRight: 10 }}\r\n                      >\r\n                        <TableHeader headCells={checkPayHeadCells} />\r\n\r\n                        <TableBody>\r\n                          {payments?.cheques.map((row) => {\r\n                            return (\r\n                              <TableRow\r\n                                hover\r\n                                tabIndex={-1}\r\n                                key={row.id}\r\n                                style={{ paddingRight: 10 }}\r\n                              >\r\n                                <TableCell padding=\"none\">\r\n                                  <div\r\n                                    style={{\r\n                                      display: \"flex\",\r\n                                      alignItems: \"center\",\r\n                                    }}\r\n                                  >\r\n                                    {row.cashDesk?.label}\r\n                                  </div>\r\n                                </TableCell>\r\n                                <TableCell padding=\"none\">\r\n                                  {persianNumber(\r\n                                    Number(row.price).toLocaleString(),\r\n                                  )}\r\n                                </TableCell>\r\n\r\n                                <TableCell padding=\"none\">\r\n                                  {row.chequeDueDate.toLocaleDateString(\r\n                                    \"fa-IR\",\r\n                                  )}\r\n                                </TableCell>\r\n                                <TableCell padding=\"none\">\r\n                                  {row.bank?.label}\r\n                                </TableCell>\r\n                                <TableCell\r\n                                  padding=\"none\"\r\n                                  style={{ textAlign: \"left\" }}\r\n                                >\r\n                                  <IconButton\r\n                                    onClick={() => onClickPayment(\"CHECK\", row)}\r\n                                  >\r\n                                    <EditIcon />\r\n                                  </IconButton>\r\n\r\n                                  <IconButton\r\n                                    onClick={() =>\r\n                                      handleDeletePayment(row, \"CHECK\")\r\n                                    }\r\n                                  >\r\n                                    <DeleteIcon />\r\n                                  </IconButton>\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            );\r\n                          })}\r\n                        </TableBody>\r\n                      </Table>\r\n                    </TableContainer>\r\n                  </Paper>\r\n                </Grid>\r\n              )}\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n});\r\nexport default PrePayment;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Typography,\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  MenuItem,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\n\r\nimport PrePayment from \"../payment/prePayment\";\r\n\r\nexport default function ProductList({ onDismiss, onSubmit, driverId }) {\r\n  const paymentRef = useRef(null);\r\n  const [payments, setPayments] = useState({\r\n    cashes: [],\r\n    banks: [],\r\n    cheques: [],\r\n  });\r\n\r\n  const onDone = () => {\r\n    onSubmit({ ...paymentRef.current }, driverId);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form>\r\n        <Grid container spacing={3}>\r\n          <PrePayment\r\n            defaultValues={payments}\r\n            type={\"OUTCOME\"}\r\n            ref={paymentRef}\r\n          />\r\n        </Grid>\r\n      </form>\r\n\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          marginTop: 20,\r\n        }}\r\n      >\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onDone}>\r\n          تایید\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n          انصراف\r\n        </Button>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Typography,\r\n  Chip,\r\n  Button,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { convertParamsToQueryString } from \"../../helpers/utils\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"firstName\",\r\n    label: \"نام\",\r\n  },\r\n  { id: \"lastName\", label: \"نام خانوادگی\" },\r\n  {\r\n    id: \"category\",\r\n    label: \"دسته بندی\",\r\n  },\r\n  { id: \"mobile\", label: \"موبایل\" },\r\n  { id: \"carName\", label: \"ماشین\" },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function MainList({ onSelect, onDismiss }) {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [search, setSearch] = useState();\r\n  const [orderBy, setOrderBy] = useState(\"firstName\");\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [selectedDrivers, setSelectedDrivers] = useState([]);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const getDriverRequest = useApi({\r\n    method: \"get\",\r\n    url: `driver?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n    })}`,\r\n  });\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n  };\r\n\r\n  const onSelectDriver = (item) => {\r\n    setSelectedDrivers([...selectedDrivers, item]);\r\n  };\r\n\r\n  const onDeselectDriver = (data) => {\r\n    setSelectedDrivers(selectedDrivers.filter((item) => item.id !== data.id));\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    onSelect(selectedDrivers);\r\n  };\r\n\r\n  const getData = async () => {\r\n    const driverList = await getDriverRequest.execute();\r\n    setList(driverList.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize]);\r\n\r\n  return (\r\n    <div style={{ marginTop: -20 }}>\r\n      <TableTop handleSearch={onSearch} />\r\n      <TableContainer>\r\n        <Table className={classes.table} size={\"medium\"}>\r\n          <TableHeader\r\n            classes={classes}\r\n            order={order}\r\n            orderBy={orderBy}\r\n            onRequestSort={handleRequestSort}\r\n            rowCount={list.length}\r\n            headCells={headCells}\r\n          />\r\n\r\n          <TableBody>\r\n            {list.map((row) => {\r\n              return (\r\n                <TableRow\r\n                  hover\r\n                  tabIndex={-1}\r\n                  key={row.id}\r\n                  style={{ paddingRight: 10 }}\r\n                >\r\n                  <TableCell padding=\"none\">{row.firstName}</TableCell>\r\n                  <TableCell padding=\"none\">{row.lastName}</TableCell>\r\n                  <TableCell padding=\"none\">{row.category.name}</TableCell>\r\n                  <TableCell padding=\"none\">{row.mobile}</TableCell>\r\n                  <TableCell padding=\"none\">{row.carName}</TableCell>\r\n                  <TableCell padding=\"none\">\r\n                    {selectedDrivers.includes(row) ? (\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        className={classes.selectedButton}\r\n                        onClick={() => onDeselectDriver(row)}\r\n                        endIcon={<i className=\"material-icons-round\">done</i>}\r\n                      >\r\n                        انتخاب شده\r\n                      </Button>\r\n                    ) : (\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => onSelectDriver(row)}\r\n                      >\r\n                        انتخاب راننده\r\n                      </Button>\r\n                    )}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n            {!list.length && !getDriverRequest.pending && (\r\n              <TableRow style={{ height: 53 }}>\r\n                <TableCell colSpan={6} style={{ textAlign: \"center\" }}>\r\n                  <Typography variant=\"h6\">\r\n                    داده ای برای نمایش وجود ندارد\r\n                  </Typography>\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePaging\r\n        count={list.length}\r\n        handleChangePage={handleChangePage}\r\n        handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n        page={page}\r\n        rowsPerPage={pageSize}\r\n      />\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n          تایید\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n          بازگشت\r\n        </Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import http from \"../../configs/axios\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport store from \"../store\";\r\nimport Storage from \"../../services/storage\";\r\n\r\nexport default {\r\n  async setProdcutUnit() {\r\n    const result = await http.get(\"/product/unit\");\r\n    if (result) {\r\n      Storage.setItem(\r\n        Constant.STORAGE.PRODUCT_UNITS,\r\n        JSON.stringify(result.data),\r\n      );\r\n      store.dispatch({\r\n        type: Constant.ACTION_TYPES.GET_UNITS,\r\n        payload: result.data,\r\n      });\r\n    }\r\n  },\r\n\r\n  getProductUnit() {\r\n    return JSON.parse(Storage.getItem(Constant.STORAGE.PRODUCT_UNITS));\r\n  },\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Typography,\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  MenuItem,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { convertParamsToQueryString } from \"../../helpers/utils\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport unitAction from \"../../redux/actions/unitAction\";\r\nimport isEmpty from \"lodash.isempty\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    label: \"نام کالا\",\r\n  },\r\n  {\r\n    id: \"category\",\r\n    label: \"دسته بندی\",\r\n  },\r\n  {\r\n    id: \"amount\",\r\n    label: \"موجودی کل\",\r\n  },\r\n  { id: \"unit\", label: \" واحد شمارشی\" },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function ProductList({\r\n  onSubmit,\r\n  onDismiss,\r\n  customerId,\r\n  defaultValues,\r\n  action,\r\n}) {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [search, setSearch] = useState();\r\n  const [orderBy, setOrderBy] = useState(\"name\");\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [showPerUnit, setShowPerUnit] = useState(\r\n    defaultValues ? !!defaultValues.perUnit : false,\r\n  );\r\n  const units = unitAction.getProductUnit();\r\n  const [selectedProduct, setSelectedProduct] = useState(defaultValues);\r\n  const [depotPicker, setDepotPicker] = useState([]);\r\n  const [selectedDepot, setSelectedDepot] = useState(1);\r\n  const [productFee, setProductFee] = useState(\r\n    defaultValues || {\r\n      name: \" \",\r\n      fee: \"\",\r\n      amount: \"\",\r\n    },\r\n  );\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const getDepotProductRequest = useApi({\r\n    method: \"get\",\r\n    url: `product/depot?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n    })}`,\r\n  });\r\n\r\n  const getProductFeeRequest = useApi({\r\n    method: \"get\",\r\n    url: \"invoice/fee\",\r\n  });\r\n\r\n  const getDepotRequest = useApi({\r\n    method: \"get\",\r\n    url: `depot/picker`,\r\n  });\r\n\r\n  const onChangeSelectedProduct = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name === \"unit\") {\r\n      const allUnits = units.filter(\r\n        (item) => item.value === selectedProduct?.unitBaseId,\r\n      )[0].children;\r\n      const targetUnit = allUnits.filter((item) => item.value === value)[0];\r\n      setShowPerUnit(targetUnit.perUnit);\r\n    }\r\n    setProductFee({\r\n      ...productFee,\r\n      [name]: value,\r\n      unitBaseId: selectedProduct?.unitBaseId,\r\n    });\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n  };\r\n\r\n  const getData = async () => {\r\n    const productList = await getDepotProductRequest.execute(\r\n      null,\r\n      selectedDepot,\r\n    );\r\n    setList(productList.data);\r\n  };\r\n\r\n  const getProductUnitPicker = () => {\r\n    if (!isEmpty(selectedProduct)) {\r\n      const allUnits = units.filter(\r\n        (item) => item.value === selectedProduct.unitBaseId,\r\n      )[0];\r\n\r\n      if (allUnits) {\r\n        return allUnits.children;\r\n      }\r\n      return [];\r\n    }\r\n    return [];\r\n  };\r\n\r\n  const onSelectProduct = async (data) => {\r\n    setSelectedProduct(data);\r\n    if (customerId === 1) {\r\n      setProductFee({\r\n        productId: data.id,\r\n        name: data.name,\r\n        fee: \"\",\r\n        amount: \"\",\r\n      });\r\n    } else {\r\n      const fee = await getProductFeeRequest.execute(\r\n        null,\r\n        `${customerId}/${data.id}`,\r\n      );\r\n\r\n      const feeProduct = fee.data;\r\n      if (isEmpty(feeProduct)) {\r\n        setProductFee({\r\n          productId: data.id,\r\n          name: data.name,\r\n          fee: \"\",\r\n          amount: \"\",\r\n        });\r\n      } else {\r\n        setProductFee({ ...feeProduct, productId: data.id, name: data.name });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onDeselectProduct = () => {\r\n    setSelectedProduct();\r\n  };\r\n\r\n  const onDone = () => {\r\n    const newId = uuid();\r\n    const data = {\r\n      id: defaultValues ? defaultValues.id : newId,\r\n      ...productFee,\r\n      depotId: selectedDepot,\r\n      totalFee: Number(productFee.fee) * Number(productFee.amount),\r\n    };\r\n\r\n    onSubmit(data, action);\r\n  };\r\n\r\n  const getDepotPicker = async () => {\r\n    const result = await getDepotRequest.execute();\r\n    setDepotPicker(result.data);\r\n  };\r\n\r\n  const onChangeDepot = (e) => {\r\n    setSelectedDepot(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize, selectedDepot]);\r\n\r\n  useEffect(() => {\r\n    getDepotPicker();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <form>\r\n        <Grid container spacing={3}>\r\n          <Grid item lg={6} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"نام کالا\"\r\n              name={\"name\"}\r\n              onChange={onChangeSelectedProduct}\r\n              value={productFee.name}\r\n              fullWidth\r\n              size=\"small\"\r\n              disabled\r\n            />\r\n          </Grid>\r\n          <Grid item lg={6} xs={12}>\r\n            <TextField\r\n              select\r\n              label=\"واحد شمارش\"\r\n              value={productFee?.unit}\r\n              onChange={onChangeSelectedProduct}\r\n              variant=\"outlined\"\r\n              name=\"unit\"\r\n              fullWidth\r\n              size=\"small\"\r\n            >\r\n              {getProductUnitPicker().map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n          {showPerUnit && (\r\n            <Grid item lg={6} xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                label=\"مقدار در واحد\"\r\n                name={\"perUnit\"}\r\n                onChange={onChangeSelectedProduct}\r\n                value={productFee?.perUnit}\r\n                fullWidth\r\n                size=\"small\"\r\n                type=\"number\"\r\n              />\r\n            </Grid>\r\n          )}\r\n          <Grid item lg={6} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"مقدار\"\r\n              name={\"amount\"}\r\n              onChange={onChangeSelectedProduct}\r\n              value={productFee?.amount}\r\n              fullWidth\r\n              size=\"small\"\r\n              type=\"number\"\r\n            />\r\n          </Grid>\r\n          <Grid item lg={6} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"قیمت\"\r\n              name={\"fee\"}\r\n              onChange={onChangeSelectedProduct}\r\n              value={productFee?.fee}\r\n              fullWidth\r\n              size=\"small\"\r\n              type=\"number\"\r\n            />\r\n          </Grid>\r\n\r\n          {!!selectedProduct && (\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n            >\r\n              <Button variant=\"contained\" color=\"primary\" onClick={onDone}>\r\n                تایید\r\n              </Button>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </form>\r\n      <Divider style={{ margin: \"20px 10px\" }} />\r\n      <Grid container spacing={3}>\r\n        <Grid item lg={12} xs={12}>\r\n          <TextField\r\n            select\r\n            label=\"انبار\"\r\n            value={selectedDepot}\r\n            onChange={onChangeDepot}\r\n            variant=\"outlined\"\r\n            name=\"depot\"\r\n            fullWidth\r\n            size=\"small\"\r\n          >\r\n            {depotPicker.map((option) => (\r\n              <MenuItem key={option.value} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n      </Grid>\r\n      <TableContainer>\r\n        <TableTop handleSearch={onSearch} defaultSearch={search} />\r\n\r\n        <Table className={classes.table} size={\"medium\"}>\r\n          <TableHeader\r\n            classes={classes}\r\n            order={order}\r\n            orderBy={orderBy}\r\n            onRequestSort={handleRequestSort}\r\n            rowCount={list.length}\r\n            headCells={headCells}\r\n          />\r\n\r\n          <TableBody>\r\n            {list.map((row) => {\r\n              return (\r\n                <TableRow\r\n                  hover\r\n                  tabIndex={-1}\r\n                  key={row.id}\r\n                  style={{ paddingRight: 10 }}\r\n                >\r\n                  <TableCell padding=\"none\">{row.name}</TableCell>\r\n                  <TableCell padding=\"none\">\r\n                    {row.categories.join(\",\")}\r\n                  </TableCell>\r\n                  <TableCell padding=\"none\">{row.totalStock}</TableCell>\r\n                  <TableCell padding=\"none\">{row.unitBase}</TableCell>\r\n                  <TableCell padding=\"none\">\r\n                    {selectedProduct?.id === row.id ? (\r\n                      <Button\r\n                        disabled={!!defaultValues}\r\n                        variant=\"contained\"\r\n                        className={classes.selectedButton}\r\n                        onClick={() => onDeselectProduct(row)}\r\n                        endIcon={<i className=\"material-icons-round\">done</i>}\r\n                      >\r\n                        انتخاب شده\r\n                      </Button>\r\n                    ) : (\r\n                      <Button\r\n                        disabled={!!defaultValues}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => onSelectProduct(row)}\r\n                      >\r\n                        انتخاب کالا\r\n                      </Button>\r\n                    )}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n            {!list.length && !getDepotProductRequest.pending && (\r\n              <TableRow style={{ height: 53 }}>\r\n                <TableCell colSpan={6} style={{ textAlign: \"center\" }}>\r\n                  <Typography variant=\"h6\">\r\n                    داده ای برای نمایش وجود ندارد\r\n                  </Typography>\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePaging\r\n        count={list.length}\r\n        handleChangePage={handleChangePage}\r\n        handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n        page={page}\r\n        rowsPerPage={pageSize}\r\n      />\r\n\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n      >\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n          انصراف\r\n        </Button>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import React, { Fragment, useEffect, useState, useRef } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  IconButton,\r\n  Chip,\r\n  MenuItem,\r\n  Hidden,\r\n} from \"@material-ui/core\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport { DeleteIcon, EditIcon } from \"../../components/icons\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { getQueryString, persianNumber } from \"../../helpers/utils\";\r\nimport CircularProgress from \"../../components/CircularProgress\";\r\nimport PersonSelector from \"../payment/personSelector\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport dialogAction from \"../../redux/actions/dialogAction\";\r\nimport DriverPayment from \"./driverPayment\";\r\nimport PrePayment from \"../payment/prePayment\";\r\nimport Drivers from \"./driver\";\r\nimport Product from \"./product\";\r\nimport Constant from \"../../helpers/constant\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingBottom: 7,\r\n    paddingTop: 7,\r\n  },\r\n}));\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    label: \"نام کالا\",\r\n  },\r\n  { id: \"unit\", label: \"واحد\" },\r\n  {\r\n    id: \"amount\",\r\n    label: \"مقدار\",\r\n  },\r\n  {\r\n    id: \"fee\",\r\n    label: \"قیمت\",\r\n  },\r\n  {\r\n    id: \"total\",\r\n    label: \"مجموع\",\r\n  },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nconst driverHeadCell = [\r\n  {\r\n    id: \"first\",\r\n    label: \"نام راننده\",\r\n  },\r\n  { id: \"last\", label: \"نام خانوادگی راننده\" },\r\n  {\r\n    id: \"car\",\r\n    label: \"نام ماشین\",\r\n  },\r\n  {\r\n    id: \"pelak\",\r\n    label: \"پلاک\",\r\n  },\r\n  {\r\n    id: \"pay\",\r\n    label: \"پرداختی\",\r\n  },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function MainDetail({ defaultValues }) {\r\n  const paymentRef = useRef(null);\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const id = getQueryString(\"id\");\r\n  const invoiceType = getQueryString(\"type\");\r\n  const [detail, setDetail] = useState({});\r\n  const [selectedPerson, setSelectedPerson] = useState();\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n  const [selectedDate, handleDateChange] = useState(moment());\r\n  const [invoiceCategory, setInvoiceCategory] = useState(3);\r\n  const [category, setCategory] = useState([]);\r\n  const [drivers, setDrivers] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n  const [invoicePerson, setInvoicePerson] = useState(\" \");\r\n  const [payments, setPayments] = useState({\r\n    cashes: [],\r\n    banks: [],\r\n    cheques: [],\r\n  });\r\n  const [totalFee, setTotalFee] = useState(0);\r\n  const [totalPayment, setTotalPayment] = useState(0);\r\n  const [discount, setDiscount] = useState(0);\r\n  const [pureFee, setPureFee] = useState(0);\r\n  const [totalRemaining, setTotalRemaining] = useState(0);\r\n\r\n  const addInvoiceRequest = useApi({\r\n    method: \"post\",\r\n    url: `invoice`,\r\n  });\r\n  const editInvoiceRequest = useApi({\r\n    method: \"put\",\r\n    url: `invoice/${id}`,\r\n  });\r\n  const detailInvoiceRequest = useApi({\r\n    method: \"get\",\r\n    url: `invoice/${id}`,\r\n  });\r\n  const invoiceCategoryRequest = useApi({\r\n    method: \"get\",\r\n    url: `invoice/category`,\r\n  });\r\n  const addInvoicePaymentRequest = useApi({\r\n    method: \"post\",\r\n    url: `payment`,\r\n  });\r\n  const getPaymentInvoiceRequest = useApi({\r\n    method: \"get\",\r\n    url: `payment/invoice/${id}`,\r\n  });\r\n\r\n  const addPaymentDriverRequest = useApi({\r\n    method: \"post\",\r\n    url: `payment`,\r\n  });\r\n\r\n  const onChnageDate = (e) => {\r\n    handleDateChange(e);\r\n  };\r\n\r\n  const getInvoiceCategory = async () => {\r\n    const detail = await invoiceCategoryRequest.execute();\r\n    setCategory(detail.data);\r\n  };\r\n\r\n  const onSelectPerson = (person) => {\r\n    setSelectedPerson(person);\r\n    setInvoicePerson(true ? `${person.firstName} ${person.lastName}` : \"\");\r\n    onDismissPerson();\r\n  };\r\n\r\n  const onDismissPerson = () => {\r\n    dialogAction.hide({ name: \"person\" });\r\n  };\r\n\r\n  const onShowDialog = () => {\r\n    dialogAction.show({\r\n      title: \"انتخاب شخص\",\r\n      component: (\r\n        <PersonSelector\r\n          onSelect={onSelectPerson}\r\n          onDismiss={onDismissPerson}\r\n          filter={Constant.PERSON_TYPE.CUSTOMER}\r\n        />\r\n      ),\r\n      name: \"person\",\r\n      size: \"8\",\r\n      confirm: false,\r\n      disableCloseButton: false,\r\n    });\r\n  };\r\n\r\n  const getProperProducts = () => {\r\n    const newProducts = [];\r\n    products.map((item) => {\r\n      delete item.id;\r\n      return newProducts.push(item);\r\n    });\r\n    return newProducts;\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    const value = {\r\n      ...data,\r\n      products: getProperProducts(),\r\n      drivers,\r\n      date: selectedDate._d,\r\n      customerId: selectedPerson ? selectedPerson.id : 1,\r\n      type: invoiceType,\r\n      categoryId: invoiceCategory,\r\n      globalCustomer: invoicePerson,\r\n    };\r\n    if (id) {\r\n      await editInvoiceRequest.execute(value);\r\n    } else {\r\n      const response = await addInvoiceRequest.execute(value);\r\n      const invoicePayment = {\r\n        ...paymentRef.current,\r\n        invoiceId: response.id,\r\n        date: selectedDate._d,\r\n        personId: selectedPerson ? selectedPerson.id : 1,\r\n        personType: \"CUSTOMER\",\r\n        type: invoiceType === \"SELL\" ? \"INCOME\" : \"OUTCOME\",\r\n        description: `بابت فاکتور به شماره  ${response.id}`,\r\n      };\r\n      if (\r\n        invoicePayment.cashes.length > 0 ||\r\n        invoicePayment.cheques.length > 0 ||\r\n        invoicePayment.banks.length > 0\r\n      ) {\r\n        await addInvoicePaymentRequest.execute(invoicePayment);\r\n      }\r\n\r\n      drivers.map(async (item) => {\r\n        const value = {\r\n          type: \"OUTCOME\",\r\n          personType: \"DRIVER\",\r\n          personId: item.id,\r\n          description: `بابت فاکتور به شماره  ${response.id}`,\r\n          date: selectedDate._d,\r\n          ...item.payments,\r\n        };\r\n        if (\r\n          value.cashes.length > 0 ||\r\n          value.cheques.length > 0 ||\r\n          value.banks.length > 0\r\n        ) {\r\n          await addPaymentDriverRequest.execute(value);\r\n        }\r\n      });\r\n\r\n      setTimeout(() => {\r\n        onReject();\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  const onReject = () => {\r\n    history.push(\"/app/invoice-list?type=ALL\");\r\n  };\r\n\r\n  const getDetail = async () => {\r\n    const detail = await detailInvoiceRequest.execute();\r\n    const payments = await getPaymentInvoiceRequest.execute();\r\n    const paymentsArray = {\r\n      cashes: payments.data.cashes,\r\n      banks: payments.data.banks,\r\n      cheques: payments.data.cheques,\r\n    };\r\n\r\n    setDetail(detail.data);\r\n    setSelectedPerson(payments.data.person);\r\n    setPayments(paymentsArray);\r\n    setDrivers(detail.data.drivers);\r\n    setProducts(detail.data.products);\r\n    handleDateChange(detail.data.date);\r\n    setTotalFee(detail.data.totalPrice);\r\n    setDiscount(detail.data.discount);\r\n    setTotalPayment(payments.data.price);\r\n    setTotalRemaining(\r\n      detail.data.totalPrice -\r\n        (detail.data.discount + payments.data.price) +\r\n        Number(payments.data.person.accountRemaining),\r\n    );\r\n    if (detail.data.customerId === 1) {\r\n      setInvoicePerson(detail.data.globalCustomer);\r\n    }\r\n  };\r\n\r\n  const onSubmitDrivers = (drivers) => {\r\n    setDrivers(drivers);\r\n    onDismissDrivers();\r\n  };\r\n\r\n  const onDismissDrivers = () => {\r\n    dialogAction.hide({ name: \"driver\" });\r\n  };\r\n\r\n  const handleDeleteDriver = (id) => {\r\n    setDrivers(drivers.filter((item) => item.id !== id));\r\n  };\r\n\r\n  const onDismissDriverPayments = () => {\r\n    dialogAction.hide({ name: \"pay\" });\r\n  };\r\n\r\n  const onSubmitDriverPayments = (driverPayments, id) => {\r\n    const newDriver = [...drivers];\r\n    const selected = newDriver.find((item) => item.id === id);\r\n    const index = newDriver.findIndex((item) => item.id === id);\r\n    selected.payments = driverPayments;\r\n    newDriver[index] = selected;\r\n    setDrivers(newDriver);\r\n    // setDrivers({ ...drivers, drivers: { payments: driverPayments } });\r\n    onDismissDriverPayments();\r\n\r\n    // if (data.isUpdate) {\r\n    //   const index = accounts.findIndex((item) => item.id === data.id);\r\n    //   const accounstTmp = [...accounts];\r\n    //   accounstTmp[index] = data;\r\n    //   setAccounts(accounstTmp);\r\n    // } else {\r\n    //   setAccounts([...accounts, data]);\r\n    // }\r\n  };\r\n\r\n  const handlePaymentDriver = (row) => {\r\n    dialogAction.show({\r\n      title: \"پرداخت به راننده\",\r\n      component: (\r\n        <DriverPayment\r\n          onSubmit={onSubmitDriverPayments}\r\n          onDismiss={onDismissDriverPayments}\r\n          driverId={row.id}\r\n        />\r\n      ),\r\n      name: \"pay\",\r\n      size: \"6\",\r\n      confirm: false,\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  const onShowDriverDialog = () => {\r\n    dialogAction.show({\r\n      title: \"انتخاب راننده\",\r\n      component: (\r\n        <Drivers\r\n          onSelect={onSubmitDrivers}\r\n          onDismiss={onDismissDrivers}\r\n          defaultValues={drivers}\r\n        />\r\n      ),\r\n      name: \"driver\",\r\n      size: \"8\",\r\n      confirm: false,\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  const onSubmitProduct = (product, type) => {\r\n    if (type === \"edit\") {\r\n      const index = products.findIndex((item) => item.id === product.id);\r\n      const ProductsTmp = [...products];\r\n      ProductsTmp[index] = product;\r\n      setProducts(ProductsTmp);\r\n    } else {\r\n      setProducts([...products, product]);\r\n    }\r\n    onDismissProduct();\r\n  };\r\n\r\n  const onDismissProduct = () => {\r\n    dialogAction.hide({ name: \"product\" });\r\n  };\r\n\r\n  const handleDeleteProduct = (id) => {\r\n    setProducts(products.filter((item) => item.id !== id));\r\n  };\r\n\r\n  const handleEditProduct = (item) => {\r\n    onShowProductDialog(\"edit\", item);\r\n  };\r\n\r\n  const onShowProductDialog = (type, data) => {\r\n    dialogAction.show({\r\n      title: \"انتخاب کالا\",\r\n      component: (\r\n        <Product\r\n          onSubmit={onSubmitProduct}\r\n          onDismiss={onDismissProduct}\r\n          customerId={selectedPerson ? selectedPerson.id : 1}\r\n          defaultValues={data}\r\n          action={type}\r\n        />\r\n      ),\r\n      name: \"product\",\r\n      size: \"6\",\r\n      confirm: false,\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  const getDetailTitle = () => {\r\n    if (id) {\r\n      if (invoiceType === \"BUY\") {\r\n        return \"ویرایش فاکتور خرید\";\r\n      }\r\n      return \"ویرایش فاکتور فروش\";\r\n    } else {\r\n      if (invoiceType === \"SELL\") {\r\n        return \"افزودن فاکتور فروش\";\r\n      }\r\n      return \"افزودن فاکتور خرید\";\r\n    }\r\n  };\r\n\r\n  const onTotalDriverPayments = (data) => {\r\n    if (data) {\r\n      const cashesPrice = data.cashes.reduce(\r\n        (n, { price }) => n + Number(price),\r\n        0,\r\n      );\r\n      const chequesPrice = data.cheques.reduce(\r\n        (n, { price }) => n + Number(price),\r\n        0,\r\n      );\r\n      const banksPrice = data.banks.reduce(\r\n        (n, { price }) => n + Number(price),\r\n        0,\r\n      );\r\n      return cashesPrice + chequesPrice + banksPrice;\r\n    }\r\n  };\r\n\r\n  const onSubmitPayment = (data) => {\r\n    if (data) {\r\n      const cashesPrice = data.cashes.reduce(\r\n        (n, { price }) => n + Number(price),\r\n        0,\r\n      );\r\n      const chequesPrice = data.cheques.reduce(\r\n        (n, { price }) => n + Number(price),\r\n        0,\r\n      );\r\n      const banksPrice = data.banks.reduce(\r\n        (n, { price }) => n + Number(price),\r\n        0,\r\n      );\r\n      setTotalPayment(cashesPrice + chequesPrice + banksPrice);\r\n    }\r\n  };\r\n\r\n  const onDiscountChange = (e) => {\r\n    setDiscount(e.target.value);\r\n  };\r\n\r\n  const onChangeCategory = (e) => {\r\n    setInvoiceCategory(e.target.value);\r\n  };\r\n\r\n  const onChangeInvoicePerson = (e) => {\r\n    setInvoicePerson(e.target.value);\r\n    setSelectedPerson();\r\n  };\r\n\r\n  useEffect(() => {\r\n    getInvoiceCategory();\r\n    if (id) {\r\n      getDetail();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setTotalFee(products.reduce((n, { totalFee }) => n + totalFee, 0));\r\n  }, [products]);\r\n\r\n  useEffect(() => {\r\n    const factorPay = totalFee - (Number(discount) + totalPayment);\r\n\r\n    setPureFee(factorPay);\r\n    if (selectedPerson) {\r\n      setTotalRemaining(factorPay + Number(selectedPerson?.accountRemaining));\r\n    }\r\n  }, [totalFee, discount, totalPayment]);\r\n\r\n  useEffect(() => {\r\n    reset(detail);\r\n  }, [reset, detail]);\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      {!detailInvoiceRequest.pending ? (\r\n        <Grid item lg={8} sm={12} className={classes.root}>\r\n          <Paper className={classes.paper}>\r\n            <Typography\r\n              className={classes.title}\r\n              variant=\"h6\"\r\n              id=\"tableTitle\"\r\n              component=\"div\"\r\n            >\r\n              {getDetailTitle()}\r\n            </Typography>\r\n\r\n            <Grid container spacing={3}>\r\n              <Fragment>\r\n                <Grid item lg={6} xs={12} style={{ display: \"flex\" }}>\r\n                  <Button\r\n                    style={{ marginLeft: 10, width: \"30%\" }}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={onShowDialog}\r\n                  >\r\n                    انتخاب مشتری\r\n                  </Button>\r\n\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    name={\"personName\"}\r\n                    onChange={onChangeInvoicePerson}\r\n                    value={invoicePerson}\r\n                    style={{ width: \"70%\" }}\r\n                    size=\"small\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12} className={classes.datePicker}>\r\n                  <DatePicker\r\n                    autoOk\r\n                    name=\"date\"\r\n                    label=\"تاریخ ثبت\"\r\n                    inputVariant=\"outlined\"\r\n                    okLabel=\"تأیید\"\r\n                    cancelLabel=\"لغو\"\r\n                    labelFunc={(date) =>\r\n                      date ? date.format(\"jYYYY/jMM/jDD\") : \"\"\r\n                    }\r\n                    value={selectedDate}\r\n                    onChange={onChnageDate}\r\n                    style={{ width: \"100%\" }}\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  {!!category.length && invoiceCategory && (\r\n                    <TextField\r\n                      select\r\n                      label=\"دسته بندی\"\r\n                      value={invoiceCategory}\r\n                      onChange={onChangeCategory}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      size=\"small\"\r\n                    >\r\n                      {category.map((option) => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </TextField>\r\n                  )}\r\n                </Grid>\r\n                <Hidden smDown>\r\n                  <Grid item lg={6} xs={12} />\r\n                </Hidden>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"مبدا\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value || \" \"}\r\n                          error={!!errors.origin}\r\n                          helperText={\r\n                            errors.origin ? errors.origin.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    name=\"origin\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"مقصد\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value || \" \"}\r\n                          error={!!errors.destination}\r\n                          helperText={\r\n                            errors.destination ? errors.destination.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    name=\"destination\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12} style={{ display: \"flex\" }}>\r\n                  <Button\r\n                    style={{ marginLeft: 10, width: \"30%\" }}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={onShowDriverDialog}\r\n                    endIcon={\r\n                      <i className=\"material-icons-round\">local_shipping</i>\r\n                    }\r\n                    inventory_2\r\n                  >\r\n                    انتخاب راننده\r\n                  </Button>\r\n                </Grid>\r\n                {!!drivers.length && (\r\n                  <Grid item xs={12}>\r\n                    <Paper>\r\n                      <TableContainer style={{ padding: \"0 10px\" }}>\r\n                        <Table\r\n                          className={classes.table}\r\n                          size={\"medium\"}\r\n                          style={{ paddingRight: 10 }}\r\n                        >\r\n                          <TableHeader headCells={driverHeadCell} />\r\n\r\n                          <TableBody>\r\n                            {drivers.map((row) => {\r\n                              console.log(row);\r\n                              return (\r\n                                <TableRow\r\n                                  hover\r\n                                  tabIndex={-1}\r\n                                  key={row.id}\r\n                                  style={{ paddingRight: 10 }}\r\n                                >\r\n                                  <TableCell padding=\"none\">\r\n                                    {row.firstName}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {row.lastName}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {row.carName}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {row.carPlaque}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {onTotalDriverPayments(row.payments)}\r\n                                  </TableCell>\r\n                                  <TableCell\r\n                                    padding=\"none\"\r\n                                    style={{ textAlign: \"left\" }}\r\n                                  >\r\n                                    <IconButton\r\n                                      onClick={() => handlePaymentDriver(row)}\r\n                                    >\r\n                                      <span\r\n                                        class=\"material-icons-round\"\r\n                                        style={{ color: \"green\" }}\r\n                                      >\r\n                                        paid\r\n                                      </span>\r\n                                    </IconButton>\r\n\r\n                                    <IconButton\r\n                                      onClick={() => handleDeleteDriver(row.id)}\r\n                                    >\r\n                                      <DeleteIcon />\r\n                                    </IconButton>\r\n                                  </TableCell>\r\n                                </TableRow>\r\n                              );\r\n                            })}\r\n                          </TableBody>\r\n                        </Table>\r\n                      </TableContainer>\r\n                    </Paper>\r\n                  </Grid>\r\n                )}\r\n                <Grid item lg={6} xs={12} style={{ display: \"flex\" }}>\r\n                  <Button\r\n                    // disabled={isEmpty(selectedPerson)}\r\n                    style={{ marginLeft: 10, width: \"30%\" }}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => onShowProductDialog(\"add\")}\r\n                    endIcon={\r\n                      <i className=\"material-icons-round\">inventory_2</i>\r\n                    }\r\n                  >\r\n                    انتخاب کالا\r\n                  </Button>\r\n                </Grid>\r\n                {!!products.length && (\r\n                  <Grid item xs={12}>\r\n                    <Paper>\r\n                      <TableContainer style={{ padding: \"0 10px\" }}>\r\n                        <Table\r\n                          className={classes.table}\r\n                          size={\"medium\"}\r\n                          style={{ paddingRight: 10 }}\r\n                        >\r\n                          <TableHeader headCells={headCells} />\r\n\r\n                          <TableBody>\r\n                            {products.map((row) => {\r\n                              return (\r\n                                <TableRow\r\n                                  hover\r\n                                  tabIndex={-1}\r\n                                  key={row.id}\r\n                                  style={{ paddingRight: 10 }}\r\n                                >\r\n                                  <TableCell padding=\"none\">\r\n                                    {row.name}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {Constant.UNITS_MAP[row.unit]}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {row.perUnit\r\n                                      ? `${persianNumber(\r\n                                          row.amount,\r\n                                        )}*${persianNumber(row.perUnit)}`\r\n                                      : persianNumber(row.amount)}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {persianNumber(row.fee)}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {persianNumber(row.fee * row.amount)}\r\n                                  </TableCell>\r\n                                  <TableCell\r\n                                    padding=\"none\"\r\n                                    style={{ textAlign: \"left\" }}\r\n                                  >\r\n                                    <IconButton\r\n                                      onClick={() => handleEditProduct(row)}\r\n                                    >\r\n                                      <EditIcon />\r\n                                    </IconButton>\r\n\r\n                                    <IconButton\r\n                                      onClick={() =>\r\n                                        handleDeleteProduct(row.id)\r\n                                      }\r\n                                    >\r\n                                      <DeleteIcon />\r\n                                    </IconButton>\r\n                                  </TableCell>\r\n                                </TableRow>\r\n                              );\r\n                            })}\r\n                          </TableBody>\r\n                        </Table>\r\n                      </TableContainer>\r\n                    </Paper>\r\n                  </Grid>\r\n                )}\r\n                <Grid item xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"توضیحات\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value || \" \"}\r\n                          error={!!errors.description}\r\n                          helperText={\r\n                            errors.description ? errors.description.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          multiline\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    name=\"description\"\r\n                  />\r\n                </Grid>\r\n                <PrePayment\r\n                  type={invoiceType === \"BUY\" ? \"OUTCOME\" : \"INCOME\"}\r\n                  defaultValues={payments}\r\n                  ref={paymentRef}\r\n                  onSubmit={onSubmitPayment}\r\n                />\r\n                <Grid container spacing={3} style={{ marginTop: 20 }}>\r\n                  <Grid item lg={3} xs={6}>\r\n                    <TextField\r\n                      disabled\r\n                      variant=\"outlined\"\r\n                      label=\"مبلغ کل\"\r\n                      value={totalFee}\r\n                      fullWidth\r\n                      size=\"small\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={3} xs={6}>\r\n                    <TextField\r\n                      disabled\r\n                      variant=\"outlined\"\r\n                      label={`${\r\n                        invoiceType === \"SELL\" ? \"جمع دریافتی\" : \"جمع پرداختی\"\r\n                      }`}\r\n                      value={totalPayment}\r\n                      fullWidth\r\n                      size=\"small\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={3} xs={6}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      onChange={onDiscountChange}\r\n                      label=\"تخفیف\"\r\n                      value={discount || \" \"}\r\n                      fullWidth\r\n                      size=\"small\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={3} xs={6}>\r\n                    <TextField\r\n                      disabled\r\n                      variant=\"outlined\"\r\n                      label=\"مبلغ خالص\"\r\n                      value={pureFee}\r\n                      fullWidth\r\n                      size=\"small\"\r\n                    />\r\n                  </Grid>\r\n                  {selectedPerson && (\r\n                    <Grid item lg={3} xs={6}>\r\n                      <TextField\r\n                        disabled\r\n                        variant=\"outlined\"\r\n                        label=\"مانده قبلی\"\r\n                        value={\r\n                          selectedPerson ? selectedPerson.accountRemaining : 0\r\n                        }\r\n                        fullWidth\r\n                        size=\"small\"\r\n                      />\r\n                    </Grid>\r\n                  )}\r\n                  <Grid item lg={3} xs={6}>\r\n                    <TextField\r\n                      disabled\r\n                      variant=\"outlined\"\r\n                      label=\"مانده نهایی\"\r\n                      value={totalRemaining}\r\n                      fullWidth\r\n                      size=\"small\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                    تایید\r\n                  </Button>\r\n\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={onReject}\r\n                  >\r\n                    بازگشت\r\n                  </Button>\r\n                </Grid>\r\n              </Fragment>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      ) : (\r\n        <CircularProgress />\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useImperativeHandle } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Typography,\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  MenuItem,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { convertParamsToQueryString, persianNumber } from \"../../helpers/utils\";\r\nimport styles from \"./style\";\r\nimport unitAction from \"../../redux/actions/unitAction\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    label: \"نام کالا\",\r\n  },\r\n  {\r\n    id: \"amount\",\r\n    label: \"موجودی کل\",\r\n  },\r\n\r\n  { id: \"amount\", label: \"مقدار\" },\r\n  { id: \"unit\", label: \" واحد شمارشی\" },\r\n\r\n  { id: \"amount\", label: \"فی\" },\r\n];\r\n\r\nconst ProductList = React.forwardRef((props, ref) => {\r\n  const { defaultValues } = props;\r\n  const classes = styles();\r\n  const [list, setList] = useState([]);\r\n  const [showPerUnit, setShowPerUnit] = useState(\r\n    defaultValues ? !!defaultValues.perUnit : false,\r\n  );\r\n  const units = unitAction.getProductUnit();\r\n  const [depotPicker, setDepotPicker] = useState([]);\r\n  const [selectedDepot, setSelectedDepot] = useState(1);\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return list;\r\n  });\r\n\r\n  const getDepotProductRequest = useApi({\r\n    method: \"get\",\r\n    url: `product/depot?${convertParamsToQueryString({})}`,\r\n  });\r\n\r\n  const getDepotRequest = useApi({\r\n    method: \"get\",\r\n    url: `depot/picker`,\r\n  });\r\n\r\n  const getData = async () => {\r\n    const productList = await getDepotProductRequest.execute(\r\n      null,\r\n      selectedDepot,\r\n    );\r\n    setList(productList.data);\r\n  };\r\n\r\n  const getProductUnitPicker = (row) => {\r\n    const allUnits = units.filter((item) => item.value === row.unitBaseId)[0];\r\n\r\n    if (allUnits) {\r\n      return allUnits.children;\r\n    }\r\n    return [];\r\n  };\r\n\r\n  const getDepotPicker = async () => {\r\n    const result = await getDepotRequest.execute();\r\n    setDepotPicker(result.data);\r\n  };\r\n\r\n  const onChangeDepot = (e) => {\r\n    setSelectedDepot(e.target.value);\r\n  };\r\n\r\n  const onChangeProductValue = (e, data) => {\r\n    const newList = [...list];\r\n    const selectedCurrentProduct = list.find((item) => item.id === data.id);\r\n    const index = list.findIndex((item) => item.id === data.id);\r\n    selectedCurrentProduct[e.target.name] = e.target.value;\r\n    newList[index] = selectedCurrentProduct;\r\n    setList(newList);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [selectedDepot]);\r\n\r\n  useEffect(() => {\r\n    getDepotPicker();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={3}>\r\n        <Grid item lg={12} xs={12} style={{ marginBottom: 20 }}>\r\n          <TextField\r\n            select\r\n            label=\"انبار\"\r\n            value={selectedDepot}\r\n            onChange={onChangeDepot}\r\n            variant=\"outlined\"\r\n            name=\"depot\"\r\n            fullWidth\r\n            size=\"small\"\r\n          >\r\n            {depotPicker.map((option) => (\r\n              <MenuItem key={option.value} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <TableContainer style={{ height: 200, overflow: \"auto\" }}>\r\n        <Table className={classes.table} size={\"medium\"}>\r\n          <TableHeader classes={classes} headCells={headCells} />\r\n\r\n          <TableBody>\r\n            {list.map((row) => {\r\n              return (\r\n                <TableRow\r\n                  hover\r\n                  tabIndex={-1}\r\n                  key={row.id}\r\n                  style={{ paddingRight: 10 }}\r\n                >\r\n                  <TableCell padding=\"none\">{row.name}</TableCell>\r\n                  <TableCell padding=\"none\">\r\n                    {persianNumber(row.totalStock)}\r\n                  </TableCell>\r\n                  <TableCell padding=\"none\">\r\n                    <TextField\r\n                      type=\"number\"\r\n                      variant=\"outlined\"\r\n                      name=\"amount\"\r\n                      style={{ width: \"70%\" }}\r\n                      size=\"small\"\r\n                      value={row.amount}\r\n                      onChange={(e) => onChangeProductValue(e, row)}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell padding=\"none\">\r\n                    <TextField\r\n                      select\r\n                      value={row.unit}\r\n                      onChange={(e) => onChangeProductValue(e, row)}\r\n                      variant=\"outlined\"\r\n                      name=\"unit\"\r\n                      style={{ width: \"70%\" }}\r\n                      size=\"small\"\r\n                    >\r\n                      {getProductUnitPicker(row).map((option) => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </TextField>\r\n                  </TableCell>\r\n                  <TableCell padding=\"none\">\r\n                    <TextField\r\n                      type=\"number\"\r\n                      variant=\"outlined\"\r\n                      name=\"fee\"\r\n                      style={{ width: \"70%\" }}\r\n                      size=\"small\"\r\n                      value={row.fee}\r\n                      onChange={(e) => onChangeProductValue(e, row)}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n            {!list.length && !getDepotProductRequest.pending && (\r\n              <TableRow style={{ height: 53 }}>\r\n                <TableCell colSpan={6} style={{ textAlign: \"center\" }}>\r\n                  <Typography variant=\"h6\">\r\n                    داده ای برای نمایش وجود ندارد\r\n                  </Typography>\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n});\r\nexport default ProductList;\r\n","import React, { Fragment, useEffect, useState, useRef } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, Paper, Typography, TextField, Button } from \"@material-ui/core\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { getQueryString } from \"../../helpers/utils\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport dialogAction from \"../../redux/actions/dialogAction\";\r\nimport PrePayment from \"../payment/prePayment\";\r\nimport Product from \"./productFastInvoice\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingBottom: 7,\r\n    paddingTop: 7,\r\n  },\r\n}));\r\n\r\nexport default function MainDetail() {\r\n  const productsRef = useRef(null);\r\n  const paymentRef = useRef(null);\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const invoiceType = getQueryString(\"type\");\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n  const [selectedDate, handleDateChange] = useState(moment());\r\n  const [products, setProducts] = useState([]);\r\n  const [invoicePerson, setInvoicePerson] = useState(\" \");\r\n  const [payments, setPayments] = useState({\r\n    cashes: [],\r\n    banks: [],\r\n    cheques: [],\r\n  });\r\n  const [totalFee, setTotalFee] = useState(0);\r\n  const [totalPayment, setTotalPayment] = useState(0);\r\n  const [discount, setDiscount] = useState(0);\r\n  const [pureFee, setPureFee] = useState(0);\r\n  const [totalRemaining, setTotalRemaining] = useState(0);\r\n\r\n  const addInvoiceRequest = useApi({\r\n    method: \"post\",\r\n    url: `invoice`,\r\n  });\r\n\r\n  const addInvoicePaymentRequest = useApi({\r\n    method: \"post\",\r\n    url: `payment`,\r\n  });\r\n\r\n  const onChnageDate = (e) => {\r\n    handleDateChange(e);\r\n  };\r\n\r\n  const getProperProducts = () => {\r\n    const newProducts = [];\r\n    productsRef.current.map((item) => {\r\n      item.productId = item.id;\r\n      delete item.id;\r\n      delete item.stocks;\r\n      delete item.categories;\r\n      if (item.fee && item.unit && item.amount) {\r\n        return newProducts.push(item);\r\n      }\r\n    });\r\n    return newProducts;\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    const value = {\r\n      ...data,\r\n      products: getProperProducts(),\r\n      date: selectedDate._d,\r\n      customerId: 1,\r\n      type: invoiceType,\r\n      categoryId: [1],\r\n      globalCustomer: invoicePerson.trim(),\r\n    };\r\n    const response = await addInvoiceRequest.execute(value);\r\n    console.log(response, addInvoiceRequest);\r\n    const invoicePayment = {\r\n      ...paymentRef.current,\r\n      // invoiceId: response.id,\r\n      date: selectedDate._d,\r\n      personId: 1,\r\n      personType: \"CUSTOMER\",\r\n      type: invoiceType === \"SELL\" ? \"INCOME\" : \"OUTCOME\",\r\n      // description: `بابت فاکتور به شماره  ${response.id}`,\r\n    };\r\n    if (\r\n      invoicePayment.cashes.length > 0 ||\r\n      invoicePayment.cheques.length > 0 ||\r\n      invoicePayment.banks.length > 0\r\n    ) {\r\n      await addInvoicePaymentRequest.execute(invoicePayment);\r\n    }\r\n\r\n    setTimeout(() => {\r\n      onReject();\r\n    }, 1000);\r\n  };\r\n\r\n  const onReject = () => {\r\n    history.push(\"/app/invoice-list?type=ALL\");\r\n  };\r\n\r\n  const onSubmitProduct = (product, type) => {\r\n    if (type === \"edit\") {\r\n      const index = products.findIndex((item) => item.id === product.id);\r\n      const ProductsTmp = [...products];\r\n      ProductsTmp[index] = product;\r\n      setProducts(ProductsTmp);\r\n    } else {\r\n      setProducts([...products, product]);\r\n    }\r\n    onDismissProduct();\r\n  };\r\n\r\n  const onDismissProduct = () => {\r\n    dialogAction.hide({ name: \"product\" });\r\n  };\r\n\r\n  const onShowProductDialog = (type, data) => {\r\n    dialogAction.show({\r\n      title: \"انتخاب کالا\",\r\n      component: (\r\n        <Product\r\n          onSubmit={onSubmitProduct}\r\n          onDismiss={onDismissProduct}\r\n          customerId={1}\r\n          defaultValues={data}\r\n          action={type}\r\n        />\r\n      ),\r\n      name: \"product\",\r\n      size: \"6\",\r\n      confirm: false,\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  const getDetailTitle = () => {\r\n    if (invoiceType === \"SELL\") {\r\n      return \"افزودن فاکتور فروش\";\r\n    }\r\n    return \"افزودن فاکتور خرید\";\r\n  };\r\n\r\n  const onSubmitPayment = (data) => {\r\n    if (data) {\r\n      const cashesPrice = data.cashes.reduce(\r\n        (n, { price }) => n + Number(price),\r\n        0,\r\n      );\r\n      const chequesPrice = data.cheques.reduce(\r\n        (n, { price }) => n + Number(price),\r\n        0,\r\n      );\r\n      const banksPrice = data.banks.reduce(\r\n        (n, { price }) => n + Number(price),\r\n        0,\r\n      );\r\n      setTotalPayment(cashesPrice + chequesPrice + banksPrice);\r\n    }\r\n  };\r\n\r\n  const onDiscountChange = (e) => {\r\n    setDiscount(e.target.value);\r\n  };\r\n\r\n  const onChangeInvoicePerson = (e) => {\r\n    setInvoicePerson(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTotalFee(products.reduce((n, { totalFee }) => n + totalFee, 0));\r\n  }, [products]);\r\n\r\n  useEffect(() => {\r\n    const factorPay = totalFee - (Number(discount) + totalPayment);\r\n\r\n    setPureFee(factorPay);\r\n  }, [totalFee, discount, totalPayment]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <Grid item lg={8} sm={12} className={classes.root}>\r\n        <Paper className={classes.paper}>\r\n          <Typography\r\n            className={classes.title}\r\n            variant=\"h6\"\r\n            id=\"tableTitle\"\r\n            component=\"div\"\r\n          >\r\n            {getDetailTitle()}\r\n          </Typography>\r\n\r\n          <Grid container spacing={3}>\r\n            <Fragment>\r\n              <Grid item lg={6} xs={12} style={{ display: \"flex\" }}>\r\n                <TextField\r\n                  label=\"نام مشتری\"\r\n                  variant=\"outlined\"\r\n                  name={\"personName\"}\r\n                  onChange={onChangeInvoicePerson}\r\n                  value={invoicePerson}\r\n                  fullWidth\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n              <Grid item lg={6} xs={12} className={classes.datePicker}>\r\n                <DatePicker\r\n                  autoOk\r\n                  name=\"date\"\r\n                  label=\"تاریخ ثبت\"\r\n                  inputVariant=\"outlined\"\r\n                  okLabel=\"تأیید\"\r\n                  cancelLabel=\"لغو\"\r\n                  labelFunc={(date) =>\r\n                    date ? date.format(\"jYYYY/jMM/jDD\") : \"\"\r\n                  }\r\n                  value={selectedDate}\r\n                  onChange={onChnageDate}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <Product\r\n                  onSubmit={onSubmitProduct}\r\n                  onDismiss={onDismissProduct}\r\n                  customerId={1}\r\n                  ref={productsRef}\r\n                />\r\n              </Grid>\r\n\r\n              <PrePayment\r\n                type={invoiceType === \"BUY\" ? \"OUTCOME\" : \"INCOME\"}\r\n                defaultValues={payments}\r\n                ref={paymentRef}\r\n                onSubmit={onSubmitPayment}\r\n              />\r\n              <Grid container spacing={3} style={{ marginTop: 20 }}>\r\n                <Grid item lg={3} xs={6}>\r\n                  <TextField\r\n                    disabled\r\n                    variant=\"outlined\"\r\n                    label=\"مبلغ کل\"\r\n                    value={totalFee}\r\n                    fullWidth\r\n                    size=\"small\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={3} xs={6}>\r\n                  <TextField\r\n                    disabled\r\n                    variant=\"outlined\"\r\n                    label={`${\r\n                      invoiceType === \"SELL\" ? \"جمع دریافتی\" : \"جمع پرداختی\"\r\n                    }`}\r\n                    value={totalPayment}\r\n                    fullWidth\r\n                    size=\"small\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={3} xs={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    onChange={onDiscountChange}\r\n                    label=\"تخفیف\"\r\n                    value={discount || \" \"}\r\n                    fullWidth\r\n                    size=\"small\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={3} xs={6}>\r\n                  <TextField\r\n                    disabled\r\n                    variant=\"outlined\"\r\n                    label=\"مبلغ خالص\"\r\n                    value={pureFee}\r\n                    fullWidth\r\n                    size=\"small\"\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item lg={3} xs={6}>\r\n                  <TextField\r\n                    disabled\r\n                    variant=\"outlined\"\r\n                    label=\"مانده نهایی\"\r\n                    value={totalRemaining}\r\n                    fullWidth\r\n                    size=\"small\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n              >\r\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                  تایید\r\n                </Button>\r\n\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  onClick={onReject}\r\n                >\r\n                  بازگشت\r\n                </Button>\r\n              </Grid>\r\n            </Fragment>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n    </form>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  chip: {\r\n    color: \"#fff\",\r\n  },\r\n  allIcon: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  INCOME: {\r\n    backgroundColor: theme.palette.success.main,\r\n  },\r\n  incomeIcon: {\r\n    color: theme.palette.success.main,\r\n  },\r\n  OUTCOME: {\r\n    backgroundColor: theme.palette.danger.main,\r\n  },\r\n  outgoIcon: {\r\n    color: theme.palette.danger.main,\r\n  },\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingBottom: 7,\r\n    paddingTop: 7,\r\n  },\r\n}));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Typography,\r\n  Chip,\r\n  Button,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { convertParamsToQueryString } from \"../../helpers/utils\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    label: \"نام صندوق\",\r\n  },\r\n\r\n  {\r\n    id: \"logo\",\r\n    label: \"بانک\",\r\n  },\r\n  { id: \"amount\", label: \"موجودی\" },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function CashSelector({ onSelect, onDismiss, chequeId }) {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"name\");\r\n  const [search, setSearch] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n  };\r\n\r\n  const getCashRequest = useApi({\r\n    method: \"get\",\r\n    url: `cashdesk?type=BANK&${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n    })}`,\r\n  });\r\n\r\n  const handleAction = (id) => {\r\n    onSelect(id, chequeId);\r\n  };\r\n\r\n  const getData = async () => {\r\n    const cashList = await getCashRequest.execute();\r\n    setList(cashList.data);\r\n    setTotal(cashList.total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize]);\r\n\r\n  return (\r\n    <div style={{ marginTop: -50 }}>\r\n      <TableTop handleSearch={onSearch} />\r\n      <TableContainer style={{ padding: \"0 10px\" }}>\r\n        <Table\r\n          className={classes.table}\r\n          size={\"medium\"}\r\n          style={{ paddingRight: 10 }}\r\n        >\r\n          <TableHeader\r\n            classes={classes}\r\n            order={order}\r\n            orderBy={orderBy}\r\n            onRequestSort={handleRequestSort}\r\n            rowCount={list.length}\r\n            headCells={headCells}\r\n          />\r\n          <TableBody>\r\n            {list.map((row) => {\r\n              return (\r\n                <TableRow\r\n                  hover\r\n                  tabIndex={-1}\r\n                  key={row.id}\r\n                  style={{ paddingRight: 10 }}\r\n                >\r\n                  <TableCell padding=\"none\">{row.name}</TableCell>\r\n\r\n                  <TableCell padding=\"none\">\r\n                    {row.bank && (\r\n                      <img\r\n                        style={{ width: 40, height: 40 }}\r\n                        alt={row.bank.name}\r\n                        src={`${Constant.API_ADDRESS}/${row.bank.logo}`}\r\n                      />\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell padding=\"none\">{row.amount}</TableCell>\r\n\r\n                  <TableCell padding=\"none\">\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={() => handleAction(row.id)}\r\n                    >\r\n                      انتخاب حساب\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n            {!list.length && !getCashRequest.pending && (\r\n              <TableRow style={{ height: 53 }}>\r\n                <TableCell colSpan={6} style={{ textAlign: \"center\" }}>\r\n                  <Typography variant=\"h6\">\r\n                    داده ای برای نمایش وجود ندارد\r\n                  </Typography>\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePaging\r\n        count={total}\r\n        handleChangePage={handleChangePage}\r\n        handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n        page={page}\r\n        rowsPerPage={pageSize}\r\n      />\r\n\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n      >\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n          انصراف\r\n        </Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, Paper, TextField, Button } from \"@material-ui/core\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingBottom: 7,\r\n    paddingTop: 7,\r\n  },\r\n}));\r\n\r\nexport default function SpendCheque({ chequeId, onDismiss, onSubmit }) {\r\n  const classes = useStyles();\r\n  const [selectedPerson, setSelectedPerson] = useState();\r\n  const [selectedDate, handleDateChange] = useState(moment());\r\n  const [persons, setPersons] = useState([]);\r\n  const [description, setDescription] = useState();\r\n\r\n  const getPersonsRequest = useApi({\r\n    method: \"get\",\r\n    url: \"customer\",\r\n  });\r\n\r\n  const getPersons = async () => {\r\n    const personList = await getPersonsRequest.execute();\r\n    setPersons(personList.data);\r\n  };\r\n\r\n  const onDone = () => {\r\n    onSubmit({\r\n      chequeId,\r\n      personId: selectedPerson.id,\r\n      personType: selectedPerson.type,\r\n      date: selectedDate._d,\r\n      description,\r\n    });\r\n  };\r\n\r\n  const onChangePerson = (e, value) => {\r\n    setSelectedPerson(value);\r\n  };\r\n\r\n  const onChangeDescription = (e) => {\r\n    setDescription(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPersons();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Fragment>\r\n        <Grid item xs={12} style={{ display: \"flex\" }}>\r\n          <Autocomplete\r\n            id=\"combo-box-demo\"\r\n            onChange={onChangePerson}\r\n            options={persons}\r\n            getOptionLabel={(option) =>\r\n              `${option.firstName} ${option.lastName}`\r\n            }\r\n            fullWidth\r\n            size=\"small\"\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"انتخاب شخص\" variant=\"outlined\" />\r\n            )}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.datePicker}>\r\n          <DatePicker\r\n            autoOk\r\n            name=\"date\"\r\n            label=\"تاریخ ثبت\"\r\n            inputVariant=\"outlined\"\r\n            okLabel=\"تأیید\"\r\n            cancelLabel=\"لغو\"\r\n            labelFunc={(date) => (date ? date.format(\"jYYYY/jMM/jDD\") : \"\")}\r\n            value={selectedDate}\r\n            onChange={handleDateChange}\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            label=\"بابت\"\r\n            name={\"description\"}\r\n            onChange={onChangeDescription}\r\n            value={description}\r\n            fullWidth\r\n            size=\"small\"\r\n          />\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n        >\r\n          <Button variant=\"contained\" color=\"primary\" onClick={onDone}>\r\n            تایید\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n            بازگشت\r\n          </Button>\r\n        </Grid>\r\n      </Fragment>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Tabs,\r\n  Tab,\r\n  Chip,\r\n} from \"@material-ui/core\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport {\r\n  convertParamsToQueryString,\r\n  persianNumber,\r\n  hasPermission,\r\n} from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport clsx from \"clsx\";\r\nimport dialogAction from \"../../redux/actions/dialogAction\";\r\nimport CashSelector from \"./cashSelector\";\r\nimport SpendCheque from \"./spendCheque\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \" date\",\r\n    label: \"تاریخ سررسید\",\r\n  },\r\n  {\r\n    id: \"number\",\r\n    label: \"شماره چک\",\r\n  },\r\n  {\r\n    id: \"bank\",\r\n    label: \"بانک\",\r\n  },\r\n  { id: \"amount\", label: \"مبلغ\" },\r\n  { id: \"person\", label: \"طرف حساب\" },\r\n  { id: \"cashdesk\", label: \"محل چک\" },\r\n  { id: \"type\", label: \"نوع تراکنش\" },\r\n  { id: \"action\" },\r\n];\r\n\r\nconst MainList = () => {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"chequeDueDate\");\r\n  const [search, setSearch] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [paymentType, setPaymentType] = useState(\"ALL\");\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const getChequeRequest = useApi({\r\n    method: \"get\",\r\n    url: `cheque?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n      paymentType,\r\n    })}`,\r\n  });\r\n\r\n  const spendRequest = useApi({\r\n    method: \"post\",\r\n    url: `cheque/spend`,\r\n  });\r\n\r\n  const sleepRequest = useApi({\r\n    method: \"post\",\r\n    url: `cheque/sleep`,\r\n  });\r\n\r\n  const onSelectCash = async (cashdeskId, chequeId) => {\r\n    await sleepRequest.execute({ chequeId, cashdeskId });\r\n    getData();\r\n    DialogActions.hide({ name: \"cash\" });\r\n  };\r\n\r\n  const onSubmitSpend = async (data) => {\r\n    await spendRequest.execute(data);\r\n    getData();\r\n    DialogActions.hide({ name: \"spend\" });\r\n  };\r\n\r\n  const handleAction = (row, type) => {\r\n    const types = {\r\n      sleep: () => {\r\n        dialogAction.show({\r\n          title: \"انتخاب صندوق\",\r\n          component: (\r\n            <CashSelector\r\n              chequeId={row.id}\r\n              onSelect={onSelectCash}\r\n              onDismiss={() => DialogActions.hide({ name: \"cash\" })}\r\n            />\r\n          ),\r\n          name: \"cash\",\r\n          size: \"8\",\r\n          confirm: false,\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n      spend: () => {\r\n        dialogAction.show({\r\n          title: \"خرج چک\",\r\n          component: (\r\n            <SpendCheque\r\n              chequeId={row.id}\r\n              onSubmit={onSubmitSpend}\r\n              onDismiss={() => DialogActions.hide({ name: \"spend\" })}\r\n            />\r\n          ),\r\n          name: \"spend\",\r\n          size: \"6\",\r\n          confirm: false,\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n      revert: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از برداشتن این چک مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            onSelectCash({ cashdeskId: 1, chequeId: row.id });\r\n            DialogActions.hide({ name: \"revert\" });\r\n          },\r\n          name: \"revert\",\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n    };\r\n\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const onChangeType = (data, e) => {\r\n    setPaymentType(e);\r\n  };\r\n\r\n  const getActionOptions = (data) => {\r\n    if (data.type === \"INCOME\" && data.status === \"PENDING\") {\r\n      return (\r\n        <TableCell padding=\"none\">\r\n          <TableRowMenu\r\n            options={[\r\n              { id: \"sleep\", title: \"خواباندن به حساب\" },\r\n              { id: \"spend\", title: \"خرج کردن چک\" },\r\n            ]}\r\n            hadleAction={(type) => handleAction(data, type)}\r\n          />\r\n        </TableCell>\r\n      );\r\n    } else if (data.type === \"INCOME\" && data.status === \"SLEEP\") {\r\n      return (\r\n        <TableCell padding=\"none\">\r\n          <TableRowMenu\r\n            options={[{ id: \"revert\", title: \"برداشتن از حساب\" }]}\r\n            hadleAction={(type) => handleAction(data, type)}\r\n          />\r\n        </TableCell>\r\n      );\r\n    } else {\r\n      return <TableCell padding=\"none\" />;\r\n    }\r\n  };\r\n\r\n  const getData = async () => {\r\n    const chequeList = await getChequeRequest.execute();\r\n    setList(chequeList.data);\r\n    setTotal(chequeList.total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize, paymentType]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.CASH_LIST) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getChequeRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title=\"لیست چک ها\"\r\n                    handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                  />\r\n                  <div className={classes.tab}>\r\n                    <Tabs\r\n                      variant=\"fullWidth\"\r\n                      value={paymentType}\r\n                      onChange={onChangeType}\r\n                      indicatorColor=\"primary\"\r\n                      textColor=\"primary\"\r\n                      centered\r\n                    >\r\n                      <Tab\r\n                        icon={\r\n                          <i\r\n                            className={clsx(\r\n                              \"material-icons-round\",\r\n                              classes.allIcon,\r\n                            )}\r\n                          >\r\n                            sync\r\n                          </i>\r\n                        }\r\n                        label=\"کل چک ها\"\r\n                        value=\"ALL\"\r\n                      />\r\n                      <Tab\r\n                        icon={\r\n                          <i\r\n                            className={clsx(\r\n                              \"material-icons-round\",\r\n                              classes.incomeIcon,\r\n                            )}\r\n                          >\r\n                            trending_up\r\n                          </i>\r\n                        }\r\n                        label=\"چک های دریافتی\"\r\n                        value=\"INCOME\"\r\n                      />\r\n                      <Tab\r\n                        icon={\r\n                          <i\r\n                            className={clsx(\r\n                              \"material-icons-round\",\r\n                              classes.outgoIcon,\r\n                            )}\r\n                          >\r\n                            trending_down\r\n                          </i>\r\n                        }\r\n                        label=\"چک های پرداختی\"\r\n                        value=\"OUTCOME\"\r\n                      />\r\n                    </Tabs>\r\n                  </div>\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                            >\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  new Date(\r\n                                    row.chequeDueDate,\r\n                                  ).toLocaleDateString(\"fa-IR\"),\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(row.chequeNumber)}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.bank && (\r\n                                  <img\r\n                                    style={{ width: 40, height: 40 }}\r\n                                    alt={row.bank.name}\r\n                                    src={`${Constant.API_ADDRESS}/${row.bank.logo}`}\r\n                                  />\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  Number(row.price).toLocaleString(),\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">{row.person}</TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.cashDeskName}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                <Chip\r\n                                  label={Constant.PAYMENT_TYPE[row.type]}\r\n                                  className={clsx(\r\n                                    classes.chip,\r\n                                    classes[row.type],\r\n                                  )}\r\n                                />\r\n                              </TableCell>\r\n\r\n                              {getActionOptions(row)}\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getChequeRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={10}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainList;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  RadioGroup,\r\n  Radio,\r\n  FormControlLabel,\r\n} from \"@material-ui/core\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { getQueryString } from \"../../helpers/utils\";\r\nimport CircularProgress from \"../../components/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: 7,\r\n  },\r\n}));\r\n\r\nexport default function MainDetail({ defaultValues }) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const id = getQueryString(\"id\");\r\n  const [detail, setDetail] = useState({});\r\n  const [banks, setBanks] = useState([]);\r\n  const [selectedType, setSelectedType] = React.useState(\"CASH\");\r\n  const [selectedBank, setSelectedBank] = useState(\r\n    defaultValues?.bank.value || 1,\r\n  );\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n\r\n  const addCashRequest = useApi({\r\n    method: \"post\",\r\n    url: `cashdesk`,\r\n  });\r\n  const editCashRequest = useApi({\r\n    method: \"put\",\r\n    url: `cashdesk/${id}`,\r\n  });\r\n  const detailCashRequest = useApi({\r\n    method: \"get\",\r\n    url: `cashdesk/${id}`,\r\n  });\r\n  const getBankRequest = useApi({\r\n    method: \"get\",\r\n    url: `bank`,\r\n  });\r\n\r\n  const handleChangeType = (event) => {\r\n    setSelectedType(event.target.value);\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    if (id) {\r\n      await editCashRequest.execute(data);\r\n    } else {\r\n      await addCashRequest.execute(data);\r\n    }\r\n    setTimeout(() => {\r\n      onReject();\r\n    }, 1000);\r\n  };\r\n\r\n  const onReject = () => {\r\n    history.push(\"/app/cash-list\");\r\n  };\r\n\r\n  const getDetail = async () => {\r\n    const detail = await detailCashRequest.execute();\r\n    setDetail(detail.data);\r\n    setSelectedBank(detail.data.bankId);\r\n    setSelectedType(detail.data.type);\r\n  };\r\n\r\n  const onChangeBank = (e) => {\r\n    setSelectedBank(e.target.value);\r\n  };\r\n\r\n  const getBanks = async () => {\r\n    const result = await getBankRequest.execute();\r\n    setBanks(result.data);\r\n  };\r\n\r\n  const onDone = (data) => {\r\n    const value = {\r\n      ...data,\r\n      bankId: selectedBank,\r\n      type: selectedType,\r\n      isUpdate: !!defaultValues,\r\n    };\r\n    onSubmit(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      getDetail();\r\n    }\r\n    getBanks();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(detail);\r\n  }, [reset, detail]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onDone)}>\r\n      {!detailCashRequest.pending ? (\r\n        <Grid item lg={6} sm={12} className={classes.root}>\r\n          <Paper className={classes.paper}>\r\n            <Typography\r\n              className={classes.title}\r\n              variant=\"h6\"\r\n              id=\"tableTitle\"\r\n              component=\"div\"\r\n            >\r\n              {id ? \"ویرایش صندوق\" : \"افزودن صندوق\"}\r\n            </Typography>\r\n\r\n            <Grid container spacing={3}>\r\n              <Fragment>\r\n                <Grid item lg={12} xs={12}>\r\n                  <RadioGroup\r\n                    aria-label=\"gender\"\r\n                    name=\"gender1\"\r\n                    value={selectedType}\r\n                    onChange={handleChangeType}\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-around\",\r\n                    }}\r\n                  >\r\n                    <FormControlLabel\r\n                      value=\"CASH\"\r\n                      control={<Radio />}\r\n                      label=\"نقدی\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"BANK\"\r\n                      control={<Radio />}\r\n                      label=\"بانکی\"\r\n                    />\r\n                  </RadioGroup>\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"نام\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.name}\r\n                          helperText={errors.name ? errors.name.message : \"\"}\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                    name=\"name\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"موجودی \"\r\n                          type=\"number\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.amount}\r\n                          helperText={\r\n                            errors.amount ? errors.amount.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                    name=\"amount\"\r\n                  />\r\n                </Grid>\r\n                {selectedType === \"BANK\" && (\r\n                  <>\r\n                    <Grid item lg={6} xs={12}>\r\n                      <TextField\r\n                        select\r\n                        label=\"بانک\"\r\n                        onChange={onChangeBank}\r\n                        value={selectedBank}\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        name=\"bank\"\r\n                        SelectProps={{\r\n                          classes: {\r\n                            select: classes.rootSelect,\r\n                          },\r\n                        }}\r\n                      >\r\n                        {banks.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            <img\r\n                              src={`${Constant.API_ADDRESS}/${option.logo}`}\r\n                              alt={option.label}\r\n                              style={{\r\n                                width: 25,\r\n                                height: 25,\r\n                                borderRadius: \"50%\",\r\n                                marginLeft: 10,\r\n                              }}\r\n                            />\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </TextField>\r\n                    </Grid>\r\n                    <Grid item lg={6} xs={12}>\r\n                      <Controller\r\n                        control={control}\r\n                        render={({ onChange, value, name }) => {\r\n                          return (\r\n                            <TextField\r\n                              fullWidth\r\n                              value={value}\r\n                              size=\"small\"\r\n                              name={name}\r\n                              label=\"شماره کارت\"\r\n                              variant=\"outlined\"\r\n                              onChange={onChange}\r\n                              error={!!errors.accountCardNumber}\r\n                              helperText={\r\n                                errors.accountCardNumber\r\n                                  ? errors.accountCardNumber.message\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          );\r\n                        }}\r\n                        rules={{\r\n                          minLength: {\r\n                            value: 16,\r\n                            message: Constant.VALIDATION.CARD_NUMBER,\r\n                          },\r\n                          maxLength: {\r\n                            value: 16,\r\n                            message: Constant.VALIDATION.CARD_NUMBER,\r\n                          },\r\n                        }}\r\n                        name=\"accountCardNumber\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item lg={6} xs={12}>\r\n                      <Controller\r\n                        control={control}\r\n                        render={({ onChange, value, name }) => {\r\n                          return (\r\n                            <TextField\r\n                              fullWidth\r\n                              value={value}\r\n                              size=\"small\"\r\n                              name={name}\r\n                              label=\"شماره حساب\"\r\n                              variant=\"outlined\"\r\n                              onChange={onChange}\r\n                              error={!!errors.accountNumber}\r\n                              helperText={\r\n                                errors.accountNumber\r\n                                  ? errors.accountNumber.message\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          );\r\n                        }}\r\n                        name=\"accountNumber\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item lg={6} xs={12}>\r\n                      <Controller\r\n                        control={control}\r\n                        render={({ onChange, value, name }) => {\r\n                          return (\r\n                            <TextField\r\n                              fullWidth\r\n                              value={value}\r\n                              size=\"small\"\r\n                              name={name}\r\n                              label=\"شماره شبا\"\r\n                              variant=\"outlined\"\r\n                              onChange={onChange}\r\n                              error={!!errors.accountShaba}\r\n                              helperText={\r\n                                errors.accountShaba\r\n                                  ? errors.accountShaba.message\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          );\r\n                        }}\r\n                        name=\"accountShaba\"\r\n                      />\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n                <Grid item xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          multiline\r\n                          variant=\"outlined\"\r\n                          label=\"توضیحات\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.description}\r\n                          helperText={\r\n                            errors.description ? errors.description.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    name=\"description\"\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                    تایید\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={onReject}\r\n                  >\r\n                    بازگشت\r\n                  </Button>\r\n                </Grid>\r\n              </Fragment>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      ) : (\r\n        <CircularProgress />\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, TextField, MenuItem, Button, Divider } from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n}));\r\nconst Filter = ({ onFilter }) => {\r\n  const classes = useStyles();\r\n  const [selectedPerson, setSelectedPerson] = useState();\r\n  const [selectedFromDate, handleFromDateChange] = useState(moment());\r\n  const [selectedToDate, handleToDateChange] = useState(moment());\r\n  const [customers, setCustomers] = useState([]);\r\n\r\n  const getCustomersRequest = useApi({\r\n    method: \"get\",\r\n    url: \"customer\",\r\n  });\r\n\r\n  const onChangePerson = (e, value) => {\r\n    setSelectedPerson(value);\r\n  };\r\n\r\n  const onChnageDate = (e, type) => {\r\n    if (type === \"from\") {\r\n      handleFromDateChange(e);\r\n    } else {\r\n      handleToDateChange(e);\r\n    }\r\n  };\r\n\r\n  const getCustomers = async () => {\r\n    const customerList = await getCustomersRequest.execute();\r\n    setCustomers(customerList.data);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (typeof onFilter === \"function\") {\r\n      onFilter(\r\n        `{customerId:${\r\n          selectedPerson ? selectedPerson.id : null\r\n        },from:${selectedFromDate._d.toISOString()},to:${selectedToDate._d.toISOString()}}`,\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCustomers();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container spacing={3} alignItems=\"center\" style={{ padding: 10 }}>\r\n      <Grid item lg={3} xs={12} style={{ display: \"flex\" }}>\r\n        <Autocomplete\r\n          id=\"combo-box-demo\"\r\n          onChange={onChangePerson}\r\n          options={customers}\r\n          getOptionLabel={(option) => `${option.firstName} ${option.lastName}`}\r\n          fullWidth\r\n          size=\"small\"\r\n          renderInput={(params) => (\r\n            <TextField {...params} label=\"انتخاب شخص\" variant=\"outlined\" />\r\n          )}\r\n        />\r\n      </Grid>\r\n      <Grid item lg={3} xs={12} className={classes.datePicker}>\r\n        <DatePicker\r\n          autoOk\r\n          name=\"date\"\r\n          label=\"از تاریخ\"\r\n          inputVariant=\"outlined\"\r\n          okLabel=\"تأیید\"\r\n          cancelLabel=\"لغو\"\r\n          labelFunc={(date) => (date ? date.format(\"jYYYY/jMM/jDD\") : \"\")}\r\n          value={selectedFromDate}\r\n          onChange={(e) => onChnageDate(e, \"from\")}\r\n          style={{ width: \"100%\" }}\r\n        />\r\n      </Grid>\r\n      <Grid item lg={3} xs={12} className={classes.datePicker}>\r\n        <DatePicker\r\n          autoOk\r\n          name=\"date\"\r\n          label=\"تا تاریخ\"\r\n          inputVariant=\"outlined\"\r\n          okLabel=\"تأیید\"\r\n          cancelLabel=\"لغو\"\r\n          labelFunc={(date) => (date ? date.format(\"jYYYY/jMM/jDD\") : \"\")}\r\n          value={selectedToDate}\r\n          onChange={(e) => onChnageDate(e, \"to\")}\r\n          style={{ width: \"100%\" }}\r\n        />\r\n      </Grid>\r\n      <Grid item lg={3} xs={12}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n          تایید\r\n        </Button>\r\n      </Grid>\r\n      <Divider style={{ width: \"100%\" }} />\r\n    </Grid>\r\n  );\r\n};\r\nexport default Filter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Tabs,\r\n  Tab,\r\n  Chip,\r\n} from \"@material-ui/core\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport {\r\n  convertParamsToQueryString,\r\n  persianNumber,\r\n  hasPermission,\r\n} from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport clsx from \"clsx\";\r\nimport { getQueryString } from \"../../helpers/utils\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\nimport FilterComponent from \"./filter\";\r\n\r\nconst headCells = [\r\n  { id: \"personType\" },\r\n  {\r\n    id: \"person\",\r\n    label: \"نام شخص\",\r\n  },\r\n  {\r\n    id: \"date\",\r\n    label: \"تاریخ\",\r\n  },\r\n  { id: \"price\", label: \"مبلغ\" },\r\n  {\r\n    id: \"typr\",\r\n    label: \"نوع\",\r\n  },\r\n\r\n  // { id: \"action\" },\r\n];\r\n\r\nconst MainList = () => {\r\n  const paymentType = getQueryString(\"type\");\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"date\");\r\n  const [search, setSearch] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [type, setType] = useState(paymentType);\r\n  const [filter, setFilter] = useState();\r\n  const history = useHistory();\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onAdd = () => {\r\n    history.push(`/app/payment-detail?type=${type}`);\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n  };\r\n\r\n  const getPaymentRequest = useApi({\r\n    method: \"get\",\r\n    url: decodeURIComponent(\r\n      `payment?${convertParamsToQueryString({\r\n        page,\r\n        order,\r\n        orderBy,\r\n        pageSize,\r\n        search,\r\n        type,\r\n        filter,\r\n      })}`,\r\n    ),\r\n  });\r\n\r\n  const deleteUseRequest = useApi({\r\n    method: \"delete\",\r\n    url: `payment`,\r\n  });\r\n\r\n  const handleAction = (row, type) => {\r\n    const types = {\r\n      edit: () => {\r\n        history.push(`/app/payment-detail?type=${row.type}&id=${row.id}`);\r\n      },\r\n      delete: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            await deleteUseRequest.execute(null, row.id);\r\n            setList(list.filter((item) => item.id !== row.id));\r\n            DialogActions.hide();\r\n          },\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const onChangeType = (e, value) => {\r\n    setType(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onFilter = (data) => {\r\n    setFilter(data);\r\n    setPage(0);\r\n  };\r\n\r\n  const getTableTitle = () => {\r\n    if (type === \"INCOME\") {\r\n      return \"لیست دریافتی ها\";\r\n    } else if (type === \"OUTCOME\") {\r\n      return \"لیست پرداختی ها\";\r\n    }\r\n    return \"لیست دریافتی ها و پرداختی ها\";\r\n  };\r\n\r\n  const getData = async () => {\r\n    const paymentList = await getPaymentRequest.execute();\r\n    setList(paymentList.data);\r\n    setTotal(paymentList.total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize, type, filter]);\r\n\r\n  useEffect(() => {\r\n    setType(paymentType);\r\n  }, [paymentType]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.PAYMENT_SHOW) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getPaymentRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title={getTableTitle()}\r\n                    onAdd={type !== \"ALL\" && onAdd}\r\n                    handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                    FilterComponent={<FilterComponent onFilter={onFilter} />}\r\n                  />\r\n                  <div className={classes.tab}>\r\n                    <Tabs\r\n                      value={type}\r\n                      onChange={onChangeType}\r\n                      indicatorColor=\"primary\"\r\n                      textColor=\"primary\"\r\n                      centered\r\n                      variant=\"fullWidth\"\r\n                    >\r\n                      <Tab\r\n                        icon={\r\n                          <i\r\n                            className={clsx(\r\n                              \"material-icons-round\",\r\n                              classes.allIcon,\r\n                            )}\r\n                          >\r\n                            sync\r\n                          </i>\r\n                        }\r\n                        label=\"کل تراکنش ها\"\r\n                        value=\"ALL\"\r\n                      />\r\n                      <Tab\r\n                        icon={\r\n                          <i\r\n                            className={clsx(\r\n                              \"material-icons-round\",\r\n                              classes.incomeIcon,\r\n                            )}\r\n                          >\r\n                            trending_up\r\n                          </i>\r\n                        }\r\n                        label=\"دریافتی ها\"\r\n                        value=\"INCOME\"\r\n                      />\r\n                      <Tab\r\n                        icon={\r\n                          <i\r\n                            className={clsx(\r\n                              \"material-icons-round\",\r\n                              classes.outgoIcon,\r\n                            )}\r\n                          >\r\n                            trending_down\r\n                          </i>\r\n                        }\r\n                        label=\"پرداختی ها\"\r\n                        value=\"OUTCOME\"\r\n                      />\r\n                    </Tabs>\r\n                  </div>\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                            >\r\n                              <TableCell padding=\"none\">\r\n                                {row.paymentname}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">{row.person}</TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  new Date(row.date).toLocaleDateString(\r\n                                    \"fa-IR\",\r\n                                  ),\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  Number(row.price).toLocaleString(),\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                <Chip\r\n                                  label={Constant.PAYMENT_TYPE[row.type]}\r\n                                  className={clsx(\r\n                                    classes.type,\r\n                                    classes[row.type],\r\n                                  )}\r\n                                />\r\n                              </TableCell>\r\n\r\n                              <TableCell padding=\"none\">\r\n                                <TableRowMenu\r\n                                  options={\r\n                                    [\r\n                                      // { id: \"edit\", title: \"ویرایش\" },\r\n                                      // { id: \"delete\", title: \"حذف\" },\r\n                                    ]\r\n                                  }\r\n                                  hadleAction={(type) =>\r\n                                    handleAction(row, type)\r\n                                  }\r\n                                />\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getPaymentRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default MainList;\r\n","import React, { Fragment, useEffect, useRef, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  FormControlLabel,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { getQueryString } from \"../../helpers/utils\";\r\nimport CircularProgress from \"../../components/CircularProgress\";\r\nimport PersonSelector from \"./personSelector\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport dialogAction from \"../../redux/actions/dialogAction\";\r\nimport PrePayment from \"./prePayment\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingBottom: 7,\r\n    paddingTop: 7,\r\n  },\r\n}));\r\n\r\nexport default function MainDetail({ defaultValues }) {\r\n  const paymentRef = useRef(null);\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const id = getQueryString(\"id\");\r\n\r\n  const paymentType = getQueryString(\"type\");\r\n  const loan = getQueryString(\"loan\");\r\n  const customerId = getQueryString(\"customerId\");\r\n  const [detail, setDetail] = useState({});\r\n  const [isLoan, setIsLoan] = useState(loan);\r\n  const [selectedPerson, setSelectedPerson] = useState();\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n  const [selectedDate, setSelectedDate] = useState(moment());\r\n  const [payments, setPayments] = useState({\r\n    cashes: [],\r\n    banks: [],\r\n    cheques: [],\r\n  });\r\n  const addPaymentRequest = useApi({\r\n    method: \"post\",\r\n    url: `payment`,\r\n  });\r\n  const editPaymentRequest = useApi({\r\n    method: \"put\",\r\n    url: `payment/${id}`,\r\n  });\r\n  const detailPaymentRequest = useApi({\r\n    method: \"get\",\r\n    url: `payment/${id}`,\r\n  });\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const onSelectPerson = (person) => {\r\n    setSelectedPerson(person);\r\n    onDismissPerson();\r\n  };\r\n\r\n  const onDismissPerson = () => {\r\n    dialogAction.hide({ name: \"person\" });\r\n  };\r\n\r\n  const onShowDialog = () => {\r\n    dialogAction.show({\r\n      title: \"انتخاب شخص\",\r\n      component: (\r\n        <PersonSelector\r\n          onSelect={onSelectPerson}\r\n          onDismiss={onDismissPerson}\r\n          filter={Constant.PERSON_TYPE.PERSON}\r\n        />\r\n      ),\r\n      name: \"person\",\r\n      size: \"8\",\r\n      confirm: false,\r\n      disableCloseButton: false,\r\n    });\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    console.log(data);\r\n    const value = {\r\n      type: paymentType,\r\n      personType: selectedPerson.personType,\r\n      personId: selectedPerson.value,\r\n      description: data.description,\r\n      date: selectedDate._d,\r\n      isLoan,\r\n      ...paymentRef.current,\r\n    };\r\n    if (id) {\r\n      await editPaymentRequest.execute(value);\r\n    } else {\r\n      await addPaymentRequest.execute(value);\r\n    }\r\n    setTimeout(() => {\r\n      onReject();\r\n    }, 1000);\r\n  };\r\n\r\n  const onReject = () => {\r\n    if (customerId) {\r\n      return history.push(\r\n        `/app/person-transaction?id=${customerId}&type=customer`,\r\n      );\r\n    }\r\n    history.push(\"/app/payment-list?type=ALL\");\r\n  };\r\n\r\n  const getDetail = async () => {\r\n    const detail = await detailPaymentRequest.execute();\r\n    setDetail(detail.data);\r\n    const { person, date, banks, cashes, cheques } = detail.data;\r\n    setSelectedPerson(person);\r\n    setSelectedDate(date);\r\n    setPayments({ banks, cashes, cheques });\r\n    setIsLoan(detail.data.isLoan);\r\n  };\r\n\r\n  const getDetailTitle = () => {\r\n    if (id) {\r\n      if (paymentType === \"INCOME\") {\r\n        return \"ویرایش دریافتی\";\r\n      }\r\n      return \"ویرایش پرداختی\";\r\n    } else {\r\n      if (paymentType === \"INCOME\") {\r\n        return \"افزودن دریافتی\";\r\n      }\r\n      return \"افزودن پرداختی\";\r\n    }\r\n  };\r\n\r\n  const getPersonName = () => {\r\n    if (selectedPerson) {\r\n      if (selectedPerson.label) {\r\n        return `${selectedPerson.label}`;\r\n      }\r\n      return `${selectedPerson.firstName} ${selectedPerson.lastName}`;\r\n    }\r\n    return \"\";\r\n  };\r\n  const handleChangeIsloan = (e) => {\r\n    setIsLoan(e.target.checked);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      getDetail();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(detail);\r\n  }, [reset, detail]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      {!detailPaymentRequest.pending ? (\r\n        <Grid item lg={8} sm={12} className={classes.root}>\r\n          <Paper className={classes.paper}>\r\n            <Typography\r\n              className={classes.title}\r\n              variant=\"h6\"\r\n              id=\"tableTitle\"\r\n              component=\"div\"\r\n            >\r\n              {getDetailTitle()}\r\n            </Typography>\r\n\r\n            <Grid container spacing={3}>\r\n              <Fragment>\r\n                <Grid item lg={6} xs={12} style={{ display: \"flex\" }}>\r\n                  <Button\r\n                    style={{ marginLeft: 10, width: \"30%\" }}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={onShowDialog}\r\n                  >\r\n                    انتخاب شخص\r\n                  </Button>\r\n\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    name={\"personName\"}\r\n                    value={getPersonName()}\r\n                    disabled\r\n                    style={{ width: \"70%\" }}\r\n                    size=\"small\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12} className={classes.datePicker}>\r\n                  <DatePicker\r\n                    autoOk\r\n                    name=\"date\"\r\n                    label=\"تاریخ ثبت\"\r\n                    inputVariant=\"outlined\"\r\n                    okLabel=\"تأیید\"\r\n                    cancelLabel=\"لغو\"\r\n                    labelFunc={(date) =>\r\n                      date ? date.format(\"jYYYY/jMM/jDD\") : \"\"\r\n                    }\r\n                    value={selectedDate}\r\n                    onChange={handleDateChange}\r\n                    style={{ width: \"100%\" }}\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        checked={isLoan}\r\n                        onChange={handleChangeIsloan}\r\n                        // name={item.value}\r\n                        color=\"primary\"\r\n                      />\r\n                    }\r\n                    label={\r\n                      paymentType === \"INCOME\" ? \"پرداخت قسط\" : \"اعطای وام\"\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"بابت\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.description}\r\n                          helperText={\r\n                            errors.description ? errors.description.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    name=\"description\"\r\n                  />\r\n                </Grid>\r\n                {((id && payments) || !id) && (\r\n                  <PrePayment\r\n                    defaultValues={payments}\r\n                    type={paymentType}\r\n                    ref={paymentRef}\r\n                  />\r\n                )}\r\n\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                    تایید\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={onReject}\r\n                  >\r\n                    بازگشت\r\n                  </Button>\r\n                </Grid>\r\n              </Fragment>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      ) : (\r\n        <CircularProgress />\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n}));\r\n","import React from \"react\";\r\n\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { persianNumber } from \"../../helpers/utils\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"amount\",\r\n    label: \"موجودی\",\r\n  },\r\n  { id: \"unit\", label: \"واحد\" },\r\n  {\r\n    id: \"depot\",\r\n    label: \"انبار\",\r\n  },\r\n];\r\n\r\nexport default function MainDetail({ data, onSubmit }) {\r\n  return (\r\n    <Grid container spacing={3} alignItems=\"center\">\r\n      {!!data.length && (\r\n        <Grid item xs={12}>\r\n          <TableContainer style={{ padding: \"0 10px\" }}>\r\n            <Table size={\"medium\"} style={{ paddingRight: 10 }}>\r\n              <TableHeader headCells={headCells} />\r\n\r\n              <TableBody>\r\n                {data.map((row) => {\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      tabIndex={-1}\r\n                      key={row.id}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableCell padding=\"none\">\r\n                        {persianNumber(row.stock)}\r\n                      </TableCell>\r\n                      <TableCell padding=\"none\">{row.unit}</TableCell>\r\n                      <TableCell padding=\"none\">{row.depot}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Grid>\r\n      )}\r\n      <Grid item xs={12}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n          بازگشت\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  IconButton,\r\n  Collapse,\r\n  Typography,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport PrePayment from \"../payment/prePayment\";\r\nimport unitAction from \"../../redux/actions/unitAction\";\r\nimport { getQueryString, persianNumber } from \"../../helpers/utils\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n  deleteIcon: {\r\n    color: theme.palette.error.main,\r\n  },\r\n  formControl: {\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nexport default function MainDetail() {\r\n  const productId = getQueryString(\"id\");\r\n  const productName = getQueryString(\"productName\");\r\n  const unitBaseId = getQueryString(\"unitBaseId\");\r\n  const paymentRef = useRef(null);\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [units, setUnits] = useState([]);\r\n  const [selectedUnit, setSelectedUnit] = useState(units[0]?.value);\r\n  const [selectedSource, setSelectedSource] = useState(5);\r\n  const [selectedDestination, setSelectedDestination] = useState(5);\r\n  const [amount, setAmount] = useState();\r\n  const [selectedDriver, setSelectedDriver] = useState();\r\n  const [description, setDescription] = useState();\r\n  const [depotPicker, setDepotPicker] = useState([]);\r\n  const [driverPicker, setDriverPicker] = useState([]);\r\n  const [isAddDriver, setIsAddDriver] = useState(false);\r\n  const [category, setCategory] = useState([]);\r\n  const [categoryId, setDriverCategory] = useState(1);\r\n  const [newDriver, setNewDriver] = useState();\r\n  const [showPerUnit, setShowPerUnit] = useState(false);\r\n  const [perUnit, setPerUnit] = useState();\r\n  const [payments, setPayments] = useState({\r\n    cashes: [],\r\n    banks: [],\r\n    cheques: [],\r\n  });\r\n\r\n  const getDepotRequest = useApi({\r\n    method: \"get\",\r\n    url: `depot/picker`,\r\n  });\r\n\r\n  const getDriversRequest = useApi({\r\n    method: \"get\",\r\n    url: \"driver\",\r\n  });\r\n\r\n  const categoryIdRequest = useApi({\r\n    method: \"get\",\r\n    url: `driver/category`,\r\n  });\r\n\r\n  const transferRequest = useApi({\r\n    method: \"post\",\r\n    url: `depot/transfer`,\r\n  });\r\n\r\n  const addDriverRequest = useApi({\r\n    method: \"post\",\r\n    url: `driver`,\r\n  });\r\n\r\n  const addTransferPaymentRequest = useApi({\r\n    method: \"post\",\r\n    url: `payment`,\r\n  });\r\n\r\n  const getDriverCategory = async () => {\r\n    const detail = await categoryIdRequest.execute();\r\n    setCategory(detail.data);\r\n  };\r\n\r\n  const onSubmitTransfer = async () => {\r\n    const data = {\r\n      sourceDepotId: selectedSource,\r\n      destinationDepotId: selectedDestination,\r\n      productId,\r\n      amount,\r\n      perUnit,\r\n      unit: selectedUnit,\r\n      description,\r\n      isAddDriver,\r\n      newDriver,\r\n    };\r\n    let newAddedDriver;\r\n    if (!selectedDriver) {\r\n      newAddedDriver = await addDriverRequest.execute(data.newDriver);\r\n      data.driverId = newAddedDriver.id;\r\n      await transferRequest.execute(data);\r\n    } else {\r\n      data.driverId = selectedDriver.id;\r\n      await transferRequest.execute(data);\r\n    }\r\n\r\n    const transferPayments = {\r\n      ...paymentRef.current,\r\n      date: new Date(),\r\n      personId: selectedDriver ? selectedDriver.id : newAddedDriver.id,\r\n      personType: \"DRIVER\",\r\n      type: \"OUTCOME\",\r\n      description: `بابت انتقال بین انبارها`,\r\n    };\r\n    await addTransferPaymentRequest.execute(transferPayments);\r\n    setTimeout(() => {\r\n      onDismiss();\r\n    }, 1000);\r\n  };\r\n\r\n  const getDrivers = async () => {\r\n    const customerList = await getDriversRequest.execute();\r\n    setDriverPicker(customerList.data);\r\n  };\r\n\r\n  const onChange = (e, type) => {\r\n    const types = {\r\n      source: () => {\r\n        setSelectedSource(e.target.value);\r\n      },\r\n      destination: () => {\r\n        setSelectedDestination(e.target.value);\r\n      },\r\n      amount: () => {\r\n        setAmount(e.target.value);\r\n      },\r\n      description: () => {\r\n        setDescription(e.target.value);\r\n      },\r\n      unit: () => {\r\n        setSelectedUnit(e.target.value);\r\n        const targetUnit = units.filter(\r\n          (item) => item.value === e.target.value,\r\n        )[0];\r\n        setShowPerUnit(targetUnit.perUnit);\r\n      },\r\n      firstName: () => {\r\n        setNewDriver({ ...newDriver, firstName: e.target.value });\r\n      },\r\n      lastName: () => {\r\n        setNewDriver({ ...newDriver, lastName: e.target.value });\r\n      },\r\n      carName: () => {\r\n        setNewDriver({ ...newDriver, carName: e.target.value });\r\n      },\r\n      carPlaque: () => {\r\n        setNewDriver({ ...newDriver, carPlaque: e.target.value });\r\n      },\r\n      categoryId: () => {\r\n        setNewDriver({ ...newDriver, categoryId: e.target.value });\r\n      },\r\n      perUnit: () => {\r\n        setPerUnit(e.target.value);\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      return types[type]();\r\n    }\r\n  };\r\n\r\n  const onDismiss = () => {\r\n    history.push(\"/app/product-list\");\r\n  };\r\n\r\n  const onChangeDriver = (e, value) => {\r\n    setSelectedDriver(value);\r\n  };\r\n\r\n  const getDepotPicker = async () => {\r\n    const result = await getDepotRequest.execute();\r\n    setDepotPicker(result.data);\r\n  };\r\n\r\n  const onAddDriver = () => {\r\n    setIsAddDriver(!isAddDriver);\r\n  };\r\n\r\n  const getUnits = () => {\r\n    const allUnits = unitAction\r\n      .getProductUnit()\r\n      .filter((item) => item.value === unitBaseId)[0];\r\n    if (allUnits) {\r\n      setUnits(allUnits.children);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUnits();\r\n    getDriverCategory();\r\n    getDrivers();\r\n    getDepotPicker();\r\n  }, []);\r\n\r\n  return (\r\n    <form>\r\n      <Grid item lg={6} sm={12} className={classes.root}>\r\n        <Paper className={classes.paper}>\r\n          <Typography\r\n            className={classes.title}\r\n            variant=\"h6\"\r\n            id=\"tableTitle\"\r\n            component=\"div\"\r\n          >\r\n            {`انتقال ${productName} بین انبار ها`}\r\n          </Typography>\r\n          <Grid container spacing={3}>\r\n            <Grid item sm={6} xs={12}>\r\n              <TextField\r\n                select\r\n                label=\"انبار مبدا\"\r\n                value={selectedSource}\r\n                onChange={(e) => onChange(e, \"source\")}\r\n                variant=\"outlined\"\r\n                name=\"depot\"\r\n                fullWidth\r\n                size=\"small\"\r\n              >\r\n                {depotPicker.map((option) => (\r\n                  <MenuItem key={option.value} value={option.value}>\r\n                    {option.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n            <Grid item sm={6} xs={12}>\r\n              <TextField\r\n                select\r\n                label=\"انبار مقصد\"\r\n                value={selectedDestination}\r\n                onChange={(e) => onChange(e, \"destination\")}\r\n                variant=\"outlined\"\r\n                name=\"depot\"\r\n                fullWidth\r\n                size=\"small\"\r\n              >\r\n                {depotPicker.map((option) => (\r\n                  <MenuItem key={option.value} value={option.value}>\r\n                    {option.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n\r\n            <Grid item sm={6} xs={12}>\r\n              <TextField\r\n                select\r\n                label=\"واحد\"\r\n                value={selectedUnit}\r\n                onChange={(e) => onChange(e, \"unit\")}\r\n                variant=\"outlined\"\r\n                name=\"unit\"\r\n                fullWidth\r\n                size=\"small\"\r\n              >\r\n                {units.map((option) => (\r\n                  <MenuItem key={option.value} value={option.value}>\r\n                    {option.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n\r\n            <Grid item sm={6} xs={12}>\r\n              <TextField\r\n                type=\"number\"\r\n                variant=\"outlined\"\r\n                label=\"مقدار\"\r\n                name={\"amount\"}\r\n                onChange={(e) => onChange(e, \"amount\")}\r\n                value={amount}\r\n                fullWidth\r\n                size=\"small\"\r\n              />\r\n            </Grid>\r\n            {showPerUnit && (\r\n              <Grid item sm={6} xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"مقدار در واحد\"\r\n                  name={\"perUnit\"}\r\n                  onChange={(e) => onChange(e, \"perUnit\")}\r\n                  value={perUnit}\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  type=\"number\"\r\n                />\r\n              </Grid>\r\n            )}\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                multiline\r\n                variant=\"outlined\"\r\n                label=\"توضیحات\"\r\n                name={\"description\"}\r\n                onChange={(e) => onChange(e, \"description\")}\r\n                value={description}\r\n                fullWidth\r\n                size=\"small\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              sm={6}\r\n              xs={12}\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                marginBottom: 20,\r\n              }}\r\n            >\r\n              <Autocomplete\r\n                id=\"combo-box-demo\"\r\n                onChange={onChangeDriver}\r\n                options={driverPicker}\r\n                getOptionLabel={(option) =>\r\n                  `${option.firstName} ${option.lastName}`\r\n                }\r\n                fullWidth\r\n                size=\"small\"\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"انتخاب راننده\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                )}\r\n              />\r\n              <IconButton\r\n                color=\"primary\"\r\n                style={{ marginRight: 10 }}\r\n                onClick={onAddDriver}\r\n              >\r\n                <i className=\"material-icons-round\">\r\n                  {isAddDriver ? \"clear\" : \"add\"}\r\n                </i>\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n          <Collapse in={isAddDriver}>\r\n            <Grid container spacing={3}>\r\n              <Grid item sm={6} xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"نام راننده\"\r\n                  onChange={(e) => onChange(e, \"firstName\")}\r\n                  value={newDriver?.firstName}\r\n                  fullWidth\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n              <Grid item sm={6} xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"نام خانوادگی راننده\"\r\n                  onChange={(e) => onChange(e, \"lastName\")}\r\n                  value={newDriver?.lastName}\r\n                  fullWidth\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item sm={6} xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"نام ماشین\"\r\n                  onChange={(e) => onChange(e, \"carName\")}\r\n                  value={newDriver?.carName}\r\n                  fullWidth\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item sm={6} xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"پلاک\"\r\n                  onChange={(e) => onChange(e, \"carPlaque\")}\r\n                  value={newDriver?.carPlaque}\r\n                  fullWidth\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item sm={6} xs={12}>\r\n                {!!category.length && categoryId && (\r\n                  <TextField\r\n                    select\r\n                    label=\"دسته بندی\"\r\n                    value={categoryId}\r\n                    onChange={(e) => onChange(e, \"categoryId\")}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    size=\"small\"\r\n                  >\r\n                    {category.map((option) => (\r\n                      <MenuItem key={option.value} value={option.value}>\r\n                        {option.label}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </TextField>\r\n                )}\r\n              </Grid>\r\n\r\n              <PrePayment\r\n                type={\"OUTCOME\"}\r\n                defaultValues={payments}\r\n                ref={paymentRef}\r\n              />\r\n            </Grid>\r\n          </Collapse>\r\n\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              marginTop: 30,\r\n            }}\r\n          >\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={onSubmitTransfer}\r\n            >\r\n              تایید\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n              بازگشت\r\n            </Button>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n    </form>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { convertParamsToQueryString, hasPermission } from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport AmountBrif from \"./amountBrif\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\nimport Transform from \"./transfer\";\r\nimport unitAction from \"../../redux/actions/unitAction\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    label: \"نام کالا\",\r\n  },\r\n  {\r\n    id: \"category\",\r\n    label: \"دسته بندی\",\r\n  },\r\n\r\n  {\r\n    id: \"DefaultUnit\",\r\n    label: \"واحد پیش فرض\",\r\n  },\r\n  { id: \"unit\", label: \" واحد شمارشی\" },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function MainList() {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"name\");\r\n  const [search, setSearch] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const history = useHistory();\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onAdd = () => {\r\n    history.push(\"/app/product-detail\");\r\n  };\r\n\r\n  const getProductRequest = useApi({\r\n    method: \"get\",\r\n    url: `product?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n    })}`,\r\n  });\r\n\r\n  const deleteUseRequest = useApi({\r\n    method: \"delete\",\r\n    url: `product`,\r\n  });\r\n\r\n  const transferRequest = useApi({\r\n    method: \"post\",\r\n    url: `depot/transfer`,\r\n  });\r\n\r\n  const addDriverRequest = useApi({\r\n    method: \"post\",\r\n    url: `driver`,\r\n  });\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onSubmitTransfer = async (data) => {\r\n    if (data.isAddDriver) {\r\n      await addDriverRequest.execute(data.newDriver);\r\n      await transferRequest.execute(data);\r\n    } else {\r\n      await transferRequest.execute(data);\r\n    }\r\n\r\n    // const transferPayments = {\r\n    //   ...paymentRef.current,\r\n    //   invoiceId: response.id,\r\n    //   date: selectedDate._d,\r\n    //   personId: selectedPerson ? selectedPerson.id : 1,\r\n    //   personType: \"CUSTOMER\",\r\n    //   type: invoiceType === \"SELL\" ? \"INCOME\" : \"OUTCOME\",\r\n    //   description: `بابت فاکتور به شماره  ${response.id}`,\r\n    // };\r\n    // addPaymentRequest.execute(transferPayments);\r\n\r\n    await getData();\r\n    // DialogActions.hide({});\r\n  };\r\n\r\n  const handleAction = (row, type) => {\r\n    const { id } = row;\r\n    const types = {\r\n      edit: () => {\r\n        history.push(`/app/product-detail?id=${id}`);\r\n      },\r\n      delete: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            await deleteUseRequest.execute(null, id);\r\n            setList(list.filter((item) => item.id !== id));\r\n            DialogActions.hide({ name: \"delete\" });\r\n          },\r\n          name: \"delete\",\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n      amount: () => {\r\n        DialogActions.show({\r\n          title: \"موجودی در انبار ها\",\r\n          component: (\r\n            <AmountBrif\r\n              onSubmit={() => {\r\n                DialogActions.hide({ name: \"amount\" });\r\n              }}\r\n              data={row.stocks}\r\n            />\r\n          ),\r\n          name: \"amount\",\r\n          size: \"4\",\r\n          confirm: false,\r\n          disableCloseButton: true,\r\n        });\r\n      },\r\n      transaction: () => {},\r\n\r\n      transfer: () => {\r\n        history.push(\r\n          `/app/product-transfer?id=${id}&productName=${row.name}&unitBaseId=${row.unitBaseId}`,\r\n        );\r\n\r\n        //   let units;\r\n        //   const allUnits = unitAction\r\n        //     .getProductUnit()\r\n        //     .filter((item) => item.value === row.unitBaseId)[0];\r\n        //   if (allUnits) {\r\n        //     units = allUnits.children;\r\n        //   }\r\n        //   DialogActions.show({\r\n        //     title: \"انتقال بین انبار ها\",\r\n        //     component: (\r\n        //       <Transform\r\n        //         onDismiss={() => {\r\n        //           DialogActions.hide();\r\n        //         }}\r\n        //         onSubmit={onSubmitTransfer}\r\n        //         productId={row.id}\r\n        //         units={units}\r\n        //       />\r\n        //     ),\r\n        //     size: \"4\",\r\n        //     confirm: false,\r\n        //     disableCloseButton: true,\r\n        //   });\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const getData = async () => {\r\n    const productList = await getProductRequest.execute();\r\n    setList(productList.data);\r\n    setTotal(productList.total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, pageSize, search]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.PRODUCT_SHOW) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getProductRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title=\"لیست کالا ها\"\r\n                    onAdd={\r\n                      hasPermission(Constant.ALL_PERMISSIONS.PRODUCT_EDIT) &&\r\n                      onAdd\r\n                    }\r\n                    handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                  />\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                            >\r\n                              <TableCell padding=\"none\">{row.name}</TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.categories.join(\",\")}\r\n                              </TableCell>\r\n\r\n                              <TableCell padding=\"none\">\r\n                                {row.defaultUnit}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.unitBase}\r\n                              </TableCell>\r\n\r\n                              <TableCell padding=\"none\">\r\n                                <TableRowMenu\r\n                                  options={[\r\n                                    { id: \"amount\", title: \"موجودی ها\" },\r\n                                    // { id: \"transaction\", title: \"تراکنش ها\" },\r\n                                    {\r\n                                      id: \"transfer\",\r\n                                      title: \"انتقال بین انبار\",\r\n                                    },\r\n                                    {\r\n                                      id: \"edit\",\r\n                                      title: \"ویرایش\",\r\n                                      hidden: !hasPermission(\r\n                                        Constant.ALL_PERMISSIONS.PRODUCT_EDIT,\r\n                                      ),\r\n                                    },\r\n                                    {\r\n                                      id: \"delete\",\r\n                                      title: \"حذف\",\r\n                                      hidden: !hasPermission(\r\n                                        Constant.ALL_PERMISSIONS.PRODUCT_DELETE,\r\n                                      ),\r\n                                    },\r\n                                  ]}\r\n                                  hadleAction={(type) =>\r\n                                    handleAction(row, type)\r\n                                  }\r\n                                />\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getProductRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Grid, MenuItem } from \"@material-ui/core\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport Constant from \"../../helpers/constant\";\r\n\r\nconst Account = ({ onSubmit, onDismiss, defaultValues, units }) => {\r\n  const [depotPicker, setDepotPicker] = useState([]);\r\n  const [seletedUnit, setSelectedUnit] = useState(\r\n    defaultValues ? defaultValues.unit.value : units[0].value,\r\n  );\r\n  const [seletedDepot, setSelectedDepot] = useState(1);\r\n  const [showPerUnit, setShowPerUnit] = useState(\r\n    defaultValues ? !!defaultValues.perUnit : false,\r\n  );\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n\r\n  const getDepotRequest = useApi({\r\n    method: \"get\",\r\n    url: `depot/picker`,\r\n  });\r\n\r\n  const getDepotPicker = async () => {\r\n    const result = await getDepotRequest.execute();\r\n    setDepotPicker(result.data);\r\n  };\r\n\r\n  //   const onChange = (e) => {\r\n  //     setValues({ ...values, [e.target.name]: e.target.value });\r\n  //   };\r\n\r\n  const onChangeDepot = (e) => {\r\n    setSelectedDepot(e.target.value);\r\n  };\r\n\r\n  const onChangeUnit = (e) => {\r\n    setSelectedUnit(e.target.value);\r\n\r\n    const { value } = e.target;\r\n\r\n    const targetUnit = units.filter((item) => item.value === value)[0];\r\n    setShowPerUnit(targetUnit.perUnit);\r\n\r\n    setSelectedUnit(e.target.value);\r\n  };\r\n\r\n  const getSelectedDepot = () => {\r\n    return depotPicker.find((item) => item.value === seletedDepot);\r\n  };\r\n\r\n  const getSelectedUnit = () => {\r\n    return units.find((item) => item.value === seletedUnit);\r\n  };\r\n\r\n  const onDone = (data) => {\r\n    const newId = uuid();\r\n\r\n    const value = {\r\n      ...data,\r\n      unit: getSelectedUnit(),\r\n      depot: getSelectedDepot(),\r\n      id: defaultValues ? defaultValues.id : newId,\r\n      isUpdate: !!defaultValues,\r\n    };\r\n    onSubmit(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDepotPicker();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(defaultValues);\r\n  }, [reset, defaultValues]);\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                variant=\"outlined\"\r\n                label=\"موجودی اول دوره\"\r\n                name={name}\r\n                onChange={onChange}\r\n                value={value}\r\n                error={!!errors.stock}\r\n                helperText={errors.stock ? errors.stock.message : \"\"}\r\n                fullWidth\r\n                size=\"small\"\r\n                type=\"number\"\r\n              />\r\n            );\r\n          }}\r\n          rules={{\r\n            required: Constant.VALIDATION.REQUIRED,\r\n            min: {\r\n              value: 0,\r\n              message: Constant.VALIDATION.POSITIVE_NUMBER,\r\n            },\r\n          }}\r\n          name=\"stock\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          select\r\n          label=\"واحد\"\r\n          value={seletedUnit}\r\n          onChange={onChangeUnit}\r\n          variant=\"outlined\"\r\n          name=\"unit\"\r\n          fullWidth\r\n          size=\"small\"\r\n        >\r\n          {units.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Grid>\r\n      {showPerUnit && (\r\n        <Grid item xs={12}>\r\n          <Controller\r\n            control={control}\r\n            render={({ onChange, value, name }) => {\r\n              return (\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"مقدار در واحد\"\r\n                  name={name}\r\n                  onChange={onChange}\r\n                  value={value}\r\n                  error={!!errors.perUnit}\r\n                  helperText={errors.perUnit ? errors.perUnit.message : \"\"}\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  type=\"number\"\r\n                />\r\n              );\r\n            }}\r\n            rules={{\r\n              required: Constant.VALIDATION.REQUIRED,\r\n              min: {\r\n                value: 0,\r\n                message: Constant.VALIDATION.POSITIVE_NUMBER,\r\n              },\r\n            }}\r\n            name=\"perUnit\"\r\n          />\r\n        </Grid>\r\n      )}\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          select\r\n          label=\"انبار\"\r\n          value={seletedDepot}\r\n          onChange={onChangeDepot}\r\n          variant=\"outlined\"\r\n          name=\"depot\"\r\n          fullWidth\r\n          size=\"small\"\r\n        >\r\n          {depotPicker.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Grid>\r\n\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          onClick={handleSubmit(onDone)}\r\n        >\r\n          تایید\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onDismiss}>\r\n          انصراف\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  IconButton,\r\n  Select,\r\n  FormControl,\r\n  InputLabel,\r\n} from \"@material-ui/core\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport { DeleteIcon, EditIcon } from \"../../components/icons\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { getQueryString, persianNumber } from \"../../helpers/utils\";\r\nimport CircularProgress from \"../../components/CircularProgress\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport Amount from \"./amount\";\r\nimport unitAction from \"../../redux/actions/unitAction\";\r\nimport { isEmpty } from \"lodash\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n  deleteIcon: {\r\n    color: theme.palette.error.main,\r\n  },\r\n  formControl: {\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"amount\",\r\n    label: \"موجودی\",\r\n  },\r\n  { id: \"unit\", label: \"واحد\" },\r\n  {\r\n    id: \"depot\",\r\n    label: \"انبار\",\r\n  },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function MainDetail() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const id = getQueryString(\"id\");\r\n  const [detail, setDetail] = useState({});\r\n  const [amounts, setAmounts] = useState([]);\r\n  const [category, setCategory] = useState([]);\r\n  const [selectedUnit, setSelectedUnit] = useState(\"MASS\");\r\n  const [selectedCategory, setSelectedCategory] = useState([1]);\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n  const units = unitAction.getProductUnit();\r\n\r\n  const addProductRequest = useApi({\r\n    method: \"post\",\r\n    url: `product`,\r\n  });\r\n  const editProductRequest = useApi({\r\n    method: \"put\",\r\n    url: `product/${id}`,\r\n  });\r\n  const detailProductRequest = useApi({\r\n    method: \"get\",\r\n    url: `product/${id}`,\r\n  });\r\n  const getProductCategoryRequest = useApi({\r\n    method: \"get\",\r\n    url: `product/category`,\r\n  });\r\n\r\n  const onSubmitAmount = (data) => {\r\n    if (data.isUpdate) {\r\n      const index = amounts.findIndex((item) => item.id === data.id);\r\n      const amountTmp = [...amounts];\r\n      amountTmp[index] = data;\r\n      setAmounts(amountTmp);\r\n    } else {\r\n      setAmounts([...amounts, data]);\r\n    }\r\n    onDismissAmount();\r\n  };\r\n\r\n  const onDismissAmount = () => {\r\n    DialogActions.hide({ name: \"amount\" });\r\n  };\r\n\r\n  const onShowDialog = (data) => {\r\n    let units;\r\n    const allUnits = unitAction\r\n      .getProductUnit()\r\n      .filter((item) => item.value === selectedUnit)[0];\r\n    if (allUnits) {\r\n      units = allUnits.children;\r\n    }\r\n    DialogActions.show({\r\n      title: \"موجودی اول دوره\",\r\n      component: (\r\n        <Amount\r\n          onSubmit={onSubmitAmount}\r\n          onDismiss={onDismissAmount}\r\n          defaultValues={data}\r\n          units={units}\r\n        />\r\n      ),\r\n      name: \"amount\",\r\n      size: \"4\",\r\n      confirm: false,\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  const onAddAmount = () => {\r\n    onShowDialog();\r\n  };\r\n\r\n  const filterAmounts = (amounts) => {\r\n    const filteredAmount = [];\r\n    amounts.map((item) => {\r\n      const newObject = {\r\n        stock: item.stock,\r\n        depotId: item.depot.value,\r\n        unit: item.unit.value,\r\n        perunit: item.perUnit,\r\n      };\r\n      filteredAmount.push(newObject);\r\n    });\r\n    return filteredAmount;\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    const result = {\r\n      ...data,\r\n      categories: selectedCategory,\r\n      unitBase: selectedUnit,\r\n      stocks: id ? amounts : filterAmounts(amounts),\r\n    };\r\n    if (id) {\r\n      return await editProductRequest.execute(result);\r\n    }\r\n    await addProductRequest.execute(result);\r\n    setTimeout(() => {\r\n      onReject();\r\n    }, 1000);\r\n  };\r\n\r\n  const onReject = () => {\r\n    history.push(\"/app/product-list\");\r\n  };\r\n\r\n  const getDetail = async () => {\r\n    const detail = await detailProductRequest.execute();\r\n    setDetail(detail.data);\r\n    setSelectedCategory(detail.data.categories);\r\n    setSelectedUnit(detail.data.unitBase);\r\n    setAmounts(detail.data.stocks);\r\n  };\r\n\r\n  const handleEditAmount = (data) => {\r\n    onShowDialog(data);\r\n  };\r\n\r\n  const handleDeleteAmount = (id) => {\r\n    DialogActions.show({\r\n      confirm: true,\r\n      title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n      onAction: () => {\r\n        setAmounts(amounts.filter((item) => item.id !== id));\r\n        DialogActions.hide({ name: \"delete\" });\r\n      },\r\n      name: \"delete\",\r\n      size: \"6\",\r\n      disableCloseButton: false,\r\n    });\r\n  };\r\n\r\n  const getProductCategory = async () => {\r\n    const result = await getProductCategoryRequest.execute();\r\n    setCategory(result.data);\r\n  };\r\n\r\n  const onChangeUnit = (e) => {\r\n    setSelectedUnit(e.target.value);\r\n  };\r\n\r\n  const onChangeCategory = (e) => {\r\n    setSelectedCategory(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProductCategory();\r\n    if (id) {\r\n      getDetail();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(detail);\r\n  }, [reset, detail]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      {!detailProductRequest.pending ? (\r\n        <Grid item lg={6} sm={12} className={classes.root}>\r\n          <Paper className={classes.paper}>\r\n            <Typography\r\n              className={classes.title}\r\n              variant=\"h6\"\r\n              id=\"tableTitle\"\r\n              component=\"div\"\r\n            >\r\n              {id ? \"ویرایش کالا\" : \"افزودن کالا\"}\r\n            </Typography>\r\n\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Fragment>\r\n                <Grid item lg={6} xs={12} className={classes.datePicker}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"نام \"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.name}\r\n                          helperText={errors.name ? errors.name.message : \"\"}\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                    name=\"name\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <TextField\r\n                    disabled={id}\r\n                    select\r\n                    label=\"واحد شمارش\"\r\n                    value={selectedUnit}\r\n                    onChange={onChangeUnit}\r\n                    variant=\"outlined\"\r\n                    name=\"unitBase\"\r\n                    fullWidth\r\n                    size=\"small\"\r\n                  >\r\n                    {units.map((option) => (\r\n                      <MenuItem key={option.value} value={option.value}>\r\n                        {option.label}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </TextField>\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <FormControl\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                    className={classes.formControl}\r\n                  >\r\n                    <InputLabel htmlFor=\"outlined-age-native-simple\">\r\n                      دسته بندی\r\n                    </InputLabel>\r\n                    <Select\r\n                      multiple\r\n                      label=\"  دسته بندی\"\r\n                      inputProps={{\r\n                        name: \"age\",\r\n                        id: \"outlined-age-native-simple\",\r\n                      }}\r\n                      value={selectedCategory}\r\n                      onChange={onChangeCategory}\r\n                    >\r\n                      {category.map((option) => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Button\r\n                    disabled={isEmpty(selectedUnit)}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={onAddAmount}\r\n                  >\r\n                    افزودن موجودی اول دوره\r\n                  </Button>\r\n                </Grid>\r\n                {!!amounts.length && (\r\n                  <Grid item xs={12}>\r\n                    <Paper>\r\n                      <TableContainer style={{ padding: \"0 10px\" }}>\r\n                        <Table\r\n                          className={classes.table}\r\n                          size={\"medium\"}\r\n                          style={{ paddingRight: 10 }}\r\n                        >\r\n                          <TableHeader headCells={headCells} />\r\n\r\n                          <TableBody>\r\n                            {amounts.map((row) => {\r\n                              return (\r\n                                <TableRow\r\n                                  hover\r\n                                  tabIndex={-1}\r\n                                  key={row.id}\r\n                                  style={{ paddingRight: 10 }}\r\n                                >\r\n                                  <TableCell padding=\"none\">\r\n                                    {row.perUnit\r\n                                      ? `${persianNumber(\r\n                                          row.stock,\r\n                                        )}*${persianNumber(row.perUnit)}`\r\n                                      : persianNumber(row.stock)}\r\n                                  </TableCell>\r\n\r\n                                  <TableCell padding=\"none\">\r\n                                    {row.unit.label}\r\n                                  </TableCell>\r\n\r\n                                  <TableCell padding=\"none\">\r\n                                    {row.depot.label}\r\n                                  </TableCell>\r\n                                  <TableCell\r\n                                    padding=\"none\"\r\n                                    style={{ textAlign: \"left\" }}\r\n                                  >\r\n                                    <IconButton\r\n                                      onClick={() => handleEditAmount(row)}\r\n                                    >\r\n                                      <EditIcon />\r\n                                    </IconButton>\r\n\r\n                                    <IconButton\r\n                                      onClick={() => handleDeleteAmount(row.id)}\r\n                                    >\r\n                                      <DeleteIcon />\r\n                                    </IconButton>\r\n                                  </TableCell>\r\n                                </TableRow>\r\n                              );\r\n                            })}\r\n                          </TableBody>\r\n                        </Table>\r\n                      </TableContainer>\r\n                    </Paper>\r\n                  </Grid>\r\n                )}\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                    تایید\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={onReject}\r\n                  >\r\n                    بازگشت\r\n                  </Button>\r\n                </Grid>\r\n              </Fragment>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      ) : (\r\n        <CircularProgress />\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n}));\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  Grid,\r\n  CircularProgress,\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { persianNumber } from \"../../helpers/utils\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    label: \"نام کالا\",\r\n  },\r\n  { id: \"amounts\", label: \"موجودی ها\" },\r\n];\r\n\r\nexport default function MainDetail({ depotId, onSubmit }) {\r\n  const [data, setData] = useState([]);\r\n  const getAmountRequest = useApi({\r\n    method: \"get\",\r\n    url: `product/depot/${depotId}`,\r\n  });\r\n\r\n  const getAmount = async () => {\r\n    const result = await getAmountRequest.execute();\r\n    setData(result.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAmount();\r\n  }, []);\r\n  return getAmountRequest.pending ? (\r\n    <CircularProgress style={{ position: \"absolute\", top: 20, left: 20 }} />\r\n  ) : (\r\n    <Grid container spacing={3} alignItems=\"center\">\r\n      {!!data.length && (\r\n        <Grid item xs={12}>\r\n          <TableContainer style={{ padding: \"0 10px\" }}>\r\n            <Table size={\"medium\"} style={{ paddingRight: 10 }}>\r\n              <TableHeader headCells={headCells} />\r\n\r\n              <TableBody>\r\n                {data.map((row) => {\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      tabIndex={-1}\r\n                      key={row.id}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableCell padding=\"none\">{row.name}</TableCell>\r\n                      <TableCell padding=\"none\">\r\n                        <ul>\r\n                          {row.stocks.map((item) => {\r\n                            return (\r\n                              <li>\r\n                                <span style={{ margin: \"0 -5px 0 5px\" }}>\r\n                                  {persianNumber(item.stock)}\r\n                                </span>\r\n\r\n                                <span>{item.unit}</span>\r\n                              </li>\r\n                            );\r\n                          })}\r\n                        </ul>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Grid>\r\n      )}\r\n      <Grid item xs={12}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n          بازگشت\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { convertParamsToQueryString, hasPermission } from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\nimport AmountBrif from \"./amountBrif\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    label: \"نام انبار\",\r\n  },\r\n  {\r\n    id: \"category\",\r\n    label: \"دسته بندی انبار\",\r\n  },\r\n  { id: \"phone\", label: \"تلفن\" },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nconst MainList = () => {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"name\");\r\n  const [page, setPage] = useState(0);\r\n  const [search, setSearch] = useState();\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const history = useHistory();\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onAdd = () => {\r\n    history.push(\"/app/depot-detail\");\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const getDepotRequest = useApi({\r\n    method: \"get\",\r\n    url: `depot?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n    })}`,\r\n  });\r\n\r\n  const deleteUseRequest = useApi({\r\n    method: \"delete\",\r\n    url: `depot`,\r\n  });\r\n\r\n  const handleAction = (row, type) => {\r\n    const types = {\r\n      amount: () => {\r\n        DialogActions.show({\r\n          title: \"موجودی در انبار ها\",\r\n          component: (\r\n            <AmountBrif\r\n              onSubmit={() => {\r\n                DialogActions.hide({ name: \"amount\" });\r\n              }}\r\n              depotId={row.id}\r\n            />\r\n          ),\r\n          name: \"amount\",\r\n          size: \"4\",\r\n          confirm: false,\r\n          disableCloseButton: true,\r\n        });\r\n      },\r\n\r\n      edit: () => {\r\n        history.push(`/app/depot-detail?id=${row.id}`);\r\n      },\r\n      delete: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            await deleteUseRequest.execute(null, row.id);\r\n            setList(list.filter((item) => item.id !== row.id));\r\n            DialogActions.hide({ name: \"delete\" });\r\n          },\r\n          name: \"delete\",\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const getData = async () => {\r\n    const depotList = await getDepotRequest.execute();\r\n    setList(depotList.data);\r\n    setTotal(depotList.total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, pageSize, search]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.DEPOT_SHOW) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getDepotRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title=\"لیست انبار ها\"\r\n                    onAdd={\r\n                      hasPermission(Constant.ALL_PERMISSIONS.DEPOT_EDIT) &&\r\n                      onAdd\r\n                    }\r\n                    handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                  />\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                            >\r\n                              <TableCell padding=\"none\">{row.name}</TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.depotCategory}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">{row.phone}</TableCell>\r\n\r\n                              <TableCell padding=\"none\">\r\n                                <TableRowMenu\r\n                                  options={[\r\n                                    { id: \"amount\", title: \"موجودی\" },\r\n                                    {\r\n                                      id: \"edit\",\r\n                                      title: \"ویرایش\",\r\n                                      hidden: !hasPermission(\r\n                                        Constant.ALL_PERMISSIONS.DEPOT_EDIT,\r\n                                      ),\r\n                                    },\r\n                                    {\r\n                                      id: \"delete\",\r\n                                      title: \"حذف\",\r\n                                      hidden: !hasPermission(\r\n                                        Constant.ALL_PERMISSIONS.DEPOT_DELETE,\r\n                                      ),\r\n                                    },\r\n                                  ]}\r\n                                  hadleAction={(type) =>\r\n                                    handleAction(row, type)\r\n                                  }\r\n                                />\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getDepotRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default MainList;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { getQueryString } from \"../../helpers/utils\";\r\nimport CircularProgress from \"../../components/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n}));\r\n\r\nexport default function MainDetail() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const id = getQueryString(\"id\");\r\n  const [detail, setDetail] = useState({});\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n  const [category, setCategory] = useState([]);\r\n  const [depotCategory, setDepotCategory] = useState(1);\r\n\r\n  const addDepotRequest = useApi({\r\n    method: \"post\",\r\n    url: `depot`,\r\n  });\r\n  const editDepotRequest = useApi({\r\n    method: \"put\",\r\n    url: `depot/${id}`,\r\n  });\r\n  const detailDepotRequest = useApi({\r\n    method: \"get\",\r\n    url: `depot/${id}`,\r\n  });\r\n  const depotCategoryRequest = useApi({\r\n    method: \"get\",\r\n    url: `depot/category`,\r\n  });\r\n\r\n  const onSubmit = async (data) => {\r\n    const value = { ...data, depotCategoryId: depotCategory };\r\n\r\n    if (id) {\r\n      return await editDepotRequest.execute(value);\r\n    }\r\n    await addDepotRequest.execute(value);\r\n    setTimeout(() => {\r\n      onReject();\r\n    }, 1000);\r\n  };\r\n\r\n  const onReject = () => {\r\n    history.push(\"/app/depot-list\");\r\n  };\r\n\r\n  const getDetail = async () => {\r\n    const detail = await detailDepotRequest.execute();\r\n    setDetail(detail.data);\r\n    setDepotCategory(detail.data.depotCategory);\r\n  };\r\n\r\n  const getDepotCategory = async () => {\r\n    const detail = await depotCategoryRequest.execute();\r\n    setCategory(detail.data);\r\n  };\r\n\r\n  const onChangeCategory = (e) => {\r\n    setDepotCategory(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDepotCategory();\r\n    if (id) {\r\n      getDetail();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(detail);\r\n  }, [reset, detail]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      {!detailDepotRequest.pending ? (\r\n        <Grid item lg={6} sm={12} className={classes.root}>\r\n          <Paper className={classes.paper}>\r\n            <Typography\r\n              className={classes.title}\r\n              variant=\"h6\"\r\n              id=\"tableTitle\"\r\n              component=\"div\"\r\n            >\r\n              {id ? \"ویرایش انبار\" : \"افزودن انبار\"}\r\n            </Typography>\r\n\r\n            <Grid container spacing={3}>\r\n              <Fragment>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"نام\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.name}\r\n                          helperText={errors.name ? errors.name.message : \"\"}\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                    name=\"name\"\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item lg={6} xs={12}>\r\n                  {!!category.length && depotCategory && (\r\n                    <TextField\r\n                      select\r\n                      label=\"دسته بندی\"\r\n                      value={depotCategory}\r\n                      onChange={onChangeCategory}\r\n                      variant=\"outlined\"\r\n                      error={!!errors.depotCategory}\r\n                      helperText={\r\n                        errors.depotCategory ? errors.depotCategory.message : \"\"\r\n                      }\r\n                      fullWidth\r\n                      size=\"small\"\r\n                    >\r\n                      {category.map((option) => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </TextField>\r\n                  )}\r\n                </Grid>\r\n\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"تلفن\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.phone}\r\n                          helperText={errors.phone ? errors.phone.message : \"\"}\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    name=\"phone\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"آدرس\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.address}\r\n                          helperText={\r\n                            errors.address ? errors.address.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    name=\"address\"\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                    تایید\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={onReject}\r\n                  >\r\n                    بازگشت\r\n                  </Button>\r\n                </Grid>\r\n              </Fragment>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      ) : (\r\n        <CircularProgress />\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n}));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Grid, TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\n\r\nexport default function MainDetail({ source, onSubmit, onDismiss }) {\r\n  const [cashes, setCashes] = useState([]);\r\n  const [selectedDestination, setSelectedDestination] = useState(5);\r\n  const [amount, setAmount] = useState();\r\n\r\n  const getCashRequest = useApi({\r\n    method: \"get\",\r\n    url: `cashdesk/picker`,\r\n  });\r\n\r\n  const onDone = () => {\r\n    onSubmit({\r\n      sourceId: source,\r\n      destinationId: selectedDestination,\r\n      amount,\r\n    });\r\n  };\r\n\r\n  const onChange = (e, type) => {\r\n    if (type === \"destination\") {\r\n      setSelectedDestination(e.target.value);\r\n    } else {\r\n      setAmount(e.target.value);\r\n    }\r\n  };\r\n\r\n  const getCashes = async () => {\r\n    const result = await getCashRequest.execute();\r\n    const filterdCashes = result.data.filter((item) => item.value !== source);\r\n    setCashes(filterdCashes);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCashes();\r\n  }, []);\r\n\r\n  return (\r\n    <form>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            select\r\n            label=\"صندوق مقصد\"\r\n            onChange={(e) => onChange(e, \"destination\")}\r\n            value={selectedDestination}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            size=\"small\"\r\n            name=\"cash\"\r\n          >\r\n            {cashes.map((option) => (\r\n              <MenuItem key={option.value} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            type=\"number\"\r\n            variant=\"outlined\"\r\n            label=\"مبلغ\"\r\n            name={\"amount\"}\r\n            onChange={(e) => onChange(e, \"amount\")}\r\n            value={amount}\r\n            fullWidth\r\n            size=\"small\"\r\n          />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n        >\r\n          <Button variant=\"contained\" color=\"primary\" onClick={onDone}>\r\n            تایید\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n            بازگشت\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport {\r\n  convertParamsToQueryString,\r\n  hasPermission,\r\n  persianNumber,\r\n} from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport Transfer from \"./transfer\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    label: \"نام صندوق\",\r\n  },\r\n  {\r\n    id: \"type\",\r\n    label: \"نوع\",\r\n  },\r\n  {\r\n    id: \"logo\",\r\n    label: \"بانک\",\r\n  },\r\n  { id: \"amount\", label: \"موجودی\" },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nconst MainList = () => {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"name\");\r\n  const [search, setSearch] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const history = useHistory();\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onAdd = () => {\r\n    history.push(\"/app/cash-detail\");\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const getCashRequest = useApi({\r\n    method: \"get\",\r\n    url: `cashdesk?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n    })}`,\r\n  });\r\n\r\n  const deleteCashRequest = useApi({\r\n    method: \"delete\",\r\n    url: `cashdesk`,\r\n  });\r\n\r\n  const transferCashDesk = useApi({\r\n    method: \"post\",\r\n    url: \"cashdesk/transfer\",\r\n  });\r\n\r\n  const onDismissTransfer = () => {\r\n    DialogActions.hide({ name: \"transfer\" });\r\n  };\r\n\r\n  const onSubmitTransfer = async (data) => {\r\n    await transferCashDesk.execute(data);\r\n    getData();\r\n    onDismissTransfer();\r\n  };\r\n\r\n  const handleAction = (row, type) => {\r\n    const types = {\r\n      transaction: () => {\r\n        history.push(`/app/cash-transaction?cashId=${row.id}`);\r\n      },\r\n      edit: () => {\r\n        history.push(`/app/cash-detail?id=${row.id}`);\r\n      },\r\n      delete: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            await deleteCashRequest.execute(null, row.id);\r\n            setList(list.filter((item) => item.id !== row.id));\r\n            DialogActions.hide({ name: \"delete\" });\r\n          },\r\n          name: \"delete\",\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n      transfer: () => {\r\n        DialogActions.show({\r\n          title: \"انتقال بین صندوق ها\",\r\n          component: (\r\n            <Transfer\r\n              onSubmit={onSubmitTransfer}\r\n              onDismiss={onDismissTransfer}\r\n              source={row.id}\r\n            />\r\n          ),\r\n          name: \"transfer\",\r\n          size: \"4\",\r\n          confirm: false,\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const getData = async () => {\r\n    const cashList = await getCashRequest.execute();\r\n    setList(cashList.data);\r\n    setTotal(cashList.total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.CASH_DESK_LIST) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getCashRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title=\"لیست صندوق ها\"\r\n                    onAdd={\r\n                      hasPermission(Constant.ALL_PERMISSIONS.CASH_DESK_EDIT) &&\r\n                      onAdd\r\n                    }\r\n                    handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                  />\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                            >\r\n                              <TableCell padding=\"none\">{row.name}</TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.type === \"CASH\" ? \"نقدی\" : \"بانکی\"}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.bank && (\r\n                                  <img\r\n                                    style={{ width: 40, height: 40 }}\r\n                                    alt={row.bank.name}\r\n                                    src={`${Constant.API_ADDRESS}/${row.bank.logo}`}\r\n                                  />\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  Number(row.amount).toLocaleString(),\r\n                                )}\r\n                              </TableCell>\r\n\r\n                              <TableCell padding=\"none\">\r\n                                <TableRowMenu\r\n                                  options={[\r\n                                    { id: \"transaction\", title: \"تراکنش\" },\r\n                                    { id: \"transfer\", title: \"انتقال\" },\r\n                                    {\r\n                                      id: \"edit\",\r\n                                      title: \"ویرایش\",\r\n                                      hidden: !hasPermission(\r\n                                        Constant.ALL_PERMISSIONS.CASH_DESK_EDIT,\r\n                                      ),\r\n                                    },\r\n                                    {\r\n                                      id: \"delete\",\r\n                                      title: \"حذف\",\r\n                                      hidden: !hasPermission(\r\n                                        Constant.ALL_PERMISSIONS\r\n                                          .CASH_DESK_DELETE,\r\n                                      ),\r\n                                    },\r\n                                  ]}\r\n                                  hadleAction={(type) =>\r\n                                    handleAction(row, type)\r\n                                  }\r\n                                />\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getCashRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainList;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  RadioGroup,\r\n  Radio,\r\n  FormControlLabel,\r\n} from \"@material-ui/core\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { getQueryString } from \"../../helpers/utils\";\r\nimport CircularProgress from \"../../components/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: 7,\r\n  },\r\n}));\r\n\r\nexport default function MainDetail({ defaultValues }) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const id = getQueryString(\"id\");\r\n  const [detail, setDetail] = useState({});\r\n  const [banks, setBanks] = useState([]);\r\n  const [selectedType, setSelectedType] = React.useState(\"CASH\");\r\n  const [selectedBank, setSelectedBank] = useState(\r\n    defaultValues?.bank.value || 1,\r\n  );\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n\r\n  const addCashRequest = useApi({\r\n    method: \"post\",\r\n    url: `cashdesk`,\r\n  });\r\n  const editCashRequest = useApi({\r\n    method: \"put\",\r\n    url: `cashdesk/${id}`,\r\n  });\r\n  const detailCashRequest = useApi({\r\n    method: \"get\",\r\n    url: `cashdesk/${id}`,\r\n  });\r\n  const getBankRequest = useApi({\r\n    method: \"get\",\r\n    url: `bank`,\r\n  });\r\n\r\n  const handleChangeType = (event) => {\r\n    setSelectedType(event.target.value);\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    if (id) {\r\n      await editCashRequest.execute(data);\r\n    } else {\r\n      await addCashRequest.execute(data);\r\n    }\r\n    setTimeout(() => {\r\n      onReject();\r\n    }, 1000);\r\n  };\r\n\r\n  const onReject = () => {\r\n    history.push(\"/app/cash-list\");\r\n  };\r\n\r\n  const getDetail = async () => {\r\n    const detail = await detailCashRequest.execute();\r\n    setDetail(detail.data);\r\n    setSelectedBank(detail.data.bankId);\r\n    setSelectedType(detail.data.type);\r\n  };\r\n\r\n  const onChangeBank = (e) => {\r\n    setSelectedBank(e.target.value);\r\n  };\r\n\r\n  const getBanks = async () => {\r\n    const result = await getBankRequest.execute();\r\n    setBanks(result.data);\r\n  };\r\n\r\n  const onDone = (data) => {\r\n    const value = {\r\n      ...data,\r\n      type: selectedType,\r\n      isUpdate: !!defaultValues,\r\n    };\r\n    if (selectedType === \"BANK\") {\r\n      value.bankId = selectedBank;\r\n    }\r\n    onSubmit(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      getDetail();\r\n    }\r\n    getBanks();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(detail);\r\n  }, [reset, detail]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onDone)}>\r\n      {!detailCashRequest.pending ? (\r\n        <Grid item lg={6} sm={12} className={classes.root}>\r\n          <Paper className={classes.paper}>\r\n            <Typography\r\n              className={classes.title}\r\n              variant=\"h6\"\r\n              id=\"tableTitle\"\r\n              component=\"div\"\r\n            >\r\n              {id ? \"ویرایش صندوق\" : \"افزودن صندوق\"}\r\n            </Typography>\r\n\r\n            <Grid container spacing={3}>\r\n              <Fragment>\r\n                <Grid item lg={12} xs={12}>\r\n                  <RadioGroup\r\n                    aria-label=\"gender\"\r\n                    name=\"gender1\"\r\n                    value={selectedType}\r\n                    onChange={handleChangeType}\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-around\",\r\n                    }}\r\n                  >\r\n                    <FormControlLabel\r\n                      disabled={!!id}\r\n                      value=\"CASH\"\r\n                      control={<Radio />}\r\n                      label=\"نقدی\"\r\n                    />\r\n                    <FormControlLabel\r\n                      disabled={!!id}\r\n                      value=\"BANK\"\r\n                      control={<Radio />}\r\n                      label=\"بانکی\"\r\n                    />\r\n                  </RadioGroup>\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"نام\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.name}\r\n                          helperText={errors.name ? errors.name.message : \"\"}\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                    name=\"name\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          disabled={!!id}\r\n                          variant=\"outlined\"\r\n                          label=\"موجودی \"\r\n                          type=\"number\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.amount}\r\n                          helperText={\r\n                            errors.amount ? errors.amount.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                    name=\"amount\"\r\n                  />\r\n                </Grid>\r\n                {selectedType === \"BANK\" && (\r\n                  <>\r\n                    <Grid item lg={6} xs={12}>\r\n                      <TextField\r\n                        select\r\n                        label=\"بانک\"\r\n                        onChange={onChangeBank}\r\n                        value={selectedBank}\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        name=\"bank\"\r\n                        SelectProps={{\r\n                          classes: {\r\n                            select: classes.rootSelect,\r\n                          },\r\n                        }}\r\n                      >\r\n                        {banks.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            <img\r\n                              src={`${Constant.API_ADDRESS}/${option.logo}`}\r\n                              alt={option.label}\r\n                              style={{\r\n                                width: 25,\r\n                                height: 25,\r\n                                borderRadius: \"50%\",\r\n                                marginLeft: 10,\r\n                              }}\r\n                            />\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </TextField>\r\n                    </Grid>\r\n                    <Grid item lg={6} xs={12}>\r\n                      <Controller\r\n                        control={control}\r\n                        render={({ onChange, value, name }) => {\r\n                          return (\r\n                            <TextField\r\n                              fullWidth\r\n                              value={value}\r\n                              size=\"small\"\r\n                              name={name}\r\n                              label=\"شماره کارت\"\r\n                              variant=\"outlined\"\r\n                              onChange={onChange}\r\n                              error={!!errors.accountCardNumber}\r\n                              helperText={\r\n                                errors.accountCardNumber\r\n                                  ? errors.accountCardNumber.message\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          );\r\n                        }}\r\n                        rules={{\r\n                          minLength: {\r\n                            value: 16,\r\n                            message: Constant.VALIDATION.CARD_NUMBER,\r\n                          },\r\n                          maxLength: {\r\n                            value: 16,\r\n                            message: Constant.VALIDATION.CARD_NUMBER,\r\n                          },\r\n                        }}\r\n                        name=\"accountCardNumber\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item lg={6} xs={12}>\r\n                      <Controller\r\n                        control={control}\r\n                        render={({ onChange, value, name }) => {\r\n                          return (\r\n                            <TextField\r\n                              fullWidth\r\n                              value={value}\r\n                              size=\"small\"\r\n                              name={name}\r\n                              label=\"شماره حساب\"\r\n                              variant=\"outlined\"\r\n                              onChange={onChange}\r\n                              error={!!errors.accountNumber}\r\n                              helperText={\r\n                                errors.accountNumber\r\n                                  ? errors.accountNumber.message\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          );\r\n                        }}\r\n                        name=\"accountNumber\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item lg={6} xs={12}>\r\n                      <Controller\r\n                        control={control}\r\n                        render={({ onChange, value, name }) => {\r\n                          return (\r\n                            <TextField\r\n                              fullWidth\r\n                              value={value}\r\n                              size=\"small\"\r\n                              name={name}\r\n                              label=\"شماره شبا\"\r\n                              variant=\"outlined\"\r\n                              onChange={onChange}\r\n                              error={!!errors.accountShaba}\r\n                              helperText={\r\n                                errors.accountShaba\r\n                                  ? errors.accountShaba.message\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          );\r\n                        }}\r\n                        name=\"accountShaba\"\r\n                      />\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n                <Grid item xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          multiline\r\n                          variant=\"outlined\"\r\n                          label=\"توضیحات\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.description}\r\n                          helperText={\r\n                            errors.description ? errors.description.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    name=\"description\"\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                    تایید\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={onReject}\r\n                  >\r\n                    بازگشت\r\n                  </Button>\r\n                </Grid>\r\n              </Fragment>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      ) : (\r\n        <CircularProgress />\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  status: {\r\n    color: \"#fff\",\r\n  },\r\n\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Grid, TextField, MenuItem, Button, Divider } from \"@material-ui/core\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\n\r\nconst Filter = ({ onFilter }) => {\r\n  const [filterData, setFilterData] = useState();\r\n  const [category, setCategory] = useState([]);\r\n  const [driverCategory, setDriverCategory] = useState(1);\r\n\r\n  const driverCategoryRequest = useApi({\r\n    method: \"get\",\r\n    url: `driver/category`,\r\n  });\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setFilterData(event.target.value);\r\n  };\r\n\r\n  const getDriverCategory = async () => {\r\n    const detail = await driverCategoryRequest.execute();\r\n    setCategory(detail.data);\r\n  };\r\n\r\n  const onChangeCategory = (e) => {\r\n    setDriverCategory(e.target.value);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (typeof onFilter === \"function\") {\r\n      onFilter(`{ name: ${filterData}, category: ${driverCategory} }`);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDriverCategory();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container spacing={3} alignItems=\"center\" style={{ padding: 10 }}>\r\n      <Grid item lg={3} xs={12}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          label=\"نام\"\r\n          onChange={handleChange(\"name\")}\r\n          value={filterData}\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n      </Grid>\r\n      <Grid item lg={3} xs={12}>\r\n        {!!category.length && driverCategory && (\r\n          <TextField\r\n            select\r\n            label=\"دسته بندی\"\r\n            value={driverCategory}\r\n            onChange={onChangeCategory}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            size=\"small\"\r\n          >\r\n            {category.map((option) => (\r\n              <MenuItem key={option.value} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        )}\r\n      </Grid>\r\n\r\n      <Grid item lg={3} xs={12}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n          تایید\r\n        </Button>\r\n      </Grid>\r\n      <Divider style={{ width: \"100%\" }} />\r\n    </Grid>\r\n  );\r\n};\r\nexport default Filter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport {\r\n  convertParamsToQueryString,\r\n  hasPermission,\r\n  persianNumber,\r\n} from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport FilterComponent from \"./filter\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"firstName\",\r\n    label: \"نام\",\r\n  },\r\n  { id: \"lastName\", label: \"نام خانوادگی\" },\r\n  {\r\n    id: \"firstName\",\r\n    label: \"نام\",\r\n  },\r\n  {\r\n    id: \"mobile\",\r\n    label: \"موبایل\",\r\n  },\r\n  { id: \"car\", label: \"خودرو\" },\r\n  { id: \"pelak\", label: \"پلاک\" },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function MainList() {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [search, setSearch] = useState();\r\n  const [filter, setFilter] = useState();\r\n  const [orderBy, setOrderBy] = useState(\"firstName\");\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const history = useHistory();\r\n  const [total, setTotal] = useState(0);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onAdd = () => {\r\n    history.push(\"/app/driver-detail\");\r\n  };\r\n\r\n  const getDriverRequest = useApi({\r\n    method: \"get\",\r\n    url: decodeURIComponent(\r\n      `driver?${convertParamsToQueryString({\r\n        page,\r\n        order,\r\n        orderBy,\r\n        pageSize,\r\n        search,\r\n        filter,\r\n      })}`,\r\n    ),\r\n  });\r\n\r\n  const deleteUseRequest = useApi({\r\n    method: \"delete\",\r\n    url: `driver`,\r\n  });\r\n\r\n  const handleAction = (id, type) => {\r\n    const types = {\r\n      edit: () => {\r\n        history.push(`/app/driver-detail?id=${id}`);\r\n      },\r\n      delete: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            await deleteUseRequest.execute(null, id);\r\n            setList(list.filter((item) => item.id !== id));\r\n            DialogActions.hide({ name: \"delete\" });\r\n          },\r\n          name: \"delete\",\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n      transaction: () => {\r\n        history.push(`/app/person-transaction?id=${id}&type=employee`);\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onFilter = (data) => {\r\n    setFilter(data);\r\n    setPage(0);\r\n  };\r\n\r\n  const getData = async () => {\r\n    const driverList = await getDriverRequest.execute();\r\n    setList(driverList.data);\r\n    setTotal(driverList.total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize, filter]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.DRIVER_SHOW) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getDriverRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title=\"لیست رانندگان\"\r\n                    onAdd={\r\n                      hasPermission(Constant.ALL_PERMISSIONS.DRIVER_EDIT) &&\r\n                      onAdd\r\n                    }\r\n                    FilterComponent={<FilterComponent onFilter={onFilter} />}\r\n                    handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                  />\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                            >\r\n                              <TableCell padding=\"none\">\r\n                                {row.firstName}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.lastName}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.category.name}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(Number(row.mobile))}\r\n                              </TableCell>\r\n\r\n                              <TableCell padding=\"none\">\r\n                                {row.carName}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.carPlaque}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                <TableRowMenu\r\n                                  options={[\r\n                                    { id: \"transaction\", title: \"تراکنش ها\" },\r\n                                    {\r\n                                      id: \"edit\",\r\n                                      title: \"ویرایش\",\r\n                                      hidden: !hasPermission(\r\n                                        Constant.ALL_PERMISSIONS.DRIVER_EDIT,\r\n                                      ),\r\n                                    },\r\n                                    {\r\n                                      id: \"delete\",\r\n                                      title: \"حذف\",\r\n                                      hidden: !hasPermission(\r\n                                        Constant.ALL_PERMISSIONS.DRIVER_DELETE,\r\n                                      ),\r\n                                    },\r\n                                  ]}\r\n                                  hadleAction={(type) =>\r\n                                    handleAction(row.id, type)\r\n                                  }\r\n                                />\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getDriverRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Grid, MenuItem } from \"@material-ui/core\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport styles from \"./style\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nconst Account = ({ onSubmit, onDismiss, defaultValues }) => {\r\n  const [banks, setBanks] = useState([]);\r\n  const [selectedBank, setSelectedBank] = useState(\r\n    defaultValues?.bank.value || 1,\r\n  );\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n  const classes = styles();\r\n\r\n  const getBankRequest = useApi({\r\n    method: \"get\",\r\n    url: `bank`,\r\n  });\r\n\r\n  const getBanks = async () => {\r\n    const result = await getBankRequest.execute();\r\n    setBanks(result.data);\r\n  };\r\n\r\n  const getSelectedBank = () => {\r\n    return banks.find((item) => item.value === selectedBank);\r\n  };\r\n\r\n  const onDone = (data) => {\r\n    const newId = uuid();\r\n    const value = {\r\n      ...data,\r\n      bank: getSelectedBank(),\r\n      id: defaultValues ? defaultValues.id : newId,\r\n      isUpdate: !!defaultValues,\r\n    };\r\n    onSubmit(value);\r\n  };\r\n\r\n  const onChangeBank = (e) => {\r\n    setSelectedBank(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBanks();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(defaultValues);\r\n  }, [reset, defaultValues]);\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          select\r\n          label=\"بانک\"\r\n          onChange={onChangeBank}\r\n          value={selectedBank}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n          name=\"bank\"\r\n          SelectProps={{\r\n            classes: {\r\n              select: classes.rootSelect,\r\n            },\r\n          }}\r\n        >\r\n          {banks.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              <img\r\n                src={`${Constant.API_ADDRESS}/${option.logo}`}\r\n                alt={option.label}\r\n                style={{\r\n                  width: 25,\r\n                  height: 25,\r\n                  borderRadius: \"50%\",\r\n                  marginLeft: 10,\r\n                }}\r\n              />\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                fullWidth\r\n                value={value}\r\n                size=\"small\"\r\n                name={name}\r\n                label=\"شماره کارت\"\r\n                variant=\"outlined\"\r\n                onChange={onChange}\r\n                error={!!errors.accountCardNumber}\r\n                helperText={\r\n                  errors.accountCardNumber\r\n                    ? errors.accountCardNumber.message\r\n                    : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          rules={{\r\n            minLength: {\r\n              value: 16,\r\n              message: Constant.VALIDATION.CARD_NUMBER,\r\n            },\r\n            maxLength: {\r\n              value: 16,\r\n              message: Constant.VALIDATION.CARD_NUMBER,\r\n            },\r\n          }}\r\n          name=\"accountCardNumber\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                fullWidth\r\n                value={value}\r\n                size=\"small\"\r\n                name={name}\r\n                label=\"شماره حساب\"\r\n                variant=\"outlined\"\r\n                onChange={onChange}\r\n                error={!!errors.accountNumber}\r\n                helperText={\r\n                  errors.accountNumber ? errors.accountNumber.message : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          name=\"accountNumber\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                fullWidth\r\n                value={value}\r\n                size=\"small\"\r\n                name={name}\r\n                label=\"شماره شبا\"\r\n                variant=\"outlined\"\r\n                onChange={onChange}\r\n                error={!!errors.accountShaba}\r\n                helperText={\r\n                  errors.accountShaba ? errors.accountShaba.message : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          name=\"accountShaba\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                label=\"توضیحات\"\r\n                multiline\r\n                rows={4}\r\n                variant=\"outlined\"\r\n                name={name}\r\n                onChange={onChange}\r\n                value={value}\r\n                fullWidth\r\n                error={!!errors.description}\r\n                helperText={\r\n                  errors.description ? errors.description.message : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          name=\"description\"\r\n        />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          onClick={handleSubmit(onDone)}\r\n        >\r\n          تایید\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onDismiss}>\r\n          انصراف\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  IconButton,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport { DeleteIcon, EditIcon } from \"../../components/icons\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { getQueryString } from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport Account from \"./account\";\r\nimport CircularProgress from \"../../components/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n}));\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"Name\",\r\n    label: \"نام بانک\",\r\n  },\r\n  { id: \"accountNumber\", label: \"شماره حساب \" },\r\n  {\r\n    id: \"CardNumber\",\r\n    label: \"شماره کارت\",\r\n  },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function MainDetail() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const id = getQueryString(\"id\");\r\n  const [detail, setDetail] = useState({});\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [category, setCategory] = useState([]);\r\n  const [driverCategory, setDriverCategory] = useState(1);\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n\r\n  const addDriverRequest = useApi({\r\n    method: \"post\",\r\n    url: `driver`,\r\n  });\r\n  const editDriverRequest = useApi({\r\n    method: \"put\",\r\n    url: `driver/${id}`,\r\n  });\r\n  const detailDriverRequest = useApi({\r\n    method: \"get\",\r\n    url: `driver/${id}`,\r\n  });\r\n\r\n  const driverCategoryRequest = useApi({\r\n    method: \"get\",\r\n    url: `driver/category`,\r\n  });\r\n\r\n  const deleteAccountRequest = useApi({\r\n    method: \"delete\",\r\n    url: `account`,\r\n  });\r\n\r\n  const onSubmit = async (data) => {\r\n    const newAccounts = [];\r\n    accounts.map((item) => {\r\n      const newData = {\r\n        bankId: item.bank.value || item.bank.id,\r\n        accountCardNumber: item.accountCardNumber,\r\n        accountNumber: item.accountNumber,\r\n        accountShaba: item.accountShaba,\r\n        description: item.description,\r\n        id: item.id.toString().includes(\"-\") ? null : item.id,\r\n      };\r\n      newAccounts.push(newData);\r\n    });\r\n\r\n    const allData = {\r\n      ...data,\r\n      accounts: newAccounts,\r\n      categoryId: driverCategory,\r\n    };\r\n    if (id) {\r\n      return await editDriverRequest.execute(allData);\r\n    }\r\n    await addDriverRequest.execute(allData);\r\n    setTimeout(() => {\r\n      onReject();\r\n    }, 1000);\r\n  };\r\n\r\n  const onReject = () => {\r\n    history.push(\"/app/driver-list\");\r\n  };\r\n\r\n  const getDetail = async () => {\r\n    const detail = await detailDriverRequest.execute();\r\n    setDetail(detail.data);\r\n    setDriverCategory(detail.data.driverCategory);\r\n    setAccounts(detail.data?.accounts || []);\r\n  };\r\n\r\n  const getDriverCategory = async () => {\r\n    const detail = await driverCategoryRequest.execute();\r\n    setCategory(detail.data);\r\n  };\r\n\r\n  const onSubmitAccount = (data) => {\r\n    if (data.isUpdate) {\r\n      const index = accounts.findIndex((item) => item.id === data.id);\r\n      const accounstTmp = [...accounts];\r\n      accounstTmp[index] = data;\r\n      setAccounts(accounstTmp);\r\n    } else {\r\n      setAccounts([...accounts, data]);\r\n    }\r\n    onDismissAccount();\r\n  };\r\n\r\n  const onDismissAccount = () => {\r\n    DialogActions.hide({ name: \"account\" });\r\n  };\r\n\r\n  const onShowDialog = (data) => {\r\n    DialogActions.show({\r\n      title: \" حساب بانکی\",\r\n      component: (\r\n        <Account\r\n          onSubmit={onSubmitAccount}\r\n          onDismiss={onDismissAccount}\r\n          defaultValues={data}\r\n        />\r\n      ),\r\n      name: \"account\",\r\n      size: \"4\",\r\n      confirm: false,\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  const onAddAccount = () => {\r\n    onShowDialog();\r\n  };\r\n\r\n  const handleEditAccount = (data) => {\r\n    onShowDialog(data);\r\n  };\r\n\r\n  const handleDeleteAccount = (row) => {\r\n    DialogActions.show({\r\n      confirm: true,\r\n      title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n      onAction: async () => {\r\n        if (id) {\r\n          await deleteAccountRequest.execute(null, row.id);\r\n        }\r\n        setAccounts(accounts.filter((item) => item.id !== row.id));\r\n        DialogActions.hide({ name: \"delete\" });\r\n      },\r\n      name: \"delete\",\r\n      size: \"6\",\r\n      disableCloseButton: false,\r\n    });\r\n  };\r\n\r\n  const onChangeCategory = (e) => {\r\n    setDriverCategory(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDriverCategory();\r\n    if (id) {\r\n      getDetail();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(detail);\r\n  }, [reset, detail]);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        {!detailDriverRequest.pending ? (\r\n          <Grid item lg={6} sm={12} className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n              <Typography\r\n                className={classes.title}\r\n                variant=\"h6\"\r\n                id=\"tableTitle\"\r\n                component=\"div\"\r\n              >\r\n                {id ? \"ویرایش راننده\" : \"افزودن راننده\"}\r\n              </Typography>\r\n\r\n              <Grid container spacing={3}>\r\n                <Fragment>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"نام\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.firstName}\r\n                            helperText={\r\n                              errors.firstName ? errors.firstName.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                      name=\"firstName\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"نام خانوادگی\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.lastName}\r\n                            helperText={\r\n                              errors.lastName ? errors.lastName.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                      name=\"lastName\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"تلفن\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.phone}\r\n                            helperText={\r\n                              errors.phone ? errors.phone.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"phone\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"موبایل\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.mobile}\r\n                            helperText={\r\n                              errors.mobile ? errors.mobile.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      rules={{\r\n                        minLength: {\r\n                          value: 11,\r\n                          message: Constant.VALIDATION.MOBILE_NUMBER,\r\n                        },\r\n                        maxLength: {\r\n                          value: 11,\r\n                          message: Constant.VALIDATION.MOBILE_NUMBER,\r\n                        },\r\n                      }}\r\n                      name=\"mobile\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            type=\"number\"\r\n                            variant=\"outlined\"\r\n                            label=\"مانده از قبل\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.accountRemaining}\r\n                            helperText={\r\n                              errors.accountRemaining\r\n                                ? errors.accountRemaining.message\r\n                                : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"accountRemaining\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    {!!category.length && driverCategory && (\r\n                      <TextField\r\n                        select\r\n                        label=\"دسته بندی\"\r\n                        value={driverCategory}\r\n                        onChange={onChangeCategory}\r\n                        variant=\"outlined\"\r\n                        error={!!errors.driverCategory}\r\n                        helperText={\r\n                          errors.driverCategory\r\n                            ? errors.driverCategory.message\r\n                            : \"\"\r\n                        }\r\n                        fullWidth\r\n                        size=\"small\"\r\n                      >\r\n                        {category.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </TextField>\r\n                    )}\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"نام خودرو\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.carName}\r\n                            helperText={\r\n                              errors.carName ? errors.carName.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"carName\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"پلاک خودرو\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.carPlaque}\r\n                            helperText={\r\n                              errors.carPlaque ? errors.carPlaque.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"carPlaque\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={onAddAccount}\r\n                    >\r\n                      افزودن حساب بانکی\r\n                    </Button>\r\n                  </Grid>\r\n                  {!!accounts.length && (\r\n                    <Grid item xs={12}>\r\n                      <Paper>\r\n                        <TableContainer style={{ padding: \"0 10px\" }}>\r\n                          <Table\r\n                            className={classes.table}\r\n                            size={\"medium\"}\r\n                            style={{ paddingRight: 10 }}\r\n                          >\r\n                            <TableHeader headCells={headCells} />\r\n\r\n                            <TableBody>\r\n                              {accounts.map((row) => {\r\n                                return (\r\n                                  <TableRow\r\n                                    hover\r\n                                    tabIndex={-1}\r\n                                    key={row.id}\r\n                                    style={{ paddingRight: 10 }}\r\n                                  >\r\n                                    <TableCell padding=\"none\">\r\n                                      <div\r\n                                        style={{\r\n                                          display: \"flex\",\r\n                                          alignItems: \"center\",\r\n                                        }}\r\n                                      >\r\n                                        <img\r\n                                          src={`${Constant.API_ADDRESS}/${row.bank.logo}`}\r\n                                          alt={row.bank.label}\r\n                                          style={{\r\n                                            width: 25,\r\n                                            height: 25,\r\n                                            borderRadius: \"50%\",\r\n                                            marginLeft: 5,\r\n                                          }}\r\n                                        />\r\n                                        {row.bank.name || row.bank.label}\r\n                                      </div>\r\n                                    </TableCell>\r\n                                    <TableCell padding=\"none\">\r\n                                      {row.accountNumber}\r\n                                    </TableCell>\r\n                                    <TableCell padding=\"none\">\r\n                                      {row.accountCardNumber}\r\n                                    </TableCell>\r\n\r\n                                    <TableCell\r\n                                      padding=\"none\"\r\n                                      style={{ textAlign: \"left\" }}\r\n                                    >\r\n                                      <IconButton\r\n                                        onClick={() => handleEditAccount(row)}\r\n                                      >\r\n                                        <EditIcon />\r\n                                      </IconButton>\r\n\r\n                                      <IconButton\r\n                                        onClick={() => handleDeleteAccount(row)}\r\n                                      >\r\n                                        <DeleteIcon />\r\n                                      </IconButton>\r\n                                    </TableCell>\r\n                                  </TableRow>\r\n                                );\r\n                              })}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                      </Paper>\r\n                    </Grid>\r\n                  )}\r\n\r\n                  <Grid item xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"آدرس\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.address}\r\n                            helperText={\r\n                              errors.address ? errors.address.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"address\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            label=\"توضیحات\"\r\n                            multiline\r\n                            rows={4}\r\n                            variant=\"outlined\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            fullWidth\r\n                            error={!!errors.description}\r\n                            helperText={\r\n                              errors.description\r\n                                ? errors.description.message\r\n                                : \"\"\r\n                            }\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"description\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                  >\r\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                      تایید\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      onClick={onReject}\r\n                    >\r\n                      بازگشت\r\n                    </Button>\r\n                  </Grid>\r\n                </Fragment>\r\n              </Grid>\r\n            </Paper>\r\n          </Grid>\r\n        ) : (\r\n          <CircularProgress />\r\n        )}\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n}));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { convertParamsToQueryString } from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\nconst headCells = [\r\n  {\r\n    id: \"username\",\r\n    label: \"نام کاربری\",\r\n  },\r\n  {\r\n    id: \"firstName\",\r\n    label: \"نام\",\r\n  },\r\n  { id: \"lastName\", label: \"نام خانوادگی\" },\r\n  {\r\n    id: \"mobile\",\r\n    label: \"موبایل\",\r\n  },\r\n  { id: \"phone\", label: \"تلفن\" },\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function MainList() {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"username\");\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(5);\r\n  const [list, setList] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const onAdd = () => {\r\n    history.push(\"/app/user-detail\");\r\n  };\r\n\r\n  const getUserRequest = useApi({\r\n    method: \"get\",\r\n    url: `user?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n    })}`,\r\n  });\r\n\r\n  const deleteUseRequest = useApi({\r\n    method: \"delete\",\r\n    url: `user`,\r\n  });\r\n\r\n  const handleAction = (id, type) => {\r\n    const types = {\r\n      edit: () => {\r\n        history.push(`/app/user-detail?id=${id}`);\r\n      },\r\n      delete: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            await deleteUseRequest.execute(null, id);\r\n            setList(list.filter((item) => item.id !== id));\r\n            DialogActions.hide({ name: \"delete\" });\r\n          },\r\n          name: \"delete\",\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const getData = async () => {\r\n    const userList = await getUserRequest.execute();\r\n    setList(userList.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <TableTop title=\"لیست کاربران\" onAdd={onAdd} />\r\n        <TableContainer style={{ padding: \"0 10px\" }}>\r\n          <Table\r\n            className={classes.table}\r\n            size={\"medium\"}\r\n            style={{ paddingRight: 10 }}\r\n          >\r\n            <TableHeader\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={list.length}\r\n              headCells={headCells}\r\n            />\r\n            <TableBody>\r\n              {stableSort(list, getComparator(order, orderBy))\r\n                .slice(page * pageSize, page * pageSize + pageSize)\r\n                .map((row) => {\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      tabIndex={-1}\r\n                      key={row.id}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableCell padding=\"none\">{row.username}</TableCell>\r\n                      <TableCell padding=\"none\">{row.firstName}</TableCell>\r\n                      <TableCell padding=\"none\">{row.lastName}</TableCell>\r\n                      <TableCell padding=\"none\">{row.mobile}</TableCell>\r\n                      <TableCell padding=\"none\">{row.phone}</TableCell>\r\n\r\n                      <TableCell padding=\"none\">\r\n                        <TableRowMenu\r\n                          options={[\r\n                            { id: \"edit\", title: \"ویرایش\" },\r\n                            { id: \"delete\", title: \"حذف\" },\r\n                          ]}\r\n                          hadleAction={(type) => handleAction(row.id, type)}\r\n                        />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {!list.length && !getUserRequest.pending && (\r\n                <TableRow style={{ height: 53 }}>\r\n                  <TableCell colSpan={6} style={{ textAlign: \"center\" }}>\r\n                    <Typography variant=\"h6\">\r\n                      داده ای برای نمایش وجود ندارد\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePaging\r\n          count={list.length}\r\n          handleChangePage={handleChangePage}\r\n          handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n          page={page}\r\n          rowsPerPage={pageSize}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"baseline\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      flexDirection: \"column\",\r\n    },\r\n  },\r\n  paper: {\r\n    width: \"30%\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"90%\",\r\n    },\r\n    margin: \"10px 20px\",\r\n  },\r\n  toolbar: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    \"& .MuiTypography-h6\": {\r\n      color: \"white\",\r\n    },\r\n  },\r\n}));\r\n","import React, { useState } from \"react\";\r\nimport { TextField, Button, Grid } from \"@material-ui/core\";\r\n\r\nconst MainDetail = ({ onSubmit, onDismiss, defaultValue }) => {\r\n  const [label, setLabel] = useState(defaultValue.label);\r\n\r\n  const onChangeSelectedCategory = (e) => {\r\n    const { value } = e.target;\r\n    setLabel(value);\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          style={{ width: \"100%\" }}\r\n          value={label}\r\n          size=\"small\"\r\n          label=\"عنوان\"\r\n          variant=\"outlined\"\r\n          onChange={onChangeSelectedCategory}\r\n        />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => onSubmit({ value: defaultValue.value, name: label })}\r\n        >\r\n          تایید\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n          انصراف\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default MainDetail;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport Detail from \"./detail\";\r\n\r\nconst MainList = () => {\r\n  const classes = styles();\r\n  const [customerCategory, setCustomerCategory] = useState([]);\r\n  const [depotCategory, setDepotCategory] = useState([]);\r\n  const [productCategory, setProductCategory] = useState([]);\r\n  const [invoiceCategory, setInvoiceCategory] = useState([]);\r\n  const [driverCategory, setDriverCategory] = useState([]);\r\n  const [action, setAction] = useState();\r\n  const [selectedCategory, setSelectedCategory] = useState({\r\n    value: \"\",\r\n    label: \"\",\r\n  });\r\n  const [selectedType, setSelectedType] = useState();\r\n\r\n  const GetCustomerCategoryRequest = useApi({\r\n    method: \"get\",\r\n    url: \"customer/category\",\r\n  });\r\n\r\n  const EditCustomerCategoryRequest = useApi({\r\n    method: \"put\",\r\n    url: `customer/category/${selectedCategory.value}`,\r\n  });\r\n\r\n  const AddCustomerCategoryRequest = useApi({\r\n    method: \"post\",\r\n    url: \"customer/category\",\r\n  });\r\n\r\n  const GetProductCategoryRequest = useApi({\r\n    method: \"get\",\r\n    url: \"product/category\",\r\n  });\r\n\r\n  const EditProductCategoryRequest = useApi({\r\n    method: \"put\",\r\n    url: `product/category/${selectedCategory.value}`,\r\n  });\r\n\r\n  const AddProductCategoryRequest = useApi({\r\n    method: \"post\",\r\n    url: \"product/category\",\r\n  });\r\n\r\n  const GetDepotCategoryRequest = useApi({\r\n    method: \"get\",\r\n    url: \"depot/category\",\r\n  });\r\n\r\n  const EditDepotCategoryRequest = useApi({\r\n    method: \"put\",\r\n    url: `depot/category/${selectedCategory.value}`,\r\n  });\r\n\r\n  const AddDepotCategoryRequest = useApi({\r\n    method: \"post\",\r\n    url: \"depot/category\",\r\n  });\r\n\r\n  const GetInvoiceCategoryRequest = useApi({\r\n    method: \"get\",\r\n    url: \"invoice/category\",\r\n  });\r\n\r\n  const EditInvoiceCategoryRequest = useApi({\r\n    method: \"put\",\r\n    url: `invoice/category/${selectedCategory.value}`,\r\n  });\r\n\r\n  const AddInvoiceCategoryRequest = useApi({\r\n    method: \"post\",\r\n    url: \"invoice/category\",\r\n  });\r\n\r\n  const GetDriverCategoryRequest = useApi({\r\n    method: \"get\",\r\n    url: \"driver/category\",\r\n  });\r\n\r\n  const EditDriverCategoryRequest = useApi({\r\n    method: \"put\",\r\n    url: `driver/category/${selectedCategory.value}`,\r\n  });\r\n\r\n  const AddDriverCategoryRequest = useApi({\r\n    method: \"post\",\r\n    url: \"driver/category\",\r\n  });\r\n\r\n  const onAction = ({ name, value }) => {\r\n    const types = {\r\n      customer: async () => {\r\n        if (action === \"edit\") {\r\n          await EditCustomerCategoryRequest.execute({\r\n            name,\r\n          });\r\n        } else {\r\n          await AddCustomerCategoryRequest.execute({ name });\r\n        }\r\n        getCustomerCategory();\r\n      },\r\n      depot: async () => {\r\n        if (action === \"edit\") {\r\n          await EditDepotCategoryRequest.execute({\r\n            name,\r\n          });\r\n        } else {\r\n          await AddDepotCategoryRequest.execute({ name });\r\n        }\r\n        getDepotCategory();\r\n      },\r\n      product: async () => {\r\n        if (action === \"edit\") {\r\n          await EditProductCategoryRequest.execute({\r\n            name,\r\n          });\r\n        } else {\r\n          await AddProductCategoryRequest.execute({ name });\r\n        }\r\n        getProductCategory();\r\n      },\r\n      invoice: async () => {\r\n        if (action === \"edit\") {\r\n          await EditInvoiceCategoryRequest.execute({\r\n            name,\r\n          });\r\n        } else {\r\n          await AddInvoiceCategoryRequest.execute({ name });\r\n        }\r\n        getInvoiceCategory();\r\n      },\r\n      driver: async () => {\r\n        if (action === \"edit\") {\r\n          await EditDriverCategoryRequest.execute({\r\n            name,\r\n          });\r\n        } else {\r\n          await AddDriverCategoryRequest.execute({ name });\r\n        }\r\n        getDriverCategory();\r\n      },\r\n    };\r\n    if (types[selectedType]) {\r\n      onDismiss();\r\n      return types[selectedType]();\r\n    }\r\n  };\r\n\r\n  const handleAdd = (type) => {\r\n    setAction(\"add\");\r\n    setSelectedType(type);\r\n  };\r\n\r\n  const handleAction = (type, item) => {\r\n    setAction(\"edit\");\r\n    setSelectedType(type);\r\n    setSelectedCategory(item);\r\n  };\r\n\r\n  const onDismiss = () => {\r\n    DialogActions.hide({ name: \"detail\" });\r\n    setAction();\r\n  };\r\n\r\n  const showEditModal = () => {\r\n    DialogActions.show({\r\n      title: \" دسته بندی\",\r\n      component: (\r\n        <Detail\r\n          onSubmit={onAction}\r\n          onDismiss={onDismiss}\r\n          defaultValue={selectedCategory}\r\n        />\r\n      ),\r\n      name: \"detail\",\r\n      size: \"4\",\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  const getCustomerCategory = async () => {\r\n    const customerCategoryList = await GetCustomerCategoryRequest.execute();\r\n    setCustomerCategory(customerCategoryList.data);\r\n  };\r\n\r\n  const getDepotCategory = async () => {\r\n    const depotCategoryList = await GetDepotCategoryRequest.execute();\r\n    setDepotCategory(depotCategoryList.data);\r\n  };\r\n\r\n  const getProductCategory = async () => {\r\n    const productCategoryList = await GetProductCategoryRequest.execute();\r\n    setProductCategory(productCategoryList.data);\r\n  };\r\n\r\n  const getInvoiceCategory = async () => {\r\n    const invoiceCategoryList = await GetInvoiceCategoryRequest.execute();\r\n    setInvoiceCategory(invoiceCategoryList.data);\r\n  };\r\n\r\n  const getDriverCategory = async () => {\r\n    const driverCategoryList = await GetDriverCategoryRequest.execute();\r\n    setDriverCategory(driverCategoryList.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCustomerCategory();\r\n    getDepotCategory();\r\n    getProductCategory();\r\n    getInvoiceCategory();\r\n    getDriverCategory();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (action) {\r\n      showEditModal();\r\n    }\r\n  }, [action]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <TableTop\r\n          title=\"دسته بندی مشتریان\"\r\n          onAdd={() => handleAdd(\"customer\")}\r\n          toolbarClass={classes.toolbar}\r\n          addButtonClass={classes.addButton}\r\n          minimal\r\n        />\r\n        <TableContainer style={{ padding: \"0 10px\" }}>\r\n          <Table\r\n            className={classes.table}\r\n            size={\"medium\"}\r\n            style={{ paddingRight: 10 }}\r\n          >\r\n            <TableBody>\r\n              {customerCategory.map((row) => {\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    tabIndex={-1}\r\n                    key={row.id}\r\n                    style={{ paddingRight: 10 }}\r\n                  >\r\n                    <TableCell padding=\"none\">{row.label}</TableCell>\r\n\r\n                    <TableCell padding=\"none\" style={{ textAlign: \"left\" }}>\r\n                      <IconButton onClick={() => handleAction(\"customer\", row)}>\r\n                        <i className=\"material-icons-round\">edit</i>\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n              {!customerCategory.length && !getCustomerCategory.pending && (\r\n                <TableRow style={{ height: 53 }}>\r\n                  <TableCell colSpan={6} style={{ textAlign: \"center\" }}>\r\n                    <Typography variant=\"h6\">\r\n                      داده ای برای نمایش وجود ندارد\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n      <Paper className={classes.paper}>\r\n        <TableTop\r\n          title=\"دسته بندی انبار\"\r\n          onAdd={() => handleAdd(\"depot\")}\r\n          toolbarClass={classes.toolbar}\r\n          addButtonClass={classes.addButton}\r\n          minimal\r\n        />\r\n        <TableContainer style={{ padding: \"0 10px\" }}>\r\n          <Table\r\n            className={classes.table}\r\n            size={\"medium\"}\r\n            style={{ paddingRight: 10 }}\r\n          >\r\n            <TableBody>\r\n              {depotCategory.map((row) => {\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    tabIndex={-1}\r\n                    key={row.id}\r\n                    style={{ paddingRight: 10 }}\r\n                  >\r\n                    <TableCell padding=\"none\">{row.label}</TableCell>\r\n\r\n                    <TableCell padding=\"none\" style={{ textAlign: \"left\" }}>\r\n                      <IconButton onClick={() => handleAction(\"depot\", row)}>\r\n                        <i className=\"material-icons-round\">edit</i>\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n              {!depotCategory.length && !getDepotCategory.pending && (\r\n                <TableRow style={{ height: 53 }}>\r\n                  <TableCell colSpan={6} style={{ textAlign: \"center\" }}>\r\n                    <Typography variant=\"h6\">\r\n                      داده ای برای نمایش وجود ندارد\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n      <Paper className={classes.paper}>\r\n        <TableTop\r\n          title=\"دسته بندی کالاها\"\r\n          onAdd={() => handleAdd(\"product\")}\r\n          toolbarClass={classes.toolbar}\r\n          addButtonClass={classes.addButton}\r\n          minimal\r\n        />\r\n        <TableContainer style={{ padding: \"0 10px\" }}>\r\n          <Table\r\n            className={classes.table}\r\n            size={\"medium\"}\r\n            style={{ paddingRight: 10 }}\r\n          >\r\n            <TableBody>\r\n              {productCategory.map((row) => {\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    tabIndex={-1}\r\n                    key={row.id}\r\n                    style={{ paddingRight: 10 }}\r\n                  >\r\n                    <TableCell padding=\"none\">{row.label}</TableCell>\r\n\r\n                    <TableCell padding=\"none\" style={{ textAlign: \"left\" }}>\r\n                      <IconButton onClick={() => handleAction(\"product\", row)}>\r\n                        <i className=\"material-icons-round\">edit</i>\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n              {!productCategory.length && !getProductCategory.pending && (\r\n                <TableRow style={{ height: 53 }}>\r\n                  <TableCell colSpan={6} style={{ textAlign: \"center\" }}>\r\n                    <Typography variant=\"h6\">\r\n                      داده ای برای نمایش وجود ندارد\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n      <Paper className={classes.paper}>\r\n        <TableTop\r\n          title=\"دسته بندی فاکتور ها\"\r\n          onAdd={() => handleAdd(\"invoice\")}\r\n          toolbarClass={classes.toolbar}\r\n          addButtonClass={classes.addButton}\r\n          minimal\r\n        />\r\n        <TableContainer style={{ padding: \"0 10px\" }}>\r\n          <Table\r\n            className={classes.table}\r\n            size={\"medium\"}\r\n            style={{ paddingRight: 10 }}\r\n          >\r\n            <TableBody>\r\n              {invoiceCategory.map((row) => {\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    tabIndex={-1}\r\n                    key={row.id}\r\n                    style={{ paddingRight: 10 }}\r\n                  >\r\n                    <TableCell padding=\"none\">{row.label}</TableCell>\r\n\r\n                    <TableCell padding=\"none\" style={{ textAlign: \"left\" }}>\r\n                      <IconButton onClick={() => handleAction(\"invoice\", row)}>\r\n                        <i className=\"material-icons-round\">edit</i>\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n              {!invoiceCategory.length && !getInvoiceCategory.pending && (\r\n                <TableRow style={{ height: 53 }}>\r\n                  <TableCell colSpan={6} style={{ textAlign: \"center\" }}>\r\n                    <Typography variant=\"h6\">\r\n                      داده ای برای نمایش وجود ندارد\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n      <Paper className={classes.paper}>\r\n        <TableTop\r\n          title=\"دسته بندی رانندگان ها\"\r\n          onAdd={() => handleAdd(\"driver\")}\r\n          toolbarClass={classes.toolbar}\r\n          addButtonClass={classes.addButton}\r\n          minimal\r\n        />\r\n        <TableContainer style={{ padding: \"0 10px\" }}>\r\n          <Table\r\n            className={classes.table}\r\n            size={\"medium\"}\r\n            style={{ paddingRight: 10 }}\r\n          >\r\n            <TableBody>\r\n              {driverCategory.map((row) => {\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    tabIndex={-1}\r\n                    key={row.id}\r\n                    style={{ paddingRight: 10 }}\r\n                  >\r\n                    <TableCell padding=\"none\">{row.label}</TableCell>\r\n\r\n                    <TableCell padding=\"none\" style={{ textAlign: \"left\" }}>\r\n                      <IconButton onClick={() => handleAction(\"driver\", row)}>\r\n                        <i className=\"material-icons-round\">edit</i>\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n              {!driverCategory.length && !getDriverCategory.pending && (\r\n                <TableRow style={{ height: 53 }}>\r\n                  <TableCell colSpan={6} style={{ textAlign: \"center\" }}>\r\n                    <Typography variant=\"h6\">\r\n                      داده ای برای نمایش وجود ندارد\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Grid,\r\n  TextField,\r\n  Chip,\r\n} from \"@material-ui/core\";\r\nimport { TimePicker } from \"@material-ui/pickers\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { getQueryString, persianNumber } from \"../../helpers/utils\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport { convertParamsToQueryString } from \"../../helpers/utils\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport clsx from \"clsx\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n    marginBottom: 10,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n  enter: {\r\n    color: \"#fff\",\r\n    backgroundColor: theme.palette.primary.main,\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n  exit: {\r\n    color: \"#fff\",\r\n    backgroundColor: theme.palette.error.main,\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.error.main,\r\n    },\r\n  },\r\n  logedEnter: {\r\n    color: \"white\",\r\n    fontSize: 16,\r\n    backgroundColor: theme.palette.gray.main,\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.gray.main,\r\n    },\r\n  },\r\n  logedExit: {\r\n    color: \"white\",\r\n    fontSize: 16,\r\n    backgroundColor: theme.palette.gray.main,\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.gray.main,\r\n    },\r\n  },\r\n  register: {\r\n    color: \"#fff\",\r\n    backgroundColor: theme.palette.success.main,\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.success.dark,\r\n    },\r\n  },\r\n  dateTime: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  clockConatiner: {\r\n    background: theme.palette.primary.main,\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n    display: \"flex\",\r\n  },\r\n}));\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    label: \"نام و نام خانوادگی\",\r\n  },\r\n\r\n  { id: \"enter\", label: \"ورود\" },\r\n  {\r\n    id: \"exit\",\r\n    label: \"خروج\",\r\n  },\r\n  { id: \"enter\", label: \"ورود\" },\r\n  {\r\n    id: \"exit\",\r\n    label: \"خروج\",\r\n  },\r\n];\r\n\r\nexport default function MainDetail() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [search, setSearch] = useState();\r\n  const [list, setList] = useState([]);\r\n  const [selectedDate, setSelectedDate] = useState(moment());\r\n  const [selectedTime, setSelectedTime] = useState(moment());\r\n  const [isEditTime, setIsEditTime] = useState(false);\r\n  const [editTime, setEditTime] = useState();\r\n\r\n  const registerRequest = useApi({\r\n    method: \"post\",\r\n    url: `attendance`,\r\n  });\r\n\r\n  const getTrafficRequest = useApi({\r\n    method: \"get\",\r\n    url: decodeURIComponent(\r\n      `attendance?${convertParamsToQueryString({\r\n        search,\r\n        filter: `{date:${selectedDate._d.toISOString()}}`,\r\n      })}`,\r\n    ),\r\n  });\r\n\r\n  const editTrafficRequest = useApi({\r\n    method: \"put\",\r\n    url: `attendance`,\r\n  });\r\n\r\n  const onSubmit = async (row, type) => {\r\n    if (!checkToday()) {\r\n      await registerRequest.execute({ employeeId: row.id, type });\r\n      getData();\r\n    }\r\n  };\r\n\r\n  const onEdit = async (date) => {\r\n    const tzOffset = new Date().getTimezoneOffset() * 60000;\r\n    await editTrafficRequest.execute({\r\n      id: editTime.id,\r\n      date: new Date(new Date(date) - tzOffset),\r\n    });\r\n    getData();\r\n  };\r\n\r\n  const onChangeSearch = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  const getData = async () => {\r\n    const userList = await getTrafficRequest.execute();\r\n    setList(userList.data);\r\n  };\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date._d);\r\n    setIsEditTime(false);\r\n    setEditTime(null);\r\n    onEdit(date._d);\r\n  };\r\n\r\n  const onEditTime = (time) => {\r\n    setSelectedTime(time.dateTime);\r\n    setIsEditTime(true);\r\n    setEditTime({ id: time.id });\r\n  };\r\n\r\n  const checkToday = () => {\r\n    return selectedDate._d.toDateString() !== moment()._d.toDateString();\r\n  };\r\n\r\n  const getTimesElement = (row) => {\r\n    if (row.times.length === 0) {\r\n      return (\r\n        <>\r\n          <TableCell padding=\"none\">\r\n            <Chip\r\n              label={\"ثبت ورود\"}\r\n              className={clsx(\r\n                classes.enter,\r\n                checkToday() && classes.logedEnter,\r\n              )}\r\n              onClick={() => onSubmit(row, \"ENTER\")}\r\n            />\r\n          </TableCell>\r\n          <TableCell padding=\"none\"></TableCell>\r\n          <TableCell padding=\"none\"></TableCell>\r\n          <TableCell padding=\"none\"></TableCell>\r\n        </>\r\n      );\r\n    }\r\n    if (row.times.length === 1) {\r\n      return (\r\n        <>\r\n          <TableCell padding=\"none\">\r\n            {isEditTime && row.times[0].id === editTime.id ? (\r\n              <TimePicker\r\n                style={{ width: 50 }}\r\n                ampm={false}\r\n                value={selectedTime}\r\n                onChange={handleTimeChange}\r\n                okLabel=\"تایید\"\r\n                cancelLabel=\"انصراف\"\r\n              />\r\n            ) : (\r\n              <Chip\r\n                label={persianNumber(row.times[0].time).substring(0, 5)}\r\n                className={classes.logedEnter}\r\n                onClick={() => onEditTime(row.times[0])}\r\n              />\r\n            )}\r\n          </TableCell>\r\n          <TableCell padding=\"none\">\r\n            <Chip\r\n              label={\"ثبت خروج\"}\r\n              className={clsx(classes.exit, checkToday() && classes.logedExit)}\r\n              onClick={() => onSubmit(row, \"EXIT\")}\r\n            />\r\n          </TableCell>\r\n          <TableCell padding=\"none\"></TableCell>\r\n          <TableCell padding=\"none\"></TableCell>\r\n        </>\r\n      );\r\n    }\r\n    if (row.times.length === 2) {\r\n      return (\r\n        <>\r\n          <TableCell padding=\"none\">\r\n            {isEditTime && row.times[0].id === editTime.id ? (\r\n              <TimePicker\r\n                style={{ width: 50 }}\r\n                ampm={false}\r\n                value={selectedTime}\r\n                onChange={handleTimeChange}\r\n                okLabel=\"تایید\"\r\n                cancelLabel=\"انصراف\"\r\n              />\r\n            ) : (\r\n              <Chip\r\n                label={persianNumber(row.times[0].time).substring(0, 5)}\r\n                className={classes.logedEnter}\r\n                onClick={() => onEditTime(row.times[0])}\r\n              />\r\n            )}\r\n          </TableCell>\r\n          <TableCell padding=\"none\">\r\n            {isEditTime && row.times[1].id === editTime.id ? (\r\n              <TimePicker\r\n                style={{ width: 50 }}\r\n                ampm={false}\r\n                value={selectedTime}\r\n                onChange={handleTimeChange}\r\n                okLabel=\"تایید\"\r\n                cancelLabel=\"انصراف\"\r\n              />\r\n            ) : (\r\n              <Chip\r\n                label={persianNumber(row.times[1].time).substring(0, 5)}\r\n                className={classes.logedExit}\r\n                onClick={() => onEditTime(row.times[1])}\r\n              />\r\n            )}\r\n          </TableCell>\r\n          <TableCell padding=\"none\">\r\n            <Chip\r\n              label={\"ثبت ورود\"}\r\n              className={clsx(\r\n                classes.enter,\r\n                checkToday() && classes.logedEnter,\r\n              )}\r\n              onClick={() => onSubmit(row, \"ENTER\")}\r\n            />\r\n          </TableCell>\r\n          <TableCell padding=\"none\"></TableCell>\r\n        </>\r\n      );\r\n    }\r\n    if (row.times.length === 3) {\r\n      return (\r\n        <>\r\n          <TableCell padding=\"none\">\r\n            {isEditTime && row.times[0].id === editTime.id ? (\r\n              <TimePicker\r\n                style={{ width: 50 }}\r\n                ampm={false}\r\n                value={selectedTime}\r\n                onChange={handleTimeChange}\r\n                okLabel=\"تایید\"\r\n                cancelLabel=\"انصراف\"\r\n              />\r\n            ) : (\r\n              <Chip\r\n                label={persianNumber(row.times[0].time).substring(0, 5)}\r\n                className={classes.logedEnter}\r\n                onClick={() => onEditTime(row.times[0])}\r\n              />\r\n            )}\r\n          </TableCell>\r\n          <TableCell padding=\"none\">\r\n            {isEditTime && row.times[1].id === editTime.id ? (\r\n              <TimePicker\r\n                style={{ width: 50 }}\r\n                ampm={false}\r\n                value={selectedTime}\r\n                onChange={handleTimeChange}\r\n                okLabel=\"تایید\"\r\n                cancelLabel=\"انصراف\"\r\n              />\r\n            ) : (\r\n              <Chip\r\n                label={persianNumber(row.times[1].time).substring(0, 5)}\r\n                className={classes.logedExit}\r\n                onClick={() => onEditTime(row.times[1])}\r\n              />\r\n            )}\r\n          </TableCell>\r\n          <TableCell padding=\"none\">\r\n            {isEditTime && row.times[2].id === editTime.id ? (\r\n              <TimePicker\r\n                style={{ width: 50 }}\r\n                ampm={false}\r\n                value={selectedTime}\r\n                onChange={handleTimeChange}\r\n                okLabel=\"تایید\"\r\n                cancelLabel=\"انصراف\"\r\n              />\r\n            ) : (\r\n              <Chip\r\n                label={persianNumber(row.times[2].time).substring(0, 5)}\r\n                className={classes.logedEnter}\r\n                onClick={() => onEditTime(row.times[2])}\r\n              />\r\n            )}\r\n          </TableCell>\r\n          <TableCell padding=\"none\">\r\n            <Chip\r\n              label={\"ثبت خروج\"}\r\n              className={clsx(classes.exit, checkToday() && classes.logedExit)}\r\n              onClick={() => onSubmit(row, \"EXIT\")}\r\n            />\r\n          </TableCell>\r\n        </>\r\n      );\r\n    }\r\n    if (row.times.length === 4) {\r\n      return (\r\n        <>\r\n          <TableCell padding=\"none\">\r\n            {isEditTime && row.times[0].id === editTime.id ? (\r\n              <TimePicker\r\n                style={{ width: 50 }}\r\n                ampm={false}\r\n                value={selectedTime}\r\n                onChange={handleTimeChange}\r\n                okLabel=\"تایید\"\r\n                cancelLabel=\"انصراف\"\r\n              />\r\n            ) : (\r\n              <Chip\r\n                label={persianNumber(row.times[0].time).substring(0, 5)}\r\n                className={classes.logedEnter}\r\n                onClick={() => onEditTime(row.times[0])}\r\n              />\r\n            )}\r\n          </TableCell>\r\n          <TableCell padding=\"none\">\r\n            {isEditTime && row.times[1].id === editTime.id ? (\r\n              <TimePicker\r\n                style={{ width: 50 }}\r\n                ampm={false}\r\n                value={selectedTime}\r\n                onChange={handleTimeChange}\r\n                okLabel=\"تایید\"\r\n                cancelLabel=\"انصراف\"\r\n              />\r\n            ) : (\r\n              <Chip\r\n                label={persianNumber(row.times[1].time).substring(0, 5)}\r\n                className={classes.logedExit}\r\n                onClick={() => onEditTime(row.times[1])}\r\n              />\r\n            )}\r\n          </TableCell>\r\n          <TableCell padding=\"none\">\r\n            {isEditTime && row.times[2].id === editTime.id ? (\r\n              <TimePicker\r\n                style={{ width: 50 }}\r\n                ampm={false}\r\n                value={selectedTime}\r\n                onChange={handleTimeChange}\r\n                okLabel=\"تایید\"\r\n                cancelLabel=\"انصراف\"\r\n              />\r\n            ) : (\r\n              <Chip\r\n                label={persianNumber(row.times[2].time).substring(0, 5)}\r\n                className={classes.logedEnter}\r\n                onClick={() => onEditTime(row.times[2])}\r\n              />\r\n            )}\r\n          </TableCell>\r\n          <TableCell padding=\"none\">\r\n            {isEditTime && row.times[3].id === editTime.id ? (\r\n              <TimePicker\r\n                style={{ width: 50 }}\r\n                ampm={false}\r\n                value={selectedTime}\r\n                onChange={handleTimeChange}\r\n                okLabel=\"تایید\"\r\n                cancelLabel=\"انصراف\"\r\n              />\r\n            ) : (\r\n              <Chip\r\n                label={persianNumber(row.times[3].time).substring(0, 5)}\r\n                className={classes.logedExit}\r\n                onClick={() => onEditTime(row.times[3])}\r\n              />\r\n            )}\r\n          </TableCell>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   console.log(new Date(selectedTime._d).getHours());\r\n  // }, [selectedTime]);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [search, selectedDate]);\r\n\r\n  return (\r\n    <Grid container spacing={3} style={{ alignItems: \"baseline\" }}>\r\n      <Grid item lg={3} sm={12} className={classes.dateTime}>\r\n        <DatePicker\r\n          autoOk\r\n          orientation=\"portrait\"\r\n          variant=\"static\"\r\n          openTo=\"date\"\r\n          name=\"date\"\r\n          label=\"تاریخ شروع قرارداد\"\r\n          inputVariant=\"outlined\"\r\n          okLabel=\"تأیید\"\r\n          cancelLabel=\"لغو\"\r\n          labelFunc={(date) => (date ? date.format(\"jYYYY/jMM/jDD\") : \"\")}\r\n          value={selectedDate}\r\n          onChange={handleDateChange}\r\n          style={{ width: \"100%\" }}\r\n        />\r\n\r\n        {/* {isEditTime && (\r\n          <TimePicker\r\n            autoOk={false}\r\n            variant=\"static\"\r\n            openTo=\"hours\"\r\n            ampm={false}\r\n            value={selectedTime}\r\n            onChange={setSelectedTime}\r\n          />\r\n        )} */}\r\n      </Grid>\r\n      <Grid item lg={8} sm={12} className={classes.root}>\r\n        <Paper className={classes.paper}>\r\n          <Typography\r\n            className={classes.title}\r\n            variant=\"h6\"\r\n            id=\"tableTitle\"\r\n            component=\"div\"\r\n          >\r\n            ثبت حضور و غیاب\r\n          </Typography>\r\n\r\n          <Grid container spacing={3}>\r\n            <Grid item lg={12} xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                label=\" جستجوی پرسنل\"\r\n                onChange={onChangeSearch}\r\n                value={search}\r\n                fullWidth\r\n                size=\"small\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n        <div className={classes.root}>\r\n          <Paper className={classes.paper}>\r\n            <TableContainer style={{ padding: \"0 10px\" }}>\r\n              <Table\r\n                className={classes.table}\r\n                size={\"medium\"}\r\n                style={{ paddingRight: 10 }}\r\n              >\r\n                <TableHeader classes={classes} headCells={headCells} />\r\n                <TableBody>\r\n                  {list.map((row) => {\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        tabIndex={-1}\r\n                        key={row.id}\r\n                        style={{ paddingRight: 10 }}\r\n                      >\r\n                        <TableCell padding=\"none\">{row.employee}</TableCell>\r\n                        {getTimesElement(row)}\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                  {!list.length && !getTrafficRequest.pending && (\r\n                    <TableRow style={{ height: 53 }}>\r\n                      <TableCell colSpan={6} style={{ textAlign: \"center\" }}>\r\n                        <Typography variant=\"h6\">\r\n                          داده ای برای نمایش وجود ندارد\r\n                        </Typography>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Paper>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Grid, Button, Divider } from \"@material-ui/core\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n}));\r\nconst Filter = ({ onFilter }) => {\r\n  const classes = useStyles();\r\n  const [selectedFromDate, handleFromDateChange] = useState(moment());\r\n  const [selectedToDate, handleToDateChange] = useState(moment());\r\n\r\n  const onChnageDate = (e, type) => {\r\n    if (type === \"from\") {\r\n      handleFromDateChange(e);\r\n    } else {\r\n      handleToDateChange(e);\r\n    }\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (typeof onFilter === \"function\") {\r\n      onFilter(\r\n        `{from:${selectedFromDate._d.toISOString()},to:${selectedToDate._d.toISOString()}}`,\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3} alignItems=\"center\" style={{ padding: 10 }}>\r\n      <Grid item lg={3} xs={12} className={classes.datePicker}>\r\n        <DatePicker\r\n          autoOk\r\n          name=\"date\"\r\n          label=\"از تاریخ\"\r\n          inputVariant=\"outlined\"\r\n          okLabel=\"تأیید\"\r\n          cancelLabel=\"لغو\"\r\n          labelFunc={(date) => (date ? date.format(\"jYYYY/jMM/jDD\") : \"\")}\r\n          value={selectedFromDate}\r\n          onChange={(e) => onChnageDate(e, \"from\")}\r\n          style={{ width: \"100%\" }}\r\n        />\r\n      </Grid>\r\n      <Grid item lg={3} xs={12} className={classes.datePicker}>\r\n        <DatePicker\r\n          autoOk\r\n          name=\"date\"\r\n          label=\"تا تاریخ\"\r\n          inputVariant=\"outlined\"\r\n          okLabel=\"تأیید\"\r\n          cancelLabel=\"لغو\"\r\n          labelFunc={(date) => (date ? date.format(\"jYYYY/jMM/jDD\") : \"\")}\r\n          value={selectedToDate}\r\n          onChange={(e) => onChnageDate(e, \"to\")}\r\n          style={{ width: \"100%\" }}\r\n        />\r\n      </Grid>\r\n      <Grid item lg={3} xs={12}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n          تایید\r\n        </Button>\r\n      </Grid>\r\n      <Divider style={{ width: \"100%\" }} />\r\n    </Grid>\r\n  );\r\n};\r\nexport default Filter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Chip,\r\n  TextField,\r\n  Grid,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport {\r\n  convertParamsToQueryString,\r\n  hasPermission,\r\n  getQueryString,\r\n  persianNumber,\r\n} from \"../../helpers/utils\";\r\nimport styles from \"./style\";\r\nimport FilterComponent from \"./logFilter\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\nimport Transction from \"../customers/transaction\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport moment from \"moment-timezone\";\r\nimport jMoment from \"jalali-moment\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"date\",\r\n    label: \"تاریخ\",\r\n  },\r\n\r\n  { id: \"firstEnter\", label: \"ورود اول\" },\r\n  {\r\n    id: \"firstExit\",\r\n    label: \"خروج اول\",\r\n  },\r\n  { id: \"secondEnter\", label: \"ورود دوم\" },\r\n  {\r\n    id: \"secondExit\",\r\n    label: \"خروج دوم\",\r\n  },\r\n  { id: \"fractionTime\", label: \"کسر کار\" },\r\n  {\r\n    id: \"overTime\",\r\n    label: \"اضافه کار\",\r\n  },\r\n  {\r\n    id: \"total\",\r\n    label: \"مجموع کارکرد\",\r\n  },\r\n];\r\n\r\nexport default function EmployeeLog() {\r\n  const classes = styles();\r\n  const id = getQueryString(\"id\");\r\n  const name = getQueryString(\"name\");\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"date\");\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [sum, setSum] = useState();\r\n  const history = useHistory();\r\n  const [filter, setFilter] = useState(\r\n    `{from:${jMoment(moment(), \"YYYY/MM/DD\")\r\n      .locale(\"fa\")\r\n      .startOf(\"month\")\r\n      .toISOString()},to:${moment().toISOString()}}`,\r\n  );\r\n  // const [price, setPrice] = useState();\r\n  // const [description, setDescription] = useState();\r\n  // const [detail, setDetail] = useState({\r\n  //   totalPay: \" \",\r\n  //   totalLogPay: \" \",\r\n  //   totalLog: \" \",\r\n  //   purePay: \" \",\r\n  //   SPH: \" \",\r\n  // });\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onReject = () => {\r\n    history.push(\"/customer-list\");\r\n  };\r\n\r\n  const getEmployeeRequest = useApi({\r\n    method: \"get\",\r\n    url: decodeURIComponent(\r\n      `attendance/employee?${convertParamsToQueryString({\r\n        page,\r\n        order,\r\n        orderBy,\r\n        pageSize,\r\n        filter,\r\n      })}`,\r\n    ),\r\n  });\r\n\r\n  const onFilter = (data) => {\r\n    setFilter(data);\r\n  };\r\n\r\n  const onShowPayments = () => {\r\n    DialogActions.show({\r\n      title: \" حساب بانکی\",\r\n      component: (\r\n        <Transction\r\n        // onSubmit={onSubmitAccount}\r\n        // onDismiss={onDismissAccount}\r\n        // defaultValues={data}\r\n        />\r\n      ),\r\n      name: \"transaction\",\r\n      size: \"4\",\r\n      confirm: false,\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  const getData = async () => {\r\n    const employeeList = await getEmployeeRequest.execute(null, id);\r\n    setList(employeeList.data);\r\n    setTotal(employeeList.total);\r\n    setSum(employeeList.details);\r\n  };\r\n\r\n  const getTitle = () => {\r\n    return `لیست تردد ${name}`;\r\n  };\r\n\r\n  const onSubmitNewPayment = () => {\r\n    //add new payment in today and type =\"outcome\"\r\n  };\r\n\r\n  const onChange = (e, type) => {};\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, pageSize, filter]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.CASH_LIST) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getEmployeeRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <>\r\n                <Grid container spacing={3} className={classes.salary}>\r\n                  {/* <Grid item xs={3}>\r\n                    <Paper className={classes.salaryPaperRight}>\r\n                      <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                          <TextField\r\n                            disabled\r\n                            variant=\"outlined\"\r\n                            label=\"مجموع کارکرد\"\r\n                            name=\"totalLog\"\r\n                            value={detail.totalLog}\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <TextField\r\n                            disabled\r\n                            variant=\"outlined\"\r\n                            label=\"دریافتی در ساعت\"\r\n                            name=\"totalLog\"\r\n                            value={detail.SPH}\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <TextField\r\n                            disabled\r\n                            variant=\"outlined\"\r\n                            label=\"مبلغ قابل پرداخت\"\r\n                            name=\"totalLog\"\r\n                            value={detail.totalLogPay}\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <TextField\r\n                            disabled\r\n                            variant=\"outlined\"\r\n                            label=\"مجموع دریافتی\"\r\n                            name=\"totalLog\"\r\n                            value={detail.totalPay}\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <TextField\r\n                            disabled\r\n                            variant=\"outlined\"\r\n                            label=\"خالص دریافتی\"\r\n                            name=\"totalLog\"\r\n                            value={detail.purePay}\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid\r\n                          item\r\n                          xs={12}\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                          }}\r\n                        >\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={onShowPayments}\r\n                            fullWidth\r\n                          >\r\n                            لیست پرداختی ها\r\n                          </Button>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Paper>\r\n                  </Grid>\r\n                   */}\r\n                  <Grid item xs={12}>\r\n                    <Paper className={classes.salaryPaperLeft}>\r\n                      <TableTop\r\n                        title={getTitle()}\r\n                        FilterComponent={\r\n                          <FilterComponent onFilter={onFilter} />\r\n                        }\r\n                      />\r\n                      <TableContainer style={{ padding: \"0 10px\" }}>\r\n                        <Table\r\n                          className={classes.table}\r\n                          size={\"medium\"}\r\n                          style={{ paddingRight: 10 }}\r\n                        >\r\n                          <TableHeader\r\n                            classes={classes}\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onRequestSort={handleRequestSort}\r\n                            rowCount={list.length}\r\n                            headCells={headCells}\r\n                          />\r\n\r\n                          <TableBody>\r\n                            {list.map((row) => {\r\n                              return (\r\n                                <TableRow\r\n                                  hover\r\n                                  tabIndex={-1}\r\n                                  key={row.id}\r\n                                  style={{ paddingRight: 10 }}\r\n                                >\r\n                                  <TableCell padding=\"none\">\r\n                                    {persianNumber(\r\n                                      new Date(row.date).toLocaleDateString(\r\n                                        \"fa-IR\",\r\n                                      ),\r\n                                    )}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {persianNumber(row.times[0]?.time)}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {persianNumber(row.times[1]?.time)}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {persianNumber(row.times[2]?.time)}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {persianNumber(row.times[3]?.time)}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {persianNumber(row.fractionTime)}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {persianNumber(row.overTime)}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {persianNumber(row.total)}\r\n                                  </TableCell>\r\n                                </TableRow>\r\n                              );\r\n                            })}\r\n                            {!list.length && !getEmployeeRequest.pending && (\r\n                              <TableRow style={{ height: 53 }}>\r\n                                <TableCell\r\n                                  colSpan={headCells.length}\r\n                                  style={{ textAlign: \"center\" }}\r\n                                >\r\n                                  <Typography variant=\"h6\">\r\n                                    داده ای برای نمایش وجود ندارد\r\n                                  </Typography>\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            )}\r\n                          </TableBody>\r\n                        </Table>\r\n                      </TableContainer>\r\n                      <TablePaging\r\n                        count={total}\r\n                        handleChangePage={handleChangePage}\r\n                        handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                        page={page}\r\n                        rowsPerPage={pageSize}\r\n                      />\r\n                    </Paper>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <Paper className={classes.salaryPaperRight}>\r\n                      <Grid container spacing={3}>\r\n                        <Grid item xs={12} sm={4}>\r\n                          <TextField\r\n                            disabled\r\n                            variant=\"outlined\"\r\n                            label=\"مجموع کارکرد\"\r\n                            name=\"totalLog\"\r\n                            value={persianNumber(sum?.totalTime)}\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                          <TextField\r\n                            disabled\r\n                            variant=\"outlined\"\r\n                            label=\"مجموع اضافه کار\"\r\n                            name=\"totalLog\"\r\n                            value={persianNumber(sum?.totalOverTime)}\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                          <TextField\r\n                            disabled\r\n                            variant=\"outlined\"\r\n                            label=\"مجموع کسر کار\"\r\n                            name=\"totalLog\"\r\n                            value={persianNumber(sum?.totalFractionTime)}\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Paper>\r\n                  </Grid>\r\n                </Grid>\r\n                {/* <Grid container spacing={3} className={classes.salary}>\r\n                  <Grid item xs={3}>\r\n                    <Paper className={classes.salaryPaperRight}>\r\n                      <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"مبلغ\"\r\n                            name=\"price\"\r\n                            onChange={(e) => onChange(e, \"price\")}\r\n                            value={price}\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <TextField\r\n                            rows={3}\r\n                            multiline\r\n                            variant=\"outlined\"\r\n                            label=\"بابت\"\r\n                            name=\"description\"\r\n                            onChange={(e) => onChange(e, \"description\")}\r\n                            value={description}\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        item\r\n                        xs={12}\r\n                        style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"space-between\",\r\n                          marginTop: 10,\r\n                          flexDirection: \"column\",\r\n                        }}\r\n                      >\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={onSubmitNewPayment}\r\n                          fullWidth\r\n                        >\r\n                          پرداخت\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"Secondary\"\r\n                          onClick={onReject}\r\n                          style={{ marginTop: 10 }}\r\n                          fullWidth\r\n                        >\r\n                          بازگشت\r\n                        </Button>\r\n                      </Grid>\r\n                    </Paper>\r\n                  </Grid>\r\n                </Grid>\r\n              */}\r\n              </>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n}));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Grid, TextField, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport Constant from \"../../helpers/constant\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  img: {\r\n    width: 35,\r\n    height: 35,\r\n    borderRadius: 50,\r\n    marginLeft: 20,\r\n  },\r\n  icon: {\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: 50,\r\n    cursor: \"pointer\",\r\n  },\r\n  grid: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nexport default function MainDetail({ detail, onDismiss }) {\r\n  const classes = useStyles();\r\n  const [copyState, setCopyState] = useState();\r\n\r\n  const onCopy = (copyField) => {\r\n    setCopyState(copyField);\r\n  };\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12} className={classes.grid}>\r\n        <TextField\r\n          disabled\r\n          label=\"بانک\"\r\n          value={detail.bank.name || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n        <img\r\n          src={`${Constant.API_ADDRESS}/${detail.bank.logo}`}\r\n          alt={detail.bank.logo}\r\n          className={classes.img}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.grid}>\r\n        <TextField\r\n          disabled\r\n          label=\"شماره کارت\"\r\n          value={detail.accountCardNumber || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n        <CopyToClipboard\r\n          onCopy={() => onCopy(\"accountCardNumber\")}\r\n          text={detail.accountCardNumber}\r\n        >\r\n          <i\r\n            className=\"material-icons-round\"\r\n            style={{ marginRight: 20, cursor: \"pointer\" }}\r\n          >\r\n            {copyState === \"accountCardNumber\" ? \"done\" : \"copy\"}\r\n          </i>\r\n        </CopyToClipboard>\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.grid}>\r\n        <TextField\r\n          disabled\r\n          label=\"شماره حساب\"\r\n          value={detail.accountNumber || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n        <CopyToClipboard\r\n          onCopy={() => onCopy(\"accountNumber\")}\r\n          text={detail.accountNumber}\r\n        >\r\n          <i\r\n            className=\"material-icons-round\"\r\n            style={{ marginRight: 20, cursor: \"pointer\" }}\r\n          >\r\n            {copyState === \"accountNumber\" ? \"done\" : \"copy\"}\r\n          </i>\r\n        </CopyToClipboard>\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.grid}>\r\n        <TextField\r\n          disabled\r\n          label=\"شماره شبا\"\r\n          value={detail.accountShaba || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n        <CopyToClipboard\r\n          onCopy={() => onCopy(\"accountShaba\")}\r\n          text={detail.accountShaba}\r\n        >\r\n          <i\r\n            className=\"material-icons-round\"\r\n            style={{ marginRight: 20, cursor: \"pointer\" }}\r\n          >\r\n            {copyState === \"accountShaba\" ? \"done\" : \"copy\"}\r\n          </i>\r\n        </CopyToClipboard>\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          disabled\r\n          label=\"توضیحات\"\r\n          value={detail.description || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n      </Grid>\r\n\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n          بازگشت\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { convertParamsToQueryString, hasPermission } from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport Detail from \"./detail\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    label: \"نام شخص\",\r\n  },\r\n  {\r\n    id: \"type\",\r\n    label: \"نوع\",\r\n  },\r\n  {\r\n    id: \"logo\",\r\n    label: \"بانک\",\r\n  },\r\n  { id: \"cardNumber\", label: \"شماره کارت\" },\r\n  { id: \"action\" },\r\n];\r\nconst PERSON_TYPE = {\r\n  EMPLOYEE: \"پرسنل\",\r\n  CUSTOMER: \"مشتری\",\r\n  DRIVER: \"راننده\",\r\n};\r\n\r\nconst AccountsNumber = () => {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"name\");\r\n  const [search, setSearch] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [person, setPerson] = useState(\"ALL\");\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const getCardRequest = useApi({\r\n    method: \"get\",\r\n    url: `account?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n      personType: person,\r\n    })}`,\r\n  });\r\n\r\n  const onDismissDetail = () => {\r\n    DialogActions.hide({ name: \"personAccount\" });\r\n  };\r\n\r\n  const handleDetail = (row) => {\r\n    DialogActions.show({\r\n      title: `حساب های ${row.personName}`,\r\n      component: <Detail onDismiss={onDismissDetail} detail={row} />,\r\n      name: \"personAccount\",\r\n      size: \"6\",\r\n      confirm: false,\r\n      disableCloseButton: false,\r\n    });\r\n  };\r\n\r\n  const getData = async () => {\r\n    const cardList = await getCardRequest.execute();\r\n    setList(cardList.data);\r\n    setTotal(cardList.total);\r\n  };\r\n\r\n  const onChangeTab = (e, value) => {\r\n    setPerson(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize, person]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.CASH_LIST) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getCardRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title=\"لیست حساب های بانکی\"\r\n                    handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                  />\r\n                  <div className={classes.tab}>\r\n                    <Tabs\r\n                      value={person}\r\n                      onChange={onChangeTab}\r\n                      indicatorColor=\"primary\"\r\n                      textColor=\"primary\"\r\n                      centered\r\n                      variant=\"fullWidth\"\r\n                    >\r\n                      <Tab label=\"کل اشخاص \" value=\"ALL\" />\r\n                      <Tab label=\"مشتریان\" value=\"CUSTOMER\" />\r\n                      <Tab label=\"پرسنل\" value=\"EMPLOYEE\" />\r\n                      <Tab label=\"رانندگان\" value=\"DRIVER\" />\r\n                    </Tabs>\r\n                  </div>\r\n\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                            >\r\n                              <TableCell padding=\"none\">\r\n                                {row.personName}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {PERSON_TYPE[row.personType]}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.bank && (\r\n                                  <img\r\n                                    style={{ width: 30, height: 30 }}\r\n                                    alt={row.bank.name}\r\n                                    src={`${Constant.API_ADDRESS}/${row.bank.logo}`}\r\n                                  />\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.accountCardNumber}\r\n                              </TableCell>\r\n\r\n                              <TableCell padding=\"none\">\r\n                                <i\r\n                                  className=\"material-icons-round\"\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                  onClick={() => handleDetail(row)}\r\n                                >\r\n                                  link\r\n                                </i>\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getCardRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AccountsNumber;\r\n","import React from \"react\";\r\nimport { Grid, TextField, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { persianNumber } from \"../../helpers/utils\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  img: {\r\n    width: 35,\r\n    height: 35,\r\n    borderRadius: 50,\r\n    marginLeft: 20,\r\n  },\r\n  icon: {\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: 50,\r\n    cursor: \"pointer\",\r\n  },\r\n  grid: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nexport default function MainDetail({ data, type, onDismiss }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          disabled\r\n          label={`${data.paymentType === \"INOME\" ? \"دریافت از\" : \"پرداخت به\"}`}\r\n          value={data.name || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          disabled\r\n          label=\"تاریخ\"\r\n          value={\r\n            persianNumber(new Date(data.date).toLocaleDateString(\"fa-IR\")) ||\r\n            \" \"\r\n          }\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          disabled\r\n          label=\"مبلغ\"\r\n          value={persianNumber(data.price) || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n      </Grid>\r\n      {(type === \"BANK\" || type === \"CHEQUE\") && (\r\n        <Grid item xs={12} style={{ display: \"flex\" }}>\r\n          <TextField\r\n            disabled\r\n            label=\"بانک\"\r\n            value={data.detail.bank?.name || \" \"}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            size=\"small\"\r\n          />\r\n          <img\r\n            src={`${Constant.API_ADDRESS}/${data.detail.bank.logo}`}\r\n            alt={data.detail.bank?.logo}\r\n            className={classes.img}\r\n          />\r\n        </Grid>\r\n      )}\r\n      {type === \"BANK\" && (\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            disabled\r\n            label=\"نوع تراکنش\"\r\n            value={data.detail.transactionType || \" \"}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            size=\"small\"\r\n          />\r\n        </Grid>\r\n      )}\r\n      {type === \"BANK\" && (\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            disabled\r\n            label=\"شماره پیگیری\"\r\n            value={persianNumber(data.detail.trackingCode) || \" \"}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            size=\"small\"\r\n          />\r\n        </Grid>\r\n      )}\r\n      {type === \"CHEQUE\" && (\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            disabled\r\n            label=\"شماره چک\"\r\n            value={persianNumber(data.detail.chequeNumber) || \" \"}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            size=\"small\"\r\n          />\r\n        </Grid>\r\n      )}\r\n      {type === \"CHEQUE\" && (\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            disabled\r\n            label=\"تاریخ سررسید\"\r\n            value={\r\n              persianNumber(\r\n                new Date(data.detail.chequeDueDate).toLocaleDateString(\"fa-IR\"),\r\n              ) || \" \"\r\n            }\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            size=\"small\"\r\n          />\r\n        </Grid>\r\n      )}\r\n\r\n      {type === \"CHEQUE\" && (\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            disabled\r\n            label=\"در وجه\"\r\n            value={data.detail.chequePayTo || \" \"}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            size=\"small\"\r\n          />\r\n        </Grid>\r\n      )}\r\n\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          disabled\r\n          label=\"توضیحات\"\r\n          value={data.description || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n      </Grid>\r\n\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n          بازگشت\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport {\r\n  getQueryString,\r\n  convertParamsToQueryString,\r\n  hasPermission,\r\n  persianNumber,\r\n} from \"../../helpers/utils\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport PaymentDetail from \"./paymentDetail\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"date\",\r\n    label: \"تاریخ\",\r\n  },\r\n  {\r\n    id: \"name\",\r\n    label: \"نام شخص\",\r\n  },\r\n  {\r\n    id: \"type\",\r\n    label: \"نوع\",\r\n  },\r\n  {\r\n    id: \"price\",\r\n    label: \"مبلغ\",\r\n  },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nconst types = {\r\n  CASH: \"نقد\",\r\n  CHEQUE: \"چک\",\r\n  BANK: \"بانک\",\r\n};\r\n\r\nconst PaymentReport = () => {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"price\");\r\n  const [search, setSearch] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const cashId = getQueryString(\"cashId\");\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const history = useHistory();\r\n  const [type, setPerson] = useState(\"CASH\");\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n  };\r\n\r\n  const getPaymentByCashRequest = useApi({\r\n    method: \"get\",\r\n    url: `payment/cashdesk?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n      type,\r\n    })}`,\r\n  });\r\n\r\n  const onDismissDetail = () => {\r\n    DialogActions.hide({ name: \"detail\" });\r\n  };\r\n\r\n  const handleDetail = (row) => {\r\n    DialogActions.show({\r\n      title: `${\r\n        row.paymentType === \"INCOME\" ? \"جزییات دریافت\" : \"جزییات پرداخت\"\r\n      } `,\r\n      component: (\r\n        <PaymentDetail onDismiss={onDismissDetail} data={row} type={row.type} />\r\n      ),\r\n      name: \"detail\",\r\n      size: \"6\",\r\n      confirm: false,\r\n      disableCloseButton: false,\r\n    });\r\n  };\r\n\r\n  const getData = async () => {\r\n    const paymentList = await getPaymentByCashRequest.execute(null, cashId);\r\n    setList(paymentList.data);\r\n    setTotal(paymentList.total);\r\n  };\r\n\r\n  const onChangeTab = (e, value) => {\r\n    setPerson(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize, type]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.CASH_LIST) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getPaymentByCashRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title=\"لیست تراکنش های صندوق \"\r\n                    handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                  />\r\n                  <div className={classes.tab}>\r\n                    <Tabs\r\n                      value={type}\r\n                      onChange={onChangeTab}\r\n                      indicatorColor=\"primary\"\r\n                      textColor=\"primary\"\r\n                      centered\r\n                      variant=\"fullWidth\"\r\n                    >\r\n                      <Tab label=\"نقدی\" value=\"CASH\" />\r\n                      <Tab label=\"بانکی\" value=\"BANK\" />\r\n                      <Tab label=\"چک\" value=\"CHEQUE\" />\r\n                    </Tabs>\r\n                  </div>\r\n\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                            >\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  new Date(row.date).toLocaleDateString(\r\n                                    \"fa-IR\",\r\n                                  ),\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\"> {row.name}</TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {types[row.type]}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  Number(row.price).toLocaleString(),\r\n                                )}\r\n                              </TableCell>\r\n\r\n                              <TableCell padding=\"none\">\r\n                                <i\r\n                                  className=\"material-icons-round\"\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                  onClick={() => handleDetail(row)}\r\n                                >\r\n                                  feed\r\n                                </i>\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getPaymentByCashRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaymentReport;\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n}));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Grid, TextField, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport Constant from \"../../helpers/constant\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  img: {\r\n    width: 35,\r\n    height: 35,\r\n    borderRadius: 50,\r\n    marginLeft: 20,\r\n  },\r\n  icon: {\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: 50,\r\n    cursor: \"pointer\",\r\n  },\r\n  grid: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nexport default function MainDetail({ detail, onDismiss }) {\r\n  const classes = useStyles();\r\n  const [copyState, setCopyState] = useState();\r\n\r\n  const onCopy = (copyField) => {\r\n    setCopyState(copyField);\r\n  };\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12} className={classes.grid}>\r\n        <TextField\r\n          disabled\r\n          label=\"بانک\"\r\n          value={detail.bank.name || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n        <img\r\n          src={`${Constant.API_ADDRESS}/${detail.bank.logo}`}\r\n          alt={detail.bank.logo}\r\n          className={classes.img}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.grid}>\r\n        <TextField\r\n          disabled\r\n          label=\"شماره کارت\"\r\n          value={detail.accountCardNumber || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n        <CopyToClipboard\r\n          onCopy={() => onCopy(\"accountCardNumber\")}\r\n          text={detail.accountCardNumber}\r\n        >\r\n          <i\r\n            className=\"material-icons-round\"\r\n            style={{ marginRight: 20, cursor: \"pointer\" }}\r\n          >\r\n            {copyState === \"accountCardNumber\" ? \"done\" : \"copy\"}\r\n          </i>\r\n        </CopyToClipboard>\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.grid}>\r\n        <TextField\r\n          disabled\r\n          label=\"شماره حساب\"\r\n          value={detail.accountNumber || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n        <CopyToClipboard\r\n          onCopy={() => onCopy(\"accountNumber\")}\r\n          text={detail.accountNumber}\r\n        >\r\n          <i\r\n            className=\"material-icons-round\"\r\n            style={{ marginRight: 20, cursor: \"pointer\" }}\r\n          >\r\n            {copyState === \"accountNumber\" ? \"done\" : \"copy\"}\r\n          </i>\r\n        </CopyToClipboard>\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.grid}>\r\n        <TextField\r\n          disabled\r\n          label=\"شماره شبا\"\r\n          value={detail.accountShaba || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n        <CopyToClipboard\r\n          onCopy={() => onCopy(\"accountShaba\")}\r\n          text={detail.accountShaba}\r\n        >\r\n          <i\r\n            className=\"material-icons-round\"\r\n            style={{ marginRight: 20, cursor: \"pointer\" }}\r\n          >\r\n            {copyState === \"accountShaba\" ? \"done\" : \"copy\"}\r\n          </i>\r\n        </CopyToClipboard>\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          disabled\r\n          label=\"توضیحات\"\r\n          value={detail.description || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n      </Grid>\r\n\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n          بازگشت\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport {\r\n  convertParamsToQueryString,\r\n  hasPermission,\r\n  persianNumber,\r\n} from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport Detail from \"./detail\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    label: \"نام شخص\",\r\n  },\r\n  {\r\n    id: \"Date\",\r\n    label: \"تاریخ\",\r\n  },\r\n  {\r\n    id: \"price\",\r\n    label: \"مانده وام\",\r\n  },\r\n  { id: \"personType\", label: \"نوع شخص\" },\r\n  { id: \"action\" },\r\n];\r\nconst PERSON_TYPE = {\r\n  EMPLOYEE: \"پرسنل\",\r\n  CUSTOMER: \"مشتری\",\r\n  DRIVER: \"راننده\",\r\n};\r\n\r\nconst MainList = () => {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"date\");\r\n  const [search, setSearch] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const history = useHistory();\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onAdd = () => {\r\n    history.push(`/app/payment-detail?type=OUTCOME&loan=true`);\r\n  };\r\n\r\n  const getLoanRequest = useApi({\r\n    method: \"get\",\r\n    url: `loan?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n    })}`,\r\n  });\r\n\r\n  const onDismissDetail = () => {\r\n    DialogActions.hide({ name: \"detail\" });\r\n  };\r\n\r\n  const handleDetail = (row) => {\r\n    // DialogActions.show({\r\n    //   title: `حساب های ${row.personName}`,\r\n    //   component: <Detail onDismiss={onDismissDetail} detail={row} />,\r\n    // name:\"detail\",\r\n    //   size: \"6\",\r\n    //   confirm: false,\r\n    //   disableCloseButton: false,\r\n    // });\r\n  };\r\n\r\n  const getData = async () => {\r\n    const cardList = await getLoanRequest.execute();\r\n    setList(cardList.data);\r\n    setTotal(cardList.total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.CASH_LIST) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getLoanRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title=\"لیست وام ها\"\r\n                    onAdd={onAdd}\r\n                    handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                  />\r\n\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                            >\r\n                              <TableCell padding=\"none\">\r\n                                {row.personName}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  new Date(row.date).toLocaleDateString(\r\n                                    \"fa-IR\",\r\n                                  ),\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  Number(row.price).toLocaleString(),\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {PERSON_TYPE[row.personType]}\r\n                              </TableCell>\r\n\r\n                              <TableCell padding=\"none\">\r\n                                <i\r\n                                  className=\"material-icons-round\"\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                  onClick={() => handleDetail(row)}\r\n                                >\r\n                                  link\r\n                                </i>\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getLoanRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainList;\r\n","import React, { useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\n\r\nimport useStyles from \"./styles\";\r\nimport Header from \"../Header/Header\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport Dashboard from \"../../pages/dashboard/Dashboard\";\r\nimport UserList from \"../../pages/users\";\r\nimport UserDetail from \"../../pages/users/detail\";\r\nimport CustomerList from \"../../pages/customers\";\r\nimport CustomerDetail from \"../../pages/customers/detail\";\r\nimport CustomerTransaction from \"../../pages/customers/transaction\";\r\nimport EmployeeList from \"../../pages/employee\";\r\nimport EmployeeDetail from \"../../pages/employee/detail\";\r\nimport InvoiceList from \"../../pages/invoice\";\r\nimport InvoiceDetail from \"../../pages/invoice/detail\";\r\nimport FastInvoice from \"../../pages/invoice/fastInvoice\";\r\nimport ChequeList from \"../../pages/cheque\";\r\nimport ChequeDetail from \"../../pages/cheque/detail\";\r\nimport PaymentList from \"../../pages/payment\";\r\nimport PaymentDetail from \"../../pages/payment/detail\";\r\nimport ProductList from \"../../pages/product\";\r\nimport ProductDetail from \"../../pages/product/detail\";\r\nimport DepotList from \"../../pages/depot\";\r\nimport DepotDetail from \"../../pages/depot/detail\";\r\nimport CashList from \"../../pages/cash\";\r\nimport CashDetail from \"../../pages/cash/detail\";\r\nimport DriverList from \"../../pages/driver\";\r\nimport DriverDetail from \"../../pages/driver/detail\";\r\nimport Setting from \"../../pages/setting\";\r\nimport Category from \"../../pages/category\";\r\nimport Traffic from \"../../pages/traffic\";\r\nimport TrafficDetail from \"../../pages/traffic/register\";\r\nimport { useLayoutState } from \"../../context/LayoutContext\";\r\nimport EmployeeLog from \"../../pages/employee/log\";\r\nimport AccountsNumber from \"../../pages/accountNumber/list\";\r\nimport CashPaymentReport from \"../../pages/cash/paymentReport\";\r\nimport LoanList from \"../../pages/loan\";\r\nimport LoanDetail from \"../../pages/loan/detail\";\r\nimport ProductTransfer from \"../../pages/product/transfer\";\r\n\r\nfunction Layout(props) {\r\n  var classes = useStyles();\r\n\r\n  var layoutState = useLayoutState();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <>\r\n        <Header history={props.history} />\r\n        <Sidebar />\r\n        <div\r\n          className={classnames(classes.content, {\r\n            [classes.contentShift]: layoutState.isSidebarOpened,\r\n          })}\r\n        >\r\n          <div className={classes.fakeToolbar} />\r\n          <Switch>\r\n            <Route path=\"/app/dashboard\" component={Dashboard} />\r\n\r\n            <Route path=\"/app/user-list\" component={UserList} />\r\n            <Route path=\"/app/user-detail\" component={UserDetail} />\r\n\r\n            <Route path=\"/app/customer-list\" component={CustomerList} />\r\n            <Route path=\"/app/customer-detail\" component={CustomerDetail} />\r\n            <Route\r\n              path=\"/app/person-transaction\"\r\n              component={CustomerTransaction}\r\n            />\r\n\r\n            <Route path=\"/app/employee-list\" component={EmployeeList} />\r\n            <Route path=\"/app/employee-detail\" component={EmployeeDetail} />\r\n            <Route path=\"/app/employee-log\" component={EmployeeLog} />\r\n\r\n            <Route path=\"/app/driver-list\" component={DriverList} />\r\n            <Route path=\"/app/driver-detail\" component={DriverDetail} />\r\n\r\n            <Route path=\"/app/cash-list\" component={CashList} />\r\n            <Route path=\"/app/cash-detail\" component={CashDetail} />\r\n            <Route path=\"/app/cash-transaction\" component={CashPaymentReport} />\r\n\r\n            <Route path=\"/app/cheque-list\" component={ChequeList} />\r\n            <Route path=\"/app/cheque-detail\" component={ChequeDetail} />\r\n\r\n            <Route path=\"/app/cheque-list\" component={ChequeList} />\r\n            <Route path=\"/app/cheque-detail\" component={ChequeDetail} />\r\n\r\n            <Route path=\"/app/loan-list\" component={LoanList} />\r\n            <Route path=\"/app/loan-detail\" component={LoanDetail} />\r\n\r\n            <Route path=\"/app/invoice-list\" component={InvoiceList} />\r\n            <Route path=\"/app/invoice-detail\" component={InvoiceDetail} />\r\n            <Route path=\"/app/fast_invoice\" component={FastInvoice} />\r\n\r\n            <Route path=\"/app/payment-list\" component={PaymentList} />\r\n            <Route path=\"/app/payment-detail\" component={PaymentDetail} />\r\n\r\n            <Route path=\"/app/product-list\" component={ProductList} />\r\n            <Route path=\"/app/product-detail\" component={ProductDetail} />\r\n            <Route path=\"/app/product-transfer\" component={ProductTransfer} />\r\n\r\n            <Route path=\"/app/depot-list\" component={DepotList} />\r\n            <Route path=\"/app/depot-detail\" component={DepotDetail} />\r\n\r\n            <Route path=\"/app/setting\" component={Setting} />\r\n            <Route path=\"/app/category\" component={Category} />\r\n\r\n            <Route path=\"/app/traffic\" component={Traffic} />\r\n            <Route path=\"/app/traffic-detail\" component={TrafficDetail} />\r\n            <Route path=\"/app/accountNumber\" component={AccountsNumber} />\r\n          </Switch>\r\n        </div>\r\n      </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles(theme => ({\r\n  container: {\r\n    height: \"100vh\",\r\n    width: \"100vw\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: theme.palette.primary.main,\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n  },\r\n  logotype: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginBottom: theme.spacing(12),\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  logotypeText: {\r\n    fontWeight: 500,\r\n    color: \"white\",\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  logotypeIcon: {\r\n    width: 70,\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  paperRoot: {\r\n    boxShadow: theme.customShadows.widgetDark,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n    paddingLeft: theme.spacing(6),\r\n    paddingRight: theme.spacing(6),\r\n    maxWidth: 404,\r\n  },\r\n  textRow: {\r\n    marginBottom: theme.spacing(10),\r\n    textAlign: \"center\",\r\n  },\r\n  errorCode: {\r\n    fontSize: 148,\r\n    fontWeight: 600,\r\n  },\r\n  safetyText: {\r\n    fontWeight: 300,\r\n    color: theme.palette.text.hint,\r\n  },\r\n  backButton: {\r\n    boxShadow: theme.customShadows.widget,\r\n    textTransform: \"none\",\r\n    fontSize: 22,\r\n  },\r\n}));\r\n","export default __webpack_public_path__ + \"static/media/logo.d0e27845.svg\";","import React from \"react\";\r\nimport { Grid, Paper, Typography, Button } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// logo\r\nimport logo from \"./logo.svg\";\r\n\r\nexport default function Error() {\r\n  var classes = useStyles();\r\n\r\n  return (\r\n    <Grid container className={classes.container}>\r\n      <div className={classes.logotype}>\r\n        <img className={classes.logotypeIcon} src={logo} alt=\"logo\" />\r\n        <Typography variant=\"h3\" color=\"white\" className={classes.logotypeText}>\r\n          Material Admin\r\n        </Typography>\r\n      </div>\r\n      <Paper classes={{ root: classes.paperRoot }}>\r\n        <Typography\r\n          variant=\"h1\"\r\n          color=\"primary\"\r\n          className={classnames(classes.textRow, classes.errorCode)}\r\n        >\r\n          404\r\n        </Typography>\r\n        <Typography variant=\"h5\" color=\"primary\" className={classes.textRow}>\r\n          Oops. Looks like the page you're looking for no longer exists\r\n        </Typography>\r\n        <Typography\r\n          variant=\"h6\"\r\n          color=\"text\"\r\n          colorBrightness=\"secondary\"\r\n          className={classnames(classes.textRow, classes.safetyText)}\r\n        >\r\n          But we're here to bring you back to safety\r\n        </Typography>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          component={Link}\r\n          to=\"/\"\r\n          size=\"large\"\r\n          className={classes.backButton}\r\n        >\r\n          Back to Home\r\n        </Button>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  container: {\r\n    height: \"100vh\",\r\n    width: \"100vw\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    overflow: \"hidden\",\r\n  },\r\n  title: {\r\n    display: \"flex\",\r\n    alignItems: \"baseLine\",\r\n    marginBottom: 30,\r\n    \"& h4\": {\r\n      margin: \"0 10px\",\r\n    },\r\n    \"& hr\": {\r\n      flex: 1,\r\n    },\r\n  },\r\n  backgroundImage: {\r\n    position: \"absolute\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    filter: \"brightness(0.5)\",\r\n  },\r\n  logotypeContainer: {\r\n    position: \"relative\",\r\n    width: \"70%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: \"50%\",\r\n    },\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  logotypeImage: {\r\n    width: 165,\r\n    marginBottom: theme.spacing(4),\r\n    position: \"relative\",\r\n  },\r\n  logotypeText: {\r\n    position: \"relative\",\r\n    color: \"white\",\r\n    fontWeight: 500,\r\n    fontSize: 84,\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      fontSize: 48,\r\n    },\r\n  },\r\n  formContainer: {\r\n    width: \"30%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: \"50%\",\r\n    },\r\n  },\r\n  form: {\r\n    width: 320,\r\n  },\r\n  tab: {\r\n    fontWeight: 400,\r\n    fontSize: 18,\r\n  },\r\n  greeting: {\r\n    fontWeight: 500,\r\n    textAlign: \"center\",\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  subGreeting: {\r\n    fontWeight: 500,\r\n    textAlign: \"center\",\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  googleButton: {\r\n    marginTop: theme.spacing(6),\r\n    boxShadow: theme.customShadows.widget,\r\n    backgroundColor: \"white\",\r\n    width: \"100%\",\r\n    textTransform: \"none\",\r\n  },\r\n  googleButtonCreating: {\r\n    marginTop: 0,\r\n  },\r\n  googleIcon: {\r\n    width: 30,\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  creatingButtonContainer: {\r\n    marginTop: theme.spacing(2.5),\r\n    height: 46,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  createAccountButton: {\r\n    height: 46,\r\n    textTransform: \"none\",\r\n  },\r\n  formDividerContainer: {\r\n    marginTop: theme.spacing(4),\r\n    marginBottom: theme.spacing(4),\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  formDividerWord: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  formDivider: {\r\n    flexGrow: 1,\r\n    height: 1,\r\n    backgroundColor: theme.palette.text.hint + \"40\",\r\n  },\r\n  errorMessage: {\r\n    textAlign: \"center\",\r\n  },\r\n  textFieldUnderline: {\r\n    \"&:before\": {\r\n      borderBottomColor: theme.palette.primary.light,\r\n    },\r\n    \"&:after\": {\r\n      borderBottomColor: theme.palette.primary.main,\r\n    },\r\n    \"&:hover:before\": {\r\n      borderBottomColor: `${theme.palette.primary.light} !important`,\r\n    },\r\n  },\r\n  textField: {\r\n    borderBottomColor: theme.palette.background.light,\r\n  },\r\n  formButtons: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(4),\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  forgetButton: {\r\n    textTransform: \"none\",\r\n    fontWeight: 400,\r\n  },\r\n  loginLoader: {\r\n    marginLeft: theme.spacing(4),\r\n  },\r\n  copyright: {\r\n    marginTop: theme.spacing(4),\r\n    whiteSpace: \"nowrap\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      position: \"absolute\",\r\n      bottom: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n","export default __webpack_public_path__ + \"static/media/logo.d0e27845.svg\";","export default __webpack_public_path__ + \"static/media/111.788f87ef.jpg\";","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  CircularProgress,\r\n  Typography,\r\n  Button,\r\n  TextField,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport useStyles from \"./styles\";\r\nimport logo from \"./logo.svg\";\r\nimport back from \"./111.jpg\";\r\nimport { useUserDispatch, loginUser } from \"../../context/UserContext\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport unitAcion from \"../../redux/actions/unitAction\";\r\n\r\nfunction Login(props) {\r\n  const classes = useStyles();\r\n  const userDispatch = useUserDispatch();\r\n  const loginRequest = useApi({\r\n    method: \"post\",\r\n    url: \"auth/login\",\r\n  });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const [usernameValue, setUsernameValue] = useState(\"\");\r\n  const [passwordValue, setPasswordValue] = useState(\"\");\r\n\r\n  const onPressEnter = function (event) {\r\n    if (event.which === 13 && passwordValue && usernameValue) {\r\n      loginUser(\r\n        loginRequest,\r\n        userDispatch,\r\n        usernameValue,\r\n        passwordValue,\r\n        props.history,\r\n        setIsLoading,\r\n        setError,\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    unitAcion.setProdcutUnit();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container className={classes.container}>\r\n      <div className={classes.logotypeContainer}>\r\n        <img src={back} alt=\"logo\" className={classes.backgroundImage} />\r\n        <img src={logo} alt=\"logo\" className={classes.logotypeImage} />\r\n        <Typography className={classes.logotypeText}>\r\n          سیستم یکپارچه مدیریت\r\n        </Typography>\r\n      </div>\r\n      <div className={classes.formContainer}>\r\n        <div className={classes.form}>\r\n          <React.Fragment>\r\n            <div className={classes.title}>\r\n              <Divider />\r\n              <Typography variant=\"h4\" className={classes.greeting}>\r\n                ورود به سیستم\r\n              </Typography>\r\n              <Divider />\r\n            </div>\r\n\r\n            <TextField\r\n              label=\"نام کاربری\"\r\n              variant=\"outlined\"\r\n              id=\"username\"\r\n              InputProps={{\r\n                classes: {\r\n                  input: classes.textField,\r\n                },\r\n              }}\r\n              value={usernameValue}\r\n              onChange={(e) => setUsernameValue(e.target.value)}\r\n              margin=\"normal\"\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              label=\"رمز عبور \"\r\n              variant=\"outlined\"\r\n              id=\"password\"\r\n              InputProps={{\r\n                classes: {\r\n                  input: classes.textField,\r\n                },\r\n              }}\r\n              value={passwordValue}\r\n              onChange={(e) => setPasswordValue(e.target.value)}\r\n              margin=\"normal\"\r\n              type=\"password\"\r\n              fullWidth\r\n              onKeyPress={onPressEnter}\r\n            />\r\n            <div className={classes.formButtons}>\r\n              {isLoading ? (\r\n                <CircularProgress size={26} className={classes.loginLoader} />\r\n              ) : (\r\n                <Button\r\n                  fullWidth\r\n                  disabled={\r\n                    usernameValue.length === 0 || passwordValue.length === 0\r\n                  }\r\n                  onClick={() =>\r\n                    loginUser(\r\n                      loginRequest,\r\n                      userDispatch,\r\n                      usernameValue,\r\n                      passwordValue,\r\n                      props.history,\r\n                      setIsLoading,\r\n                      setError,\r\n                    )\r\n                  }\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  size=\"large\"\r\n                >\r\n                  ورود به سیستم\r\n                </Button>\r\n              )}\r\n              {/* <Button\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                className={classes.forgetButton}\r\n              >\r\n                بازیابی رمز عبور\r\n              </Button> */}\r\n            </div>\r\n          </React.Fragment>\r\n        </div>\r\n        <Typography\r\n          color=\"primary\"\r\n          className={classes.copyright}\r\n          variant=\"caption\"\r\n        >\r\n          تمامی حقوق مادی و معنوی این اثر متعلق به شرکت المان می باشد\r\n        </Typography>\r\n      </div>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default withRouter(Login);\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  HashRouter,\r\n} from \"react-router-dom\";\r\n\r\nimport Layout from \"./Layout\";\r\nimport Error from \"../pages/error\";\r\nimport Login from \"../pages/login\";\r\nimport { useUserState } from \"../context/UserContext\";\r\nexport default function App() {\r\n  var { isAuthenticated } = useUserState();\r\n\r\n  return (\r\n    <HashRouter>\r\n      <Switch>\r\n        <Route exact path=\"/\" render={() => <Redirect to=\"/app/dashboard\" />} />\r\n        <Route\r\n          exact\r\n          path=\"/app\"\r\n          render={() => <Redirect to=\"/app/dashboard\" />}\r\n        />\r\n\r\n        <PrivateRoute path=\"/app\" component={Layout} />\r\n        <PublicRoute path=\"/login\" component={Login} />\r\n        <Route component={Error} />\r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n\r\n  // #######################################################################\r\n\r\n  function PrivateRoute({ component, ...rest }) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={(props) =>\r\n          isAuthenticated ? (\r\n            React.createElement(component, props)\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: {\r\n                  from: props.location,\r\n                },\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  function PublicRoute({ component, ...rest }) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={(props) =>\r\n          isAuthenticated ? (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/\",\r\n              }}\r\n            />\r\n          ) : (\r\n            React.createElement(component, props)\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { create } from \"jss\";\r\nimport rtl from \"jss-rtl\";\r\nimport { StylesProvider, jssPreset } from \"@material-ui/core/styles\";\r\n\r\n// Configure JSS\r\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\r\n\r\nfunction RTL(props) {\r\n  return <StylesProvider jss={jss}>{props.children}</StylesProvider>;\r\n}\r\n\r\nexport default RTL;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./assets/css/font.css\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport { CssBaseline } from \"@material-ui/core\";\r\nimport { Provider } from \"react-redux\";\r\nimport Alert from \"./components/Alert\";\r\nimport Dialog from \"./components/Modal\";\r\nimport Themes from \"./themes\";\r\nimport App from \"./components/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { LayoutProvider } from \"./context/LayoutContext\";\r\nimport { UserProvider } from \"./context/UserContext\";\r\nimport store from \"./redux/store\";\r\nimport RTLProvider from \"./themes/RTL\";\r\nimport jMoment from \"moment-jalaali\";\r\nimport JalaliUtils from \"@date-io/jalaali\";\r\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\n\r\njMoment.loadPersian({ dialect: \"persian-modern\", usePersianDigits: true });\r\n\r\nReactDOM.render(\r\n  <MuiPickersUtilsProvider utils={JalaliUtils} locale=\"fa\">\r\n    <Provider store={store}>\r\n      <LayoutProvider>\r\n        <UserProvider>\r\n          <ThemeProvider theme={Themes.default}>\r\n            <RTLProvider>\r\n              <CssBaseline />\r\n              <App />\r\n              <Alert />\r\n              <Dialog />\r\n            </RTLProvider>\r\n          </ThemeProvider>\r\n        </UserProvider>\r\n      </LayoutProvider>\r\n    </Provider>\r\n  </MuiPickersUtilsProvider>,\r\n  document.getElementById(\"root\"),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}