{"version":3,"sources":["helpers/constant.js","redux/reducers/AlertReducer.js","redux/reducers/dialogReducer.js","services/storage.js","redux/reducers/unitReducer.js","redux/reducers/index.js","redux/store/index.js","redux/actions/AlertAction.js","components/Alert/index.jsx","redux/actions/dialogAction.jsx","components/Modal/Modal.Style.js","components/Modal/index.jsx","themes/default.js","themes/index.js","components/Layout/styles.js","components/Header/styles.js","components/Wrappers/Wrappers.js","context/LayoutContext.js","context/UserContext.js","configs/axios.js","hooks/useApi.js","helpers/utils.js","components/Header/ChangePassword.js","components/Header/Header.js","components/Sidebar/styles.js","components/Sidebar/components/SidebarLink/styles.js","components/Sidebar/components/Dot.js","components/Sidebar/components/SidebarLink/SidebarLink.js","components/Sidebar/Sidebar.js","pages/dashboard/styles.js","components/Widget/styles.js","components/Widget/Widget.js","components/Paper/index.js","pages/dashboard/Dashboard.js","components/Table/TableRowMenu.js","components/Table/TableTop.js","components/Table/TableHead.js","components/Table/TablePaging.js","pages/users/style.js","components/Skeleton/index.js","pages/users/list.js","components/CircularProgress/index.js","pages/users/permission.js","pages/users/detail.js","pages/customers/style.js","pages/customers/filter.js","pages/customers/list.js","components/icons/index.js","pages/customers/account.js","pages/customers/detail.js","pages/customers/transaction.js","pages/employee/style.js","pages/employee/filter.js","pages/employee/list.js","pages/employee/account.js","pages/employee/detail.js","pages/invoice/style.js","pages/invoice/filter.js","pages/invoice/list.js","pages/payment/style.js","pages/payment/personSelector.js","pages/payment/paymnet.js","pages/payment/prePayment.js","pages/invoice/driverPayment.js","pages/invoice/driver.js","redux/actions/unitAction.js","pages/invoice/product.js","pages/invoice/detail.js","pages/invoice/productFastInvoice.js","pages/invoice/fastInvoice.js","pages/cheque/style.js","pages/cheque/cashSelector.js","pages/cheque/spendCheque.js","pages/cheque/list.js","pages/cheque/detail.js","pages/payment/filter.js","pages/payment/list.js","pages/payment/detail.js","pages/product/style.js","pages/product/amountBrif.js","pages/product/transfer.js","pages/product/filter.js","pages/product/list.js","pages/product/amount.js","pages/product/detail.js","pages/depot/style.js","pages/depot/amountBrif.js","pages/depot/list.js","pages/depot/detail.js","pages/cash/style.js","pages/cash/transfer.js","pages/cash/list.js","pages/cash/detail.js","pages/driver/style.js","pages/driver/filter.js","pages/driver/list.js","pages/driver/account.js","pages/driver/detail.js","pages/setting/style.js","pages/setting/list.js","pages/category/style.js","pages/category/detail.js","pages/category/index.js","pages/traffic/register.js","pages/employee/logFilter.js","pages/employee/log.js","pages/accountNumber/style.js","pages/accountNumber/detail.js","pages/accountNumber/list.js","pages/cash/paymentDetail.js","pages/cash/paymentReport.js","pages/loan/style.js","pages/loan/detail.js","pages/loan/list.js","components/Layout/index.js","pages/error/styles.js","pages/error/logo.svg","pages/error/Error.js","pages/login/styles.js","pages/login/logo.svg","pages/login/111.jpg","pages/login/Login.js","components/App.js","serviceWorker.js","themes/RTL.js","index.js"],"names":["Constant","API_ADDRESS","TABLE_PAGE_SIZE","EMPLOYEE_CONTACRT","value","label","TRAFFIC_STATUS","PRESENT","APSET","UNITS_MAP","KILOGRAM","GRAM","TON","BOX","SHEL","CUBICMETERS","PALLET","ACTION_TYPES","SHOW_ALERT","HIDE_ALERT","SHOW_DIALOG","HIDE_DIALOG","LOG_IN_USER","LOG_OUT_USER","GET_UNITS","PERSON_TYPE","EMPLOYEE","CUSTOMER","USER","DRIVER","PERSON","STORAGE","CURRENT_USER","TOKEN","MODE","CURRENT_LINK","PRODUCT_UNITS","VALIDATION","REQUIRED","MOBILE_NUMBER","PASSWORD","CARD_NUMBER","POSITIVE_NUMBER","MESSAGES","ERROR_MESSAGE","BAD_CREDENTIAL","ACCESS_DENIED","PERSON_STATUS","DEBTOR","NODEBT","CREDITOR","PAYMENT_TYPE","INCOME","OUTCOME","ALL","INVOICE_TYPE","SELL","BUY","ALL_PERMISSIONS","ATTENDANCE_SHOW","ATTENDANCE_EDIT","ATTENDANCE_ADMIN","USER_SHOW","USER_EDIT","USER_DELETE","CUSTOMER_SHOW","CUSTOMER_EDIT","CUSTOMER_DELETE","DRIVER_SHOW","DRIVER_EDIT","DRIVER_DELETE","EMPLOYEE_SHOW","EMPLOYEE_EDIT","EMPLOYEE_DELETE","PRODUCT_SHOW","PRODUCT_EDIT","PRODUCT_DELETE","DEPOT_SHOW","DEPOT_EDIT","DEPOT_DELETE","ACCOUNT_SHOW","ACCOUNT_EDIT","ACCOUNT_DELETE","PAYMENT_SHOW","PAYMENT_EDIT","INVOICE_SHOW","INVOICE_EDIT","CASH_DESK_SHOW","CASH_DESK_EDIT","CASH_DESK_DELETE","CHEQUE_SHOW","CHEQUE_EDIT","CHEQUE_DELETE","PERMISSIONS","BANK_TRANSACTION_TYPE","initialState","show","text","component","title","size","disableCloseButton","confirm","names","onAction","Storage","setItem","key","data","JSON","stringify","localStorage","getItem","parse","removeItem","unitReducer","state","action","type","payload","appReducer","combineReducers","alert","option","dialog","filter","item","name","unit","rootReducer","store","createStore","applyMiddleware","thunk","dispatch","Alert","useSelector","handleClose","event","reason","AlertAction","Snackbar","open","autoHideDuration","onClose","elevation","variant","severity","styles","makeStyles","theme","container","padding","overflowX","display","justifyContent","alignItems","borderBottom","palette","grey","light","Modal","classes","className","overlay","map","Grow","in","Grid","xs","sm","Number","style","boxShadow","borderRadius","position","zIndex","top","backgroundColor","left","transform","Typography","Button","color","onClick","dialogAction","primary","secondary","warning","success","info","gray","defaultTheme","direction","main","dark","contrastText","danger","hint","background","default","customShadows","widget","widgetDark","widgetWide","overrides","MuiBackdrop","root","MuiMenu","paper","MuiSelect","icon","MuiListItem","button","MuiTouchRipple","child","MuiTableRow","height","MuiTableCell","paddingLeft","head","fontSize","body","PrivateSwitchBase","marginLeft","themes","createMuiTheme","typography","fontFamily","h1","h2","h3","h4","h5","h6","maxWidth","content","flexGrow","spacing","width","minHeight","contentShift","transition","transitions","create","easing","sharp","duration","enteringScreen","fakeToolbar","mixins","toolbar","link","logotype","marginRight","fontWeight","whiteSpace","breakpoints","down","appBar","drawer","leavingScreen","paddingRight","hide","grow","search","fade","common","black","cursor","searchFocused","up","searchIcon","right","searchIconOpened","inputRoot","inputInput","messageContent","flexDirection","headerMenu","marginTop","headerMenuList","headerMenuItem","headerMenuButton","headerMenuButtonSandwich","headerMenuButtonCollapse","headerIcon","headerIconCollapse","profileMenu","minWidth","profileMenuUser","profileMenuItem","profileMenuIcon","profileMenuLink","textDecoration","messageNotification","messageNotificationSide","messageNotificationBodySide","sendMessageButton","margin","marginBottom","textTransform","sendButtonIcon","purchaseBtn","chip","allIcon","incomeIcon","useStyles","badge","Badge","children","colorBrightness","props","Styled","createStyled","getColor","useTheme","styledProps","classnames","weight","getFontWeight","getFontSize","brigtness","multiplier","defaultSize","options","withStyles","LayoutStateContext","React","createContext","LayoutDispatchContext","layoutReducer","isSidebarOpened","Error","LayoutProvider","useReducer","Provider","useLayoutState","context","useContext","undefined","useLayoutDispatch","toggleSidebar","UserStateContext","UserDispatchContext","userReducer","isAuthenticated","currentUser","UserProvider","useUserState","useUserDispatch","loginUser","loginRequest","username","password","history","setIsLoading","setError","a","execute","result","storageService","token","push","http","axios","baseURL","constants","headers","interceptors","response","use","config","method","url","error","code","message","Promise","reject","getProperUrl","urlParams","substring","indexOf","length","useApi","args","useState","pending","setPending","setResult","includes","convertParamsToQueryString","params","URLSearchParams","pickBy","identity","toString","getQueryString","param","URL","window","location","href","replace","searchParams","get","getRandomColorFromTheme","colors","Math","floor","random","getRandomNumber","min","max","persianNumber","en","number","t","substr","hasPermission","permit","FREE","permissions","MainDetail","onSubmit","onDismiss","useForm","control","handleSubmit","errors","reset","isPassword","setIsPassword","passwordRef","useRef","changePasswordRequest","onChangeViewClick","id","oldPassword","prePassword","newPassword","render","onChange","TextField","helperText","fullWidth","rules","required","minLength","inputRef","InputProps","endAdornment","InputAdornment","clsx","repassword","validate","current","Header","date","useHistory","layoutState","layoutDispatch","userDispatch","useLocation","mailMenu","setMailMenu","setProfileMenu","cheques","setCheques","getDashboardRequest","getChequeNotify","notify","onSubmitChangePassword","onDismissChangePassword","useEffect","AppBar","Toolbar","IconButton","classNames","ArrowForward","Date","getDay","toLocaleDateString","format","ticking","timezone","e","currentTarget","badgeContent","Menu","Boolean","anchorEl","MenuListProps","disableAutoFocusItem","Divider","MenuItem","chequeDueDate","person","price","Chip","ChangePassword","signOut","menuButton","flexShrink","drawerOpen","drawerClose","mobileBackButton","only","externalLink","linkActive","linkNested","linkIcon","linkIconActive","linkText","linkTextActive","linkTextHidden","opacity","nestedList","sectionTitle","divider","dotBase","dotSmall","dotLarge","Dot","SidebarLink","nested","permission","isOpen","setIsOpen","isLinkActive","pathname","ListItem","linkRoot","disableRipple","ListItemIcon","ListItemText","Link","preventDefault","to","Inbox","Collapse","timeout","unmountOnExit","List","disablePadding","childrenLink","innerWidth","values","md","structure","Constants","withRouter","isPermanent","setPermanent","addEventListener","handleWindowWidthChange","removeEventListener","Drawer","sidebarList","isSmallScreen","datePicker","paperTitle","card","visitsNumberContainer","paddingBottom","progressSection","progressTitle","progress","pieChartLegendWrapper","legendItemContainer","fullHeightBody","tableWidget","progressBarPrimary","progressBarSecondary","performanceLegendWrapper","legendElement","legendElementText","serverOverviewElement","serverOverviewElementText","serverOverviewElementChartWrapper","mainChartBody","mainChartHeader","flexWrap","mainChartHeaderLabels","order","mainChartHeaderLabel","mainChartSelectRoot","borderColor","mainChartSelect","mainChartLegentElement","widgetWrapper","widgetHeader","widgetRoot","widgetBody","noPadding","overflow","moreButton","noWidgetShadow","Widget","noBodyPadding","bodyClass","header","disableWidgetMenu","noHeaderPadding","headerClass","moreButtonRef","isMoreMenuOpen","setMoreMenuOpen","Paper","Fragment","noWrap","bottom","SimplePaper","RADIAN","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","radius","index","x","cos","y","sin","fill","textAnchor","dominantBaseline","toFixed","empoyeeTrafficChart","subject","A","trafficDayliChart","Dashboard","pieChart","setPieChart","paymentChart","setPaymentChart","factorChart","setFactorChart","showFilterBoxPayment","setShowFilterBoxPayment","showFilterBoxFactor","setShowFilterBoxFactor","moment","selectedFromDateFactor","handleFromDateChangeFactor","selectedToDateFactor","handleToDateChangeFactor","selectedFromDatePayment","handleFromDateChangePayment","selectedToDatePayment","handleToDateChangePayment","getPaymentRequest","_d","toISOString","getFactorRequest","onClickPaper","onChnageDateFactor","onChnageDatePayment","getPieChartData","dashboardChart","cashDesks","newCashDesks","getPaymentChart","chart","payments","getFactorChart","invoices","lg","PieChart","Pie","startAngle","endAngle","paddingAngle","dataKey","entry","Cell","upperTitle","ResponsiveContainer","RadarChart","PolarGrid","PolarAngleAxis","PolarRadiusAxis","Radar","stroke","fillOpacity","labelLine","amount","DatePicker","autoOk","inputVariant","okLabel","cancelLabel","labelFunc","class","LineChart","CartesianGrid","strokeDasharray","XAxis","YAxis","Line","activeDot","r","BarChart","Bar","TableRowMenu","hadleAction","setAnchorEl","keepMounted","PaperProps","maxHeight","ITEM_HEIGHT","hidden","useToolbarStyles","highlight","lighten","box","TableTop","onAdd","FilterComponent","handleSearch","toolbarClass","addButtonClass","minimal","defaultSearch","showSearchText","setShowSearchText","showFilterBox","setShowFilterBox","searchText","setSearchText","target","onKeyDown","Tooltip","TableHeader","orderBy","onRequestSort","headCells","TableHead","TableRow","headCell","TableCell","textAlign","sortDirection","TableSortLabel","active","property","TablePaging","handleChangePage","count","handleChangeRowsPerPage","page","rowsPerPage","TablePagination","rowsPerPageOptions","onChangePage","onChangeRowsPerPage","labelRowsPerPage","backIconButtonText","nextIconButtonText","labelDisplayedRows","from","table","CustomSkeleton","headCount","Skeleton","MainList","setOrder","setOrderBy","setSearch","setPage","pageSize","setPageSize","list","setList","total","setTotal","getUserRequest","deleteUseRequest","getData","userList","Slide","TableContainer","Table","rowCount","TableBody","row","isAdmin","hover","tabIndex","firstName","lastName","mobile","phone","types","edit","delete","DialogActions","handleAction","colSpan","newPage","parseInt","Circular","flex","heght","CircularProgress","Permission","defaultPermissions","userAccess","setUserAccess","overflowY","FormControlLabel","Checkbox","checked","i","handleChange","array","detail","setDetail","addUserRequest","editUserRequest","detailUserRequest","onSubmitPermission","onDismissPermission","getDetail","onShowPermissionDialog","maxLength","address","status","rootSelect","personType","DEBTIOR","Filter","onFilter","filterData","setFilterData","prop","select","setFilter","getCustomerRequest","decodeURIComponent","customerList","properData","addPermission","accountRemaining","transaction","DeleteIcon","EditIcon","Account","defaultValues","banks","setBanks","bank","selectedBank","setSelectedBank","getBankRequest","getBanks","SelectProps","src","logo","alt","accountCardNumber","accountNumber","accountShaba","multiline","rows","description","newId","uuid","find","isUpdate","accounts","setAccounts","category","setCategory","customerCategory","setCustomerCategory","addCustomerRequest","editCustomerRequest","detailCustomerRequest","customerCategoryRequest","deleteAccountRequest","newAccounts","newData","bankId","allData","setTimeout","onReject","getCustomerCategory","onSubmitAccount","findIndex","accounstTmp","onDismissAccount","onShowDialog","handleDeleteAccount","customerId","PAYMENT_LIST","getTableTitle","toLocaleString","salary","salaryPaperLeft","salaryPaperRight","tab","ABSET","CONTERACT_TYPE","DEPOT","FACTORY","setType","getEmployeeRequest","employeeList","Tabs","indicatorColor","textColor","centered","Tab","contractType","traffic","paddingTop","selectedGender","setSelectedGender","selectedContract","setSelectedContract","addEmployeeRequest","editEmployeeRequest","detailEmployeeRequest","gender","RadioGroup","Radio","outgoIcon","selectedButton","selectedPerson","setSelectedPerson","selectedFromDate","handleFromDateChange","selectedToDate","handleToDateChange","customers","setCustomers","getCustomersRequest","onChnageDate","getCustomers","Autocomplete","getOptionLabel","renderInput","invoiceType","getInvoiceRequest","invoiceList","globalCustomer","customer","headCellsCustomer","headCellsPerson","onSelect","Payment","paymentType","handleChequeDueDateChange","transactionType","selectedTransaction","setSelectedTransaction","cashes","setCashes","cashDeskId","selectedCash","setSelectedCash","getCashRequest","getCashes","getSelectedBank","getSelectedCash","onDone","cashDesk","onChangeBank","onChangeCash","trackingCode","chequeNumber","bankBranch","chequePayTo","naghdPayHeadCells","cardPayHeadCells","checkPayHeadCells","PrePayment","forwardRef","ref","setPayments","useImperativeHandle","onSubmitPaymentActions","isEdit","handleSubmitEditPayment","handleSubmitAddPayment","newPayments","NAGHD","update","$push","CARD","CHECK","$set","handleDeletePayment","$splice","onDismissPayment","onClickPayment","getButtonTitle","ButtonGroup","startIcon","Accordion","expanded","disabled","AccordionSummary","accordionSummary","expandIcon","heading","AccordionDetails","ProductList","driverId","paymentRef","selectedDrivers","setSelectedDrivers","getDriverRequest","driverList","carName","endIcon","perUnit","showPerUnit","setShowPerUnit","units","unitAction","selectedProduct","setSelectedProduct","depotPicker","setDepotPicker","selectedDepot","setSelectedDepot","fee","productFee","setProductFee","getDepotProductRequest","getProductFeeRequest","getDepotRequest","onChangeSelectedProduct","targetUnit","unitBaseId","productList","onSelectProduct","productId","feeProduct","isEmpty","getDepotPicker","allUnits","getProductUnitPicker","depotId","totalFee","categories","join","totalStock","unitBase","driverHeadCell","selectedDate","handleDateChange","invoiceCategory","setInvoiceCategory","drivers","setDrivers","products","setProducts","invoicePerson","setInvoicePerson","setTotalFee","totalPayment","setTotalPayment","discount","setDiscount","pureFee","setPureFee","totalRemaining","setTotalRemaining","addInvoiceRequest","editInvoiceRequest","detailInvoiceRequest","invoiceCategoryRequest","addInvoicePaymentRequest","getPaymentInvoiceRequest","addPaymentDriverRequest","getInvoiceCategory","onSelectPerson","onDismissPerson","getProperProducts","newProducts","categoryId","invoicePayment","invoiceId","personId","paymentsArray","totalPrice","onSubmitDrivers","onDismissDrivers","onDismissDriverPayments","onSubmitDriverPayments","driverPayments","newDriver","selected","onSubmitProduct","product","ProductsTmp","onDismissProduct","onShowProductDialog","onTotalDriverPayments","reduce","n","factorPay","Hidden","smDown","origin","destination","inventory_2","console","log","carPlaque","handlePaymentDriver","handleDeleteDriver","handleDeleteProduct","cashesPrice","chequesPrice","banksPrice","onChangeProductValue","newList","selectedCurrentProduct","productsRef","stocks","trim","CashSelector","chequeId","cashList","SpendCheque","persons","setPersons","setDescription","getPersonsRequest","getPersons","personList","setPaymentType","getChequeRequest","spendRequest","sleepRequest","onSelectCash","cashdeskId","onSubmitSpend","sleep","spend","revert","chequeList","CASH_LIST","cashDeskName","selectedType","setSelectedType","addCashRequest","editCashRequest","detailCashRequest","paymentList","paymentname","loan","isLoan","setIsLoan","setSelectedDate","addPaymentRequest","editPaymentRequest","detailPaymentRequest","stock","depot","deleteIcon","formControl","productName","setUnits","selectedUnit","setSelectedUnit","selectedSource","setSelectedSource","selectedDestination","setSelectedDestination","setAmount","selectedDriver","setSelectedDriver","driverPicker","setDriverPicker","isAddDriver","setIsAddDriver","setNewDriver","setPerUnit","getDriversRequest","categoryIdRequest","transferRequest","addDriverRequest","addTransferPaymentRequest","getDriverCategory","onSubmitTransfer","sourceDepotId","destinationDepotId","newAddedDriver","transferPayments","getDrivers","source","getUnits","getProductRequest","getCategoryRequest","getCategory","categoryData","defaultUnit","transfer","seletedUnit","seletedDepot","amounts","setAmounts","selectedCategory","setSelectedCategory","addProductRequest","editProductRequest","detailProductRequest","getProductCategoryRequest","onSubmitAmount","amountTmp","onDismissAmount","filterAmounts","filteredAmount","newObject","perunit","getProductCategory","FormControl","InputLabel","htmlFor","Select","handleDeleteAmount","setData","getAmountRequest","getAmount","depotList","depotCategory","setDepotCategory","addDepotRequest","editDepotRequest","detailDepotRequest","depotCategoryRequest","depotCategoryId","getDepotCategory","filterdCashes","sourceId","destinationId","deleteCashRequest","transferCashDesk","onDismissTransfer","CASH_DESK_LIST","driverCategory","setDriverCategory","driverCategoryRequest","editDriverRequest","detailDriverRequest","descendingComparator","b","getComparator","stableSort","comparator","stabilizedThis","el","sort","slice","defaultValue","setLabel","productCategory","setProductCategory","setAction","GetCustomerCategoryRequest","EditCustomerCategoryRequest","AddCustomerCategoryRequest","GetProductCategoryRequest","EditProductCategoryRequest","AddProductCategoryRequest","GetDepotCategoryRequest","EditDepotCategoryRequest","AddDepotCategoryRequest","GetInvoiceCategoryRequest","EditInvoiceCategoryRequest","AddInvoiceCategoryRequest","GetDriverCategoryRequest","EditDriverCategoryRequest","AddDriverCategoryRequest","invoice","driver","handleAdd","customerCategoryList","depotCategoryList","productCategoryList","invoiceCategoryList","driverCategoryList","addButton","enter","exit","logedEnter","logedExit","register","dateTime","clockConatiner","selectedTime","setSelectedTime","isEditTime","setIsEditTime","editTime","setEditTime","registerRequest","getTrafficRequest","editTrafficRequest","checkToday","employeeId","onEdit","tzOffset","getTimezoneOffset","handleTimeChange","onEditTime","time","checkIsAdmin","toDateString","getTimesElement","times","TimePicker","ampm","ATTENDANCE_LIST","orientation","openTo","employee","EmployeeLog","sum","setSum","jMoment","locale","startOf","details","fractionTime","overTime","totalTime","totalOverTime","totalFractionTime","img","grid","copyState","setCopyState","onCopy","copyField","AccountsNumber","setPerson","getCardRequest","onDismissDetail","cardList","personName","handleDetail","CASH","CHEQUE","BANK","PaymentReport","cashId","getPaymentByCashRequest","getLoanRequest","Layout","path","UserList","UserDetail","CustomerList","CustomerDetail","CustomerTransaction","EmployeeList","EmployeeDetail","DriverList","DriverDetail","CashList","CashDetail","CashPaymentReport","ChequeList","ChequeDetail","LoanList","LoanDetail","InvoiceList","InvoiceDetail","FastInvoice","PaymentList","PaymentDetail","ProductDetail","ProductTransfer","DepotList","DepotDetail","Setting","Category","Traffic","TrafficDetail","logotypeText","logotypeIcon","paperRoot","textRow","errorCode","safetyText","backButton","backgroundImage","logotypeContainer","logotypeImage","formContainer","form","greeting","subGreeting","googleButton","googleButtonCreating","googleIcon","creatingButtonContainer","createAccountButton","formDividerContainer","formDividerWord","formDivider","errorMessage","textFieldUnderline","borderBottomColor","textField","formButtons","forgetButton","loginLoader","copyright","isLoading","usernameValue","setUsernameValue","passwordValue","setPasswordValue","unitAcion","back","input","onKeyPress","which","App","exact","PrivateRoute","PublicRoute","Login","rest","createElement","hostname","match","jss","plugins","jssPreset","rtl","RTL","StylesProvider","loadPersian","dialect","usePersianDigits","ReactDOM","utils","JalaliUtils","ThemeProvider","Themes","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4PAoJeA,EApJE,CAEfC,YAAa,8BACbC,gBAAiB,GACjBC,kBAAmB,CACjB,CAAEC,MAAO,UAAWC,MAAO,8CAC3B,CAAED,MAAO,QAASC,MAAO,mCAE3BC,eAAgB,CACdC,QAAS,2BACTC,MAAO,4BAETC,UAAW,CACTC,SAAU,6CACVC,KAAM,qBACNC,IAAK,eACLC,IAAK,iCACLC,KAAM,eACNC,YAAa,6CACbC,OAAQ,4BAEVC,aAAc,CACZC,WAAY,aACZC,WAAY,aACZC,YAAa,cACbC,YAAa,cACbC,YAAa,cACbC,aAAc,eACdC,UAAW,aAEbC,YAAa,CACXC,SAAU,WACVC,SAAU,WACVC,KAAM,OACNC,OAAQ,SACRC,OAAQ,UAEVC,QAAS,CACPC,aAAc,eACdC,MAAO,QACPC,KAAM,OACNC,aAAc,eACdC,cAAe,iBAEjBC,WAAY,CACVC,SAAU,sGACVC,cAAe,8IACfC,SAAU,oLACVC,YAAa,kIACbC,gBAAiB,oHAEnBC,SAAU,GACVC,cAAe,CACbC,eAAgB,2KAChBC,cAAe,sRAEjBC,cAAe,CACbC,OAAQ,uCACRC,OAAQ,wCACRC,SAAU,wCAEZC,aAAc,CACZC,OAAQ,6CACRC,QAAS,6CACTC,IAAK,gGAEPC,aAAc,CACZC,KAAM,2BACNC,IAAK,4BAEPC,gBAAiB,CACfC,gBAAiB,kBACjBC,gBAAiB,kBACjBC,iBAAkB,mBAClBC,UAAW,YACXC,UAAW,YACXC,YAAa,cACbC,cAAe,gBACfC,cAAe,gBACfC,gBAAiB,kBACjBC,YAAa,cACbC,YAAa,cACbC,cAAe,gBACfC,cAAe,gBACfC,cAAe,gBACfC,gBAAiB,kBACjBC,aAAc,eACdC,aAAc,eACdC,eAAgB,iBAChBC,WAAY,aACZC,WAAY,aACZC,aAAc,eACdC,aAAc,eACdC,aAAc,eACdC,eAAgB,iBAChBC,aAAc,eACdC,aAAc,eACdC,aAAc,eACdC,aAAc,eACdC,eAAgB,iBAChBC,eAAgB,iBAChBC,iBAAkB,mBAClBC,YAAa,eACbC,YAAa,cACbC,cAAe,iBAEjBC,YAAa,CACX,CAAEzF,MAAO,mBAAoBC,MAAO,iGACpC,CAAED,MAAO,kBAAmBC,MAAO,uFACnC,CAAED,MAAO,kBAAmBC,MAAO,gFACnC,CAAED,MAAO,eAAgBC,MAAO,yHAChC,CAAED,MAAO,eAAgBC,MAAO,sIAChC,CAAED,MAAO,eAAgBC,MAAO,8EAChC,CAAED,MAAO,eAAgBC,MAAO,0FAChC,CAAED,MAAO,iBAAkBC,MAAO,wEAClC,CAAED,MAAO,iBAAkBC,MAAO,oFAClC,CAAED,MAAO,mBAAoBC,MAAO,kEACpC,CAAED,MAAO,cAAeC,MAAO,sDAC/B,CAAED,MAAO,cAAeC,MAAO,kEAC/B,CAAED,MAAO,gBAAiBC,MAAO,gDACjC,CAAED,MAAO,YAAaC,MAAO,uEAC7B,CAAED,MAAO,YAAaC,MAAO,mFAC7B,CAAED,MAAO,cAAeC,MAAO,iEAC/B,CAAED,MAAO,gBAAiBC,MAAO,2DACjC,CAAED,MAAO,gBAAiBC,MAAO,uEACjC,CAAED,MAAO,kBAAmBC,MAAO,qDACnC,CAAED,MAAO,eAAgBC,MAAO,uEAChC,CAAED,MAAO,eAAgBC,MAAO,mFAChC,CAAED,MAAO,iBAAkBC,MAAO,iEAClC,CAAED,MAAO,gBAAiBC,MAAO,uEACjC,CAAED,MAAO,gBAAiBC,MAAO,mFACjC,CAAED,MAAO,kBAAmBC,MAAO,iEACnC,CAAED,MAAO,cAAeC,MAAO,6EAC/B,CAAED,MAAO,cAAeC,MAAO,yFAC/B,CAAED,MAAO,gBAAiBC,MAAO,uEACjC,CAAED,MAAO,aAAcC,MAAO,uEAC9B,CAAED,MAAO,aAAcC,MAAO,mFAC9B,CAAED,MAAO,eAAgBC,MAAO,iEAChC,CAAED,MAAO,eAAgBC,MAAO,kEAChC,CAAED,MAAO,eAAgBC,MAAO,+EAElCyF,sBAAuB,CACrB,CAAE1F,MAAO,iEAAgBC,MAAO,kEAChC,CAAED,MAAO,0DAAcC,MAAO,2DAC9B,CAAED,MAAO,0DAAcC,MAAO,2DAC9B,CAAED,MAAO,oFAAoBC,MAAO,uF,0BC/IlC0F,EAAe,CACnBC,MAAM,EACNC,KAAM,I,QCHFF,EAAe,CACnBC,MAAM,EACNE,UAAW,KACXC,MAAO,GACPC,KAAM,IACNC,oBAAoB,EACpBC,SAAS,EACTC,MAAO,GACPC,SAAU,cCgBGC,EAzBC,CACdC,QADc,SACNC,EAAKC,GACS,kBAATA,IACTA,EAAOC,KAAKC,UAAUF,IAExBG,aAAaL,QAAQC,EAAKC,IAG5BI,QARc,SAQNL,GACN,IACMvG,EAAQ2G,aAAaC,QAAQL,GAOnC,MANqB,kBAAVvG,EACHyG,KAAKI,MAAM7G,GAEXA,GAMV8G,WApBc,SAoBHP,GACTI,aAAaG,WAAWP,KClBtBZ,EAAec,KAAKI,MACxBR,EAAQO,QAAQhH,EAAS+B,QAAQK,gBAiBpB+E,MAdf,WAAoD,IAA/BC,EAA8B,uDAAtBrB,EAAcsB,EAAQ,uCACjD,OAAQA,EAAOC,MACb,KAAKtH,EAASiB,aAAaO,UACzB,OAAO,2BACF4F,GACAC,EAAOE,SAId,QACE,OAAOH,ICZPI,EAAaC,YAAgB,CACjCC,MJCa,WAAyC,IAA/BN,EAA8B,uDAAtBrB,EAAcsB,EAAQ,uCACrD,OAAQA,EAAOC,MACb,KAAKtH,EAASiB,aAAaC,WACzB,OAAO,uCACFkG,GACAC,EAAOM,QAFZ,IAGE3B,MAAM,IAGV,KAAKhG,EAASiB,aAAaE,WACzB,OAAO,2BACFiG,GADL,IAEEpB,MAAM,IAGV,QACE,OAAOoB,IIhBXQ,OHKa,WAAyC,IAA/BR,EAA8B,uDAAtBrB,EAAcsB,EAAQ,uCACrD,OAAQA,EAAOC,MACb,KAAKtH,EAASiB,aAAaG,YACzB,OAAO,uCACFgG,GACAC,EAAOM,QAFZ,IAGEpB,MAAM,GAAD,mBAAMa,EAAMb,OAAZ,CAAmBc,EAAOM,WAGnC,KAAK3H,EAASiB,aAAaI,YACzB,MAAO,CACLkF,MAAOa,EAAMb,MAAMsB,QAAO,SAACC,GAAD,OAAUA,EAAKC,OAASV,EAAOM,OAAOI,SAGpE,QACE,OAAOX,IGnBXY,SAOaC,EAJK,SAACb,EAAOC,GAC1B,OAAOG,EAAWJ,EAAOC,ICLZa,EAFDC,YAAYF,EAAaG,YAAgBC,MCFxC,WACRV,GACHO,EAAMI,SAAS,CAAEhB,KAAMtH,EAASiB,aAAaC,WAAYyG,YAF9C,aAMXO,EAAMI,SAAS,CAAEhB,KAAMtH,EAASiB,aAAaE,c,OCyBlCoH,EAzBD,WACZ,MAA6BC,aAAY,SAACpB,GAAD,OAAWA,EAAMM,SAAlD1B,EAAR,EAAQA,KAAMC,EAAd,EAAcA,KAAMqB,EAApB,EAAoBA,KAEdmB,EAAc,SAACC,EAAOC,GACX,cAAXA,GAIJC,KAGF,OACE,cAACC,EAAA,EAAD,CAAUC,KAAM9C,EAAM+C,iBAAkB,IAAMC,QAASP,EAAvD,SACE,cAAC,IAAD,CACEQ,UAAW,EACXC,QAAQ,SACRF,QAASP,EACTU,SAAU7B,EAJZ,SAMGrB,OCzBM,WACR0B,GACHO,EAAMI,SAAS,CAAEhB,KAAMtH,EAASiB,aAAaG,YAAauG,YAF/C,WAKRA,GACHO,EAAMI,SAAS,CAAEhB,KAAMtH,EAASiB,aAAaI,YAAasG,Y,2CCPjDyB,EAASC,aAAW,SAACC,GAAD,MAAY,CAC3CC,UAAW,CACTC,QAAS,OACTC,UAAW,UAEbtD,MAAO,CACLuD,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZC,aAAa,aAAD,OAAeP,EAAMQ,QAAQC,KAAKC,OAC9CR,QAAS,QAEXlD,QAAS,CACPkD,QAAS,gBACTE,QAAS,OACTC,eAAgB,gBCwELM,EAnFD,WACZ,IAAMC,EAAUd,IACR7C,EAAUiC,aAAY,SAACpB,GAAD,OAAWA,EAAMQ,UAAvCrB,MAMR,OASE,aARA,CAQA,OAAK4D,UAAWD,EAAQE,QAAxB,SACG7D,EAAM8D,KAAI,SAACvC,GAAD,OACT,cAACwC,EAAA,EAAD,CAAMC,IAAI,EAAV,SACE,eAACC,EAAA,EAAD,CACEC,GAAI,GACJC,GAAIC,OAAO7C,EAAK1B,MAChBmD,WAAS,EACTqB,MAAO,CACLC,UAAW,8BACXC,aAAc,EACdtB,QAAS,GACTuB,SAAU,QACVC,OAAQ,IACRC,IAAK,MACLC,gBAAiB,OACjBC,KAAM,MACNC,UAAW,wBAbf,UAgBE,cAACZ,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAIN,UAAWD,EAAQ/D,MAAtC,SACE,cAACkF,EAAA,EAAD,CAAYnC,QAAQ,KAApB,SAA0BpB,EAAK3B,WAW/B2B,EAAKxB,SACL,cAACkE,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAIN,UAAWD,EAAQX,UAAtC,SACGzB,EAAK5B,YAGT4B,EAAKxB,SACJ,eAACkE,EAAA,EAAD,CACE1C,MAAI,EACJ2C,GAAI,GACJN,UAAWD,EAAQ5D,QACnBsE,MAAO,CAAEjB,eAAgB,iBAJ3B,UAME,cAAC2B,EAAA,EAAD,CACEpC,QAAQ,YACRqC,MAAM,YACNC,QAAS,WA1DvBC,EAAkB,CAAE1D,KAAM,YAuDd,kDAOA,cAACuD,EAAA,EAAD,CACEpC,QAAQ,YACRqC,MAAM,UACNC,QAAS1D,EAAKtB,SAHhB,0DCzEHkF,EAAU,UACVC,EAAY,UACZC,EAAU,UACVC,EAAU,UACVC,EAAO,UACPC,EAAO,UA6HLC,EAzHM,CACnBC,UAAW,MAEXnC,QAAS,CACP4B,QAAS,CACPQ,KAAMR,EACN1B,MAAO,UACPmC,KAAMT,GAERC,UAAW,CACTO,KAAMP,EACN3B,MAAO2B,EACPQ,KAAMR,EACNS,aAAc,WAEhBC,OAAQ,CACNH,KAAMP,EACN3B,MAAO2B,EACPQ,KAAMR,EACNS,aAAc,WAEhBR,QAAS,CACPM,KAAMN,EACN5B,MAAO4B,EACPO,KAAMP,GAERC,QAAS,CACPK,KAAML,EACN7B,MAAO6B,EACPM,KAAM,WAERL,KAAM,CACJI,KAAMJ,EACN9B,MAAO8B,EACPK,KAAML,GAERC,KAAM,CACJG,KAAMH,EACN/B,MAAO+B,EACPI,KAAMJ,GAER9F,KAAM,CACJyF,QAAS,UACTC,UAAW,UACXW,KAAM,WAERC,WAAY,CACVC,QAAS,UACTxC,MAAO,YAGXyC,cAAe,CACbC,OACE,4EACFC,WACE,8EACFC,WACE,8EAEJC,UAAW,CACTC,YAAa,CACXC,KAAM,CACJ7B,gBAAiB,cAGrB8B,QAAS,CACPC,MAAO,CACLpC,UACE,8EAGNqC,UAAW,CACTC,KAAM,CACJ5B,MAAO,YAGX6B,YAAa,CACXL,KAAM,CACJ,aAAc,CACZ7B,gBAAiB,qBACjB,UAAW,CACTA,gBAAiB,aAIvBmC,OAAQ,CACN,mBAAoB,CAClBnC,gBAAiB,aAIvBoC,eAAgB,CACdC,MAAO,CACLrC,gBAAiB,UAGrBsC,YAAa,CACXT,KAAM,CACJU,OAAQ,KAGZC,aAAc,CACZX,KAAM,CACJlD,aAAc,oCACd8D,YAAa,IAEfC,KAAM,CACJC,SAAU,WAEZC,KAAM,CACJD,SAAU,YAGdE,kBAAmB,CACjBhB,KAAM,CACJiB,WAAY,O,SC5FLC,EAJA,CACbzB,QAAS0B,YAAe,2BAAKlC,GAzBb,CAChBmC,WAAY,CACVC,WAAY,WACZC,GAAI,CACFR,SAAU,QAEZS,GAAI,CACFT,SAAU,QAEZU,GAAI,CACFV,SAAU,WAEZW,GAAI,CACFX,SAAU,UAEZY,GAAI,CACFZ,SAAU,YAEZa,GAAI,CACFb,SAAU,iB,0DCrBDxE,gBAAW,SAAAC,GAAK,MAAK,CAClCyD,KAAM,CACJrD,QAAS,OACTiF,SAAU,QACVlF,UAAW,UAEbmF,QAAS,CACPC,SAAU,EACVrF,QAASF,EAAMwF,QAAQ,GACvBC,MAAM,sBACNC,UAAW,SAEbC,aAAc,CACZF,MAAM,gBAAD,OAAkB,IAAMzF,EAAMwF,QAAQ,GAAtC,OACLI,WAAY5F,EAAM6F,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQ/F,EAAM6F,YAAYE,OAAOC,MACjCC,SAAUjG,EAAM6F,YAAYI,SAASC,kBAGzCC,YAAY,eACPnG,EAAMoG,OAAOC,SAElBC,KAAM,CACJ,sBAAuB,CACrBjC,YAAa,S,2JCvBJtE,gBAAW,SAACC,GAAD,cAAY,CACpCuG,SAAS,aACPtE,MAAO,QACPyC,WAAY1E,EAAMwF,QAAQ,KAC1BgB,YAAaxG,EAAMwF,QAAQ,KAC3BiB,WAAY,IACZlC,SAAU,GACVmC,WAAY,UACX1G,EAAM2G,YAAYC,KAAK,MAAQ,CAC9BxG,QAAS,SAGbyG,OAAQ,CACNpB,MAAO,QACP/D,OAAQ1B,EAAM0B,OAAOoF,OAAS,EAC9BlB,WAAY5F,EAAM6F,YAAYC,OAAO,CAAC,UAAW,CAC/CC,OAAQ/F,EAAM6F,YAAYE,OAAOC,MACjCC,SAAUjG,EAAM6F,YAAYI,SAASc,iBAGzCV,QAAS,CACPhC,YAAarE,EAAMwF,QAAQ,GAC3BwB,aAAchH,EAAMwF,QAAQ,IAE9ByB,KAAM,CACJ7G,QAAS,QAEX8G,KAAM,CACJ3B,SAAU,GAEZ4B,OAAQ,CACN1F,SAAU,WACVD,aAAc,GACd6C,YAAarE,EAAMwF,QAAQ,KAC3BC,MAAO,GACP7D,gBAAiBwF,gBAAKpH,EAAMQ,QAAQ6G,OAAOC,MAAO,GAClD1B,WAAY5F,EAAM6F,YAAYC,OAAO,CAAC,mBAAoB,UAC1D,UAAW,CACTyB,OAAQ,UACR3F,gBAAiBwF,gBAAKpH,EAAMQ,QAAQ6G,OAAOC,MAAO,OAGtDE,cAAc,aACZ5F,gBAAiBwF,gBAAKpH,EAAMQ,QAAQ6G,OAAOC,MAAO,KAClD7B,MAAO,QACNzF,EAAM2G,YAAYc,GAAG,MAAQ,CAC5BhC,MAAO,MAGXiC,WAAY,CACVjC,MAAO,GACPkC,MAAO,EACPxD,OAAQ,OACR1C,SAAU,WACVrB,QAAS,OACTE,WAAY,SACZD,eAAgB,SAChBuF,WAAY5F,EAAM6F,YAAYC,OAAO,SACrC,UAAW,CACTyB,OAAQ,YAGZK,iBAAkB,CAChBD,MAAO3H,EAAMwF,QAAQ,OAEvBqC,UAAW,CACT5F,MAAO,UACPwD,MAAO,QAETqC,WAAY,CACV3D,OAAQ,GACRjE,QAAS,EACT8G,aAAc,GAAKhH,EAAMwF,QAAQ,MACjCC,MAAO,QAETsC,eAAgB,CACd3H,QAAS,OACT4H,cAAe,UAEjBC,WAAY,CACVC,UAAWlI,EAAMwF,QAAQ,IAE3B2C,eAAgB,CACd/H,QAAS,OACT4H,cAAe,UAEjBI,eAAgB,CACd,mBAAoB,CAClBxG,gBAAiB5B,EAAMQ,QAAQyC,WAAWvC,QAI9C2H,iBAAkB,CAChB3D,WAAY1E,EAAMwF,QAAQ,GAC1BtF,QAASF,EAAMwF,QAAQ,KAEzB8C,0BAAwB,GACtB5D,WAAY,GADU,cAErB1E,EAAM2G,YAAYC,KAAK,MAAQ,CAC9BlC,WAAY,IAHQ,wBAKb1E,EAAMwF,QAAQ,KALD,GAOxB+C,yBAA0B,CACxB/B,YAAaxG,EAAMwF,QAAQ,IAE7BgD,WAAY,CACVjE,SAAU,GACVtC,MAAO,6BAETwG,mBAAoB,CAClBxG,MAAO,SAETyG,YAAa,CACXC,SAAU,KAEZC,gBAAiB,CACfxI,QAAS,OACT4H,cAAe,MACf1H,WAAY,SACZD,eAAgB,gBAChBH,QAASF,EAAMwF,QAAQ,IAEzBqD,gBAAiB,CACf5G,MAAOjC,EAAMQ,QAAQ7D,KAAKqG,MAE5B8F,gBAAiB,CACftC,YAAaxG,EAAMwF,QAAQ,GAC3BvD,MAAOjC,EAAMQ,QAAQ7D,KAAKqG,KAC1B,UAAW,CACTf,MAAOjC,EAAMQ,QAAQ4B,QAAQQ,OAGjCmG,gBAAiB,CACfxE,SAAU,GACVyE,eAAgB,OAChB,UAAW,CACTzB,OAAQ,YAGZ0B,oBAAqB,CACnBxD,MAAO,QACPpF,eAAgB,gBAChB8D,OAAQ,OACR/D,QAAS,OACTE,WAAY,SACZ,mBAAoB,CAClBsB,gBAAiB5B,EAAMQ,QAAQyC,WAAWvC,QAG9CwI,wBAAyB,CACvB9I,QAAS,OACT4H,cAAe,SACf1H,WAAY,SACZkG,YAAaxG,EAAMwF,QAAQ,IAE7B2D,4BAA6B,CAC3B7I,WAAY,aACZkG,YAAa,GAEf4C,kBAAmB,CACjBC,OAAQrJ,EAAMwF,QAAQ,GACtB0C,UAAWlI,EAAMwF,QAAQ,GACzB8D,aAActJ,EAAMwF,QAAQ,GAC5B+D,cAAe,QAEjBC,eAAgB,CACd9E,WAAY1E,EAAMwF,QAAQ,IAE5BiE,aAAW,mBACRzJ,EAAM2G,YAAYC,KAAK,MAAQ,CAC9BxG,QAAS,SAFF,4BAIIJ,EAAMwF,QAAQ,IAJlB,GAOXkE,KAAM,CACJzH,MAAO,QAET0H,QAAS,CACP1H,MAAOjC,EAAMQ,QAAQ4B,QAAQQ,MAE/B9I,OAAQ,CACN8H,gBAAiB5B,EAAMQ,QAAQ+B,QAAQK,MAEzCgH,WAAY,CACV3H,MAAOjC,EAAMQ,QAAQ+B,QAAQK,MAE/B7I,QAAS,CACP6H,gBAAiB5B,EAAMQ,QAAQuC,OAAOH,U,iJCrLtCiH,GAAY9J,aAAW,SAAAC,GAAK,MAAK,CACnC8J,MAAO,CACLrD,WAAY,IACZtC,OAAQ,GACRwE,SAAU,QAId,SAASoB,GAAT,GAAgE,IAA/CC,EAA8C,EAA9CA,SAAUC,EAAoC,EAApCA,gBAAiBhI,EAAmB,EAAnBA,MAAUiI,EAAS,kBACzDtJ,EAAUiJ,KAEVM,EAASC,GAAa,CACxBN,MAAO,CACLlI,gBAAiByI,GAASpI,EAHlBqI,eAGgCL,MAI5C,OACE,cAACE,EAAD,UACG,SAAAI,GAAW,OACV,cAACR,GAAA,EAAD,yBACEnJ,QAAS,CACPkJ,MAAOU,IAAW5J,EAAQkJ,MAAOS,EAAY3J,QAAQkJ,SAEnDI,GAJN,aAMGF,QAOX,SAASjI,GAAT,GAOI,IANFiI,EAMC,EANDA,SACAS,EAKC,EALDA,OACA3N,EAIC,EAJDA,KACAmN,EAGC,EAHDA,gBACAhI,EAEC,EAFDA,MACGiI,EACF,kBACGlK,EAAQsK,eAEZ,OACE,cAACvI,EAAA,EAAD,yBACET,MAAO,CACLW,MAAOoI,GAASpI,EAAOjC,EAAOiK,GAC9BxD,WAAYiE,GAAcD,GAC1BlG,SAAUoG,GAAY7N,EAAMoN,EAAMtK,QAASI,KAEzCkK,GANN,aAQGF,KA8DP,SAASK,GAASpI,EAAOjC,GAA4B,IAArB4K,EAAoB,uDAAR,OAC1C,GAAI3I,GAASjC,EAAMQ,QAAQyB,IAAUjC,EAAMQ,QAAQyB,GAAO2I,GACxD,OAAO5K,EAAMQ,QAAQyB,GAAO2I,GAIhC,SAASF,GAAcpJ,GACrB,OAAQA,GACN,IAAK,QACH,OAAO,IACT,IAAK,SACH,OAAO,IACT,IAAK,OACH,OAAO,IACT,QACE,OAAO,KAIb,SAASqJ,GAAY7N,GAA4B,IAC3C+N,EADqBjL,EAAqB,uDAAX,GAAII,EAAO,uCAG9C,OAAQlD,GACN,IAAK,KACH+N,EAAa,GACb,MACF,IAAK,KACHA,EAAa,IACb,MACF,IAAK,KACHA,EAAa,EACb,MACF,IAAK,MACHA,EAAa,EACb,MACF,QACEA,EAAa,EAIjB,IAAIC,EACFlL,GAAWI,EAAM6E,WAAWjF,GACxBI,EAAM6E,WAAWjF,GAAS2E,SAC1BvE,EAAM6E,WAAWN,SAAW,KAElC,MAAM,QAAN,OAAeuG,EAAf,cAAgCD,EAAhC,KAGF,SAAST,GAAatK,EAAQiL,GAM5B,OAAOC,aAAWlL,EAAQiL,EAAnBC,EALM,SAASd,GAEpB,OAAOF,EADwBE,EAAvBF,UAAR,YAA+BE,EAA/B,QC7KJ,IAAIe,GAAqBC,IAAMC,gBAC3BC,GAAwBF,IAAMC,gBAElC,SAASE,GAAcvN,EAAOC,GAC5B,OAAQA,EAAOC,MACb,IAAK,iBACH,OAAO,2BAAKF,GAAZ,IAAmBwN,iBAAkBxN,EAAMwN,kBAC7C,QACE,MAAM,IAAIC,MAAJ,iCAAoCxN,EAAOC,QAKvD,SAASwN,GAAT,GAAuC,IAAbxB,EAAY,EAAZA,SACpB,EAAoBkB,IAAMO,WAAWJ,GAAe,CACtDC,iBAAiB,IADnB,oBAAKxN,EAAL,KAAYkB,EAAZ,KAGA,OACE,cAACiM,GAAmBS,SAApB,CAA6B5U,MAAOgH,EAApC,SACE,cAACsN,GAAsBM,SAAvB,CAAgC5U,MAAOkI,EAAvC,SACGgL,MAMT,SAAS2B,KACP,IAAIC,EAAUV,IAAMW,WAAWZ,IAC/B,QAAgBa,IAAZF,EACF,MAAM,IAAIL,MAAM,uDAElB,OAAOK,EAGT,SAASG,KACP,IAAIH,EAAUV,IAAMW,WAAWT,IAC/B,QAAgBU,IAAZF,EACF,MAAM,IAAIL,MAAM,0DAElB,OAAOK,EAMT,SAASI,GAAchN,GACrBA,EAAS,CACPhB,KAAM,mBC7CV,IAAIiO,GAAmBf,IAAMC,gBACzBe,GAAsBhB,IAAMC,gBAEhC,SAASgB,GAAYrO,EAAOC,GAC1B,OAAQA,EAAOC,MACb,IAAK,gBACH,OAAO,2BACFF,GADL,IAEEsO,iBAAiB,EACjBC,YAAatO,EAAOE,UAExB,IAAK,mBACH,OAAO,2BAAKH,GAAZ,IAAmBsO,iBAAiB,EAAOC,YAAa,KAC1D,QACE,MAAM,IAAId,MAAJ,iCAAoCxN,EAAOC,QAKvD,SAASsO,GAAT,GAAqC,IAAbtC,EAAY,EAAZA,SAClB,EAAoBkB,IAAMO,WAAWU,GAAa,CACpDC,kBAAmB3O,aAAaC,QAAQhH,EAAS+B,QAAQE,OACzD0T,YAAa9O,KAAKI,MAChBF,aAAaC,QAAQhH,EAAS+B,QAAQC,iBAH1C,oBAAKoF,EAAL,KAAYkB,EAAZ,KAOA,OACE,cAACiN,GAAiBP,SAAlB,CAA2B5U,MAAOgH,EAAlC,SACE,cAACoO,GAAoBR,SAArB,CAA8B5U,MAAOkI,EAArC,SACGgL,MAMT,SAASuC,KACP,IAAIX,EAAUV,IAAMW,WAAWI,IAC/B,QAAgBH,IAAZF,EACF,MAAM,IAAIL,MAAM,mDAElB,OAAOK,EAGT,SAASY,KACP,IAAIZ,EAAUV,IAAMW,WAAWK,IAC/B,QAAgBJ,IAAZF,EACF,MAAM,IAAIL,MAAM,sDAElB,OAAOK,E,SAOMa,G,+FAAf,WACEC,EACA1N,EACA2N,EACAC,EACAC,EACAC,EACAC,GAPF,gBAAAC,EAAA,6DASED,GAAS,GACTD,GAAa,GAVf,SAWuBJ,EAAaO,QAAQ,CAAEN,WAAUC,aAXxD,QAWQM,EAXR,SAcIC,EAAe/P,QAAQ1G,EAAS+B,QAAQE,MAAOuU,EAAO5P,KAAK8P,OAC3DD,EAAe/P,QAAQ1G,EAAS+B,QAAQC,aAAcwU,EAAO5P,MAC7DyP,EAAS,MACTD,GAAa,GACb9N,EAAS,CAAEhB,KAAM,gBAAiBC,QAASiP,EAAO5P,OAElDuP,EAAQQ,KAAK,oBAEbN,GAAS,GACTD,GAAa,IAvBjB,4C,oCCtDMQ,G,QAAOC,EAAMzH,OAAO,CACxB0H,QAASC,EAAU9W,YACnB+W,QAAS,CACP,8BAA+B,IAC/B,mCAAoC,UAoBxCJ,GAAKK,aAAaC,SAASC,KACzB,SAACX,GAEC,MAAwBA,EAAOY,OAAvBC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,IAwBhB,MAXe,QAAXD,GACU,eAARC,GACF1O,EAAiB,CACftB,KAAM,UACNrB,KACa,WAAXoR,EACI,+HACA,iIAILb,IA3BX,yCA6BE,WAAOe,GAAP,oBAAAjB,EAAA,+DAC4BiB,EAAML,SAAStQ,KAAK2Q,MAAtCC,EADV,EACUA,KAAMC,EADhB,EACgBA,QAEZ7O,EADW,iCAAT4O,EACe,CACflQ,KAAM,QACNrB,KAAM,2FAGS,CACfqB,KAAM,QACNrB,KAAMwR,IAVZ,kBAsBSC,QAAQC,OAAOJ,IAtBxB,2CA7BF,uDAuDeX,UChFTgB,GAAe,SAACN,EAAKO,GACzB,MAAM,GAAN,OAAUP,EAAIQ,UAAU,EAAGR,EAAIS,QAAQ,MAAvC,YAAgDF,EAAhD,YAA6DP,EAAIQ,UAC/DR,EAAIS,QAAQ,KAAO,EACnBT,EAAIU,UAIKC,GAAS,SAACC,GACrB,MAA8BC,oBAAS,GAAvC,oBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,qBAA5B,oBAAO3B,EAAP,KAAe8B,EAAf,KACA,EAA0BH,qBAA1B,oBAAOZ,EAAP,KAAclB,EAAd,KA6BA,MAAO,CACL+B,UACA5B,SACAe,QACAhB,QA/BW,yCAAG,WAAgB3P,EAAMiR,GAAtB,sBAAAvB,EAAA,yDACd+B,GAAW,GADG,UAKRR,EALQ,qBAMNK,EAAKZ,IAAIiB,SAAS,KANZ,wBAOFjB,EAAMM,GAAaM,EAAKZ,IAAKO,GAP3B,SAQSjB,GAAK,2BAAKsB,GAAN,IAAYZ,MAAK1Q,UAR9B,OAQRsQ,EARQ,sCAUFI,EAVE,UAUOY,EAAKZ,IAVZ,YAUmBO,GAVnB,UAWSjB,GAAK,2BAAKsB,GAAN,IAAYZ,MAAK1Q,UAX9B,QAWRsQ,EAXQ,wDAcON,GAAK,2BAAKsB,GAAN,IAAYtR,UAdvB,QAcVsQ,EAdU,sBAgBZoB,EAAUpB,GAhBE,4BAiBLA,SAjBK,aAiBL,EAAUtQ,MAjBL,wCAmBZ0R,EAAU,MACVjC,EAAS,EAAD,IACF,IAAIxB,MAAJ,MArBM,yBAuBZwD,GAAW,GAvBC,6EAAH,0D,6DCAFG,GAA6B,SAACC,GACzC,OAAO,IAAIC,gBAAgBC,KAAOF,EAAQG,OAAWC,YAG1CC,GAAiB,SAACC,GAG7B,OAFY,IAAIC,IAAIC,OAAOC,SAASC,KAAKC,QAAQ,KAAM,KAC/BC,aAAaC,IAAIP,IAS9BQ,GAA0B,WACrC,IAAMC,EAAS,CACb9N,EACAC,EACAE,EACAD,ET/BkB,YACA,YSiClBE,EACAC,GAIF,OAFYyN,EAAOC,KAAKC,MAAMD,KAAKE,SAAWH,EAAOxB,UAK1C4B,GAAkB,SAACC,EAAKC,GACnC,OAAOL,KAAKC,MAAMD,KAAKE,UAAYG,EAAMD,EAAM,GAAKA,IAGzCE,GAAgB,SAACC,GAC5B,IAAKA,GAAa,IAAPA,WAAoBA,IAAOC,KACpC,OAAQ,GAAKD,GAAIZ,QAAQ,UAAU,SAAUc,GAC3C,MAAO,+DAAaC,QAAQD,EAAG,OAkBxBE,GAAgB,SAACC,GAC5B,OAAIA,IAAWra,EAAS0D,gBAAgB4W,MAGhBzT,KAAKI,MAC3BwP,EAAezP,QAAQhH,EAAS+B,QAAQC,eADlCuY,YAGWhC,SAAS8B,I,qCC4EfG,GApJI,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UAC9B,EAAiDC,eAAzCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,OAC/B,GADA,EAAuCC,MACH5C,oBAAS,IAA7C,oBAAO6C,EAAP,KAAmBC,EAAnB,KACMC,EAAcC,iBAAO,MAErBC,EAAwBnD,GAAO,CACnCZ,OAAQ,MACRC,IAAI,yBAGA+D,EAAoB,WACxBJ,GAAeD,IAejB,OACE,sBAAMP,SAAUI,GAbH,SAACjU,GACd,IAAQ0U,EAAOzU,KAAKI,MAClBwP,EAAezP,QAAQhH,EAAS+B,QAAQC,eADlCsZ,GAGRF,EAAsB7E,QAAQ,CAC5B+E,KACAC,YAAa3U,EAAK4U,YAClBC,YAAa7U,EAAKsP,WAEpBuE,EAAS7T,MAIT,SACE,eAAC4D,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAzB,UACE,cAACtE,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,wEACN0H,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAOU,YAChBK,WACEf,EAAOU,YAAcV,EAAOU,YAAY/D,QAAU,GAEpDqE,WAAS,EACT1V,KAAK,QACLkB,KAAM,cAIZyU,MAAO,CACLC,SAAUhc,EAASqC,WAAWC,SAC9B2Z,UAAW,CACT7b,MAAO,EACPqX,QAASzX,EAASqC,WAAWG,WAGjCuF,KAAK,kBAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,8CACN0H,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAO5E,SAChB2F,WAAYf,EAAO5E,SAAW4E,EAAO5E,SAASuB,QAAU,GACxDqE,WAAS,EACT1V,KAAK,QACLkB,KAAM0T,EAAa,WAAa,OAChCkB,SAAUhB,EACViB,WAAY,CACVC,aACE,cAACC,GAAA,EAAD,CAAgBtR,SAAS,MAAzB,SACE,mBACEH,MAAO,CAAEiG,OAAQ,WACjB1G,UAAWmS,aAAK,wBAChB9Q,QAAS6P,EAHX,SAKGL,EAAa,iBAAmB,qBAQ/Ce,MAAO,CACLC,SAAUhc,EAASqC,WAAWC,SAC9B2Z,UAAW,CACT7b,MAAO,EACPqX,QAASzX,EAASqC,WAAWG,WAGjCuF,KAAK,eAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,8EACN0H,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAOyB,WAChBV,WACEf,EAAOyB,YAAc,8LAEvBT,WAAS,EACT1V,KAAK,QACLkB,KAAM,cAIZyU,MAAO,CACLS,SAAU,SAACpc,GAAD,OAAWA,IAAU8a,EAAYuB,QAAQrc,QAErD2H,KAAK,iBAIT,eAACyC,EAAA,EAAD,CACE1C,MAAI,EACJ2C,GAAI,GACJG,MAAO,CAAElB,QAAS,OAAQC,eAAgB,iBAH5C,UAKE,cAAC2B,EAAA,EAAD,CAAQpC,QAAQ,YAAYqC,MAAM,UAAUjE,KAAK,SAAjD,4CAGA,cAACgE,EAAA,EAAD,CAAQpC,QAAQ,YAAYqC,MAAM,UAAUC,QAASkP,EAArD,2D,qBC9GK,SAASgC,GAAOlJ,GAC7B,IFsB2BmJ,EEtBvBzS,EAAUiJ,KACRgD,EAAUyG,cACZC,EAAc5H,KACd6H,EAAiBzH,KACjB0H,EAAejH,KACboD,EAAW8D,cACb,EAA0B7E,mBAAS,MAAvC,oBAAK8E,EAAL,KAAeC,EAAf,KACI,EAAgC/E,mBAAS,MAA7C,oBAAKnG,EAAL,KAAkBmL,EAAlB,KACMxH,EAAgBE,KAAhBF,YACN,EAA8BwC,mBAAS,IAAvC,oBAAOiF,EAAP,KAAgBC,EAAhB,KAEMC,EAAsBrF,GAAO,CACjCZ,OAAQ,MACRC,IAAI,kBAGAiG,EAAe,yCAAG,6BAAAjH,EAAA,sEACDgH,EAAoB/G,UADnB,OAChBiH,EADgB,OAGtBH,EAAWG,EAAO5W,MAHI,2CAAH,qDAUf6W,EAAyB,WAC7BC,KAGIA,EAA0B,WAC9BjS,EAAkB,CAAE1D,KAAM,cAsB5B,OAJA4V,qBAAU,WACRJ,MACC,CAACrE,IAGF,cAAC0E,GAAA,EAAD,CAAQ7S,SAAS,QAAQZ,UAAWD,EAAQiG,OAA5C,SACE,eAAC0N,GAAA,EAAD,CAAS1T,UAAWD,EAAQyF,QAA5B,UACE,cAACmO,GAAA,EAAD,CACEvS,MAAM,UACNC,QAAS,kBAAM8J,GAAcwH,IAC7B3S,UAAW4T,IACT7T,EAAQ0H,yBACR1H,EAAQ2H,0BALZ,SAQGgL,EAAYjI,gBACX,cAACoJ,GAAA,EAAD,CACE9T,QAAS,CACP6C,KAAMgR,IACJ7T,EAAQ4H,WACR5H,EAAQ6H,uBAKd,cAAC,KAAD,CACE7H,QAAS,CACP6C,KAAMgR,IACJ7T,EAAQ4H,WACR5H,EAAQ6H,yBAMlB,cAAC,GAAD,CAAY7I,QAAQ,KAAK6K,OAAO,SAAS5J,UAAWD,EAAQ2F,SAA5D,4HAIA,qBAAK1F,UAAWD,EAAQsG,OACxB,sBAAK5F,MAAO,CAAElB,QAAS,QAAvB,UACE,cAAC,GAAD,CAAYR,QAAQ,KAAK0B,MAAO,CAAE+H,OAAQ,UAA1C,UFpEmBgK,EEqEH,IAAIsB,KFpEf,CACX,uCACA,uCACA,wCACA,mDACA,8CACA,2BACA,4BAEUtB,EAAKuB,aE6DT,cAAC,GAAD,CAAYhV,QAAQ,KAApB,SACG6Q,IAAc,IAAIkE,MAAOE,mBAAmB,YAE/C,cAAC,GAAD,CACEjV,QAAQ,KACR0B,MAAO,CACL+H,OAAQ,SACR5D,MAAO,GACPrF,QAAS,OACTC,eAAgB,YANpB,SASE,cAAC,KAAD,CACEyU,OAAQ,WACRC,SAAS,EACTC,SAAU,qBAIhB,cAACR,GAAA,EAAD,CACEvS,MAAM,UACN,gBAAc,OACd,gBAAc,YACdC,QAAS,SAAC+S,GACRrB,EAAYqB,EAAEC,gBAEhBrU,UAAWD,EAAQyH,iBAPrB,SASE,cAAC,GAAD,CAAO8M,aAAY,OAAErB,QAAF,IAAEA,OAAF,EAAEA,EAASpF,OAAQzM,MAAM,YAA5C,SACE,cAAC,KAAD,CAAmBrB,QAAS,CAAE6C,KAAM7C,EAAQ4H,kBAGhD,cAACgM,GAAA,EAAD,CACE,gBAAc,OACdvS,MAAM,UACNpB,UAAWD,EAAQyH,iBACnB,gBAAc,eACdnG,QAAS,SAAC+S,GAAD,OAAOpB,EAAeoB,EAAEC,gBALnC,SAOE,cAAC,KAAD,CAAatU,QAAS,CAAE6C,KAAM7C,EAAQ4H,gBAExC,eAAC4M,GAAA,EAAD,CACEpD,GAAG,YACHxS,KAAM6V,QAAQ1B,GACd2B,SAAU3B,EACVjU,QAAS,kBAAMkU,EAAY,OAC3B2B,cAAe,CAAE1U,UAAWD,EAAQuH,gBACpCtH,UAAWD,EAAQqH,WACnBrH,QAAS,CAAE+C,MAAO/C,EAAQ8H,aAC1B8M,sBAAoB,EARtB,UAUE,sBAAK3U,UAAWD,EAAQgI,gBAAxB,UACE,cAAC,GAAD,CAAYhJ,QAAQ,KAAK6K,OAAO,SAAhC,kFAGA,cAACzI,EAAA,EAAD,CAAQC,MAAM,UAAUC,QA9HV,WACtB2K,EAAQQ,KAAK,qBA6HL,4FAIF,cAACoI,GAAA,EAAD,IAlBF,OAmBG3B,QAnBH,IAmBGA,OAnBH,EAmBGA,EAAS/S,KAAI,SAACoN,GAAD,OACZ,eAACuH,GAAA,EAAD,CAA2B7U,UAAWD,EAAQqI,oBAA9C,UACE,cAAC,GAAD,CAAYrJ,QAAQ,KAApB,SACG6Q,GACC,IAAIkE,KAAKxG,EAAQwH,eAAed,mBAAmB,YAGvD,cAAC,GAAD,CAAYjV,QAAQ,KAApB,SAA0BuO,EAAQyH,SAClC,cAAC,GAAD,CAAYhW,QAAQ,KAApB,SACG6Q,GAActC,EAAQ0H,SAEzB,cAAC,GAAD,CAAYjW,QAAQ,KAApB,SACE,cAACkW,GAAA,EAAD,CACE/e,MAAOL,EAASmD,aAAasU,EAAQnQ,MACrC6C,UAAWmS,aAAKpS,EAAQ8I,KAAM9I,EAAQuN,EAAQnQ,aAbrCmQ,EAAQ6D,UAmB3B,eAACoD,GAAA,EAAD,CACEpD,GAAG,eACHxS,KAAM6V,QAAQ3M,GACd4M,SAAU5M,EACVhJ,QAAS,kBAAMmU,EAAe,OAC9BhT,UAAWD,EAAQqH,WACnBrH,QAAS,CAAE+C,MAAO/C,EAAQ8H,aAC1B8M,sBAAoB,EAPtB,UASE,qBAAK3U,UAAWD,EAAQgI,gBAAxB,SACE,cAAC,GAAD,CAAYhJ,QAAQ,KAAK6K,OAAO,SAAhC,SACG4B,EAAYM,aAGjB,cAAC+I,GAAA,EAAD,CACE7U,UAAW4T,IACT7T,EAAQiI,gBACRjI,EAAQwH,gBAHZ,SAME,cAAC,GAAD,CACEvH,UAAWD,EAAQmI,gBACnB9G,MAAM,UACNC,QAlKa,WACvBC,EAAkB,CAChBtF,MAAO,gEACPD,UACE,cAACmZ,GAAD,CACE5E,SAAUgD,EACV/C,UAAWgD,IAGf3V,KAAM,WACN3B,KAAM,IACNC,oBAAoB,KAoJd,6EASF,cAAC2Y,GAAA,EAAD,CACE7U,UAAW4T,IACT7T,EAAQiI,gBACRjI,EAAQwH,gBAHZ,SAME,cAAC,GAAD,CACEvH,UAAWD,EAAQmI,gBACnB9G,MAAM,UACNC,QAAS,kBLlKvB,SAAiBlD,EAAU6N,GACzBpP,aAAaG,WAAWlH,EAAS+B,QAAQE,OACzC8E,aAAaG,WAAWlH,EAAS+B,QAAQC,cACzCsG,EAAS,CAAEhB,KAAM,qBACjB6O,EAAQQ,KAAK,UK8Jc2I,CAAQvC,EAAcvJ,EAAM2C,UAH7C,4F,wBClPG9M,gBAAW,SAAAC,GAAK,YAAK,CAClCiW,WAAY,CACVvR,WAAY,GACZ8B,YAAa,IAEfS,KAAM,CACJ7G,QAAS,QAEX0G,OAAQ,CACNrB,MAXgB,IAYhByQ,WAAY,EACZxP,WAAY,UAEdyP,WAAY,CACV1Q,MAhBgB,IAiBhBG,WAAY5F,EAAM6F,YAAYC,OAAO,QAAS,CAC5CC,OAAQ/F,EAAM6F,YAAYE,OAAOC,MACjCC,SAAUjG,EAAM6F,YAAYI,SAASC,kBAGzCkQ,YAAY,aACVxQ,WAAY5F,EAAM6F,YAAYC,OAAO,QAAS,CAC5CC,OAAQ/F,EAAM6F,YAAYE,OAAOC,MACjCC,SAAUjG,EAAM6F,YAAYI,SAASc,gBAEvC5G,UAAW,SACXsF,MAAOzF,EAAMwF,QAAQ,GAAK,IACzBxF,EAAM2G,YAAYC,KAAK,MAAQ,CAC9BnB,MA9Bc,MAiClBY,QAAQ,2BACHrG,EAAMoG,OAAOC,SADX,kBAEJrG,EAAM2G,YAAYC,KAAK,MAAQ,CAC9BxG,QAAS,UAGbkF,QAAS,CACPC,SAAU,EACVrF,QAASF,EAAMwF,QAAQ,IAKzB6Q,kBAAgB,GACdnO,UAAWlI,EAAMwF,QAAQ,IACzBd,WAAY,IAFE,cAGb1E,EAAM2G,YAAY2P,KAAK,MAAQ,CAC9BpO,UAAWlI,EAAMwF,QAAQ,QAJb,cAMbxF,EAAM2G,YAAYc,GAAG,MAAQ,CAC5BrH,QAAS,SAPG,O,kDC9CHL,gBAAW,SAACC,GAAD,MAAY,CACpCsG,KAAM,CACJ0C,eAAgB,OAChB,mBAAoB,CAClBpH,gBAAiB5B,EAAMQ,QAAQyC,WAAWvC,QAG9C6V,aAAc,CACZnW,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZ0I,eAAgB,QAElBwN,WAAY,CACV5U,gBAAiB5B,EAAMQ,QAAQyC,WAAWvC,OAE5C+V,WAAY,CACVpS,YAAa,EACb,mBAAoB,CAClBzC,gBAAiB,YAGrB8U,SAAU,CACRlQ,YAAaxG,EAAMwF,QAAQ,GAC3BvD,MAAOjC,EAAMQ,QAAQ7D,KAAK0F,UAAY,KACtCuD,WAAY5F,EAAM6F,YAAYC,OAAO,SACrCL,MAAO,GACPrF,QAAS,OACTC,eAAgB,UAElBsW,eAAgB,CACd1U,MAAOjC,EAAMQ,QAAQ4B,QAAQQ,MAE/BgU,SAAU,CACR1W,QAAS,EACT+B,MAAOjC,EAAMQ,QAAQ7D,KAAK0F,UAAY,KACtCuD,WAAY5F,EAAM6F,YAAYC,OAAO,CAAC,UAAW,UACjDvB,SAAU,IAEZsS,eAAgB,CACd5U,MAAOjC,EAAMQ,QAAQ7D,KAAKyF,SAE5B0U,eAAgB,CACdC,QAAS,GAEXC,WAAY,CACV3S,YAAarE,EAAMwF,QAAQ,GAAK,IAElCyR,aAAc,CACZvS,WAAY1E,EAAMwF,QAAQ,KAC1B0C,UAAWlI,EAAMwF,QAAQ,GACzB8D,aAActJ,EAAMwF,QAAQ,IAE9B0R,QAAS,CACPhP,UAAW,GACXoB,aAAc,GACdnF,OAAQ,EACRvC,gBAAiB,iBCtDjBiI,GAAY9J,aAAW,SAACC,GAAD,MAAY,CACrCmX,QAAS,CACP1R,MAAO,EACPtB,OAAQ,EACRvC,gBAAiB5B,EAAMQ,QAAQ7D,KAAKqG,KACpCxB,aAAc,MACdoE,WAAY5F,EAAM6F,YAAYC,OAAO,qBAEvCsR,SAAU,CACR3R,MAAO,EACPtB,OAAQ,GAEVkT,SAAU,CACR5R,MAAO,GACPtB,OAAQ,QAIG,SAASmT,GAAT,GAA+B,IAAD,EAAfxa,EAAe,EAAfA,KAAMmF,EAAS,EAATA,MAC9BrB,EAAUiJ,KACV7J,EAAQsK,eAEZ,OACE,qBACEzJ,UAAW2J,IAAW5J,EAAQuW,SAAT,mBAClBvW,EAAQyW,SAAoB,UAATva,GADD,cAElB8D,EAAQwW,SAAoB,UAATta,GAFD,IAIrBwE,MAAO,CACLM,gBACEK,GAASjC,EAAMQ,QAAQyB,GAASjC,EAAMQ,QAAQyB,GAAOW,KAAOX,KCZvD,SAASsV,GAAT,GAUX,IAAD,MAuCkC,IAhDnCjR,EASC,EATDA,KACAzC,EAQC,EARDA,KACA9M,EAOC,EAPDA,MACAiT,EAMC,EANDA,SACA4F,EAKC,EALDA,SACAtE,EAIC,EAJDA,gBACAkM,EAGC,EAHDA,OACAxZ,EAEC,EAFDA,KACAyZ,EACC,EADDA,WAEI7W,EAAUiJ,KACRgD,EAAUyG,cACZE,EAAiBzH,KACjB/L,EAAQsK,eAaR,EAAsBuE,oBAAS,GAAnC,oBAAK6I,EAAL,KAAaC,EAAb,KACIC,EACFtR,IACCsJ,EAASiI,WAAavR,IAA6C,IAArCsJ,EAASiI,SAASpJ,QAAQnI,IAE3D,MAAa,UAATtI,EAEA,cAAC+D,EAAA,EAAD,CACElB,UAAW2J,IAAW5J,EAAQgW,SAAUhW,EAAQqW,aAA3B,eAClBrW,EAAQkW,gBAAkBxL,IAF/B,SAKGvU,IAIM,YAATiH,EAEA,mCACG8S,GAAc2G,IAAe,cAAChC,GAAA,EAAD,CAAS5U,UAAWD,EAAQsW,YAG5D5Q,GAAQA,EAAK2I,SAAS,QAEtB,cAAC6I,GAAA,EAAD,CACE/T,QAAM,EACNlD,UAAWD,EAAQ0F,KACnB1F,QAAS,CACP6C,KAAM+G,IAAW5J,EAAQmX,UAAT,mBACbnX,EAAQ4V,WAAaoB,IAAiBJ,GADzB,cAEb5W,EAAQ6V,WAAae,GAFR,KAKlBQ,eAAa,EATf,SAWE,sBAAKnX,UAAWD,EAAQ2V,aAAc1G,KAAMvJ,EAA5C,UACE,cAAC2R,GAAA,EAAD,CACEpX,UAAW2J,IAAW5J,EAAQ8V,SAAT,eAClB9V,EAAQ+V,eAAiBiB,IAF9B,SAKGJ,EAAS,cAACF,GAAD,CAAKrV,MAAO2V,GAAgB,YAAgB/T,IAExD,cAACqU,GAAA,EAAD,CACEtX,QAAS,CACPwB,QAASoI,IAAW5J,EAAQgW,UAAT,mBAChBhW,EAAQiW,eAAiBe,GADT,cAEhBhX,EAAQkW,gBAAkBxL,GAFV,KAKrBlJ,QAASrL,SAMdiT,EA0CH,mCACG8G,GAAc2G,IACb,qCACE,cAACK,GAAA,EAAD,CACE/T,QAAM,EACNnH,UAAW0J,GAAQ6R,IACnBjW,QAmDV,SAAwB+S,GAClB3J,IACF2J,EAAEmD,iBACFT,GAAWD,KArDL7W,UAAWD,EAAQ0F,KACnB+R,GAAI/R,EACJ0R,eAAa,EANf,SAQE,uBAAMnX,UAAWD,EAAQ2V,aAAzB,UACE,cAAC0B,GAAA,EAAD,CACEpX,UAAW2J,IAAW5J,EAAQ8V,SAAT,eAClB9V,EAAQ+V,eAAiBiB,IAF9B,SAKG/T,GAAc,cAACyU,GAAA,EAAD,MAEjB,cAACJ,GAAA,EAAD,CACEtX,QAAS,CACPwB,QAASoI,IAAW5J,EAAQgW,UAAT,mBAChBhW,EAAQiW,eAAiBe,GADT,cAEhBhX,EAAQkW,gBAAkBxL,GAFV,KAKrBlJ,QAASrL,SAIdiT,GACC,cAACuO,GAAA,EAAD,CACEtX,GAAIyW,GAAUpM,EACdkN,QAAQ,OACRC,eAAa,EACb5X,UAAWD,EAAQoW,WAJrB,SAME,cAAC0B,GAAA,EAAD,CAAM9b,UAAU,MAAM+b,gBAAc,EAApC,SACG3O,EAASjJ,KAAI,SAAC6X,GAAD,OACZ,cAACrB,GAAD,aAEE3H,SAAUA,EACVtE,gBAAiBA,EACjBkM,QAAM,GACFoB,GAJCA,GAAgBA,EAAatS,kBAhFhD,mCACGwK,GAAc2G,IACb,cAACK,GAAA,EAAD,CACE/T,QAAM,EACNlD,UAAWD,EAAQ0F,KACnB1F,QAAS,CACP6C,KAAM+G,IAAW5J,EAAQmX,UAAT,mBACbnX,EAAQ4V,WAAaoB,IAAiBJ,GADzB,cAEb5W,EAAQ6V,WAAae,GAFR,KAKlBQ,eAAa,EACb9V,QAAS,YAjFH,SAACoE,GACfuG,EAAQQ,KAAK/G,GACKqJ,OAAOkJ,WACH7Y,EAAM2G,YAAYmS,OAAOC,IAI7C/M,GAAcwH,GA2ENtR,CAAQoE,IAXZ,SAcE,uBAAMzF,UAAWD,EAAQ2V,aAAzB,UACE,cAAC0B,GAAA,EAAD,CACEpX,UAAW2J,IAAW5J,EAAQ8V,SAAT,eAClB9V,EAAQ+V,eAAiBiB,IAF9B,SAKGJ,EAAS,cAACF,GAAD,CAAKrV,MAAO2V,GAAgB,YAAgB/T,IAExD,cAACqU,GAAA,EAAD,CACEtX,QAAS,CACPwB,QAASoI,IAAW5J,EAAQgW,UAAT,mBAChBhW,EAAQiW,eAAiBe,GADT,cAEhBhX,EAAQkW,gBAAkBxL,GAFV,KAKrBlJ,QAASrL,WC5HzB,IAAMiiB,GAAY,CAChB,CACEhH,GAAI,EACJjb,MAAO,6CACPuP,KAAM,iBACNzC,KAAM,mBAAGhD,UAAU,uBAAb,kBACN4W,WAAYwB,EAAU7e,gBAAgB4W,MAExC,CACEgB,GAAI,EACJjb,MAAO,uCACPuP,KAAM,oBACNzC,KAAM,mBAAGhD,UAAU,uBAAb,yBACN4W,WAAYwB,EAAU7e,gBAAgBgB,cAExC,CACE4W,GAAI,EACJjb,MAAO,8CACPuP,KAAM,kBACNzC,KAAM,mBAAGhD,UAAU,uBAAb,wBACN4W,WAAYwB,EAAU7e,gBAAgBmB,YAExC,CACEyW,GAAI,EACJjb,MAAO,8CACPuP,KAAM,iBACNzC,KAAM,mBAAGhD,UAAU,uBAAb,oCACN4W,WAAYwB,EAAU7e,gBAAgB6B,gBAExC,CACE+V,GAAI,EACJhU,KAAM,UACNyZ,WAAYwB,EAAU7e,gBAAgB2B,cAExC,CACEiW,GAAI,EACJjb,MAAO,oDACP8M,KAAM,mBAAGhD,UAAU,uBAAb,qBACN4W,WAAYwB,EAAU7e,gBAAgB2B,aACtCiO,SAAU,CACR,CAAEjT,MAAO,iEAAgBuP,KAAM,8BAC/B,CAAEvP,MAAO,gEAAeuP,KAAM,8BAC9B,CAAEvP,MAAO,gEAAeuP,KAAM,iCAGlC,CACE0L,GAAI,EACJhU,KAAM,UACNyZ,WACEwB,EAAU7e,gBAAgByB,cAC1Bod,EAAU7e,gBAAgBgC,aAE9B,CACE4V,GAAI,EACJjb,MAAO,sEACP8M,KAAM,mBAAGhD,UAAU,uBAAb,6BACN4W,WACEwB,EAAU7e,gBAAgByB,cAC1Bod,EAAU7e,gBAAgBgC,YAC5B4N,SAAU,CACR,CAAEjT,MAAO,wCAAWuP,KAAM,8BAC1B,CAAEvP,MAAO,mFAAmBuP,KAAM,iCAClC,CAAEvP,MAAO,mFAAmBuP,KAAM,kCAClC,CACEvP,MAAO,qDACPuP,KAAM,mBACNmR,WAAYwB,EAAU7e,gBAAgByB,cAExC,CACE9E,MAAO,gGACPuP,KAAM,qBACNmR,WAAYwB,EAAU7e,gBAAgB4W,MAExC,CACEja,MAAO,2DACPuP,KAAM,iBACNmR,WAAYwB,EAAU7e,gBAAgB4W,QAI5C,CACEgB,GAAI,EACJhU,KAAM,UACNyZ,WACEwB,EAAU7e,gBAAgBO,eAC1Bse,EAAU7e,gBAAgBI,WAC1Bye,EAAU7e,gBAAgBa,eAC1Bge,EAAU7e,gBAAgBW,aAE9B,CACEiX,GAAI,EACJjb,MAAO,iCACP8M,KAAM,mBAAGhD,UAAU,uBAAb,4BAMNmJ,SAAU,CACR,CACEjT,MAAO,6CACPuP,KAAM,iBACNmR,WAAYwB,EAAU7e,gBAAgBI,WAExC,CACEzD,MAAO,6CACPuP,KAAM,qBACNmR,WAAYwB,EAAU7e,gBAAgBO,eAExC,CACE5D,MAAO,iCACPuP,KAAM,qBACNmR,WAAYwB,EAAU7e,gBAAgBa,eAExC,CACElE,MAAO,mDACPuP,KAAM,mBACNmR,WAAYwB,EAAU7e,gBAAgBU,eAK5C,CAAEkX,GAAI,GAAIhU,KAAM,UAAWyZ,WAAYwB,EAAU7e,gBAAgB4W,MACjE,CACEgB,GAAI,GACJjb,MAAO,4DACPuP,KAAM,eACNzC,KAAM,mBAAGhD,UAAU,uBAAb,uCACN4W,WAAYwB,EAAU7e,gBAAgBC,iBAGxC,CACE2X,GAAI,GACJjb,MAAO,kEACPuP,KAAM,gBACNzC,KAAM,mBAAGhD,UAAU,uBAAb,sBACN4W,WAAYwB,EAAU7e,gBAAgB4W,OAmF3BkI,oBAxEf,YAAgC,IAAD,IAAZtJ,EAAY,EAAZA,SACbhP,EAAUiJ,KACV7J,EAAQsK,eAGNgB,EAAoBK,KAApBL,gBACFkI,EAAiBzH,KAGjB,EAA8B8C,oBAAS,GAA3C,oBAAKsK,EAAL,KAAkBC,EAAlB,KAUA,OARA/E,qBAAU,WAGR,OAFA1E,OAAO0J,iBAAiB,SAAUC,GAClCA,IACO,WACL3J,OAAO4J,oBAAoB,SAAUD,OAKvC,eAACE,GAAA,EAAD,CACE5Z,QAASuZ,EAAc,YAAc,YACrCtY,UAAW4T,IAAW7T,EAAQkG,QAAT,mBAClBlG,EAAQuV,WAAa7K,GADH,cAElB1K,EAAQwV,aAAe9K,GAFL,IAIrB1K,QAAS,CACP+C,MAAO8Q,KAAU,mBACd7T,EAAQuV,WAAa7K,GADP,cAEd1K,EAAQwV,aAAe9K,GAFT,KAKnB9L,KAAM8L,EAZR,UAcE,qBAAKzK,UAAWD,EAAQyF,UACxB,qBAAKxF,UAAWD,EAAQyV,iBAAxB,SACE,cAAC7B,GAAA,EAAD,CAAYtS,QAAS,kBAAM8J,GAAcwH,IAAzC,SACE,cAACkB,GAAA,EAAD,CACE9T,QAAS,CACP6C,KAAMgR,IAAW7T,EAAQ4H,WAAY5H,EAAQ6H,2BAKrD,cAACiQ,GAAA,EAAD,CAAM7X,UAAWD,EAAQ6Y,YAAzB,SACGT,GAAUjY,KAAI,SAACuF,GAAD,OACb,cAACiR,GAAD,aAEE3H,SAAUA,EACVtE,gBAAiBA,GACbhF,GAHCA,EAAK0L,YAWpB,SAASsH,IACP,IAEII,EAFc/J,OAAOkJ,WACH7Y,EAAM2G,YAAYmS,OAAOC,GAG3CW,GAAiBP,GACnBC,GAAa,GACbpN,GAAcwH,IACJkG,GAAkBP,GAC5BC,GAAa,O,oLCnOJrZ,gBAAW,SAACC,GAAD,YAAY,CACpC2Z,YAAU,mBACP3Z,EAAM2G,YAAY2P,KAAK,MAAQ,CAC9BjN,OAAQ,WAFF,cAIR,UAAW,CACTnJ,QAAS,cALH,GAQV0Z,WAAY,CACVxZ,QAAS,OACT4H,cAAe,SACfvG,SAAU,YAEZoY,KAAM,CACJnU,UAAW,OACXtF,QAAS,OACT4H,cAAe,UAEjB8R,sBAAuB,CACrB1Z,QAAS,OACTE,WAAY,SACZiF,SAAU,EACVwU,cAAe/Z,EAAMwF,QAAQ,IAE/BwU,gBAAiB,CACf1Q,aAActJ,EAAMwF,QAAQ,IAE9ByU,cAAe,CACb3Q,aAActJ,EAAMwF,QAAQ,IAE9B0U,SAAU,CACR5Q,aAActJ,EAAMwF,QAAQ,GAC5B5D,gBAAiB,sBAEnBuY,sBAAuB,CACrBhW,OAAQ,OACR/D,QAAS,OACT4H,cAAe,SACf3H,eAAgB,SAChBC,WAAY,WACZkG,YAAaxG,EAAMwF,QAAQ,IAE7B4U,oBAAqB,CACnBha,QAAS,OACTE,WAAY,SACZgJ,aAActJ,EAAMwF,QAAQ,IAE9B6U,eAAgB,CACdja,QAAS,OACTmF,SAAU,EACVyC,cAAe,SACf3H,eAAgB,iBAElBia,YAAa,CACXna,UAAW,QAEboa,mBAAoB,CAClB3Y,gBAAiB5B,EAAMQ,QAAQ4B,QAAQQ,MAEzC4X,qBAAsB,CACpB5Y,gBAAiB5B,EAAMQ,QAAQ6B,UAAUO,MAE3C6X,yBAA0B,CACxBra,QAAS,OACTmF,SAAU,EACVjF,WAAY,SACZgJ,aAActJ,EAAMwF,QAAQ,IAE9BkV,cAAe,CACbta,QAAS,OACTE,WAAY,SACZkG,YAAaxG,EAAMwF,QAAQ,IAE7BmV,kBAAmB,CACjBjW,WAAY1E,EAAMwF,QAAQ,IAE5BoV,sBAAuB,CACrBxa,QAAS,OACTE,WAAY,SACZ+E,SAAU,QAEZwV,0BAA2B,CACzBlS,SAAU,IACV3B,aAAchH,EAAMwF,QAAQ,IAE9BsV,kCAAmC,CACjCrV,MAAO,QAETsV,cAAe,CACb5a,UAAW,QAEb6a,gBAAgB,aACdvV,MAAO,OACPrF,QAAS,OACTE,WAAY,SACZD,eAAgB,iBACfL,EAAM2G,YAAY2P,KAAK,MAAQ,CAC9B2E,SAAU,SAGdC,sBAAsB,aACpB9a,QAAS,OACTE,WAAY,UACXN,EAAM2G,YAAY2P,KAAK,MAAQ,CAC9B6E,MAAO,EACP1V,MAAO,OACPpF,eAAgB,SAChB6H,UAAWlI,EAAMwF,QAAQ,GACzB8D,aAActJ,EAAMwF,QAAQ,KAGhC4V,qBAAsB,CACpBhb,QAAS,OACTE,WAAY,SACZoE,WAAY1E,EAAMwF,QAAQ,IAE5B6V,oBAAqB,CACnBC,YAAatb,EAAMQ,QAAQ7D,KAAKqG,KAAO,iBAEzCuY,gBAAiB,CACfrb,QAAS,GACT8G,aAAc,IAEhBwU,uBAAwB,CACtBjX,SAAU,kBACVG,WAAY1E,EAAMwF,QAAQ,IAE5BjD,QAAS,CACPX,gBAAiB5B,EAAMQ,QAAQ+B,QAAQK,KACvCX,MAAO,QAETK,QAAS,CACPV,gBAAiB5B,EAAMQ,QAAQ8B,QAAQM,KACvCX,MAAO,QAETI,UAAW,CACTT,gBAAiB5B,EAAMQ,QAAQ6B,UAAUO,KACzCX,MAAO,Y,UC1IIlC,gBAAW,SAAAC,GAAK,MAAK,CAClCyb,cAAe,CACbrb,QAAS,OACTsF,UAAW,QAEbgW,aAAc,CACZxb,QAASF,EAAMwF,QAAQ,GACvBuU,cAAe/Z,EAAMwF,QAAQ,GAC7BpF,QAAS,OACTC,eAAgB,gBAChBC,WAAY,UAEdqb,WAAY,CACVpa,UAAWvB,EAAMmD,cAAcC,QAEjCwY,WAAY,CACV7B,cAAe/Z,EAAMwF,QAAQ,GAC7BwB,aAAchH,EAAMwF,QAAQ,GAC5BnB,YAAarE,EAAMwF,QAAQ,IAE7BqW,UAAW,CACT3b,QAAS,GAEXyD,MAAO,CACLvD,QAAS,OACT4H,cAAe,SACfzC,SAAU,EACVuW,SAAU,QAEZC,WAAY,CACV1S,QAASrJ,EAAMwF,QAAQ,GACvBtF,QAAS,EACTuF,MAAO,GACPtB,OAAQ,GACRlC,MAAOjC,EAAMQ,QAAQ7D,KAAKqG,KAC1B,UAAW,CACTpB,gBAAiB5B,EAAMQ,QAAQ4B,QAAQQ,KACvCX,MAAO,8BAGX+Z,eAAgB,CACdza,UAAW,Y,0IC7BA,SAAS0a,GAAT,GAYX,IAAD,IAXDjS,EAWC,EAXDA,SACAnN,EAUC,EAVDA,MACAqf,EASC,EATDA,cACAC,EAQC,EARDA,UAEAC,GAMC,EAPDC,kBAOC,EANDD,QACAE,EAKC,EALDA,gBACAC,EAIC,EAJDA,YACAjb,EAGC,EAHDA,MACA0a,EAEC,EAFDA,eAGIpb,GADH,kBACaiJ,MAGV,EAAoCgF,mBAAS,MAAjD,oBAAK2N,EAAL,KACI,GADJ,KACwC3N,oBAAS,IAAjD,oBAAK4N,EAAL,KAAqBC,EAArB,KAEA,OACE,sBAAK7b,UAAWD,EAAQ6a,cAAena,MAAOA,GAAK,eAASA,GAA5D,UACE,eAACqb,GAAA,EAAD,CACE9b,UAAWD,EAAQ+C,MACnB/C,QAAS,CACP6C,KAAM+G,IAAW5J,EAAQ+a,WAAT,eACb/a,EAAQob,eAAiBA,KAJhC,UAQE,qBACEnb,UAAW2J,IAAW5J,EAAQ8a,cAAT,mBAClB9a,EAAQib,UAAYS,GADF,cAElBC,EAAcA,GAFI,IADvB,SAMGH,GAGC,eAAC,IAAMQ,SAAP,WACE,cAAC7a,EAAA,EAAD,CAAYnC,QAAQ,KAAKqC,MAAM,gBAAgB4a,QAAM,EAArD,SACGhgB,KAEF,OAeP,qBACEgE,UAAW2J,IAAW5J,EAAQgb,YAAT,mBAClBhb,EAAQib,UAAYK,GADF,cAElBC,EAAYA,GAFM,IADvB,SAMGnS,OAGL,eAACoL,GAAA,EAAD,CACEpD,GAAG,cACHxS,KAAMid,EACNnH,SAAUkH,EACV9c,QAAS,kBAAMgd,GAAgB,IAC/BlH,sBAAoB,EALtB,UAOE,cAACE,GAAA,EAAD,UACE,cAAC3T,EAAA,EAAD,qBAEF,cAAC2T,GAAA,EAAD,UACE,cAAC3T,EAAA,EAAD,qBAEF,cAAC2T,GAAA,EAAD,UACE,cAAC3T,EAAA,EAAD,uBAEF,cAAC2T,GAAA,EAAD,UACE,cAAC3T,EAAA,EAAD,4BC7FV,IAAM8H,GAAY9J,aAAW,SAACC,GAAD,MAAY,CACvCyD,KAAM,CACJhC,SAAU,WACVqa,SAAU,SACV3X,OAAQ,OACRjE,QAAS,GACTwF,UAAW,IACX6B,OAAQ,UACR3B,WAAY,WACZhE,gBAAiB,SAACsI,GAAD,OAAWA,EAAMjI,QAEpC4B,KAAM,CACJpC,SAAU,WACVqb,QAAS,GACTjb,MAAO,GACP0C,SAAU,IACVtC,MAAOjC,EAAMQ,QAAQC,KAAK,UAIf,SAASsc,GAAY7S,GAClC,IAAMtJ,EAAUiJ,GAAUK,GAE1B,OACE,eAACyS,GAAA,EAAD,CAAO9b,UAAWD,EAAQ6C,KAAMvB,QAASgI,EAAMhI,QAASZ,MAAO4I,EAAM5I,MAArE,UACE,mBAAGT,UAAW4T,IAAW,uBAAwB7T,EAAQiD,MAAzD,SACGqG,EAAMrG,OAERqG,EAAMF,Y,kCCWPgT,GAAS7M,KAAK8M,GAAK,IACnBC,GAAwB,SAAC,GAQxB,IAPLC,EAOI,EAPJA,GACAC,EAMI,EANJA,GACAC,EAKI,EALJA,SACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,QAGMC,GADF,EADJC,MAEeJ,EAA4C,IAA7BC,EAAcD,IACtCK,EAAIR,EAAKM,EAAStN,KAAKyN,KAAKP,EAAWL,IACvCa,EAAIT,EAAKK,EAAStN,KAAK2N,KAAKT,EAAWL,IAE7C,OACE,sBACEW,EAAGA,EACHE,EAAGA,EACHE,KAAK,QACLC,WAAYL,EAAIR,EAAK,QAAU,MAC/Bc,iBAAiB,UALnB,mBAOMxN,IAAyB,IAAV+M,GAAeU,QAAQ,IAP5C,QAYEC,GAAsB,CAC1B,CACEC,QAAS,6CACTC,EAAG,KAEL,CACED,QAAS,mDACTC,EAAG,IAEL,CACED,QAAS,iCACTC,EAAG,IAEL,CACED,QAAS,qBACTC,EAAG,IAEL,CACED,QAAS,iCACTC,EAAG,IAEL,CACED,QAAS,uCACTC,EAAG,IAEL,CACED,QAAS,qBACTC,EAAG,IAEL,CACED,QAAS,2BACTC,EAAG,KAEL,CACED,QAAS,qBACTC,EAAG,IAEL,CACED,QAAS,eACTC,EAAG,IAEL,CACED,QAAS,2BACTC,EAAG,IAEL,CACED,QAAS,iCACTC,EAAG,KAIDC,GAAoB,CACxB,CAAE7f,KAAM,uCAAU3H,MAAO,GAAImL,MAAO,WACpC,CAAExD,KAAM,uCAAU3H,MAAO,EAAGmL,MAAO,YAGtB,SAASsc,GAAUrU,GAChC,IAAItJ,EAAUiJ,KACV7J,EAAQsK,eACNuC,EAAUyG,cAChB,EAAgCzE,mBAAS,IAAzC,oBAAO2P,EAAP,KAAiBC,EAAjB,KACA,EAAwC5P,mBAAS,IAAjD,oBAAO6P,EAAP,KAAqBC,EAArB,KACA,EAAsC9P,mBAAS,IAA/C,oBAAO+P,EAAP,KAAoBC,EAApB,KACA,EAAwDhQ,oBAAS,GAAjE,oBAAOiQ,EAAP,KAA6BC,EAA7B,KACA,EAAsDlQ,oBAAS,GAA/D,oBAAOmQ,EAAP,KAA4BC,EAA5B,KACA,EAA6DpQ,mBAC3DqQ,QADF,oBAAOC,EAAP,KAA+BC,EAA/B,KAGA,EAAyDvQ,mBAASqQ,QAAlE,oBAAOG,EAAP,KAA6BC,EAA7B,KACA,EAA+DzQ,mBAC7DqQ,QADF,oBAAOK,EAAP,KAAgCC,EAAhC,KAGA,EAA2D3Q,mBAASqQ,QAApE,oBAAOO,EAAP,KAA8BC,EAA9B,KAEM1L,EAAsBrF,GAAO,CACjCZ,OAAQ,MACRC,IAAI,qBAGA2R,EAAoBhR,GAAO,CAC/BZ,OAAQ,MACRC,IAAK8Q,EAAoB,mCACOS,EAAwBK,GAAGC,cADlC,eACsDJ,EAAsBG,GAAGC,cAD/E,KAErB,uBAGAC,EAAmBnR,GAAO,CAC9BZ,OAAQ,MACRC,IAAKgR,EAAmB,mCACQG,EAAuBS,GAAGC,cADlC,eACsDR,EAAqBO,GAAGC,cAD9E,KAEpB,uBAGAE,EAAe,SAAC/hB,GACpB6O,EAAQQ,KAAR,eAAqBrP,KAGjBgiB,EAAqB,SAAC/K,EAAGjX,GAChB,SAATA,EACFohB,EAA2BnK,GAE3BqK,EAAyBrK,IAIvBgL,EAAsB,SAAChL,EAAGjX,GACjB,SAATA,EACFwhB,EAA4BvK,GAE5ByK,EAA0BzK,IAIxBiL,EAAe,yCAAG,iCAAAlT,EAAA,sEACOgH,EAAoB/G,UAD3B,OAChBkT,EADgB,OAEdC,EAAcD,EAAdC,UACFC,EAAe,GACZ,OAATD,QAAS,IAATA,KAAWrf,KAAI,SAACvC,GACd6hB,EAAahT,KAAb,2BAAuB7O,GAAvB,IAA6ByD,MAAOgO,WAEtCwO,EAAY4B,GAPU,2CAAH,qDAUfC,EAAe,yCAAG,+BAAAtT,EAAA,sEACF2S,EAAkB1S,UADhB,OAChBsT,EADgB,OAEdC,EAAaD,EAAbC,SACR7B,EAAgB6B,GAHM,2CAAH,qDAMfC,GAAc,yCAAG,+BAAAzT,EAAA,sEACD8S,EAAiB7S,UADhB,OACfsT,EADe,OAEbG,EAAaH,EAAbG,SACR7B,EAAe6B,GAHM,2CAAH,qDAkBpB,OAZArM,qBAAU,WACR6L,MACC,IAEH7L,qBAAU,WACRiM,MACC,CAACf,EAAyBE,IAE7BpL,qBAAU,WACRoM,OACC,CAACtB,EAAwBE,IAG1B,qCACE,eAACne,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAGlE,MAAO,CAAEgI,aAAc,IAAnD,UACGwH,GAAcpa,EAAS0D,gBAAgB4B,eACtC,cAACkF,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAG5H,GAAI,EAAG3X,GAAI,EAAGD,GAAI,GAApC,SACE,cAAC,GAAD,CACE0C,KAAK,kBACL3B,QAAS,WACP6d,EAAa,4BAHjB,SAME,qBAAKlf,UAAWD,EAAQgZ,WAAxB,SACE,cAAC,GAAD,CAAYha,QAAQ,KAApB,+DAKPkR,GAAcpa,EAAS0D,gBAAgB4B,eACtC,cAACkF,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAG5H,GAAI,EAAG3X,GAAI,EAAGD,GAAI,GAApC,SACE,cAAC,GAAD,CACE0C,KAAK,OACL3B,QAAS,WACP6d,EAAa,6BAHjB,SAME,qBAAKlf,UAAWD,EAAQgZ,WAAxB,SACE,cAAC,GAAD,CAAYha,QAAQ,KAApB,+DAKPkR,GAAcpa,EAAS0D,gBAAgB4B,eACtC,cAACkF,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAG5H,GAAI,EAAG3X,GAAI,EAAGD,GAAI,GAApC,SACE,cAAC,GAAD,CACE0C,KAAK,gBACL3B,QAAS,WACP6d,EAAa,+BAHjB,SAME,qBAAKlf,UAAWD,EAAQgZ,WAAxB,SACE,cAAC,GAAD,CAAYha,QAAQ,KAApB,2EAKPkR,GAAcpa,EAAS0D,gBAAgB0B,eACtC,cAACoF,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAG5H,GAAI,EAAG3X,GAAI,EAAGD,GAAI,GAApC,SACE,cAAC,GAAD,CACE0C,KAAK,YACL3B,QAAS,WACP6d,EAAa,gCAHjB,SAME,qBAAKlf,UAAWD,EAAQgZ,WAAxB,SACE,cAAC,GAAD,CAAYha,QAAQ,KAApB,8EAMV,eAACsB,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAGlE,MAAO,CAAEgI,aAAc,IAAnD,UACGwH,GAAcpa,EAAS0D,gBAAgB4B,eACtC,cAACkF,EAAA,EAAD,CAAM1C,MAAI,EAACua,GAAI,EAAG5X,GAAI,EAAtB,SACE,cAAC,GAAD,CACEG,MAAO,CAAEM,gBAAiB,WAC1BiC,KAAK,OACL3B,QAAS,WACP6d,EAAa,2BAJjB,SAOE,qBAAKlf,UAAWD,EAAQgZ,WAAxB,SACE,cAAC,GAAD,CAAYha,QAAQ,KAAK0B,MAAO,CAAEW,MAAO,WAAzC,0GAOP6O,GAAcpa,EAAS0D,gBAAgB4B,eACtC,cAACkF,EAAA,EAAD,CAAM1C,MAAI,EAACua,GAAI,EAAG5X,GAAI,EAAtB,SACE,cAAC,GAAD,CACEG,MAAO,CAAEM,gBAAiB,WAC1BiC,KAAK,OACL3B,QAAS,WACP6d,EAAa,0BAJjB,SAOE,qBAAKlf,UAAWD,EAAQgZ,WAAxB,SACE,cAAC,GAAD,CAAYha,QAAQ,KAAK0B,MAAO,CAAEW,MAAO,WAAzC,0GAOP6O,GAAcpa,EAAS0D,gBAAgBE,kBACtC,cAAC4G,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAAC,GAAD,CACE0C,KAAK,4BACL3B,QAAS,WACP6d,EAAa,YAHjB,SAME,sBACElf,UAAWD,EAAQgZ,WACnBtY,MAAO,CACL0G,cAAe,MACf3H,eAAgB,iBAJpB,UAOE,gCACE,cAAC,GAAD,CAAY4B,MAAM,SAASrC,QAAQ,KAAnC,sEAGA,sBACEiB,UAAWD,EAAQ6Z,yBACnBnZ,MAAO,CAAE4G,UAAW,IAFtB,UAIE,sBAAKrH,UAAWD,EAAQ8Z,cAAxB,UACE,cAACpD,GAAD,CAAKrV,MAAM,cACX,cAAC,GAAD,CACEA,MAAM,OACNgI,gBAAgB,YAChBpJ,UAAWD,EAAQ+Z,kBAHrB,qDAQF,sBAAK9Z,UAAWD,EAAQ8Z,cAAxB,UACE,cAACpD,GAAD,CAAKrV,MAAM,YACX,cAAC,GAAD,CACEA,MAAM,OACNgI,gBAAgB,YAChBpJ,UAAWD,EAAQ+Z,kBAHrB,2DAUN,eAACiG,GAAA,EAAD,CAAUnb,MAAO,IAAKtB,OAAQ,IAA9B,UACE,cAAC0c,GAAA,EAAD,CACEvjB,KAAMghB,GACNnB,GAAI,IACJC,GAAI,IACJ0D,WAAY,IACZC,SAAU,EACVzD,YAAa,GACbC,YAAa,GACbQ,KAAK,UACLiD,aAAc,EACdC,QAAQ,QAVV,SAYG3C,GAAkBvd,KAAI,SAACmgB,EAAOxD,GAAR,OACrB,cAACyD,GAAA,EAAD,CAA4BpD,KAAMmD,EAAMjf,OAAxC,eAAmByb,SAGvB,cAAC,KAAD,cAKP,OAEL,eAACxc,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAGlE,MAAO,CAAEgI,aAAc,IAAnD,UACGwH,GAAcpa,EAAS0D,gBAAgBC,kBACtC,cAAC6G,EAAA,EAAD,CAAMI,MAAO,CAAE6C,OAAQ,KAAO3F,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAA9C,SACE,cAAC8a,GAAD,CACEpf,MAAM,yFACNukB,YAAU,EACVjF,UAAWvb,EAAQyZ,eACnBxZ,UAAWD,EAAQiZ,KAJrB,SAME,cAACwH,GAAA,EAAD,CAAqB5b,MAAM,OAAOtB,OAAO,OAAzC,SACE,eAACmd,GAAA,EAAD,CACEnE,GAAG,MACHC,GAAG,MACHG,YAAY,MACZjgB,KAAM6gB,GAJR,UAME,cAACoD,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,CAAgBP,QAAQ,YACxB,cAACQ,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,CACEjjB,KAAK,OACLwiB,QAAQ,IACRU,OAAO,UACP5D,KAAK,UACL6D,YAAa,cAOxB9Q,GAAcpa,EAAS0D,gBAAgB6B,iBACtC,cAACiF,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAAC8a,GAAD,CAAQpf,MAAM,mFAAkBukB,YAAU,EAACvgB,UAAWD,EAAQiZ,KAA9D,SACE,eAAC3Y,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAzB,UACGgZ,EAAS9P,QACR,cAACxN,EAAA,EAAD,CAAM1C,MAAI,EAAC4C,GAAI,EAAGD,GAAI,GAAtB,SACE,qBAAKG,MAAO,CAAEmE,MAAO,OAAQtB,OAAQ,SAArC,SACE,qBAAK7C,MAAO,CAAEmE,MAAO,OAAQtB,OAAQ,QAArC,SACE,cAACkd,GAAA,EAAD,CAAqB5b,MAAM,OAAOtB,OAAO,OAAzC,SACE,cAACyc,GAAA,EAAD,CAAUnb,MAAM,MAAMtB,OAAO,MAA7B,SACE,cAAC0c,GAAA,EAAD,CACEvjB,KAAMkhB,EACNrB,GAAG,MACHC,GAAG,MACHyE,WAAW,EACX9qB,MAAOmmB,GACPK,YAAa,IACbQ,KAAK,UACLkD,QAAQ,SARV,SAUGzC,EAASzd,KAAI,SAACmgB,EAAOxD,GAAR,OACZ,cAACyD,GAAA,EAAD,CAEEpD,KAAMmD,EAAMjf,OAFd,eACeyb,mBAW/B,cAACxc,EAAA,EAAD,CAAM1C,MAAI,EAAC4C,GAAI,EAAGD,GAAI,GAAtB,SACE,qBAAKN,UAAWD,EAAQuZ,sBAAxB,SACGqE,EAASzd,KAAI,WAA0B2c,GAA1B,IAAGjf,EAAH,EAAGA,KAAMqjB,EAAT,EAASA,OAAQ7f,EAAjB,EAAiBA,MAAjB,OACZ,sBAAiBpB,UAAWD,EAAQwZ,oBAApC,UACE,cAAC9C,GAAD,CAAKrV,MAAOA,IACZ,eAAC,GAAD,CACErC,QAAQ,KACR0B,MAAO,CAAEoF,WAAY,UAFvB,iBAISjI,EAJT,UAMA,eAAC,GAAD,CACEwD,MAAM,OACNrC,QAAQ,KACRqK,gBAAgB,YAHlB,iBAKSwG,GAAcqR,QAbf7f,iBAwBvB6O,GAAcpa,EAAS0D,gBAAgByB,eACtC,cAACqF,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAAC8a,GAAD,CACEE,UAAWvb,EAAQma,cACnBqB,OACE,sBAAKvb,UAAWD,EAAQoa,gBAAxB,UACE,cAAC,GAAD,CACEpb,QAAQ,KACRqC,MAAM,OACNgI,gBAAgB,YAHlB,uHAQC6U,GACC,qCACE,cAAC5d,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAIN,UAAWD,EAAQ+Y,WAA7C,SACE,cAACoI,GAAA,EAAD,CACEC,QAAM,EACNvjB,KAAK,OACL1H,MAAM,8CACNkrB,aAAa,WACbC,QAAQ,iCACRC,YAAY,qBACZC,UAAW,SAAC/O,GAAD,OACTA,EAAOA,EAAKyB,OAAO,iBAAmB,IAExChe,MAAOyoB,EACPlN,SAAU,SAAC4C,GAAD,OAAOgL,EAAoBhL,EAAG,SACxC3T,MAAO,CAAEmE,MAAO,YAGpB,cAACvE,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAIN,UAAWD,EAAQ+Y,WAA7C,SACE,cAACoI,GAAA,EAAD,CACEC,QAAM,EACNvjB,KAAK,OACL1H,MAAM,8CACNkrB,aAAa,WACbC,QAAQ,iCACRC,YAAY,qBACZC,UAAW,SAAC/O,GAAD,OACTA,EAAOA,EAAKyB,OAAO,iBAAmB,IAExChe,MAAO2oB,EACPpN,SAAU,SAAC4C,GAAD,OAAOgL,EAAoBhL,EAAG,OACxC3T,MAAO,CAAEmE,MAAO,eAKxB,sBAAK5E,UAAWD,EAAQsa,sBAAxB,UACE,sBAAKra,UAAWD,EAAQwa,qBAAxB,UACE,cAAC9D,GAAD,CAAKrV,MAAM,YACX,cAAC,GAAD,CAAYpB,UAAWD,EAAQ4a,uBAA/B,2DAIF,sBAAK3a,UAAWD,EAAQwa,qBAAxB,UACE,cAAC9D,GAAD,CAAKrV,MAAM,cACX,cAAC,GAAD,CAAYpB,UAAWD,EAAQ4a,uBAA/B,2DAIF,cAAC,KAAD,CAAY3e,MAAM,iCAAlB,SACE,cAAC2X,GAAA,EAAD,CACEtS,QAAS,kBACP6c,GAAyBD,IAF7B,SAKE,mBAAGuD,MAAM,uBAAT,kCAnEZ,SA0EE,cAAChB,GAAA,EAAD,CAAqB5b,MAAM,OAAOtB,OAAQ,IAA1C,SACE,eAACme,GAAA,EAAD,CACE7c,MAAO,IACPtB,OAAQ,IACR7G,KAAMohB,EACNrV,OAAQ,CACN1H,IAAK,EACLgG,MAAO,GACP9F,KAAM,GACNib,OAAQ,GARZ,UAWE,cAACyF,GAAA,EAAD,CAAeC,gBAAgB,QAC/B,cAACC,GAAA,EAAD,CAAOxB,QAAQ,SACf,cAACyB,GAAA,EAAD,IACA,cAAC,KAAD,IACA,cAACC,GAAA,EAAD,CACE3kB,KAAK,WACLijB,QAAQ,SACRU,OAAQ3hB,EAAMQ,QAAQ4B,QAAQQ,KAC9BggB,UAAW,CAAEC,EAAG,KAElB,cAACF,GAAA,EAAD,CACE3kB,KAAK,WACLijB,QAAQ,UACRU,OAAQ3hB,EAAMQ,QAAQ6B,UAAUO,gBAO3CkO,GAAcpa,EAAS0D,gBAAgB2B,eACtC,cAACmF,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAAC8a,GAAD,CACEE,UAAWvb,EAAQma,cACnBqB,OACE,sBAAKvb,UAAWD,EAAQoa,gBAAxB,UACE,cAAC,GAAD,CACEpb,QAAQ,KACRqC,MAAM,OACNgI,gBAAgB,YAHlB,wFAOC+U,GACC,qCACE,cAAC9d,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAIN,UAAWD,EAAQ+Y,WAA7C,SACE,cAACoI,GAAA,EAAD,CACEC,QAAM,EACNvjB,KAAK,OACL1H,MAAM,8CACNkrB,aAAa,WACbC,QAAQ,iCACRC,YAAY,qBACZC,UAAW,SAAC/O,GAAD,OACTA,EAAOA,EAAKyB,OAAO,iBAAmB,IAExChe,MAAOqoB,EACP9M,SAAU,SAAC4C,GAAD,OAAO+K,EAAmB/K,EAAG,SACvC3T,MAAO,CAAEmE,MAAO,YAGpB,cAACvE,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAIN,UAAWD,EAAQ+Y,WAA7C,SACE,cAACoI,GAAA,EAAD,CACEC,QAAM,EACNvjB,KAAK,OACL1H,MAAM,8CACNkrB,aAAa,WACbC,QAAQ,iCACRC,YAAY,qBACZC,UAAW,SAAC/O,GAAD,OACTA,EAAOA,EAAKyB,OAAO,iBAAmB,IAExChe,MAAOuoB,EACPhN,SAAU,SAAC4C,GAAD,OAAO+K,EAAmB/K,EAAG,OACvC3T,MAAO,CAAEmE,MAAO,eAKxB,sBAAK5E,UAAWD,EAAQsa,sBAAxB,UACE,sBAAKra,UAAWD,EAAQwa,qBAAxB,UACE,cAAC9D,GAAD,CAAKrV,MAAM,YACX,cAAC,GAAD,CAAYpB,UAAWD,EAAQ4a,uBAA/B,8EAIF,sBAAK3a,UAAWD,EAAQwa,qBAAxB,UACE,cAAC9D,GAAD,CAAKrV,MAAM,cACX,cAAC,GAAD,CAAYpB,UAAWD,EAAQ4a,uBAA/B,8EAIF,cAAC,KAAD,CAAY3e,MAAM,iCAAlB,SACE,cAAC2X,GAAA,EAAD,CACEtS,QAAS,kBACP+c,GAAwBD,IAF5B,SAKE,mBAAGqD,MAAM,uBAAT,kCAlEZ,SAyEGzD,EAAYlQ,QACX,qBAAKpN,MAAO,CAAEmE,MAAO,OAAQtB,OAAQ,SAArC,SACE,qBAAK7C,MAAO,CAAEmE,MAAO,OAAQtB,OAAQ,QAArC,SACE,cAACkd,GAAA,EAAD,CAAqB5b,MAAM,OAAOtB,OAAO,OAAzC,SACE,eAAC2e,GAAA,EAAD,CACErd,MAAO,IACPtB,OAAQ,IACR7G,KAAMshB,EACNvV,OAAQ,CACN1H,IAAK,EACLgG,MAAO,GACP9F,KAAM,GACNib,OAAQ,GARZ,UAWE,cAACyF,GAAA,EAAD,CAAeC,gBAAgB,QAC/B,cAACC,GAAA,EAAD,CAAOxB,QAAQ,SACf,cAACyB,GAAA,EAAD,IACA,cAAC,KAAD,IACA,cAACK,GAAA,EAAD,CAAK9B,QAAQ,MAAMlD,KAAK,YACxB,cAACgF,GAAA,EAAD,CAAK9B,QAAQ,OAAOlD,KAAK,+B,2EC3pBlC,SAASiF,GAAa9Y,GACnC,IAAQa,EAAyBb,EAAzBa,QAASkY,EAAgB/Y,EAAhB+Y,YACjB,EAAgC/X,IAAM2D,SAAS,MAA/C,oBAAOyG,EAAP,KAAiB4N,EAAjB,KACM1jB,EAAO6V,QAAQC,GAMfnW,EAAc,WAClB+jB,EAAY,OAQd,OACE,gCACE,cAAC1O,GAAA,EAAD,CACE,aAAW,OACX,gBAAc,YACd,gBAAc,OACdtS,QAnBc,SAAC9C,GACnB8jB,EAAY9jB,EAAM8V,gBAchB,SAME,cAAC,KAAD,MAEF,cAACE,GAAA,EAAD,CACEpD,GAAG,YACHsD,SAAUA,EACV6N,aAAW,EACX3jB,KAAMA,EACNE,QAASP,EACTikB,WAAY,CACV9hB,MAAO,CACL+hB,UAAWC,MARjB,SAYGvY,EAAQhK,KACP,SAAC1C,GAAD,OACGA,EAAOklB,QACN,cAAC7N,GAAA,EAAD,CAA0BxT,QAAS,kBA9BzBlE,EA8B4CK,EAAO2T,GA7BvEiR,EAAYjlB,QACZmB,IAFmB,IAACnB,GA8BV,SACGK,EAAOxB,OADKwB,EAAO2T,Y,kCCpC9BwR,GAAmBzjB,aAAW,SAACC,GAAD,MAAY,CAC9CyD,KAAM,CACJY,YAAarE,EAAMwF,QAAQ,GAC3BwB,aAAchH,EAAMwF,QAAQ,GAC5BpF,QAAS,OACTC,eAAgB,gBAChBC,WAAY,UAEdmjB,UACyB,UAAvBzjB,EAAMQ,QAAQxC,KACV,CACEiE,MAAOjC,EAAMQ,QAAQ6B,UAAUO,KAC/BhB,gBAAiB8hB,aAAQ1jB,EAAMQ,QAAQ6B,UAAU3B,MAAO,MAE1D,CACEuB,MAAOjC,EAAMQ,QAAQ7D,KAAKyF,QAC1BR,gBAAiB5B,EAAMQ,QAAQ6B,UAAUQ,MAEjD8gB,IAAK,CACHvjB,QAAS,OACTE,WAAY,cAwGDsjB,GApGE,SAAC1Z,GAChB,IAAMtJ,EAAU4iB,KAEd3mB,EAQEqN,EARFrN,MACAgnB,EAOE3Z,EAPF2Z,MACAC,EAME5Z,EANF4Z,gBACAC,EAKE7Z,EALF6Z,aACAC,EAIE9Z,EAJF8Z,aACAC,EAGE/Z,EAHF+Z,eACAC,EAEEha,EAFFga,QACAC,EACEja,EADFia,cAEF,EAA4CtV,qBAAWsV,GAAvD,oBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAA0CxV,oBAAS,GAAnD,oBAAOyV,EAAP,KAAsBC,EAAtB,KACA,EAAoC1V,mBAASsV,GAA7C,oBAAOK,EAAP,KAAmBC,EAAnB,KAkBA,OACE,qCACE,eAAClQ,GAAA,EAAD,CAAS1T,UAAWmS,aAAKpS,EAAQ6C,KAAMugB,GAAvC,UACE,cAACjiB,EAAA,EAAD,CAAYnC,QAAQ,KAAKoS,GAAG,aAAapV,UAAU,MAAnD,SACGC,IAEH,sBAAKgE,UAAWD,EAAQ+iB,IAAxB,UACGS,GACC,cAAC9R,GAAA,EAAD,CACExb,MAAO0tB,EACP1nB,KAAK,QACL/F,MAAM,iCACN6I,QAAQ,WACRyS,SA7BW,SAACjT,GACtB,IAAQtI,EAAUsI,EAAMslB,OAAhB5tB,MACR2tB,EAAc3tB,IA4BJ6tB,UAzBa,SAAC1P,GACV,UAAVA,EAAE5X,KACJ0mB,EAAaS,IAwBL3R,WAAY,CACVC,aACE,cAACC,GAAA,EAAD,CAAgBtR,SAAS,MAAzB,SACE,mBACEZ,UAAU,uBACVS,MAAO,CAAEiG,OAAQ,WACjBrF,QA1BG,WACrBuiB,EAAc,IACdV,EAAa,KAqBG,wBAYTA,GACC,cAACa,GAAA,EAAD,CAAS/nB,MAAM,uEAAf,SACE,cAAC2X,GAAA,EAAD,CACE,aAAW,cACXtS,QAAS,kBAAMmiB,GAAmBD,IAFpC,SAIE,cAAC,KAAD,QAILN,GACC,cAACc,GAAA,EAAD,CAAS/nB,MAAM,iCAAf,SACE,cAAC2X,GAAA,EAAD,CAAYtS,QAAS,kBAAMqiB,GAAkBD,IAA7C,SACE,mBAAGjC,MAAM,uBAAT,4BAKY,oBAAVwB,GACN,eAAC7hB,EAAA,EAAD,CACEpC,QAASskB,EAAU,GAAK,YACxBjiB,MAAOiiB,EAAU,GAAK,UACtBrjB,UAAWojB,EACX/hB,QAAS2hB,EAJX,UAMGK,EAAU,GAAK,uCAChB,sBAAM7B,MAAM,uBAAuB/gB,MAAO,CAAEW,MAAO,SAAnD,0BAOR,cAACsW,GAAA,EAAD,CAAUtX,GAAIqjB,EAAd,SAA8BR,Q,oBC7FrBe,OA/Bf,SAAqB3a,GACnB,IAAQiR,EAA6CjR,EAA7CiR,MAAO2J,EAAsC5a,EAAtC4a,QAASC,EAA6B7a,EAA7B6a,cAAeC,EAAc9a,EAAd8a,UAKvC,OACE,cAACC,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,UACGF,EAAUjkB,KAAI,SAACokB,GAAD,OACb,cAACC,GAAA,EAAD,CACE9jB,MAAO,CAAE+jB,UAAW,SAEpBnlB,QAAS,OACTolB,cAAeR,IAAYK,EAASnT,IAAKmJ,EAJ3C,SAME,cAACoK,GAAA,EAAD,CACE1kB,UAAW,CAAET,QAAS,QACtBolB,OAAQV,IAAYK,EAASnT,GAC7BrP,UAAWmiB,IAAYK,EAASnT,GAAKmJ,EAAQ,MAC7CjZ,SAlBeujB,EAkBYN,EAASnT,GAlBR,SAAC5S,GACvC2lB,EAAc3lB,EAAOqmB,KAab,SAME,cAAC1jB,EAAA,EAAD,CAAYnC,QAAQ,KAApB,SAA0BulB,EAASpuB,WAVhCouB,EAASnT,IAVE,IAACyT,U,UCoBdC,OA5Bf,SAAqBxb,GACnB,IACEyb,EAKEzb,EALFyb,iBACAC,EAIE1b,EAJF0b,MACAC,EAGE3b,EAHF2b,wBACAC,EAEE5b,EAFF4b,KACAC,EACE7b,EADF6b,YAEF,OACE,cAACC,GAAA,EAAD,CACE1kB,MAAO,CAAElB,QAAS,QAClB6lB,mBAAoB,CAAC,GAAI,GAAI,IAC7BrpB,UAAU,MACVgpB,MAAOA,EACPG,YAAaA,EACbD,KAAMA,EACNI,aAAcP,EACdQ,oBAAqBN,EACrBO,iBAAiB,2DACjBC,mBAAmB,8CACnBC,mBAAmB,8CACnBC,mBAAoB,gBAAGC,EAAH,EAAGA,KAAMnO,EAAT,EAASA,GAAIuN,EAAb,EAAaA,MAAb,gBACfY,EADe,YACPnO,EADO,0BACa,IAAXuN,EAAeA,EAAQ,OCxBpC7lB,gBAAW,SAACC,GAAD,MAAY,CACpCyD,KAAM,CACJgC,MAAO,QAET9B,MAAO,CACL8B,MAAO,OACP6D,aAActJ,EAAMwF,QAAQ,IAE9BihB,MAAO,CACL9d,SAAU,S,oBCIC,SAAS+d,GAAT,GAAwC,IAAdC,EAAa,EAAbA,UACvC,OACE,eAAChK,GAAA,EAAD,CAAOrb,MAAO,CAAEpB,QAAS,IAAzB,UACE,eAACgB,EAAA,EAAD,CACEjB,WAAS,EACTuF,QAAS,EACTlE,MAAO,CACLmE,MAAO,OACPrF,QAAS,OACTF,QAAS,SACTG,eAAgB,iBAPpB,UAUE,cAACa,EAAA,EAAD,CAAM1C,MAAI,EAAC8C,MAAO,CAAEmE,MAAM,OAA1B,SACE,cAACmhB,GAAA,EAAD,CAAUhnB,QAAQ,WAEpB,cAACsB,EAAA,EAAD,CAAM1C,MAAI,EAAC8C,MAAO,CAAEmE,MAAM,OAA1B,SACE,cAACmhB,GAAA,EAAD,CAAUhnB,QAAQ,cAGtB,cAACsB,EAAA,EAAD,CACEjB,WAAS,EACTuF,QAAS,EACTlE,MAAO,CAAEmE,MAAO,OAAQrF,QAAS,OAAQF,QAAS,UAHpD,SAKGymB,EAAU5lB,KAAI,SAACvC,GACd,OACE,cAAC0C,EAAA,EAAD,CAAM1C,MAAI,EAAC8C,MAAO,CAAEmE,MAAM,GAAD,OAAK,IAAMkhB,EAAUjY,OAArB,MAAzB,SACE,cAACkY,GAAA,EAAD,CAAUhnB,QAAQ,gBAK1B,cAAC6V,GAAA,EAAD,IACA,gCACE,cAACvU,EAAA,EAAD,CACEjB,WAAS,EACTuF,QAAS,EACTlE,MAAO,CAAEmE,MAAO,OAAQrF,QAAS,OAAQF,QAAS,UAHpD,SAKGymB,EAAU5lB,KAAI,SAACvC,GACd,OACE,cAAC0C,EAAA,EAAD,CAAM1C,MAAI,EAAC8C,MAAO,CAAEmE,MAAM,GAAD,OAAK,IAAMkhB,EAAUjY,OAArB,MAAzB,SACE,cAACkY,GAAA,EAAD,CACEhnB,QAAQ,OACR6F,MAAK,UAAK6K,GAAgB,GAAI,KAAzB,cAMf,cAACmF,GAAA,EAAD,IACA,cAACvU,EAAA,EAAD,CACEjB,WAAS,EACTuF,QAAS,EACTlE,MAAO,CAAEmE,MAAO,OAAQrF,QAAS,OAAQF,QAAS,UAHpD,SAKGymB,EAAU5lB,KAAI,SAACvC,GACd,OACE,cAAC0C,EAAA,EAAD,CAAM1C,MAAI,EAAC8C,MAAO,CAAEmE,MAAM,GAAD,OAAK,IAAMkhB,EAAUjY,OAArB,MAAzB,SACE,cAACkY,GAAA,EAAD,CACEhnB,QAAQ,OACR6F,MAAK,UAAK6K,GAAgB,GAAI,KAAzB,cAMf,cAACmF,GAAA,EAAD,IACA,cAACvU,EAAA,EAAD,CACEjB,WAAS,EACTuF,QAAS,EACTlE,MAAO,CAAEmE,MAAO,OAAQrF,QAAS,OAAQF,QAAS,UAHpD,SAKGymB,EAAU5lB,KAAI,SAACvC,GACd,OACE,cAAC0C,EAAA,EAAD,CAAM1C,MAAI,EAAC8C,MAAO,CAAEmE,MAAM,GAAD,OAAK,IAAMkhB,EAAUjY,OAArB,MAAzB,SACE,cAACkY,GAAA,EAAD,CACEhnB,QAAQ,OACR6F,MAAK,UAAK6K,GAAgB,GAAI,KAAzB,cAMf,cAACmF,GAAA,EAAD,IACA,cAACvU,EAAA,EAAD,CACEjB,WAAS,EACTuF,QAAS,EACTlE,MAAO,CAAEmE,MAAO,OAAQrF,QAAS,OAAQF,QAAS,UAHpD,SAKGymB,EAAU5lB,KAAI,SAACvC,GACd,OACE,cAAC0C,EAAA,EAAD,CAAM1C,MAAI,EAAC8C,MAAO,CAAEmE,MAAM,GAAD,OAAK,IAAMkhB,EAAUjY,OAArB,MAAzB,SACE,cAACkY,GAAA,EAAD,CACEhnB,QAAQ,OACR6F,MAAK,UAAK6K,GAAgB,GAAI,KAAzB,iBAOjB,cAACmF,GAAA,EAAD,IACA,cAACvU,EAAA,EAAD,CACEjB,WAAS,EACTuF,QAAS,EACTlE,MAAO,CAAEmE,MAAO,OAAQrF,QAAS,OAAQF,QAAS,UAHpD,SAKE,cAACgB,EAAA,EAAD,CAAM1C,MAAI,EAAC8C,MAAO,CAAEmE,MAAM,OAA1B,SACE,cAACmhB,GAAA,EAAD,CAAUhnB,QAAQ,gBCtG5B,IAAMolB,GAAY,CAChB,CACEhT,GAAI,WACJjb,MAAO,2DAET,CACEib,GAAI,YACJjb,MAAO,sBAET,CAAEib,GAAI,WAAYjb,MAAO,uEACzB,CACEib,GAAI,SACJjb,MAAO,wCAET,CAAEib,GAAI,QAASjb,MAAO,4BACtB,CAAEib,GAAI,WA6MO6U,GA1ME,WACf,IAAMjmB,EAAUd,KAChB,EAA0B+O,mBAAS,OAAnC,oBAAOsM,EAAP,KAAc2L,EAAd,KACA,EAA8BjY,mBAAS,YAAvC,oBAAOiW,EAAP,KAAgBiC,EAAhB,KACA,EAA4BlY,qBAA5B,oBAAO1H,EAAP,KAAe6f,EAAf,KACA,EAAwBnY,mBAAS,GAAjC,oBAAOiX,EAAP,KAAamB,EAAb,KACA,EAAgCpY,mBAASnY,EAASE,iBAAlD,oBAAOswB,EAAP,KAAiBC,EAAjB,KACA,EAAwBtY,mBAAS,IAAjC,oBAAOuY,EAAP,KAAaC,EAAb,KACA,EAA0BxY,mBAAS,GAAnC,oBAAOyY,EAAP,KAAcC,EAAd,KACM1a,EAAUyG,cA0BVkU,EAAiB7Y,GAAO,CAC5BZ,OAAQ,MACRC,IAAI,QAAD,OAAUkB,GAA2B,CACtC4W,OACA3K,QACA2J,UACAoC,WACA/f,cAIEsgB,EAAmB9Y,GAAO,CAC9BZ,OAAQ,SACRC,IAAI,SA4BA0Z,EAAO,yCAAG,6BAAA1a,EAAA,sEACSwa,EAAeva,UADxB,OACR0a,EADQ,OAEdN,EAAQM,EAASrqB,MACjBiqB,EAASI,EAASL,OAHJ,2CAAH,qDAUb,OAJAjT,qBAAU,WACRqT,MACC,CAAC5B,EAAM3K,EAAOhU,EAAQ+f,IAGvB,mCACGpW,GAAcpa,EAAS0D,gBAAgBI,YACtC,cAACotB,GAAA,EAAD,CAAOjlB,UAAU,OAAO1B,IAAI,EAA5B,SACE,8BACGumB,EAAe1Y,QACd,cAAC,GAAD,CAAe6X,UAAW3B,KAE1B,qBAAKnkB,UAAWD,EAAQ6C,KAAxB,SACE,eAACkZ,GAAA,EAAD,CAAO9b,UAAWD,EAAQ+C,MAA1B,UACE,cAAC,GAAD,CACE9G,MAAM,sEACNgnB,MACE/S,GAAcpa,EAAS0D,gBAAgBK,YAzE7C,WACZoS,EAAQQ,KAAK,gCA0EG0W,aAvED,SAACjtB,GAChBkwB,EAAUlwB,GACVmwB,EAAQ,IAsEQ9C,cAAehd,IAEjB,cAAC0gB,GAAA,EAAD,CAAgBvmB,MAAO,CAAEpB,QAAS,UAAlC,SACE,eAAC4nB,GAAA,EAAD,CACEjnB,UAAWD,EAAQ6lB,MACnB3pB,KAAM,SACNwE,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CACEpG,QAASA,EACTua,MAAOA,EACP2J,QAASA,EACTC,cAvGI,SAAC3lB,EAAOqmB,GAEhCqB,EADchC,IAAYW,GAAsB,QAAVtK,EACrB,OAAS,OAC1B4L,EAAWtB,IAqGSsC,SAAUX,EAAK1Y,OACfsW,UAAWA,KAEb,eAACgD,GAAA,EAAD,WACGZ,EAAKrmB,KAAI,SAACknB,GACT,IAAKA,EAAIC,QACP,OACE,eAAChD,GAAA,EAAD,CACEiD,OAAK,EACLC,UAAW,EAEX9mB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACoe,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAItb,WAEP,cAACyY,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAII,YAEP,cAACjD,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAIK,WAEP,cAAClD,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAIM,SAEP,cAACnD,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAIO,QAGP,cAACpD,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACE,cAAC8iB,GAAD,CACEjY,QAAS,CACP,CACEiH,GAAI,OACJnV,MAAO,uCACP0mB,QAASzS,GACPpa,EAAS0D,gBAAgBK,YAG7B,CACEuX,GAAI,SACJnV,MAAO,qBACP0mB,QAASzS,GACPpa,EAAS0D,gBAAgBM,eAI/BuoB,YAAa,SAACjlB,GAAD,OA/G1B,SAACgU,EAAIhU,GACxB,IAAMyqB,EAAQ,CACZC,KAAM,WACJ7b,EAAQQ,KAAR,0CAAgD2E,KAElD2W,OAAQ,WACNC,EAAmB,CACjB5rB,SAAS,EACTH,MAAO,4KACPK,SAAS,WAAD,8BAAE,uBAAA8P,EAAA,sEACFya,EAAiBxa,QAAQ,KAAM+E,GAD7B,OAERqV,EAAQD,EAAK7oB,QAAO,SAACC,GAAD,OAAUA,EAAKwT,KAAOA,MAC1C4W,EAAmB,CAAEnqB,KAAM,WAHnB,2CAAF,kDAAC,GAKTA,KAAM,SACN3B,KAAM,IACNC,oBAAoB,MAItB0rB,EAAMzqB,IACRyqB,EAAMzqB,KA2F0B6qB,CAAaZ,EAAIjW,GAAIhU,UAtCtBiqB,EAAIjW,QA8CfoV,EAAK1Y,SAAW8Y,EAAe1Y,SAC/B,cAACoW,GAAA,EAAD,CAAU5jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACihB,GAAA,EAAD,CACE0D,QAAS,EACTxnB,MAAO,CAAE+jB,UAAW,UAFtB,SAIE,cAACtjB,EAAA,EAAD,CAAYnC,QAAQ,KAApB,+KASZ,cAAC,GAAD,CACEgmB,MAAO0B,EACP3B,iBA3KO,SAACvmB,EAAO2pB,GAC/B9B,EAAQ8B,IA2KQlD,wBAxKc,SAACzmB,GAC/B+nB,EAAY6B,SAAS5pB,EAAMslB,OAAO5tB,MAAOJ,EAASE,kBAClDqwB,EAAQ,IAuKQnB,KAAMA,EACNC,YAAamB,gB,UCtNlB+B,GAhBE,WACf,OACE,qBACE3nB,MAAO,CACLlB,QAAS,OACT8oB,KAAM,EACNC,MAAO,QACP9oB,eAAgB,SAChBC,WAAY,UANhB,SASE,cAAC8oB,GAAA,EAAD,O,oBCRS,SAASC,GAAT,GAAuD,IAAjClY,EAAgC,EAAhCA,SAAUmY,EAAsB,EAAtBA,mBACvCrY,EAAcva,EAAS6F,YAC7B,EAAoCsS,mBAASya,GAAsB,IAAnE,oBAAOC,EAAP,KAAmBC,EAAnB,KAqBA,OACE,eAACtoB,EAAA,EAAD,CAAM1C,MAAI,EAAC4C,GAAI,GAAf,UACE,cAACF,EAAA,EAAD,CACEjB,WAAS,EACTuF,QAAS,EACTlE,MAAO,CACL+hB,UAAW,IACXoG,UAAW,OACXrpB,QAAS,OACT4H,cAAe,SACfiT,SAAU,OACV3R,aAAc,IATlB,SAYG2H,EAAYlQ,KAAI,SAACvC,GAChB,OACE,cAACkrB,GAAA,EAAD,CACEpY,QACE,cAACqY,GAAA,EAAD,CACEC,QAASL,EAAWta,SAASzQ,EAAK1H,OAClCub,SAAU,kBAvCL,SAAC7T,GACpB,GAAI+qB,EAAWta,SAASzQ,GACtB,OAAOgrB,EAAcD,EAAWhrB,QAAO,SAACsrB,GAAD,OAAOA,IAAMrrB,MAEtDgrB,EAAc,GAAD,mBAAKD,GAAL,CAAiB/qB,KAmCAsrB,CAAatrB,EAAK1H,QAClC2H,KAAMD,EAAK1H,MACXmL,MAAM,YAGVlL,MAAOyH,EAAKzH,aAKpB,eAACmK,EAAA,EAAD,CACE1C,MAAI,EACJ2C,GAAI,GACJG,MAAO,CAAElB,QAAS,OAAQC,eAAgB,iBAH5C,UAKE,cAAC2B,EAAA,EAAD,CACEpC,QAAQ,YACRqC,MAAM,UACNjE,KAAK,SACLkE,QAAS,kBAAMiP,EAASoY,IAJ1B,4CAQA,eAACroB,EAAA,EAAD,WACE,cAACc,EAAA,EAAD,CACEpC,QAAQ,YACRqC,MAAM,YACNC,QA3DU,WAClB,IAAM6nB,EAAQ,GACd9Y,EAAYlQ,KAAI,SAACvC,GACfurB,EAAM1c,KAAK7O,EAAK1H,UAElB0yB,EAAcO,IAuDNzoB,MAAO,CAAE+H,OAAQ,UAJnB,qEAQA,cAACrH,EAAA,EAAD,CAAQpC,QAAQ,YAAYqC,MAAM,YAAYC,QAxDhC,WACpBsnB,EAAc,KAuDR,4DC5DV,IAAM3f,GAAY9J,aAAW,SAACC,GAAD,MAAY,CACvCyD,KAAM,CACJ4F,OAAQ,UAEV1F,MAAO,CACL8B,MAAO,OACPvF,QAAS,IAEXrD,MAAO,CACLkd,cAAe,QAIJ,SAAS7I,KACtB,IAAMtQ,EAAUiJ,KACVgD,EAAUyG,cACVtB,EAAKxC,GAAe,MACpBzR,EAASyR,GAAe,UAC9B,EAA4BX,mBAAS,IAArC,oBAAOmb,EAAP,KAAeC,EAAf,KACA,EAAiD5Y,eAAzCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,OAAQC,EAAvC,EAAuCA,MACvC,EAAoC5C,oBAAS,GAA7C,oBAAO6C,EAAP,KAAmBC,EAAnB,KACMuY,EAAiBvb,GAAO,CAC5BZ,OAAQ,OACRC,IAAI,SAEAmc,EAAkBxb,GAAO,CAC7BZ,OAAQ,MACRC,IAAI,QAAD,OAAUgE,KAEToY,EAAoBzb,GAAO,CAC/BZ,OAAQ,MACRC,IAAI,QAAD,OAAUgE,KAGTD,EAAoB,WACxBJ,GAAeD,IAGX2Y,EAAkB,yCAAG,WAAO/sB,EAAM2T,GAAb,gBAAAjE,EAAA,yDACnBlW,EADmB,2BACNwG,GADM,IACA2T,iBACrBe,EAFqB,gCAGjBmY,EAAgBld,QAAQnW,GAHP,6CAKjBozB,EAAejd,QAAQnW,GALN,OAOzBwzB,IAPyB,2CAAH,wDAUlBA,EAAsB,WAC1BnoB,EAAkB,CAAE1D,KAAM,gBA4BtB8rB,EAAS,yCAAG,6BAAAvd,EAAA,sEACKod,EAAkBnd,UADvB,OACV+c,EADU,OAEhBC,EAAUD,EAAO1sB,MAFD,2CAAH,qDAef,OAVA+W,qBAAU,WACJrC,GACFuY,MAED,IAEHlW,qBAAU,WACR5C,EAAMuY,KACL,CAACvY,EAAOuY,IAGT,sBAAM7Y,SAAUI,GAxBD,SAACjU,IAjBa,SAACA,GAC9B6E,EAAkB,CAChBtF,MAAO,oDACPD,UACE,cAACysB,GAAD,CACEC,mBAAkB,OAAEU,QAAF,IAAEA,OAAF,EAAEA,EAAQ/Y,YAC5BE,SAAU,SAACra,GAAD,OAAWuzB,EAAmB/sB,EAAMxG,IAC9Csa,UAAWkZ,IAGf7rB,KAAM,aACN3B,KAAM,IACNE,SAAS,EACTD,oBAAoB,IAKtBytB,CAAuBltB,MAuBvB,SACI8sB,EAAkBtb,QA2OlB,cAAC,GAAD,IA1OA,cAAC5N,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGvf,GAAI,GAAIP,UAAWD,EAAQ6C,KAA7C,SACE,eAACkZ,GAAA,EAAD,CAAO9b,UAAWD,EAAQ+C,MAA1B,UACE,cAAC5B,EAAA,EAAD,CACElB,UAAWD,EAAQ/D,MACnB+C,QAAQ,KACRoS,GAAG,aACHpV,UAAU,MAJZ,SAMGoV,EAAK,sEAAiB,wEAGzB,cAAC9Q,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAzB,SACE,eAAC,WAAD,WACE,cAACtE,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,qBACN0H,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAO6W,UAChB9V,WACEf,EAAO6W,UAAY7W,EAAO6W,UAAUla,QAAU,GAEhDqE,WAAS,EACT1V,KAAK,WAIX2V,MAAO,CAAEC,SAAUhc,EAASqC,WAAWC,UACvCyF,KAAK,gBAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,sEACN0H,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAO8W,SAChB/V,WACEf,EAAO8W,SAAW9W,EAAO8W,SAASna,QAAU,GAE9CqE,WAAS,EACT1V,KAAK,WAIX2V,MAAO,CAAEC,SAAUhc,EAASqC,WAAWC,UACvCyF,KAAK,eAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,0DACN0H,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAO7E,SAChB4F,WACEf,EAAO7E,SAAW6E,EAAO7E,SAASwB,QAAU,GAE9CqE,WAAS,EACT1V,KAAK,WAIX2V,MAAO,CAAEC,SAAUhc,EAASqC,WAAWC,UACvCyF,KAAK,eAGG,QAAXV,GACC,cAACmD,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,8CACN0H,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAO5E,SAChB2F,WACEf,EAAO5E,SAAW4E,EAAO5E,SAASuB,QAAU,GAE9CqE,WAAS,EACT1V,KAAK,QACLkB,KAAM0T,EAAa,WAAa,OAChCmB,WAAY,CACVC,aACE,cAACC,GAAA,EAAD,CAAgBtR,SAAS,MAAzB,SACE,mBACEH,MAAO,CAAEiG,OAAQ,WACjB1G,UAAWmS,aACT,uBACApS,EAAQiD,MAEV3B,QAAS6P,EANX,SAQGL,EACG,iBACA,qBAQlBe,MAAO,CACLC,SAAUhc,EAASqC,WAAWC,SAC9B2Z,UAAW,CACT7b,MAAO,EACPqX,QAASzX,EAASqC,WAAWG,WAGjCuF,KAAK,eAIX,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,uCACN0H,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAO+W,OAChBhW,WACEf,EAAO+W,OAAS/W,EAAO+W,OAAOpa,QAAU,GAE1CqE,WAAS,EACT1V,KAAK,WAIX2V,MAAO,CACLE,UAAW,CACT7b,MAAO,GACPqX,QAASzX,EAASqC,WAAWE,eAE/BwxB,UAAW,CACT3zB,MAAO,GACPqX,QAASzX,EAASqC,WAAWE,gBAGjCwF,KAAK,aAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,2BACN0H,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAOgX,MAChBjW,WAAYf,EAAOgX,MAAQhX,EAAOgX,MAAMra,QAAU,GAClDqE,WAAS,EACT1V,KAAK,WAIX2B,KAAK,YAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,2BACN0H,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAOkZ,QAChBnY,WACEf,EAAOkZ,QAAUlZ,EAAOkZ,QAAQvc,QAAU,GAE5CqE,WAAS,EACT1V,KAAK,WAIX2B,KAAK,cAGT,eAACyC,EAAA,EAAD,CACE1C,MAAI,EACJ2C,GAAI,GACJG,MAAO,CAAElB,QAAS,OAAQC,eAAgB,iBAH5C,UAKE,cAAC2B,EAAA,EAAD,CAAQpC,QAAQ,YAAYqC,MAAM,UAAUjE,KAAK,SAAjD,4CAGA,cAACgE,EAAA,EAAD,CACEpC,QAAQ,YACRqC,MAAM,YACNC,QAtPD,WACf2K,EAAQQ,KAAK,mBAkPC,iEC9UHtN,oBAAW,SAACC,GAAD,MAAY,CACpCyD,KAAM,CACJgC,MAAO,QAET9B,MAAO,CACL8B,MAAO,OACP6D,aAActJ,EAAMwF,QAAQ,IAE9BihB,MAAO,CACL9d,SAAU,KAEZgiB,OAAQ,CACN1oB,MAAO,QAETrI,SAAU,CACRgI,gBAAiB5B,EAAMQ,QAAQ+B,QAAQK,MAEzCjJ,OAAQ,CACNiI,gBAAiB5B,EAAMQ,QAAQiC,KAAKG,MAEtClJ,OAAQ,CACNkI,gBAAiB5B,EAAMQ,QAAQ6B,UAAUO,MAE3CgoB,WAAY,CACVxqB,QAAS,OACTE,WAAY,SACZJ,QAAS,OCxBP2qB,GAAa,CACjB,CACE9zB,MAAO,uCACPD,MAAOJ,EAAS+C,cAAcqxB,SAEhC,CAAE/zB,MAAO,wCAAWD,MAAOJ,EAAS+C,cAAcE,QAClD,CAAE5C,MAAO,uCAAUD,MAAOJ,EAAS+C,cAAcG,WAsDpCmxB,GAnDA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChB,EAAoCnc,mBAAS,CAAEpQ,KAAM,GAAIksB,OAAQ,KAAjE,oBAAOM,EAAP,KAAmBC,EAAnB,KAEMpB,EAAe,SAACqB,GAAD,OAAU,SAAC/rB,GAC9B8rB,EAAc,2BAAKD,GAAN,kBAAmBE,EAAO/rB,EAAMslB,OAAO5tB,WAStD,OACE,eAACoK,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAGlF,WAAW,SAASgB,MAAO,CAAEpB,QAAS,IAAlE,UACE,cAACgB,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAACmR,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,qBACNsb,SAAUyX,EAAa,QACvBhzB,MAAOm0B,EAAWxsB,KAClB+T,WAAS,EACT1V,KAAK,YAGT,cAACoE,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAACmR,GAAA,EAAD,CACE8Y,QAAM,EACNr0B,MAAM,iCACNsb,SAAUyX,EAAa,UACvBhzB,MAAOm0B,EAAWN,OAClB/qB,QAAQ,WACR4S,WAAS,EACT1V,KAAK,QAPP,SASG+tB,GAAW9pB,KAAI,SAAC1C,GAAD,OACd,cAACqX,GAAA,EAAD,CAA6B5e,MAAOuH,EAAOvH,MAA3C,SACGuH,EAAOtH,OADKsH,EAAOvH,cAM5B,cAACoK,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAACa,EAAA,EAAD,CAAQpC,QAAQ,YAAYqC,MAAM,UAAUC,QApCjC,WACS,oBAAb8oB,GACTA,EAASC,IAkCP,8CAIF,cAACxV,GAAA,EAAD,CAASnU,MAAO,CAAEmE,MAAO,cC9BzBuf,GAAY,CAChB,CACEhT,GAAI,YACJjb,MAAO,sBAET,CAAEib,GAAI,WAAYjb,MAAO,uEACzB,CACEib,GAAI,SACJjb,MAAO,wCAET,CAAEib,GAAI,QAASjb,MAAO,4BACtB,CAAEib,GAAI,YAAajb,MAAO,2DAC1B,CAAEib,GAAI,SAAUjb,MAAO,kCACvB,CAAEib,GAAI,WAGO,SAAS6U,KACtB,IAAMjmB,EAAUd,KAChB,EAA0B+O,mBAAS,OAAnC,oBAAOsM,EAAP,KAAc2L,EAAd,KACA,EAA4BjY,qBAA5B,oBAAO1H,EAAP,KAAe6f,EAAf,KACA,EAA8BnY,mBAAS,aAAvC,oBAAOiW,EAAP,KAAgBiC,EAAhB,KACA,EAAwBlY,mBAAS,GAAjC,oBAAOiX,EAAP,KAAamB,EAAb,KACA,EAAgCpY,mBAASnY,EAASE,iBAAlD,oBAAOswB,EAAP,KAAiBC,EAAjB,KACA,EAAwBtY,mBAAS,IAAjC,oBAAOuY,EAAP,KAAaC,EAAb,KACA,EAA4BxY,qBAA5B,oBAAOtQ,EAAP,KAAe8sB,EAAf,KACMxe,EAAUyG,cAChB,EAA0BzE,mBAAS,GAAnC,oBAAOyY,EAAP,KAAcC,EAAd,KAqBM+D,EAAqB3c,GAAO,CAChCZ,OAAQ,MACRC,IAAKud,mBAAmB,YAAD,OACTrc,GAA2B,CACrC4W,OACA3K,QACA2J,UACAoC,WACA/f,SACA5I,eAKAkpB,EAAmB9Y,GAAO,CAC9BZ,OAAQ,SACRC,IAAI,aA0CA0Z,EAAO,yCAAG,6BAAA1a,EAAA,sEACase,EAAmBre,UADhC,OACRue,EADQ,OAEdnE,EAAQmE,EAAaluB,MACrBiqB,EAASiE,EAAalE,OAHR,2CAAH,qDAUb,OAJAjT,qBAAU,WACRqT,MACC,CAAC5B,EAAM3K,EAAOhU,EAAQ+f,EAAU3oB,IAGjC,mCACGuS,GAAcpa,EAAS0D,gBAAgBO,gBACtC,cAACitB,GAAA,EAAD,CAAOjlB,UAAU,OAAO1B,IAAI,EAA5B,SACE,8BACGqqB,EAAmBxc,QAClB,cAAC,GAAD,CAAe6X,UAAW3B,KAE1B,qBAAKnkB,UAAWD,EAAQ6C,KAAxB,SACE,eAACkZ,GAAA,EAAD,CAAO9b,UAAWD,EAAQ+C,MAA1B,UACE,cAAC,GAAD,CACE9G,MAAM,sEACNgnB,MACE/S,GAAcpa,EAAS0D,gBAAgBQ,gBArF7C,WACZiS,EAAQQ,KAAK,yBAuFGyW,gBAAiB,cAAC,GAAD,CAAiBkH,SAhCnC,SAAC1tB,GAChB,IAAMmuB,EAAU,gBAAYnuB,EAAKmB,KAAjB,mBAAgCnB,EAAKqtB,OAArC,KAChBU,EAAUI,GACVxE,EAAQ,MA8BQlD,aAtCD,SAACjtB,GAChBkwB,EAAUlwB,GACVmwB,EAAQ,IAqCQ9C,cAAehd,EACfukB,cAAe5a,GACbpa,EAAS0D,gBAAgBQ,iBAG7B,cAACitB,GAAA,EAAD,CAAgBvmB,MAAO,CAAEpB,QAAS,UAAlC,SACE,eAAC4nB,GAAA,EAAD,CACEjnB,UAAWD,EAAQ6lB,MACnB3pB,KAAM,SACNwE,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CACEpG,QAASA,EACTua,MAAOA,EACP2J,QAASA,EACTC,cAxHI,SAAC3lB,EAAOqmB,GAEhCqB,EADchC,IAAYW,GAAsB,QAAVtK,EACrB,OAAS,OAC1B4L,EAAWtB,IAsHSsC,SAAUX,EAAK1Y,OACfsW,UAAWA,KAGb,eAACgD,GAAA,EAAD,WACGZ,EAAKrmB,KAAI,SAACknB,GAAS,IAAD,EACjB,OACE,eAAC/C,GAAA,EAAD,CACEiD,OAAK,EACLC,UAAW,EAEX9mB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACoe,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAII,YAEP,cAACjD,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAIK,WAEP,cAAClD,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACGuQ,GAAcwX,EAAIM,UAErB,cAACnD,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACGuQ,GAAcwX,EAAIO,SAErB,cAACpD,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,mBACGuQ,GAAcwX,EAAI0D,yBADrB,aACG,EAAqC7b,QACpC,IACA,MAGJ,cAACsV,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACE,cAAC4V,GAAA,EAAD,CACE/e,MAAOL,EAAS+C,cAAcwuB,EAAI0C,QAClC9pB,UAAWmS,aACTpS,EAAQ+pB,OACR/pB,EAAQqnB,EAAI0C,aAIlB,cAACvF,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACE,cAAC8iB,GAAD,CACEjY,QAAS,CACP,CAAEiH,GAAI,cAAenV,MAAO,qDAC5B,CACEmV,GAAI,OACJnV,MAAO,uCACP0mB,QAASzS,GACPpa,EAAS0D,gBAAgBQ,gBAG7B,CACEoX,GAAI,SACJnV,MAAO,qBACP0mB,QAASzS,GACPpa,EAAS0D,gBACNS,mBAITooB,YAAa,SAACjlB,GAAD,OA/IxB,SAACiqB,EAAKjqB,GACzB,IAAMyqB,EAAQ,CACZC,KAAM,WACJ7b,EAAQQ,KAAR,kCAAwC4a,EAAIjW,MAE9C2W,OAAQ,WACNC,EAAmB,CACjB5rB,SAAS,EACTH,MAAO,4KACPK,SAAS,WAAD,8BAAE,uBAAA8P,EAAA,sEACFya,EAAiBxa,QAAQ,KAAMgb,EAAIjW,IADjC,OAERqV,EAAQD,EAAK7oB,QAAO,SAACC,GAAD,OAAUA,EAAKwT,KAAOiW,EAAIjW,OAC9C4W,EAAmB,CAAEnqB,KAAM,WAHnB,2CAAF,kDAAC,GAKTA,KAAM,SACN3B,KAAM,IACNC,oBAAoB,KAGxB6uB,YAAa,WACX/e,EAAQQ,KAAR,qCAA2C4a,EAAIjW,GAA/C,qBAGAyW,EAAMzqB,IACRyqB,EAAMzqB,KAwHwB6qB,CAAaZ,EAAKjqB,UAnDnBiqB,EAAIjW,QA0DboV,EAAK1Y,SAAW4c,EAAmBxc,SACnC,cAACoW,GAAA,EAAD,CAAU5jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACihB,GAAA,EAAD,CACE0D,QAAS,EACTxnB,MAAO,CAAE+jB,UAAW,UAFtB,SAIE,cAACtjB,EAAA,EAAD,CAAYnC,QAAQ,KAApB,+KASZ,cAAC,GAAD,CACEgmB,MAAO0B,EACP3B,iBAxMO,SAACvmB,EAAO2pB,GAC/B9B,EAAQ8B,IAwMQlD,wBArMc,SAACzmB,GAC/B+nB,EAAY6B,SAAS5pB,EAAMslB,OAAO5tB,MAAOJ,EAASE,kBAClDqwB,EAAQ,IAoMQnB,KAAMA,EACNC,YAAamB,eCxQ1B,IAAM2E,GAAa,WACxB,OACE,mBACEhrB,UAAWmS,aAAK,wBAChB1R,MAAO,CAAEW,MAAOjC,EAAMQ,QAAQuC,OAAOH,MAFvC,oBASSkpB,GAAW,WACtB,OACE,mBACEjrB,UAAWmS,aAAK,wBAChB1R,MAAO,CAAEW,MAAOjC,EAAMQ,QAAQ4B,QAAQQ,MAFxC,mB,UCsMWmpB,GA9MC,SAAC,GAA4C,IAA1C5a,EAAyC,EAAzCA,SAAUC,EAA+B,EAA/BA,UAAW4a,EAAoB,EAApBA,cACtC,EAA0Bnd,mBAAS,IAAnC,oBAAOod,EAAP,KAAcC,EAAd,KACA,EAAwCrd,oBACzB,OAAbmd,QAAa,IAAbA,OAAA,EAAAA,EAAeG,KAAKr1B,QAAS,GAD/B,oBAAOs1B,EAAP,KAAqBC,EAArB,KAGA,EAAiDhb,eAAzCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,OAAQC,EAAvC,EAAuCA,MACjC7Q,EAAUd,KAEVwsB,EAAiB3d,GAAO,CAC5BZ,OAAQ,MACRC,IAAI,SAGAue,EAAQ,yCAAG,6BAAAvf,EAAA,sEACMsf,EAAerf,UADrB,OACTC,EADS,OAEfgf,EAAShf,EAAO5P,MAFD,2CAAH,qDAgCd,OARA+W,qBAAU,WACRkY,MACC,IAEHlY,qBAAU,WACR5C,EAAMua,KACL,CAACva,EAAOua,IAGT,eAAC9qB,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAzB,UACE,cAACtE,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAACmR,GAAA,EAAD,CACE8Y,QAAM,EACNr0B,MAAM,2BACNsb,SAlBa,SAAC4C,GACpBoX,EAAgBpX,EAAEyP,OAAO5tB,QAkBnBA,MAAOs1B,EACPxsB,QAAQ,WACR4S,WAAS,EACT1V,KAAK,QACL2B,KAAK,OACL+tB,YAAa,CACX5rB,QAAS,CACPwqB,OAAQxqB,EAAQgqB,aAXtB,SAeGqB,EAAMlrB,KAAI,SAAC1C,GAAD,OACT,eAACqX,GAAA,EAAD,CAA6B5e,MAAOuH,EAAOvH,MAA3C,UACE,qBACE21B,IAAG,UAAK/1B,EAASC,YAAd,YAA6B0H,EAAOquB,MACvCC,IAAKtuB,EAAOtH,MACZuK,MAAO,CACLmE,MAAO,GACPtB,OAAQ,GACR3C,aAAc,MACdkD,WAAY,MAGfrG,EAAOtH,QAXKsH,EAAOvH,cAgB5B,cAACoK,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACEE,WAAS,EACT1b,MAAOA,EACPgG,KAAK,QACL2B,KAAMA,EACN1H,MAAM,0DACN6I,QAAQ,WACRyS,SAAUA,EACVpE,QAASuD,EAAOob,kBAChBra,WACEf,EAAOob,kBACHpb,EAAOob,kBAAkBze,QACzB,MAKZsE,MAAO,CACLE,UAAW,CACT7b,MAAO,GACPqX,QAASzX,EAASqC,WAAWI,aAE/BsxB,UAAW,CACT3zB,MAAO,GACPqX,QAASzX,EAASqC,WAAWI,cAGjCsF,KAAK,wBAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACEE,WAAS,EACT1b,MAAOA,EACPgG,KAAK,QACL2B,KAAMA,EACN1H,MAAM,0DACN6I,QAAQ,WACRyS,SAAUA,EACVpE,QAASuD,EAAOqb,cAChBta,WACEf,EAAOqb,cAAgBrb,EAAOqb,cAAc1e,QAAU,MAK9D1P,KAAK,oBAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACEE,WAAS,EACT1b,MAAOA,EACPgG,KAAK,QACL2B,KAAMA,EACN1H,MAAM,oDACN6I,QAAQ,WACRyS,SAAUA,EACVpE,QAASuD,EAAOsb,aAChBva,WACEf,EAAOsb,aAAetb,EAAOsb,aAAa3e,QAAU,MAK5D1P,KAAK,mBAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACEvb,MAAM,6CACNg2B,WAAS,EACTC,KAAM,EACNptB,QAAQ,WACRnB,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACP0b,WAAS,EACTvE,QAASuD,EAAOyb,YAChB1a,WACEf,EAAOyb,YAAczb,EAAOyb,YAAY9e,QAAU,MAK1D1P,KAAK,kBAGT,eAACyC,EAAA,EAAD,CACE1C,MAAI,EACJ2C,GAAI,GACJG,MAAO,CAAElB,QAAS,OAAQC,eAAgB,iBAH5C,UAKE,cAAC2B,EAAA,EAAD,CACEpC,QAAQ,YACRqC,MAAM,UACNjE,KAAK,SACLkE,QAASqP,GA5KF,SAACjU,GACd,IAAM4vB,EAAQC,eACRr2B,EAAK,2BACNwG,GADM,IAET6uB,KAPKF,EAAMmB,MAAK,SAAC5uB,GAAD,OAAUA,EAAK1H,QAAUs1B,KAQzCpa,GAAIga,EAAgBA,EAAcha,GAAKkb,EACvCG,WAAYrB,IAEd7a,EAASra,MAgKL,4CAQA,cAACkL,EAAA,EAAD,CAAQpC,QAAQ,YAAYqC,MAAM,UAAUC,QAASkP,EAArD,yDCnLFvH,GAAY9J,aAAW,SAACC,GAAD,MAAY,CACvCyD,KAAM,CACJ4F,OAAQ,UAEV1F,MAAO,CACL8B,MAAO,OACPvF,QAAS,IAEXrD,MAAO,CACLkd,cAAe,QAIbiL,GAAY,CAChB,CACEhT,GAAI,OACJjb,MAAO,+CAET,CAAEib,GAAI,gBAAiBjb,MAAO,4DAC9B,CACEib,GAAI,aACJjb,MAAO,2DAGT,CAAEib,GAAI,WAGO,SAASd,KACtB,IAAMtQ,EAAUiJ,KACVgD,EAAUyG,cACVtB,EAAKxC,GAAe,MAC1B,EAA4BX,mBAAS,IAArC,oBAAOmb,EAAP,KAAeC,EAAf,KACA,EAAgCpb,mBAAS,IAAzC,oBAAOye,EAAP,KAAiBC,EAAjB,KACA,EAAgC1e,mBAAS,IAAzC,oBAAO2e,EAAP,KAAiBC,EAAjB,KACA,EAAgD5e,mBAAS,GAAzD,oBAAO6e,EAAP,KAAyBC,EAAzB,KACA,EAAiDtc,eAAzCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,OAAQC,EAAvC,EAAuCA,MAEjCmc,EAAqBjf,GAAO,CAChCZ,OAAQ,OACRC,IAAI,aAEA6f,EAAsBlf,GAAO,CACjCZ,OAAQ,MACRC,IAAI,YAAD,OAAcgE,KAEb8b,EAAwBnf,GAAO,CACnCZ,OAAQ,MACRC,IAAI,YAAD,OAAcgE,KAGb+b,EAA0Bpf,GAAO,CACrCZ,OAAQ,MACRC,IAAI,sBAGAggB,EAAuBrf,GAAO,CAClCZ,OAAQ,SACRC,IAAI,YAGAmD,EAAQ,yCAAG,WAAO7T,GAAP,kBAAA0P,EAAA,yDACTihB,EAAc,GACpBX,EAASvsB,KAAI,SAACvC,GACZ,IAAM0vB,EAAU,CACdC,OAAQ3vB,EAAK2tB,KAAKr1B,OAAS0H,EAAK2tB,KAAKna,GACrC4a,kBAAmBpuB,EAAKouB,kBACxBC,cAAeruB,EAAKquB,cACpBC,aAActuB,EAAKsuB,aACnBG,YAAazuB,EAAKyuB,YAClBjb,GAAIxT,EAAKwT,GAAGzC,WAAWN,SAAS,KAAO,KAAOzQ,EAAKwT,IAErDic,EAAY5gB,KAAK6gB,MAGbE,EAdS,2BAcM9wB,GAdN,IAcYgwB,SAAUW,EAAaP,sBAC9C1b,EAfW,gCAgBA6b,EAAoB5gB,QAAQmhB,GAhB5B,+DAkBTR,EAAmB3gB,QAAQmhB,GAlBlB,OAmBfC,YAAW,WACTC,MACC,KArBY,4CAAH,sDAwBRA,EAAW,WACfzhB,EAAQQ,KAAK,uBAGTkd,EAAS,yCAAG,6BAAAvd,EAAA,sEACK8gB,EAAsB7gB,UAD3B,OACV+c,EADU,OAEhBC,EAAUD,EAAO1sB,MACjBqwB,EAAoB3D,EAAO1sB,KAAKowB,kBAChCH,EAAYvD,EAAO1sB,KAAKgwB,UAJR,2CAAH,qDAOTiB,EAAmB,yCAAG,6BAAAvhB,EAAA,sEACL+gB,EAAwB9gB,UADnB,OACpB+c,EADoB,OAE1ByD,EAAYzD,EAAO1sB,MAFO,2CAAH,qDAKnBkxB,EAAkB,SAAClxB,GACvB,GAAIA,EAAK+vB,SAAU,CACjB,IAAM3P,EAAQ4P,EAASmB,WAAU,SAACjwB,GAAD,OAAUA,EAAKwT,KAAO1U,EAAK0U,MACtD0c,EAAW,YAAOpB,GACxBoB,EAAYhR,GAASpgB,EACrBiwB,EAAYmB,QAEZnB,EAAY,GAAD,mBAAKD,GAAL,CAAehwB,KAE5BqxB,KAGIA,EAAmB,WACvB/F,EAAmB,CAAEnqB,KAAM,aAGvBmwB,EAAe,SAACtxB,GACpBsrB,EAAmB,CACjB/rB,MAAO,2DACPD,UACE,cAAC,GAAD,CACEuU,SAAUqd,EACVpd,UAAWud,EACX3C,cAAe1uB,IAGnBmB,KAAM,UACN3B,KAAM,IACNE,SAAS,EACTD,oBAAoB,KA6CxB,OAXAsX,qBAAU,WACRka,IACIvc,GACFuY,MAED,IAEHlW,qBAAU,WACR5C,EAAMuY,KACL,CAACvY,EAAOuY,IAGT,mCACE,sBAAM7Y,SAAUI,EAAaJ,GAA7B,SACI2c,EAAsBhf,QAkUtB,cAAC,GAAD,IAjUA,cAAC5N,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGvf,GAAI,GAAIP,UAAWD,EAAQ6C,KAA7C,SACE,eAACkZ,GAAA,EAAD,CAAO9b,UAAWD,EAAQ+C,MAA1B,UACE,cAAC5B,EAAA,EAAD,CACElB,UAAWD,EAAQ/D,MACnB+C,QAAQ,KACRoS,GAAG,aACHpV,UAAU,MAJZ,SAMGoV,EAAK,sEAAiB,wEAGzB,cAAC9Q,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAzB,SACE,eAAC,WAAD,WACE,cAACtE,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,qBACN0H,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAO6W,UAChB9V,WACEf,EAAO6W,UAAY7W,EAAO6W,UAAUla,QAAU,GAEhDqE,WAAS,EACT1V,KAAK,WAIX2V,MAAO,CAAEC,SAAUhc,EAASqC,WAAWC,UACvCyF,KAAK,gBAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,sEACN0H,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAO8W,SAChB/V,WACEf,EAAO8W,SAAW9W,EAAO8W,SAASna,QAAU,GAE9CqE,WAAS,EACT1V,KAAK,WAIX2V,MAAO,CAAEC,SAAUhc,EAASqC,WAAWC,UACvCyF,KAAK,eAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,2BACN0H,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAOgX,MAChBjW,WACEf,EAAOgX,MAAQhX,EAAOgX,MAAMra,QAAU,GAExCqE,WAAS,EACT1V,KAAK,WAIX2B,KAAK,YAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,uCACN0H,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAO+W,OAChBhW,WACEf,EAAO+W,OAAS/W,EAAO+W,OAAOpa,QAAU,GAE1CqE,WAAS,EACT1V,KAAK,WAIX2V,MAAO,CACLE,UAAW,CACT7b,MAAO,GACPqX,QAASzX,EAASqC,WAAWE,eAE/BwxB,UAAW,CACT3zB,MAAO,GACPqX,QAASzX,EAASqC,WAAWE,gBAGjCwF,KAAK,aAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACEtU,KAAK,SACL4B,QAAQ,WACR7I,MAAM,iEACN0H,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAOma,iBAChBpZ,WACEf,EAAOma,iBACHna,EAAOma,iBAAiBxd,QACxB,GAENqE,WAAS,EACT1V,KAAK,WAIX2B,KAAK,uBAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,WACKqsB,EAAS9e,QAAUgf,GACpB,cAACpb,GAAA,EAAD,CACE8Y,QAAM,EACNr0B,MAAM,oDACND,MAAO42B,EACPrb,SAxKG,SAAC4C,GACxB0Y,EAAoB1Y,EAAEyP,OAAO5tB,QAwKT8I,QAAQ,WACRqO,QAASuD,EAAOkc,iBAChBnb,WACEf,EAAOkc,iBACHlc,EAAOkc,iBAAiBvf,QACxB,GAENqE,WAAS,EACT1V,KAAK,QAbP,SAeG0wB,EAASzsB,KAAI,SAAC1C,GAAD,OACZ,cAACqX,GAAA,EAAD,CAA6B5e,MAAOuH,EAAOvH,MAA3C,SACGuH,EAAOtH,OADKsH,EAAOvH,cAO9B,cAACoK,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAACa,EAAA,EAAD,CACEpC,QAAQ,YACRqC,MAAM,UACNC,QAzNC,WACnB0sB,KAqNgB,8GAQCtB,EAAS5e,QACV,cAACxN,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAACwb,GAAA,EAAD,UACE,cAACkL,GAAA,EAAD,CAAgBvmB,MAAO,CAAEpB,QAAS,UAAlC,SACE,eAAC4nB,GAAA,EAAD,CACEjnB,UAAWD,EAAQ6lB,MACnB3pB,KAAM,SACNwE,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CAAage,UAAWA,KAExB,cAACgD,GAAA,EAAD,UACGsF,EAASvsB,KAAI,SAACknB,GACb,OACE,eAAC/C,GAAA,EAAD,CACEiD,OAAK,EACLC,UAAW,EAEX9mB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACoe,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACE,sBACEoB,MAAO,CACLlB,QAAS,OACTE,WAAY,UAHhB,UAME,qBACEmsB,IAAG,UAAK/1B,EAASC,YAAd,YAA6BsxB,EAAIkE,KAAKO,MACzCC,IAAK1E,EAAIkE,KAAKp1B,MACduK,MAAO,CACLmE,MAAO,GACPtB,OAAQ,GACR3C,aAAc,MACdkD,WAAY,KAGfujB,EAAIkE,KAAK1tB,MAAQwpB,EAAIkE,KAAKp1B,WAG/B,cAACquB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAI4E,gBAEP,cAACzH,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAI2E,oBAGP,eAACxH,GAAA,EAAD,CACEllB,QAAQ,OACRoB,MAAO,CAAE+jB,UAAW,QAFtB,UAIE,cAAC7Q,GAAA,EAAD,CACEtS,QAAS,WA7Q7C0sB,EA6QqE3G,IADnC,SAGE,cAAC,GAAD,MAGF,cAACzT,GAAA,EAAD,CACEtS,QAAS,kBAhRnB,SAAC+lB,GAE3BW,EAAmB,CACjB5rB,SAAS,EACTH,MAAO,4KACPK,SAAS,WAAD,8BAAE,uBAAA8P,EAAA,0DACJgF,EADI,gCAEAgc,EAAqB/gB,QAAQ,KAAMgb,EAAIjW,IAFvC,OAIRub,EAAYD,EAAS/uB,QAAO,SAACC,GAAD,OAAUA,EAAKwT,KAAOiW,EAAIjW,OACtD4W,EAAmB,CAAEnqB,KAAM,WALnB,2CAAF,kDAAC,GAOTA,KAAM,SACN3B,KAAM,IACNC,oBAAoB,IAkQ6B8xB,CAAoB5G,IADrC,SAGE,cAAC,GAAD,WA3CCA,EAAIjW,kBAwD3B,cAAC9Q,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,2BACN0H,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAOkZ,QAChBnY,WACEf,EAAOkZ,QAAUlZ,EAAOkZ,QAAQvc,QAAU,GAE5CqE,WAAS,EACT1V,KAAK,WAIX2B,KAAK,cAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACEvb,MAAM,6CACNg2B,WAAS,EACTC,KAAM,EACNptB,QAAQ,WACRnB,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACP0b,WAAS,EACTvE,QAASuD,EAAOyb,YAChB1a,WACEf,EAAOyb,YACHzb,EAAOyb,YAAY9e,QACnB,MAKZ1P,KAAK,kBAIT,eAACyC,EAAA,EAAD,CACE1C,MAAI,EACJ2C,GAAI,GACJG,MAAO,CAAElB,QAAS,OAAQC,eAAgB,iBAH5C,UAKE,cAAC2B,EAAA,EAAD,CAAQpC,QAAQ,YAAYqC,MAAM,UAAUjE,KAAK,SAAjD,4CAGA,cAACgE,EAAA,EAAD,CACEpC,QAAQ,YACRqC,MAAM,YACNC,QAASosB,EAHX,mECjepB,IAAMtJ,GAAY,CAChB,CACEhT,GAAI,OACJjb,MAAO,kCAET,CAAEib,GAAI,QAASjb,MAAO,4BACtB,CACEib,GAAI,OACJjb,MAAO,sBAET,CACEib,GAAI,OACJjb,MAAO,4BAET,CAAEib,GAAI,WA+MO6U,GA5ME,WACf,IAAMiI,EAAatf,GAAe,MAC5BxR,EAAOwR,GAAe,QACtB5O,EAAUd,KAChB,EAA0B+O,mBAAS,OAAnC,oBAAOsM,EAAP,KAAc2L,EAAd,KACA,EAA8BjY,mBAAS,QAAvC,oBAAOiW,EAAP,KAAgBiC,EAAhB,KACA,EAA4BlY,qBAA5B,oBAAO1H,EAAP,KAAe6f,EAAf,KACA,EAAwBnY,mBAAS,GAAjC,oBAAOiX,EAAP,KAAamB,EAAb,KACA,EAAgCpY,mBAASnY,EAASE,iBAAlD,oBAAOswB,EAAP,KAAiBC,EAAjB,KACA,EAAwBtY,mBAAS,IAAjC,oBAAOuY,EAAP,KAAaC,EAAb,KACA,EAA0BxY,mBAAS,GAAnC,oBAAOyY,EAAP,KAAcC,EAAd,KACM1a,EAAUyG,cAqBVqM,EAAoBhR,GAAO,CAC/BZ,OAAQ,MACRC,IAAI,kBAAD,OAAoBhQ,EAApB,YAA4BkR,GAA2B,CACxD4W,OACA3K,QACA2J,UACAoC,WACA/f,cAIEsgB,EAAmB9Y,GAAO,CAC9BZ,OAAQ,SACRC,IAAI,YAwCA0Z,EAAO,yCAAG,6BAAA1a,EAAA,sEACK2S,EAAkB1S,QAAQ,KAAM6hB,GADrC,OACR1H,EADQ,OAEdC,EAAQD,EAAK9pB,MACbiqB,EAASH,EAAKE,OAHA,2CAAH,qDAUb,OAJAjT,qBAAU,WACRqT,MACC,CAAC5B,EAAM3K,EAAOhU,EAAQ+f,IAGvB,mCACGpW,GAAcpa,EAAS0D,gBAAgB20B,eACtC,cAACnH,GAAA,EAAD,CAAOjlB,UAAU,OAAO1B,IAAI,EAA5B,SACE,8BACG0e,EAAkB7Q,QACjB,cAAC,GAAD,CAAe6X,UAAW3B,KAE1B,qBAAKnkB,UAAWD,EAAQ6C,KAAxB,SACE,eAACkZ,GAAA,EAAD,CAAO9b,UAAWD,EAAQ+C,MAA1B,UACE,cAAC,GAAD,CACE9G,MA/BI,WACpB,GAAIuqB,EAAK1Y,OACP,OACE,mHACkB,IAChB,mBAAGpN,MAAO,CAAEmF,WAAY,UAAxB,SAAqC2gB,EAAK,GAAGxR,YA0B5BoZ,GACPjL,aA/ED,SAACjtB,GAChBkwB,EAAUlwB,IA+EMqtB,cAAehd,IAEjB,cAAC0gB,GAAA,EAAD,CAAgBvmB,MAAO,CAAEpB,QAAS,UAAlC,SACE,eAAC4nB,GAAA,EAAD,CACEjnB,UAAWD,EAAQ6lB,MACnB3pB,KAAM,SACNwE,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CACEpG,QAASA,EACTua,MAAOA,EACP2J,QAASA,EACTC,cA3GI,SAAC3lB,EAAOqmB,GAEhCqB,EADchC,IAAYW,GAAsB,QAAVtK,EACrB,OAAS,OAC1B4L,EAAWtB,IAyGSsC,SAAUX,EAAK1Y,OACfsW,UAAWA,KAEb,eAACgD,GAAA,EAAD,WACGZ,EAAKrmB,KAAI,SAACknB,GACT,OACE,eAAC/C,GAAA,EAAD,CACEiD,OAAK,EACLC,UAAW,EAEX9mB,MAAO,CACL0F,aAAc,GACdpF,gBACe,YAAbqmB,EAAIjqB,KACA,UACA,WATV,UAYE,cAAConB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACGuQ,GACC,IAAIkE,KAAKsT,EAAI5U,MAAMwB,mBACjB,YAIN,cAACuQ,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACGuQ,GACCpP,OAAO4mB,EAAIpS,OAAOoZ,oBAGtB,cAAC7J,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACGxJ,EAASmD,aAAaouB,EAAIjqB,QAG7B,cAAConB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAIgF,cAGP,cAAC7H,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACE,cAAC8iB,GAAD,CACEjY,QAAS,CACP,CAAEiH,GAAI,OAAQnV,MAAO,wCACrB,CAAEmV,GAAI,SAAUnV,MAAO,uBAEzBomB,YAAa,SAACjlB,GAAD,OArHxB,SAACiqB,EAAKjqB,GACzB,IAAMyqB,EAAQ,CACZC,KAAM,WACJ7b,EAAQQ,KAAR,mCAC8B4a,EAAIjqB,KADlC,eAC6CiqB,EAAIjW,GADjD,uBACkE8c,KAGpEnG,OAAQ,WACNC,EAAmB,CACjB5rB,SAAS,EACTH,MAAO,4KACPK,SAAS,WAAD,8BAAE,uBAAA8P,EAAA,sEACFya,EAAiBxa,QAAQ,KAAMgb,EAAIjW,IADjC,OAERqV,EAAQD,EAAK7oB,QAAO,SAACC,GAAD,OAAUA,EAAKwT,KAAOiW,EAAIjW,OAC9C4W,EAAmB,CAAEnqB,KAAM,WAHnB,2CAAF,kDAAC,GAKTA,KAAM,SACN3B,KAAM,IACNC,oBAAoB,MAItB0rB,EAAMzqB,IACRyqB,EAAMzqB,KA+FwB6qB,CAAaZ,EAAKjqB,UApCnBiqB,EAAIjW,QA2CboV,EAAK1Y,SAAWiR,EAAkB7Q,SAClC,cAACoW,GAAA,EAAD,CAAU5jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACihB,GAAA,EAAD,CACE0D,QAAS,EACTxnB,MAAO,CAAE+jB,UAAW,UAFtB,SAIE,cAACtjB,EAAA,EAAD,CAAYnC,QAAQ,KAApB,+KASZ,cAAC,GAAD,CACEgmB,MAAO0B,EACP3B,iBA3KO,SAACvmB,EAAO2pB,GAC/B9B,EAAQ8B,IA2KQlD,wBAxKc,SAACzmB,GAC/B+nB,EAAY6B,SAAS5pB,EAAMslB,OAAO5tB,MAAOJ,EAASE,kBAClDqwB,EAAQ,IAuKQnB,KAAMA,EACNC,YAAamB,gB,oBChPlBnnB,gBAAW,SAACC,GAAD,MAAY,CACpCyD,KAAM,CACJgC,MAAO,QAETypB,OAAQ,CACNzpB,MAAO,OACPrF,QAAS,QAEXuD,MAAO,CACL8B,MAAO,OACP6D,aAActJ,EAAMwF,QAAQ,IAE9B2pB,gBAAiB,CACf7lB,aAActJ,EAAMwF,QAAQ,IAE9B4pB,iBAAkB,CAChB9lB,aAActJ,EAAMwF,QAAQ,GAC5BtF,QAAS,IAEXumB,MAAO,CACL9d,SAAU,KAEZ0mB,IAAK,CACH9uB,aAAa,aAAD,OAAeP,EAAMQ,QAAQiC,KAAKG,OAEhD+nB,OAAQ,CACN1oB,MAAO,QAETrI,SAAU,CACRgI,gBAAiB5B,EAAMQ,QAAQ+B,QAAQK,MAEzCjJ,OAAQ,CACNiI,gBAAiB5B,EAAMQ,QAAQiC,KAAKG,MAEtCkoB,QAAS,CACPlpB,gBAAiB5B,EAAMQ,QAAQ6B,UAAUO,MAE3C3L,QAAS,CACP2K,gBAAiB5B,EAAMQ,QAAQ+B,QAAQK,MAEzC0sB,MAAO,CACL1tB,gBAAiB5B,EAAMQ,QAAQ6B,UAAUO,MAE3CgoB,WAAY,CACVxqB,QAAS,OACTE,WAAY,SACZJ,QAAS,OC5CP2qB,GAAa,CACjB,CACE9zB,MAAO,uCACPD,MAAOJ,EAAS+C,cAAcqxB,SAEhC,CAAE/zB,MAAO,wCAAWD,MAAOJ,EAAS+C,cAAcE,QAClD,CAAE5C,MAAO,uCAAUD,MAAOJ,EAAS+C,cAAcG,WAsDpCmxB,GAnDA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChB,EAAoCnc,mBAAS,CAAEpQ,KAAM,GAAIksB,OAAQ,KAAjE,oBAAOM,EAAP,KAAmBC,EAAnB,KAEMpB,EAAe,SAACqB,GAAD,OAAU,SAAC/rB,GAC9B8rB,EAAc,2BAAKD,GAAN,kBAAmBE,EAAO/rB,EAAMslB,OAAO5tB,WAStD,OACE,eAACoK,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAGlF,WAAW,SAASgB,MAAO,CAAEpB,QAAS,IAAlE,UACE,cAACgB,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAACmR,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,qBACNsb,SAAUyX,EAAa,QACvBhzB,MAAOm0B,EAAWxsB,KAClB+T,WAAS,EACT1V,KAAK,YAGT,cAACoE,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAACmR,GAAA,EAAD,CACE8Y,QAAM,EACNr0B,MAAM,iCACNsb,SAAUyX,EAAa,UACvBhzB,MAAOm0B,EAAWN,OAClB/qB,QAAQ,WACR4S,WAAS,EACT1V,KAAK,QAPP,SASG+tB,GAAW9pB,KAAI,SAAC1C,GAAD,OACd,cAACqX,GAAA,EAAD,CAA6B5e,MAAOuH,EAAOvH,MAA3C,SACGuH,EAAOtH,OADKsH,EAAOvH,cAM5B,cAACoK,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAACa,EAAA,EAAD,CAAQpC,QAAQ,YAAYqC,MAAM,UAAUC,QApCjC,WACS,oBAAb8oB,GACTA,EAASC,IAkCP,8CAIF,cAACxV,GAAA,EAAD,CAASnU,MAAO,CAAEmE,MAAO,cChCzBuf,GAAY,CAChB,CACEhT,GAAI,YACJjb,MAAO,sBAET,CAAEib,GAAI,WAAYjb,MAAO,uEACzB,CACEib,GAAI,8CACJjb,MAAO,+CAET,CACEib,GAAI,SACJjb,MAAO,wCAET,CAAEib,GAAI,SAAUjb,MAAO,kCACvB,CAAEib,GAAI,WAGO,SAAS6U,KACtB,IAAM0I,EAAiB,CACrBC,MAAO,iCACPC,QAAS,8CAEL7uB,EAAUd,KAChB,EAA0B+O,mBAAS,OAAnC,oBAAOsM,EAAP,KAAc2L,EAAd,KACA,EAA4BjY,qBAA5B,oBAAO1H,EAAP,KAAe6f,EAAf,KACA,EAA8BnY,mBAAS,aAAvC,oBAAOiW,EAAP,KAAgBiC,EAAhB,KACA,EAAwBlY,mBAAS,GAAjC,oBAAOiX,EAAP,KAAamB,EAAb,KACA,EAAgCpY,mBAASnY,EAASE,iBAAlD,oBAAOswB,EAAP,KAAiBC,EAAjB,KACA,EAAwBtY,mBAAS,IAAjC,oBAAOuY,EAAP,KAAaC,EAAb,KACA,EAAwBxY,mBAAS,OAAjC,oBAAO7Q,EAAP,KAAa0xB,EAAb,KACA,EAA4B7gB,qBAA5B,oBAAOtQ,EAAP,KAAe8sB,EAAf,KACA,EAA0Bxc,mBAAS,GAAnC,oBAAOyY,EAAP,KAAcC,EAAd,KACM1a,EAAUyG,cAqBVqc,EAAqBhhB,GAAO,CAChCZ,OAAQ,MACRC,IAAKud,mBAAmB,YAAD,OACTrc,GAA2B,CACrC4W,OACA3K,QACA2J,UACAoC,WACA/f,SACA5I,SACAP,aAKAypB,EAAmB9Y,GAAO,CAC9BZ,OAAQ,SACRC,IAAI,aAqDA0Z,EAAO,yCAAG,6BAAA1a,EAAA,sEACa2iB,EAAmB1iB,UADhC,OACR2iB,EADQ,OAEdvI,EAAQuI,EAAatyB,MACrBiqB,EAASqI,EAAatI,OAHR,2CAAH,qDAUb,OAJAjT,qBAAU,WACRqT,MACC,CAAC5B,EAAM3K,EAAOhU,EAAQ+f,EAAUlpB,EAAMO,IAGvC,mCACGuS,GAAcpa,EAAS0D,gBAAgBa,gBACtC,cAAC2sB,GAAA,EAAD,CAAOjlB,UAAU,OAAO1B,IAAI,EAA5B,SACE,8BACG0uB,EAAmB7gB,QAClB,cAAC,GAAD,CAAe6X,UAAW3B,KAE1B,qBAAKnkB,UAAWD,EAAQ6C,KAAxB,SACE,eAACkZ,GAAA,EAAD,CAAO9b,UAAWD,EAAQ+C,MAA1B,UACE,cAAC,GAAD,CACE9G,MAAM,0DACNgnB,MACE/S,GAAcpa,EAAS0D,gBAAgBc,gBAjG7C,WACZ2R,EAAQQ,KAAK,yBAmGGyW,gBAAiB,cAAC,GAAD,CAAiBkH,SArCnC,SAAC1tB,GAChB,IAAMmuB,EAAU,gBAAYnuB,EAAKmB,KAAjB,mBAAgCnB,EAAKqtB,OAArC,KAChBU,EAAUI,GACVxE,EAAQ,MAmCQlD,aA3CD,SAACjtB,GAChBkwB,EAAUlwB,GACVmwB,EAAQ,IA0CQ9C,cAAehd,IAEjB,qBAAKtG,UAAWD,EAAQyuB,IAAxB,SACE,eAACQ,GAAA,EAAD,CACE/4B,MAAOkH,EACPqU,SAtCC,SAAC4C,EAAGne,GACvB44B,EAAQ54B,GACRmwB,EAAQ,IAqCU6I,eAAe,UACfC,UAAU,UACVC,UAAQ,EACRpwB,QAAQ,YANV,UAQE,cAACqwB,GAAA,EAAD,CAAKl5B,MAAM,8CAAWD,MAAM,QAC5B,cAACm5B,GAAA,EAAD,CAAKl5B,MAAM,4EAAgBD,MAAM,YACjC,cAACm5B,GAAA,EAAD,CAAKl5B,MAAM,gEAAcD,MAAM,eAGnC,cAAC+wB,GAAA,EAAD,CAAgBvmB,MAAO,CAAEpB,QAAS,UAAlC,SACE,eAAC4nB,GAAA,EAAD,CACEjnB,UAAWD,EAAQ6lB,MACnB3pB,KAAM,SACNwE,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CACEpG,QAASA,EACTua,MAAOA,EACP2J,QAASA,EACTC,cA/II,SAAC3lB,EAAOqmB,GAEhCqB,EADchC,IAAYW,GAAsB,QAAVtK,EACrB,OAAS,OAC1B4L,EAAWtB,IA6ISsC,SAAUX,EAAK1Y,OACfsW,UAAWA,KAGb,eAACgD,GAAA,EAAD,WACGZ,EAAKrmB,KAAI,SAACknB,GACT,OACE,eAAC/C,GAAA,EAAD,CACEiD,OAAK,EACLC,UAAW,EAEX9mB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACoe,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAII,YAEP,cAACjD,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAIK,WAEP,cAAClD,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACGqvB,EAAetH,EAAIiI,gBAGtB,cAAC9K,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SAA2B+nB,EAAIM,SAC/B,cAACnD,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACE,cAAC4V,GAAA,EAAD,CACE/e,MAAOL,EAAS+C,cAAcwuB,EAAI0C,QAClC9pB,UAAWmS,aACTpS,EAAQ+pB,OACR/pB,EAAQqnB,EAAI0C,aAIlB,cAACvF,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACE,cAAC8iB,GAAD,CACEjY,QAAS,CACP,CAAEiH,GAAI,cAAenV,MAAO,qDAC5B,CAAEmV,GAAI,UAAWnV,MAAO,2DACxB,CACEmV,GAAI,OACJnV,MAAO,uCACP0mB,QAASzS,GACPpa,EAAS0D,gBAAgBc,gBAG7B,CACE8W,GAAI,SACJnV,MAAO,qBACP0mB,QAASzS,GACPpa,EAAS0D,gBACNe,mBAIT8nB,YAAa,SAACjlB,GAAD,OA/JxB,SAACiqB,EAAKjqB,GACzB,IAAQgU,EAA4BiW,EAA5BjW,GAAIqW,EAAwBJ,EAAxBI,UAAWC,EAAaL,EAAbK,SACjBG,EAAQ,CACZC,KAAM,WACJ7b,EAAQQ,KAAR,kCAAwC2E,KAE1C2W,OAAQ,WACNC,EAAmB,CACjB5rB,SAAS,EACTH,MAAO,4KACPK,SAAS,WAAD,8BAAE,uBAAA8P,EAAA,sEACFya,EAAiBxa,QAAQ,KAAM+E,GAD7B,OAERqV,EAAQD,EAAK7oB,QAAO,SAACC,GAAD,OAAUA,EAAKwT,KAAOA,MAC1C4W,EAAmB,CAAEnqB,KAAM,WAHnB,2CAAF,kDAAC,GAKTA,KAAM,SACN3B,KAAM,IACNC,oBAAoB,KAGxBozB,QAAS,WACPtjB,EAAQQ,KAAR,+BAC0B2E,EAD1B,iBACqCqW,EADrC,YACkDC,KAGpDsD,YAAa,WACX/e,EAAQQ,KAAR,qCAA2C2E,EAA3C,qBAGAyW,EAAMzqB,IACRyqB,EAAMzqB,KAkIwB6qB,CAAaZ,EAAKjqB,UA7CnBiqB,EAAIjW,QAoDboV,EAAK1Y,SAAWihB,EAAmB7gB,SACnC,cAACoW,GAAA,EAAD,CAAU5jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACihB,GAAA,EAAD,CACE0D,QAAS,EACTxnB,MAAO,CAAE+jB,UAAW,UAFtB,SAIE,cAACtjB,EAAA,EAAD,CAAYnC,QAAQ,KAApB,+KASZ,cAAC,GAAD,CACEgmB,MAAO0B,EACP3B,iBAzNO,SAACvmB,EAAO2pB,GAC/B9B,EAAQ8B,IAyNQlD,wBAtNc,SAACzmB,GAC/B+nB,EAAY6B,SAAS5pB,EAAMslB,OAAO5tB,MAAOJ,EAASE,kBAClDqwB,EAAQ,IAqNQnB,KAAMA,EACNC,YAAamB,e,wBC3ElB6E,GA9MC,SAAC,GAA4C,IAA1C5a,EAAyC,EAAzCA,SAAUC,EAA+B,EAA/BA,UAAW4a,EAAoB,EAApBA,cACtC,EAA0Bnd,mBAAS,IAAnC,oBAAOod,EAAP,KAAcC,EAAd,KACA,EAAwCrd,oBACzB,OAAbmd,QAAa,IAAbA,OAAA,EAAAA,EAAeG,KAAKr1B,QAAS,GAD/B,oBAAOs1B,EAAP,KAAqBC,EAArB,KAGA,EAAiDhb,eAAzCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,OAAQC,EAAvC,EAAuCA,MACjC7Q,EAAUd,KAEVwsB,EAAiB3d,GAAO,CAC5BZ,OAAQ,MACRC,IAAI,SAGAue,EAAQ,yCAAG,6BAAAvf,EAAA,sEACMsf,EAAerf,UADrB,OACTC,EADS,OAEfgf,EAAShf,EAAO5P,MAFD,2CAAH,qDAgCd,OARA+W,qBAAU,WACRkY,MACC,IAEHlY,qBAAU,WACR5C,EAAMua,KACL,CAACva,EAAOua,IAGT,eAAC9qB,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAzB,UACE,cAACtE,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAACmR,GAAA,EAAD,CACE8Y,QAAM,EACNr0B,MAAM,2BACNsb,SAlBa,SAAC4C,GACpBoX,EAAgBpX,EAAEyP,OAAO5tB,QAkBnBA,MAAOs1B,EACPxsB,QAAQ,WACR4S,WAAS,EACT1V,KAAK,QACL2B,KAAK,OACL+tB,YAAa,CACX5rB,QAAS,CACPwqB,OAAQxqB,EAAQgqB,aAXtB,SAeGqB,EAAMlrB,KAAI,SAAC1C,GAAD,OACT,eAACqX,GAAA,EAAD,CAA6B5e,MAAOuH,EAAOvH,MAA3C,UACE,qBACE21B,IAAG,UAAK/1B,EAASC,YAAd,YAA6B0H,EAAOquB,MACvCC,IAAKtuB,EAAOtH,MACZuK,MAAO,CACLmE,MAAO,GACPtB,OAAQ,GACR3C,aAAc,MACdkD,WAAY,MAGfrG,EAAOtH,QAXKsH,EAAOvH,cAgB5B,cAACoK,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACEE,WAAS,EACT1b,MAAOA,EACPgG,KAAK,QACL2B,KAAMA,EACN1H,MAAM,0DACN6I,QAAQ,WACRyS,SAAUA,EACVpE,QAASuD,EAAOob,kBAChBra,WACEf,EAAOob,kBACHpb,EAAOob,kBAAkBze,QACzB,MAKZsE,MAAO,CACLE,UAAW,CACT7b,MAAO,GACPqX,QAASzX,EAASqC,WAAWI,aAE/BsxB,UAAW,CACT3zB,MAAO,GACPqX,QAASzX,EAASqC,WAAWI,cAGjCsF,KAAK,wBAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACEE,WAAS,EACT1b,MAAOA,EACPgG,KAAK,QACL2B,KAAMA,EACN1H,MAAM,0DACN6I,QAAQ,WACRyS,SAAUA,EACVpE,QAASuD,EAAOqb,cAChBta,WACEf,EAAOqb,cAAgBrb,EAAOqb,cAAc1e,QAAU,MAK9D1P,KAAK,oBAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACEE,WAAS,EACT1b,MAAOA,EACPgG,KAAK,QACL2B,KAAMA,EACN1H,MAAM,oDACN6I,QAAQ,WACRyS,SAAUA,EACVpE,QAASuD,EAAOsb,aAChBva,WACEf,EAAOsb,aAAetb,EAAOsb,aAAa3e,QAAU,MAK5D1P,KAAK,mBAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACEvb,MAAM,6CACNg2B,WAAS,EACTC,KAAM,EACNptB,QAAQ,WACRnB,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACP0b,WAAS,EACTvE,QAASuD,EAAOyb,YAChB1a,WACEf,EAAOyb,YAAczb,EAAOyb,YAAY9e,QAAU,MAK1D1P,KAAK,kBAGT,eAACyC,EAAA,EAAD,CACE1C,MAAI,EACJ2C,GAAI,GACJG,MAAO,CAAElB,QAAS,OAAQC,eAAgB,iBAH5C,UAKE,cAAC2B,EAAA,EAAD,CACEpC,QAAQ,YACRqC,MAAM,UACNjE,KAAK,SACLkE,QAASqP,GA5KF,SAACjU,GACd,IAAM4vB,EAAQC,eACRr2B,EAAK,2BACNwG,GADM,IAET6uB,KAPKF,EAAMmB,MAAK,SAAC5uB,GAAD,OAAUA,EAAK1H,QAAUs1B,KAQzCpa,GAAIga,EAAgBA,EAAcha,GAAKkb,EACvCG,WAAYrB,IAEd7a,EAASra,MAgKL,4CAQA,cAACkL,EAAA,EAAD,CAAQpC,QAAQ,YAAYqC,MAAM,UAAUC,QAASkP,EAArD,yDC9KFvH,GAAY9J,aAAW,SAACC,GAAD,MAAY,CACvCyD,KAAM,CACJ4F,OAAQ,UAEV1F,MAAO,CACL8B,MAAO,OACPvF,QAAS,IAEXrD,MAAO,CACLkd,cAAe,IAEjBJ,WAAY,CACV,UAAW,CACTzZ,QAAS,cAGb0qB,WAAY,CACVxqB,QAAS,OACTE,WAAY,SACZyZ,cAAe,EACfqW,WAAY,OAIVpL,GAAY,CAChB,CACEhT,GAAI,OACJjb,MAAO,+CAET,CAAEib,GAAI,gBAAiBjb,MAAO,4DAC9B,CACEib,GAAI,aACJjb,MAAO,2DAGT,CAAEib,GAAI,WAGO,SAASd,KACtB,IAAMtQ,EAAUiJ,KACVgD,EAAUyG,cACVtB,EAAKxC,GAAe,MAC1B,EAA4BX,mBAAS,IAArC,oBAAOmb,EAAP,KAAeC,EAAf,KACA,EAAgCpb,mBAAS,IAAzC,oBAAOye,EAAP,KAAiBC,EAAjB,KACA,EAA4C1e,mBAAS,KAArD,oBAAOwhB,EAAP,KAAuBC,EAAvB,KACA,EAAgDzhB,mBAAS,WAAzD,oBAAO0hB,EAAP,KAAyBC,EAAzB,KACA,EAAiDnf,eAAzCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,OAAQC,EAAvC,EAAuCA,MAEjCgf,EAAqB9hB,GAAO,CAChCZ,OAAQ,OACRC,IAAI,aAGA0iB,EAAsB/hB,GAAO,CACjCZ,OAAQ,MACRC,IAAI,YAAD,OAAcgE,KAGb2e,EAAwBhiB,GAAO,CACnCZ,OAAQ,MACRC,IAAI,YAAD,OAAcgE,KAGbgc,EAAuBrf,GAAO,CAClCZ,OAAQ,SACRC,IAAI,YAGAmD,EAAQ,yCAAG,WAAO7T,GAAP,kBAAA0P,EAAA,yDACTihB,EAAc,GACpBX,EAASvsB,KAAI,SAACvC,GACZ,IAAM0vB,EAAU,CACdC,OAAQ3vB,EAAK2tB,KAAKr1B,OAAS0H,EAAK2tB,KAAKna,GACrC4a,kBAAmBpuB,EAAKouB,kBACxBC,cAAeruB,EAAKquB,cACpBC,aAActuB,EAAKsuB,aACnBG,YAAazuB,EAAKyuB,YAClBjb,GAAIxT,EAAKwT,GAAGzC,WAAWN,SAAS,KAAO,KAAOzQ,EAAKwT,IAErDic,EAAY5gB,KAAK6gB,MAGbE,EAdS,2BAeV9wB,GAfU,IAgBbgwB,SAAUW,EACViC,aAAcK,EACdK,OAAQP,KAENre,EApBW,gCAqBA0e,EAAoBzjB,QAAQmhB,GArB5B,+DAuBTqC,EAAmBxjB,QAAQmhB,GAvBlB,OAwBfC,YAAW,WACTC,MACC,KA1BY,4CAAH,sDA6BRA,EAAW,WACfzhB,EAAQQ,KAAK,uBAGTkd,EAAS,yCAAG,6BAAAvd,EAAA,sEACK2jB,EAAsB1jB,UAD3B,OACV+c,EADU,OAEhBC,EAAUD,EAAO1sB,MACjBiwB,EAAYvD,EAAO1sB,KAAKgwB,UACxBgD,EAAkBtG,EAAO1sB,KAAKszB,QAC9BJ,EAAoBxG,EAAO1sB,KAAK4yB,cALhB,2CAAH,qDAQT1B,EAAkB,SAAClxB,GACvB,GAAIA,EAAK+vB,SAAU,CACjB,IAAM3P,EAAQ4P,EAASmB,WAAU,SAACjwB,GAAD,OAAUA,EAAKwT,KAAO1U,EAAK0U,MACtD0c,EAAW,YAAOpB,GACxBoB,EAAYhR,GAASpgB,EACrBiwB,EAAYmB,QAEZnB,EAAY,GAAD,mBAAKD,GAAL,CAAehwB,KAE5BqxB,KAGIA,EAAmB,WACvB/F,EAAmB,CAAEnqB,KAAM,aAGvBmwB,EAAe,SAACtxB,GACpBsrB,EAAmB,CACjB/rB,MAAO,2DACPD,UACE,cAAC,GAAD,CACEuU,SAAUqd,EACVpd,UAAWud,EACX3C,cAAe1uB,IAGnBmB,KAAM,UACN3B,KAAM,IACNE,SAAS,EACTD,oBAAoB,KA+CxB,OAVAsX,qBAAU,WACJrC,GACFuY,MAED,IAEHlW,qBAAU,WACR5C,EAAMuY,KACL,CAACvY,EAAOuY,IAGT,mCACE,sBAAM7Y,SAAUI,EAAaJ,GAA7B,SACIwf,EAAsB7hB,QAgUtB,cAAC,GAAD,IA/TA,cAAC5N,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGvf,GAAI,GAAIP,UAAWD,EAAQ6C,KAA7C,SACE,eAACkZ,GAAA,EAAD,CAAO9b,UAAWD,EAAQ+C,MAA1B,UACE,cAAC5B,EAAA,EAAD,CACElB,UAAWD,EAAQ/D,MACnB+C,QAAQ,KACRoS,GAAG,aACHpV,UAAU,MAJZ,SAMGoV,EAAK,sEAAiB,wEAGzB,cAAC9Q,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAzB,SACE,eAAC,WAAD,WACE,cAACtE,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,qBACN0H,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAO6W,UAChB9V,WACEf,EAAO6W,UAAY7W,EAAO6W,UAAUla,QAAU,GAEhDqE,WAAS,EACT1V,KAAK,WAIX2V,MAAO,CAAEC,SAAUhc,EAASqC,WAAWC,UACvCyF,KAAK,gBAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,sEACN0H,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAO8W,SAChB/V,WACEf,EAAO8W,SAAW9W,EAAO8W,SAASna,QAAU,GAE9CqE,WAAS,EACT1V,KAAK,WAIX2V,MAAO,CAAEC,SAAUhc,EAASqC,WAAWC,UACvCyF,KAAK,eAIT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,uCACN0H,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAO+W,OAChBhW,WACEf,EAAO+W,OAAS/W,EAAO+W,OAAOpa,QAAU,GAE1CqE,WAAS,EACT1V,KAAK,WAIX2V,MAAO,CACLE,UAAW,CACT7b,MAAO,GACPqX,QAASzX,EAASqC,WAAWE,eAE/BwxB,UAAW,CACT3zB,MAAO,GACPqX,QAASzX,EAASqC,WAAWE,gBAGjCwF,KAAK,aAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,eAAC0vB,GAAA,EAAD,CACE,aAAW,SACXpyB,KAAK,UACL3H,MAAOu5B,EACPhe,SA1HO,SAAC4C,GAC1Bqb,EAAkBrb,EAAEyP,OAAO5tB,QA0HTwK,MAAO,CACLlB,QAAS,OACT4H,cAAe,MACf3H,eAAgB,gBARpB,UAWE,cAACqpB,GAAA,EAAD,CACEznB,MAAM,UACNnL,MAAM,IACNwa,QAAS,cAACwf,GAAA,EAAD,CAAO7uB,MAAM,YACtBlL,MAAM,uBAER,cAAC2yB,GAAA,EAAD,CACEznB,MAAM,UACNnL,MAAM,IACNwa,QAAS,cAACwf,GAAA,EAAD,CAAO7uB,MAAM,YACtBlL,MAAM,sBAIZ,cAACmK,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACEtU,KAAK,SACL4B,QAAQ,WACR7I,MAAM,iEACN0H,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAOma,iBAChBpZ,WACEf,EAAOma,iBACHna,EAAOma,iBAAiBxd,QACxB,GAENqE,WAAS,EACT1V,KAAK,WAIX2B,KAAK,uBAIT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAACmR,GAAA,EAAD,CACE8Y,QAAM,EACNr0B,MAAM,gEACND,MAAOy5B,EACPle,SA3KK,SAAC4C,GACxBub,EAAoBvb,EAAEyP,OAAO5tB,QA2KX8I,QAAQ,WACR4S,WAAS,EACT1V,KAAK,QAPP,SASGpG,EAASG,kBAAkBkK,KAAI,SAAC1C,GAAD,OAC9B,cAACqX,GAAA,EAAD,CAA6B5e,MAAOuH,EAAOvH,MAA3C,SACGuH,EAAOtH,OADKsH,EAAOvH,cAO5B,cAACoK,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAACa,EAAA,EAAD,CACEpC,QAAQ,YACRqC,MAAM,UACNC,QAzNC,WACnB0sB,KAqNgB,8GAQCtB,EAAS5e,QACV,cAACxN,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAACwb,GAAA,EAAD,UACE,cAACkL,GAAA,EAAD,CAAgBvmB,MAAO,CAAEpB,QAAS,UAAlC,SACE,eAAC4nB,GAAA,EAAD,CACEjnB,UAAWD,EAAQ6lB,MACnB3pB,KAAM,SACNwE,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CAAage,UAAWA,KAExB,cAACgD,GAAA,EAAD,UACGsF,EAASvsB,KAAI,SAACknB,GACb,OACE,eAAC/C,GAAA,EAAD,CACEiD,OAAK,EACLC,UAAW,EAEX9mB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACoe,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACE,sBACEoB,MAAO,CACLlB,QAAS,OACTE,WAAY,UAHhB,UAME,qBACEmsB,IAAG,UAAK/1B,EAASC,YAAd,YAA6BsxB,EAAIkE,KAAKO,MACzCC,IAAK1E,EAAIkE,KAAKp1B,MACduK,MAAO,CACLmE,MAAO,GACPtB,OAAQ,GACR3C,aAAc,MACdkD,WAAY,KAGfujB,EAAIkE,KAAKp1B,OAASkxB,EAAIkE,KAAK1tB,UAGhC,cAAC2mB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAI4E,gBAEP,cAACzH,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAI2E,oBAGP,eAACxH,GAAA,EAAD,CACEllB,QAAQ,OACRoB,MAAO,CAAE+jB,UAAW,QAFtB,UAIE,cAAC7Q,GAAA,EAAD,CACEtS,QAAS,WA7Q7C0sB,EA6QqE3G,IADnC,SAGE,cAAC,GAAD,MAGF,cAACzT,GAAA,EAAD,CACEtS,QAAS,kBAhRnB,SAAC+lB,GAC3BW,EAAmB,CACjB5rB,SAAS,EACTH,MAAO,4KACPK,SAAS,WAAD,8BAAE,uBAAA8P,EAAA,0DACJgF,EADI,gCAEAgc,EAAqB/gB,QAAQ,KAAMgb,EAAIjW,IAFvC,OAIRub,EAAYD,EAAS/uB,QAAO,SAACC,GAAD,OAAUA,EAAKwT,KAAOiW,EAAIjW,OACtD4W,EAAmB,CAAEnqB,KAAM,WALnB,2CAAF,kDAAC,GAOTA,KAAM,SACN3B,KAAM,IACNC,oBAAoB,IAmQ6B8xB,CAAoB5G,IADrC,SAGE,cAAC,GAAD,WA3CCA,EAAIjW,kBAwD3B,cAAC9Q,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,2BACN0H,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAOkZ,QAChBnY,WACEf,EAAOkZ,QAAUlZ,EAAOkZ,QAAQvc,QAAU,GAE5CqE,WAAS,EACT1V,KAAK,WAIX2B,KAAK,cAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACEvb,MAAM,6CACNg2B,WAAS,EACTC,KAAM,EACNptB,QAAQ,WACRnB,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACP0b,WAAS,EACTvE,QAASuD,EAAOyb,YAChB1a,WACEf,EAAOyb,YACHzb,EAAOyb,YAAY9e,QACnB,MAKZ1P,KAAK,kBAIT,eAACyC,EAAA,EAAD,CACE1C,MAAI,EACJ2C,GAAI,GACJG,MAAO,CAAElB,QAAS,OAAQC,eAAgB,iBAH5C,UAKE,cAAC2B,EAAA,EAAD,CAAQpC,QAAQ,YAAYqC,MAAM,UAAUjE,KAAK,SAAjD,4CAGA,cAACgE,EAAA,EAAD,CACEpC,QAAQ,YACRqC,MAAM,YACNC,QAASosB,EAHX,mEC7gBLvuB,oBAAW,SAACC,GAAD,MAAY,CACpCyD,KAAM,CACJgC,MAAO,QAET9B,MAAO,CACL8B,MAAO,OACP6D,aAActJ,EAAMwF,QAAQ,IAE9BihB,MAAO,CACL9d,SAAU,KAEZ0mB,IAAK,CACH9uB,aAAa,aAAD,OAAeP,EAAMQ,QAAQiC,KAAKG,OAEhD5E,KAAM,CACJiE,MAAO,QAET0H,QAAS,CACP1H,MAAOjC,EAAMQ,QAAQ4B,QAAQQ,MAE/B1I,KAAM,CACJ0H,gBAAiB5B,EAAMQ,QAAQ+B,QAAQK,MAEzCgH,WAAY,CACV3H,MAAOjC,EAAMQ,QAAQ+B,QAAQK,MAE/BzI,IAAK,CACHyH,gBAAiB5B,EAAMQ,QAAQuC,OAAOH,MAExCmuB,UAAW,CACT9uB,MAAOjC,EAAMQ,QAAQuC,OAAOH,MAE9B+W,WAAY,CACV,UAAW,CACTzZ,QAAS,cAGb0qB,WAAY,CACVxqB,QAAS,OACTE,WAAY,SACZyZ,cAAe,EACfqW,WAAY,GAEdY,eAAgB,CACdpvB,gBAAiB5B,EAAMQ,QAAQ+B,QAAQK,KACvCX,MAAO,OACP,UAAW,CACTL,gBAAiB5B,EAAMQ,QAAQ+B,QAAQK,W,UCzCvCiH,GAAY9J,aAAW,SAACC,GAAD,MAAY,CACvC2Z,WAAY,CACV,UAAW,CACTzZ,QAAS,kBAmGA6qB,GA/FA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACVpqB,EAAUiJ,KAChB,EAA4CgF,qBAA5C,oBAAOoiB,EAAP,KAAuBC,EAAvB,KACA,EAAiDriB,mBAASqQ,QAA1D,oBAAOiS,EAAP,KAAyBC,EAAzB,KACA,EAA6CviB,mBAASqQ,QAAtD,oBAAOmS,EAAP,KAAuBC,EAAvB,KACA,EAAkCziB,mBAAS,IAA3C,oBAAO0iB,EAAP,KAAkBC,EAAlB,KAEMC,EAAsB9iB,GAAO,CACjCZ,OAAQ,MACRC,IAAK,aAOD0jB,EAAe,SAACzc,EAAGjX,GACV,SAATA,EACFozB,EAAqBnc,GAErBqc,EAAmBrc,IAIjB0c,EAAY,yCAAG,6BAAA3kB,EAAA,sEACQykB,EAAoBxkB,UAD5B,OACbue,EADa,OAEnBgG,EAAahG,EAAaluB,MAFP,2CAAH,qDAmBlB,OAJA+W,qBAAU,WACRsd,MACC,IAGD,eAACzwB,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAGlF,WAAW,SAASgB,MAAO,CAAEpB,QAAS,IAAlE,UACE,cAACgB,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAIG,MAAO,CAAElB,QAAS,QAA5C,SACE,cAACwxB,GAAA,EAAD,CACE5f,GAAG,iBACHK,SApCe,SAAC4C,EAAGne,GACzBo6B,EAAkBp6B,IAoCZiU,QAASwmB,EACTM,eAAgB,SAACxzB,GAAD,gBAAeA,EAAOgqB,UAAtB,YAAmChqB,EAAOiqB,WAC1D9V,WAAS,EACT1V,KAAK,QACLg1B,YAAa,SAAC3iB,GAAD,OACX,cAACmD,GAAA,EAAD,2BAAenD,GAAf,IAAuBpY,MAAM,0DAAa6I,QAAQ,mBAIxD,cAACsB,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAIN,UAAWD,EAAQ+Y,WAA7C,SACE,cAACoI,GAAA,EAAD,CACEC,QAAM,EACNvjB,KAAK,OACL1H,MAAM,8CACNkrB,aAAa,WACbC,QAAQ,iCACRC,YAAY,qBACZC,UAAW,SAAC/O,GAAD,OAAWA,EAAOA,EAAKyB,OAAO,iBAAmB,IAC5Dhe,MAAOq6B,EACP9e,SAAU,SAAC4C,GAAD,OAAOyc,EAAazc,EAAG,SACjC3T,MAAO,CAAEmE,MAAO,YAGpB,cAACvE,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAIN,UAAWD,EAAQ+Y,WAA7C,SACE,cAACoI,GAAA,EAAD,CACEC,QAAM,EACNvjB,KAAK,OACL1H,MAAM,8CACNkrB,aAAa,WACbC,QAAQ,iCACRC,YAAY,qBACZC,UAAW,SAAC/O,GAAD,OAAWA,EAAOA,EAAKyB,OAAO,iBAAmB,IAC5Dhe,MAAOu6B,EACPhf,SAAU,SAAC4C,GAAD,OAAOyc,EAAazc,EAAG,OACjC3T,MAAO,CAAEmE,MAAO,YAGpB,cAACvE,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAACa,EAAA,EAAD,CAAQpC,QAAQ,YAAYqC,MAAM,UAAUC,QA1DjC,WACS,oBAAb8oB,GACTA,EAAS,eAAD,OAEJiG,EAAiBA,EAAejf,GAAK,KAFjC,iBAGGmf,EAAiBvR,GAAGC,cAHvB,eAG2CwR,EAAezR,GAAGC,cAH7D,OAwDN,8CAIF,cAACpK,GAAA,EAAD,CAASnU,MAAO,CAAEmE,MAAO,cCzEzBuf,GAAY,CAChB,CAAEhT,GAAI,KAAMjb,MAAO,uEACnB,CACEib,GAAI,SACJjb,MAAO,kCAET,CACEib,GAAI,OACJjb,MAAO,kCAET,CAAEib,GAAI,QAASjb,MAAO,4BACtB,CACEib,GAAI,WACJjb,MAAO,qDAET,CACEib,GAAI,OACJjb,MAAO,uBAsSI8vB,GAhSE,WACf,IAAMkL,EAAcviB,GAAe,QAC7B5O,EAAUd,KAChB,EAA0B+O,mBAAS,OAAnC,oBAAOsM,EAAP,KAAc2L,EAAd,KACA,EAA8BjY,mBAAS,QAAvC,oBAAOiW,EAAP,KAAgBiC,EAAhB,KACA,EAA4BlY,qBAA5B,oBAAO1H,EAAP,KAAe6f,EAAf,KACA,EAAwBnY,mBAAS,GAAjC,oBAAOiX,EAAP,KAAamB,EAAb,KACA,EAAgCpY,mBAASnY,EAASE,iBAAlD,oBAAOswB,EAAP,KAAiBC,EAAjB,KACA,EAAwBtY,mBAAS,IAAjC,oBAAOuY,EAAP,KAAaC,EAAb,KACA,EAA4BxY,qBAA5B,oBAAOtQ,EAAP,KAAe8sB,EAAf,KACA,EAA0Bxc,mBAAS,GAAnC,oBAAOyY,EAAP,KAAcC,EAAd,KACA,EAAwB1Y,mBAASkjB,GAAjC,oBAAO/zB,EAAP,KAAa0xB,EAAb,KACM7iB,EAAUyG,cA0BV0e,EAAoBrjB,GAAO,CAC/BZ,OAAQ,MACRC,IAAKud,mBAAmB,WAAD,OACVrc,GAA2B,CACpC4W,OACA3K,QACA2J,UACAoC,WACA/f,SACAnJ,OACAO,eAgDAmpB,GA3CmB/Y,GAAO,CAC9BZ,OAAQ,SACRC,IAAI,YAyCO,yCAAG,6BAAAhB,EAAA,sEACYglB,EAAkB/kB,UAD9B,OACRglB,EADQ,OAEd5K,EAAQ4K,EAAY30B,MACpBiqB,EAAS0K,EAAY3K,OAHP,2CAAH,sDAmBb,OARAjT,qBAAU,WACRqT,MACC,CAAC5B,EAAM3K,EAAOhU,EAAQ+f,EAAUlpB,EAAMO,IAEzC8V,qBAAU,WACRqb,EAAQqC,KACP,CAACA,IAGF,mCACGjhB,GAAcpa,EAAS0D,gBAAgB2B,eACtC,cAAC6rB,GAAA,EAAD,CAAOjlB,UAAU,OAAO1B,IAAI,EAA5B,SACE,8BACG+wB,EAAkBljB,QACjB,cAAC,GAAD,CAAe6X,UAAW3B,KAE1B,qBAAKnkB,UAAWD,EAAQ6C,KAAxB,SACE,eAACkZ,GAAA,EAAD,CAAO9b,UAAWD,EAAQ+C,MAA1B,UACE,cAAC,GAAD,CACE9G,MAtCH,SAATmB,EACK,4GACW,QAATA,EACF,2GAEF,4GAkCS6lB,MAAgB,QAAT7lB,GAlGX,WACZ6O,EAAQQ,KAAR,mCAAyCrP,KAkGzB+lB,aA/FD,SAACjtB,GAChBkwB,EAAUlwB,GACVmwB,EAAQ,IA8FQ9C,cAAehd,EACf2c,gBAAiB,cAAC,GAAD,CAAiBkH,SA5BnC,SAAC1tB,GAChB+tB,EAAU/tB,GACV2pB,EAAQ,QA4BM,qBAAKpmB,UAAWD,EAAQyuB,IAAxB,SACE,eAACQ,GAAA,EAAD,CACEjwB,QAAQ,YACR9I,MAAOkH,EACPqU,SArDC,SAAC4C,EAAGne,GACvB44B,EAAQ54B,IAqDUg5B,eAAe,UACfC,UAAU,UACVC,UAAQ,EANV,UAQE,cAACC,GAAA,EAAD,CACEpsB,KACE,mBACEhD,UAAWmS,aACT,uBACApS,EAAQ+I,SAHZ,kBASF5S,MAAM,iEACND,MAAM,QAER,cAACm5B,GAAA,EAAD,CACEpsB,KACE,mBACEhD,UAAWmS,aACT,uBACApS,EAAQgJ,YAHZ,kBASF7S,MAAM,mFACND,MAAM,SAER,cAACm5B,GAAA,EAAD,CACEpsB,KACE,mBACEhD,UAAWmS,aACT,uBACApS,EAAQmwB,WAHZ,6BASFh6B,MAAM,mFACND,MAAM,aAIZ,cAAC+wB,GAAA,EAAD,CAAgBvmB,MAAO,CAAEpB,QAAS,UAAlC,SACE,eAAC4nB,GAAA,EAAD,CACEjnB,UAAWD,EAAQ6lB,MACnB3pB,KAAM,SACNwE,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CACEpG,QAASA,EACTua,MAAOA,EACP2J,QAASA,EACTC,cArLI,SAAC3lB,EAAOqmB,GAEhCqB,EADchC,IAAYW,GAAsB,QAAVtK,EACrB,OAAS,OAC1B4L,EAAWtB,IAmLSsC,SAAUX,EAAK1Y,OACfsW,UAAWA,KAEb,eAACgD,GAAA,EAAD,WACGZ,EAAKrmB,KAAI,SAACknB,GACT,OACE,eAAC/C,GAAA,EAAD,CACEiD,OAAK,EACLC,UAAW,EAEX9mB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACoe,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACGuQ,GAAcwX,EAAIjW,MAErB,cAACoT,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAIiK,eAAJ,UACMjK,EAAIiK,eADV,YAC4BjK,EAAIkK,SADhC,KAEGlK,EAAIkK,WAEV,cAAC/M,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACGuQ,GACC,IAAIkE,KAAKsT,EAAI5U,MAAMwB,mBACjB,YAIN,cAACuQ,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACGuQ,GACCpP,OAAO4mB,EAAIpS,OAAOoZ,oBAGtB,cAAC7J,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAIuF,WAEP,cAACpI,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACE,cAAC4V,GAAA,EAAD,CACE/e,MAAOL,EAASuD,aAAaguB,EAAIjqB,MACjC6C,UAAWmS,aACTpS,EAAQ5C,KACR4C,EAAQqnB,EAAIjqB,aA/BbiqB,EAAIjW,QAoDboV,EAAK1Y,SAAWsjB,EAAkBljB,SAClC,cAACoW,GAAA,EAAD,CAAU5jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACihB,GAAA,EAAD,CACE0D,QAAS,EACTxnB,MAAO,CAAE+jB,UAAW,UAFtB,SAIE,cAACtjB,EAAA,EAAD,CAAYnC,QAAQ,KAApB,+KASZ,cAAC,GAAD,CACEgmB,MAAO0B,EACP3B,iBA9PO,SAACvmB,EAAO2pB,GAC/B9B,EAAQ8B,IA8PQlD,wBA3Pc,SAACzmB,GAC/B+nB,EAAY6B,SAAS5pB,EAAMslB,OAAO5tB,MAAOJ,EAASE,kBAClDqwB,EAAQ,IA0PQnB,KAAMA,EACNC,YAAamB,gB,UC3UlBnnB,gBAAW,SAACC,GAAD,MAAY,CACpCyD,KAAM,CACJgC,MAAO,QAET9B,MAAO,CACL8B,MAAO,OACP6D,aAActJ,EAAMwF,QAAQ,IAE9BihB,MAAO,CACL9d,SAAU,KAEZ0mB,IAAK,CACH9uB,aAAa,aAAD,OAAeP,EAAMQ,QAAQiC,KAAKG,OAEhD5E,KAAM,CACJiE,MAAO,QAET0H,QAAS,CACP1H,MAAOjC,EAAMQ,QAAQ4B,QAAQQ,MAE/B9I,OAAQ,CACN8H,gBAAiB5B,EAAMQ,QAAQ+B,QAAQK,MAEzCgH,WAAY,CACV3H,MAAOjC,EAAMQ,QAAQ+B,QAAQK,MAE/B7I,QAAS,CACP6H,gBAAiB5B,EAAMQ,QAAQuC,OAAOH,MAExCmuB,UAAW,CACT9uB,MAAOjC,EAAMQ,QAAQuC,OAAOH,MAE9B+W,WAAY,CACV,UAAW,CACTzZ,QAAS,cAGb0qB,WAAY,CACVxqB,QAAS,OACTE,WAAY,SACZyZ,cAAe,EACfqW,WAAY,OCtBVgC,GAAoB,CACxB,CACEpgB,GAAI,YACJjb,MAAO,sBAET,CAAEib,GAAI,WAAYjb,MAAO,uEAEzB,CAAEib,GAAI,SAAUjb,MAAO,kCACvB,CAAEib,GAAI,WAEFqgB,GAAkB,CACtB,CAAErgB,GAAI,WAAYjb,MAAO,iGACzB,CAAEib,GAAI,OAAQjb,MAAO,yCAErB,CAAEib,GAAI,WAGF7Z,GAAc,CAClBC,SAAU,iCACVC,SAAU,iCACVE,OAAQ,wCAGK,SAASsuB,GAAT,GAAoD,IAAhCyL,EAA+B,EAA/BA,SAAUlhB,EAAqB,EAArBA,UAAW7S,EAAU,EAAVA,OAChDqC,EAAUd,KAChB,EAA0B+O,mBAAS,OAAnC,oBAAOsM,EAAP,KAAc2L,EAAd,KACA,EAA4BjY,qBAA5B,oBAAO1H,EAAP,KAAe6f,EAAf,KACA,EAA8BnY,mBAAS,aAAvC,oBAAOiW,EAAP,KAAgBiC,EAAhB,KACA,EAAwBlY,mBAAS,GAAjC,oBAAOiX,EAAP,KAAamB,EAAb,KACA,EAAgCpY,mBAASnY,EAASE,iBAAlD,oBAAOswB,EAAP,KAAiBC,EAAjB,KACA,EAAwBtY,mBAAS,IAAjC,oBAAOuY,EAAP,KAAaC,EAAb,KAqBMiE,EAAqB3c,GAAO,CAChCZ,OAAQ,MACRC,IAAI,GAAD,OAAKzP,EAAL,YAAe2Q,GAA2B,CAC3C4W,OACA3K,QACA2J,UACAoC,WACA/f,cAQEugB,EAAO,yCAAG,6BAAA1a,EAAA,sEACase,EAAmBre,UADhC,OACRue,EADQ,OAEdnE,EAAQmE,EAAaluB,MAFP,2CAAH,qDASb,OAJA+W,qBAAU,WACRqT,MACC,CAAC5B,EAAM3K,EAAOhU,EAAQ+f,IAGvB,sBAAK5lB,MAAO,CAAE4G,WAAY,IAA1B,UACE,cAAC,GAAD,CAAU6b,aAfG,SAACjtB,GAChBkwB,EAAUlwB,MAeR,cAAC+wB,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CAAOjnB,UAAWD,EAAQ6lB,MAAO3pB,KAAM,SAAvC,UACE,cAAC,GAAD,CACE8D,QAASA,EACTua,MAAOA,EACP2J,QAASA,EACTC,cApDgB,SAAC3lB,EAAOqmB,GAEhCqB,EADchC,IAAYW,GAAsB,QAAVtK,EACrB,OAAS,OAC1B4L,EAAWtB,IAkDHsC,SAAUX,EAAK1Y,OACfsW,UACa,WAAXzmB,EAAsB8zB,GAAkBD,KAI5C,eAACpK,GAAA,EAAD,WACGZ,EAAKrmB,KAAI,SAACknB,GACT,OACE,eAAC/C,GAAA,EAAD,CACEiD,OAAK,EACLC,UAAW,EAEX9mB,MAAO,CAAE0F,aAAc,IAJzB,UAMc,WAAXzI,GACC,cAAC6mB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SAA2B+nB,EAAIlxB,QAErB,WAAXwH,GACC,cAAC6mB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG/H,GAAY8vB,EAAI4C,cAIT,aAAXtsB,GACC,cAAC6mB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SAA2B+nB,EAAII,YAErB,aAAX9pB,GACC,cAAC6mB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SAA2B+nB,EAAIK,WAGrB,aAAX/pB,GACC,cAAC6mB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACE,cAAC4V,GAAA,EAAD,CACE/e,MAAOL,EAAS+C,cAAcwuB,EAAI0C,QAClC9pB,UAAWmS,aAAKpS,EAAQ+pB,OAAQ/pB,EAAQqnB,EAAI0C,aAKlD,cAACvF,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACE,cAAC8B,EAAA,EAAD,CACEpC,QAAQ,YACRqC,MAAM,UACNC,QAAS,WAjF3BowB,EAiFgDrK,IAHhC,yEA7Bc,aAAX1pB,EAAwB0pB,EAAIjW,GAAKiW,EAAInxB,WAwC9CswB,EAAK1Y,SAAW4c,EAAmBxc,SACnC,cAACoW,GAAA,EAAD,CAAU5jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACihB,GAAA,EAAD,CAAW0D,QAAS,EAAGxnB,MAAO,CAAE+jB,UAAW,UAA3C,SACE,cAACtjB,EAAA,EAAD,CAAYnC,QAAQ,KAApB,+KASZ,cAAC,GAAD,CACEgmB,MAAOwB,EAAK1Y,OACZiX,iBAjHmB,SAACvmB,EAAO2pB,GAC/B9B,EAAQ8B,IAiHJlD,wBA9G0B,SAACzmB,GAC/B+nB,EAAY6B,SAAS5pB,EAAMslB,OAAO5tB,MAAOJ,EAASE,kBAClDqwB,EAAQ,IA6GJnB,KAAMA,EACNC,YAAamB,IAGf,cAAChmB,EAAA,EAAD,CACE1C,MAAI,EACJ2C,GAAI,GACJG,MAAO,CAAElB,QAAS,OAAQC,eAAgB,YAH5C,SAKE,cAAC2B,EAAA,EAAD,CAAQpC,QAAQ,YAAYqC,MAAM,YAAYC,QAASkP,EAAvD,uD,4CC4ROmhB,GAzcC,SAAC,GAA+D,IAA7DphB,EAA4D,EAA5DA,SAAUC,EAAkD,EAAlDA,UAAW4a,EAAuC,EAAvCA,cAA4BhuB,GAAW,EAAxBw0B,YAAwB,EAAXx0B,MAClE,EAA0B6Q,mBAAS,IAAnC,oBAAOod,EAAP,KAAcC,EAAd,KACA,EAAmDrd,mBAASqQ,QAA5D,oBAAOvJ,EAAP,KAAsB8c,EAAtB,KACA,EAAsD5jB,mBAAQ,OAC5Dmd,QAD4D,IAC5DA,OAD4D,EAC5DA,EAAe0G,iBADjB,oBAAOC,EAAP,KAA4BC,EAA5B,KAGA,EAAwC/jB,oBAAsB,OAAbmd,QAAa,IAAbA,OAAA,EAAAA,EAAemC,SAAU,GAA1E,oBAAO/B,EAAP,KAAqBC,EAArB,KACA,EAA4Bxd,mBAAS,IAArC,oBAAOgkB,EAAP,KAAeC,EAAf,KACA,EAAwCjkB,oBACzB,OAAbmd,QAAa,IAAbA,OAAA,EAAAA,EAAe+G,aAAc,GAD/B,oBAAOC,EAAP,KAAqBC,EAArB,KAGA,EAAiD5hB,eAAzCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,OAAQC,EAAvC,EAAuCA,MACjC7Q,EAAUd,KAEVwsB,EAAiB3d,GAAO,CAC5BZ,OAAQ,MACRC,IAAI,SAGAklB,EAAiBvkB,GAAO,CAC5BZ,OAAQ,MACRC,IAAI,oBAGAue,EAAQ,yCAAG,6BAAAvf,EAAA,sEACMsf,EAAerf,UADrB,OACTC,EADS,OAEfgf,EAAShf,EAAO5P,MAFD,2CAAH,qDAKR61B,EAAS,yCAAG,6BAAAnmB,EAAA,sEACKkmB,EAAejmB,UADpB,OACVC,EADU,OAEhB4lB,EAAU5lB,EAAO5P,MAFD,2CAAH,qDAKT81B,EAAkB,WACtB,OAAOnH,EAAMmB,MAAK,SAAC5uB,GAAD,OAAUA,EAAK1H,QAAUs1B,MAGvCiH,EAAkB,WACtB,OAAOR,EAAOzF,MAAK,SAAC5uB,GAAD,OAAUA,EAAK1H,QAAUk8B,MAGxCM,EAAS,SAACh2B,GACd,IACIxG,EADEo2B,EAAQC,eAiCd,OA9BEr2B,EADW,UAATkH,EACG,2BACAV,GADA,IAEH0U,GAAIga,EAAgBA,EAAcha,GAAKkb,EACvC6F,WAAYC,EACZO,SAAUF,IACVhG,WAAYrB,IAEI,SAAThuB,EACJ,2BACAV,GADA,IAEH0U,GAAIga,EAAgBA,EAAcha,GAAKkb,EACvC6F,WAAYC,EACZ7E,OAAQ/B,EACRmH,SAAUF,IACVlH,KAAMiH,IACNV,gBAAiBC,EACjBtF,WAAYrB,IAGT,2BACA1uB,GADA,IAEH0U,GAAIga,EAAgBA,EAAcha,GAAKkb,EACvC6F,WAAYC,EACZ7E,OAAQ/B,EACRmH,SAAUF,IACVlH,KAAMiH,IACNzd,cAAeA,EAAciK,GAC7ByN,WAAYrB,IAGT7a,EAASra,EAAOkH,IAAQguB,IAG3BwH,EAAe,SAACve,GACpBoX,EAAgBpX,EAAEyP,OAAO5tB,QAOrB28B,EAAe,SAACxe,GACpBge,EAAgBhe,EAAEyP,OAAO5tB,QAY3B,OATAud,qBAAU,WACRkY,IACA4G,MACC,IAEH9e,qBAAU,WACR5C,EAAMua,KACL,CAACva,EAAOua,IAGT,sBAAM7a,SAAUI,EAAa+hB,GAA7B,SACE,eAACpyB,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAzB,UACE,eAACtE,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,UACY,UAATnD,GACC,eAACkD,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAzB,UACE,cAACtE,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAACmR,GAAA,EAAD,CACE8Y,QAAM,EACNr0B,MAAM,iCACNsb,SAAUohB,EACV38B,MAAOk8B,EACPpzB,QAAQ,WACR4S,WAAS,EACT1V,KAAK,QACL2B,KAAK,OARP,SAUGo0B,EAAO9xB,KAAI,SAAC1C,GAAD,OACV,cAACqX,GAAA,EAAD,CAA6B5e,MAAOuH,EAAOvH,MAA3C,SACGuH,EAAOtH,OADKsH,EAAOvH,cAM5B,cAACoK,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,oDACNiH,KAAK,SACLS,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAOqE,MAChBtD,WAAYf,EAAOqE,MAAQrE,EAAOqE,MAAM1H,QAAU,GAClDqE,WAAS,EACT1V,KAAK,WAIX2B,KAAK,eAKH,SAATT,GACC,eAACkD,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAzB,UACE,cAACtE,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAACmR,GAAA,EAAD,CACE8Y,QAAM,EACNr0B,MAAM,iCACNsb,SAAUohB,EACV38B,MAAOk8B,EACPpzB,QAAQ,WACR4S,WAAS,EACT1V,KAAK,QACL2B,KAAK,OARP,SAUGo0B,EAAO9xB,KAAI,SAAC1C,GAAD,OACV,cAACqX,GAAA,EAAD,CAA6B5e,MAAOuH,EAAOvH,MAA3C,SACGuH,EAAOtH,OADKsH,EAAOvH,cAM5B,cAACoK,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAACmR,GAAA,EAAD,CACE8Y,QAAM,EACNr0B,MAAM,0DACNsb,SAzFY,SAAC4C,GAC3B2d,EAAuB3d,EAAEyP,OAAO5tB,QAyFlBA,MAAO67B,EACP/yB,QAAQ,WACR4S,WAAS,EACT1V,KAAK,QACL2B,KAAK,OARP,SAUG/H,EAAS8F,sBAAsBuE,KAAI,SAAC1C,GAAD,OAClC,cAACqX,GAAA,EAAD,CAA6B5e,MAAOuH,EAAOvH,MAA3C,SACGuH,EAAOtH,OADKsH,EAAOvH,cAM5B,cAACoK,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,4BACNiH,KAAK,SACLS,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAOqE,MAChBtD,WAAYf,EAAOqE,MAAQrE,EAAOqE,MAAM1H,QAAU,GAClDqE,WAAS,EACT1V,KAAK,WAIX2V,MAAO,CAAEC,SAAUhc,EAASqC,WAAWC,UACvCyF,KAAK,YAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,sEACN4Z,QAAM,EACNlS,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAOkiB,aAChBnhB,WACEf,EAAOkiB,aAAeliB,EAAOkiB,aAAavlB,QAAU,GAEtDqE,WAAS,EACT1V,KAAK,WAIX2B,KAAK,mBAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAACmR,GAAA,EAAD,CACE8Y,QAAM,EACNr0B,MAAM,2BACNsb,SAAUmhB,EACV18B,MAAOs1B,EACPxsB,QAAQ,WACR4S,WAAS,EACT1V,KAAK,QACL2B,KAAK,OACL+tB,YAAa,CACX5rB,QAAS,CACPwqB,OAAQxqB,EAAQgqB,aAXtB,SAeGqB,EAAMlrB,KAAI,SAAC1C,GAAD,OACT,eAACqX,GAAA,EAAD,CAA6B5e,MAAOuH,EAAOvH,MAA3C,UACE,qBACE21B,IAAG,UAAK/1B,EAASC,YAAd,YAA6B0H,EAAOquB,MACvCC,IAAKtuB,EAAOtH,MACZuK,MAAO,CACLmE,MAAO,GACPtB,OAAQ,GACR3C,aAAc,MACdkD,WAAY,MAGfrG,EAAOtH,QAXKsH,EAAOvH,iBAkBtB,UAATkH,GACC,eAACkD,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAzB,UACE,cAACtE,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAACmR,GAAA,EAAD,CACE8Y,QAAM,EACNr0B,MAAM,iCACNsb,SAAUohB,EACV38B,MAAOk8B,EACPpzB,QAAQ,WACR4S,WAAS,EACT1V,KAAK,QACL2B,KAAK,OARP,SAUGo0B,EAAO9xB,KAAI,SAAC1C,GAAD,OACV,cAACqX,GAAA,EAAD,CAA6B5e,MAAOuH,EAAOvH,MAA3C,SACGuH,EAAOtH,OADKsH,EAAOvH,cAM5B,cAACoK,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,wCACNiH,KAAK,SACLS,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAOqE,MAChBtD,WAAYf,EAAOqE,MAAQrE,EAAOqE,MAAM1H,QAAU,GAClDqE,WAAS,EACT1V,KAAK,WAIX2V,MAAO,CAAEC,SAAUhc,EAASqC,WAAWC,UACvCyF,KAAK,YAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,8CACN4Z,QAAM,EACNlS,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAOmiB,aAChBphB,WACEf,EAAOmiB,aAAeniB,EAAOmiB,aAAaxlB,QAAU,GAEtDqE,WAAS,EACT1V,KAAK,WAIX2B,KAAK,mBAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAACmR,GAAA,EAAD,CACE8Y,QAAM,EACNr0B,MAAM,2BACNsb,SAAUmhB,EACV18B,MAAOs1B,EACPxsB,QAAQ,WACR4S,WAAS,EACT1V,KAAK,QACL2B,KAAK,OACL+tB,YAAa,CACX5rB,QAAS,CACPwqB,OAAQxqB,EAAQgqB,aAXtB,SAeGqB,EAAMlrB,KAAI,SAAC1C,GAAD,OACT,eAACqX,GAAA,EAAD,CAA6B5e,MAAOuH,EAAOvH,MAA3C,UACE,qBACE21B,IAAG,UAAK/1B,EAASC,YAAd,YAA6B0H,EAAOquB,MACvCC,IAAKtuB,EAAOtH,MACZuK,MAAO,CACLmE,MAAO,GACPtB,OAAQ,GACR3C,aAAc,MACdkD,WAAY,MAGfrG,EAAOtH,QAXKsH,EAAOvH,cAgB5B,cAACoK,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,2BACN4Z,QAAM,EACNlS,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAOoiB,WAChBrhB,WACEf,EAAOoiB,WAAapiB,EAAOoiB,WAAWzlB,QAAU,GAElDqE,WAAS,EACT1V,KAAK,WAIX2B,KAAK,iBAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAIN,UAAWD,EAAQ+Y,WAAtC,SACE,cAACoI,GAAA,EAAD,CACEtjB,KAAK,OACL1H,MAAM,sEACNkrB,aAAa,WACbC,QAAQ,iCACRC,YAAY,qBACZC,UAAW,SAAC/O,GAAD,OACTA,EAAOA,EAAKyB,OAAO,iBAAmB,IAExChe,MAAO6e,EACPtD,SAAUogB,EACVnxB,MAAO,CAAEmE,MAAO,YAGpB,cAACvE,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,kCACN4Z,QAAM,EACNlS,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAOqiB,YAChBthB,WACEf,EAAOqiB,YAAcriB,EAAOqiB,YAAY1lB,QAAU,GAEpDqE,WAAS,EACT1V,KAAK,WAIX2B,KAAK,wBAOf,eAACyC,EAAA,EAAD,CACE1C,MAAI,EACJ2C,GAAI,GACJG,MAAO,CAAElB,QAAS,OAAQC,eAAgB,iBAH5C,UAKE,cAAC2B,EAAA,EAAD,CACEpC,QAAQ,YACRqC,MAAM,UACNjE,KAAK,SACLkE,QAASqP,EAAa+hB,GAJxB,4CAQA,cAACtxB,EAAA,EAAD,CAAQpC,QAAQ,YAAYqC,MAAM,YAAYC,QAASkP,EAAvD,2D,oBCjbJvH,GAAY9J,aAAW,SAACC,GAAD,MAAY,CACvCyD,KAAM,CACJ4F,OAAQ,UAEV1F,MAAO,CACL8B,MAAO,OACPvF,QAAS,IAEXrD,MAAO,CACLkd,cAAe,IAEjBJ,WAAY,CACV,UAAW,CACTzZ,QAAS,cAGb0qB,WAAY,CACVxqB,QAAS,OACTE,WAAY,SACZyZ,cAAe,EACfqW,WAAY,OAIV0D,GAAoB,CACxB,CAAE9hB,GAAI,OAAQjb,MAAO,kCACrB,CACEib,GAAI,SACJjb,MAAO,6BAET,CAAEib,GAAI,WAEF+hB,GAAmB,CACvB,CAAE/hB,GAAI,OAAQjb,MAAO,kCACrB,CACEib,GAAI,SACJjb,MAAO,6BAET,CACEib,GAAI,OACJjb,MAAO,4DAET,CACEib,GAAI,OACJjb,MAAO,6BAET,CACEib,GAAI,OACJjb,MAAO,wEAET,CAAEib,GAAI,WAEFgiB,GAAoB,CACxB,CAAEhiB,GAAI,OAAQjb,MAAO,kCACrB,CACEib,GAAI,SACJjb,MAAO,6BAET,CAAEib,GAAI,UAAWjb,MAAO,uEACxB,CACEib,GAAI,OACJjb,MAAO,6BAET,CAAEib,GAAI,WA6dOiiB,GA1dI/oB,IAAMgpB,YAAW,SAAChqB,EAAOiqB,GAC1C,IAAQnI,EAAkB9hB,EAAlB8hB,cACFprB,EAAUiJ,KACV2oB,EAAchjB,GAAe,QACnC,EAAgCX,qBAAhC,oBAAO2R,EAAP,KAAiB4T,EAAjB,KAEAC,8BAAoBF,GAAK,WACvB,OAAO3T,KAGT,IAAM8T,EAAyB,SAACx9B,EAAOkH,EAAMu2B,GAC3C,OAAIA,EACKC,EAAwB19B,EAAOkH,GAEjCy2B,EAAuB39B,EAAOkH,IAGjCy2B,EAAyB,SAAC39B,EAAOkH,GACrC,IAAI02B,EACEjM,EAAQ,CACZkM,MAAO,WACLD,EAAcE,KAAOpU,EAAU,CAC7BqS,OAAQ,CAAEgC,MAAO,CAAC/9B,OAGtBg+B,KAAM,WACJJ,EAAcE,KAAOpU,EAAU,CAC7ByL,MAAO,CAAE4I,MAAO,CAAC/9B,OAGrBi+B,MAAO,WACLL,EAAcE,KAAOpU,EAAU,CAC7B1M,QAAS,CAAE+gB,MAAO,CAAC/9B,QAIrB2xB,EAAMzqB,KACRyqB,EAAMzqB,KACNo2B,EAAYM,GACZvyB,EAAkB,CAAE1D,KAAM,iBAIxB+1B,EAA0B,SAAC19B,EAAOkH,GACtC,IAAI02B,EACEjM,EAAQ,CACZkM,MAAO,WACL,IAAMjX,EAAQ8C,EAASqS,OAAOpE,WAAU,SAACjwB,GAAD,OAAUA,EAAKwT,KAAOlb,EAAMkb,MACpE0iB,EAAcE,KAAOpU,EAAU,CAC7BqS,OAAO,eACJnV,EAAQ,CAAEsX,KAAMl+B,OAIvBg+B,KAAM,WACJ,IAAMpX,EAAQ8C,EAASyL,MAAMwC,WAAU,SAACjwB,GAAD,OAAUA,EAAKwT,KAAOlb,EAAMkb,MACnE0iB,EAAcE,KAAOpU,EAAU,CAC7ByL,MAAM,eACHvO,EAAQ,CAAEsX,KAAMl+B,OAIvBi+B,MAAO,WACL,IAAMrX,EAAQ8C,EAAS1M,QAAQ2a,WAC7B,SAACjwB,GAAD,OAAUA,EAAKwT,KAAOlb,EAAMkb,MAE9B0iB,EAAcE,KAAOpU,EAAU,CAC7B1M,QAAQ,eACL4J,EAAQ,CAAEsX,KAAMl+B,QAKrB2xB,EAAMzqB,KACRyqB,EAAMzqB,KACNo2B,EAAYM,GACZvyB,EAAkB,CAAE1D,KAAM,iBAIxBw2B,EAAsB,SAACn+B,EAAOkH,GAClCmE,EAAkB,CAChBnF,SAAS,EACTH,MAAO,4KACPK,SAAU,WACR,IAAIw3B,EACEjM,EAAQ,CACZkM,MAAO,WACL,IAAMjX,EAAQ8C,EAASqS,OAAOpE,WAC5B,SAACjwB,GAAD,OAAUA,EAAKwT,KAAOlb,EAAMkb,MAE9B0iB,EAAcE,KAAOpU,EAAU,CAC7BqS,OAAQ,CAAEqC,QAAS,CAAC,CAACxX,EAAO,QAGhCoX,KAAM,WACJ,IAAMpX,EAAQ8C,EAASyL,MAAMwC,WAC3B,SAACjwB,GAAD,OAAUA,EAAKwT,KAAOlb,EAAMkb,MAE9B0iB,EAAcE,KAAOpU,EAAU,CAC7ByL,MAAO,CAAEiJ,QAAS,CAAC,CAACxX,EAAO,QAG/BqX,MAAO,WACL,IAAMrX,EAAQ8C,EAAS1M,QAAQ2a,WAC7B,SAACjwB,GAAD,OAAUA,EAAKwT,KAAOlb,EAAMkb,MAE9B0iB,EAAcE,KAAOpU,EAAU,CAC7B1M,QAAS,CAAEohB,QAAS,CAAC,CAACxX,EAAO,SAI/B+K,EAAMzqB,KACRyqB,EAAMzqB,KACNo2B,EAAYM,GACZvyB,EAAkB,CAAE1D,KAAM,aAG9BA,KAAM,SACN3B,KAAM,IACNC,oBAAoB,KAIlBo4B,EAAmB,WACvBhzB,EAAkB,CAAE1D,KAAM,gBAGtB22B,EAAiB,SAACp3B,EAAMV,GAC5B6E,EAAkB,CAChBtF,MAAM,GAAD,OAAqB,WAAhB21B,EAA2B,uCAAW,uCAA3C,YACM,UAATx0B,EAAmB,2BAAkB,SAATA,EAAkB,iCAAU,sBAE1DpB,UACE,cAAC,GAAD,CACEuU,SAAUmjB,EACVljB,UAAW+jB,EACXnJ,cAAe1uB,EACfk1B,YAAaA,EACbx0B,KAAMA,IAGVS,KAAM,aACN3B,KAAM,IACNE,SAAS,EACTD,oBAAoB,KAIlBs4B,EAAiB,SAACr3B,GACtB,IAAMyqB,EAAQ,CACZkM,MAAO,WACL,OACE,eAAC5yB,EAAA,EAAD,CAAYnC,QAAQ,SAApB,UACmB,WAAhB4yB,EAA2B,gEAAgB,gEAD9C,WAEGhS,QAFH,IAEGA,OAFH,EAEGA,EAAUqS,OAAOnkB,OAFpB,QAMJomB,KAAM,WACJ,OACE,eAAC/yB,EAAA,EAAD,CAAYnC,QAAQ,SAApB,UACmB,WAAhB4yB,EAA2B,sEAAiB,sEAD/C,WAEGhS,QAFH,IAEGA,OAFH,EAEGA,EAAUyL,MAAMvd,OAFnB,QAMJqmB,MAAO,WACL,OACE,eAAChzB,EAAA,EAAD,CAAYnC,QAAQ,SAApB,UACmB,WAAhB4yB,EAA2B,0DAAe,0DAD7C,WAEGhS,QAFH,IAEGA,OAFH,EAEGA,EAAU1M,QAAQpF,OAFrB,SAON,GAAI+Z,EAAMzqB,GACR,OAAOyqB,EAAMzqB,MAcjB,OAVAqW,qBAAU,WACR+f,EAAYpI,KACX,CAACA,IAEJ3X,qBAAU,WACsB,oBAAnBnK,EAAMiH,UACfjH,EAAMiH,SAASqP,KAEhB,CAACA,IAGF,qCACE,cAACtf,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAIG,MAAO,CAAElB,QAAS,OAAQC,eAAgB,UAA7D,SACE,eAACi1B,GAAA,EAAD,CAAarzB,MAAM,UAAnB,UACE,cAACD,EAAA,EAAD,CACEuzB,UAAW,mBAAG10B,UAAU,uBAAb,uBACXqB,QAAS,kBAAMkzB,EAAe,UAFhC,SAIGC,EAAe,WAElB,cAACrzB,EAAA,EAAD,CACEuzB,UAAW,mBAAG10B,UAAU,uBAAb,qBACXqB,QAAS,kBAAMkzB,EAAe,SAFhC,SAIGC,EAAe,UAElB,cAACrzB,EAAA,EAAD,CACEuzB,UAAW,mBAAG10B,UAAU,uBAAb,sBACXqB,QAAS,kBAAMkzB,EAAe,UAFhC,SAIGC,EAAe,gBAKtB,cAACn0B,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAzB,SACE,eAACtE,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,UACE,eAACq0B,GAAA,EAAD,CACEC,SAAQ,OAAEjV,QAAF,IAAEA,OAAF,EAAEA,EAAUqS,OAAOnkB,OAC3BgnB,WAAU,OAAClV,QAAD,IAACA,OAAD,EAACA,EAAUqS,OAAOnkB,QAF9B,UAIE,cAACinB,GAAA,EAAD,CACE90B,UAAWD,EAAQg1B,iBACnBC,WAAY,mBAAGh1B,UAAU,uBAAb,yBACZ,gBAAc,kBACdmR,GAAG,iBAJL,SAME,cAACjQ,EAAA,EAAD,CAAYlB,UAAWD,EAAQk1B,QAA/B,wDAEA,OAACtV,QAAD,IAACA,OAAD,EAACA,EAAUqS,OAAOnkB,SAClB,cAACqnB,GAAA,EAAD,UACE,cAAC70B,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAACwb,GAAA,EAAD,UACE,cAACkL,GAAA,EAAD,CAAgBvmB,MAAO,CAAEpB,QAAS,UAAlC,SACE,eAAC4nB,GAAA,EAAD,CACEjnB,UAAWD,EAAQ6lB,MACnB3pB,KAAM,SACNwE,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CAAage,UAAW8O,KAExB,cAAC9L,GAAA,EAAD,iBACGxH,QADH,IACGA,OADH,EACGA,EAAUqS,OAAO9xB,KAAI,SAACknB,GAAS,IAAD,EAC7B,OACE,eAAC/C,GAAA,EAAD,CACEiD,OAAK,EACLC,UAAW,EAEX9mB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACoe,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACE,qBACEoB,MAAO,CACLlB,QAAS,OACTE,WAAY,UAHhB,mBAMG2nB,EAAIsL,gBANP,aAMG,EAAcx8B,UAGnB,cAACquB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACGuQ,GACCpP,OAAO4mB,EAAIpS,OAAOoZ,oBAItB,eAAC7J,GAAA,EAAD,CACEllB,QAAQ,OACRoB,MAAO,CAAE+jB,UAAW,QAFtB,UAIE,cAAC7Q,GAAA,EAAD,CACEtS,QAAS,kBAAMkzB,EAAe,QAASnN,IADzC,SAGE,cAAC,GAAD,MAGF,cAACzT,GAAA,EAAD,CACEtS,QAAS,kBACP+yB,EAAoBhN,EAAK,UAF7B,SAKE,cAAC,GAAD,WAlCCA,EAAIjW,uBAgD/B,eAACwjB,GAAA,EAAD,CACEC,SAAQ,OAAEjV,QAAF,IAAEA,OAAF,EAAEA,EAAUyL,MAAMvd,OAC1BgnB,WAAU,OAAClV,QAAD,IAACA,OAAD,EAACA,EAAUyL,MAAMvd,QAF7B,UAIE,cAACinB,GAAA,EAAD,CACE90B,UAAWD,EAAQg1B,iBACnBC,WAAY,mBAAGh1B,UAAU,uBAAb,yBACZ,gBAAc,kBACdmR,GAAG,iBAJL,SAME,cAACjQ,EAAA,EAAD,CAAYlB,UAAWD,EAAQk1B,QAA/B,8DAEA,OAACtV,QAAD,IAACA,OAAD,EAACA,EAAUyL,MAAMvd,SACjB,cAACqnB,GAAA,EAAD,UACE,cAAC70B,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAACwb,GAAA,EAAD,UACE,cAACkL,GAAA,EAAD,CAAgBvmB,MAAO,CAAEpB,QAAS,UAAlC,SACE,eAAC4nB,GAAA,EAAD,CACEjnB,UAAWD,EAAQ6lB,MACnB3pB,KAAM,SACNwE,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CAAage,UAAW+O,KAExB,cAAC/L,GAAA,EAAD,iBACGxH,QADH,IACGA,OADH,EACGA,EAAUyL,MAAMlrB,KAAI,SAACknB,GAAS,IAAD,IAC5B,OACE,eAAC/C,GAAA,EAAD,CACEiD,OAAK,EACLC,UAAW,EAEX9mB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACoe,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACE,qBACEoB,MAAO,CACLlB,QAAS,OACTE,WAAY,UAHhB,mBAMG2nB,EAAIsL,gBANP,aAMG,EAAcx8B,UAGnB,cAACquB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACGuQ,GACCpP,OAAO4mB,EAAIpS,OAAOoZ,oBAGtB,cAAC7J,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAIyK,kBAEP,cAACtN,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,mBACG+nB,EAAIkE,YADP,aACG,EAAUp1B,QAEb,cAACquB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAIyL,eAGP,eAACtO,GAAA,EAAD,CACEllB,QAAQ,OACRoB,MAAO,CAAE+jB,UAAW,QAFtB,UAIE,cAAC7Q,GAAA,EAAD,CACEtS,QAAS,kBAAMkzB,EAAe,OAAQnN,IADxC,SAGE,cAAC,GAAD,MAGF,cAACzT,GAAA,EAAD,CACEtS,QAAS,kBACP+yB,EAAoBhN,EAAK,SAF7B,SAKE,cAAC,GAAD,WA3CCA,EAAIjW,uBAyD/B,eAACwjB,GAAA,EAAD,CACEC,SAAQ,OAAEjV,QAAF,IAAEA,OAAF,EAAEA,EAAU1M,QAAQpF,OAC5BgnB,WAAU,OAAClV,QAAD,IAACA,OAAD,EAACA,EAAU1M,QAAQpF,QAF/B,UAIE,cAACinB,GAAA,EAAD,CACE90B,UAAWD,EAAQg1B,iBACnBC,WAAY,mBAAGh1B,UAAU,uBAAb,yBACZ,gBAAc,kBACdmR,GAAG,iBAJL,SAME,cAACjQ,EAAA,EAAD,CAAYlB,UAAWD,EAAQk1B,QAA/B,yCAEF,cAACC,GAAA,EAAD,aACI,OAACvV,QAAD,IAACA,OAAD,EAACA,EAAU1M,QAAQpF,SACnB,cAACxN,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAACwb,GAAA,EAAD,UACE,cAACkL,GAAA,EAAD,CAAgBvmB,MAAO,CAAEpB,QAAS,UAAlC,SACE,eAAC4nB,GAAA,EAAD,CACEjnB,UAAWD,EAAQ6lB,MACnB3pB,KAAM,SACNwE,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CAAage,UAAWgP,KAExB,cAAChM,GAAA,EAAD,iBACGxH,QADH,IACGA,OADH,EACGA,EAAU1M,QAAQ/S,KAAI,SAACknB,GAAS,IAAD,IAC9B,OACE,eAAC/C,GAAA,EAAD,CACEiD,OAAK,EACLC,UAAW,EAEX9mB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACoe,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACE,qBACEoB,MAAO,CACLlB,QAAS,OACTE,WAAY,UAHhB,mBAMG2nB,EAAIsL,gBANP,aAMG,EAAcx8B,UAGnB,cAACquB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACGuQ,GACCpP,OAAO4mB,EAAIpS,OAAOoZ,oBAItB,cAAC7J,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAItS,cAAcd,mBACjB,WAGJ,cAACuQ,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,mBACG+nB,EAAIkE,YADP,aACG,EAAUp1B,QAEb,eAACquB,GAAA,EAAD,CACEllB,QAAQ,OACRoB,MAAO,CAAE+jB,UAAW,QAFtB,UAIE,cAAC7Q,GAAA,EAAD,CACEtS,QAAS,kBAAMkzB,EAAe,QAASnN,IADzC,SAGE,cAAC,GAAD,MAGF,cAACzT,GAAA,EAAD,CACEtS,QAAS,kBACP+yB,EAAoBhN,EAAK,UAF7B,SAKE,cAAC,GAAD,WA1CCA,EAAIjW,kCCve1B,SAASgkB,GAAT,GAAyD,IAAlC5kB,EAAiC,EAAjCA,UAAWD,EAAsB,EAAtBA,SAAU8kB,EAAY,EAAZA,SACnDC,EAAarkB,iBAAO,MAC1B,EAAgChD,mBAAS,CACvCgkB,OAAQ,GACR5G,MAAO,GACPnY,QAAS,KAHX,oBAAO0M,EAAP,UAUA,OACE,qCACE,+BACE,cAACtf,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAzB,SACE,cAAC,GAAD,CACEwmB,cAAexL,EACfxiB,KAAM,UACNm2B,IAAK+B,QAKX,eAACh1B,EAAA,EAAD,CACE1C,MAAI,EACJ2C,GAAI,GACJG,MAAO,CACLlB,QAAS,OACTC,eAAgB,gBAChB6H,UAAW,IANf,UASE,cAAClG,EAAA,EAAD,CAAQpC,QAAQ,YAAYqC,MAAM,UAAUC,QAzBnC,WACbiP,EAAS,eAAK+kB,EAAW/iB,SAAW8iB,IAwBhC,4CAGA,cAACj0B,EAAA,EAAD,CAAQpC,QAAQ,YAAYqC,MAAM,YAAYC,QAASkP,EAAvD,wDChCR,IAAM4T,GAAY,CAChB,CACEhT,GAAI,YACJjb,MAAO,sBAET,CAAEib,GAAI,WAAYjb,MAAO,uEACzB,CACEib,GAAI,WACJjb,MAAO,qDAET,CAAEib,GAAI,SAAUjb,MAAO,wCACvB,CAAEib,GAAI,UAAWjb,MAAO,kCAExB,CAAEib,GAAI,WAGO,SAAS6U,GAAT,GAA4C,IAAxByL,EAAuB,EAAvBA,SAAUlhB,EAAa,EAAbA,UACrCxQ,EAAUd,KAChB,EAA0B+O,mBAAS,OAAnC,oBAAOsM,EAAP,KAAc2L,EAAd,KACA,EAA4BjY,qBAA5B,oBAAO1H,EAAP,KAAe6f,EAAf,KACA,EAA8BnY,mBAAS,aAAvC,oBAAOiW,EAAP,KAAgBiC,EAAhB,KACA,EAAwBlY,mBAAS,GAAjC,oBAAOiX,EAAP,KAAamB,EAAb,KACA,EAAgCpY,mBAASnY,EAASE,iBAAlD,oBAAOswB,EAAP,KAAiBC,EAAjB,KACA,EAAwBtY,mBAAS,IAAjC,oBAAOuY,EAAP,KAAaC,EAAb,KACA,EAA8CxY,mBAAS,IAAvD,oBAAOsnB,EAAP,KAAwBC,EAAxB,KAiBMC,EAAmB1nB,GAAO,CAC9BZ,OAAQ,MACRC,IAAI,UAAD,OAAYkB,GAA2B,CACxC4W,OACA3K,QACA2J,UACAoC,WACA/f,cAoBEugB,EAAO,yCAAG,6BAAA1a,EAAA,sEACWqpB,EAAiBppB,UAD5B,OACRqpB,EADQ,OAEdjP,EAAQiP,EAAWh5B,MAFL,2CAAH,qDASb,OAJA+W,qBAAU,WACRqT,MACC,CAAC5B,EAAM3K,EAAOhU,EAAQ+f,IAGvB,sBAAK5lB,MAAO,CAAE4G,WAAY,IAA1B,UACE,cAAC,GAAD,CAAU6b,aA3BG,SAACjtB,GAChBkwB,EAAUlwB,MA2BR,cAAC+wB,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CAAOjnB,UAAWD,EAAQ6lB,MAAO3pB,KAAM,SAAvC,UACE,cAAC,GAAD,CACE8D,QAASA,EACTua,MAAOA,EACP2J,QAASA,EACTC,cA5DgB,SAAC3lB,EAAOqmB,GAEhCqB,EADchC,IAAYW,GAAsB,QAAVtK,EACrB,OAAS,OAC1B4L,EAAWtB,IA0DHsC,SAAUX,EAAK1Y,OACfsW,UAAWA,KAGb,eAACgD,GAAA,EAAD,WACGZ,EAAKrmB,KAAI,SAACknB,GACT,OACE,eAAC/C,GAAA,EAAD,CACEiD,OAAK,EACLC,UAAW,EAEX9mB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACoe,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SAA2B+nB,EAAII,YAC/B,cAACjD,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SAA2B+nB,EAAIK,WAC/B,cAAClD,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SAA2B+nB,EAAIuF,SAAS/uB,OACxC,cAAC2mB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SAA2B+nB,EAAIM,SAC/B,cAACnD,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SAA2B+nB,EAAIsO,UAC/B,cAACnR,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACGi2B,EAAgBlnB,SAASgZ,GACxB,cAACjmB,EAAA,EAAD,CACEpC,QAAQ,YACRiB,UAAWD,EAAQowB,eACnB9uB,QAAS,kBAlDL5E,EAkD4B2qB,OAjDpDmO,EAAmBD,EAAgB53B,QAAO,SAACC,GAAD,OAAUA,EAAKwT,KAAO1U,EAAK0U,OAD9C,IAAC1U,GAmDJk5B,QAAS,mBAAG31B,UAAU,uBAAb,kBAJX,qEASA,cAACmB,EAAA,EAAD,CACEpC,QAAQ,YACRqC,MAAM,UACNC,QAAS,kBA/DP1D,EA+D4BypB,OA9DlDmO,EAAmB,GAAD,mBAAKD,GAAL,CAAsB33B,KADnB,IAACA,GA4DJ,2FAnBCypB,EAAIjW,QA+BboV,EAAK1Y,SAAW2nB,EAAiBvnB,SACjC,cAACoW,GAAA,EAAD,CAAU5jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACihB,GAAA,EAAD,CAAW0D,QAAS,EAAGxnB,MAAO,CAAE+jB,UAAW,UAA3C,SACE,cAACtjB,EAAA,EAAD,CAAYnC,QAAQ,KAApB,+KASZ,cAAC,GAAD,CACEgmB,MAAOwB,EAAK1Y,OACZiX,iBA9GmB,SAACvmB,EAAO2pB,GAC/B9B,EAAQ8B,IA8GJlD,wBA3G0B,SAACzmB,GAC/B+nB,EAAY6B,SAAS5pB,EAAMslB,OAAO5tB,MAAOJ,EAASE,kBAClDqwB,EAAQ,IA0GJnB,KAAMA,EACNC,YAAamB,IAEf,eAAChmB,EAAA,EAAD,CACE1C,MAAI,EACJ2C,GAAI,GACJG,MAAO,CAAElB,QAAS,OAAQC,eAAgB,iBAH5C,UAKE,cAAC2B,EAAA,EAAD,CAAQpC,QAAQ,YAAYqC,MAAM,UAAUC,QAxFjC,WACfowB,EAAS6D,IAuFL,4CAGA,cAACn0B,EAAA,EAAD,CAAQpC,QAAQ,YAAYqC,MAAM,YAAYC,QAASkP,EAAvD,wDC3KO,kBACW,OAAD,6HACA9D,GAAK0C,IAAI,iBADT,QACf9C,EADe,UAGnB/P,EAAQC,QACN1G,EAAS+B,QAAQK,cACjByE,KAAKC,UAAU0P,EAAO5P,OAExBsB,EAAMI,SAAS,CACbhB,KAAMtH,EAASiB,aAAaO,UAC5B+F,QAASiP,EAAO5P,QATC,8CADV,cAgBX,OAAOC,KAAKI,MAAMR,EAAQO,QAAQhH,EAAS+B,QAAQK,iB,qBCIjDksB,GAAY,CAChB,CACEhT,GAAI,OACJjb,MAAO,+CAET,CACEib,GAAI,WACJjb,MAAO,qDAET,CACEib,GAAI,SACJjb,MAAO,qDAET,CAAEib,GAAI,OAAQjb,MAAO,kEAErB,CAAEib,GAAI,WAGO,SAASgkB,GAAT,GAMX,IALF7kB,EAKC,EALDA,SACAC,EAIC,EAJDA,UACA0d,EAGC,EAHDA,WACA9C,EAEC,EAFDA,cACAjuB,EACC,EADDA,OAEM6C,EAAUd,KAChB,EAA0B+O,mBAAS,OAAnC,oBAAOsM,EAAP,KAAc2L,EAAd,KACA,EAA4BjY,qBAA5B,oBAAO1H,EAAP,KAAe6f,EAAf,KACA,EAA8BnY,mBAAS,QAAvC,oBAAOiW,EAAP,KAAgBiC,EAAhB,KACA,EAAwBlY,mBAAS,GAAjC,oBAAOiX,EAAP,KAAamB,EAAb,KACA,EAAgCpY,mBAASnY,EAASE,iBAAlD,oBAAOswB,EAAP,KAAiBC,EAAjB,KACA,EAAwBtY,mBAAS,IAAjC,oBAAOuY,EAAP,KAAaC,EAAb,KACA,EAAsCxY,qBACpCmd,KAAkBA,EAAcyK,SADlC,oBAAOC,EAAP,KAAoBC,EAApB,KAGMC,EAAQC,KACd,EAA8ChoB,mBAASmd,GAAvD,oBAAO8K,EAAP,KAAwBC,EAAxB,KACA,EAAsCloB,mBAAS,IAA/C,oBAAOmoB,EAAP,KAAoBC,EAApB,KACA,EAA0CpoB,mBAAS,GAAnD,oBAAOqoB,GAAP,KAAsBC,GAAtB,KACA,GAAoCtoB,mBAClCmd,GAAiB,CACfvtB,KAAM,IACN24B,IAAK,GACLtV,OAAQ,KAJZ,sBAAOuV,GAAP,MAAmBC,GAAnB,MAsBMC,GAAyB5oB,GAAO,CACpCZ,OAAQ,MACRC,IAAI,iBAAD,OAAmBkB,GAA2B,CAC/C4W,OACA3K,QACA2J,UACAoC,WACA/f,cAIEqwB,GAAuB7oB,GAAO,CAClCZ,OAAQ,MACRC,IAAK,gBAGDypB,GAAkB9oB,GAAO,CAC7BZ,OAAQ,MACRC,IAAI,iBAGA0pB,GAA0B,SAACziB,GAAO,IAAD,EACrC,EAAwBA,EAAEyP,OAAlBjmB,EAAR,EAAQA,KAAM3H,EAAd,EAAcA,MAEd,GAAa,SAAT2H,EAAiB,CACnB,IAGMk5B,EAHWf,EAAMr4B,QACrB,SAACC,GAAD,OAAUA,EAAK1H,SAAL,OAAeggC,QAAf,IAAeA,OAAf,EAAeA,EAAiBc,eAC1C,GAAG5tB,SACuBzL,QAAO,SAACC,GAAD,OAAUA,EAAK1H,QAAUA,KAAO,GACnE6/B,EAAegB,EAAWlB,SAE5Ba,GAAc,2BACTD,IADQ,uBAEV54B,EAAO3H,GAFG,kCAGCggC,QAHD,IAGCA,OAHD,EAGCA,EAAiBc,YAHlB,MAWTlQ,GAAO,yCAAG,6BAAA1a,EAAA,sEACYuqB,GAAuBtqB,QAC/C,KACAiqB,IAHY,OACRW,EADQ,OAKdxQ,EAAQwQ,EAAYv6B,MALN,2CAAH,qDAsBPw6B,GAAe,yCAAG,WAAOx6B,GAAP,kBAAA0P,EAAA,yDACtB+pB,EAAmBz5B,GACA,IAAfwxB,EAFkB,gBAGpBwI,GAAc,CACZS,UAAWz6B,EAAK0U,GAChBvT,KAAMnB,EAAKmB,KACX24B,IAAK,GACLtV,OAAQ,KAPU,uCAUF0V,GAAqBvqB,QACrC,KADgB,UAEb6hB,EAFa,YAECxxB,EAAK0U,KAZJ,OAUdolB,EAVc,OAedY,EAAaZ,EAAI95B,KACnB26B,KAAQD,GACVV,GAAc,CACZS,UAAWz6B,EAAK0U,GAChBvT,KAAMnB,EAAKmB,KACX24B,IAAK,GACLtV,OAAQ,KAGVwV,GAAc,2BAAKU,GAAN,IAAkBD,UAAWz6B,EAAK0U,GAAIvT,KAAMnB,EAAKmB,QAxB5C,4CAAH,sDA6Cfy5B,GAAc,yCAAG,6BAAAlrB,EAAA,sEACAyqB,GAAgBxqB,UADhB,OACfC,EADe,OAErB+pB,EAAe/pB,EAAO5P,MAFD,2CAAH,qDAiBpB,OARA+W,qBAAU,WACRqT,OACC,CAAC5B,EAAM3K,EAAOhU,EAAQ+f,EAAUgQ,KAEnC7iB,qBAAU,WACR6jB,OACC,IAGD,qCACE,+BACE,eAACh3B,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAzB,UACE,cAACtE,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAACmR,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,8CACN0H,KAAM,OACN4T,SAAUqlB,GACV5gC,MAAOugC,GAAW54B,KAClB+T,WAAS,EACT1V,KAAK,QACL44B,UAAQ,MAGZ,cAACx0B,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAACmR,GAAA,EAAD,CACE8Y,QAAM,EACNr0B,MAAM,0DACND,MAAK,OAAEugC,SAAF,IAAEA,QAAF,EAAEA,GAAY34B,KACnB2T,SAAUqlB,GACV93B,QAAQ,WACRnB,KAAK,OACL+T,WAAS,EACT1V,KAAK,QARP,SA7FmB,WAC3B,IAAKm7B,KAAQnB,GAAkB,CAC7B,IAAMqB,EAAWvB,EAAMr4B,QACrB,SAACC,GAAD,OAAUA,EAAK1H,QAAUggC,EAAgBc,cACzC,GAEF,OAAIO,EACKA,EAASnuB,SAEX,GAET,MAAO,GA4FIouB,GAAuBr3B,KAAI,SAAC1C,GAAD,OAC1B,cAACqX,GAAA,EAAD,CAA6B5e,MAAOuH,EAAOvH,MAA3C,SACGuH,EAAOtH,OADKsH,EAAOvH,cAM3B4/B,GACC,cAACx1B,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAACmR,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,uEACN0H,KAAM,UACN4T,SAAUqlB,GACV5gC,MAAK,OAAEugC,SAAF,IAAEA,QAAF,EAAEA,GAAYZ,QACnBjkB,WAAS,EACT1V,KAAK,QACLkB,KAAK,aAIX,cAACkD,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAACmR,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,iCACN0H,KAAM,SACN4T,SAAUqlB,GACV5gC,MAAK,OAAEugC,SAAF,IAAEA,QAAF,EAAEA,GAAYvV,OACnBtP,WAAS,EACT1V,KAAK,QACLkB,KAAK,aAGT,cAACkD,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAACmR,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,2BACN0H,KAAM,MACN4T,SAAUqlB,GACV5gC,MAAK,OAAEugC,SAAF,IAAEA,QAAF,EAAEA,GAAYD,IACnB5kB,WAAS,EACT1V,KAAK,QACLkB,KAAK,eAIN84B,GACD,cAAC51B,EAAA,EAAD,CACE1C,MAAI,EACJ2C,GAAI,GACJG,MAAO,CAAElB,QAAS,OAAQC,eAAgB,YAH5C,SAKE,cAAC2B,EAAA,EAAD,CAAQpC,QAAQ,YAAYqC,MAAM,UAAUC,QA5GzC,WACb,IAAMgrB,EAAQC,eACR7vB,EAAI,yBACR0U,GAAIga,EAAgBA,EAAcha,GAAKkb,GACpCmK,IAFK,IAGRgB,QAASnB,GACToB,SAAUj3B,OAAOg2B,GAAWD,KAAO/1B,OAAOg2B,GAAWvV,UAGvD3Q,EAAS7T,EAAMS,IAmGL,mDAOR,cAAC0X,GAAA,EAAD,CAASnU,MAAO,CAAE+H,OAAQ,eAC1B,cAACnI,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAzB,SACE,cAACtE,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,GAAIxf,GAAI,GAAvB,SACE,cAACmR,GAAA,EAAD,CACE8Y,QAAM,EACNr0B,MAAM,iCACND,MAAOogC,GACP7kB,SAzGY,SAAC4C,GACrBkiB,GAAiBliB,EAAEyP,OAAO5tB,QAyGlB8I,QAAQ,WACRnB,KAAK,QACL+T,WAAS,EACT1V,KAAK,QARP,SAUGk6B,EAAYj2B,KAAI,SAAC1C,GAAD,OACf,cAACqX,GAAA,EAAD,CAA6B5e,MAAOuH,EAAOvH,MAA3C,SACGuH,EAAOtH,OADKsH,EAAOvH,gBAO9B,eAAC+wB,GAAA,EAAD,WACE,cAAC,GAAD,CAAU9D,aApMC,SAACjtB,GAChBkwB,EAAUlwB,IAmM4BqtB,cAAehd,IAEjD,eAAC2gB,GAAA,EAAD,CAAOjnB,UAAWD,EAAQ6lB,MAAO3pB,KAAM,SAAvC,UACE,cAAC,GAAD,CACE8D,QAASA,EACTua,MAAOA,EACP2J,QAASA,EACTC,cAhQgB,SAAC3lB,EAAOqmB,GAEhCqB,EADchC,IAAYW,GAAsB,QAAVtK,EACrB,OAAS,OAC1B4L,EAAWtB,IA8PHsC,SAAUX,EAAK1Y,OACfsW,UAAWA,KAGb,eAACgD,GAAA,EAAD,WACGZ,EAAKrmB,KAAI,SAACknB,GACT,OACE,eAAC/C,GAAA,EAAD,CACEiD,OAAK,EACLC,UAAW,EAEX9mB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACoe,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SAA2B+nB,EAAIxpB,OAC/B,cAAC2mB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAIsQ,WAAWC,KAAK,OAEvB,cAACpT,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SAA2B+nB,EAAIwQ,aAC/B,cAACrT,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SAA2B+nB,EAAIyQ,WAC/B,cAACtT,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,UACkB,OAAf42B,QAAe,IAAfA,OAAA,EAAAA,EAAiB9kB,MAAOiW,EAAIjW,GAC3B,cAAChQ,EAAA,EAAD,CACE0zB,WAAY1J,EACZpsB,QAAQ,YACRiB,UAAWD,EAAQowB,eACnB9uB,QAAS,WA7K7B60B,KA8KoBP,QAAS,mBAAG31B,UAAU,uBAAb,kBALX,qEAUA,cAACmB,EAAA,EAAD,CACE0zB,WAAY1J,EACZpsB,QAAQ,YACRqC,MAAM,UACNC,QAAS,kBAAM41B,GAAgB7P,IAJjC,+EArBCA,EAAIjW,QAkCboV,EAAK1Y,SAAW6oB,GAAuBzoB,SACvC,cAACoW,GAAA,EAAD,CAAU5jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACihB,GAAA,EAAD,CAAW0D,QAAS,EAAGxnB,MAAO,CAAE+jB,UAAW,UAA3C,SACE,cAACtjB,EAAA,EAAD,CAAYnC,QAAQ,KAApB,gLASZ,cAAC,GAAD,CACEgmB,MAAOwB,EAAK1Y,OACZiX,iBArTmB,SAACvmB,EAAO2pB,GAC/B9B,EAAQ8B,IAqTJlD,wBAlT0B,SAACzmB,GAC/B+nB,EAAY6B,SAAS5pB,EAAMslB,OAAO5tB,MAAOJ,EAASE,kBAClDqwB,EAAQ,IAiTJnB,KAAMA,EACNC,YAAamB,IAGf,cAAChmB,EAAA,EAAD,CACE1C,MAAI,EACJ2C,GAAI,GACJG,MAAO,CAAElB,QAAS,OAAQC,eAAgB,YAH5C,SAKE,cAAC2B,EAAA,EAAD,CAAQpC,QAAQ,YAAYqC,MAAM,YAAYC,QAASkP,EAAvD,uDC1WR,IAAMvH,GAAY9J,aAAW,SAACC,GAAD,MAAY,CACvCyD,KAAM,CACJ4F,OAAQ,UAEV1F,MAAO,CACL8B,MAAO,OACPvF,QAAS,IAEXrD,MAAO,CACLkd,cAAe,IAEjBJ,WAAY,CACV,UAAW,CACTzZ,QAAS,cAGb0qB,WAAY,CACVxqB,QAAS,OACTE,WAAY,SACZyZ,cAAe,EACfqW,WAAY,OAIVpL,GAAY,CAChB,CACEhT,GAAI,OACJjb,MAAO,+CAET,CAAEib,GAAI,OAAQjb,MAAO,4BACrB,CACEib,GAAI,SACJjb,MAAO,kCAET,CACEib,GAAI,MACJjb,MAAO,4BAET,CACEib,GAAI,QACJjb,MAAO,kCAGT,CAAEib,GAAI,WAGF2mB,GAAiB,CACrB,CACE3mB,GAAI,QACJjb,MAAO,2DAET,CAAEib,GAAI,OAAQjb,MAAO,4GACrB,CACEib,GAAI,MACJjb,MAAO,qDAET,CACEib,GAAI,QACJjb,MAAO,4BAET,CACEib,GAAI,MACJjb,MAAO,8CAGT,CAAEib,GAAI,WAGO,SAASd,GAAT,GAAuC,EAAjB8a,cAAkB,IAC/CkK,EAAarkB,iBAAO,MACpBjR,EAAUiJ,KACVgD,EAAUyG,cACVtB,EAAKxC,GAAe,MACpBuiB,EAAcviB,GAAe,QACnC,EAA4BX,mBAAS,IAArC,oBAAOmb,EAAP,KAAeC,EAAf,KACA,EAA4Cpb,qBAA5C,oBAAOoiB,EAAP,KAAuBC,EAAvB,KACA,EAAiD7f,eAAzCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,OAAQC,EAAvC,EAAuCA,MACvC,EAAyC5C,mBAASqQ,QAAlD,oBAAO0Z,EAAP,KAAqBC,EAArB,KACA,EAA8ChqB,mBAAS,GAAvD,oBAAOiqB,EAAP,KAAwBC,EAAxB,KACA,EAAgClqB,mBAAS,IAAzC,oBAAO2e,EAAP,KAAiBC,EAAjB,KACA,EAA8B5e,mBAAS,IAAvC,oBAAOmqB,EAAP,KAAgBC,EAAhB,KACA,EAAgCpqB,mBAAS,IAAzC,oBAAOqqB,EAAP,KAAiBC,EAAjB,KACA,EAA0CtqB,mBAAS,KAAnD,oBAAOuqB,EAAP,KAAsBC,EAAtB,KACA,GAAgCxqB,mBAAS,CACvCgkB,OAAQ,GACR5G,MAAO,GACPnY,QAAS,KAHX,sBAAO0M,GAAP,MAAiB4T,GAAjB,MAKA,GAAgCvlB,mBAAS,GAAzC,sBAAOypB,GAAP,MAAiBgB,GAAjB,MACA,GAAwCzqB,mBAAS,GAAjD,sBAAO0qB,GAAP,MAAqBC,GAArB,MACA,GAAgC3qB,mBAAS,GAAzC,sBAAO4qB,GAAP,MAAiBC,GAAjB,MACA,GAA8B7qB,mBAAS,GAAvC,sBAAO8qB,GAAP,MAAgBC,GAAhB,MACA,GAA4C/qB,mBAAS,GAArD,sBAAOgrB,GAAP,MAAuBC,GAAvB,MAEMC,GAAoBprB,GAAO,CAC/BZ,OAAQ,OACRC,IAAI,YAEAgsB,GAAqBrrB,GAAO,CAChCZ,OAAQ,MACRC,IAAI,WAAD,OAAagE,KAEZioB,GAAuBtrB,GAAO,CAClCZ,OAAQ,MACRC,IAAI,WAAD,OAAagE,KAEZkoB,GAAyBvrB,GAAO,CACpCZ,OAAQ,MACRC,IAAI,qBAEAmsB,GAA2BxrB,GAAO,CACtCZ,OAAQ,OACRC,IAAI,YAEAosB,GAA2BzrB,GAAO,CACtCZ,OAAQ,MACRC,IAAI,mBAAD,OAAqBgE,KAGpBqoB,GAA0B1rB,GAAO,CACrCZ,OAAQ,OACRC,IAAI,YAOAssB,GAAkB,yCAAG,6BAAAttB,EAAA,sEACJktB,GAAuBjtB,UADnB,OACnB+c,EADmB,OAEzByD,EAAYzD,EAAO1sB,MAFM,2CAAH,qDAKlBi9B,GAAiB,SAAC3kB,GACtBsb,EAAkBtb,GAClByjB,EAAiB,UAAUzjB,EAAOyS,UAAjB,YAA8BzS,EAAO0S,WACtDkS,MAGIA,GAAkB,WACtBr4B,EAAkB,CAAE1D,KAAM,YAoBtBg8B,GAAoB,WACxB,IAAMC,EAAc,GAKpB,OAJAxB,EAASn4B,KAAI,SAACvC,GAEZ,cADOA,EAAKwT,GACL0oB,EAAYrtB,KAAK7O,MAEnBk8B,GAGHvpB,GAAQ,yCAAG,WAAO7T,GAAP,oBAAA0P,EAAA,yDACTlW,EADS,2BAEVwG,GAFU,IAGb47B,SAAUuB,KACVzB,UACA3lB,KAAMulB,EAAahZ,GACnBkP,WAAYmC,EAAiBA,EAAejf,GAAK,EACjDhU,KAAM+zB,EACN4I,WAAY7B,EACZ5G,eAAgBkH,KAEdpnB,EAXW,gCAYPgoB,GAAmB/sB,QAAQnW,GAZpB,8CAcUijC,GAAkB9sB,QAAQnW,GAdpC,UAcP8W,EAdO,UAePgtB,EAfO,2BAgBR1E,EAAW/iB,SAhBH,IAiBX0nB,UAAWjtB,EAASoE,GACpBqB,KAAMulB,EAAahZ,GACnBkb,SAAU7J,EAAiBA,EAAejf,GAAK,EAC/C6Y,WAAY,WACZ7sB,KAAsB,SAAhB+zB,EAAyB,SAAW,UAC1C9E,YAAY,8GAAD,OAA2Brf,EAASoE,OAGhC6gB,OAAOnkB,OAAS,GAC/BksB,EAAe9mB,QAAQpF,OAAS,GAChCksB,EAAe3O,MAAMvd,OAAS,GA3BnB,kCA6BLyrB,GAAyBltB,QAAQ2tB,GA7B5B,QAgCb5B,EAAQj4B,IAAR,yCAAY,WAAOvC,GAAP,gBAAAwO,EAAA,4DACJlW,EADI,aAERkH,KAAM,UACN6sB,WAAY,SACZiQ,SAAUt8B,EAAKwT,GACfib,YAAY,8GAAD,OAA2Brf,EAASoE,IAC/CqB,KAAMulB,EAAahZ,IAChBphB,EAAKgiB,WAGFqS,OAAOnkB,OAAS,GACtB5X,EAAMgd,QAAQpF,OAAS,GACvB5X,EAAMm1B,MAAMvd,OAAS,GAZb,gCAcF2rB,GAAwBptB,QAAQnW,GAd9B,2CAAZ,uDAkBAu3B,YAAW,WACTC,OACC,KApDU,4CAAH,sDAwDRA,GAAW,WACfzhB,EAAQQ,KAAK,+BAGTkd,GAAS,yCAAG,iCAAAvd,EAAA,sEACKitB,GAAqBhtB,UAD1B,cACV+c,EADU,gBAEOoQ,GAAyBntB,UAFhC,OAEVuT,EAFU,OAGVua,EAAgB,CACpBlI,OAAQrS,EAASljB,KAAKu1B,OACtB5G,MAAOzL,EAASljB,KAAK2uB,MACrBnY,QAAS0M,EAASljB,KAAKwW,SAGzBmW,EAAUD,EAAO1sB,MACjB4zB,EAAkB1Q,EAASljB,KAAKsY,QAChCwe,GAAY2G,GACZ9B,EAAWjP,EAAO1sB,KAAK07B,SACvBG,EAAYnP,EAAO1sB,KAAK47B,UACxBL,EAAiB7O,EAAO1sB,KAAK+V,MAC7BimB,GAAYtP,EAAO1sB,KAAK09B,YACxBtB,GAAY1P,EAAO1sB,KAAKm8B,UACxBD,GAAgBhZ,EAASljB,KAAKuY,OAC9BikB,GACE9P,EAAO1sB,KAAK09B,YACThR,EAAO1sB,KAAKm8B,SAAWjZ,EAASljB,KAAKuY,OACtCxU,OAAOmf,EAASljB,KAAKsY,OAAO+V,mBAED,IAA3B3B,EAAO1sB,KAAKwxB,YACduK,EAAiBrP,EAAO1sB,KAAK40B,gBAxBf,4CAAH,qDA4BT+I,GAAkB,SAACjC,GACvBC,EAAWD,GACXkC,MAGIA,GAAmB,WACvB/4B,EAAkB,CAAE1D,KAAM,YAOtB08B,GAA0B,WAC9Bh5B,EAAkB,CAAE1D,KAAM,SAGtB28B,GAAyB,SAACC,EAAgBrpB,GAC9C,IAAMspB,EAAS,YAAOtC,GAChBuC,EAAWD,EAAUlO,MAAK,SAAC5uB,GAAD,OAAUA,EAAKwT,KAAOA,KAChD0L,EAAQ4d,EAAU7M,WAAU,SAACjwB,GAAD,OAAUA,EAAKwT,KAAOA,KACxDupB,EAAS/a,SAAW6a,EACpBC,EAAU5d,GAAS6d,EACnBtC,EAAWqC,GAEXH,MA8CIK,GAAkB,SAACC,EAASz9B,GAChC,GAAa,SAATA,EAAiB,CACnB,IAAM0f,EAAQwb,EAASzK,WAAU,SAACjwB,GAAD,OAAUA,EAAKwT,KAAOypB,EAAQzpB,MACzD0pB,EAAW,YAAOxC,GACxBwC,EAAYhe,GAAS+d,EACrBtC,EAAYuC,QAEZvC,EAAY,GAAD,mBAAKD,GAAL,CAAeuC,KAE5BE,MAGIA,GAAmB,WACvBx5B,EAAkB,CAAE1D,KAAM,aAWtBm9B,GAAsB,SAAC59B,EAAMV,GACjC6E,EAAkB,CAChBtF,MAAO,gEACPD,UACE,cAAC,GAAD,CACEuU,SAAUqqB,GACVpqB,UAAWuqB,GACX7M,WAAYmC,EAAiBA,EAAejf,GAAK,EACjDga,cAAe1uB,EACfS,OAAQC,IAGZS,KAAM,UACN3B,KAAM,IACNE,SAAS,EACTD,oBAAoB,KAkBlB8+B,GAAwB,SAACv+B,GAC7B,GAAIA,EAaF,OAZoBA,EAAKu1B,OAAOiJ,QAC9B,SAACC,EAAD,OAAMlmB,EAAN,EAAMA,MAAN,OAAkBkmB,EAAI16B,OAAOwU,KAC7B,GAEmBvY,EAAKwW,QAAQgoB,QAChC,SAACC,EAAD,OAAMlmB,EAAN,EAAMA,MAAN,OAAkBkmB,EAAI16B,OAAOwU,KAC7B,GAEiBvY,EAAK2uB,MAAM6P,QAC5B,SAACC,EAAD,OAAMlmB,EAAN,EAAMA,MAAN,OAAkBkmB,EAAI16B,OAAOwU,KAC7B,IA4DN,OAvBAxB,qBAAU,WACRimB,KACItoB,GACFuY,OAED,IAEHlW,qBAAU,WACRilB,GAAYJ,EAAS4C,QAAO,SAACC,EAAD,UAAqBA,EAArB,EAAMzD,WAA6B,MAC9D,CAACY,IAEJ7kB,qBAAU,WACR,IAAM2nB,EAAY1D,IAAYj3B,OAAOo4B,IAAYF,IAEjDK,GAAWoC,GACP/K,GACF6I,GAAkBkC,EAAY36B,OAAM,OAAC4vB,QAAD,IAACA,OAAD,EAACA,EAAgBtF,qBAEtD,CAAC2M,GAAUmB,GAAUF,KAExBllB,qBAAU,WACR5C,EAAMuY,KACL,CAACvY,EAAOuY,IAET,sBAAM7Y,SAAUI,EAAaJ,IAA7B,SACI8oB,GAAqBnrB,QA6YrB,cAAC,GAAD,IA5YA,cAAC5N,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,GAAIvf,GAAI,GAAIP,UAAWD,EAAQ6C,KAA9C,SACE,eAACkZ,GAAA,EAAD,CAAO9b,UAAWD,EAAQ+C,MAA1B,UACE,cAAC5B,EAAA,EAAD,CACElB,UAAWD,EAAQ/D,MACnB+C,QAAQ,KACRoS,GAAG,aACHpV,UAAU,MAJZ,SA1FJoV,EACkB,QAAhB+f,EACK,qGAEF,qGAEa,SAAhBA,EACK,qGAEF,uGA0FD,cAAC7wB,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAzB,SACE,eAAC,WAAD,WACE,eAACtE,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAIG,MAAO,CAAElB,QAAS,QAA5C,UACE,cAAC4B,EAAA,EAAD,CACEV,MAAO,CAAEoD,WAAY,GAAIe,MAAO,OAChC7F,QAAQ,YACRqC,MAAM,UACNC,QA/UG,WACnBC,EAAkB,CAChBtF,MAAO,0DACPD,UACE,cAAC,GAAD,CACE01B,SAAUiI,GACVnpB,UAAWopB,GACXj8B,OAAQ7H,EAASyB,YAAYE,WAGjCoG,KAAM,SACN3B,KAAM,IACNE,SAAS,EACTD,oBAAoB,KA8TR,iFASA,cAACuV,GAAA,EAAD,CACE1S,QAAQ,WACRnB,KAAM,aACN4T,SAzDY,SAAC4C,GAC7BokB,EAAiBpkB,EAAEyP,OAAO5tB,OAC1Bo6B,KAwDgBp6B,MAAOsiC,EACP93B,MAAO,CAAEmE,MAAO,OAChB3I,KAAK,aAGT,cAACoE,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAIN,UAAWD,EAAQ+Y,WAA7C,SACE,cAACoI,GAAA,EAAD,CACEC,QAAM,EACNvjB,KAAK,OACL1H,MAAM,oDACNkrB,aAAa,WACbC,QAAQ,iCACRC,YAAY,qBACZC,UAAW,SAAC/O,GAAD,OACTA,EAAOA,EAAKyB,OAAO,iBAAmB,IAExChe,MAAO8hC,EACPvmB,SA5XG,SAAC4C,GACpB4jB,EAAiB5jB,IA4XD3T,MAAO,CAAEmE,MAAO,YAGpB,cAACvE,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,WACKqsB,EAAS9e,QAAUoqB,GACpB,cAACxmB,GAAA,EAAD,CACE8Y,QAAM,EACNr0B,MAAM,oDACND,MAAOgiC,EACPzmB,SAzFK,SAAC4C,GACxB8jB,EAAmB9jB,EAAEyP,OAAO5tB,QAyFV8I,QAAQ,WACR4S,WAAS,EACT1V,KAAK,QAPP,SASG0wB,EAASzsB,KAAI,SAAC1C,GAAD,OACZ,cAACqX,GAAA,EAAD,CAA6B5e,MAAOuH,EAAOvH,MAA3C,SACGuH,EAAOtH,OADKsH,EAAOvH,cAO9B,cAACmlC,GAAA,EAAD,CAAQC,QAAM,EAAd,SACE,cAACh7B,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,OAExB,cAACD,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,2BACN0H,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,GAAS,IAChBmX,QAASuD,EAAO2qB,OAChB5pB,WACEf,EAAO2qB,OAAS3qB,EAAO2qB,OAAOhuB,QAAU,GAE1CqE,WAAS,EACT1V,KAAK,WAIX2B,KAAK,aAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,2BACN0H,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,GAAS,IAChBmX,QAASuD,EAAO4qB,YAChB7pB,WACEf,EAAO4qB,YAAc5qB,EAAO4qB,YAAYjuB,QAAU,GAEpDqE,WAAS,EACT1V,KAAK,WAIX2B,KAAK,kBAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAIG,MAAO,CAAElB,QAAS,QAA5C,SACE,cAAC4B,EAAA,EAAD,CACEV,MAAO,CAAEoD,WAAY,GAAIe,MAAO,OAChC7F,QAAQ,YACRqC,MAAM,UACNC,QA9QS,WACzBC,EAAkB,CAChBtF,MAAO,4EACPD,UACE,cAAC,GAAD,CACE01B,SAAU2I,GACV7pB,UAAW8pB,GACXlP,cAAegN,IAGnBv6B,KAAM,SACN3B,KAAM,IACNE,SAAS,EACTD,oBAAoB,KAkQNy5B,QACE,mBAAG31B,UAAU,uBAAb,4BAEFw7B,aAAW,EARb,2FAaCrD,EAAQtqB,QACT,cAACxN,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAACwb,GAAA,EAAD,UACE,cAACkL,GAAA,EAAD,CAAgBvmB,MAAO,CAAEpB,QAAS,UAAlC,SACE,eAAC4nB,GAAA,EAAD,CACEjnB,UAAWD,EAAQ6lB,MACnB3pB,KAAM,SACNwE,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CAAage,UAAW2T,KAExB,cAAC3Q,GAAA,EAAD,UACGgR,EAAQj4B,KAAI,SAACknB,GAEZ,OADAqU,QAAQC,IAAItU,GAEV,eAAC/C,GAAA,EAAD,CACEiD,OAAK,EACLC,UAAW,EAEX9mB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACoe,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAII,YAEP,cAACjD,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAIK,WAEP,cAAClD,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAIsO,UAEP,cAACnR,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAIuU,YAEP,cAACpX,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG27B,GAAsB5T,EAAIzH,YAE7B,eAAC4E,GAAA,EAAD,CACEllB,QAAQ,OACRoB,MAAO,CAAE+jB,UAAW,QAFtB,UAIE,cAAC7Q,GAAA,EAAD,CACEtS,QAAS,kBAjVjB,SAAC+lB,GAC3B9lB,EAAkB,CAChBtF,MAAO,yFACPD,UACE,cAAC,GAAD,CACEuU,SAAUiqB,GACVhqB,UAAW+pB,GACXlF,SAAUhO,EAAIjW,KAGlBvT,KAAM,MACN3B,KAAM,IACNE,SAAS,EACTD,oBAAoB,IAoU2B0/B,CAAoBxU,IADrC,SAGE,sBACE5F,MAAM,uBACN/gB,MAAO,CAAEW,MAAO,SAFlB,oBAQF,cAACuS,GAAA,EAAD,CACEtS,QAAS,kBAxXlB,SAAC8P,GAC1BinB,EAAWD,EAAQz6B,QAAO,SAACC,GAAD,OAAUA,EAAKwT,KAAOA,MAuXC0qB,CAAmBzU,EAAIjW,KADxC,SAGE,cAAC,GAAD,WApCCiW,EAAIjW,kBAgD3B,cAAC9Q,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAIG,MAAO,CAAElB,QAAS,QAA5C,SACE,cAAC4B,EAAA,EAAD,CAEEV,MAAO,CAAEoD,WAAY,GAAIe,MAAO,OAChC7F,QAAQ,YACRqC,MAAM,UACNC,QAAS,kBAAM05B,GAAoB,QACnCpF,QACE,mBAAG31B,UAAU,uBAAb,yBAPJ,+EAaCq4B,EAASxqB,QACV,cAACxN,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAACwb,GAAA,EAAD,UACE,cAACkL,GAAA,EAAD,CAAgBvmB,MAAO,CAAEpB,QAAS,UAAlC,SACE,eAAC4nB,GAAA,EAAD,CACEjnB,UAAWD,EAAQ6lB,MACnB3pB,KAAM,SACNwE,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CAAage,UAAWA,KAExB,cAACgD,GAAA,EAAD,UACGkR,EAASn4B,KAAI,SAACknB,GACb,OACE,eAAC/C,GAAA,EAAD,CACEiD,OAAK,EACLC,UAAW,EAEX9mB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACoe,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAIxpB,OAEP,cAAC2mB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACGxJ,EAASS,UAAU8wB,EAAIvpB,QAE1B,cAAC0mB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAIwO,QAAJ,UACMhmB,GACDwX,EAAInG,QAFT,YAGQrR,GAAcwX,EAAIwO,UACvBhmB,GAAcwX,EAAInG,UAExB,cAACsD,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACGuQ,GAAcwX,EAAImP,OAErB,cAAChS,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACGuQ,GAAcwX,EAAImP,IAAMnP,EAAInG,UAE/B,eAACsD,GAAA,EAAD,CACEllB,QAAQ,OACRoB,MAAO,CAAE+jB,UAAW,QAFtB,UAIE,cAAC7Q,GAAA,EAAD,CACEtS,QAAS,WA7W3C05B,GAAoB,OA6W+C3T,IADnC,SAGE,cAAC,GAAD,MAGF,cAACzT,GAAA,EAAD,CACEtS,QAAS,kBAxXjB,SAAC8P,GAC3BmnB,EAAYD,EAAS36B,QAAO,SAACC,GAAD,OAAUA,EAAKwT,KAAOA,MAwXd2qB,CAAoB1U,EAAIjW,KAF5B,SAKE,cAAC,GAAD,WArCCiW,EAAIjW,kBAiD3B,cAAC9Q,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,6CACN0H,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,GAAS,IAChBmX,QAASuD,EAAOyb,YAChB1a,WACEf,EAAOyb,YAAczb,EAAOyb,YAAY9e,QAAU,GAEpDqE,WAAS,EACTua,WAAS,EACTjwB,KAAK,WAIX2B,KAAK,kBAGT,cAAC,GAAD,CACET,KAAsB,QAAhB+zB,EAAwB,UAAY,SAC1C/F,cAAexL,GACf2T,IAAK+B,EACL/kB,SAzWQ,SAAC7T,GACvB,GAAIA,EAAM,CACR,IAAMs/B,EAAct/B,EAAKu1B,OAAOiJ,QAC9B,SAACC,EAAD,OAAMlmB,EAAN,EAAMA,MAAN,OAAkBkmB,EAAI16B,OAAOwU,KAC7B,GAEIgnB,EAAev/B,EAAKwW,QAAQgoB,QAChC,SAACC,EAAD,OAAMlmB,EAAN,EAAMA,MAAN,OAAkBkmB,EAAI16B,OAAOwU,KAC7B,GAEIinB,EAAax/B,EAAK2uB,MAAM6P,QAC5B,SAACC,EAAD,OAAMlmB,EAAN,EAAMA,MAAN,OAAkBkmB,EAAI16B,OAAOwU,KAC7B,GAEF2jB,GAAgBoD,EAAcC,EAAeC,OA6VnC,eAAC57B,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAGlE,MAAO,CAAE4G,UAAW,IAAhD,UACE,cAAChH,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,EAAtB,SACE,cAACmR,GAAA,EAAD,CACEojB,UAAQ,EACR91B,QAAQ,WACR7I,MAAM,wCACND,MAAOwhC,GACP9lB,WAAS,EACT1V,KAAK,YAGT,cAACoE,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,EAAtB,SACE,cAACmR,GAAA,EAAD,CACEojB,UAAQ,EACR91B,QAAQ,WACR7I,MAAK,UACa,SAAhBg7B,EAAyB,gEAAgB,iEAE3Cj7B,MAAOyiC,GACP/mB,WAAS,EACT1V,KAAK,YAGT,cAACoE,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,EAAtB,SACE,cAACmR,GAAA,EAAD,CACE1S,QAAQ,WACRyS,SAnXK,SAAC4C,GACxBykB,GAAYzkB,EAAEyP,OAAO5tB,QAmXHC,MAAM,iCACND,MAAO2iC,IAAY,IACnBjnB,WAAS,EACT1V,KAAK,YAGT,cAACoE,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,EAAtB,SACE,cAACmR,GAAA,EAAD,CACEojB,UAAQ,EACR91B,QAAQ,WACR7I,MAAM,oDACND,MAAO6iC,GACPnnB,WAAS,EACT1V,KAAK,YAGRm0B,GACC,cAAC/vB,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,EAAtB,SACE,cAACmR,GAAA,EAAD,CACEojB,UAAQ,EACR91B,QAAQ,WACR7I,MAAM,0DACND,MACEm6B,EAAiBA,EAAetF,iBAAmB,EAErDnZ,WAAS,EACT1V,KAAK,YAIX,cAACoE,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,EAAtB,SACE,cAACmR,GAAA,EAAD,CACEojB,UAAQ,EACR91B,QAAQ,WACR7I,MAAM,gEACND,MAAO+iC,GACPrnB,WAAS,EACT1V,KAAK,eAIX,eAACoE,EAAA,EAAD,CACE1C,MAAI,EACJ2C,GAAI,GACJG,MAAO,CAAElB,QAAS,OAAQC,eAAgB,iBAH5C,UAKE,cAAC2B,EAAA,EAAD,CAAQpC,QAAQ,YAAYqC,MAAM,UAAUjE,KAAK,SAAjD,4CAIA,cAACgE,EAAA,EAAD,CACEpC,QAAQ,YACRqC,MAAM,YACNC,QAASosB,GAHX,iEC11BlB,IAAMtJ,GAAY,CAChB,CACEhT,GAAI,OACJjb,MAAO,+CAET,CACEib,GAAI,SACJjb,MAAO,qDAGT,CAAEib,GAAI,SAAUjb,MAAO,kCACvB,CAAEib,GAAI,OAAQjb,MAAO,kEAErB,CAAEib,GAAI,SAAUjb,MAAO,iBAwKVi/B,GArKK9qB,IAAMgpB,YAAW,SAAChqB,EAAOiqB,GAC3C,IAAQnI,EAAkB9hB,EAAlB8hB,cACFprB,EAAUd,KAChB,EAAwB+O,mBAAS,IAAjC,oBAAOuY,EAAP,KAAaC,EAAb,KACA,EAAsCxY,qBACpCmd,KAAkBA,EAAcyK,SADlC,oBAGMG,GAHN,UAGcC,MACd,EAAsChoB,mBAAS,IAA/C,oBAAOmoB,EAAP,KAAoBC,EAApB,KACA,EAA0CpoB,mBAAS,GAAnD,oBAAOqoB,EAAP,KAAsBC,EAAtB,KAEA9C,8BAAoBF,GAAK,WACvB,OAAO/M,KAGT,IAAMmQ,EAAyB5oB,GAAO,CACpCZ,OAAQ,MACRC,IAAI,iBAAD,OAAmBkB,GAA2B,OAG7CuoB,EAAkB9oB,GAAO,CAC7BZ,OAAQ,MACRC,IAAI,iBAGA0Z,EAAO,yCAAG,6BAAA1a,EAAA,sEACYuqB,EAAuBtqB,QAC/C,KACAiqB,GAHY,OACRW,EADQ,OAKdxQ,EAAQwQ,EAAYv6B,MALN,2CAAH,qDAQP86B,EAAuB,SAACnQ,GAC5B,IAAMkQ,EAAWvB,EAAMr4B,QAAO,SAACC,GAAD,OAAUA,EAAK1H,QAAUmxB,EAAI2P,cAAY,GAEvE,OAAIO,EACKA,EAASnuB,SAEX,IAGHkuB,EAAc,yCAAG,6BAAAlrB,EAAA,sEACAyqB,EAAgBxqB,UADhB,OACfC,EADe,OAErB+pB,EAAe/pB,EAAO5P,MAFD,2CAAH,qDASdy/B,EAAuB,SAAC9nB,EAAG3X,GAC/B,IAAM0/B,EAAO,YAAO5V,GACd6V,EAAyB7V,EAAKgG,MAAK,SAAC5uB,GAAD,OAAUA,EAAKwT,KAAO1U,EAAK0U,MAC9D0L,EAAQ0J,EAAKqH,WAAU,SAACjwB,GAAD,OAAUA,EAAKwT,KAAO1U,EAAK0U,MACxDirB,EAAuBhoB,EAAEyP,OAAOjmB,MAAQwW,EAAEyP,OAAO5tB,MACjDkmC,EAAQtf,GAASuf,EACjB5V,EAAQ2V,IAWV,OARA3oB,qBAAU,WACRqT,MACC,CAACwP,IAEJ7iB,qBAAU,WACR6jB,MACC,IAGD,qCACE,cAACh3B,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAzB,SACE,cAACtE,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,GAAIxf,GAAI,GAAIG,MAAO,CAAEgI,aAAc,IAAlD,SACE,cAACgJ,GAAA,EAAD,CACE8Y,QAAM,EACNr0B,MAAM,iCACND,MAAOogC,EACP7kB,SA7BY,SAAC4C,GACrBkiB,EAAiBliB,EAAEyP,OAAO5tB,QA6BlB8I,QAAQ,WACRnB,KAAK,QACL+T,WAAS,EACT1V,KAAK,QARP,SAUGk6B,EAAYj2B,KAAI,SAAC1C,GAAD,OACf,cAACqX,GAAA,EAAD,CAA6B5e,MAAOuH,EAAOvH,MAA3C,SACGuH,EAAOtH,OADKsH,EAAOvH,gBAQ9B,cAAC+wB,GAAA,EAAD,CAAgBvmB,MAAO,CAAE6C,OAAQ,IAAK2X,SAAU,QAAhD,SACE,eAACgM,GAAA,EAAD,CAAOjnB,UAAWD,EAAQ6lB,MAAO3pB,KAAM,SAAvC,UACE,cAAC,GAAD,CAAa8D,QAASA,EAASokB,UAAWA,KAE1C,eAACgD,GAAA,EAAD,WACGZ,EAAKrmB,KAAI,SAACknB,GACT,OACE,eAAC/C,GAAA,EAAD,CACEiD,OAAK,EACLC,UAAW,EAEX9mB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACoe,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SAA2B+nB,EAAIxpB,OAC/B,cAAC2mB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACGuQ,GAAcwX,EAAIwQ,cAErB,cAACrT,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACE,cAACoS,GAAA,EAAD,CACEtU,KAAK,SACL4B,QAAQ,WACRnB,KAAK,SACL6C,MAAO,CAAEmE,MAAO,OAChB3I,KAAK,QACLhG,MAAOmxB,EAAInG,OACXzP,SAAU,SAAC4C,GAAD,OAAO8nB,EAAqB9nB,EAAGgT,QAG7C,cAAC7C,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACE,cAACoS,GAAA,EAAD,CACE8Y,QAAM,EACNt0B,MAAOmxB,EAAIvpB,KACX2T,SAAU,SAAC4C,GAAD,OAAO8nB,EAAqB9nB,EAAGgT,IACzCroB,QAAQ,WACRnB,KAAK,OACL6C,MAAO,CAAEmE,MAAO,OAChB3I,KAAK,QAPP,SASGs7B,EAAqBnQ,GAAKlnB,KAAI,SAAC1C,GAAD,OAC7B,cAACqX,GAAA,EAAD,CAA6B5e,MAAOuH,EAAOvH,MAA3C,SACGuH,EAAOtH,OADKsH,EAAOvH,cAM5B,cAACsuB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACE,cAACoS,GAAA,EAAD,CACEtU,KAAK,SACL4B,QAAQ,WACRnB,KAAK,MACL6C,MAAO,CAAEmE,MAAO,OAChB3I,KAAK,QACLhG,MAAOmxB,EAAImP,IACX/kB,SAAU,SAAC4C,GAAD,OAAO8nB,EAAqB9nB,EAAGgT,UA3CxCA,EAAIjW,QAiDboV,EAAK1Y,SAAW6oB,EAAuBzoB,SACvC,cAACoW,GAAA,EAAD,CAAU5jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACihB,GAAA,EAAD,CAAW0D,QAAS,EAAGxnB,MAAO,CAAE+jB,UAAW,UAA3C,SACE,cAACtjB,EAAA,EAAD,CAAYnC,QAAQ,KAApB,qLChLZiK,GAAY9J,aAAW,SAACC,GAAD,MAAY,CACvCyD,KAAM,CACJ4F,OAAQ,UAEV1F,MAAO,CACL8B,MAAO,OACPvF,QAAS,IAEXrD,MAAO,CACLkd,cAAe,IAEjBJ,WAAY,CACV,UAAW,CACTzZ,QAAS,cAGb0qB,WAAY,CACVxqB,QAAS,OACTE,WAAY,SACZyZ,cAAe,EACfqW,WAAY,OAID,SAASlf,KACtB,IAAMgsB,EAAcrrB,iBAAO,MACrBqkB,EAAarkB,iBAAO,MACpBjR,EAAUiJ,KACVgD,EAAUyG,cACVye,EAAcviB,GAAe,QACnC,EAAiD6B,eAAhCE,GAAjB,EAAQD,QAAR,EAAiBC,cACjB,GADA,EAA+BC,OAA/B,EAAuCC,MACE5C,mBAASqQ,SAAlD,oBAAO0Z,EAAP,KAAqBC,EAArB,KACA,EAAgChqB,mBAAS,IAAzC,oBAAOqqB,EAAP,KAAiBC,EAAjB,KACA,EAA0CtqB,mBAAS,KAAnD,oBAAOuqB,EAAP,KAAsBC,EAAtB,KACA,EAAgCxqB,mBAAS,CACvCgkB,OAAQ,GACR5G,MAAO,GACPnY,QAAS,KAHX,oBAAO0M,EAAP,KAKA,GALA,KAKgC3R,mBAAS,IAAzC,oBAAOypB,EAAP,KAAiBgB,EAAjB,KACA,EAAwCzqB,mBAAS,GAAjD,oBAAO0qB,EAAP,KAAqBC,EAArB,KACA,EAAgC3qB,mBAAS,GAAzC,oBAAO4qB,EAAP,KAAiBC,EAAjB,KACA,EAA8B7qB,mBAAS,GAAvC,oBAAO8qB,EAAP,KAAgBC,EAAhB,KACA,EAA4C/qB,mBAAS,GAArD,oBAAOgrB,EAAP,KAEME,GAFN,KAE0BprB,GAAO,CAC/BZ,OAAQ,OACRC,IAAI,aAGAmsB,EAA2BxrB,GAAO,CACtCZ,OAAQ,OACRC,IAAI,YAOAysB,EAAoB,WACxB,IAAMC,EAAc,GAUpB,OATAwC,EAAY/pB,QAAQpS,KAAI,SAACvC,GAKvB,GAJAA,EAAKu5B,UAAYv5B,EAAKwT,UACfxT,EAAKwT,UACLxT,EAAK2+B,cACL3+B,EAAK+5B,WACR/5B,EAAK44B,KAAO54B,EAAKE,MAAQF,EAAKsjB,OAChC,OAAO4Y,EAAYrtB,KAAK7O,MAGrBk8B,GAGHvpB,EAAQ,yCAAG,WAAO7T,GAAP,oBAAA0P,EAAA,6DACTlW,EADS,2BAEVwG,GAFU,IAGb47B,SAAUuB,IACVpnB,KAAMulB,EAAahZ,GACnBkP,WAAY,EACZ9wB,KAAM+zB,EACN4I,WAAY,CAAC,GACbzI,eAAgBkH,EAAcgE,SARjB,SAUQrD,EAAkB9sB,QAAQnW,GAVlC,UAUT8W,EAVS,OAWf0uB,QAAQC,IAAI3uB,EAAUmsB,MAChBa,EAZS,2BAaV1E,EAAW/iB,SAbD,IAcb0nB,UAAWjtB,EAASoE,GACpBqB,KAAMulB,EAAahZ,GACnBkb,SAAU,EACVjQ,WAAY,WACZ7sB,KAAsB,SAAhB+zB,EAAyB,SAAW,UAC1C9E,YAAY,8GAAD,OAA2Brf,EAASoE,OAGhC6gB,OAAOnkB,OAAS,GAC/BksB,EAAe9mB,QAAQpF,OAAS,GAChCksB,EAAe3O,MAAMvd,OAAS,GAxBjB,gCA0BPyrB,EAAyBltB,QAAQ2tB,GA1B1B,OA6BfvM,YAAW,WACTC,OACC,KA/BY,4CAAH,sDAkCRA,GAAW,WACfzhB,EAAQQ,KAAK,+BAGTmuB,GAAkB,SAACC,EAASz9B,GAChC,GAAa,SAATA,EAAiB,CACnB,IAAM0f,EAAQwb,EAASzK,WAAU,SAACjwB,GAAD,OAAUA,EAAKwT,KAAOypB,EAAQzpB,MACzD0pB,EAAW,YAAOxC,GACxBwC,EAAYhe,GAAS+d,EACrBtC,EAAYuC,QAEZvC,EAAY,GAAD,mBAAKD,GAAL,CAAeuC,KAE5BE,MAGIA,GAAmB,WACvBx5B,EAAkB,CAAE1D,KAAM,aAiE5B,OAVA4V,qBAAU,WACRilB,EAAYJ,EAAS4C,QAAO,SAACC,EAAD,UAAqBA,EAArB,EAAMzD,WAA6B,MAC9D,CAACY,IAEJ7kB,qBAAU,WACR,IAAM2nB,EAAY1D,GAAYj3B,OAAOo4B,GAAYF,GAEjDK,EAAWoC,KACV,CAAC1D,EAAUmB,EAAUF,IAGtB,sBAAMpoB,SAAUI,EAAaJ,GAA7B,SACE,cAACjQ,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,GAAIvf,GAAI,GAAIP,UAAWD,EAAQ6C,KAA9C,SACE,eAACkZ,GAAA,EAAD,CAAO9b,UAAWD,EAAQ+C,MAA1B,UACE,cAAC5B,EAAA,EAAD,CACElB,UAAWD,EAAQ/D,MACnB+C,QAAQ,KACRoS,GAAG,aACHpV,UAAU,MAJZ,SA9Cc,SAAhBm1B,EACK,qGAEF,uGAoDD,cAAC7wB,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAzB,SACE,eAAC,WAAD,WACE,cAACtE,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAIG,MAAO,CAAElB,QAAS,QAA5C,SACE,cAACkS,GAAA,EAAD,CACEvb,MAAM,oDACN6I,QAAQ,WACRnB,KAAM,aACN4T,SAlCc,SAAC4C,GAC7BokB,EAAiBpkB,EAAEyP,OAAO5tB,QAkCZA,MAAOsiC,EACP5mB,WAAS,EACT1V,KAAK,YAGT,cAACoE,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAIN,UAAWD,EAAQ+Y,WAA7C,SACE,cAACoI,GAAA,EAAD,CACEC,QAAM,EACNvjB,KAAK,OACL1H,MAAM,oDACNkrB,aAAa,WACbC,QAAQ,iCACRC,YAAY,qBACZC,UAAW,SAAC/O,GAAD,OACTA,EAAOA,EAAKyB,OAAO,iBAAmB,IAExChe,MAAO8hC,EACPvmB,SA5KK,SAAC4C,GACpB4jB,EAAiB5jB,IA4KH3T,MAAO,CAAEmE,MAAO,YAIpB,cAACvE,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAAC,GAAD,CACEgQ,SAAUqqB,GACVpqB,UAAWuqB,GACX7M,WAAY,EACZqF,IAAK+I,MAIT,cAAC,GAAD,CACEl/B,KAAsB,QAAhB+zB,EAAwB,UAAY,SAC1C/F,cAAexL,EACf2T,IAAK+B,EACL/kB,SA5FU,SAAC7T,GACvB,GAAIA,EAAM,CACR,IAAMs/B,EAAct/B,EAAKu1B,OAAOiJ,QAC9B,SAACC,EAAD,OAAMlmB,EAAN,EAAMA,MAAN,OAAkBkmB,EAAI16B,OAAOwU,KAC7B,GAEIgnB,EAAev/B,EAAKwW,QAAQgoB,QAChC,SAACC,EAAD,OAAMlmB,EAAN,EAAMA,MAAN,OAAkBkmB,EAAI16B,OAAOwU,KAC7B,GAEIinB,EAAax/B,EAAK2uB,MAAM6P,QAC5B,SAACC,EAAD,OAAMlmB,EAAN,EAAMA,MAAN,OAAkBkmB,EAAI16B,OAAOwU,KAC7B,GAEF2jB,EAAgBoD,EAAcC,EAAeC,OAgFrC,eAAC57B,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAGlE,MAAO,CAAE4G,UAAW,IAAhD,UACE,cAAChH,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,EAAtB,SACE,cAACmR,GAAA,EAAD,CACEojB,UAAQ,EACR91B,QAAQ,WACR7I,MAAM,wCACND,MAAOwhC,EACP9lB,WAAS,EACT1V,KAAK,YAGT,cAACoE,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,EAAtB,SACE,cAACmR,GAAA,EAAD,CACEojB,UAAQ,EACR91B,QAAQ,WACR7I,MAAK,UACa,SAAhBg7B,EAAyB,gEAAgB,iEAE3Cj7B,MAAOyiC,EACP/mB,WAAS,EACT1V,KAAK,YAGT,cAACoE,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,EAAtB,SACE,cAACmR,GAAA,EAAD,CACE1S,QAAQ,WACRyS,SAtGO,SAAC4C,GACxBykB,EAAYzkB,EAAEyP,OAAO5tB,QAsGLC,MAAM,iCACND,MAAO2iC,GAAY,IACnBjnB,WAAS,EACT1V,KAAK,YAGT,cAACoE,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,EAAtB,SACE,cAACmR,GAAA,EAAD,CACEojB,UAAQ,EACR91B,QAAQ,WACR7I,MAAM,oDACND,MAAO6iC,EACPnnB,WAAS,EACT1V,KAAK,YAIT,cAACoE,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,EAAtB,SACE,cAACmR,GAAA,EAAD,CACEojB,UAAQ,EACR91B,QAAQ,WACR7I,MAAM,gEACND,MAAO+iC,EACPrnB,WAAS,EACT1V,KAAK,eAIX,eAACoE,EAAA,EAAD,CACE1C,MAAI,EACJ2C,GAAI,GACJG,MAAO,CAAElB,QAAS,OAAQC,eAAgB,iBAH5C,UAKE,cAAC2B,EAAA,EAAD,CAAQpC,QAAQ,YAAYqC,MAAM,UAAUjE,KAAK,SAAjD,4CAIA,cAACgE,EAAA,EAAD,CACEpC,QAAQ,YACRqC,MAAM,YACNC,QAASosB,GAHX,iEClUDvuB,oBAAW,SAACC,GAAD,MAAY,CACpCyD,KAAM,CACJgC,MAAO,QAET9B,MAAO,CACL8B,MAAO,OACP6D,aAActJ,EAAMwF,QAAQ,IAE9BihB,MAAO,CACL9d,SAAU,KAEZe,KAAM,CACJzH,MAAO,QAET0H,QAAS,CACP1H,MAAOjC,EAAMQ,QAAQ4B,QAAQQ,MAE/B9I,OAAQ,CACN8H,gBAAiB5B,EAAMQ,QAAQ+B,QAAQK,MAEzCgH,WAAY,CACV3H,MAAOjC,EAAMQ,QAAQ+B,QAAQK,MAE/B7I,QAAS,CACP6H,gBAAiB5B,EAAMQ,QAAQuC,OAAOH,MAExCmuB,UAAW,CACT9uB,MAAOjC,EAAMQ,QAAQuC,OAAOH,MAE9B+W,WAAY,CACV,UAAW,CACTzZ,QAAS,cAGb0qB,WAAY,CACVxqB,QAAS,OACTE,WAAY,SACZyZ,cAAe,EACfqW,WAAY,OCnBVpL,GAAY,CAChB,CACEhT,GAAI,OACJjb,MAAO,qDAGT,CACEib,GAAI,OACJjb,MAAO,4BAET,CAAEib,GAAI,SAAUjb,MAAO,wCAEvB,CAAEib,GAAI,WAGO,SAASqrB,GAAT,GAA0D,IAAlC/K,EAAiC,EAAjCA,SAAUlhB,EAAuB,EAAvBA,UAAWksB,EAAY,EAAZA,SACpD18B,EAAUd,KAChB,EAA0B+O,mBAAS,OAAnC,oBAAOsM,EAAP,KAAc2L,EAAd,KACA,EAA8BjY,mBAAS,QAAvC,oBAAOiW,EAAP,KAAgBiC,EAAhB,KACA,EAA4BlY,qBAA5B,oBAAO1H,EAAP,KAAe6f,EAAf,KACA,EAAwBnY,mBAAS,GAAjC,oBAAOiX,EAAP,KAAamB,EAAb,KACA,EAAgCpY,mBAASnY,EAASE,iBAAlD,oBAAOswB,EAAP,KAAiBC,EAAjB,KACA,EAAwBtY,mBAAS,IAAjC,oBAAOuY,EAAP,KAAaC,EAAb,KACA,EAA0BxY,mBAAS,GAAnC,oBAAOyY,EAAP,KAAcC,EAAd,KAqBM2L,EAAiBvkB,GAAO,CAC5BZ,OAAQ,MACRC,IAAI,sBAAD,OAAwBkB,GAA2B,CACpD4W,OACA3K,QACA2J,UACAoC,WACA/f,cAQEugB,EAAO,yCAAG,6BAAA1a,EAAA,sEACSkmB,EAAejmB,UADxB,OACRswB,EADQ,OAEdlW,EAAQkW,EAASjgC,MACjBiqB,EAASgW,EAASjW,OAHJ,2CAAH,qDAUb,OAJAjT,qBAAU,WACRqT,MACC,CAAC5B,EAAM3K,EAAOhU,EAAQ+f,IAGvB,sBAAK5lB,MAAO,CAAE4G,WAAY,IAA1B,UACE,cAAC,GAAD,CAAU6b,aA/BG,SAACjtB,GAChBkwB,EAAUlwB,MA+BR,cAAC+wB,GAAA,EAAD,CAAgBvmB,MAAO,CAAEpB,QAAS,UAAlC,SACE,eAAC4nB,GAAA,EAAD,CACEjnB,UAAWD,EAAQ6lB,MACnB3pB,KAAM,SACNwE,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CACEpG,QAASA,EACTua,MAAOA,EACP2J,QAASA,EACTC,cAzDgB,SAAC3lB,EAAOqmB,GAEhCqB,EADchC,IAAYW,GAAsB,QAAVtK,EACrB,OAAS,OAC1B4L,EAAWtB,IAuDHsC,SAAUX,EAAK1Y,OACfsW,UAAWA,KAEb,eAACgD,GAAA,EAAD,WACGZ,EAAKrmB,KAAI,SAACknB,GACT,OACE,eAAC/C,GAAA,EAAD,CACEiD,OAAK,EACLC,UAAW,EAEX9mB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACoe,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SAA2B+nB,EAAIxpB,OAE/B,cAAC2mB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAIkE,MACH,qBACE7qB,MAAO,CAAEmE,MAAO,GAAItB,OAAQ,IAC5BwoB,IAAK1E,EAAIkE,KAAK1tB,KACdguB,IAAG,UAAK/1B,EAASC,YAAd,YAA6BsxB,EAAIkE,KAAKO,UAI/C,cAACtH,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SAA2B+nB,EAAInG,SAE/B,cAACsD,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACE,cAAC8B,EAAA,EAAD,CACEpC,QAAQ,YACRqC,MAAM,UACNC,QAAS,kBAzDP8P,EAyD0BiW,EAAIjW,QAxDlDsgB,EAAStgB,EAAIsrB,GADM,IAACtrB,GAsDJ,+EAjBGiW,EAAIjW,QA4BboV,EAAK1Y,SAAWwkB,EAAepkB,SAC/B,cAACoW,GAAA,EAAD,CAAU5jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACihB,GAAA,EAAD,CAAW0D,QAAS,EAAGxnB,MAAO,CAAE+jB,UAAW,UAA3C,SACE,cAACtjB,EAAA,EAAD,CAAYnC,QAAQ,KAApB,+KASZ,cAAC,GAAD,CACEgmB,MAAO0B,EACP3B,iBAvGmB,SAACvmB,EAAO2pB,GAC/B9B,EAAQ8B,IAuGJlD,wBApG0B,SAACzmB,GAC/B+nB,EAAY6B,SAAS5pB,EAAMslB,OAAO5tB,MAAOJ,EAASE,kBAClDqwB,EAAQ,IAmGJnB,KAAMA,EACNC,YAAamB,IAGf,cAAChmB,EAAA,EAAD,CACE1C,MAAI,EACJ2C,GAAI,GACJG,MAAO,CAAElB,QAAS,OAAQC,eAAgB,YAH5C,SAKE,cAAC2B,EAAA,EAAD,CAAQpC,QAAQ,YAAYqC,MAAM,YAAYC,QAASkP,EAAvD,uDC9JR,IAAMvH,GAAY9J,aAAW,SAACC,GAAD,MAAY,CACvCyD,KAAM,CACJ4F,OAAQ,UAEV1F,MAAO,CACL8B,MAAO,OACPvF,QAAS,IAEXrD,MAAO,CACLkd,cAAe,IAEjBJ,WAAY,CACV,UAAW,CACTzZ,QAAS,cAGb0qB,WAAY,CACVxqB,QAAS,OACTE,WAAY,SACZyZ,cAAe,EACfqW,WAAY,OAID,SAASoN,GAAT,GAAyD,IAAlCF,EAAiC,EAAjCA,SAAUlsB,EAAuB,EAAvBA,UAAWD,EAAY,EAAZA,SACnDvQ,EAAUiJ,KAChB,EAA4CgF,qBAA5C,oBAAOoiB,EAAP,KAAuBC,EAAvB,KACA,EAAyCriB,mBAASqQ,QAAlD,oBAAO0Z,EAAP,KAAqBC,EAArB,KACA,EAA8BhqB,mBAAS,IAAvC,oBAAO4uB,EAAP,KAAgBC,EAAhB,KACA,EAAsC7uB,qBAAtC,oBAAOoe,EAAP,KAAoB0Q,EAApB,KAEMC,EAAoBjvB,GAAO,CAC/BZ,OAAQ,MACRC,IAAK,aAGD6vB,EAAU,yCAAG,6BAAA7wB,EAAA,sEACQ4wB,EAAkB3wB,UAD1B,OACX6wB,EADW,OAEjBJ,EAAWI,EAAWxgC,MAFL,2CAAH,qDA2BhB,OAJA+W,qBAAU,WACRwpB,MACC,IAGD,cAAC38B,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAzB,SACE,eAAC,WAAD,WACE,cAACtE,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAIG,MAAO,CAAElB,QAAS,QAArC,SACE,cAACwxB,GAAA,EAAD,CACE5f,GAAG,iBACHK,SAlBa,SAAC4C,EAAGne,GACzBo6B,EAAkBp6B,IAkBViU,QAAS0yB,EACT5L,eAAgB,SAACxzB,GAAD,gBACXA,EAAOgqB,UADI,YACShqB,EAAOiqB,WAEhC9V,WAAS,EACT1V,KAAK,QACLg1B,YAAa,SAAC3iB,GAAD,OACX,cAACmD,GAAA,EAAD,2BAAenD,GAAf,IAAuBpY,MAAM,0DAAa6I,QAAQ,mBAIxD,cAACsB,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAIN,UAAWD,EAAQ+Y,WAAtC,SACE,cAACoI,GAAA,EAAD,CACEC,QAAM,EACNvjB,KAAK,OACL1H,MAAM,oDACNkrB,aAAa,WACbC,QAAQ,iCACRC,YAAY,qBACZC,UAAW,SAAC/O,GAAD,OAAWA,EAAOA,EAAKyB,OAAO,iBAAmB,IAC5Dhe,MAAO8hC,EACPvmB,SAAUwmB,EACVv3B,MAAO,CAAEmE,MAAO,YAGpB,cAACvE,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAACmR,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,2BACN0H,KAAM,cACN4T,SA7CkB,SAAC4C,GAC3B0oB,EAAe1oB,EAAEyP,OAAO5tB,QA6ChBA,MAAOm2B,EACPza,WAAS,EACT1V,KAAK,YAIT,eAACoE,EAAA,EAAD,CACE1C,MAAI,EACJ2C,GAAI,GACJG,MAAO,CAAElB,QAAS,OAAQC,eAAgB,iBAH5C,UAKE,cAAC2B,EAAA,EAAD,CAAQpC,QAAQ,YAAYqC,MAAM,UAAUC,QAvErC,WACbiP,EAAS,CACPmsB,WACAxC,SAAU7J,EAAejf,GACzB6Y,WAAYoG,EAAejzB,KAC3BqV,KAAMulB,EAAahZ,GACnBqN,iBAiEI,4CAGA,cAACjrB,EAAA,EAAD,CAAQpC,QAAQ,YAAYqC,MAAM,YAAYC,QAASkP,EAAvD,0DC1FV,IAAM4T,GAAY,CAChB,CACEhT,GAAI,QACJjb,MAAO,uEAET,CACEib,GAAI,SACJjb,MAAO,+CAET,CACEib,GAAI,OACJjb,MAAO,4BAET,CAAEib,GAAI,SAAUjb,MAAO,4BACvB,CAAEib,GAAI,SAAUjb,MAAO,+CACvB,CAAEib,GAAI,WAAYjb,MAAO,mCACzB,CAAEib,GAAI,OAAQjb,MAAO,2DACrB,CAAEib,GAAI,WAyUO6U,GAtUE,WACf,IAAMjmB,EAAUd,KAChB,EAA0B+O,mBAAS,OAAnC,oBAAOsM,EAAP,KAAc2L,EAAd,KACA,EAA8BjY,mBAAS,iBAAvC,oBAAOiW,EAAP,KAAgBiC,EAAhB,KACA,EAA4BlY,qBAA5B,oBAAO1H,EAAP,KAAe6f,EAAf,KACA,EAAwBnY,mBAAS,GAAjC,oBAAOiX,EAAP,KAAamB,EAAb,KACA,EAAgCpY,mBAASnY,EAASE,iBAAlD,oBAAOswB,EAAP,KAAiBC,EAAjB,KACA,EAAwBtY,mBAAS,IAAjC,oBAAOuY,EAAP,KAAaC,EAAb,KACA,EAA0BxY,mBAAS,GAAnC,oBAAOyY,EAAP,KAAcC,EAAd,KACA,EAAsC1Y,mBAAS,OAA/C,oBAAO2jB,EAAP,KAAoBuL,EAApB,KAsBMC,EAAmBrvB,GAAO,CAC9BZ,OAAQ,MACRC,IAAI,UAAD,OAAYkB,GAA2B,CACxC4W,OACA3K,QACA2J,UACAoC,WACA/f,SACAqrB,mBAIEyL,EAAetvB,GAAO,CAC1BZ,OAAQ,OACRC,IAAI,iBAGAkwB,EAAevvB,GAAO,CAC1BZ,OAAQ,OACRC,IAAI,iBAGAmwB,EAAY,yCAAG,WAAOC,EAAYd,GAAnB,UAAAtwB,EAAA,sEACbkxB,EAAajxB,QAAQ,CAAEqwB,WAAUc,eADpB,OAEnB1W,IACAkB,EAAmB,CAAEnqB,KAAM,SAHR,2CAAH,wDAMZ4/B,EAAa,yCAAG,WAAO/gC,GAAP,UAAA0P,EAAA,sEACdixB,EAAahxB,QAAQ3P,GADP,OAEpBoqB,IACAkB,EAAmB,CAAEnqB,KAAM,UAHP,2CAAH,sDAMboqB,EAAe,SAACZ,EAAKjqB,GACzB,IAAMyqB,EAAQ,CACZ6V,MAAO,WACLn8B,EAAkB,CAChBtF,MAAO,sEACPD,UACE,cAACygC,GAAD,CACEC,SAAUrV,EAAIjW,GACdsgB,SAAU6L,EACV/sB,UAAW,kBAAMwX,EAAmB,CAAEnqB,KAAM,YAGhDA,KAAM,OACN3B,KAAM,IACNE,SAAS,EACTD,oBAAoB,KAGxBwhC,MAAO,WACLp8B,EAAkB,CAChBtF,MAAO,kCACPD,UACE,cAAC4gC,GAAD,CACEF,SAAUrV,EAAIjW,GACdb,SAAUktB,EACVjtB,UAAW,kBAAMwX,EAAmB,CAAEnqB,KAAM,aAGhDA,KAAM,QACN3B,KAAM,IACNE,SAAS,EACTD,oBAAoB,KAGxByhC,OAAQ,WACN5V,EAAmB,CACjB5rB,SAAS,EACTH,MAAO,kLACPK,SAAS,WAAD,8BAAE,uBAAA8P,EAAA,sDACRmxB,EAAa,CAAEC,WAAY,EAAGd,SAAUrV,EAAIjW,KAC5C4W,EAAmB,CAAEnqB,KAAM,WAFnB,2CAAF,kDAAC,GAITA,KAAM,SACN3B,KAAM,IACNC,oBAAoB,MAKtB0rB,EAAMzqB,IACRyqB,EAAMzqB,MAmCJ0pB,EAAO,yCAAG,6BAAA1a,EAAA,sEACWgxB,EAAiB/wB,UAD5B,OACRwxB,EADQ,OAEdpX,EAAQoX,EAAWnhC,MACnBiqB,EAASkX,EAAWnX,OAHN,2CAAH,qDAUb,OAJAjT,qBAAU,WACRqT,MACC,CAAC5B,EAAM3K,EAAOhU,EAAQ+f,EAAUsL,IAGjC,mCACG1hB,GAAcpa,EAAS0D,gBAAgBskC,YACtC,cAAC9W,GAAA,EAAD,CAAOjlB,UAAU,OAAO1B,IAAI,EAA5B,SACE,8BACG+8B,EAAiBlvB,QAChB,cAAC,GAAD,CAAe6X,UAAW3B,KAE1B,qBAAKnkB,UAAWD,EAAQ6C,KAAxB,SACE,eAACkZ,GAAA,EAAD,CAAO9b,UAAWD,EAAQ+C,MAA1B,UACE,cAAC,GAAD,CACE9G,MAAM,qDACNknB,aAlJD,SAACjtB,GAChBkwB,EAAUlwB,GACVmwB,EAAQ,IAiJQ9C,cAAehd,IAEjB,qBAAKtG,UAAWD,EAAQyuB,IAAxB,SACE,eAACQ,GAAA,EAAD,CACEjwB,QAAQ,YACR9I,MAAO07B,EACPngB,SA5DC,SAAC/U,EAAM2X,GAC1B8oB,EAAe9oB,IA4DG6a,eAAe,UACfC,UAAU,UACVC,UAAQ,EANV,UAQE,cAACC,GAAA,EAAD,CACEpsB,KACE,mBACEhD,UAAWmS,aACT,uBACApS,EAAQ+I,SAHZ,kBASF5S,MAAM,yCACND,MAAM,QAER,cAACm5B,GAAA,EAAD,CACEpsB,KACE,mBACEhD,UAAWmS,aACT,uBACApS,EAAQgJ,YAHZ,yBASF7S,MAAM,6EACND,MAAM,WAER,cAACm5B,GAAA,EAAD,CACEpsB,KACE,mBACEhD,UAAWmS,aACT,uBACApS,EAAQmwB,WAHZ,2BASFh6B,MAAM,6EACND,MAAM,iBAIZ,cAAC+wB,GAAA,EAAD,CAAgBvmB,MAAO,CAAEpB,QAAS,UAAlC,SACE,eAAC4nB,GAAA,EAAD,CACEjnB,UAAWD,EAAQ6lB,MACnB3pB,KAAM,SACNwE,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CACEpG,QAASA,EACTua,MAAOA,EACP2J,QAASA,EACTC,cAnOI,SAAC3lB,EAAOqmB,GAEhCqB,EADchC,IAAYW,GAAsB,QAAVtK,EACrB,OAAS,OAC1B4L,EAAWtB,IAiOSsC,SAAUX,EAAK1Y,OACfsW,UAAWA,KAGb,eAACgD,GAAA,EAAD,WACGZ,EAAKrmB,KAAI,SAACknB,GACT,OACE,eAAC/C,GAAA,EAAD,CACEiD,OAAK,EACLC,UAAW,EAEX9mB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACoe,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACGuQ,GACC,IAAIkE,KACFsT,EAAItS,eACJd,mBAAmB,YAGzB,cAACuQ,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACGuQ,GAAcwX,EAAI0L,gBAErB,cAACvO,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAIkE,MACH,qBACE7qB,MAAO,CAAEmE,MAAO,GAAItB,OAAQ,IAC5BwoB,IAAK1E,EAAIkE,KAAK1tB,KACdguB,IAAG,UAAK/1B,EAASC,YAAd,YAA6BsxB,EAAIkE,KAAKO,UAI/C,cAACtH,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACGuQ,GACCpP,OAAO4mB,EAAIpS,OAAOoZ,oBAGtB,cAAC7J,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SAA2B+nB,EAAIrS,SAC/B,cAACwP,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAI0W,eAEP,cAACvZ,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACE,cAAC4V,GAAA,EAAD,CACE/e,MAAOL,EAASmD,aAAaouB,EAAIjqB,MACjC6C,UAAWmS,aACTpS,EAAQ8I,KACR9I,EAAQqnB,EAAIjqB,YAlKpBV,EAuKoB2qB,EAtK1B,WAAd3qB,EAAKU,MAAqC,YAAhBV,EAAKqtB,OAE/B,cAACvF,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACE,cAAC8iB,GAAD,CACEjY,QAAS,CACP,CAAEiH,GAAI,QAASnV,MAAO,0FACtB,CAAEmV,GAAI,QAASnV,MAAO,6DAExBomB,YAAa,SAACjlB,GAAD,OAAU6qB,EAAavrB,EAAMU,QAIzB,WAAdV,EAAKU,MAAqC,UAAhBV,EAAKqtB,OAEtC,cAACvF,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACE,cAAC8iB,GAAD,CACEjY,QAAS,CAAC,CAAEiH,GAAI,SAAUnV,MAAO,qFACjComB,YAAa,SAACjlB,GAAD,OAAU6qB,EAAavrB,EAAMU,QAKzC,cAAConB,GAAA,EAAD,CAAWllB,QAAQ,YAuGG+nB,EAAIjW,IA9HZ,IAAC1U,MA2KF8pB,EAAK1Y,SAAWsvB,EAAiBlvB,SACjC,cAACoW,GAAA,EAAD,CAAU5jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACihB,GAAA,EAAD,CACE0D,QAAS,GACTxnB,MAAO,CAAE+jB,UAAW,UAFtB,SAIE,cAACtjB,EAAA,EAAD,CAAYnC,QAAQ,KAApB,+KASZ,cAAC,GAAD,CACEgmB,MAAO0B,EACP3B,iBAtSO,SAACvmB,EAAO2pB,GAC/B9B,EAAQ8B,IAsSQlD,wBAnSc,SAACzmB,GAC/B+nB,EAAY6B,SAAS5pB,EAAMslB,OAAO5tB,MAAOJ,EAASE,kBAClDqwB,EAAQ,IAkSQnB,KAAMA,EACNC,YAAamB,gBC3V3Brd,GAAY9J,aAAW,SAACC,GAAD,MAAY,CACvCyD,KAAM,CACJ4F,OAAQ,UAEV1F,MAAO,CACL8B,MAAO,OACPvF,QAAS,IAEXrD,MAAO,CACLkd,cAAe,IAEjB6Q,WAAY,CACVxqB,QAAS,OACTE,WAAY,SACZJ,QAAS,OAIE,SAASgR,GAAT,GAAwC,IAAlB8a,EAAiB,EAAjBA,cAC7BprB,EAAUiJ,KACVgD,EAAUyG,cACVtB,EAAKxC,GAAe,MAC1B,EAA4BX,mBAAS,IAArC,oBAAOmb,EAAP,KAAeC,EAAf,KACA,EAA0Bpb,mBAAS,IAAnC,oBAAOod,EAAP,KAAcC,EAAd,KACA,EAAwChhB,IAAM2D,SAAS,QAAvD,oBAAO+vB,EAAP,KAAqBC,EAArB,KACA,EAAwChwB,oBACzB,OAAbmd,QAAa,IAAbA,OAAA,EAAAA,EAAeG,KAAKr1B,QAAS,GAD/B,oBAAOs1B,EAAP,KAAqBC,EAArB,KAGA,EAAiDhb,eAAzCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,OAAQC,EAAvC,EAAuCA,MAEjCqtB,EAAiBnwB,GAAO,CAC5BZ,OAAQ,OACRC,IAAI,aAEA+wB,EAAkBpwB,GAAO,CAC7BZ,OAAQ,MACRC,IAAI,YAAD,OAAcgE,KAEbgtB,EAAoBrwB,GAAO,CAC/BZ,OAAQ,MACRC,IAAI,YAAD,OAAcgE,KAEbsa,EAAiB3d,GAAO,CAC5BZ,OAAQ,MACRC,IAAI,SAOAmD,EAAQ,yCAAG,WAAO7T,GAAP,UAAA0P,EAAA,0DACXgF,EADW,gCAEP+sB,EAAgB9xB,QAAQ3P,GAFjB,6CAIPwhC,EAAe7xB,QAAQ3P,GAJhB,OAMf+wB,YAAW,WACTC,MACC,KARY,2CAAH,sDAWRA,EAAW,WACfzhB,EAAQQ,KAAK,mBAGTkd,EAAS,yCAAG,6BAAAvd,EAAA,sEACKgyB,EAAkB/xB,UADvB,OACV+c,EADU,OAEhBC,EAAUD,EAAO1sB,MACjB+uB,EAAgBrC,EAAO1sB,KAAK6wB,QAC5B0Q,EAAgB7U,EAAO1sB,KAAKU,MAJZ,2CAAH,qDAWTuuB,EAAQ,yCAAG,6BAAAvf,EAAA,sEACMsf,EAAerf,UADrB,OACTC,EADS,OAEfgf,EAAShf,EAAO5P,MAFD,2CAAH,qDA0Bd,OAXA+W,qBAAU,WACJrC,GACFuY,IAEFgC,MACC,IAEHlY,qBAAU,WACR5C,EAAMuY,KACL,CAACvY,EAAOuY,IAGT,sBAAM7Y,SAAUI,GAtBH,SAACjU,GACd,IAAMxG,EAAK,2BACNwG,GADM,IAET6wB,OAAQ/B,EACRpuB,KAAM4gC,EACNvR,WAAYrB,IAEd7a,EAASra,MAeT,SACIkoC,EAAkBlwB,QA4PlB,cAAC,GAAD,IA3PA,cAAC5N,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGvf,GAAI,GAAIP,UAAWD,EAAQ6C,KAA7C,SACE,eAACkZ,GAAA,EAAD,CAAO9b,UAAWD,EAAQ+C,MAA1B,UACE,cAAC5B,EAAA,EAAD,CACElB,UAAWD,EAAQ/D,MACnB+C,QAAQ,KACRoS,GAAG,aACHpV,UAAU,MAJZ,SAMGoV,EAAK,sEAAiB,wEAGzB,cAAC9Q,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAzB,SACE,eAAC,WAAD,WACE,cAACtE,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,GAAIxf,GAAI,GAAvB,SACE,eAAC0vB,GAAA,EAAD,CACE,aAAW,SACXpyB,KAAK,UACL3H,MAAO8nC,EACPvsB,SA7EO,SAACjT,GACxBy/B,EAAgBz/B,EAAMslB,OAAO5tB,QA6EbwK,MAAO,CACLlB,QAAS,OACT4H,cAAe,MACf3H,eAAgB,gBARpB,UAWE,cAACqpB,GAAA,EAAD,CACE5yB,MAAM,OACNwa,QAAS,cAACwf,GAAA,EAAD,IACT/5B,MAAM,6BAER,cAAC2yB,GAAA,EAAD,CACE5yB,MAAM,OACNwa,QAAS,cAACwf,GAAA,EAAD,IACT/5B,MAAM,wCAIZ,cAACmK,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,qBACN0H,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAO/S,KAChB8T,WAAYf,EAAO/S,KAAO+S,EAAO/S,KAAK0P,QAAU,GAChDqE,WAAS,EACT1V,KAAK,WAIX2V,MAAO,CAAEC,SAAUhc,EAASqC,WAAWC,UACvCyF,KAAK,WAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,wCACNiH,KAAK,SACLS,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAOsQ,OAChBvP,WACEf,EAAOsQ,OAAStQ,EAAOsQ,OAAO3T,QAAU,GAE1CqE,WAAS,EACT1V,KAAK,WAIX2V,MAAO,CAAEC,SAAUhc,EAASqC,WAAWC,UACvCyF,KAAK,aAGS,SAAjBmgC,GACC,qCACE,cAAC19B,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAACmR,GAAA,EAAD,CACE8Y,QAAM,EACNr0B,MAAM,2BACNsb,SA3HD,SAAC4C,GACpBoX,EAAgBpX,EAAEyP,OAAO5tB,QA2HLA,MAAOs1B,EACPxsB,QAAQ,WACR4S,WAAS,EACT1V,KAAK,QACL2B,KAAK,OACL+tB,YAAa,CACX5rB,QAAS,CACPwqB,OAAQxqB,EAAQgqB,aAXtB,SAeGqB,EAAMlrB,KAAI,SAAC1C,GAAD,OACT,eAACqX,GAAA,EAAD,CAA6B5e,MAAOuH,EAAOvH,MAA3C,UACE,qBACE21B,IAAG,UAAK/1B,EAASC,YAAd,YAA6B0H,EAAOquB,MACvCC,IAAKtuB,EAAOtH,MACZuK,MAAO,CACLmE,MAAO,GACPtB,OAAQ,GACR3C,aAAc,MACdkD,WAAY,MAGfrG,EAAOtH,QAXKsH,EAAOvH,cAgB5B,cAACoK,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACEE,WAAS,EACT1b,MAAOA,EACPgG,KAAK,QACL2B,KAAMA,EACN1H,MAAM,0DACN6I,QAAQ,WACRyS,SAAUA,EACVpE,QAASuD,EAAOob,kBAChBra,WACEf,EAAOob,kBACHpb,EAAOob,kBAAkBze,QACzB,MAKZsE,MAAO,CACLE,UAAW,CACT7b,MAAO,GACPqX,QAASzX,EAASqC,WAAWI,aAE/BsxB,UAAW,CACT3zB,MAAO,GACPqX,QAASzX,EAASqC,WAAWI,cAGjCsF,KAAK,wBAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACEE,WAAS,EACT1b,MAAOA,EACPgG,KAAK,QACL2B,KAAMA,EACN1H,MAAM,0DACN6I,QAAQ,WACRyS,SAAUA,EACVpE,QAASuD,EAAOqb,cAChBta,WACEf,EAAOqb,cACHrb,EAAOqb,cAAc1e,QACrB,MAKZ1P,KAAK,oBAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACEE,WAAS,EACT1b,MAAOA,EACPgG,KAAK,QACL2B,KAAMA,EACN1H,MAAM,oDACN6I,QAAQ,WACRyS,SAAUA,EACVpE,QAASuD,EAAOsb,aAChBva,WACEf,EAAOsb,aACHtb,EAAOsb,aAAa3e,QACpB,MAKZ1P,KAAK,sBAKb,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACEya,WAAS,EACTntB,QAAQ,WACR7I,MAAM,6CACN0H,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAOyb,YAChB1a,WACEf,EAAOyb,YAAczb,EAAOyb,YAAY9e,QAAU,GAEpDqE,WAAS,EACT1V,KAAK,WAIX2B,KAAK,kBAGT,eAACyC,EAAA,EAAD,CACE1C,MAAI,EACJ2C,GAAI,GACJG,MAAO,CAAElB,QAAS,OAAQC,eAAgB,iBAH5C,UAKE,cAAC2B,EAAA,EAAD,CAAQpC,QAAQ,YAAYqC,MAAM,UAAUjE,KAAK,SAAjD,4CAGA,cAACgE,EAAA,EAAD,CACEpC,QAAQ,YACRqC,MAAM,YACNC,QAASosB,EAHX,iECpWlB,IAAMzkB,GAAY9J,aAAW,SAACC,GAAD,MAAY,CACvC2Z,WAAY,CACV,UAAW,CACTzZ,QAAS,kBAmGA6qB,GA/FA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACVpqB,EAAUiJ,KAChB,EAA4CgF,qBAA5C,oBAAOoiB,EAAP,KAAuBC,EAAvB,KACA,EAAiDriB,mBAASqQ,QAA1D,oBAAOiS,EAAP,KAAyBC,EAAzB,KACA,EAA6CviB,mBAASqQ,QAAtD,oBAAOmS,EAAP,KAAuBC,EAAvB,KACA,EAAkCziB,mBAAS,IAA3C,oBAAO0iB,EAAP,KAAkBC,EAAlB,KAEMC,EAAsB9iB,GAAO,CACjCZ,OAAQ,MACRC,IAAK,aAOD0jB,EAAe,SAACzc,EAAGjX,GACV,SAATA,EACFozB,EAAqBnc,GAErBqc,EAAmBrc,IAIjB0c,EAAY,yCAAG,6BAAA3kB,EAAA,sEACQykB,EAAoBxkB,UAD5B,OACbue,EADa,OAEnBgG,EAAahG,EAAaluB,MAFP,2CAAH,qDAmBlB,OAJA+W,qBAAU,WACRsd,MACC,IAGD,eAACzwB,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAGlF,WAAW,SAASgB,MAAO,CAAEpB,QAAS,IAAlE,UACE,cAACgB,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAIG,MAAO,CAAElB,QAAS,QAA5C,SACE,cAACwxB,GAAA,EAAD,CACE5f,GAAG,iBACHK,SApCe,SAAC4C,EAAGne,GACzBo6B,EAAkBp6B,IAoCZiU,QAASwmB,EACTM,eAAgB,SAACxzB,GAAD,gBAAeA,EAAOgqB,UAAtB,YAAmChqB,EAAOiqB,WAC1D9V,WAAS,EACT1V,KAAK,QACLg1B,YAAa,SAAC3iB,GAAD,OACX,cAACmD,GAAA,EAAD,2BAAenD,GAAf,IAAuBpY,MAAM,0DAAa6I,QAAQ,mBAIxD,cAACsB,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAIN,UAAWD,EAAQ+Y,WAA7C,SACE,cAACoI,GAAA,EAAD,CACEC,QAAM,EACNvjB,KAAK,OACL1H,MAAM,8CACNkrB,aAAa,WACbC,QAAQ,iCACRC,YAAY,qBACZC,UAAW,SAAC/O,GAAD,OAAWA,EAAOA,EAAKyB,OAAO,iBAAmB,IAC5Dhe,MAAOq6B,EACP9e,SAAU,SAAC4C,GAAD,OAAOyc,EAAazc,EAAG,SACjC3T,MAAO,CAAEmE,MAAO,YAGpB,cAACvE,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAIN,UAAWD,EAAQ+Y,WAA7C,SACE,cAACoI,GAAA,EAAD,CACEC,QAAM,EACNvjB,KAAK,OACL1H,MAAM,8CACNkrB,aAAa,WACbC,QAAQ,iCACRC,YAAY,qBACZC,UAAW,SAAC/O,GAAD,OAAWA,EAAOA,EAAKyB,OAAO,iBAAmB,IAC5Dhe,MAAOu6B,EACPhf,SAAU,SAAC4C,GAAD,OAAOyc,EAAazc,EAAG,OACjC3T,MAAO,CAAEmE,MAAO,YAGpB,cAACvE,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAACa,EAAA,EAAD,CAAQpC,QAAQ,YAAYqC,MAAM,UAAUC,QA1DjC,WACS,oBAAb8oB,GACTA,EAAS,eAAD,OAEJiG,EAAiBA,EAAejf,GAAK,KAFjC,iBAGGmf,EAAiBvR,GAAGC,cAHvB,eAG2CwR,EAAezR,GAAGC,cAH7D,OAwDN,8CAIF,cAACpK,GAAA,EAAD,CAASnU,MAAO,CAAEmE,MAAO,cCzEzBuf,GAAY,CAChB,CAAEhT,GAAI,cACN,CACEA,GAAI,SACJjb,MAAO,yCAET,CACEib,GAAI,OACJjb,MAAO,kCAET,CAAEib,GAAI,QAASjb,MAAO,4BACtB,CACEib,GAAI,OACJjb,MAAO,uBA8RI8vB,GAxRE,WACf,IAAM2L,EAAchjB,GAAe,QAC7B5O,EAAUd,KAChB,EAA0B+O,mBAAS,OAAnC,oBAAOsM,EAAP,KAAc2L,EAAd,KACA,EAA8BjY,mBAAS,QAAvC,oBAAOiW,EAAP,KAAgBiC,EAAhB,KACA,EAA4BlY,qBAA5B,oBAAO1H,EAAP,KAAe6f,EAAf,KACA,EAAwBnY,mBAAS,GAAjC,oBAAOiX,EAAP,KAAamB,EAAb,KACA,EAAgCpY,mBAASnY,EAASE,iBAAlD,oBAAOswB,EAAP,KAAiBC,EAAjB,KACA,EAAwBtY,mBAAS,IAAjC,oBAAOuY,EAAP,KAAaC,EAAb,KACA,EAA0BxY,mBAAS,GAAnC,oBAAOyY,EAAP,KAAcC,EAAd,KACA,EAAwB1Y,mBAAS2jB,GAAjC,oBAAOx0B,EAAP,KAAa0xB,EAAb,KACA,EAA4B7gB,qBAA5B,oBAAOtQ,EAAP,KAAe8sB,EAAf,KACMxe,EAAUyG,cAyBVqM,EAAoBhR,GAAO,CAC/BZ,OAAQ,MACRC,IAAKud,mBAAmB,WAAD,OACVrc,GAA2B,CACpC4W,OACA3K,QACA2J,UACAoC,WACA/f,SACAnJ,OACAO,eAqDAmpB,GAhDmB/Y,GAAO,CAC9BZ,OAAQ,SACRC,IAAI,YA8CO,yCAAG,6BAAAhB,EAAA,sEACY2S,EAAkB1S,UAD9B,OACRgyB,EADQ,OAEd5X,EAAQ4X,EAAY3hC,MACpBiqB,EAAS0X,EAAY3X,OAHP,2CAAH,sDAcb,OARAjT,qBAAU,WACRqT,MACC,CAAC5B,EAAM3K,EAAOhU,EAAQ+f,EAAUlpB,EAAMO,IAEzC8V,qBAAU,WACRqb,EAAQ8C,KACP,CAACA,IAGF,mCACG1hB,GAAcpa,EAAS0D,gBAAgByB,eACtC,cAAC+rB,GAAA,EAAD,CAAOjlB,UAAU,OAAO1B,IAAI,EAA5B,SACE,8BACG0e,EAAkB7Q,QACjB,cAAC,GAAD,CAAe6X,UAAW3B,KAE1B,qBAAKnkB,UAAWD,EAAQ6C,KAAxB,SACE,eAACkZ,GAAA,EAAD,CAAO9b,UAAWD,EAAQ+C,MAA1B,UACE,cAAC,GAAD,CACE9G,MAjCH,WAATmB,EACK,mFACW,YAATA,EACF,mFAEF,kJA6BS6lB,MAAgB,QAAT7lB,GAjGX,WACZ6O,EAAQQ,KAAR,mCAAyCrP,KAiGzB+lB,aA9FD,SAACjtB,GAChBkwB,EAAUlwB,IA8FMqtB,cAAehd,EACf2c,gBAAiB,cAAC,GAAD,CAAiBkH,SA3CnC,SAAC1tB,GAChB+tB,EAAU/tB,GACV2pB,EAAQ,QA2CM,qBAAKpmB,UAAWD,EAAQyuB,IAAxB,SACE,eAACQ,GAAA,EAAD,CACE/4B,MAAOkH,EACPqU,SArDC,SAAC4C,EAAGne,GACvB44B,EAAQ54B,GACRmwB,EAAQ,IAoDU6I,eAAe,UACfC,UAAU,UACVC,UAAQ,EACRpwB,QAAQ,YANV,UAQE,cAACqwB,GAAA,EAAD,CACEpsB,KACE,mBACEhD,UAAWmS,aACT,uBACApS,EAAQ+I,SAHZ,kBASF5S,MAAM,iEACND,MAAM,QAER,cAACm5B,GAAA,EAAD,CACEpsB,KACE,mBACEhD,UAAWmS,aACT,uBACApS,EAAQgJ,YAHZ,yBASF7S,MAAM,0DACND,MAAM,WAER,cAACm5B,GAAA,EAAD,CACEpsB,KACE,mBACEhD,UAAWmS,aACT,uBACApS,EAAQmwB,WAHZ,2BASFh6B,MAAM,0DACND,MAAM,iBAIZ,cAAC+wB,GAAA,EAAD,CAAgBvmB,MAAO,CAAEpB,QAAS,UAAlC,SACE,eAAC4nB,GAAA,EAAD,CACEjnB,UAAWD,EAAQ6lB,MACnB3pB,KAAM,SACNwE,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CACEpG,QAASA,EACTua,MAAOA,EACP2J,QAASA,EACTC,cApLI,SAAC3lB,EAAOqmB,GAEhCqB,EADchC,IAAYW,GAAsB,QAAVtK,EACrB,OAAS,OAC1B4L,EAAWtB,IAkLSsC,SAAUX,EAAK1Y,OACfsW,UAAWA,KAEb,eAACgD,GAAA,EAAD,WACGZ,EAAKrmB,KAAI,SAACknB,GACT,OACE,eAAC/C,GAAA,EAAD,CACEiD,OAAK,EACLC,UAAW,EAEX9mB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACoe,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAIiX,cAEP,cAAC9Z,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SAA2B+nB,EAAIrS,SAC/B,cAACwP,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACGuQ,GACC,IAAIkE,KAAKsT,EAAI5U,MAAMwB,mBACjB,YAIN,cAACuQ,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACGuQ,GACCpP,OAAO4mB,EAAIpS,OAAOoZ,oBAGtB,cAAC7J,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACE,cAAC4V,GAAA,EAAD,CACE/e,MAAOL,EAASmD,aAAaouB,EAAIjqB,MACjC6C,UAAWmS,aACTpS,EAAQ5C,KACR4C,EAAQqnB,EAAIjqB,aAxBbiqB,EAAIjW,QA6CboV,EAAK1Y,SAAWiR,EAAkB7Q,SAClC,cAACoW,GAAA,EAAD,CAAU5jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACihB,GAAA,EAAD,CACE0D,QAAS,EACTxnB,MAAO,CAAE+jB,UAAW,UAFtB,SAIE,cAACtjB,EAAA,EAAD,CAAYnC,QAAQ,KAApB,+KASZ,cAAC,GAAD,CACEgmB,MAAO0B,EACP3B,iBAtPO,SAACvmB,EAAO2pB,GAC/B9B,EAAQ8B,IAsPQlD,wBAnPc,SAACzmB,GAC/B+nB,EAAY6B,SAAS5pB,EAAMslB,OAAO5tB,MAAOJ,EAASE,kBAClDqwB,EAAQ,IAkPQnB,KAAMA,EACNC,YAAamB,gBC1S3Brd,GAAY9J,aAAW,SAACC,GAAD,MAAY,CACvCyD,KAAM,CACJ4F,OAAQ,UAEV1F,MAAO,CACL8B,MAAO,OACPvF,QAAS,IAEXrD,MAAO,CACLkd,cAAe,IAEjBJ,WAAY,CACV,UAAW,CACTzZ,QAAS,cAGb0qB,WAAY,CACVxqB,QAAS,OACTE,WAAY,SACZyZ,cAAe,EACfqW,WAAY,OAID,SAASlf,GAAT,GAAuC,EAAjB8a,cAAkB,IAC/CkK,EAAarkB,iBAAO,MACpBjR,EAAUiJ,KACVgD,EAAUyG,cACVtB,EAAKxC,GAAe,MAEpBgjB,EAAchjB,GAAe,QAC7B2vB,EAAO3vB,GAAe,QACtBsf,EAAatf,GAAe,cAClC,EAA4BX,mBAAS,IAArC,oBAAOmb,EAAP,KAAeC,EAAf,KACA,EAA4Bpb,mBAASswB,GAArC,oBAAOC,EAAP,KAAeC,EAAf,KACA,EAA4CxwB,qBAA5C,oBAAOoiB,EAAP,KAAuBC,EAAvB,KACA,EAAiD7f,eAAzCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,OAAQC,EAAvC,EAAuCA,MACvC,EAAwC5C,mBAASqQ,QAAjD,oBAAO0Z,EAAP,KAAqB0G,EAArB,KACA,EAAgCzwB,mBAAS,CACvCgkB,OAAQ,GACR5G,MAAO,GACPnY,QAAS,KAHX,oBAAO0M,EAAP,KAAiB4T,EAAjB,KAKMmL,EAAoB5wB,GAAO,CAC/BZ,OAAQ,OACRC,IAAI,YAEAwxB,EAAqB7wB,GAAO,CAChCZ,OAAQ,MACRC,IAAI,WAAD,OAAagE,KAEZytB,EAAuB9wB,GAAO,CAClCZ,OAAQ,MACRC,IAAI,WAAD,OAAagE,KAOZuoB,EAAiB,SAAC3kB,GACtBsb,EAAkBtb,GAClB4kB,KAGIA,EAAkB,WACtBr4B,EAAkB,CAAE1D,KAAM,YAoBtB0S,EAAQ,yCAAG,WAAO7T,GAAP,gBAAA0P,EAAA,yDACfsvB,QAAQC,IAAIj/B,GACNxG,EAFS,aAGbkH,KAAMw0B,EACN3H,WAAYoG,EAAepG,WAC3BiQ,SAAU7J,EAAen6B,MACzBm2B,YAAa3vB,EAAK2vB,YAClB5Z,KAAMulB,EAAahZ,GACnBwf,UACGlJ,EAAW/iB,UAEZnB,EAXW,gCAYPwtB,EAAmBvyB,QAAQnW,GAZpB,6CAcPyoC,EAAkBtyB,QAAQnW,GAdnB,OAgBfu3B,YAAW,WACTC,MACC,KAlBY,4CAAH,sDAqBRA,EAAW,WACf,GAAIQ,EACF,OAAOjiB,EAAQQ,KAAR,qCACyByhB,EADzB,mBAITjiB,EAAQQ,KAAK,+BAGTkd,EAAS,yCAAG,yCAAAvd,EAAA,sEACKyyB,EAAqBxyB,UAD1B,OACV+c,EADU,OAEhBC,EAAUD,EAAO1sB,MAFD,EAGiC0sB,EAAO1sB,KAAhDsY,EAHQ,EAGRA,OAAQvC,EAHA,EAGAA,KAAM4Y,EAHN,EAGMA,MAAO4G,EAHb,EAGaA,OAAQ/e,EAHrB,EAGqBA,QACrCod,EAAkBtb,GAClB0pB,EAAgBjsB,GAChB+gB,EAAY,CAAEnI,QAAO4G,SAAQ/e,YAC7BurB,EAAUrV,EAAO1sB,KAAK8hC,QAPN,2CAAH,qDA+Cf,OAVA/qB,qBAAU,WACJrC,GACFuY,MAED,IAEHlW,qBAAU,WACR5C,EAAMuY,KACL,CAACvY,EAAOuY,IAGT,sBAAM7Y,SAAUI,EAAaJ,GAA7B,SACIsuB,EAAqB3wB,QAoHrB,cAAC,GAAD,IAnHA,cAAC5N,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGvf,GAAI,GAAIP,UAAWD,EAAQ6C,KAA7C,SACE,eAACkZ,GAAA,EAAD,CAAO9b,UAAWD,EAAQ+C,MAA1B,UACE,cAAC5B,EAAA,EAAD,CACElB,UAAWD,EAAQ/D,MACnB+C,QAAQ,KACRoS,GAAG,aACHpV,UAAU,MAJZ,SAzCJoV,EACkB,WAAhBwgB,EACK,kFAEF,kFAEa,WAAhBA,EACK,kFAEF,oFAyCD,cAACtxB,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAzB,SACE,eAAC,WAAD,WACE,eAACtE,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAIG,MAAO,CAAElB,QAAS,QAA5C,UACE,cAAC4B,EAAA,EAAD,CACEV,MAAO,CAAEoD,WAAY,GAAIe,MAAO,OAChC7F,QAAQ,YACRqC,MAAM,UACNC,QAnHG,WACnBC,EAAkB,CAChBtF,MAAO,0DACPD,UACE,cAAC,GAAD,CACE01B,SAAUiI,EACVnpB,UAAWopB,EACXj8B,OAAQ7H,EAASyB,YAAYK,SAGjCiG,KAAM,SACN3B,KAAM,IACNE,SAAS,EACTD,oBAAoB,KAkGR,qEASA,cAACuV,GAAA,EAAD,CACE1S,QAAQ,WACRnB,KAAM,aACN3H,MAnDZm6B,EACEA,EAAel6B,MACX,GAAN,OAAUk6B,EAAel6B,OAErB,GAAN,OAAUk6B,EAAe5I,UAAzB,YAAsC4I,EAAe3I,UAEhD,GA8CSoN,UAAQ,EACRp0B,MAAO,CAAEmE,MAAO,OAChB3I,KAAK,aAGT,cAACoE,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAIN,UAAWD,EAAQ+Y,WAA7C,SACE,cAACoI,GAAA,EAAD,CACEC,QAAM,EACNvjB,KAAK,OACL1H,MAAM,oDACNkrB,aAAa,WACbC,QAAQ,iCACRC,YAAY,qBACZC,UAAW,SAAC/O,GAAD,OACTA,EAAOA,EAAKyB,OAAO,iBAAmB,IAExChe,MAAO8hC,EACPvmB,SA1JO,SAACgB,GACxBisB,EAAgBjsB,IA0JA/R,MAAO,CAAEmE,MAAO,YAGpB,cAACvE,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAACuoB,GAAA,EAAD,CACEpY,QACE,cAACqY,GAAA,EAAD,CACEC,QAASwV,EACT/sB,SAtEK,SAAC4C,GAC1BoqB,EAAUpqB,EAAEyP,OAAOkF,UAuEC3nB,MAAM,YAGVlL,MACkB,WAAhBy7B,EAA2B,0DAAe,wDAIhD,cAACtxB,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,2BACN0H,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAOyb,YAChB1a,WACEf,EAAOyb,YAAczb,EAAOyb,YAAY9e,QAAU,GAEpDqE,WAAS,EACT1V,KAAK,WAIX2B,KAAK,mBAGNuT,GAAMwO,IAAcxO,IACrB,cAAC,GAAD,CACEga,cAAexL,EACfxiB,KAAMw0B,EACN2B,IAAK+B,IAIT,eAACh1B,EAAA,EAAD,CACE1C,MAAI,EACJ2C,GAAI,GACJG,MAAO,CAAElB,QAAS,OAAQC,eAAgB,iBAH5C,UAKE,cAAC2B,EAAA,EAAD,CAAQpC,QAAQ,YAAYqC,MAAM,UAAUjE,KAAK,SAAjD,4CAGA,cAACgE,EAAA,EAAD,CACEpC,QAAQ,YACRqC,MAAM,YACNC,QAASosB,EAHX,iECjSHvuB,oBAAW,SAACC,GAAD,MAAY,CACpCyD,KAAM,CACJgC,MAAO,QAET9B,MAAO,CACL8B,MAAO,OACP6D,aAActJ,EAAMwF,QAAQ,IAE9BihB,MAAO,CACL9d,SAAU,SCIRqc,GAAY,CAChB,CACEhT,GAAI,SACJjb,MAAO,wCAET,CAAEib,GAAI,OAAQjb,MAAO,4BACrB,CACEib,GAAI,QACJjb,MAAO,mCAII,SAASma,GAAT,GAAyC,IAAnB5T,EAAkB,EAAlBA,KAAM6T,EAAY,EAAZA,SACzC,OACE,eAACjQ,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAGlF,WAAW,SAAvC,YACKhD,EAAKoR,QACN,cAACxN,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAAC0mB,GAAA,EAAD,CAAgBvmB,MAAO,CAAEpB,QAAS,UAAlC,SACE,eAAC4nB,GAAA,EAAD,CAAOhrB,KAAM,SAAUwE,MAAO,CAAE0F,aAAc,IAA9C,UACE,cAAC,GAAD,CAAage,UAAWA,KAExB,cAACgD,GAAA,EAAD,UACG1qB,EAAKyD,KAAI,SAACknB,GACT,OACE,eAAC/C,GAAA,EAAD,CACEiD,OAAK,EACLC,UAAW,EAEX9mB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACoe,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACGuQ,GAAcwX,EAAIyX,SAErB,cAACta,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SAA2B+nB,EAAIvpB,OAC/B,cAAC0mB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SAA2B+nB,EAAI0X,UAP1B1X,EAAIjW,gBAgBzB,cAAC9Q,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAACa,EAAA,EAAD,CAAQpC,QAAQ,YAAYqC,MAAM,UAAUC,QAASiP,EAArD,uDCxCR,IAAMtH,GAAY9J,aAAW,SAACC,GAAD,MAAY,CACvCyD,KAAM,CACJ4F,OAAQ,UAEV1F,MAAO,CACL8B,MAAO,OACPvF,QAAS,IAEXrD,MAAO,CACLkd,cAAe,IAEjB6lB,WAAY,CACV39B,MAAOjC,EAAMQ,QAAQyN,MAAMrL,MAE7Bi9B,YAAa,CACXp6B,MAAO,YAII,SAASyL,KAAc,IAAD,EAC7B6mB,EAAYvoB,GAAe,MAC3BswB,EAActwB,GAAe,eAC7BooB,EAAapoB,GAAe,cAC5B0mB,EAAarkB,iBAAO,MACpBhF,EAAUyG,cACV1S,EAAUiJ,KAChB,EAA0BgF,mBAAS,IAAnC,oBAAO+nB,EAAP,KAAcmJ,EAAd,KACA,EAAwClxB,mBAAQ,UAAC+nB,EAAM,UAAP,aAAC,EAAU9/B,OAA3D,oBAAOkpC,EAAP,KAAqBC,EAArB,KACA,EAA4CpxB,mBAAS,GAArD,oBAAOqxB,EAAP,KAAuBC,EAAvB,KACA,EAAsDtxB,mBAAS,GAA/D,oBAAOuxB,EAAP,KAA4BC,EAA5B,KACA,EAA4BxxB,qBAA5B,oBAAOiT,EAAP,KAAewe,EAAf,KACA,EAA4CzxB,qBAA5C,oBAAO0xB,EAAP,KAAuBC,EAAvB,KACA,EAAsC3xB,qBAAtC,oBAAOoe,EAAP,KAAoB0Q,EAApB,KACA,EAAsC9uB,mBAAS,IAA/C,oBAAOmoB,EAAP,KAAoBC,EAApB,KACA,EAAwCpoB,mBAAS,IAAjD,oBAAO4xB,EAAP,KAAqBC,EAArB,KACA,EAAsC7xB,oBAAS,GAA/C,oBAAO8xB,EAAP,KAAoBC,EAApB,KACA,GAAgC/xB,mBAAS,IAAzC,sBAAO2e,GAAP,MAAiBC,GAAjB,MACA,GAAwC5e,mBAAS,GAAjD,sBAAO8rB,GAAP,MACA,IADA,MACkC9rB,sBAAlC,sBAAOysB,GAAP,MAAkBuF,GAAlB,MACA,GAAsChyB,oBAAS,GAA/C,sBAAO6nB,GAAP,MAAoBC,GAApB,MACA,GAA8B9nB,qBAA9B,sBAAO4nB,GAAP,MAAgBqK,GAAhB,MACA,GAAgCjyB,mBAAS,CACvCgkB,OAAQ,GACR5G,MAAO,GACPnY,QAAS,KAHX,sBAAO0M,GAAP,MAMMiX,IANN,MAMwB9oB,GAAO,CAC7BZ,OAAQ,MACRC,IAAI,kBAGA+yB,GAAoBpyB,GAAO,CAC/BZ,OAAQ,MACRC,IAAK,WAGDgzB,GAAoBryB,GAAO,CAC/BZ,OAAQ,MACRC,IAAI,oBAGAizB,GAAkBtyB,GAAO,CAC7BZ,OAAQ,OACRC,IAAI,mBAGAkzB,GAAmBvyB,GAAO,CAC9BZ,OAAQ,OACRC,IAAI,WAGAmzB,GAA4BxyB,GAAO,CACvCZ,OAAQ,OACRC,IAAI,YAGAozB,GAAiB,yCAAG,6BAAAp0B,EAAA,sEACHg0B,GAAkB/zB,UADf,OAClB+c,EADkB,OAExByD,GAAYzD,EAAO1sB,MAFK,2CAAH,qDAKjB+jC,GAAgB,yCAAG,iCAAAr0B,EAAA,yDACjB1P,EAAO,CACXgkC,cAAepB,EACfqB,mBAAoBnB,EACpBrI,YACAjW,SACA2U,WACA/3B,KAAMshC,EACN/S,cACA0T,cACArF,cAGGiF,EAbkB,iCAcEW,GAAiBj0B,QAAQ3P,EAAKg+B,WAdhC,cAcrBkG,EAdqB,OAerBlkC,EAAK24B,SAAWuL,EAAexvB,GAfV,SAgBfivB,GAAgBh0B,QAAQ3P,GAhBT,sCAkBrBA,EAAK24B,SAAWsK,EAAevuB,GAlBV,UAmBfivB,GAAgBh0B,QAAQ3P,GAnBT,eAsBjBmkC,EAtBiB,2BAuBlBvL,EAAW/iB,SAvBO,IAwBrBE,KAAM,IAAIsB,KACVmmB,SAAUyF,EAAiBA,EAAevuB,GAAKwvB,EAAexvB,GAC9D6Y,WAAY,SACZ7sB,KAAM,UACNivB,YAAY,gIA5BS,UA8BjBkU,GAA0Bl0B,QAAQw0B,GA9BjB,QA+BvBpT,YAAW,WACTjd,OACC,KAjCoB,4CAAH,qDAoChBswB,GAAU,yCAAG,6BAAA10B,EAAA,sEACU+zB,GAAkB9zB,UAD5B,OACXue,EADW,OAEjBkV,EAAgBlV,EAAaluB,MAFZ,2CAAH,qDAKV+U,GAAW,SAAC4C,EAAGjX,GACnB,IAAMyqB,EAAQ,CACZkZ,OAAQ,WACNxB,EAAkBlrB,EAAEyP,OAAO5tB,QAE7BslC,YAAa,WACXiE,EAAuBprB,EAAEyP,OAAO5tB,QAElCgrB,OAAQ,WACNwe,EAAUrrB,EAAEyP,OAAO5tB,QAErBm2B,YAAa,WACX0Q,EAAe1oB,EAAEyP,OAAO5tB,QAE1B4H,KAAM,WACJuhC,EAAgBhrB,EAAEyP,OAAO5tB,OACzB,IAAM6gC,EAAaf,EAAMr4B,QACvB,SAACC,GAAD,OAAUA,EAAK1H,QAAUme,EAAEyP,OAAO5tB,SAClC,GACF6/B,GAAegB,EAAWlB,UAE5BpO,UAAW,WACTwY,GAAa,2BAAKvF,IAAN,IAAiBjT,UAAWpT,EAAEyP,OAAO5tB,UAEnDwxB,SAAU,WACRuY,GAAa,2BAAKvF,IAAN,IAAiBhT,SAAUrT,EAAEyP,OAAO5tB,UAElDy/B,QAAS,WACPsK,GAAa,2BAAKvF,IAAN,IAAiB/E,QAASthB,EAAEyP,OAAO5tB,UAEjD0lC,UAAW,WACTqE,GAAa,2BAAKvF,IAAN,IAAiBkB,UAAWvnB,EAAEyP,OAAO5tB,UAEnD6jC,WAAY,WACVkG,GAAa,2BAAKvF,IAAN,IAAiBX,WAAY1lB,EAAEyP,OAAO5tB,UAEpD2/B,QAAS,WACPqK,GAAW7rB,EAAEyP,OAAO5tB,SAGxB,GAAI2xB,EAAMzqB,GACR,OAAOyqB,EAAMzqB,MAIXoT,GAAY,WAChBvE,EAAQQ,KAAK,sBAOT6qB,GAAc,yCAAG,6BAAAlrB,EAAA,sEACAyqB,GAAgBxqB,UADhB,OACfC,EADe,OAErB+pB,EAAe/pB,EAAO5P,MAFD,2CAAH,qDAyBpB,OAPA+W,qBAAU,YATO,WACf,IAAM8jB,EAAWtB,KAEdt4B,QAAO,SAACC,GAAD,OAAUA,EAAK1H,QAAU8gC,KAAY,GAC3CO,GACF4H,EAAS5H,EAASnuB,UAKpB43B,GACAR,KACAM,KACAxJ,OACC,IAGD,+BACE,cAACh3B,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGvf,GAAI,GAAIP,UAAWD,EAAQ6C,KAA7C,SACE,eAACkZ,GAAA,EAAD,CAAO9b,UAAWD,EAAQ+C,MAA1B,UACE,cAAC5B,EAAA,EAAD,CACElB,UAAWD,EAAQ/D,MACnB+C,QAAQ,KACRoS,GAAG,aACHpV,UAAU,MAJZ,wDAMakjC,EANb,qEAQA,eAAC5+B,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAzB,UACE,cAACtE,EAAA,EAAD,CAAM1C,MAAI,EAAC4C,GAAI,EAAGD,GAAI,GAAtB,SACE,cAACmR,GAAA,EAAD,CACE8Y,QAAM,EACNr0B,MAAM,0DACND,MAAOopC,EACP7tB,SAAU,SAAC4C,GAAD,OAAO5C,GAAS4C,EAAG,WAC7BrV,QAAQ,WACRnB,KAAK,QACL+T,WAAS,EACT1V,KAAK,QARP,SAUGk6B,EAAYj2B,KAAI,SAAC1C,GAAD,OACf,cAACqX,GAAA,EAAD,CAA6B5e,MAAOuH,EAAOvH,MAA3C,SACGuH,EAAOtH,OADKsH,EAAOvH,cAM5B,cAACoK,EAAA,EAAD,CAAM1C,MAAI,EAAC4C,GAAI,EAAGD,GAAI,GAAtB,SACE,cAACmR,GAAA,EAAD,CACE8Y,QAAM,EACNr0B,MAAM,0DACND,MAAOspC,EACP/tB,SAAU,SAAC4C,GAAD,OAAO5C,GAAS4C,EAAG,gBAC7BrV,QAAQ,WACRnB,KAAK,QACL+T,WAAS,EACT1V,KAAK,QARP,SAUGk6B,EAAYj2B,KAAI,SAAC1C,GAAD,OACf,cAACqX,GAAA,EAAD,CAA6B5e,MAAOuH,EAAOvH,MAA3C,SACGuH,EAAOtH,OADKsH,EAAOvH,cAO5B,cAACoK,EAAA,EAAD,CAAM1C,MAAI,EAAC4C,GAAI,EAAGD,GAAI,GAAtB,SACE,cAACmR,GAAA,EAAD,CACE8Y,QAAM,EACNr0B,MAAM,2BACND,MAAOkpC,EACP3tB,SAAU,SAAC4C,GAAD,OAAO5C,GAAS4C,EAAG,SAC7BrV,QAAQ,WACRnB,KAAK,OACL+T,WAAS,EACT1V,KAAK,QARP,SAUG85B,EAAM71B,KAAI,SAAC1C,GAAD,OACT,cAACqX,GAAA,EAAD,CAA6B5e,MAAOuH,EAAOvH,MAA3C,SACGuH,EAAOtH,OADKsH,EAAOvH,cAO5B,cAACoK,EAAA,EAAD,CAAM1C,MAAI,EAAC4C,GAAI,EAAGD,GAAI,GAAtB,SACE,cAACmR,GAAA,EAAD,CACEtU,KAAK,SACL4B,QAAQ,WACR7I,MAAM,iCACN0H,KAAM,SACN4T,SAAU,SAAC4C,GAAD,OAAO5C,GAAS4C,EAAG,WAC7Bne,MAAOgrB,EACPtP,WAAS,EACT1V,KAAK,YAGR45B,IACC,cAACx1B,EAAA,EAAD,CAAM1C,MAAI,EAAC4C,GAAI,EAAGD,GAAI,GAAtB,SACE,cAACmR,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,uEACN0H,KAAM,UACN4T,SAAU,SAAC4C,GAAD,OAAO5C,GAAS4C,EAAG,YAC7Bne,MAAO2/B,GACPjkB,WAAS,EACT1V,KAAK,QACLkB,KAAK,aAIX,cAACkD,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAACmR,GAAA,EAAD,CACEya,WAAS,EACTntB,QAAQ,WACR7I,MAAM,6CACN0H,KAAM,cACN4T,SAAU,SAAC4C,GAAD,OAAO5C,GAAS4C,EAAG,gBAC7Bne,MAAOm2B,EACPza,WAAS,EACT1V,KAAK,YAGT,eAACoE,EAAA,EAAD,CACE1C,MAAI,EACJ4C,GAAI,EACJD,GAAI,GACJG,MAAO,CACLlB,QAAS,OACTE,WAAY,SACZgJ,aAAc,IAPlB,UAUE,cAACsoB,GAAA,EAAD,CACE5f,GAAG,iBACHK,SApJS,SAAC4C,EAAGne,GACzB0pC,EAAkB1pC,IAoJNiU,QAAS01B,EACT5O,eAAgB,SAACxzB,GAAD,gBACXA,EAAOgqB,UADI,YACShqB,EAAOiqB,WAEhC9V,WAAS,EACT1V,KAAK,QACLg1B,YAAa,SAAC3iB,GAAD,OACX,cAACmD,GAAA,EAAD,2BACMnD,GADN,IAEEpY,MAAM,4EACN6I,QAAQ,iBAId,cAAC4U,GAAA,EAAD,CACEvS,MAAM,UACNX,MAAO,CAAEkF,YAAa,IACtBtE,QA7JM,WAClB0+B,GAAgBD,IAyJN,SAKE,mBAAG9/B,UAAU,uBAAb,SACG8/B,EAAc,QAAU,gBAKjC,cAACpoB,GAAA,EAAD,CAAUtX,GAAI0/B,EAAd,SACE,eAACz/B,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAzB,UACE,cAACtE,EAAA,EAAD,CAAM1C,MAAI,EAAC4C,GAAI,EAAGD,GAAI,GAAtB,SACE,cAACmR,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,0DACNsb,SAAU,SAAC4C,GAAD,OAAO5C,GAAS4C,EAAG,cAC7Bne,MAAK,OAAEwkC,SAAF,IAAEA,QAAF,EAAEA,GAAWjT,UAClB7V,WAAS,EACT1V,KAAK,YAGT,cAACoE,EAAA,EAAD,CAAM1C,MAAI,EAAC4C,GAAI,EAAGD,GAAI,GAAtB,SACE,cAACmR,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,2GACNsb,SAAU,SAAC4C,GAAD,OAAO5C,GAAS4C,EAAG,aAC7Bne,MAAK,OAAEwkC,SAAF,IAAEA,QAAF,EAAEA,GAAWhT,SAClB9V,WAAS,EACT1V,KAAK,YAIT,cAACoE,EAAA,EAAD,CAAM1C,MAAI,EAAC4C,GAAI,EAAGD,GAAI,GAAtB,SACE,cAACmR,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,oDACNsb,SAAU,SAAC4C,GAAD,OAAO5C,GAAS4C,EAAG,YAC7Bne,MAAK,OAAEwkC,SAAF,IAAEA,QAAF,EAAEA,GAAW/E,QAClB/jB,WAAS,EACT1V,KAAK,YAIT,cAACoE,EAAA,EAAD,CAAM1C,MAAI,EAAC4C,GAAI,EAAGD,GAAI,GAAtB,SACE,cAACmR,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,2BACNsb,SAAU,SAAC4C,GAAD,OAAO5C,GAAS4C,EAAG,cAC7Bne,MAAK,OAAEwkC,SAAF,IAAEA,QAAF,EAAEA,GAAWkB,UAClBhqB,WAAS,EACT1V,KAAK,YAIT,cAACoE,EAAA,EAAD,CAAM1C,MAAI,EAAC4C,GAAI,EAAGD,GAAI,GAAtB,WACKqsB,GAAS9e,QAAUisB,IACpB,cAACroB,GAAA,EAAD,CACE8Y,QAAM,EACNr0B,MAAM,oDACND,MAAO6jC,GACPtoB,SAAU,SAAC4C,GAAD,OAAO5C,GAAS4C,EAAG,eAC7BrV,QAAQ,WACR4S,WAAS,EACT1V,KAAK,QAPP,SASG0wB,GAASzsB,KAAI,SAAC1C,GAAD,OACZ,cAACqX,GAAA,EAAD,CAA6B5e,MAAOuH,EAAOvH,MAA3C,SACGuH,EAAOtH,OADKsH,EAAOvH,cAQ9B,cAAC,GAAD,CACEkH,KAAM,UACNguB,cAAexL,GACf2T,IAAK+B,SAKX,eAACh1B,EAAA,EAAD,CACE1C,MAAI,EACJ2C,GAAI,GACJG,MAAO,CACLlB,QAAS,OACTC,eAAgB,gBAChB6H,UAAW,IANf,UASE,cAAClG,EAAA,EAAD,CACEpC,QAAQ,YACRqC,MAAM,UACNC,QAASm/B,GAHX,4CAOA,cAACr/B,EAAA,EAAD,CAAQpC,QAAQ,YAAYqC,MAAM,YAAYC,QAASkP,GAAvD,4DCncZ,IA0Ce2Z,GA1CA,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUwC,EAAe,EAAfA,SAC1B,EAAoC3e,mBAAS,CAAE2e,SAAU,KAAzD,oBAAOvC,EAAP,KAAmBC,EAAnB,KAaA,OACE,eAAChqB,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAGlF,WAAW,SAASgB,MAAO,CAAEpB,QAAS,IAAlE,UACE,cAACgB,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAACmR,GAAA,EAAD,CACE8Y,QAAM,EACNr0B,MAAM,oDACNsb,SAjBa,SAACjT,GAEpB8rB,EAAc,2BAAKD,GAAN,IAAkBuC,SAAUpuB,EAAMslB,OAAO5tB,UAgBhDA,MAAOm0B,EAAWuC,SAClB5tB,QAAQ,WACR4S,WAAS,EACT1V,KAAK,QAPP,SASG0wB,EAASzsB,KAAI,SAAC1C,GAAD,OACZ,cAACqX,GAAA,EAAD,CAA6B5e,MAAOuH,EAAOvH,MAA3C,SACGuH,EAAOtH,OADKsH,EAAOvH,cAM5B,cAACoK,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAACa,EAAA,EAAD,CAAQpC,QAAQ,YAAYqC,MAAM,UAAUC,QA1BjC,WACS,oBAAb8oB,GACTA,EAASC,IAwBP,8CAIF,cAACxV,GAAA,EAAD,CAASnU,MAAO,CAAEmE,MAAO,cCdzBuf,GAAY,CAChB,CACEhT,GAAI,OACJjb,MAAO,+CAET,CACEib,GAAI,WACJjb,MAAO,qDAGT,CACEib,GAAI,cACJjb,MAAO,kEAET,CAAEib,GAAI,OAAQjb,MAAO,kEAErB,CAAEib,GAAI,WAGO,SAAS6U,KACtB,IAAMjmB,EAAUd,KAChB,EAA0B+O,mBAAS,OAAnC,oBAAOsM,EAAP,KAAc2L,EAAd,KACA,EAA8BjY,mBAAS,QAAvC,oBAAOiW,EAAP,KAAgBiC,EAAhB,KACA,EAA4BlY,qBAA5B,oBAAO1H,EAAP,KAAe6f,EAAf,KACA,EAAwBnY,mBAAS,GAAjC,oBAAOiX,EAAP,KAAamB,EAAb,KACA,EAAgCpY,mBAAS,KAAzC,oBAAOqY,EAAP,KACA,GADA,KACwBrY,mBAAS,KAAjC,oBAAOuY,EAAP,KAAaC,EAAb,KACA,EAA0BxY,mBAAS,GAAnC,oBAAc0Y,GAAd,WACA,EAAgC1Y,mBAAS,IAAzC,oBAAO2e,EAAP,KAAiBC,EAAjB,KACA,EAA4B5e,qBAA5B,oBAAOtQ,EAAP,KAAe8sB,EAAf,KACMxe,EAAUyG,cAqBVuuB,EAAoBlzB,GAAO,CAC/BZ,OAAQ,MACRC,IAAKud,mBAAmB,WAAD,OACVrc,GAA2B,CACpC4W,OACA3K,QACA2J,UACAoC,WACA/f,SACA5I,eAKAujC,EAAqBnzB,GAAO,CAChCZ,OAAQ,MACRC,IAAI,qBAGAyZ,EAAmB9Y,GAAO,CAC9BZ,OAAQ,SACRC,IAAI,YAuHA0Z,GApHkB/Y,GAAO,CAC7BZ,OAAQ,OACRC,IAAI,mBAGmBW,GAAO,CAC9BZ,OAAQ,OACRC,IAAI,WA6GO,yCAAG,6BAAAhB,EAAA,sEACY60B,EAAkB50B,UAD9B,OACR4qB,EADQ,OAEdxQ,EAAQwQ,EAAYv6B,MACpBiqB,EAASsQ,EAAYvQ,OAHP,2CAAH,sDAMPya,EAAW,yCAAG,6BAAA/0B,EAAA,sEACS80B,EAAmB70B,UAD5B,OACZ+0B,EADY,OAElBvU,EAAYuU,EAAa1kC,MAFP,2CAAH,qDAcjB,OATA+W,qBAAU,WACRqT,IACAqa,MACC,CAACjc,EAAM3K,EAAO+L,EAAU/f,EAAQ5I,IAEnC8V,qBAAU,WACR0tB,MACC,IAGD,mCACGjxB,GAAcpa,EAAS0D,gBAAgBgB,eACtC,cAACwsB,GAAA,EAAD,CAAOjlB,UAAU,OAAO1B,IAAI,EAA5B,SACE,8BACG4gC,EAAkB/yB,QACjB,cAAC,GAAD,CAAe6X,UAAW3B,KAE1B,qBAAKnkB,UAAWD,EAAQ6C,KAAxB,SACE,eAACkZ,GAAA,EAAD,CAAO9b,UAAWD,EAAQ+C,MAA1B,UACE,cAAC,GAAD,CACE9G,MAAM,iEACNgnB,MACE/S,GAAcpa,EAAS0D,gBAAgBiB,eAjL7C,WACZwR,EAAQQ,KAAK,wBAmLGyW,gBACE,cAAC,GAAD,CACEkH,SA1CL,SAAC1tB,GAChB+tB,EAAU,aAAD,OAAc/tB,EAAKkwB,SAAnB,OA0CWA,SAAUA,IAGdzJ,aApJD,SAACjtB,GAChBkwB,EAAUlwB,GACVmwB,EAAQ,IAmJQ9C,cAAehd,IAEjB,cAAC0gB,GAAA,EAAD,CAAgBvmB,MAAO,CAAEpB,QAAS,UAAlC,SACE,eAAC4nB,GAAA,EAAD,CACEjnB,UAAWD,EAAQ6lB,MACnB3pB,KAAM,SACNwE,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CACEpG,QAASA,EACTua,MAAOA,EACP2J,QAASA,EACTC,cAtNI,SAAC3lB,EAAOqmB,GAEhCqB,EADchC,IAAYW,GAAsB,QAAVtK,EACrB,OAAS,OAC1B4L,EAAWtB,IAoNSsC,SAAUX,EAAK1Y,OACfsW,UAAWA,KAEb,eAACgD,GAAA,EAAD,WACGZ,EAAKrmB,KAAI,SAACknB,GACT,OACE,eAAC/C,GAAA,EAAD,CACEiD,OAAK,EACLC,UAAW,EAEX9mB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACoe,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SAA2B+nB,EAAIxpB,OAC/B,cAAC2mB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAIsQ,WAAWC,KAAK,OAGvB,cAACpT,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAIga,cAEP,cAAC7c,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAIyQ,WAGP,cAACtT,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACE,cAAC8iB,GAAD,CACEjY,QAAS,CACP,CAAEiH,GAAI,SAAUnV,MAAO,qDAEvB,CACEmV,GAAI,WACJnV,MAAO,0FAET,CACEmV,GAAI,OACJnV,MAAO,uCACP0mB,QAASzS,GACPpa,EAAS0D,gBAAgBiB,eAG7B,CACE2W,GAAI,SACJnV,MAAO,qBACP0mB,QAASzS,GACPpa,EAAS0D,gBAAgBkB,kBAI/B2nB,YAAa,SAACjlB,GAAD,OAtLxB,SAACiqB,EAAKjqB,GACzB,IAAQgU,EAAOiW,EAAPjW,GACFyW,EAAQ,CACZC,KAAM,WACJ7b,EAAQQ,KAAR,iCAAuC2E,KAEzC2W,OAAQ,WACNC,EAAmB,CACjB5rB,SAAS,EACTH,MAAO,4KACPK,SAAS,WAAD,8BAAE,uBAAA8P,EAAA,sEACFya,EAAiBxa,QAAQ,KAAM+E,GAD7B,OAERqV,EAAQD,EAAK7oB,QAAO,SAACC,GAAD,OAAUA,EAAKwT,KAAOA,MAC1C4W,EAAmB,CAAEnqB,KAAM,WAHnB,2CAAF,kDAAC,GAKTA,KAAM,SACN3B,KAAM,IACNC,oBAAoB,KAGxB+kB,OAAQ,WACN8G,EAAmB,CACjB/rB,MAAO,gGACPD,UACE,cAAC,GAAD,CACEuU,SAAU,WACRyX,EAAmB,CAAEnqB,KAAM,YAE7BnB,KAAM2qB,EAAIkV,SAGd1+B,KAAM,SACN3B,KAAM,IACNE,SAAS,EACTD,oBAAoB,KAGxB6uB,YAAa,aAEbsW,SAAU,WACRr1B,EAAQQ,KAAR,mCAC8B2E,EAD9B,wBACgDiW,EAAIxpB,KADpD,uBACuEwpB,EAAI2P,eA4B3EnP,EAAMzqB,IACRyqB,EAAMzqB,KAiHwB6qB,CAAaZ,EAAKjqB,UAxCnBiqB,EAAIjW,QA+CboV,EAAK1Y,SAAWmzB,EAAkB/yB,SAClC,cAACoW,GAAA,EAAD,CAAU5jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACihB,GAAA,EAAD,CACE0D,QAAS,EACTxnB,MAAO,CAAE+jB,UAAW,UAFtB,SAIE,cAACtjB,EAAA,EAAD,CAAYnC,QAAQ,KAApB,0L,kCC5IfmsB,GA7LC,SAAC,GAAmD,IAAjD5a,EAAgD,EAAhDA,SAAUC,EAAsC,EAAtCA,UAAW4a,EAA2B,EAA3BA,cAAe4K,EAAY,EAAZA,MACrD,EAAsC/nB,mBAAS,IAA/C,oBAAOmoB,EAAP,KAAoBC,EAApB,KACA,EAAuCpoB,mBACrCmd,EAAgBA,EAActtB,KAAK5H,MAAQ8/B,EAAM,GAAG9/B,OADtD,oBAAOqrC,EAAP,KAAoBlC,EAApB,KAGA,EAAyCpxB,mBAAS,GAAlD,oBAAOuzB,EAAP,KAAqBjL,EAArB,KACA,EAAsCtoB,qBACpCmd,KAAkBA,EAAcyK,SADlC,oBAAOC,EAAP,KAAoBC,EAApB,KAGA,EAAiDtlB,eAAzCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,OAAQC,EAAvC,EAAuCA,MAEjCgmB,EAAkB9oB,GAAO,CAC7BZ,OAAQ,MACRC,IAAI,iBAGAkqB,EAAc,yCAAG,6BAAAlrB,EAAA,sEACAyqB,EAAgBxqB,UADhB,OACfC,EADe,OAErB+pB,EAAe/pB,EAAO5P,MAFD,2CAAH,qDAqDpB,OARA+W,qBAAU,WACR6jB,MACC,IAEH7jB,qBAAU,WACR5C,EAAMua,KACL,CAACva,EAAOua,IAGT,eAAC9qB,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAzB,UACE,cAACtE,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,mFACN0H,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAOkuB,MAChBntB,WAAYf,EAAOkuB,MAAQluB,EAAOkuB,MAAMvxB,QAAU,GAClDqE,WAAS,EACT1V,KAAK,QACLkB,KAAK,YAIXyU,MAAO,CACLC,SAAUhc,EAASqC,WAAWC,SAC9BuX,IAAK,CACHzZ,MAAO,EACPqX,QAASzX,EAASqC,WAAWK,kBAGjCqF,KAAK,YAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAACmR,GAAA,EAAD,CACE8Y,QAAM,EACNr0B,MAAM,2BACND,MAAOqrC,EACP9vB,SA5Ea,SAAC4C,GACpBgrB,EAAgBhrB,EAAEyP,OAAO5tB,OAEzB,IAAQA,EAAUme,EAAEyP,OAAZ5tB,MAEF6gC,EAAaf,EAAMr4B,QAAO,SAACC,GAAD,OAAUA,EAAK1H,QAAUA,KAAO,GAChE6/B,EAAegB,EAAWlB,SAE1BwJ,EAAgBhrB,EAAEyP,OAAO5tB,QAqEnB8I,QAAQ,WACRnB,KAAK,OACL+T,WAAS,EACT1V,KAAK,QARP,SAUG85B,EAAM71B,KAAI,SAAC1C,GAAD,OACT,cAACqX,GAAA,EAAD,CAA6B5e,MAAOuH,EAAOvH,MAA3C,SACGuH,EAAOtH,OADKsH,EAAOvH,cAM3B4/B,GACC,cAACx1B,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,uEACN0H,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAOilB,QAChBlkB,WAAYf,EAAOilB,QAAUjlB,EAAOilB,QAAQtoB,QAAU,GACtDqE,WAAS,EACT1V,KAAK,QACLkB,KAAK,YAIXyU,MAAO,CACLC,SAAUhc,EAASqC,WAAWC,SAC9BuX,IAAK,CACHzZ,MAAO,EACPqX,QAASzX,EAASqC,WAAWK,kBAGjCqF,KAAK,cAIX,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAACmR,GAAA,EAAD,CACE8Y,QAAM,EACNr0B,MAAM,iCACND,MAAOsrC,EACP/vB,SAjIc,SAAC4C,GACrBkiB,EAAiBliB,EAAEyP,OAAO5tB,QAiIpB8I,QAAQ,WACRnB,KAAK,QACL+T,WAAS,EACT1V,KAAK,QARP,SAUGk6B,EAAYj2B,KAAI,SAAC1C,GAAD,OACf,cAACqX,GAAA,EAAD,CAA6B5e,MAAOuH,EAAOvH,MAA3C,SACGuH,EAAOtH,OADKsH,EAAOvH,cAO5B,eAACoK,EAAA,EAAD,CACE1C,MAAI,EACJ2C,GAAI,GACJG,MAAO,CAAElB,QAAS,OAAQC,eAAgB,iBAH5C,UAKE,cAAC2B,EAAA,EAAD,CACEpC,QAAQ,YACRqC,MAAM,UACNjE,KAAK,SACLkE,QAASqP,GAjIF,SAACjU,GACd,IAAM4vB,EAAQC,eAERr2B,EAAK,2BACNwG,GADM,IAEToB,KARKk4B,EAAMxJ,MAAK,SAAC5uB,GAAD,OAAUA,EAAK1H,QAAUqrC,KASzCxC,MAbK3I,EAAY5J,MAAK,SAAC5uB,GAAD,OAAUA,EAAK1H,QAAUsrC,KAc/CpwB,GAAIga,EAAgBA,EAAcha,GAAKkb,EACvCG,WAAYrB,IAEd7a,EAASra,MAmHL,4CAQA,cAACkL,EAAA,EAAD,CAAQpC,QAAQ,YAAYqC,MAAM,UAAUC,QAASkP,EAArD,yD,UC5JFvH,GAAY9J,aAAW,SAACC,GAAD,MAAY,CACvCyD,KAAM,CACJ4F,OAAQ,UAEV1F,MAAO,CACL8B,MAAO,OACPvF,QAAS,IAEXrD,MAAO,CACLkd,cAAe,IAEjB6lB,WAAY,CACV39B,MAAOjC,EAAMQ,QAAQyN,MAAMrL,MAE7Bi9B,YAAa,CACXp6B,MAAO,YAILuf,GAAY,CAChB,CACEhT,GAAI,SACJjb,MAAO,wCAET,CAAEib,GAAI,OAAQjb,MAAO,4BACrB,CACEib,GAAI,QACJjb,MAAO,kCAGT,CAAEib,GAAI,WAGO,SAASd,KACtB,IAAMtQ,EAAUiJ,KACVgD,EAAUyG,cACVtB,EAAKxC,GAAe,MAC1B,EAA4BX,mBAAS,IAArC,oBAAOmb,EAAP,KAAeC,EAAf,KACA,EAA8Bpb,mBAAS,IAAvC,oBAAOwzB,EAAP,KAAgBC,EAAhB,KACA,EAAgCzzB,mBAAS,IAAzC,oBAAO2e,EAAP,KAAiBC,EAAjB,KACA,EAAwC5e,mBAAS,QAAjD,oBAAOmxB,EAAP,KAAqBC,EAArB,KACA,EAAgDpxB,mBAAS,CAAC,IAA1D,oBAAO0zB,EAAP,KAAyBC,EAAzB,KACA,EAAiDnxB,eAAzCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,OAAQC,EAAvC,EAAuCA,MACjCmlB,EAAQC,KAER4L,EAAoB9zB,GAAO,CAC/BZ,OAAQ,OACRC,IAAI,YAEA00B,EAAqB/zB,GAAO,CAChCZ,OAAQ,MACRC,IAAI,WAAD,OAAagE,KAEZ2wB,EAAuBh0B,GAAO,CAClCZ,OAAQ,MACRC,IAAI,WAAD,OAAagE,KAEZ4wB,EAA4Bj0B,GAAO,CACvCZ,OAAQ,MACRC,IAAI,qBAGA60B,EAAiB,SAACvlC,GACtB,GAAIA,EAAK+vB,SAAU,CACjB,IAAM3P,EAAQ2kB,EAAQ5T,WAAU,SAACjwB,GAAD,OAAUA,EAAKwT,KAAO1U,EAAK0U,MACrD8wB,EAAS,YAAOT,GACtBS,EAAUplB,GAASpgB,EACnBglC,EAAWQ,QAEXR,EAAW,GAAD,mBAAKD,GAAL,CAAc/kC,KAE1BylC,KAGIA,EAAkB,WACtBna,EAAmB,CAAEnqB,KAAM,YAGvBmwB,EAAe,SAACtxB,GACpB,IAAIs5B,EACEuB,EAAWtB,KAEdt4B,QAAO,SAACC,GAAD,OAAUA,EAAK1H,QAAUkpC,KAAc,GAC7C7H,IACFvB,EAAQuB,EAASnuB,UAEnB4e,EAAmB,CACjB/rB,MAAO,mFACPD,UACE,cAAC,GAAD,CACEuU,SAAU0xB,EACVzxB,UAAW2xB,EACX/W,cAAe1uB,EACfs5B,MAAOA,IAGXn4B,KAAM,SACN3B,KAAM,IACNE,SAAS,EACTD,oBAAoB,KAQlBimC,EAAgB,SAACX,GACrB,IAAMY,EAAiB,GAUvB,OATAZ,EAAQthC,KAAI,SAACvC,GACX,IAAM0kC,EAAY,CAChBxD,MAAOlhC,EAAKkhC,MACZrH,QAAS75B,EAAKmhC,MAAM7oC,MACpB4H,KAAMF,EAAKE,KAAK5H,MAChBqsC,QAAS3kC,EAAKi4B,SAEhBwM,EAAe51B,KAAK61B,MAEfD,GAGH9xB,EAAQ,yCAAG,WAAO7T,GAAP,gBAAA0P,EAAA,yDACTE,EADS,2BAEV5P,GAFU,IAGbi7B,WAAYgK,EACZ7J,SAAUsH,EACV7C,OAAQnrB,EAAKqwB,EAAUW,EAAcX,MAEnCrwB,EAPW,gCAQA0wB,EAAmBz1B,QAAQC,GAR3B,+DAUTu1B,EAAkBx1B,QAAQC,GAVjB,OAWfmhB,YAAW,WACTC,MACC,KAbY,2CAAH,sDAgBRA,EAAW,WACfzhB,EAAQQ,KAAK,sBAGTkd,EAAS,yCAAG,6BAAAvd,EAAA,sEACK21B,EAAqB11B,UAD1B,OACV+c,EADU,OAEhBC,EAAUD,EAAO1sB,MACjBklC,EAAoBxY,EAAO1sB,KAAKi7B,YAChC0H,EAAgBjW,EAAO1sB,KAAKo7B,UAC5B4J,EAAWtY,EAAO1sB,KAAK6/B,QALP,2CAAH,qDA0BTiG,EAAkB,yCAAG,6BAAAp2B,EAAA,sEACJ41B,EAA0B31B,UADtB,OACnBC,EADmB,OAEzBugB,EAAYvgB,EAAO5P,MAFM,2CAAH,qDAwBxB,OAXA+W,qBAAU,WACR+uB,IACIpxB,GACFuY,MAED,IAEHlW,qBAAU,WACR5C,EAAMuY,KACL,CAACvY,EAAOuY,IAGT,sBAAM7Y,SAAUI,EAAaJ,GAA7B,SACIwxB,EAAqB7zB,QAwKrB,cAAC,GAAD,IAvKA,cAAC5N,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGvf,GAAI,GAAIP,UAAWD,EAAQ6C,KAA7C,SACE,eAACkZ,GAAA,EAAD,CAAO9b,UAAWD,EAAQ+C,MAA1B,UACE,cAAC5B,EAAA,EAAD,CACElB,UAAWD,EAAQ/D,MACnB+C,QAAQ,KACRoS,GAAG,aACHpV,UAAU,MAJZ,SAMGoV,EAAK,gEAAgB,kEAGxB,cAAC9Q,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAGlF,WAAW,SAAvC,SACE,eAAC,WAAD,WACE,cAACY,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAIN,UAAWD,EAAQ+Y,WAA7C,SACE,cAAC,KAAD,CACErI,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,sBACN0H,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAO/S,KAChB8T,WAAYf,EAAO/S,KAAO+S,EAAO/S,KAAK0P,QAAU,GAChDqE,WAAS,EACT1V,KAAK,WAIX2V,MAAO,CAAEC,SAAUhc,EAASqC,WAAWC,UACvCyF,KAAK,WAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAACmR,GAAA,EAAD,CACEojB,SAAU1jB,EACVoZ,QAAM,EACNr0B,MAAM,0DACND,MAAOkpC,EACP3tB,SA/DG,SAAC4C,GACpBgrB,EAAgBhrB,EAAEyP,OAAO5tB,QA+DT8I,QAAQ,WACRnB,KAAK,WACL+T,WAAS,EACT1V,KAAK,QATP,SAWG85B,EAAM71B,KAAI,SAAC1C,GAAD,OACT,cAACqX,GAAA,EAAD,CAA6B5e,MAAOuH,EAAOvH,MAA3C,SACGuH,EAAOtH,OADKsH,EAAOvH,cAM5B,cAACoK,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,eAACkiC,GAAA,EAAD,CACEvmC,KAAK,QACL8C,QAAQ,WACRiB,UAAWD,EAAQi/B,YAHrB,UAKE,cAACyD,GAAA,EAAD,CAAYC,QAAQ,6BAApB,+DAGA,cAACC,GAAA,EAAD,CACEzsC,MAAM,sDACND,MAAOyrC,EACPlwB,SApFK,SAAC4C,GACxButB,EAAoBvtB,EAAEyP,OAAO5tB,QAgFb,SAKG02B,EAASzsB,KAAI,SAAC1C,GAAD,OACZ,cAACqX,GAAA,EAAD,CAA6B5e,MAAOuH,EAAOvH,MAA3C,SACGuH,EAAOtH,OADKsH,EAAOvH,iBAO9B,cAACoK,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAACa,EAAA,EAAD,CACE0zB,SAAUuC,mBAAQ+H,GAClBpgC,QAAQ,YACRqC,MAAM,UACNC,QA5KE,WAClB0sB,KAuKc,uIASCyT,EAAQ3zB,QACT,cAACxN,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAACwb,GAAA,EAAD,UACE,cAACkL,GAAA,EAAD,CAAgBvmB,MAAO,CAAEpB,QAAS,UAAlC,SACE,eAAC4nB,GAAA,EAAD,CACEjnB,UAAWD,EAAQ6lB,MACnB3pB,KAAM,SACNwE,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CAAage,UAAWA,KAExB,cAACgD,GAAA,EAAD,UACGqa,EAAQthC,KAAI,SAACknB,GACZ,OACE,eAAC/C,GAAA,EAAD,CACEiD,OAAK,EACLC,UAAW,EAEX9mB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACoe,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAIwO,QAAJ,UACMhmB,GACDwX,EAAIyX,OAFT,YAGQjvB,GAAcwX,EAAIwO,UACvBhmB,GAAcwX,EAAIyX,SAGxB,cAACta,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAIvpB,KAAK3H,QAGZ,cAACquB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAI0X,MAAM5oC,QAEb,eAACquB,GAAA,EAAD,CACEllB,QAAQ,OACRoB,MAAO,CAAE+jB,UAAW,QAFtB,UAIE,cAAC7Q,GAAA,EAAD,CACEtS,QAAS,WA1K3C0sB,EA0KkE3G,IADlC,SAGE,cAAC,GAAD,MAGF,cAACzT,GAAA,EAAD,CACEtS,QAAS,kBA7KlB,SAAC8P,GAC1B4W,EAAmB,CACjB5rB,SAAS,EACTH,MAAO,4KACPK,SAAU,WACRolC,EAAWD,EAAQ9jC,QAAO,SAACC,GAAD,OAAUA,EAAKwT,KAAOA,MAChD4W,EAAmB,CAAEnqB,KAAM,YAE7BA,KAAM,SACN3B,KAAM,IACNC,oBAAoB,IAmK2B0mC,CAAmBxb,EAAIjW,KADxC,SAGE,cAAC,GAAD,WA/BCiW,EAAIjW,kBA2C3B,eAAC9Q,EAAA,EAAD,CACE1C,MAAI,EACJ2C,GAAI,GACJG,MAAO,CAAElB,QAAS,OAAQC,eAAgB,iBAH5C,UAKE,cAAC2B,EAAA,EAAD,CAAQpC,QAAQ,YAAYqC,MAAM,UAAUjE,KAAK,SAAjD,4CAGA,cAACgE,EAAA,EAAD,CACEpC,QAAQ,YACRqC,MAAM,YACNC,QAASosB,EAHX,iEC1XHvuB,oBAAW,SAACC,GAAD,MAAY,CACpCyD,KAAM,CACJgC,MAAO,QAET9B,MAAO,CACL8B,MAAO,OACP6D,aAActJ,EAAMwF,QAAQ,IAE9BihB,MAAO,CACL9d,SAAU,SCKRqc,GAAY,CAChB,CACEhT,GAAI,OACJjb,MAAO,+CAET,CAAEib,GAAI,UAAWjb,MAAO,sDAGX,SAASma,GAAT,GAA4C,IAAtBmnB,EAAqB,EAArBA,QAASlnB,EAAY,EAAZA,SAC5C,EAAwBtC,mBAAS,IAAjC,oBAAOvR,EAAP,KAAaomC,EAAb,KACMC,EAAmBh1B,GAAO,CAC9BZ,OAAQ,MACRC,IAAI,iBAAD,OAAmBqqB,KAGlBuL,EAAS,yCAAG,6BAAA52B,EAAA,sEACK22B,EAAiB12B,UADtB,OACVC,EADU,OAEhBw2B,EAAQx2B,EAAO5P,MAFC,2CAAH,qDAQf,OAHA+W,qBAAU,WACRuvB,MACC,IACID,EAAiB70B,QACtB,cAACsa,GAAA,EAAD,CAAkB9nB,MAAO,CAAEG,SAAU,WAAYE,IAAK,GAAIE,KAAM,MAEhE,eAACX,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAGlF,WAAW,SAAvC,YACKhD,EAAKoR,QACN,cAACxN,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAAC0mB,GAAA,EAAD,CAAgBvmB,MAAO,CAAEpB,QAAS,UAAlC,SACE,eAAC4nB,GAAA,EAAD,CAAOhrB,KAAM,SAAUwE,MAAO,CAAE0F,aAAc,IAA9C,UACE,cAAC,GAAD,CAAage,UAAWA,KAExB,cAACgD,GAAA,EAAD,UACG1qB,EAAKyD,KAAI,SAACknB,GACT,OACE,eAAC/C,GAAA,EAAD,CACEiD,OAAK,EACLC,UAAW,EAEX9mB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACoe,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SAA2B+nB,EAAIxpB,OAC/B,cAAC2mB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACE,6BACG+nB,EAAIkV,OAAOp8B,KAAI,SAACvC,GACf,OACE,+BACE,sBAAM8C,MAAO,CAAE+H,OAAQ,gBAAvB,SACGoH,GAAcjS,EAAKkhC,SAGtB,+BAAOlhC,EAAKE,mBAbjBupB,EAAIjW,gBA2BzB,cAAC9Q,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAACa,EAAA,EAAD,CAAQpC,QAAQ,YAAYqC,MAAM,UAAUC,QAASiP,EAArD,uDC3DR,IAAM6T,GAAY,CAChB,CACEhT,GAAI,OACJjb,MAAO,qDAET,CACEib,GAAI,WACJjb,MAAO,oFAET,CAAEib,GAAI,QAASjb,MAAO,4BAEtB,CAAEib,GAAI,WAqNO6U,GAlNE,WACf,IAAMjmB,EAAUd,KAChB,EAA0B+O,mBAAS,OAAnC,oBAAOsM,EAAP,KAAc2L,EAAd,KACA,EAA8BjY,mBAAS,QAAvC,oBAAOiW,EAAP,KAAgBiC,EAAhB,KACA,EAAwBlY,mBAAS,GAAjC,oBAAOiX,EAAP,KAAamB,EAAb,KACA,EAA4BpY,qBAA5B,oBAAO1H,EAAP,KAAe6f,EAAf,KACA,EAAgCnY,mBAASnY,EAASE,iBAAlD,oBAAOswB,EAAP,KAAiBC,EAAjB,KACA,EAAwBtY,mBAAS,IAAjC,oBAAOuY,EAAP,KAAaC,EAAb,KACA,EAA0BxY,mBAAS,GAAnC,oBAAOyY,EAAP,KAAcC,EAAd,KACM1a,EAAUyG,cA0BVmkB,EAAkB9oB,GAAO,CAC7BZ,OAAQ,MACRC,IAAI,SAAD,OAAWkB,GAA2B,CACvC4W,OACA3K,QACA2J,UACAoC,WACA/f,cAIEsgB,EAAmB9Y,GAAO,CAC9BZ,OAAQ,SACRC,IAAI,UA8CA0Z,EAAO,yCAAG,6BAAA1a,EAAA,sEACUyqB,EAAgBxqB,UAD1B,OACR42B,EADQ,OAEdxc,EAAQwc,EAAUvmC,MAClBiqB,EAASsc,EAAUvc,OAHL,2CAAH,qDAUb,OAJAjT,qBAAU,WACRqT,MACC,CAAC5B,EAAM3K,EAAO+L,EAAU/f,IAGzB,mCACG2J,GAAcpa,EAAS0D,gBAAgBmB,aACtC,cAACqsB,GAAA,EAAD,CAAOjlB,UAAU,OAAO1B,IAAI,EAA5B,SACE,8BACGw2B,EAAgB3oB,QACf,cAAC,GAAD,CAAe6X,UAAW3B,KAE1B,qBAAKnkB,UAAWD,EAAQ6C,KAAxB,SACE,eAACkZ,GAAA,EAAD,CAAO9b,UAAWD,EAAQ+C,MAA1B,UACE,cAAC,GAAD,CACE9G,MAAM,uEACNgnB,MACE/S,GAAcpa,EAAS0D,gBAAgBoB,aA3F7C,WACZqR,EAAQQ,KAAK,sBA6FG0W,aA1FD,SAACjtB,GAChBkwB,EAAUlwB,GACVmwB,EAAQ,IAyFQ9C,cAAehd,IAEjB,cAAC0gB,GAAA,EAAD,CAAgBvmB,MAAO,CAAEpB,QAAS,UAAlC,SACE,eAAC4nB,GAAA,EAAD,CACEjnB,UAAWD,EAAQ6lB,MACnB3pB,KAAM,SACNwE,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CACEpG,QAASA,EACTua,MAAOA,EACP2J,QAASA,EACTC,cA1HI,SAAC3lB,EAAOqmB,GAEhCqB,EADchC,IAAYW,GAAsB,QAAVtK,EACrB,OAAS,OAC1B4L,EAAWtB,IAwHSsC,SAAUX,EAAK1Y,OACfsW,UAAWA,KAEb,eAACgD,GAAA,EAAD,WACGZ,EAAKrmB,KAAI,SAACknB,GACT,OACE,eAAC/C,GAAA,EAAD,CACEiD,OAAK,EACLC,UAAW,EAEX9mB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACoe,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SAA2B+nB,EAAIxpB,OAC/B,cAAC2mB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAI6b,gBAEP,cAAC1e,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SAA2B+nB,EAAIO,QAE/B,cAACpD,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACE,cAAC8iB,GAAD,CACEjY,QAAS,CACP,CAAEiH,GAAI,SAAUnV,MAAO,wCACvB,CACEmV,GAAI,OACJnV,MAAO,uCACP0mB,QAASzS,GACPpa,EAAS0D,gBAAgBoB,aAG7B,CACEwW,GAAI,SACJnV,MAAO,qBACP0mB,QAASzS,GACPpa,EAAS0D,gBAAgBqB,gBAI/BwnB,YAAa,SAACjlB,GAAD,OAxHxB,SAACiqB,EAAKjqB,GACzB,IAAMyqB,EAAQ,CACZ3G,OAAQ,WACN8G,EAAmB,CACjB/rB,MAAO,gGACPD,UACE,cAAC,GAAD,CACEuU,SAAU,WACRyX,EAAmB,CAAEnqB,KAAM,YAE7B45B,QAASpQ,EAAIjW,KAGjBvT,KAAM,SACN3B,KAAM,IACNE,SAAS,EACTD,oBAAoB,KAIxB2rB,KAAM,WACJ7b,EAAQQ,KAAR,+BAAqC4a,EAAIjW,MAE3C2W,OAAQ,WACNC,EAAmB,CACjB5rB,SAAS,EACTH,MAAO,4KACPK,SAAS,WAAD,8BAAE,uBAAA8P,EAAA,sEACFya,EAAiBxa,QAAQ,KAAMgb,EAAIjW,IADjC,OAERqV,EAAQD,EAAK7oB,QAAO,SAACC,GAAD,OAAUA,EAAKwT,KAAOiW,EAAIjW,OAC9C4W,EAAmB,CAAEnqB,KAAM,WAHnB,2CAAF,kDAAC,GAKTA,KAAM,SACN3B,KAAM,IACNC,oBAAoB,MAItB0rB,EAAMzqB,IACRyqB,EAAMzqB,KAkFwB6qB,CAAaZ,EAAKjqB,UA7BnBiqB,EAAIjW,QAoCboV,EAAK1Y,SAAW+oB,EAAgB3oB,SAChC,cAACoW,GAAA,EAAD,CAAU5jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACihB,GAAA,EAAD,CACE0D,QAAS,EACTxnB,MAAO,CAAE+jB,UAAW,UAFtB,SAIE,cAACtjB,EAAA,EAAD,CAAYnC,QAAQ,KAApB,+KASZ,cAAC,GAAD,CACEgmB,MAAO0B,EACP3B,iBAnLO,SAACvmB,EAAO2pB,GAC/B9B,EAAQ8B,IAmLQlD,wBAhLc,SAACzmB,GAC/B+nB,EAAY6B,SAAS5pB,EAAMslB,OAAO5tB,MAAOJ,EAASE,kBAClDqwB,EAAQ,IA+KQnB,KAAMA,EACNC,YAAamB,gBC5N3Brd,GAAY9J,aAAW,SAACC,GAAD,MAAY,CACvCyD,KAAM,CACJ4F,OAAQ,UAEV1F,MAAO,CACL8B,MAAO,OACPvF,QAAS,IAEXrD,MAAO,CACLkd,cAAe,QAIJ,SAAS7I,KACtB,IAAMtQ,EAAUiJ,KACVgD,EAAUyG,cACVtB,EAAKxC,GAAe,MAC1B,EAA4BX,mBAAS,IAArC,oBAAOmb,EAAP,KAAeC,EAAf,KACA,EAAiD5Y,eAAzCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,OAAQC,EAAvC,EAAuCA,MACvC,EAAgC5C,mBAAS,IAAzC,oBAAO2e,EAAP,KAAiBC,EAAjB,KACA,EAA0C5e,mBAAS,GAAnD,oBAAOi1B,EAAP,KAAsBC,EAAtB,KAEMC,EAAkBr1B,GAAO,CAC7BZ,OAAQ,OACRC,IAAI,UAEAi2B,EAAmBt1B,GAAO,CAC9BZ,OAAQ,MACRC,IAAI,SAAD,OAAWgE,KAEVkyB,EAAqBv1B,GAAO,CAChCZ,OAAQ,MACRC,IAAI,SAAD,OAAWgE,KAEVmyB,EAAuBx1B,GAAO,CAClCZ,OAAQ,MACRC,IAAI,mBAGAmD,EAAQ,yCAAG,WAAO7T,GAAP,gBAAA0P,EAAA,yDACTlW,EADS,2BACIwG,GADJ,IACU8mC,gBAAiBN,KAEtC9xB,EAHW,gCAIAiyB,EAAiBh3B,QAAQnW,GAJzB,+DAMTktC,EAAgB/2B,QAAQnW,GANf,OAOfu3B,YAAW,WACTC,MACC,KATY,2CAAH,sDAYRA,EAAW,WACfzhB,EAAQQ,KAAK,oBAGTkd,EAAS,yCAAG,6BAAAvd,EAAA,sEACKk3B,EAAmBj3B,UADxB,OACV+c,EADU,OAEhBC,EAAUD,EAAO1sB,MACjBymC,EAAiB/Z,EAAO1sB,KAAKwmC,eAHb,2CAAH,qDAMTO,EAAgB,yCAAG,6BAAAr3B,EAAA,sEACFm3B,EAAqBl3B,UADnB,OACjB+c,EADiB,OAEvByD,EAAYzD,EAAO1sB,MAFI,2CAAH,qDAoBtB,OAXA+W,qBAAU,WACRgwB,IACIryB,GACFuY,MAED,IAEHlW,qBAAU,WACR5C,EAAMuY,KACL,CAACvY,EAAOuY,IAGT,sBAAM7Y,SAAUI,EAAaJ,GAA7B,SACI+yB,EAAmBp1B,QA8HnB,cAAC,GAAD,IA7HA,cAAC5N,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGvf,GAAI,GAAIP,UAAWD,EAAQ6C,KAA7C,SACE,eAACkZ,GAAA,EAAD,CAAO9b,UAAWD,EAAQ+C,MAA1B,UACE,cAAC5B,EAAA,EAAD,CACElB,UAAWD,EAAQ/D,MACnB+C,QAAQ,KACRoS,GAAG,aACHpV,UAAU,MAJZ,SAMGoV,EAAK,sEAAiB,wEAGzB,cAAC9Q,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAzB,SACE,eAAC,WAAD,WACE,cAACtE,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,qBACN0H,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAO/S,KAChB8T,WAAYf,EAAO/S,KAAO+S,EAAO/S,KAAK0P,QAAU,GAChDqE,WAAS,EACT1V,KAAK,WAIX2V,MAAO,CAAEC,SAAUhc,EAASqC,WAAWC,UACvCyF,KAAK,WAIT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,WACKqsB,EAAS9e,QAAUo1B,GACpB,cAACxxB,GAAA,EAAD,CACE8Y,QAAM,EACNr0B,MAAM,oDACND,MAAOgtC,EACPzxB,SA5DK,SAAC4C,GACxB8uB,EAAiB9uB,EAAEyP,OAAO5tB,QA4DR8I,QAAQ,WACRqO,QAASuD,EAAOsyB,cAChBvxB,WACEf,EAAOsyB,cAAgBtyB,EAAOsyB,cAAc31B,QAAU,GAExDqE,WAAS,EACT1V,KAAK,QAXP,SAaG0wB,EAASzsB,KAAI,SAAC1C,GAAD,OACZ,cAACqX,GAAA,EAAD,CAA6B5e,MAAOuH,EAAOvH,MAA3C,SACGuH,EAAOtH,OADKsH,EAAOvH,cAQ9B,cAACoK,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,2BACN0H,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAOgX,MAChBjW,WAAYf,EAAOgX,MAAQhX,EAAOgX,MAAMra,QAAU,GAClDqE,WAAS,EACT1V,KAAK,WAIX2B,KAAK,YAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,2BACN0H,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAOkZ,QAChBnY,WACEf,EAAOkZ,QAAUlZ,EAAOkZ,QAAQvc,QAAU,GAE5CqE,WAAS,EACT1V,KAAK,WAIX2B,KAAK,cAGT,eAACyC,EAAA,EAAD,CACE1C,MAAI,EACJ2C,GAAI,GACJG,MAAO,CAAElB,QAAS,OAAQC,eAAgB,iBAH5C,UAKE,cAAC2B,EAAA,EAAD,CAAQpC,QAAQ,YAAYqC,MAAM,UAAUjE,KAAK,SAAjD,4CAGA,cAACgE,EAAA,EAAD,CACEpC,QAAQ,YACRqC,MAAM,YACNC,QAASosB,EAHX,iECnNHvuB,oBAAW,SAACC,GAAD,MAAY,CACpCyD,KAAM,CACJgC,MAAO,QAET9B,MAAO,CACL8B,MAAO,OACP6D,aAActJ,EAAMwF,QAAQ,IAE9BihB,MAAO,CACL9d,SAAU,SCPC,SAASuI,GAAT,GAAsD,IAAhCywB,EAA+B,EAA/BA,OAAQxwB,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,UACrD,EAA4BvC,mBAAS,IAArC,oBAAOgkB,EAAP,KAAeC,EAAf,KACA,EAAsDjkB,mBAAS,GAA/D,oBAAOuxB,EAAP,KAA4BC,EAA5B,KACA,EAA4BxxB,qBAA5B,oBAAOiT,EAAP,KAAewe,EAAf,KAEMpN,EAAiBvkB,GAAO,CAC5BZ,OAAQ,MACRC,IAAI,oBAWAqE,EAAW,SAAC4C,EAAGjX,GACN,gBAATA,EACFqiC,EAAuBprB,EAAEyP,OAAO5tB,OAEhCwpC,EAAUrrB,EAAEyP,OAAO5tB,QAIjBq8B,EAAS,yCAAG,+BAAAnmB,EAAA,sEACKkmB,EAAejmB,UADpB,OACVC,EADU,OAEVo3B,EAAgBp3B,EAAO5P,KAAKiB,QAAO,SAACC,GAAD,OAAUA,EAAK1H,QAAU6qC,KAClE7O,EAAUwR,GAHM,2CAAH,qDAUf,OAJAjwB,qBAAU,WACR8e,MACC,IAGD,+BACE,eAACjyB,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAzB,UACE,cAACtE,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAACmR,GAAA,EAAD,CACE8Y,QAAM,EACNr0B,MAAM,0DACNsb,SAAU,SAAC4C,GAAD,OAAO5C,EAAS4C,EAAG,gBAC7Bne,MAAOspC,EACPxgC,QAAQ,WACR4S,WAAS,EACT1V,KAAK,QACL2B,KAAK,OARP,SAUGo0B,EAAO9xB,KAAI,SAAC1C,GAAD,OACV,cAACqX,GAAA,EAAD,CAA6B5e,MAAOuH,EAAOvH,MAA3C,SACGuH,EAAOtH,OADKsH,EAAOvH,cAM5B,cAACoK,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAACmR,GAAA,EAAD,CACEtU,KAAK,SACL4B,QAAQ,WACR7I,MAAM,2BACN0H,KAAM,SACN4T,SAAU,SAAC4C,GAAD,OAAO5C,EAAS4C,EAAG,WAC7Bne,MAAOgrB,EACPtP,WAAS,EACT1V,KAAK,YAGT,eAACoE,EAAA,EAAD,CACE1C,MAAI,EACJ2C,GAAI,GACJG,MAAO,CAAElB,QAAS,OAAQC,eAAgB,iBAH5C,UAKE,cAAC2B,EAAA,EAAD,CAAQpC,QAAQ,YAAYqC,MAAM,UAAUC,QAhErC,WACbiP,EAAS,CACPozB,SAAU5C,EACV6C,cAAepE,EACfte,YA4DI,4CAGA,cAAC9f,EAAA,EAAD,CAAQpC,QAAQ,YAAYqC,MAAM,YAAYC,QAASkP,EAAvD,0DCrDV,IAAM4T,GAAY,CAChB,CACEhT,GAAI,OACJjb,MAAO,qDAET,CACEib,GAAI,OACJjb,MAAO,sBAET,CACEib,GAAI,OACJjb,MAAO,4BAET,CAAEib,GAAI,SAAUjb,MAAO,wCAEvB,CAAEib,GAAI,WAqPO6U,GAlPE,WACf,IAAMjmB,EAAUd,KAChB,EAA0B+O,mBAAS,OAAnC,oBAAOsM,EAAP,KAAc2L,EAAd,KACA,EAA8BjY,mBAAS,QAAvC,oBAAOiW,EAAP,KAAgBiC,EAAhB,KACA,EAA4BlY,qBAA5B,oBAAO1H,EAAP,KAAe6f,EAAf,KACA,EAAwBnY,mBAAS,GAAjC,oBAAOiX,EAAP,KAAamB,EAAb,KACA,EAAgCpY,mBAASnY,EAASE,iBAAlD,oBAAOswB,EAAP,KAAiBC,EAAjB,KACA,EAAwBtY,mBAAS,IAAjC,oBAAOuY,EAAP,KAAaC,EAAb,KACA,EAA0BxY,mBAAS,GAAnC,oBAAOyY,EAAP,KAAcC,EAAd,KACM1a,EAAUyG,cA0BV4f,EAAiBvkB,GAAO,CAC5BZ,OAAQ,MACRC,IAAI,YAAD,OAAckB,GAA2B,CAC1C4W,OACA3K,QACA2J,UACAoC,WACA/f,cAIEs9B,EAAoB91B,GAAO,CAC/BZ,OAAQ,SACRC,IAAI,aAGA02B,EAAmB/1B,GAAO,CAC9BZ,OAAQ,OACRC,IAAK,sBAGD22B,EAAoB,WACxB/b,EAAmB,CAAEnqB,KAAM,cAGvB4iC,EAAgB,yCAAG,WAAO/jC,GAAP,UAAA0P,EAAA,sEACjB03B,EAAiBz3B,QAAQ3P,GADR,OAEvBoqB,IACAid,IAHuB,2CAAH,sDAkDhBjd,EAAO,yCAAG,6BAAA1a,EAAA,sEACSkmB,EAAejmB,UADxB,OACRswB,EADQ,OAEdlW,EAAQkW,EAASjgC,MACjBiqB,EAASgW,EAASjW,OAHJ,2CAAH,qDAUb,OAJAjT,qBAAU,WACRqT,MACC,CAAC5B,EAAM3K,EAAOhU,EAAQ+f,IAGvB,mCACGpW,GAAcpa,EAAS0D,gBAAgBwqC,iBACtC,cAAChd,GAAA,EAAD,CAAOjlB,UAAU,OAAO1B,IAAI,EAA5B,SACE,8BACGiyB,EAAepkB,QACd,cAAC,GAAD,CAAe6X,UAAW3B,KAE1B,qBAAKnkB,UAAWD,EAAQ6C,KAAxB,SACE,eAACkZ,GAAA,EAAD,CAAO9b,UAAWD,EAAQ+C,MAA1B,UACE,cAAC,GAAD,CACE9G,MAAM,uEACNgnB,MACE/S,GAAcpa,EAAS0D,gBAAgB8B,iBA3G7C,WACZ2Q,EAAQQ,KAAK,qBA6GG0W,aA1GD,SAACjtB,GAChBkwB,EAAUlwB,GACVmwB,EAAQ,IAyGQ9C,cAAehd,IAEjB,cAAC0gB,GAAA,EAAD,CAAgBvmB,MAAO,CAAEpB,QAAS,UAAlC,SACE,eAAC4nB,GAAA,EAAD,CACEjnB,UAAWD,EAAQ6lB,MACnB3pB,KAAM,SACNwE,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CACEpG,QAASA,EACTua,MAAOA,EACP2J,QAASA,EACTC,cA1II,SAAC3lB,EAAOqmB,GAEhCqB,EADchC,IAAYW,GAAsB,QAAVtK,EACrB,OAAS,OAC1B4L,EAAWtB,IAwISsC,SAAUX,EAAK1Y,OACfsW,UAAWA,KAEb,eAACgD,GAAA,EAAD,WACGZ,EAAKrmB,KAAI,SAACknB,GACT,OACE,eAAC/C,GAAA,EAAD,CACEiD,OAAK,EACLC,UAAW,EAEX9mB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACoe,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SAA2B+nB,EAAIxpB,OAC/B,cAAC2mB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACgB,SAAb+nB,EAAIjqB,KAAkB,2BAAS,mCAElC,cAAConB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAIkE,MACH,qBACE7qB,MAAO,CAAEmE,MAAO,GAAItB,OAAQ,IAC5BwoB,IAAK1E,EAAIkE,KAAK1tB,KACdguB,IAAG,UAAK/1B,EAASC,YAAd,YAA6BsxB,EAAIkE,KAAKO,UAI/C,cAACtH,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACGuQ,GACCpP,OAAO4mB,EAAInG,QAAQmN,oBAIvB,cAAC7J,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACE,cAAC8iB,GAAD,CACEjY,QAAS,CACP,CAAEiH,GAAI,cAAenV,MAAO,wCAC5B,CAAEmV,GAAI,WAAYnV,MAAO,wCACzB,CACEmV,GAAI,OACJnV,MAAO,uCACP0mB,QAASzS,GACPpa,EAAS0D,gBAAgB8B,iBAG7B,CACE8V,GAAI,SACJnV,MAAO,qBACP0mB,QAASzS,GACPpa,EAAS0D,gBACN+B,oBAIT8mB,YAAa,SAACjlB,GAAD,OAxIxB,SAACiqB,EAAKjqB,GACzB,IAAMyqB,EAAQ,CACZmD,YAAa,WACX/e,EAAQQ,KAAR,uCAA6C4a,EAAIjW,MAEnD0W,KAAM,WACJ7b,EAAQQ,KAAR,8BAAoC4a,EAAIjW,MAE1C2W,OAAQ,WACNC,EAAmB,CACjB5rB,SAAS,EACTH,MAAO,4KACPK,SAAS,WAAD,8BAAE,uBAAA8P,EAAA,sEACFy3B,EAAkBx3B,QAAQ,KAAMgb,EAAIjW,IADlC,OAERqV,EAAQD,EAAK7oB,QAAO,SAACC,GAAD,OAAUA,EAAKwT,KAAOiW,EAAIjW,OAC9C4W,EAAmB,CAAEnqB,KAAM,WAHnB,2CAAF,kDAAC,GAKTA,KAAM,SACN3B,KAAM,IACNC,oBAAoB,KAGxBmlC,SAAU,WACRtZ,EAAmB,CACjB/rB,MAAO,sGACPD,UACE,cAAC,GAAD,CACEuU,SAAUkwB,EACVjwB,UAAWuzB,EACXhD,OAAQ1Z,EAAIjW,KAGhBvT,KAAM,WACN3B,KAAM,IACNE,SAAS,EACTD,oBAAoB,MAItB0rB,EAAMzqB,IACRyqB,EAAMzqB,KAiGwB6qB,CAAaZ,EAAKjqB,UA5CnBiqB,EAAIjW,QAmDboV,EAAK1Y,SAAWwkB,EAAepkB,SAC/B,cAACoW,GAAA,EAAD,CAAU5jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACihB,GAAA,EAAD,CACE0D,QAAS,EACTxnB,MAAO,CAAE+jB,UAAW,UAFtB,SAIE,cAACtjB,EAAA,EAAD,CAAYnC,QAAQ,KAApB,+KASZ,cAAC,GAAD,CACEgmB,MAAO0B,EACP3B,iBAlNO,SAACvmB,EAAO2pB,GAC/B9B,EAAQ8B,IAkNQlD,wBA/Mc,SAACzmB,GAC/B+nB,EAAY6B,SAAS5pB,EAAMslB,OAAO5tB,MAAOJ,EAASE,kBAClDqwB,EAAQ,IA8MQnB,KAAMA,EACNC,YAAamB,gBChQ3Brd,GAAY9J,aAAW,SAACC,GAAD,MAAY,CACvCyD,KAAM,CACJ4F,OAAQ,UAEV1F,MAAO,CACL8B,MAAO,OACPvF,QAAS,IAEXrD,MAAO,CACLkd,cAAe,IAEjB6Q,WAAY,CACVxqB,QAAS,OACTE,WAAY,SACZJ,QAAS,OAIE,SAASgR,GAAT,GAAwC,IAAlB8a,EAAiB,EAAjBA,cAC7BprB,EAAUiJ,KACVgD,EAAUyG,cACVtB,EAAKxC,GAAe,MAC1B,EAA4BX,mBAAS,IAArC,oBAAOmb,EAAP,KAAeC,EAAf,KACA,EAA0Bpb,mBAAS,IAAnC,oBAAOod,EAAP,KAAcC,EAAd,KACA,EAAwChhB,IAAM2D,SAAS,QAAvD,oBAAO+vB,EAAP,KAAqBC,EAArB,KACA,EAAwChwB,oBACzB,OAAbmd,QAAa,IAAbA,OAAA,EAAAA,EAAeG,KAAKr1B,QAAS,GAD/B,oBAAOs1B,EAAP,KAAqBC,EAArB,KAGA,EAAiDhb,eAAzCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,OAAQC,EAAvC,EAAuCA,MAEjCqtB,EAAiBnwB,GAAO,CAC5BZ,OAAQ,OACRC,IAAI,aAEA+wB,EAAkBpwB,GAAO,CAC7BZ,OAAQ,MACRC,IAAI,YAAD,OAAcgE,KAEbgtB,EAAoBrwB,GAAO,CAC/BZ,OAAQ,MACRC,IAAI,YAAD,OAAcgE,KAEbsa,EAAiB3d,GAAO,CAC5BZ,OAAQ,MACRC,IAAI,SAOAmD,EAAQ,yCAAG,WAAO7T,GAAP,UAAA0P,EAAA,0DACXgF,EADW,gCAEP+sB,EAAgB9xB,QAAQ3P,GAFjB,6CAIPwhC,EAAe7xB,QAAQ3P,GAJhB,OAMf+wB,YAAW,WACTC,MACC,KARY,2CAAH,sDAWRA,EAAW,WACfzhB,EAAQQ,KAAK,mBAGTkd,EAAS,yCAAG,6BAAAvd,EAAA,sEACKgyB,EAAkB/xB,UADvB,OACV+c,EADU,OAEhBC,EAAUD,EAAO1sB,MACjB+uB,EAAgBrC,EAAO1sB,KAAK6wB,QAC5B0Q,EAAgB7U,EAAO1sB,KAAKU,MAJZ,2CAAH,qDAWTuuB,EAAQ,yCAAG,6BAAAvf,EAAA,sEACMsf,EAAerf,UADrB,OACTC,EADS,OAEfgf,EAAShf,EAAO5P,MAFD,2CAAH,qDA4Bd,OAXA+W,qBAAU,WACJrC,GACFuY,IAEFgC,MACC,IAEHlY,qBAAU,WACR5C,EAAMuY,KACL,CAACvY,EAAOuY,IAGT,sBAAM7Y,SAAUI,GAxBH,SAACjU,GACd,IAAMxG,EAAK,2BACNwG,GADM,IAETU,KAAM4gC,EACNvR,WAAYrB,IAEO,SAAjB4S,IACF9nC,EAAMq3B,OAAS/B,GAEjBjb,EAASra,MAeT,SACIkoC,EAAkBlwB,QA+PlB,cAAC,GAAD,IA9PA,cAAC5N,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGvf,GAAI,GAAIP,UAAWD,EAAQ6C,KAA7C,SACE,eAACkZ,GAAA,EAAD,CAAO9b,UAAWD,EAAQ+C,MAA1B,UACE,cAAC5B,EAAA,EAAD,CACElB,UAAWD,EAAQ/D,MACnB+C,QAAQ,KACRoS,GAAG,aACHpV,UAAU,MAJZ,SAMGoV,EAAK,sEAAiB,wEAGzB,cAAC9Q,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAzB,SACE,eAAC,WAAD,WACE,cAACtE,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,GAAIxf,GAAI,GAAvB,SACE,eAAC0vB,GAAA,EAAD,CACE,aAAW,SACXpyB,KAAK,UACL3H,MAAO8nC,EACPvsB,SA/EO,SAACjT,GACxBy/B,EAAgBz/B,EAAMslB,OAAO5tB,QA+EbwK,MAAO,CACLlB,QAAS,OACT4H,cAAe,MACf3H,eAAgB,gBARpB,UAWE,cAACqpB,GAAA,EAAD,CACEgM,WAAY1jB,EACZlb,MAAM,OACNwa,QAAS,cAACwf,GAAA,EAAD,IACT/5B,MAAM,6BAER,cAAC2yB,GAAA,EAAD,CACEgM,WAAY1jB,EACZlb,MAAM,OACNwa,QAAS,cAACwf,GAAA,EAAD,IACT/5B,MAAM,wCAIZ,cAACmK,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,qBACN0H,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAO/S,KAChB8T,WAAYf,EAAO/S,KAAO+S,EAAO/S,KAAK0P,QAAU,GAChDqE,WAAS,EACT1V,KAAK,WAIX2V,MAAO,CAAEC,SAAUhc,EAASqC,WAAWC,UACvCyF,KAAK,WAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACEojB,WAAY1jB,EACZpS,QAAQ,WACR7I,MAAM,wCACNiH,KAAK,SACLS,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAOsQ,OAChBvP,WACEf,EAAOsQ,OAAStQ,EAAOsQ,OAAO3T,QAAU,GAE1CqE,WAAS,EACT1V,KAAK,WAIX2V,MAAO,CAAEC,SAAUhc,EAASqC,WAAWC,UACvCyF,KAAK,aAGS,SAAjBmgC,GACC,qCACE,cAAC19B,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAACmR,GAAA,EAAD,CACE8Y,QAAM,EACNr0B,MAAM,2BACNsb,SAhID,SAAC4C,GACpBoX,EAAgBpX,EAAEyP,OAAO5tB,QAgILA,MAAOs1B,EACPxsB,QAAQ,WACR4S,WAAS,EACT1V,KAAK,QACL2B,KAAK,OACL+tB,YAAa,CACX5rB,QAAS,CACPwqB,OAAQxqB,EAAQgqB,aAXtB,SAeGqB,EAAMlrB,KAAI,SAAC1C,GAAD,OACT,eAACqX,GAAA,EAAD,CAA6B5e,MAAOuH,EAAOvH,MAA3C,UACE,qBACE21B,IAAG,UAAK/1B,EAASC,YAAd,YAA6B0H,EAAOquB,MACvCC,IAAKtuB,EAAOtH,MACZuK,MAAO,CACLmE,MAAO,GACPtB,OAAQ,GACR3C,aAAc,MACdkD,WAAY,MAGfrG,EAAOtH,QAXKsH,EAAOvH,cAgB5B,cAACoK,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACEE,WAAS,EACT1b,MAAOA,EACPgG,KAAK,QACL2B,KAAMA,EACN1H,MAAM,0DACN6I,QAAQ,WACRyS,SAAUA,EACVpE,QAASuD,EAAOob,kBAChBra,WACEf,EAAOob,kBACHpb,EAAOob,kBAAkBze,QACzB,MAKZsE,MAAO,CACLE,UAAW,CACT7b,MAAO,GACPqX,QAASzX,EAASqC,WAAWI,aAE/BsxB,UAAW,CACT3zB,MAAO,GACPqX,QAASzX,EAASqC,WAAWI,cAGjCsF,KAAK,wBAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACEE,WAAS,EACT1b,MAAOA,EACPgG,KAAK,QACL2B,KAAMA,EACN1H,MAAM,0DACN6I,QAAQ,WACRyS,SAAUA,EACVpE,QAASuD,EAAOqb,cAChBta,WACEf,EAAOqb,cACHrb,EAAOqb,cAAc1e,QACrB,MAKZ1P,KAAK,oBAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACEE,WAAS,EACT1b,MAAOA,EACPgG,KAAK,QACL2B,KAAMA,EACN1H,MAAM,oDACN6I,QAAQ,WACRyS,SAAUA,EACVpE,QAASuD,EAAOsb,aAChBva,WACEf,EAAOsb,aACHtb,EAAOsb,aAAa3e,QACpB,MAKZ1P,KAAK,sBAKb,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACEya,WAAS,EACTntB,QAAQ,WACR7I,MAAM,6CACN0H,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAOyb,YAChB1a,WACEf,EAAOyb,YAAczb,EAAOyb,YAAY9e,QAAU,GAEpDqE,WAAS,EACT1V,KAAK,WAIX2B,KAAK,kBAGT,eAACyC,EAAA,EAAD,CACE1C,MAAI,EACJ2C,GAAI,GACJG,MAAO,CAAElB,QAAS,OAAQC,eAAgB,iBAH5C,UAKE,cAAC2B,EAAA,EAAD,CAAQpC,QAAQ,YAAYqC,MAAM,UAAUjE,KAAK,SAAjD,4CAGA,cAACgE,EAAA,EAAD,CACEpC,QAAQ,YACRqC,MAAM,YACNC,QAASosB,EAHX,iEC/WHvuB,oBAAW,SAACC,GAAD,MAAY,CACpCyD,KAAM,CACJgC,MAAO,QAET9B,MAAO,CACL8B,MAAO,OACP6D,aAActJ,EAAMwF,QAAQ,IAE9BihB,MAAO,CACL9d,SAAU,KAEZgiB,OAAQ,CACN1oB,MAAO,QAGT2oB,WAAY,CACVxqB,QAAS,OACTE,WAAY,cC2DDyqB,GA1EA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChB,EAAoCnc,qBAApC,oBAAOoc,EAAP,KAAmBC,EAAnB,KACA,EAAgCrc,mBAAS,IAAzC,oBAAO2e,EAAP,KAAiBC,EAAjB,KACA,EAA4C5e,mBAAS,GAArD,oBAAOg2B,EAAP,KAAuBC,EAAvB,KAEMC,EAAwBp2B,GAAO,CACnCZ,OAAQ,MACRC,IAAI,oBAOAozB,EAAiB,yCAAG,6BAAAp0B,EAAA,sEACH+3B,EAAsB93B,UADnB,OAClB+c,EADkB,OAExByD,EAAYzD,EAAO1sB,MAFK,2CAAH,qDAmBvB,OAJA+W,qBAAU,WACR+sB,MACC,IAGD,eAAClgC,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAGlF,WAAW,SAASgB,MAAO,CAAEpB,QAAS,IAAlE,UACE,cAACgB,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAACmR,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,qBACNsb,SA7BuB,SAACjT,GAC9B8rB,EAAc9rB,EAAMslB,OAAO5tB,QA6BrBA,MAAOm0B,EACPzY,WAAS,EACT1V,KAAK,YAGT,cAACoE,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,WACKqsB,EAAS9e,QAAUm2B,GACpB,cAACvyB,GAAA,EAAD,CACE8Y,QAAM,EACNr0B,MAAM,oDACND,MAAO+tC,EACPxyB,SAhCe,SAAC4C,GACxB6vB,EAAkB7vB,EAAEyP,OAAO5tB,QAgCnB8I,QAAQ,WACR4S,WAAS,EACT1V,KAAK,QAPP,SASG0wB,EAASzsB,KAAI,SAAC1C,GAAD,OACZ,cAACqX,GAAA,EAAD,CAA6B5e,MAAOuH,EAAOvH,MAA3C,SACGuH,EAAOtH,OADKsH,EAAOvH,cAQ9B,cAACoK,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAACa,EAAA,EAAD,CAAQpC,QAAQ,YAAYqC,MAAM,UAAUC,QA3CjC,WACS,oBAAb8oB,GACTA,EAAS,SAAD,OAAUC,EAAV,qBAAiC4Z,EAAjC,QAyCN,8CAIF,cAACpvB,GAAA,EAAD,CAASnU,MAAO,CAAEmE,MAAO,cC9CzBuf,GAAY,CAChB,CACEhT,GAAI,YACJjb,MAAO,sBAET,CAAEib,GAAI,WAAYjb,MAAO,uEACzB,CACEib,GAAI,YACJjb,MAAO,sBAET,CACEib,GAAI,SACJjb,MAAO,wCAET,CAAEib,GAAI,MAAOjb,MAAO,kCACpB,CAAEib,GAAI,QAASjb,MAAO,4BAEtB,CAAEib,GAAI,WAGO,SAAS6U,KACtB,IAAMjmB,EAAUd,KAChB,EAA0B+O,mBAAS,OAAnC,oBAAOsM,EAAP,KAAc2L,EAAd,KACA,EAA4BjY,qBAA5B,oBAAO1H,EAAP,KAAe6f,EAAf,KACA,EAA4BnY,qBAA5B,oBAAOtQ,EAAP,KAAe8sB,EAAf,KACA,EAA8Bxc,mBAAS,aAAvC,oBAAOiW,EAAP,KAAgBiC,EAAhB,KACA,EAAwBlY,mBAAS,GAAjC,oBAAOiX,EAAP,KAAamB,EAAb,KACA,EAAgCpY,mBAASnY,EAASE,iBAAlD,oBAAOswB,EAAP,KAAiBC,EAAjB,KACA,EAAwBtY,mBAAS,IAAjC,oBAAOuY,EAAP,KAAaC,EAAb,KACMxa,EAAUyG,cAChB,EAA0BzE,mBAAS,GAAnC,oBAAOyY,EAAP,KAAcC,EAAd,KAqBM8O,EAAmB1nB,GAAO,CAC9BZ,OAAQ,MACRC,IAAKud,mBAAmB,UAAD,OACXrc,GAA2B,CACnC4W,OACA3K,QACA2J,UACAoC,WACA/f,SACA5I,eAKAkpB,EAAmB9Y,GAAO,CAC9BZ,OAAQ,SACRC,IAAI,WAyCA0Z,EAAO,yCAAG,6BAAA1a,EAAA,sEACWqpB,EAAiBppB,UAD5B,OACRqpB,EADQ,OAEdjP,EAAQiP,EAAWh5B,MACnBiqB,EAAS+O,EAAWhP,OAHN,2CAAH,qDAUb,OAJAjT,qBAAU,WACRqT,MACC,CAAC5B,EAAM3K,EAAOhU,EAAQ+f,EAAU3oB,IAGjC,mCACGuS,GAAcpa,EAAS0D,gBAAgBU,cACtC,cAAC8sB,GAAA,EAAD,CAAOjlB,UAAU,OAAO1B,IAAI,EAA5B,SACE,8BACGo1B,EAAiBvnB,QAChB,cAAC,GAAD,CAAe6X,UAAW3B,KAE1B,qBAAKnkB,UAAWD,EAAQ6C,KAAxB,SACE,eAACkZ,GAAA,EAAD,CAAO9b,UAAWD,EAAQ+C,MAA1B,UACE,cAAC,GAAD,CACE9G,MAAM,4EACNgnB,MACE/S,GAAcpa,EAAS0D,gBAAgBW,cApF7C,WACZ8R,EAAQQ,KAAK,uBAsFGyW,gBAAiB,cAAC,GAAD,CAAiBkH,SA/BnC,SAAC1tB,GAChB+tB,EAAU/tB,GACV2pB,EAAQ,MA8BQlD,aArCD,SAACjtB,GAChBkwB,EAAUlwB,GACVmwB,EAAQ,IAoCQ9C,cAAehd,IAEjB,cAAC0gB,GAAA,EAAD,CAAgBvmB,MAAO,CAAEpB,QAAS,UAAlC,SACE,eAAC4nB,GAAA,EAAD,CACEjnB,UAAWD,EAAQ6lB,MACnB3pB,KAAM,SACNwE,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CACEpG,QAASA,EACTua,MAAOA,EACP2J,QAASA,EACTC,cApHI,SAAC3lB,EAAOqmB,GAEhCqB,EADchC,IAAYW,GAAsB,QAAVtK,EACrB,OAAS,OAC1B4L,EAAWtB,IAkHSsC,SAAUX,EAAK1Y,OACfsW,UAAWA,KAGb,eAACgD,GAAA,EAAD,WACGZ,EAAKrmB,KAAI,SAACknB,GACT,OACE,eAAC/C,GAAA,EAAD,CACEiD,OAAK,EACLC,UAAW,EAEX9mB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACoe,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAII,YAEP,cAACjD,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAIK,WAEP,cAAClD,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAIuF,SAAS/uB,OAEhB,cAAC2mB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACGuQ,GAAcpP,OAAO4mB,EAAIM,WAG5B,cAACnD,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAIsO,UAEP,cAACnR,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAIuU,YAEP,cAACpX,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACE,cAAC8iB,GAAD,CACEjY,QAAS,CACP,CAAEiH,GAAI,cAAenV,MAAO,qDAC5B,CACEmV,GAAI,OACJnV,MAAO,uCACP0mB,QAASzS,GACPpa,EAAS0D,gBAAgBW,cAG7B,CACEiX,GAAI,SACJnV,MAAO,qBACP0mB,QAASzS,GACPpa,EAAS0D,gBAAgBY,iBAI/BioB,YAAa,SAACjlB,GAAD,OAlIxB,SAACgU,EAAIhU,GACxB,IAAMyqB,EAAQ,CACZC,KAAM,WACJ7b,EAAQQ,KAAR,gCAAsC2E,KAExC2W,OAAQ,WACNC,EAAmB,CACjB5rB,SAAS,EACTH,MAAO,4KACPK,SAAS,WAAD,8BAAE,uBAAA8P,EAAA,sEACFya,EAAiBxa,QAAQ,KAAM+E,GAD7B,OAERqV,EAAQD,EAAK7oB,QAAO,SAACC,GAAD,OAAUA,EAAKwT,KAAOA,MAC1C4W,EAAmB,CAAEnqB,KAAM,WAHnB,2CAAF,kDAAC,GAKTA,KAAM,SACN3B,KAAM,IACNC,oBAAoB,KAGxB6uB,YAAa,WACX/e,EAAQQ,KAAR,qCAA2C2E,EAA3C,qBAGAyW,EAAMzqB,IACRyqB,EAAMzqB,KA2GwB6qB,CAAaZ,EAAIjW,GAAIhU,UA1CtBiqB,EAAIjW,QAiDboV,EAAK1Y,SAAW2nB,EAAiBvnB,SACjC,cAACoW,GAAA,EAAD,CAAU5jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACihB,GAAA,EAAD,CACE0D,QAAS,EACTxnB,MAAO,CAAE+jB,UAAW,UAFtB,SAIE,cAACtjB,EAAA,EAAD,CAAYnC,QAAQ,KAApB,+KASZ,cAAC,GAAD,CACEgmB,MAAO0B,EACP3B,iBA3LO,SAACvmB,EAAO2pB,GAC/B9B,EAAQ8B,IA2LQlD,wBAxLc,SAACzmB,GAC/B+nB,EAAY6B,SAAS5pB,EAAMslB,OAAO5tB,MAAOJ,EAASE,kBAClDqwB,EAAQ,IAuLQnB,KAAMA,EACNC,YAAamB,eCxPjC,IA8Me6E,GA9MC,SAAC,GAA4C,IAA1C5a,EAAyC,EAAzCA,SAAUC,EAA+B,EAA/BA,UAAW4a,EAAoB,EAApBA,cACtC,EAA0Bnd,mBAAS,IAAnC,oBAAOod,EAAP,KAAcC,EAAd,KACA,EAAwCrd,oBACzB,OAAbmd,QAAa,IAAbA,OAAA,EAAAA,EAAeG,KAAKr1B,QAAS,GAD/B,oBAAOs1B,EAAP,KAAqBC,EAArB,KAGA,EAAiDhb,eAAzCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,OAAQC,EAAvC,EAAuCA,MACjC7Q,EAAUd,KAEVwsB,EAAiB3d,GAAO,CAC5BZ,OAAQ,MACRC,IAAI,SAGAue,EAAQ,yCAAG,6BAAAvf,EAAA,sEACMsf,EAAerf,UADrB,OACTC,EADS,OAEfgf,EAAShf,EAAO5P,MAFD,2CAAH,qDAgCd,OARA+W,qBAAU,WACRkY,MACC,IAEHlY,qBAAU,WACR5C,EAAMua,KACL,CAACva,EAAOua,IAGT,eAAC9qB,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAzB,UACE,cAACtE,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAACmR,GAAA,EAAD,CACE8Y,QAAM,EACNr0B,MAAM,2BACNsb,SAlBa,SAAC4C,GACpBoX,EAAgBpX,EAAEyP,OAAO5tB,QAkBnBA,MAAOs1B,EACPxsB,QAAQ,WACR4S,WAAS,EACT1V,KAAK,QACL2B,KAAK,OACL+tB,YAAa,CACX5rB,QAAS,CACPwqB,OAAQxqB,EAAQgqB,aAXtB,SAeGqB,EAAMlrB,KAAI,SAAC1C,GAAD,OACT,eAACqX,GAAA,EAAD,CAA6B5e,MAAOuH,EAAOvH,MAA3C,UACE,qBACE21B,IAAG,UAAK/1B,EAASC,YAAd,YAA6B0H,EAAOquB,MACvCC,IAAKtuB,EAAOtH,MACZuK,MAAO,CACLmE,MAAO,GACPtB,OAAQ,GACR3C,aAAc,MACdkD,WAAY,MAGfrG,EAAOtH,QAXKsH,EAAOvH,cAgB5B,cAACoK,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACEE,WAAS,EACT1b,MAAOA,EACPgG,KAAK,QACL2B,KAAMA,EACN1H,MAAM,0DACN6I,QAAQ,WACRyS,SAAUA,EACVpE,QAASuD,EAAOob,kBAChBra,WACEf,EAAOob,kBACHpb,EAAOob,kBAAkBze,QACzB,MAKZsE,MAAO,CACLE,UAAW,CACT7b,MAAO,GACPqX,QAASzX,EAASqC,WAAWI,aAE/BsxB,UAAW,CACT3zB,MAAO,GACPqX,QAASzX,EAASqC,WAAWI,cAGjCsF,KAAK,wBAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACEE,WAAS,EACT1b,MAAOA,EACPgG,KAAK,QACL2B,KAAMA,EACN1H,MAAM,0DACN6I,QAAQ,WACRyS,SAAUA,EACVpE,QAASuD,EAAOqb,cAChBta,WACEf,EAAOqb,cAAgBrb,EAAOqb,cAAc1e,QAAU,MAK9D1P,KAAK,oBAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACEE,WAAS,EACT1b,MAAOA,EACPgG,KAAK,QACL2B,KAAMA,EACN1H,MAAM,oDACN6I,QAAQ,WACRyS,SAAUA,EACVpE,QAASuD,EAAOsb,aAChBva,WACEf,EAAOsb,aAAetb,EAAOsb,aAAa3e,QAAU,MAK5D1P,KAAK,mBAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACEvb,MAAM,6CACNg2B,WAAS,EACTC,KAAM,EACNptB,QAAQ,WACRnB,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACP0b,WAAS,EACTvE,QAASuD,EAAOyb,YAChB1a,WACEf,EAAOyb,YAAczb,EAAOyb,YAAY9e,QAAU,MAK1D1P,KAAK,kBAGT,eAACyC,EAAA,EAAD,CACE1C,MAAI,EACJ2C,GAAI,GACJG,MAAO,CAAElB,QAAS,OAAQC,eAAgB,iBAH5C,UAKE,cAAC2B,EAAA,EAAD,CACEpC,QAAQ,YACRqC,MAAM,UACNjE,KAAK,SACLkE,QAASqP,GA5KF,SAACjU,GACd,IAAM4vB,EAAQC,eACRr2B,EAAK,2BACNwG,GADM,IAET6uB,KAPKF,EAAMmB,MAAK,SAAC5uB,GAAD,OAAUA,EAAK1H,QAAUs1B,KAQzCpa,GAAIga,EAAgBA,EAAcha,GAAKkb,EACvCG,WAAYrB,IAEd7a,EAASra,MAgKL,4CAQA,cAACkL,EAAA,EAAD,CAAQpC,QAAQ,YAAYqC,MAAM,UAAUC,QAASkP,EAArD,yDCnLFvH,GAAY9J,aAAW,SAACC,GAAD,MAAY,CACvCyD,KAAM,CACJ4F,OAAQ,UAEV1F,MAAO,CACL8B,MAAO,OACPvF,QAAS,IAEXrD,MAAO,CACLkd,cAAe,QAIbiL,GAAY,CAChB,CACEhT,GAAI,OACJjb,MAAO,+CAET,CAAEib,GAAI,gBAAiBjb,MAAO,4DAC9B,CACEib,GAAI,aACJjb,MAAO,2DAGT,CAAEib,GAAI,WAGO,SAASd,KACtB,IAAMtQ,EAAUiJ,KACVgD,EAAUyG,cACVtB,EAAKxC,GAAe,MAC1B,EAA4BX,mBAAS,IAArC,oBAAOmb,EAAP,KAAeC,EAAf,KACA,EAAgCpb,mBAAS,IAAzC,oBAAOye,EAAP,KAAiBC,EAAjB,KACA,EAAgC1e,mBAAS,IAAzC,oBAAO2e,EAAP,KAAiBC,EAAjB,KACA,EAA4C5e,mBAAS,GAArD,oBAAOg2B,EAAP,KAAuBC,EAAvB,KACA,EAAiDzzB,eAAzCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,OAAQC,EAAvC,EAAuCA,MAEjCyvB,EAAmBvyB,GAAO,CAC9BZ,OAAQ,OACRC,IAAI,WAEAg3B,EAAoBr2B,GAAO,CAC/BZ,OAAQ,MACRC,IAAI,UAAD,OAAYgE,KAEXizB,EAAsBt2B,GAAO,CACjCZ,OAAQ,MACRC,IAAI,UAAD,OAAYgE,KAGX+yB,EAAwBp2B,GAAO,CACnCZ,OAAQ,MACRC,IAAI,oBAGAggB,EAAuBrf,GAAO,CAClCZ,OAAQ,SACRC,IAAI,YAGAmD,EAAQ,yCAAG,WAAO7T,GAAP,kBAAA0P,EAAA,yDACTihB,EAAc,GACpBX,EAASvsB,KAAI,SAACvC,GACZ,IAAM0vB,EAAU,CACdC,OAAQ3vB,EAAK2tB,KAAKr1B,OAAS0H,EAAK2tB,KAAKna,GACrC4a,kBAAmBpuB,EAAKouB,kBACxBC,cAAeruB,EAAKquB,cACpBC,aAActuB,EAAKsuB,aACnBG,YAAazuB,EAAKyuB,YAClBjb,GAAIxT,EAAKwT,GAAGzC,WAAWN,SAAS,KAAO,KAAOzQ,EAAKwT,IAErDic,EAAY5gB,KAAK6gB,MAGbE,EAdS,2BAeV9wB,GAfU,IAgBbgwB,SAAUW,EACV0M,WAAYkK,KAEV7yB,EAnBW,gCAoBAgzB,EAAkB/3B,QAAQmhB,GApB1B,+DAsBT8S,EAAiBj0B,QAAQmhB,GAtBhB,OAuBfC,YAAW,WACTC,MACC,KAzBY,4CAAH,sDA4BRA,EAAW,WACfzhB,EAAQQ,KAAK,qBAGTkd,EAAS,yCAAG,+BAAAvd,EAAA,sEACKi4B,EAAoBh4B,UADzB,OACV+c,EADU,OAEhBC,EAAUD,EAAO1sB,MACjBwnC,EAAkB9a,EAAO1sB,KAAKunC,gBAC9BtX,GAAY,UAAAvD,EAAO1sB,YAAP,eAAagwB,WAAY,IAJrB,2CAAH,qDAOT8T,EAAiB,yCAAG,6BAAAp0B,EAAA,sEACH+3B,EAAsB93B,UADnB,OAClB+c,EADkB,OAExByD,EAAYzD,EAAO1sB,MAFK,2CAAH,qDAKjBkxB,EAAkB,SAAClxB,GACvB,GAAIA,EAAK+vB,SAAU,CACjB,IAAM3P,EAAQ4P,EAASmB,WAAU,SAACjwB,GAAD,OAAUA,EAAKwT,KAAO1U,EAAK0U,MACtD0c,EAAW,YAAOpB,GACxBoB,EAAYhR,GAASpgB,EACrBiwB,EAAYmB,QAEZnB,EAAY,GAAD,mBAAKD,GAAL,CAAehwB,KAE5BqxB,KAGIA,EAAmB,WACvB/F,EAAmB,CAAEnqB,KAAM,aAGvBmwB,EAAe,SAACtxB,GACpBsrB,EAAmB,CACjB/rB,MAAO,2DACPD,UACE,cAAC,GAAD,CACEuU,SAAUqd,EACVpd,UAAWud,EACX3C,cAAe1uB,IAGnBmB,KAAM,UACN3B,KAAM,IACNE,SAAS,EACTD,oBAAoB,KA4CxB,OAXAsX,qBAAU,WACR+sB,IACIpvB,GACFuY,MAED,IAEHlW,qBAAU,WACR5C,EAAMuY,KACL,CAACvY,EAAOuY,IAGT,mCACE,sBAAM7Y,SAAUI,EAAaJ,GAA7B,SACI8zB,EAAoBn2B,QAgXpB,cAAC,GAAD,IA/WA,cAAC5N,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGvf,GAAI,GAAIP,UAAWD,EAAQ6C,KAA7C,SACE,eAACkZ,GAAA,EAAD,CAAO9b,UAAWD,EAAQ+C,MAA1B,UACE,cAAC5B,EAAA,EAAD,CACElB,UAAWD,EAAQ/D,MACnB+C,QAAQ,KACRoS,GAAG,aACHpV,UAAU,MAJZ,SAMGoV,EAAK,4EAAkB,8EAG1B,cAAC9Q,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAzB,SACE,eAAC,WAAD,WACE,cAACtE,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,qBACN0H,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAO6W,UAChB9V,WACEf,EAAO6W,UAAY7W,EAAO6W,UAAUla,QAAU,GAEhDqE,WAAS,EACT1V,KAAK,WAIX2V,MAAO,CAAEC,SAAUhc,EAASqC,WAAWC,UACvCyF,KAAK,gBAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,sEACN0H,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAO8W,SAChB/V,WACEf,EAAO8W,SAAW9W,EAAO8W,SAASna,QAAU,GAE9CqE,WAAS,EACT1V,KAAK,WAIX2V,MAAO,CAAEC,SAAUhc,EAASqC,WAAWC,UACvCyF,KAAK,eAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,2BACN0H,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAOgX,MAChBjW,WACEf,EAAOgX,MAAQhX,EAAOgX,MAAMra,QAAU,GAExCqE,WAAS,EACT1V,KAAK,WAIX2B,KAAK,YAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,uCACN0H,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAO+W,OAChBhW,WACEf,EAAO+W,OAAS/W,EAAO+W,OAAOpa,QAAU,GAE1CqE,WAAS,EACT1V,KAAK,WAIX2V,MAAO,CACLE,UAAW,CACT7b,MAAO,GACPqX,QAASzX,EAASqC,WAAWE,eAE/BwxB,UAAW,CACT3zB,MAAO,GACPqX,QAASzX,EAASqC,WAAWE,gBAGjCwF,KAAK,aAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACEtU,KAAK,SACL4B,QAAQ,WACR7I,MAAM,iEACN0H,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAOma,iBAChBpZ,WACEf,EAAOma,iBACHna,EAAOma,iBAAiBxd,QACxB,GAENqE,WAAS,EACT1V,KAAK,WAIX2B,KAAK,uBAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,WACKqsB,EAAS9e,QAAUm2B,GACpB,cAACvyB,GAAA,EAAD,CACE8Y,QAAM,EACNr0B,MAAM,oDACND,MAAO+tC,EACPxyB,SAxKG,SAAC4C,GACxB6vB,EAAkB7vB,EAAEyP,OAAO5tB,QAwKP8I,QAAQ,WACRqO,QAASuD,EAAOqzB,eAChBtyB,WACEf,EAAOqzB,eACHrzB,EAAOqzB,eAAe12B,QACtB,GAENqE,WAAS,EACT1V,KAAK,QAbP,SAeG0wB,EAASzsB,KAAI,SAAC1C,GAAD,OACZ,cAACqX,GAAA,EAAD,CAA6B5e,MAAOuH,EAAOvH,MAA3C,SACGuH,EAAOtH,OADKsH,EAAOvH,cAO9B,cAACoK,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,oDACN0H,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAO+kB,QAChBhkB,WACEf,EAAO+kB,QAAU/kB,EAAO+kB,QAAQpoB,QAAU,GAE5CqE,WAAS,EACT1V,KAAK,WAIX2B,KAAK,cAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,0DACN0H,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAOgrB,UAChBjqB,WACEf,EAAOgrB,UAAYhrB,EAAOgrB,UAAUruB,QAAU,GAEhDqE,WAAS,EACT1V,KAAK,WAIX2B,KAAK,gBAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAACa,EAAA,EAAD,CACEpC,QAAQ,YACRqC,MAAM,UACNC,QAtQC,WACnB0sB,KAkQgB,8GAQCtB,EAAS5e,QACV,cAACxN,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAACwb,GAAA,EAAD,UACE,cAACkL,GAAA,EAAD,CAAgBvmB,MAAO,CAAEpB,QAAS,UAAlC,SACE,eAAC4nB,GAAA,EAAD,CACEjnB,UAAWD,EAAQ6lB,MACnB3pB,KAAM,SACNwE,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CAAage,UAAWA,KAExB,cAACgD,GAAA,EAAD,UACGsF,EAASvsB,KAAI,SAACknB,GACb,OACE,eAAC/C,GAAA,EAAD,CACEiD,OAAK,EACLC,UAAW,EAEX9mB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACoe,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACE,sBACEoB,MAAO,CACLlB,QAAS,OACTE,WAAY,UAHhB,UAME,qBACEmsB,IAAG,UAAK/1B,EAASC,YAAd,YAA6BsxB,EAAIkE,KAAKO,MACzCC,IAAK1E,EAAIkE,KAAKp1B,MACduK,MAAO,CACLmE,MAAO,GACPtB,OAAQ,GACR3C,aAAc,MACdkD,WAAY,KAGfujB,EAAIkE,KAAK1tB,MAAQwpB,EAAIkE,KAAKp1B,WAG/B,cAACquB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAI4E,gBAEP,cAACzH,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAI2E,oBAGP,eAACxH,GAAA,EAAD,CACEllB,QAAQ,OACRoB,MAAO,CAAE+jB,UAAW,QAFtB,UAIE,cAAC7Q,GAAA,EAAD,CACEtS,QAAS,WA1T7C0sB,EA0TqE3G,IADnC,SAGE,cAAC,GAAD,MAGF,cAACzT,GAAA,EAAD,CACEtS,QAAS,kBA7TnB,SAAC+lB,GAC3BW,EAAmB,CACjB5rB,SAAS,EACTH,MAAO,4KACPK,SAAS,WAAD,8BAAE,uBAAA8P,EAAA,0DACJgF,EADI,gCAEAgc,EAAqB/gB,QAAQ,KAAMgb,EAAIjW,IAFvC,OAIRub,EAAYD,EAAS/uB,QAAO,SAACC,GAAD,OAAUA,EAAKwT,KAAOiW,EAAIjW,OACtD4W,EAAmB,CAAEnqB,KAAM,WALnB,2CAAF,kDAAC,GAOTA,KAAM,SACN3B,KAAM,IACNC,oBAAoB,IAgT6B8xB,CAAoB5G,IADrC,SAGE,cAAC,GAAD,WA3CCA,EAAIjW,kBAwD3B,cAAC9Q,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,2BACN0H,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACPmX,QAASuD,EAAOkZ,QAChBnY,WACEf,EAAOkZ,QAAUlZ,EAAOkZ,QAAQvc,QAAU,GAE5CqE,WAAS,EACT1V,KAAK,WAIX2B,KAAK,cAGT,cAACyC,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAAC,KAAD,CACEmQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAUvb,EAAkB,EAAlBA,MAAO2H,EAAW,EAAXA,KAC1B,OACE,cAAC6T,GAAA,EAAD,CACEvb,MAAM,6CACNg2B,WAAS,EACTC,KAAM,EACNptB,QAAQ,WACRnB,KAAMA,EACN4T,SAAUA,EACVvb,MAAOA,EACP0b,WAAS,EACTvE,QAASuD,EAAOyb,YAChB1a,WACEf,EAAOyb,YACHzb,EAAOyb,YAAY9e,QACnB,MAKZ1P,KAAK,kBAIT,eAACyC,EAAA,EAAD,CACE1C,MAAI,EACJ2C,GAAI,GACJG,MAAO,CAAElB,QAAS,OAAQC,eAAgB,iBAH5C,UAKE,cAAC2B,EAAA,EAAD,CAAQpC,QAAQ,YAAYqC,MAAM,UAAUjE,KAAK,SAAjD,4CAGA,cAACgE,EAAA,EAAD,CACEpC,QAAQ,YACRqC,MAAM,YACNC,QAASosB,EAHX,mEChjBLvuB,oBAAW,SAACC,GAAD,MAAY,CACpCyD,KAAM,CACJgC,MAAO,QAET9B,MAAO,CACL8B,MAAO,OACP6D,aAActJ,EAAMwF,QAAQ,IAE9BihB,MAAO,CACL9d,SAAU,SCSd,SAASu8B,GAAqBl4B,EAAGm4B,EAAGrgB,GAClC,OAAIqgB,EAAErgB,GAAW9X,EAAE8X,IACT,EAENqgB,EAAErgB,GAAW9X,EAAE8X,GACV,EAEF,EAGT,SAASsgB,GAAcjqB,EAAO2J,GAC5B,MAAiB,SAAV3J,EACH,SAACnO,EAAGm4B,GAAJ,OAAUD,GAAqBl4B,EAAGm4B,EAAGrgB,IACrC,SAAC9X,EAAGm4B,GAAJ,OAAWD,GAAqBl4B,EAAGm4B,EAAGrgB,IAG5C,SAASugB,GAAWtb,EAAOub,GACzB,IAAMC,EAAiBxb,EAAMhpB,KAAI,SAACykC,EAAI9nB,GAAL,MAAe,CAAC8nB,EAAI9nB,MAMrD,OALA6nB,EAAeE,MAAK,SAACz4B,EAAGm4B,GACtB,IAAMhqB,EAAQmqB,EAAWt4B,EAAE,GAAIm4B,EAAE,IACjC,OAAc,IAAVhqB,EAAoBA,EACjBnO,EAAE,GAAKm4B,EAAE,MAEXI,EAAexkC,KAAI,SAACykC,GAAD,OAAQA,EAAG,MAEvC,IAAMxgB,GAAY,CAChB,CACEhT,GAAI,WACJjb,MAAO,2DAET,CACEib,GAAI,YACJjb,MAAO,sBAET,CAAEib,GAAI,WAAYjb,MAAO,uEACzB,CACEib,GAAI,SACJjb,MAAO,wCAET,CAAEib,GAAI,QAASjb,MAAO,4BACtB,CAAEib,GAAI,WAGO,SAAS6U,KACtB,IAAMjmB,EAAUd,KAChB,EAA0B+O,mBAAS,OAAnC,oBAAOsM,EAAP,KAAc2L,EAAd,KACA,EAA8BjY,mBAAS,YAAvC,oBAAOiW,EAAP,KAAgBiC,EAAhB,KACA,EAAwBlY,mBAAS,GAAjC,oBAAOiX,EAAP,KAAamB,EAAb,KACA,EAAgCpY,mBAAS,GAAzC,oBAAOqY,EAAP,KAAiBC,EAAjB,KACA,EAAwBtY,mBAAS,IAAjC,oBAAOuY,EAAP,KAAaC,EAAb,KACMxa,EAAUyG,cAqBVkU,EAAiB7Y,GAAO,CAC5BZ,OAAQ,MACRC,IAAI,QAAD,OAAUkB,GAA2B,CACtC4W,OACA3K,QACA2J,UACAoC,gBAIEO,EAAmB9Y,GAAO,CAC9BZ,OAAQ,SACRC,IAAI,SA4BA0Z,EAAO,yCAAG,6BAAA1a,EAAA,sEACSwa,EAAeva,UADxB,OACR0a,EADQ,OAEdN,EAAQM,EAASrqB,MAFH,2CAAH,qDASb,OAJA+W,qBAAU,WACRqT,MACC,CAAC5B,EAAM3K,IAGR,qBAAKta,UAAWD,EAAQ6C,KAAxB,SACE,eAACkZ,GAAA,EAAD,CAAO9b,UAAWD,EAAQ+C,MAA1B,UACE,cAAC,GAAD,CAAU9G,MAAM,sEAAegnB,MAxDvB,WACZhX,EAAQQ,KAAK,uBAwDT,cAACwa,GAAA,EAAD,CAAgBvmB,MAAO,CAAEpB,QAAS,UAAlC,SACE,eAAC4nB,GAAA,EAAD,CACEjnB,UAAWD,EAAQ6lB,MACnB3pB,KAAM,SACNwE,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CACEpG,QAASA,EACTua,MAAOA,EACP2J,QAASA,EACTC,cAlFc,SAAC3lB,EAAOqmB,GAEhCqB,EADchC,IAAYW,GAAsB,QAAVtK,EACrB,OAAS,OAC1B4L,EAAWtB,IAgFDsC,SAAUX,EAAK1Y,OACfsW,UAAWA,KAEb,eAACgD,GAAA,EAAD,WACGqd,GAAWje,EAAMge,GAAcjqB,EAAO2J,IACpC4gB,MAAM5f,EAAOoB,EAAUpB,EAAOoB,EAAWA,GACzCnmB,KAAI,SAACknB,GACJ,OACE,eAAC/C,GAAA,EAAD,CACEiD,OAAK,EACLC,UAAW,EAEX9mB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACoe,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SAA2B+nB,EAAItb,WAC/B,cAACyY,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SAA2B+nB,EAAII,YAC/B,cAACjD,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SAA2B+nB,EAAIK,WAC/B,cAAClD,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SAA2B+nB,EAAIM,SAC/B,cAACnD,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SAA2B+nB,EAAIO,QAE/B,cAACpD,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACE,cAAC8iB,GAAD,CACEjY,QAAS,CACP,CAAEiH,GAAI,OAAQnV,MAAO,wCACrB,CAAEmV,GAAI,SAAUnV,MAAO,uBAEzBomB,YAAa,SAACjlB,GAAD,OA3EhB,SAACgU,EAAIhU,GACxB,IAAMyqB,EAAQ,CACZC,KAAM,WACJ7b,EAAQQ,KAAR,8BAAoC2E,KAEtC2W,OAAQ,WACNC,EAAmB,CACjB5rB,SAAS,EACTH,MAAO,4KACPK,SAAS,WAAD,8BAAE,uBAAA8P,EAAA,sEACFya,EAAiBxa,QAAQ,KAAM+E,GAD7B,OAERqV,EAAQD,EAAK7oB,QAAO,SAACC,GAAD,OAAUA,EAAKwT,KAAOA,MAC1C4W,EAAmB,CAAEnqB,KAAM,WAHnB,2CAAF,kDAAC,GAKTA,KAAM,SACN3B,KAAM,IACNC,oBAAoB,MAItB0rB,EAAMzqB,IACRyqB,EAAMzqB,KAsDqC6qB,CAAaZ,EAAIjW,GAAIhU,UAf3CiqB,EAAIjW,QAqBfoV,EAAK1Y,SAAW8Y,EAAe1Y,SAC/B,cAACoW,GAAA,EAAD,CAAU5jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACihB,GAAA,EAAD,CAAW0D,QAAS,EAAGxnB,MAAO,CAAE+jB,UAAW,UAA3C,SACE,cAACtjB,EAAA,EAAD,CAAYnC,QAAQ,KAApB,+KASZ,cAAC,GAAD,CACEgmB,MAAOwB,EAAK1Y,OACZiX,iBA3HiB,SAACvmB,EAAO2pB,GAC/B9B,EAAQ8B,IA2HFlD,wBAxHwB,SAACzmB,GAC/B+nB,EAAY6B,SAAS5pB,EAAMslB,OAAO5tB,MAAO,KACzCmwB,EAAQ,IAuHFnB,KAAMA,EACNC,YAAamB,SC1MRnnB,oBAAW,SAACC,GAAD,YAAY,CACpCyD,KAAK,aACHgC,MAAO,OACPrF,QAAS,OACTC,eAAgB,gBAChB2H,cAAe,MACf1H,WAAY,YACXN,EAAM2G,YAAYC,KAAK,MAAQ,CAC9BoB,cAAe,WAGnBrE,OAAK,GACH8B,MAAO,OADJ,cAEFzF,EAAM2G,YAAYC,KAAK,MAAQ,CAC9BnB,MAAO,QAHN,uBAKK,aALL,GAOLY,QAAS,CACPzE,gBAAiB5B,EAAMQ,QAAQ4B,QAAQQ,KACvC,sBAAuB,CACrBX,MAAO,cCoBEiP,GAxCI,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,UAAWu0B,EAAmB,EAAnBA,aACzC,EAA0B92B,mBAAS82B,EAAa5uC,OAAhD,oBAAOA,EAAP,KAAc6uC,EAAd,KAOA,OACE,eAAC1kC,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAzB,UACE,cAACtE,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAACmR,GAAA,EAAD,CACEhR,MAAO,CAAEmE,MAAO,QAChB3O,MAAOC,EACP+F,KAAK,QACL/F,MAAM,iCACN6I,QAAQ,WACRyS,SAdyB,SAAC4C,GAChC,IAAQne,EAAUme,EAAEyP,OAAZ5tB,MACR8uC,EAAS9uC,QAeP,eAACoK,EAAA,EAAD,CACE1C,MAAI,EACJ2C,GAAI,GACJG,MAAO,CAAElB,QAAS,OAAQC,eAAgB,iBAH5C,UAKE,cAAC2B,EAAA,EAAD,CACEpC,QAAQ,YACRqC,MAAM,UACNC,QAAS,kBAAMiP,EAAS,CAAEra,MAAO6uC,EAAa7uC,MAAO2H,KAAM1H,KAH7D,4CAOA,cAACiL,EAAA,EAAD,CAAQpC,QAAQ,YAAYqC,MAAM,YAAYC,QAASkP,EAAvD,yDCqbOyV,GAvcE,WACf,IAAMjmB,EAAUd,KAChB,EAAgD+O,mBAAS,IAAzD,oBAAO6e,EAAP,KAAyBC,EAAzB,KACA,EAA0C9e,mBAAS,IAAnD,oBAAOi1B,EAAP,KAAsBC,EAAtB,KACA,EAA8Cl1B,mBAAS,IAAvD,oBAAOg3B,EAAP,KAAwBC,EAAxB,KACA,EAA8Cj3B,mBAAS,IAAvD,oBAAOiqB,EAAP,KAAwBC,EAAxB,KACA,EAA4ClqB,mBAAS,IAArD,oBAAOg2B,EAAP,KAAuBC,EAAvB,KACA,EAA4Bj2B,qBAA5B,oBAAO9Q,EAAP,KAAegoC,EAAf,KACA,EAAgDl3B,mBAAS,CACvD/X,MAAO,GACPC,MAAO,KAFT,oBAAOwrC,EAAP,KAAyBC,EAAzB,KAIA,EAAwC3zB,qBAAxC,oBAAO+vB,EAAP,KAAqBC,EAArB,KAEMmH,EAA6Br3B,GAAO,CACxCZ,OAAQ,MACRC,IAAK,sBAGDi4B,EAA8Bt3B,GAAO,CACzCZ,OAAQ,MACRC,IAAI,qBAAD,OAAuBu0B,EAAiBzrC,SAGvCovC,EAA6Bv3B,GAAO,CACxCZ,OAAQ,OACRC,IAAK,sBAGDm4B,EAA4Bx3B,GAAO,CACvCZ,OAAQ,MACRC,IAAK,qBAGDo4B,EAA6Bz3B,GAAO,CACxCZ,OAAQ,MACRC,IAAI,oBAAD,OAAsBu0B,EAAiBzrC,SAGtCuvC,EAA4B13B,GAAO,CACvCZ,OAAQ,OACRC,IAAK,qBAGDs4B,EAA0B33B,GAAO,CACrCZ,OAAQ,MACRC,IAAK,mBAGDu4B,EAA2B53B,GAAO,CACtCZ,OAAQ,MACRC,IAAI,kBAAD,OAAoBu0B,EAAiBzrC,SAGpC0vC,EAA0B73B,GAAO,CACrCZ,OAAQ,OACRC,IAAK,mBAGDy4B,EAA4B93B,GAAO,CACvCZ,OAAQ,MACRC,IAAK,qBAGD04B,EAA6B/3B,GAAO,CACxCZ,OAAQ,MACRC,IAAI,oBAAD,OAAsBu0B,EAAiBzrC,SAGtC6vC,EAA4Bh4B,GAAO,CACvCZ,OAAQ,OACRC,IAAK,qBAGD44B,EAA2Bj4B,GAAO,CACtCZ,OAAQ,MACRC,IAAK,oBAGD64B,EAA4Bl4B,GAAO,CACvCZ,OAAQ,MACRC,IAAI,mBAAD,OAAqBu0B,EAAiBzrC,SAGrCgwC,EAA2Bn4B,GAAO,CACtCZ,OAAQ,OACRC,IAAK,oBAGD9Q,EAAW,SAAC,GAAqB,IAAnBuB,EAAkB,EAAlBA,KACZgqB,GAD8B,EAAZ3xB,MACV,CACZq7B,SAAS,WAAD,8BAAE,uBAAAnlB,EAAA,yDACO,SAAXjP,EADI,gCAEAkoC,EAA4Bh5B,QAAQ,CACxCxO,SAHI,6CAMAynC,EAA2Bj5B,QAAQ,CAAExO,SANrC,OAQR8vB,KARQ,2CAAF,kDAAC,GAUToR,MAAM,WAAD,8BAAE,uBAAA3yB,EAAA,yDACU,SAAXjP,EADC,gCAEGwoC,EAAyBt5B,QAAQ,CACrCxO,SAHC,6CAMG+nC,EAAwBv5B,QAAQ,CAAExO,SANrC,OAQL4lC,KARK,2CAAF,kDAAC,GAUN5I,QAAQ,WAAD,8BAAE,uBAAAzuB,EAAA,yDACQ,SAAXjP,EADG,gCAECqoC,EAA2Bn5B,QAAQ,CACvCxO,SAHG,6CAMC4nC,EAA0Bp5B,QAAQ,CAAExO,SANrC,OAQP2kC,KARO,2CAAF,kDAAC,GAUR2D,QAAQ,WAAD,8BAAE,uBAAA/5B,EAAA,yDACQ,SAAXjP,EADG,gCAEC2oC,EAA2Bz5B,QAAQ,CACvCxO,SAHG,6CAMCkoC,EAA0B15B,QAAQ,CAAExO,SANrC,OAQP67B,KARO,2CAAF,kDAAC,GAUR0M,OAAO,WAAD,8BAAE,uBAAAh6B,EAAA,yDACS,SAAXjP,EADE,gCAEE8oC,EAA0B55B,QAAQ,CACtCxO,SAHE,6CAMEqoC,EAAyB75B,QAAQ,CAAExO,SANrC,OAQN2iC,KARM,2CAAF,kDAAC,KAWT,GAAI3Y,EAAMmW,GAER,OADAxtB,KACOqX,EAAMmW,MAIXqI,GAAY,SAACjpC,GACjB+nC,EAAU,OACVlH,EAAgB7gC,IAGZ6qB,GAAe,SAAC7qB,EAAMQ,GAC1BunC,EAAU,QACVlH,EAAgB7gC,GAChBwkC,EAAoBhkC,IAGhB4S,GAAY,WAChBwX,EAAmB,CAAEnqB,KAAM,WAC3BsnC,KAmBIxX,GAAmB,yCAAG,6BAAAvhB,EAAA,sEACSg5B,EAA2B/4B,UADpC,OACpBi6B,EADoB,OAE1BvZ,EAAoBuZ,EAAqB5pC,MAFf,2CAAH,qDAKnB+mC,GAAgB,yCAAG,6BAAAr3B,EAAA,sEACSs5B,EAAwBr5B,UADjC,OACjBk6B,EADiB,OAEvBpD,EAAiBoD,EAAkB7pC,MAFZ,2CAAH,qDAKhB8lC,GAAkB,yCAAG,6BAAAp2B,EAAA,sEACSm5B,EAA0Bl5B,UADnC,OACnBm6B,EADmB,OAEzBtB,EAAmBsB,EAAoB9pC,MAFd,2CAAH,qDAKlBg9B,GAAkB,yCAAG,6BAAAttB,EAAA,sEACSy5B,EAA0Bx5B,UADnC,OACnBo6B,EADmB,OAEzBtO,EAAmBsO,EAAoB/pC,MAFd,2CAAH,qDAKlB8jC,GAAiB,yCAAG,6BAAAp0B,EAAA,sEACS45B,EAAyB35B,UADlC,OAClBq6B,EADkB,OAExBxC,EAAkBwC,EAAmBhqC,MAFb,2CAAH,qDAmBvB,OAdA+W,qBAAU,WACRka,KACA8V,KACAjB,KACA9I,KACA8G,OACC,IAEH/sB,qBAAU,WACJtW,GAjDJ6qB,EAAmB,CACjB/rB,MAAO,qDACPD,UACE,cAAC,GAAD,CACEuU,SAAUjU,EACVkU,UAAWA,GACXu0B,aAAcpD,IAGlB9jC,KAAM,SACN3B,KAAM,IACNC,oBAAoB,MAyCrB,CAACgB,IAGF,sBAAK8C,UAAWD,EAAQ6C,KAAxB,UACE,eAACkZ,GAAA,EAAD,CAAO9b,UAAWD,EAAQ+C,MAA1B,UACE,cAAC,GAAD,CACE9G,MAAM,+FACNgnB,MAAO,kBAAMojB,GAAU,aACvBjjB,aAAcpjB,EAAQyF,QACtB4d,eAAgBrjB,EAAQ2mC,UACxBrjB,SAAO,IAET,cAAC2D,GAAA,EAAD,CAAgBvmB,MAAO,CAAEpB,QAAS,UAAlC,SACE,cAAC4nB,GAAA,EAAD,CACEjnB,UAAWD,EAAQ6lB,MACnB3pB,KAAM,SACNwE,MAAO,CAAE0F,aAAc,IAHzB,SAKE,eAACghB,GAAA,EAAD,WACG0F,EAAiB3sB,KAAI,SAACknB,GACrB,OACE,eAAC/C,GAAA,EAAD,CACEiD,OAAK,EACLC,UAAW,EAEX9mB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACoe,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SAA2B+nB,EAAIlxB,QAE/B,cAACquB,GAAA,EAAD,CAAWllB,QAAQ,OAAOoB,MAAO,CAAE+jB,UAAW,QAA9C,SACE,cAAC7Q,GAAA,EAAD,CAAYtS,QAAS,kBAAM2mB,GAAa,WAAYZ,IAApD,SACE,mBAAGpnB,UAAU,uBAAb,wBAPConB,EAAIjW,QAab0b,EAAiBhf,SAAW6f,GAAoBzf,SAChD,cAACoW,GAAA,EAAD,CAAU5jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACihB,GAAA,EAAD,CAAW0D,QAAS,EAAGxnB,MAAO,CAAE+jB,UAAW,UAA3C,SACE,cAACtjB,EAAA,EAAD,CAAYnC,QAAQ,KAApB,iLAUd,eAAC+c,GAAA,EAAD,CAAO9b,UAAWD,EAAQ+C,MAA1B,UACE,cAAC,GAAD,CACE9G,MAAM,mFACNgnB,MAAO,kBAAMojB,GAAU,UACvBjjB,aAAcpjB,EAAQyF,QACtB4d,eAAgBrjB,EAAQ2mC,UACxBrjB,SAAO,IAET,cAAC2D,GAAA,EAAD,CAAgBvmB,MAAO,CAAEpB,QAAS,UAAlC,SACE,cAAC4nB,GAAA,EAAD,CACEjnB,UAAWD,EAAQ6lB,MACnB3pB,KAAM,SACNwE,MAAO,CAAE0F,aAAc,IAHzB,SAKE,eAACghB,GAAA,EAAD,WACG8b,EAAc/iC,KAAI,SAACknB,GAClB,OACE,eAAC/C,GAAA,EAAD,CACEiD,OAAK,EACLC,UAAW,EAEX9mB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACoe,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SAA2B+nB,EAAIlxB,QAE/B,cAACquB,GAAA,EAAD,CAAWllB,QAAQ,OAAOoB,MAAO,CAAE+jB,UAAW,QAA9C,SACE,cAAC7Q,GAAA,EAAD,CAAYtS,QAAS,kBAAM2mB,GAAa,QAASZ,IAAjD,SACE,mBAAGpnB,UAAU,uBAAb,wBAPConB,EAAIjW,QAab8xB,EAAcp1B,SAAW21B,GAAiBv1B,SAC1C,cAACoW,GAAA,EAAD,CAAU5jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACihB,GAAA,EAAD,CAAW0D,QAAS,EAAGxnB,MAAO,CAAE+jB,UAAW,UAA3C,SACE,cAACtjB,EAAA,EAAD,CAAYnC,QAAQ,KAApB,iLAUd,eAAC+c,GAAA,EAAD,CAAO9b,UAAWD,EAAQ+C,MAA1B,UACE,cAAC,GAAD,CACE9G,MAAM,yFACNgnB,MAAO,kBAAMojB,GAAU,YACvBjjB,aAAcpjB,EAAQyF,QACtB4d,eAAgBrjB,EAAQ2mC,UACxBrjB,SAAO,IAET,cAAC2D,GAAA,EAAD,CAAgBvmB,MAAO,CAAEpB,QAAS,UAAlC,SACE,cAAC4nB,GAAA,EAAD,CACEjnB,UAAWD,EAAQ6lB,MACnB3pB,KAAM,SACNwE,MAAO,CAAE0F,aAAc,IAHzB,SAKE,eAACghB,GAAA,EAAD,WACG6d,EAAgB9kC,KAAI,SAACknB,GACpB,OACE,eAAC/C,GAAA,EAAD,CACEiD,OAAK,EACLC,UAAW,EAEX9mB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACoe,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SAA2B+nB,EAAIlxB,QAE/B,cAACquB,GAAA,EAAD,CAAWllB,QAAQ,OAAOoB,MAAO,CAAE+jB,UAAW,QAA9C,SACE,cAAC7Q,GAAA,EAAD,CAAYtS,QAAS,kBAAM2mB,GAAa,UAAWZ,IAAnD,SACE,mBAAGpnB,UAAU,uBAAb,wBAPConB,EAAIjW,QAab6zB,EAAgBn3B,SAAW00B,GAAmBt0B,SAC9C,cAACoW,GAAA,EAAD,CAAU5jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACihB,GAAA,EAAD,CAAW0D,QAAS,EAAGxnB,MAAO,CAAE+jB,UAAW,UAA3C,SACE,cAACtjB,EAAA,EAAD,CAAYnC,QAAQ,KAApB,iLAUd,eAAC+c,GAAA,EAAD,CAAO9b,UAAWD,EAAQ+C,MAA1B,UACE,cAAC,GAAD,CACE9G,MAAM,sGACNgnB,MAAO,kBAAMojB,GAAU,YACvBjjB,aAAcpjB,EAAQyF,QACtB4d,eAAgBrjB,EAAQ2mC,UACxBrjB,SAAO,IAET,cAAC2D,GAAA,EAAD,CAAgBvmB,MAAO,CAAEpB,QAAS,UAAlC,SACE,cAAC4nB,GAAA,EAAD,CACEjnB,UAAWD,EAAQ6lB,MACnB3pB,KAAM,SACNwE,MAAO,CAAE0F,aAAc,IAHzB,SAKE,eAACghB,GAAA,EAAD,WACG8Q,EAAgB/3B,KAAI,SAACknB,GACpB,OACE,eAAC/C,GAAA,EAAD,CACEiD,OAAK,EACLC,UAAW,EAEX9mB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACoe,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SAA2B+nB,EAAIlxB,QAE/B,cAACquB,GAAA,EAAD,CAAWllB,QAAQ,OAAOoB,MAAO,CAAE+jB,UAAW,QAA9C,SACE,cAAC7Q,GAAA,EAAD,CAAYtS,QAAS,kBAAM2mB,GAAa,UAAWZ,IAAnD,SACE,mBAAGpnB,UAAU,uBAAb,wBAPConB,EAAIjW,QAab8mB,EAAgBpqB,SAAW4rB,GAAmBxrB,SAC9C,cAACoW,GAAA,EAAD,CAAU5jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACihB,GAAA,EAAD,CAAW0D,QAAS,EAAGxnB,MAAO,CAAE+jB,UAAW,UAA3C,SACE,cAACtjB,EAAA,EAAD,CAAYnC,QAAQ,KAApB,iLAUd,eAAC+c,GAAA,EAAD,CAAO9b,UAAWD,EAAQ+C,MAA1B,UACE,cAAC,GAAD,CACE9G,MAAM,kHACNgnB,MAAO,kBAAMojB,GAAU,WACvBjjB,aAAcpjB,EAAQyF,QACtB4d,eAAgBrjB,EAAQ2mC,UACxBrjB,SAAO,IAET,cAAC2D,GAAA,EAAD,CAAgBvmB,MAAO,CAAEpB,QAAS,UAAlC,SACE,cAAC4nB,GAAA,EAAD,CACEjnB,UAAWD,EAAQ6lB,MACnB3pB,KAAM,SACNwE,MAAO,CAAE0F,aAAc,IAHzB,SAKE,eAACghB,GAAA,EAAD,WACG6c,EAAe9jC,KAAI,SAACknB,GACnB,OACE,eAAC/C,GAAA,EAAD,CACEiD,OAAK,EACLC,UAAW,EAEX9mB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACoe,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SAA2B+nB,EAAIlxB,QAE/B,cAACquB,GAAA,EAAD,CAAWllB,QAAQ,OAAOoB,MAAO,CAAE+jB,UAAW,QAA9C,SACE,cAAC7Q,GAAA,EAAD,CAAYtS,QAAS,kBAAM2mB,GAAa,SAAUZ,IAAlD,SACE,mBAAGpnB,UAAU,uBAAb,wBAPConB,EAAIjW,QAab6yB,EAAen2B,SAAW0yB,GAAkBtyB,SAC5C,cAACoW,GAAA,EAAD,CAAU5jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACihB,GAAA,EAAD,CAAW0D,QAAS,EAAGxnB,MAAO,CAAE+jB,UAAW,UAA3C,SACE,cAACtjB,EAAA,EAAD,CAAYnC,QAAQ,KAApB,qL,UC1adiK,GAAY9J,aAAW,SAACC,GAAD,MAAY,CACvCyD,KAAM,CACJ4F,OAAQ,UAEV1F,MAAO,CACL8B,MAAO,OACPvF,QAAS,GACToJ,aAAc,IAEhBzM,MAAO,CACLkd,cAAe,IAEjBJ,WAAY,CACV,UAAW,CACTzZ,QAAS,cAGbsnC,MAAO,CACLvlC,MAAO,OACPL,gBAAiB5B,EAAMQ,QAAQ4B,QAAQQ,KACvC,UAAW,CACThB,gBAAiB5B,EAAMQ,QAAQ4B,QAAQQ,OAG3C6kC,KAAM,CACJxlC,MAAO,OACPL,gBAAiB5B,EAAMQ,QAAQyN,MAAMrL,KACrC,UAAW,CACThB,gBAAiB5B,EAAMQ,QAAQyN,MAAMrL,OAGzC8kC,WAAY,CACVzlC,MAAO,QACPsC,SAAU,GACV3C,gBAAiB5B,EAAMQ,QAAQiC,KAAKG,KACpC,UAAW,CACThB,gBAAiB5B,EAAMQ,QAAQiC,KAAKG,OAGxC+kC,UAAW,CACT1lC,MAAO,QACPsC,SAAU,GACV3C,gBAAiB5B,EAAMQ,QAAQiC,KAAKG,KACpC,UAAW,CACThB,gBAAiB5B,EAAMQ,QAAQiC,KAAKG,OAGxCglC,SAAU,CACR3lC,MAAO,OACPL,gBAAiB5B,EAAMQ,QAAQ+B,QAAQK,KACvC,UAAW,CACThB,gBAAiB5B,EAAMQ,QAAQ+B,QAAQM,OAG3CglC,SAAU,CACRznC,QAAS,OACT4H,cAAe,UAEjB8/B,eAAgB,CACd7kC,WAAYjD,EAAMQ,QAAQ4B,QAAQQ,KAClCvC,eAAgB,WAChBC,WAAY,SACZF,QAAS,QAEXivB,IAAK,CACH9uB,aAAa,aAAD,OAAeP,EAAMQ,QAAQiC,KAAKG,WAI5CoiB,GAAY,CAChB,CACEhT,GAAI,OACJjb,MAAO,iGAGT,CAAEib,GAAI,QAASjb,MAAO,4BACtB,CACEib,GAAI,OACJjb,MAAO,4BAET,CAAEib,GAAI,QAASjb,MAAO,4BACtB,CACEib,GAAI,OACJjb,MAAO,6BAII,SAASma,KACtB,IAAMtQ,EAAUiJ,KAEhB,GADgByJ,cACYzE,sBAA5B,oBAAO1H,EAAP,KAAe6f,EAAf,KACA,EAAwBnY,mBAAS,IAAjC,oBAAOuY,EAAP,KAAaC,EAAb,KACA,EAAwCxY,mBAASqQ,QAAjD,oBAAO0Z,EAAP,KAAqB0G,EAArB,KACA,EAAwCzwB,mBAASqQ,QAAjD,oBAAO6oB,EAAP,KAAqBC,EAArB,KACA,EAAoCn5B,oBAAS,GAA7C,oBAAOo5B,EAAP,KAAmBC,EAAnB,KACA,EAAgCr5B,qBAAhC,oBAAOs5B,EAAP,KAAiBC,EAAjB,KACA,EAAwBv5B,mBAAS,OAAjC,oBAAO7Q,EAAP,KAAa0xB,EAAb,KAEM2Y,EAAkB15B,GAAO,CAC7BZ,OAAQ,OACRC,IAAI,eAGAs6B,EAAoB35B,GAAO,CAC/BZ,OAAQ,MACRC,IAAKud,mBAAmB,cAAD,OACPrc,GAA2B,CACvC/H,SACA5I,OAAO,SAAD,OAAWq6B,EAAahZ,GAAGC,cAA3B,KACN7hB,aAKAuqC,EAAqB55B,GAAO,CAChCZ,OAAQ,MACRC,IAAI,eAGAmD,EAAQ,yCAAG,WAAO8W,EAAKjqB,GAAZ,UAAAgP,EAAA,0DACX8D,GAAcpa,EAAS0D,gBAAgBE,iBAD5B,mBAERkuC,IAFQ,gCAGLH,EAAgBp7B,QAAQ,CAAEw7B,WAAYxgB,EAAIjW,GAAIhU,SAHzC,OAIX0pB,IAJW,6CAQbpoB,EAAiB,CACftB,KAAM,QACNrB,KAAMjG,EAAS2C,SAASC,cAAcE,gBAV3B,4CAAH,wDAeRkvC,EAAM,yCAAG,WAAOr1B,GAAP,gBAAArG,EAAA,0DACT8D,GAAcpa,EAAS0D,gBAAgBG,kBAD9B,uBAELouC,EAA4C,KAAjC,IAAIh0B,MAAOi0B,oBAFjB,SAGLL,EAAmBt7B,QAAQ,CAC/B+E,GAAIm2B,EAASn2B,GACbqB,KAAM,IAAIsB,KAAK,IAAIA,KAAKtB,GAAQs1B,KALvB,OAOXjhB,IAPW,sBASXpoB,EAAiB,CACftB,KAAM,QACNrB,KAAMjG,EAAS2C,SAASC,cAAcE,gBAX7B,2CAAH,sDAoBNkuB,EAAO,yCAAG,6BAAA1a,EAAA,sEACSs7B,EAAkBr7B,UAD3B,OACR0a,EADQ,OAEdN,EAAQM,EAASrqB,MAFH,2CAAH,qDASPurC,EAAmB,SAACx1B,GACxB20B,EAAgB30B,EAAKuM,IACrBsoB,GAAc,GACdE,EAAY,MACZM,EAAOr1B,EAAKuM,KAGRkpB,EAAa,SAACC,GACbC,MAGLhB,EAAgBe,EAAKlB,UACrBK,GAAc,GACdE,EAAY,CAAEp2B,GAAI+2B,EAAK/2B,OAGnBg3B,EAAe,WACnB,OAAOl4B,GAAcpa,EAAS0D,gBAAgBG,mBAG1CiuC,EAAa,WACjB,OAAO5P,EAAahZ,GAAGqpB,iBAAmB/pB,OAASU,GAAGqpB,gBAGlDC,EAAkB,SAACjhB,GACvB,OAAyB,IAArBA,EAAIkhB,MAAMz6B,OAEV,qCACE,cAAC0W,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nC,GAAchgB,EAAIkhB,MAAM,GAAGn3B,KAAOm2B,EAASn2B,GAC1C,cAACo3B,GAAA,EAAD,CACE9nC,MAAO,CAAEmE,MAAO,IAChB4jC,MAAM,EACNvyC,MAAOixC,EACP11B,SAAUw2B,EACV3mB,QAAQ,iCACRC,YAAY,yCAGd,cAACrM,GAAA,EAAD,CACE/e,MAAO,8CACP8J,UAAWmS,aACTpS,EAAQ4mC,MACRgB,KAAgB5nC,EAAQ8mC,YAE1BxlC,QAAS,kBAAMiP,EAAS8W,EAAK,cAInC,cAAC7C,GAAA,EAAD,CAAWllB,QAAQ,SACnB,cAACklB,GAAA,EAAD,CAAWllB,QAAQ,SACnB,cAACklB,GAAA,EAAD,CAAWllB,QAAQ,YAIA,IAArB+nB,EAAIkhB,MAAMz6B,OAEV,qCACE,cAAC0W,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nC,GAAchgB,EAAIkhB,MAAM,GAAGn3B,KAAOm2B,EAASn2B,GAC1C,cAACo3B,GAAA,EAAD,CACE9nC,MAAO,CAAEmE,MAAO,IAChB4jC,MAAM,EACNvyC,MAAOixC,EACP11B,SAAUw2B,EACV3mB,QAAQ,iCACRC,YAAY,yCAGd,cAACrM,GAAA,EAAD,CACE/e,MAAO0Z,GAAcwX,EAAIkhB,MAAM,GAAGJ,MAAMv6B,UAAU,EAAG,GACrD3N,UAAWD,EAAQ8mC,WACnBxlC,QAAS,kBAAM4mC,EAAW7gB,EAAIkhB,MAAM,SAI1C,cAAC/jB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACE,cAAC4V,GAAA,EAAD,CACE/e,MAAO,8CACP8J,UAAWmS,aAAKpS,EAAQ6mC,KAAMe,KAAgB5nC,EAAQ+mC,WACtDzlC,QAAS,kBAAMiP,EAAS8W,EAAK,aAGjC,cAAC7C,GAAA,EAAD,CAAWllB,QAAQ,SACnB,cAACklB,GAAA,EAAD,CAAWllB,QAAQ,YAIA,IAArB+nB,EAAIkhB,MAAMz6B,OAEV,qCACE,cAAC0W,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nC,GAAchgB,EAAIkhB,MAAM,GAAGn3B,KAAOm2B,EAASn2B,GAC1C,cAACo3B,GAAA,EAAD,CACE9nC,MAAO,CAAEmE,MAAO,IAChB4jC,MAAM,EACNvyC,MAAOixC,EACP11B,SAAUw2B,EACV3mB,QAAQ,iCACRC,YAAY,yCAGd,cAACrM,GAAA,EAAD,CACE/e,MAAO0Z,GAAcwX,EAAIkhB,MAAM,GAAGJ,MAAMv6B,UAAU,EAAG,GACrD3N,UAAWD,EAAQ8mC,WACnBxlC,QAAS,kBAAM4mC,EAAW7gB,EAAIkhB,MAAM,SAI1C,cAAC/jB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nC,GAAchgB,EAAIkhB,MAAM,GAAGn3B,KAAOm2B,EAASn2B,GAC1C,cAACo3B,GAAA,EAAD,CACE9nC,MAAO,CAAEmE,MAAO,IAChB4jC,MAAM,EACNvyC,MAAOixC,EACP11B,SAAUw2B,EACV3mB,QAAQ,iCACRC,YAAY,yCAGd,cAACrM,GAAA,EAAD,CACE/e,MAAO0Z,GAAcwX,EAAIkhB,MAAM,GAAGJ,MAAMv6B,UAAU,EAAG,GACrD3N,UAAWD,EAAQ+mC,UACnBzlC,QAAS,kBAAM4mC,EAAW7gB,EAAIkhB,MAAM,SAI1C,cAAC/jB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACE,cAAC4V,GAAA,EAAD,CACE/e,MAAO,8CACP8J,UAAWmS,aACTpS,EAAQ4mC,MACRgB,KAAgB5nC,EAAQ8mC,YAE1BxlC,QAAS,kBAAMiP,EAAS8W,EAAK,cAGjC,cAAC7C,GAAA,EAAD,CAAWllB,QAAQ,YAIA,IAArB+nB,EAAIkhB,MAAMz6B,OAEV,qCACE,cAAC0W,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nC,GAAchgB,EAAIkhB,MAAM,GAAGn3B,KAAOm2B,EAASn2B,GAC1C,cAACo3B,GAAA,EAAD,CACE9nC,MAAO,CAAEmE,MAAO,IAChB4jC,MAAM,EACNvyC,MAAOixC,EACP11B,SAAUw2B,EACV3mB,QAAQ,iCACRC,YAAY,yCAGd,cAACrM,GAAA,EAAD,CACE/e,MAAO0Z,GAAcwX,EAAIkhB,MAAM,GAAGJ,MAAMv6B,UAAU,EAAG,GACrD3N,UAAWD,EAAQ8mC,WACnBxlC,QAAS,kBAAM4mC,EAAW7gB,EAAIkhB,MAAM,SAI1C,cAAC/jB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nC,GAAchgB,EAAIkhB,MAAM,GAAGn3B,KAAOm2B,EAASn2B,GAC1C,cAACo3B,GAAA,EAAD,CACE9nC,MAAO,CAAEmE,MAAO,IAChB4jC,MAAM,EACNvyC,MAAOixC,EACP11B,SAAUw2B,EACV3mB,QAAQ,iCACRC,YAAY,yCAGd,cAACrM,GAAA,EAAD,CACE/e,MAAO0Z,GAAcwX,EAAIkhB,MAAM,GAAGJ,MAAMv6B,UAAU,EAAG,GACrD3N,UAAWD,EAAQ+mC,UACnBzlC,QAAS,kBAAM4mC,EAAW7gB,EAAIkhB,MAAM,SAI1C,cAAC/jB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nC,GAAchgB,EAAIkhB,MAAM,GAAGn3B,KAAOm2B,EAASn2B,GAC1C,cAACo3B,GAAA,EAAD,CACE9nC,MAAO,CAAEmE,MAAO,IAChB4jC,MAAM,EACNvyC,MAAOixC,EACP11B,SAAUw2B,EACV3mB,QAAQ,iCACRC,YAAY,yCAGd,cAACrM,GAAA,EAAD,CACE/e,MAAO0Z,GAAcwX,EAAIkhB,MAAM,GAAGJ,MAAMv6B,UAAU,EAAG,GACrD3N,UAAWD,EAAQ8mC,WACnBxlC,QAAS,kBAAM4mC,EAAW7gB,EAAIkhB,MAAM,SAI1C,cAAC/jB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACE,cAAC4V,GAAA,EAAD,CACE/e,MAAO,8CACP8J,UAAWmS,aAAKpS,EAAQ6mC,KAAMe,KAAgB5nC,EAAQ+mC,WACtDzlC,QAAS,kBAAMiP,EAAS8W,EAAK,gBAMd,IAArBA,EAAIkhB,MAAMz6B,OAEV,qCACE,cAAC0W,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nC,GAAchgB,EAAIkhB,MAAM,GAAGn3B,KAAOm2B,EAASn2B,GAC1C,cAACo3B,GAAA,EAAD,CACE9nC,MAAO,CAAEmE,MAAO,IAChB4jC,MAAM,EACNvyC,MAAOixC,EACP11B,SAAUw2B,EACV3mB,QAAQ,iCACRC,YAAY,yCAGd,cAACrM,GAAA,EAAD,CACE/e,MAAO0Z,GAAcwX,EAAIkhB,MAAM,GAAGJ,MAAMv6B,UAAU,EAAG,GACrD3N,UAAWD,EAAQ8mC,WACnBxlC,QAAS,kBAAM4mC,EAAW7gB,EAAIkhB,MAAM,SAI1C,cAAC/jB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nC,GAAchgB,EAAIkhB,MAAM,GAAGn3B,KAAOm2B,EAASn2B,GAC1C,cAACo3B,GAAA,EAAD,CACE9nC,MAAO,CAAEmE,MAAO,IAChB4jC,MAAM,EACNvyC,MAAOixC,EACP11B,SAAUw2B,EACV3mB,QAAQ,iCACRC,YAAY,yCAGd,cAACrM,GAAA,EAAD,CACE/e,MAAO0Z,GAAcwX,EAAIkhB,MAAM,GAAGJ,MAAMv6B,UAAU,EAAG,GACrD3N,UAAWD,EAAQ+mC,UACnBzlC,QAAS,kBAAM4mC,EAAW7gB,EAAIkhB,MAAM,SAI1C,cAAC/jB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nC,GAAchgB,EAAIkhB,MAAM,GAAGn3B,KAAOm2B,EAASn2B,GAC1C,cAACo3B,GAAA,EAAD,CACE9nC,MAAO,CAAEmE,MAAO,IAChB4jC,MAAM,EACNvyC,MAAOixC,EACP11B,SAAUw2B,EACV3mB,QAAQ,iCACRC,YAAY,yCAGd,cAACrM,GAAA,EAAD,CACE/e,MAAO0Z,GAAcwX,EAAIkhB,MAAM,GAAGJ,MAAMv6B,UAAU,EAAG,GACrD3N,UAAWD,EAAQ8mC,WACnBxlC,QAAS,kBAAM4mC,EAAW7gB,EAAIkhB,MAAM,SAI1C,cAAC/jB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nC,GAAchgB,EAAIkhB,MAAM,GAAGn3B,KAAOm2B,EAASn2B,GAC1C,cAACo3B,GAAA,EAAD,CACE9nC,MAAO,CAAEmE,MAAO,IAChB4jC,MAAM,EACNvyC,MAAOixC,EACP11B,SAAUw2B,EACV3mB,QAAQ,iCACRC,YAAY,yCAGd,cAACrM,GAAA,EAAD,CACE/e,MAAO0Z,GAAcwX,EAAIkhB,MAAM,GAAGJ,MAAMv6B,UAAU,EAAG,GACrD3N,UAAWD,EAAQ+mC,UACnBzlC,QAAS,kBAAM4mC,EAAW7gB,EAAIkhB,MAAM,iBAvEhD,GA4FF,OAJA90B,qBAAU,WACRqT,MACC,CAACvgB,EAAQyxB,EAAc56B,IAGxB,mCACG8S,GAAcpa,EAAS0D,gBAAgBkvC,kBACtC,eAACpoC,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAGlE,MAAO,CAAEhB,WAAY,YAAjD,UACE,cAACY,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGvf,GAAI,GAAIP,UAAWD,EAAQinC,SAA7C,SACE,cAAC9lB,GAAA,EAAD,CACEC,QAAM,EACNunB,YAAY,WACZ3pC,QAAQ,SACR4pC,OAAO,OACP/qC,KAAK,OAELwjB,aAAa,WACbC,QAAQ,iCACRC,YAAY,qBACZC,UAAW,SAAC/O,GAAD,OAAWA,EAAOA,EAAKyB,OAAO,iBAAmB,IAC5Dhe,MAAO8hC,EACPvmB,SAjUa,SAACgB,GACxBisB,EAAgBjsB,IAiUN/R,MAAO,CAAEmE,MAAO,YAcpB,eAACvE,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGvf,GAAI,GAAIP,UAAWD,EAAQ6C,KAA7C,UACE,eAACkZ,GAAA,EAAD,CAAO9b,UAAWD,EAAQ+C,MAA1B,UACE,cAAC5B,EAAA,EAAD,CACElB,UAAWD,EAAQ/D,MACnB+C,QAAQ,KACRoS,GAAG,aACHpV,UAAU,MAJZ,yFASA,cAACsE,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAzB,SACE,cAACtE,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,GAAIxf,GAAI,GAAvB,SACE,cAACmR,GAAA,EAAD,CACE1S,QAAQ,WACR7I,MAAM,uEACNsb,SAzWK,SAAC4C,GACtB+R,EAAU/R,EAAEyP,OAAO5tB,QAyWHA,MAAOqQ,EACPqL,WAAS,EACT1V,KAAK,iBAKb,qBAAK+D,UAAWD,EAAQ6C,KAAxB,SACE,eAACkZ,GAAA,EAAD,CAAO9b,UAAWD,EAAQ+C,MAA1B,UACE,qBAAK9C,UAAWD,EAAQyuB,IAAxB,SACE,eAACQ,GAAA,EAAD,CACE/4B,MAAOkH,EACPqU,SAzEG,SAAC4C,EAAGne,GACvB44B,EAAQ54B,IAyEQg5B,eAAe,UACfC,UAAU,UACVC,UAAQ,EACRpwB,QAAQ,YANV,UAQE,cAACqwB,GAAA,EAAD,CAAKl5B,MAAM,8CAAWD,MAAM,QAC5B,cAACm5B,GAAA,EAAD,CAAKl5B,MAAM,4EAAgBD,MAAM,YACjC,cAACm5B,GAAA,EAAD,CAAKl5B,MAAM,gEAAcD,MAAM,eAGnC,cAAC+wB,GAAA,EAAD,CAAgBvmB,MAAO,CAAEpB,QAAS,UAAlC,SACE,eAAC4nB,GAAA,EAAD,CACEjnB,UAAWD,EAAQ6lB,MACnB3pB,KAAM,SACNwE,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CAAapG,QAASA,EAASokB,UAAWA,KAC1C,eAACgD,GAAA,EAAD,WACGZ,EAAKrmB,KAAI,SAACknB,GACT,OACE,eAAC/C,GAAA,EAAD,CACEiD,OAAK,EACLC,UAAW,EAEX9mB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACoe,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SAA2B+nB,EAAIwhB,WAC9BP,EAAgBjhB,KAJZA,EAAIjW,QAQboV,EAAK1Y,SAAW45B,EAAkBx5B,SAClC,cAACoW,GAAA,EAAD,CAAU5jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACihB,GAAA,EAAD,CACE0D,QAAS,EACTxnB,MAAO,CAAE+jB,UAAW,UAFtB,SAIE,cAACtjB,EAAA,EAAD,CAAYnC,QAAQ,KAApB,4LC5kB5B,IAAMiK,GAAY9J,aAAW,SAACC,GAAD,MAAY,CACvC2Z,WAAY,CACV,UAAW,CACTzZ,QAAS,kBAgEA6qB,GA5DA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACVpqB,EAAUiJ,KAChB,EAAiDgF,mBAASqQ,QAA1D,oBAAOiS,EAAP,KAAyBC,EAAzB,KACA,EAA6CviB,mBAASqQ,QAAtD,oBAAOmS,EAAP,KAAuBC,EAAvB,KAEMI,EAAe,SAACzc,EAAGjX,GACV,SAATA,EACFozB,EAAqBnc,GAErBqc,EAAmBrc,IAYvB,OACE,eAAC/T,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAGlF,WAAW,SAASgB,MAAO,CAAEpB,QAAS,IAAlE,UACE,cAACgB,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAIN,UAAWD,EAAQ+Y,WAA7C,SACE,cAACoI,GAAA,EAAD,CACEC,QAAM,EACNvjB,KAAK,OACL1H,MAAM,8CACNkrB,aAAa,WACbC,QAAQ,iCACRC,YAAY,qBACZC,UAAW,SAAC/O,GAAD,OAAWA,EAAOA,EAAKyB,OAAO,iBAAmB,IAC5Dhe,MAAOq6B,EACP9e,SAAU,SAAC4C,GAAD,OAAOyc,EAAazc,EAAG,SACjC3T,MAAO,CAAEmE,MAAO,YAGpB,cAACvE,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAIN,UAAWD,EAAQ+Y,WAA7C,SACE,cAACoI,GAAA,EAAD,CACEC,QAAM,EACNvjB,KAAK,OACL1H,MAAM,8CACNkrB,aAAa,WACbC,QAAQ,iCACRC,YAAY,qBACZC,UAAW,SAAC/O,GAAD,OAAWA,EAAOA,EAAKyB,OAAO,iBAAmB,IAC5Dhe,MAAOu6B,EACPhf,SAAU,SAAC4C,GAAD,OAAOyc,EAAazc,EAAG,OACjC3T,MAAO,CAAEmE,MAAO,YAGpB,cAACvE,EAAA,EAAD,CAAM1C,MAAI,EAACmiB,GAAI,EAAGxf,GAAI,GAAtB,SACE,cAACa,EAAA,EAAD,CAAQpC,QAAQ,YAAYqC,MAAM,UAAUC,QAvCjC,WACS,oBAAb8oB,GACTA,EAAS,SAAD,OACGmG,EAAiBvR,GAAGC,cADvB,eAC2CwR,EAAezR,GAAGC,cAD7D,OAqCN,8CAIF,cAACpK,GAAA,EAAD,CAASnU,MAAO,CAAEmE,MAAO,c,0CCjCzBuf,GAAY,CAChB,CACEhT,GAAI,OACJjb,MAAO,kCAGT,CAAEib,GAAI,aAAcjb,MAAO,+CAC3B,CACEib,GAAI,YACJjb,MAAO,+CAET,CAAEib,GAAI,cAAejb,MAAO,+CAC5B,CACEib,GAAI,aACJjb,MAAO,+CAET,CAAEib,GAAI,eAAgBjb,MAAO,yCAC7B,CACEib,GAAI,WACJjb,MAAO,qDAET,CACEib,GAAI,QACJjb,MAAO,wEAII,SAAS2yC,KACtB,IAAM9oC,EAAUd,KACVkS,EAAKxC,GAAe,MACpB/Q,EAAO+Q,GAAe,QAC5B,EAA0BX,mBAAS,OAAnC,oBAAOsM,EAAP,KAAc2L,EAAd,KACA,EAA8BjY,mBAAS,QAAvC,oBAAOiW,EAAP,KAAgBiC,EAAhB,KACA,EAAwBlY,mBAAS,GAAjC,oBAAOiX,EAAP,KAAamB,EAAb,KACA,EAAgCpY,mBAASnY,EAASE,iBAAlD,oBAAOswB,EAAP,KAAiBC,EAAjB,KACA,EAAwBtY,mBAAS,IAAjC,oBAAOuY,EAAP,KAAaC,EAAb,KACA,EAA0BxY,mBAAS,GAAnC,oBAAOyY,EAAP,KAAcC,EAAd,KACA,EAAsB1Y,qBAAtB,oBAAO86B,EAAP,KAAYC,EAAZ,KAEA,GADgBt2B,cACYzE,mBAAS,SAAD,OACzBg7B,KAAQ3qB,OAAU,cACxB4qB,OAAO,MACPC,QAAQ,SACRlqB,cAJ+B,eAIXX,OAASW,cAJE,OAApC,oBAAOthB,EAAP,KAAe8sB,EAAf,KAmCMsE,EAAqBhhB,GAAO,CAChCZ,OAAQ,MACRC,IAAKud,mBAAmB,uBAAD,OACErc,GAA2B,CAChD4W,OACA3K,QACA2J,UACAoC,WACA3oB,eA0BAmpB,EAAO,yCAAG,6BAAA1a,EAAA,sEACa2iB,EAAmB1iB,QAAQ,KAAM+E,GAD9C,OACR4d,EADQ,OAEdvI,EAAQuI,EAAatyB,MACrBiqB,EAASqI,EAAatI,OACtBsiB,EAAOha,EAAaoa,SAJN,2CAAH,qDAqBb,OAJA31B,qBAAU,WACRqT,MACC,CAAC5B,EAAM3K,EAAO+L,EAAU3oB,IAGzB,mCACGuS,GAAcpa,EAAS0D,gBAAgBskC,YACtC,cAAC9W,GAAA,EAAD,CAAOjlB,UAAU,OAAO1B,IAAI,EAA5B,SACE,8BACG0uB,EAAmB7gB,QAClB,cAAC,GAAD,CAAe6X,UAAW3B,KAE1B,mCACE,eAAC9jB,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAG3E,UAAWD,EAAQsuB,OAA/C,UAgFE,cAAChuB,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,eAACwb,GAAA,EAAD,CAAO9b,UAAWD,EAAQuuB,gBAA1B,UACE,cAAC,GAAD,CACEtyB,MAzGd,qDAAN,OAAoB4B,GA0GAqlB,gBACE,cAAC,GAAD,CAAiBkH,SAxIxB,SAAC1tB,GAChB+tB,EAAU/tB,QA0IQ,cAACuqB,GAAA,EAAD,CAAgBvmB,MAAO,CAAEpB,QAAS,UAAlC,SACE,eAAC4nB,GAAA,EAAD,CACEjnB,UAAWD,EAAQ6lB,MACnB3pB,KAAM,SACNwE,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CACEpG,QAASA,EACTua,MAAOA,EACP2J,QAASA,EACTC,cArLA,SAAC3lB,EAAOqmB,GAEhCqB,EADchC,IAAYW,GAAsB,QAAVtK,EACrB,OAAS,OAC1B4L,EAAWtB,IAmLasC,SAAUX,EAAK1Y,OACfsW,UAAWA,KAGb,eAACgD,GAAA,EAAD,WACGZ,EAAKrmB,KAAI,SAACknB,GAAS,IAAD,QACjB,OACE,eAAC/C,GAAA,EAAD,CACEiD,OAAK,EACLC,UAAW,EAEX9mB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACoe,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACGuQ,GACC,IAAIkE,KAAKsT,EAAI5U,MAAMwB,mBACjB,YAIN,cAACuQ,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACGuQ,GAAa,UAACwX,EAAIkhB,MAAM,UAAX,aAAC,EAAcJ,QAE/B,cAAC3jB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACGuQ,GAAa,UAACwX,EAAIkhB,MAAM,UAAX,aAAC,EAAcJ,QAE/B,cAAC3jB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACGuQ,GAAa,UAACwX,EAAIkhB,MAAM,UAAX,aAAC,EAAcJ,QAE/B,cAAC3jB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACGuQ,GAAa,UAACwX,EAAIkhB,MAAM,UAAX,aAAC,EAAcJ,QAE/B,cAAC3jB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACGuQ,GAAcwX,EAAIgiB,gBAErB,cAAC7kB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACGuQ,GAAcwX,EAAIiiB,YAErB,cAAC9kB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACGuQ,GAAcwX,EAAIX,WA7BhBW,EAAIjW,QAkCboV,EAAK1Y,SAAWihB,EAAmB7gB,SACnC,cAACoW,GAAA,EAAD,CAAU5jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACihB,GAAA,EAAD,CACE0D,QAAS9D,GAAUtW,OACnBpN,MAAO,CAAE+jB,UAAW,UAFtB,SAIE,cAACtjB,EAAA,EAAD,CAAYnC,QAAQ,KAApB,+KASZ,cAAC,GAAD,CACEgmB,MAAO0B,EACP3B,iBA7OG,SAACvmB,EAAO2pB,GAC/B9B,EAAQ8B,IA6OYlD,wBA1OU,SAACzmB,GAC/B+nB,EAAY6B,SAAS5pB,EAAMslB,OAAO5tB,MAAOJ,EAASE,kBAClDqwB,EAAQ,IAyOYnB,KAAMA,EACNC,YAAamB,SAKnB,cAAChmB,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAACwb,GAAA,EAAD,CAAO9b,UAAWD,EAAQwuB,iBAA1B,SACE,eAACluB,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAzB,UACE,cAACtE,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAIC,GAAI,EAAvB,SACE,cAACkR,GAAA,EAAD,CACEojB,UAAQ,EACR91B,QAAQ,WACR7I,MAAM,sEACN0H,KAAK,WACL3H,MAAO2Z,GAAa,OAACk5B,QAAD,IAACA,OAAD,EAACA,EAAKQ,WAC1B33B,WAAS,EACT1V,KAAK,YAGT,cAACoE,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAIC,GAAI,EAAvB,SACE,cAACkR,GAAA,EAAD,CACEojB,UAAQ,EACR91B,QAAQ,WACR7I,MAAM,mFACN0H,KAAK,WACL3H,MAAO2Z,GAAa,OAACk5B,QAAD,IAACA,OAAD,EAACA,EAAKS,eAC1B53B,WAAS,EACT1V,KAAK,YAGT,cAACoE,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAIC,GAAI,EAAvB,SACE,cAACkR,GAAA,EAAD,CACEojB,UAAQ,EACR91B,QAAQ,WACR7I,MAAM,uEACN0H,KAAK,WACL3H,MAAO2Z,GAAa,OAACk5B,QAAD,IAACA,OAAD,EAACA,EAAKU,mBAC1B73B,WAAS,EACT1V,KAAK,8BCrXlBiD,oBAAW,SAACC,GAAD,MAAY,CACpCyD,KAAM,CACJgC,MAAO,QAET9B,MAAO,CACL8B,MAAO,OACP6D,aAActJ,EAAMwF,QAAQ,IAE9BihB,MAAO,CACL9d,SAAU,S,UCLRkB,GAAY9J,aAAW,SAACC,GAAD,MAAY,CACvCsqC,IAAK,CACH7kC,MAAO,GACPtB,OAAQ,GACR3C,aAAc,GACdkD,WAAY,IAEdb,KAAM,CACJ4B,MAAO,GACPtB,OAAQ,GACR3C,aAAc,GACd+F,OAAQ,WAEVgjC,KAAM,CACJnqC,QAAS,OACTE,WAAY,cAID,SAAS4Q,GAAT,GAA4C,IAAtB8Y,EAAqB,EAArBA,OAAQ5Y,EAAa,EAAbA,UACrCxQ,EAAUiJ,KAChB,EAAkCgF,qBAAlC,oBAAO27B,EAAP,KAAkBC,EAAlB,KAEMC,EAAS,SAACC,GACdF,EAAaE,IAKf,OAFAt2B,qBAAU,cAAU,IAGlB,eAACnT,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAzB,UACE,eAACtE,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAIN,UAAWD,EAAQ2pC,KAAtC,UACE,cAACj4B,GAAA,EAAD,CACEojB,UAAQ,EACR3+B,MAAM,2BACND,MAAOkzB,EAAOmC,KAAK1tB,MAAQ,IAC3BmB,QAAQ,WACR4S,WAAS,EACT1V,KAAK,UAEP,qBACE2vB,IAAG,UAAK/1B,EAASC,YAAd,YAA6BqzB,EAAOmC,KAAKO,MAC5CC,IAAK3C,EAAOmC,KAAKO,KACjB7rB,UAAWD,EAAQ0pC,SAGvB,eAACppC,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAIN,UAAWD,EAAQ2pC,KAAtC,UACE,cAACj4B,GAAA,EAAD,CACEojB,UAAQ,EACR3+B,MAAM,0DACND,MAAOkzB,EAAO4C,mBAAqB,IACnChtB,QAAQ,WACR4S,WAAS,EACT1V,KAAK,UAEP,cAAC,mBAAD,CACE4tC,OAAQ,kBAAMA,EAAO,sBACrB/tC,KAAMqtB,EAAO4C,kBAFf,SAIE,mBACE/rB,UAAU,uBACVS,MAAO,CAAEkF,YAAa,GAAIe,OAAQ,WAFpC,SAIiB,sBAAdijC,EAAoC,OAAS,cAIpD,eAACtpC,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAIN,UAAWD,EAAQ2pC,KAAtC,UACE,cAACj4B,GAAA,EAAD,CACEojB,UAAQ,EACR3+B,MAAM,0DACND,MAAOkzB,EAAO6C,eAAiB,IAC/BjtB,QAAQ,WACR4S,WAAS,EACT1V,KAAK,UAEP,cAAC,mBAAD,CACE4tC,OAAQ,kBAAMA,EAAO,kBACrB/tC,KAAMqtB,EAAO6C,cAFf,SAIE,mBACEhsB,UAAU,uBACVS,MAAO,CAAEkF,YAAa,GAAIe,OAAQ,WAFpC,SAIiB,kBAAdijC,EAAgC,OAAS,cAIhD,eAACtpC,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAIN,UAAWD,EAAQ2pC,KAAtC,UACE,cAACj4B,GAAA,EAAD,CACEojB,UAAQ,EACR3+B,MAAM,oDACND,MAAOkzB,EAAO8C,cAAgB,IAC9BltB,QAAQ,WACR4S,WAAS,EACT1V,KAAK,UAEP,cAAC,mBAAD,CACE4tC,OAAQ,kBAAMA,EAAO,iBACrB/tC,KAAMqtB,EAAO8C,aAFf,SAIE,mBACEjsB,UAAU,uBACVS,MAAO,CAAEkF,YAAa,GAAIe,OAAQ,WAFpC,SAIiB,iBAAdijC,EAA+B,OAAS,cAK/C,cAACtpC,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAACmR,GAAA,EAAD,CACEojB,UAAQ,EACR3+B,MAAM,6CACND,MAAOkzB,EAAOiD,aAAe,IAC7BrtB,QAAQ,WACR4S,WAAS,EACT1V,KAAK,YAIT,cAACoE,EAAA,EAAD,CACE1C,MAAI,EACJ2C,GAAI,GACJG,MAAO,CAAElB,QAAS,OAAQC,eAAgB,iBAH5C,SAKE,cAAC2B,EAAA,EAAD,CAAQpC,QAAQ,YAAYqC,MAAM,YAAYC,QAASkP,EAAvD,uDC1GR,IAAM4T,GAAY,CAChB,CACEhT,GAAI,OACJjb,MAAO,yCAET,CACEib,GAAI,OACJjb,MAAO,sBAET,CACEib,GAAI,OACJjb,MAAO,4BAET,CAAEib,GAAI,aAAcjb,MAAO,2DAC3B,CAAEib,GAAI,WAEF7Z,GAAc,CAClBC,SAAU,iCACVC,SAAU,iCACVE,OAAQ,wCAgMKqyC,GA7LQ,WACrB,IAAMhqC,EAAUd,KAChB,EAA0B+O,mBAAS,OAAnC,oBAAOsM,EAAP,KAAc2L,EAAd,KACA,EAA8BjY,mBAAS,QAAvC,oBAAOiW,EAAP,KAAgBiC,EAAhB,KACA,EAA4BlY,qBAA5B,oBAAO1H,EAAP,KAAe6f,EAAf,KACA,EAAwBnY,mBAAS,GAAjC,oBAAOiX,EAAP,KAAamB,EAAb,KACA,EAAgCpY,mBAASnY,EAASE,iBAAlD,oBAAOswB,EAAP,KAAiBC,EAAjB,KACA,EAAwBtY,mBAAS,IAAjC,oBAAOuY,EAAP,KAAaC,EAAb,KACA,EAA0BxY,mBAAS,GAAnC,oBAAOyY,EAAP,KAAcC,EAAd,KACA,EAA4B1Y,mBAAS,OAArC,oBAAO+G,EAAP,KAAei1B,EAAf,KAsBMC,EAAiBn8B,GAAO,CAC5BZ,OAAQ,MACRC,IAAI,WAAD,OAAakB,GAA2B,CACzC4W,OACA3K,QACA2J,UACAoC,WACA/f,SACA0jB,WAAYjV,OAIVm1B,EAAkB,WACtBniB,EAAmB,CAAEnqB,KAAM,mBAcvBipB,EAAO,yCAAG,6BAAA1a,EAAA,sEACS89B,EAAe79B,UADxB,OACR+9B,EADQ,OAEd3jB,EAAQ2jB,EAAS1tC,MACjBiqB,EAASyjB,EAAS1jB,OAHJ,2CAAH,qDAcb,OAJAjT,qBAAU,WACRqT,MACC,CAAC5B,EAAM3K,EAAOhU,EAAQ+f,EAAUtR,IAGjC,mCACG9E,GAAcpa,EAAS0D,gBAAgBskC,YACtC,cAAC9W,GAAA,EAAD,CAAOjlB,UAAU,OAAO1B,IAAI,EAA5B,SACE,8BACG6pC,EAAeh8B,QACd,cAAC,GAAD,CAAe6X,UAAW3B,KAE1B,qBAAKnkB,UAAWD,EAAQ6C,KAAxB,SACE,eAACkZ,GAAA,EAAD,CAAO9b,UAAWD,EAAQ+C,MAA1B,UACE,cAAC,GAAD,CACE9G,MAAM,sGACNknB,aA1DD,SAACjtB,GAChBkwB,EAAUlwB,GACVmwB,EAAQ,IAyDQ9C,cAAehd,IAEjB,qBAAKtG,UAAWD,EAAQyuB,IAAxB,SACE,eAACQ,GAAA,EAAD,CACE/4B,MAAO8e,EACPvD,SA1BA,SAAC4C,EAAGne,GACtB+zC,EAAU/zC,IA0BQg5B,eAAe,UACfC,UAAU,UACVC,UAAQ,EACRpwB,QAAQ,YANV,UAQE,cAACqwB,GAAA,EAAD,CAAKl5B,MAAM,+CAAYD,MAAM,QAC7B,cAACm5B,GAAA,EAAD,CAAKl5B,MAAM,6CAAUD,MAAM,aAC3B,cAACm5B,GAAA,EAAD,CAAKl5B,MAAM,iCAAQD,MAAM,aACzB,cAACm5B,GAAA,EAAD,CAAKl5B,MAAM,mDAAWD,MAAM,gBAIhC,cAAC+wB,GAAA,EAAD,CAAgBvmB,MAAO,CAAEpB,QAAS,UAAlC,SACE,eAAC4nB,GAAA,EAAD,CACEjnB,UAAWD,EAAQ6lB,MACnB3pB,KAAM,SACNwE,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CACEpG,QAASA,EACTua,MAAOA,EACP2J,QAASA,EACTC,cAtGI,SAAC3lB,EAAOqmB,GAEhCqB,EADchC,IAAYW,GAAsB,QAAVtK,EACrB,OAAS,OAC1B4L,EAAWtB,IAoGSsC,SAAUX,EAAK1Y,OACfsW,UAAWA,KAEb,eAACgD,GAAA,EAAD,WACGZ,EAAKrmB,KAAI,SAACknB,GACT,OACE,eAAC/C,GAAA,EAAD,CACEiD,OAAK,EACLC,UAAW,EAEX9mB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACoe,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAIgjB,aAEP,cAAC7lB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG/H,GAAY8vB,EAAI4C,cAEnB,cAACzF,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAIkE,MACH,qBACE7qB,MAAO,CAAEmE,MAAO,GAAItB,OAAQ,IAC5BwoB,IAAK1E,EAAIkE,KAAK1tB,KACdguB,IAAG,UAAK/1B,EAASC,YAAd,YAA6BsxB,EAAIkE,KAAKO,UAI/C,cAACtH,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAI2E,oBAGP,cAACxH,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACE,mBACEW,UAAU,uBACVS,MAAO,CAAEiG,OAAQ,WACjBrF,QAAS,kBAtGpB,SAAC+lB,GACpBW,EAAmB,CACjB/rB,MAAM,+CAAD,OAAcorB,EAAIgjB,YACvBruC,UAAW,cAAC,GAAD,CAAQwU,UAAW25B,EAAiB/gB,OAAQ/B,IACvDxpB,KAAM,gBACN3B,KAAM,IACNE,SAAS,EACTD,oBAAoB,IA+FuBmuC,CAAajjB,IAH9B,sBAvBGA,EAAIjW,QAkCboV,EAAK1Y,SAAWo8B,EAAeh8B,SAC/B,cAACoW,GAAA,EAAD,CAAU5jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACihB,GAAA,EAAD,CACE0D,QAAS,EACTxnB,MAAO,CAAE+jB,UAAW,UAFtB,SAIE,cAACtjB,EAAA,EAAD,CAAYnC,QAAQ,KAApB,+KASZ,cAAC,GAAD,CACEgmB,MAAO0B,EACP3B,iBA7JO,SAACvmB,EAAO2pB,GAC/B9B,EAAQ8B,IA6JQlD,wBA1Jc,SAACzmB,GAC/B+nB,EAAY6B,SAAS5pB,EAAMslB,OAAO5tB,MAAOJ,EAASE,kBAClDqwB,EAAQ,IAyJQnB,KAAMA,EACNC,YAAamB,gBC5N3Brd,GAAY9J,aAAW,SAACC,GAAD,MAAY,CACvCsqC,IAAK,CACH7kC,MAAO,GACPtB,OAAQ,GACR3C,aAAc,GACdkD,WAAY,IAEdb,KAAM,CACJ4B,MAAO,GACPtB,OAAQ,GACR3C,aAAc,GACd+F,OAAQ,WAEVgjC,KAAM,CACJnqC,QAAS,OACTE,WAAY,cAID,SAAS4Q,GAAT,GAAgD,IAAD,IAAzB5T,EAAyB,EAAzBA,KAAMU,EAAmB,EAAnBA,KAAMoT,EAAa,EAAbA,UACzCxQ,EAAUiJ,KAEhB,OACE,eAAC3I,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAzB,UACE,cAACtE,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAACmR,GAAA,EAAD,CACEojB,UAAQ,EACR3+B,MAAK,UAA0B,UAArBuG,EAAKk1B,YAA0B,oDAAc,qDACvD17B,MAAOwG,EAAKmB,MAAQ,IACpBmB,QAAQ,WACR4S,WAAS,EACT1V,KAAK,YAGT,cAACoE,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAACmR,GAAA,EAAD,CACEojB,UAAQ,EACR3+B,MAAM,iCACND,MACE2Z,GAAc,IAAIkE,KAAKrX,EAAK+V,MAAMwB,mBAAmB,WACrD,IAEFjV,QAAQ,WACR4S,WAAS,EACT1V,KAAK,YAGT,cAACoE,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAACmR,GAAA,EAAD,CACEojB,UAAQ,EACR3+B,MAAM,2BACND,MAAO2Z,GAAcnT,EAAKuY,QAAU,IACpCjW,QAAQ,WACR4S,WAAS,EACT1V,KAAK,aAGE,SAATkB,GAA4B,WAATA,IACnB,eAACkD,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAIG,MAAO,CAAElB,QAAS,QAArC,UACE,cAACkS,GAAA,EAAD,CACEojB,UAAQ,EACR3+B,MAAM,2BACND,OAAO,UAAAwG,EAAK0sB,OAAOmC,YAAZ,eAAkB1tB,OAAQ,IACjCmB,QAAQ,WACR4S,WAAS,EACT1V,KAAK,UAEP,qBACE2vB,IAAG,UAAK/1B,EAASC,YAAd,YAA6B2G,EAAK0sB,OAAOmC,KAAKO,MACjDC,IAAG,UAAErvB,EAAK0sB,OAAOmC,YAAd,aAAE,EAAkBO,KACvB7rB,UAAWD,EAAQ0pC,SAIf,SAATtsC,GACC,cAACkD,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAACmR,GAAA,EAAD,CACEojB,UAAQ,EACR3+B,MAAM,0DACND,MAAOwG,EAAK0sB,OAAO0I,iBAAmB,IACtC9yB,QAAQ,WACR4S,WAAS,EACT1V,KAAK,YAID,SAATkB,GACC,cAACkD,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAACmR,GAAA,EAAD,CACEojB,UAAQ,EACR3+B,MAAM,sEACND,MAAO2Z,GAAcnT,EAAK0sB,OAAO0J,eAAiB,IAClD9zB,QAAQ,WACR4S,WAAS,EACT1V,KAAK,YAID,WAATkB,GACC,cAACkD,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAACmR,GAAA,EAAD,CACEojB,UAAQ,EACR3+B,MAAM,8CACND,MAAO2Z,GAAcnT,EAAK0sB,OAAO2J,eAAiB,IAClD/zB,QAAQ,WACR4S,WAAS,EACT1V,KAAK,YAID,WAATkB,GACC,cAACkD,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAACmR,GAAA,EAAD,CACEojB,UAAQ,EACR3+B,MAAM,sEACND,MACE2Z,GACE,IAAIkE,KAAKrX,EAAK0sB,OAAOrU,eAAed,mBAAmB,WACpD,IAEPjV,QAAQ,WACR4S,WAAS,EACT1V,KAAK,YAKD,WAATkB,GACC,cAACkD,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAACmR,GAAA,EAAD,CACEojB,UAAQ,EACR3+B,MAAM,kCACND,MAAOwG,EAAK0sB,OAAO6J,aAAe,IAClCj0B,QAAQ,WACR4S,WAAS,EACT1V,KAAK,YAKX,cAACoE,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAACmR,GAAA,EAAD,CACEojB,UAAQ,EACR3+B,MAAM,6CACND,MAAOwG,EAAK2vB,aAAe,IAC3BrtB,QAAQ,WACR4S,WAAS,EACT1V,KAAK,YAIT,cAACoE,EAAA,EAAD,CACE1C,MAAI,EACJ2C,GAAI,GACJG,MAAO,CAAElB,QAAS,OAAQC,eAAgB,iBAH5C,SAKE,cAAC2B,EAAA,EAAD,CAAQpC,QAAQ,YAAYqC,MAAM,YAAYC,QAASkP,EAAvD,uDCnIR,IAAM4T,GAAY,CAChB,CACEhT,GAAI,OACJjb,MAAO,kCAET,CACEib,GAAI,OACJjb,MAAO,yCAET,CACEib,GAAI,OACJjb,MAAO,sBAET,CACEib,GAAI,QACJjb,MAAO,4BAGT,CAAEib,GAAI,WAGFyW,GAAQ,CACZ0iB,KAAM,qBACNC,OAAQ,eACRC,KAAM,4BAkMOC,GA/LO,WACpB,IAAM1qC,EAAUd,KAChB,EAA0B+O,mBAAS,OAAnC,oBAAOsM,EAAP,KAAc2L,EAAd,KACA,EAA8BjY,mBAAS,SAAvC,oBAAOiW,EAAP,KAAgBiC,EAAhB,KACA,EAA4BlY,qBAA5B,oBAAO1H,EAAP,KAAe6f,EAAf,KACA,EAAwBnY,mBAAS,GAAjC,oBAAOiX,EAAP,KAAamB,EAAb,KACMskB,EAAS/7B,GAAe,UAC9B,EAAgCX,mBAASnY,EAASE,iBAAlD,oBAAOswB,EAAP,KAAiBC,EAAjB,KACA,EAAwBtY,mBAAS,IAAjC,oBAAOuY,EAAP,KAAaC,EAAb,KACA,EAA0BxY,mBAAS,GAAnC,oBAAOyY,EAAP,KAAcC,EAAd,KAEA,GADgBjU,cACUzE,mBAAS,SAAnC,oBAAO7Q,EAAP,KAAa6sC,EAAb,KAqBMW,EAA0B78B,GAAO,CACrCZ,OAAQ,MACRC,IAAI,oBAAD,OAAsBkB,GAA2B,CAClD4W,OACA3K,QACA2J,UACAoC,WACA/f,SACAnJ,YAIE+sC,EAAkB,WACtBniB,EAAmB,CAAEnqB,KAAM,YAkBvBipB,EAAO,yCAAG,6BAAA1a,EAAA,sEACYw+B,EAAwBv+B,QAAQ,KAAMs+B,GADlD,OACRtM,EADQ,OAEd5X,EAAQ4X,EAAY3hC,MACpBiqB,EAAS0X,EAAY3X,OAHP,2CAAH,qDAcb,OAJAjT,qBAAU,WACRqT,MACC,CAAC5B,EAAM3K,EAAOhU,EAAQ+f,EAAUlpB,IAGjC,mCACG8S,GAAcpa,EAAS0D,gBAAgBskC,YACtC,cAAC9W,GAAA,EAAD,CAAOjlB,UAAU,OAAO1B,IAAI,EAA5B,SACE,8BACGuqC,EAAwB18B,QACvB,cAAC,GAAD,CAAe6X,UAAW3B,KAE1B,qBAAKnkB,UAAWD,EAAQ6C,KAAxB,SACE,eAACkZ,GAAA,EAAD,CAAO9b,UAAWD,EAAQ+C,MAA1B,UACE,cAAC,GAAD,CACE9G,MAAM,mHACNknB,aA7DD,SAACjtB,GAChBkwB,EAAUlwB,IA6DMqtB,cAAehd,IAEjB,qBAAKtG,UAAWD,EAAQyuB,IAAxB,SACE,eAACQ,GAAA,EAAD,CACE/4B,MAAOkH,EACPqU,SA1BA,SAAC4C,EAAGne,GACtB+zC,EAAU/zC,IA0BQg5B,eAAe,UACfC,UAAU,UACVC,UAAQ,EACRpwB,QAAQ,YANV,UAQE,cAACqwB,GAAA,EAAD,CAAKl5B,MAAM,2BAAOD,MAAM,SACxB,cAACm5B,GAAA,EAAD,CAAKl5B,MAAM,iCAAQD,MAAM,SACzB,cAACm5B,GAAA,EAAD,CAAKl5B,MAAM,eAAKD,MAAM,gBAI1B,cAAC+wB,GAAA,EAAD,CAAgBvmB,MAAO,CAAEpB,QAAS,UAAlC,SACE,eAAC4nB,GAAA,EAAD,CACEjnB,UAAWD,EAAQ6lB,MACnB3pB,KAAM,SACNwE,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CACEpG,QAASA,EACTua,MAAOA,EACP2J,QAASA,EACTC,cAxGI,SAAC3lB,EAAOqmB,GAEhCqB,EADchC,IAAYW,GAAsB,QAAVtK,EACrB,OAAS,OAC1B4L,EAAWtB,IAsGSsC,SAAUX,EAAK1Y,OACfsW,UAAWA,KAEb,eAACgD,GAAA,EAAD,WACGZ,EAAKrmB,KAAI,SAACknB,GACT,OACE,eAAC/C,GAAA,EAAD,CACEiD,OAAK,EACLC,UAAW,EAEX9mB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACoe,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACGuQ,GACC,IAAIkE,KAAKsT,EAAI5U,MAAMwB,mBACjB,YAIN,eAACuQ,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,cAA4B+nB,EAAIxpB,QAChC,cAAC2mB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACGuoB,GAAMR,EAAIjqB,QAEb,cAAConB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACGuQ,GACCpP,OAAO4mB,EAAIpS,OAAOoZ,oBAItB,cAAC7J,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACE,mBACEW,UAAU,uBACVS,MAAO,CAAEiG,OAAQ,WACjBrF,QAAS,kBAvGpB,SAAC+lB,GACpBW,EAAmB,CACjB/rB,MAAM,GAAD,OACiB,WAApBorB,EAAIuK,YAA2B,4EAAkB,4EAD9C,KAGL51B,UACE,cAAC,GAAD,CAAewU,UAAW25B,EAAiBztC,KAAM2qB,EAAKjqB,KAAMiqB,EAAIjqB,OAElES,KAAM,SACN3B,KAAM,IACNE,SAAS,EACTD,oBAAoB,IA4FuBmuC,CAAajjB,IAH9B,sBArBGA,EAAIjW,QAgCboV,EAAK1Y,SAAW88B,EAAwB18B,SACxC,cAACoW,GAAA,EAAD,CAAU5jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACihB,GAAA,EAAD,CACE0D,QAAS,EACTxnB,MAAO,CAAE+jB,UAAW,UAFtB,SAIE,cAACtjB,EAAA,EAAD,CAAYnC,QAAQ,KAApB,+KASZ,cAAC,GAAD,CACEgmB,MAAO0B,EACP3B,iBA7JO,SAACvmB,EAAO2pB,GAC/B9B,EAAQ8B,IA6JQlD,wBA1Jc,SAACzmB,GAC/B+nB,EAAY6B,SAAS5pB,EAAMslB,OAAO5tB,MAAOJ,EAASE,kBAClDqwB,EAAQ,IAyJQnB,KAAMA,EACNC,YAAamB,gBC1OlBnnB,gBAAW,SAACC,GAAD,MAAY,CACpCyD,KAAM,CACJgC,MAAO,QAET9B,MAAO,CACL8B,MAAO,OACP6D,aAActJ,EAAMwF,QAAQ,IAE9BihB,MAAO,CACL9d,SAAU,SCLRkB,GAAY9J,aAAW,SAACC,GAAD,MAAY,CACvCsqC,IAAK,CACH7kC,MAAO,GACPtB,OAAQ,GACR3C,aAAc,GACdkD,WAAY,IAEdb,KAAM,CACJ4B,MAAO,GACPtB,OAAQ,GACR3C,aAAc,GACd+F,OAAQ,WAEVgjC,KAAM,CACJnqC,QAAS,OACTE,WAAY,cAID,SAAS4Q,GAAT,GAA4C,IAAtB8Y,EAAqB,EAArBA,OAAQ5Y,EAAa,EAAbA,UACrCxQ,EAAUiJ,KAChB,EAAkCgF,qBAAlC,oBAAO27B,EAAP,KAAkBC,EAAlB,KAEMC,EAAS,SAACC,GACdF,EAAaE,IAKf,OAFAt2B,qBAAU,cAAU,IAGlB,eAACnT,EAAA,EAAD,CAAMjB,WAAS,EAACuF,QAAS,EAAzB,UACE,eAACtE,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAIN,UAAWD,EAAQ2pC,KAAtC,UACE,cAACj4B,GAAA,EAAD,CACEojB,UAAQ,EACR3+B,MAAM,2BACND,MAAOkzB,EAAOmC,KAAK1tB,MAAQ,IAC3BmB,QAAQ,WACR4S,WAAS,EACT1V,KAAK,UAEP,qBACE2vB,IAAG,UAAK/1B,EAASC,YAAd,YAA6BqzB,EAAOmC,KAAKO,MAC5CC,IAAK3C,EAAOmC,KAAKO,KACjB7rB,UAAWD,EAAQ0pC,SAGvB,eAACppC,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAIN,UAAWD,EAAQ2pC,KAAtC,UACE,cAACj4B,GAAA,EAAD,CACEojB,UAAQ,EACR3+B,MAAM,0DACND,MAAOkzB,EAAO4C,mBAAqB,IACnChtB,QAAQ,WACR4S,WAAS,EACT1V,KAAK,UAEP,cAAC,mBAAD,CACE4tC,OAAQ,kBAAMA,EAAO,sBACrB/tC,KAAMqtB,EAAO4C,kBAFf,SAIE,mBACE/rB,UAAU,uBACVS,MAAO,CAAEkF,YAAa,GAAIe,OAAQ,WAFpC,SAIiB,sBAAdijC,EAAoC,OAAS,cAIpD,eAACtpC,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAIN,UAAWD,EAAQ2pC,KAAtC,UACE,cAACj4B,GAAA,EAAD,CACEojB,UAAQ,EACR3+B,MAAM,0DACND,MAAOkzB,EAAO6C,eAAiB,IAC/BjtB,QAAQ,WACR4S,WAAS,EACT1V,KAAK,UAEP,cAAC,mBAAD,CACE4tC,OAAQ,kBAAMA,EAAO,kBACrB/tC,KAAMqtB,EAAO6C,cAFf,SAIE,mBACEhsB,UAAU,uBACVS,MAAO,CAAEkF,YAAa,GAAIe,OAAQ,WAFpC,SAIiB,kBAAdijC,EAAgC,OAAS,cAIhD,eAACtpC,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAIN,UAAWD,EAAQ2pC,KAAtC,UACE,cAACj4B,GAAA,EAAD,CACEojB,UAAQ,EACR3+B,MAAM,oDACND,MAAOkzB,EAAO8C,cAAgB,IAC9BltB,QAAQ,WACR4S,WAAS,EACT1V,KAAK,UAEP,cAAC,mBAAD,CACE4tC,OAAQ,kBAAMA,EAAO,iBACrB/tC,KAAMqtB,EAAO8C,aAFf,SAIE,mBACEjsB,UAAU,uBACVS,MAAO,CAAEkF,YAAa,GAAIe,OAAQ,WAFpC,SAIiB,iBAAdijC,EAA+B,OAAS,cAK/C,cAACtpC,EAAA,EAAD,CAAM1C,MAAI,EAAC2C,GAAI,GAAf,SACE,cAACmR,GAAA,EAAD,CACEojB,UAAQ,EACR3+B,MAAM,6CACND,MAAOkzB,EAAOiD,aAAe,IAC7BrtB,QAAQ,WACR4S,WAAS,EACT1V,KAAK,YAIT,cAACoE,EAAA,EAAD,CACE1C,MAAI,EACJ2C,GAAI,GACJG,MAAO,CAAElB,QAAS,OAAQC,eAAgB,iBAH5C,SAKE,cAAC2B,EAAA,EAAD,CAAQpC,QAAQ,YAAYqC,MAAM,YAAYC,QAASkP,EAAvD,uDCzGR,IAAM4T,GAAY,CAChB,CACEhT,GAAI,OACJjb,MAAO,yCAET,CACEib,GAAI,OACJjb,MAAO,kCAET,CACEib,GAAI,QACJjb,MAAO,qDAET,CAAEib,GAAI,aAAcjb,MAAO,0CAGvBoB,GAAc,CAClBC,SAAU,iCACVC,SAAU,iCACVE,OAAQ,wCAiLKsuB,GA9KE,WACf,IAAMjmB,EAAUd,KAChB,EAA0B+O,mBAAS,OAAnC,oBAAOsM,EAAP,KAAc2L,EAAd,KACA,EAA8BjY,mBAAS,QAAvC,oBAAOiW,EAAP,KAAgBiC,EAAhB,KACA,EAA4BlY,qBAA5B,oBAAO1H,EAAP,KAAe6f,EAAf,KACA,EAAwBnY,mBAAS,GAAjC,oBAAOiX,EAAP,KAAamB,EAAb,KACA,EAAgCpY,mBAASnY,EAASE,iBAAlD,oBAAOswB,EAAP,KAAiBC,EAAjB,KACA,EAAwBtY,mBAAS,IAAjC,oBAAOuY,EAAP,KAAaC,EAAb,KACA,EAA0BxY,mBAAS,GAAnC,oBAAOyY,EAAP,KAAcC,EAAd,KACM1a,EAAUyG,cA0BVm4B,EAAiB98B,GAAO,CAC5BZ,OAAQ,MACRC,IAAI,QAAD,OAAUkB,GAA2B,CACtC4W,OACA3K,QACA2J,UACAoC,WACA/f,cAmBEugB,EAAO,yCAAG,6BAAA1a,EAAA,sEACSy+B,EAAex+B,UADxB,OACR+9B,EADQ,OAEd3jB,EAAQ2jB,EAAS1tC,MACjBiqB,EAASyjB,EAAS1jB,OAHJ,2CAAH,qDAUb,OAJAjT,qBAAU,WACRqT,MACC,CAAC5B,EAAM3K,EAAOhU,EAAQ+f,IAGvB,mCACGpW,GAAcpa,EAAS0D,gBAAgBskC,YACtC,cAAC9W,GAAA,EAAD,CAAOjlB,UAAU,OAAO1B,IAAI,EAA5B,SACE,8BACGwqC,EAAe38B,QACd,cAAC,GAAD,CAAe6X,UAAW3B,KAE1B,qBAAKnkB,UAAWD,EAAQ6C,KAAxB,SACE,eAACkZ,GAAA,EAAD,CAAO9b,UAAWD,EAAQ+C,MAA1B,UACE,cAAC,GAAD,CACE9G,MAAM,2DACNgnB,MApDJ,WACZhX,EAAQQ,KAAR,+CAoDgB0W,aA1DD,SAACjtB,GAChBkwB,EAAUlwB,GACVmwB,EAAQ,IAyDQ9C,cAAehd,IAGjB,cAAC0gB,GAAA,EAAD,CAAgBvmB,MAAO,CAAEpB,QAAS,UAAlC,SACE,eAAC4nB,GAAA,EAAD,CACEjnB,UAAWD,EAAQ6lB,MACnB3pB,KAAM,SACNwE,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CACEpG,QAASA,EACTua,MAAOA,EACP2J,QAASA,EACTC,cAvFI,SAAC3lB,EAAOqmB,GAEhCqB,EADchC,IAAYW,GAAsB,QAAVtK,EACrB,OAAS,OAC1B4L,EAAWtB,IAqFSsC,SAAUX,EAAK1Y,OACfsW,UAAWA,KAEb,eAACgD,GAAA,EAAD,WACGZ,EAAKrmB,KAAI,SAACknB,GACT,OACE,eAAC/C,GAAA,EAAD,CACEiD,OAAK,EACLC,UAAW,EAEX9mB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACoe,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG+nB,EAAIgjB,aAEP,cAAC7lB,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACGuQ,GACC,IAAIkE,KAAKsT,EAAI5U,MAAMwB,mBACjB,YAIN,cAACuQ,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACGuQ,GACCpP,OAAO4mB,EAAIpS,OAAOoZ,oBAGtB,cAAC7J,GAAA,EAAD,CAAWllB,QAAQ,OAAnB,SACG/H,GAAY8vB,EAAI4C,gBAnBd5C,EAAIjW,QAkCboV,EAAK1Y,SAAW+8B,EAAe38B,SAC/B,cAACoW,GAAA,EAAD,CAAU5jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACihB,GAAA,EAAD,CACE0D,QAAS,EACTxnB,MAAO,CAAE+jB,UAAW,UAFtB,SAIE,cAACtjB,EAAA,EAAD,CAAYnC,QAAQ,KAApB,+KASZ,cAAC,GAAD,CACEgmB,MAAO0B,EACP3B,iBA9IO,SAACvmB,EAAO2pB,GAC/B9B,EAAQ8B,IA8IQlD,wBA3Ic,SAACzmB,GAC/B+nB,EAAY6B,SAAS5pB,EAAMslB,OAAO5tB,MAAOJ,EAASE,kBAClDqwB,EAAQ,IA0IQnB,KAAMA,EACNC,YAAamB,gBC7FlBwkB,OA5Ef,SAAgBxhC,GACd,IAAItJ,EAAUiJ,KAEV0J,EAAc5H,KAElB,OACE,qBAAK9K,UAAWD,EAAQ6C,KAAxB,SACE,qCACE,cAAC2P,GAAD,CAAQvG,QAAS3C,EAAM2C,UACvB,cAAC,GAAD,IACA,sBACEhM,UAAW2J,IAAW5J,EAAQ0E,QAAT,eAClB1E,EAAQ+E,aAAe4N,EAAYjI,kBAFxC,UAKE,qBAAKzK,UAAWD,EAAQuF,cACxB,eAAC,IAAD,WACE,cAAC,IAAD,CAAOwlC,KAAK,iBAAiB/uC,UAAW2hB,KAExC,cAAC,IAAD,CAAOotB,KAAK,iBAAiB/uC,UAAWgvC,KACxC,cAAC,IAAD,CAAOD,KAAK,mBAAmB/uC,UAAWivC,KAE1C,cAAC,IAAD,CAAOF,KAAK,qBAAqB/uC,UAAWkvC,KAC5C,cAAC,IAAD,CAAOH,KAAK,uBAAuB/uC,UAAWmvC,KAC9C,cAAC,IAAD,CACEJ,KAAK,0BACL/uC,UAAWovC,KAGb,cAAC,IAAD,CAAOL,KAAK,qBAAqB/uC,UAAWqvC,KAC5C,cAAC,IAAD,CAAON,KAAK,uBAAuB/uC,UAAWsvC,KAC9C,cAAC,IAAD,CAAOP,KAAK,oBAAoB/uC,UAAW8sC,KAE3C,cAAC,IAAD,CAAOiC,KAAK,mBAAmB/uC,UAAWuvC,KAC1C,cAAC,IAAD,CAAOR,KAAK,qBAAqB/uC,UAAWwvC,KAE5C,cAAC,IAAD,CAAOT,KAAK,iBAAiB/uC,UAAWyvC,KACxC,cAAC,IAAD,CAAOV,KAAK,mBAAmB/uC,UAAW0vC,KAC1C,cAAC,IAAD,CAAOX,KAAK,wBAAwB/uC,UAAW2vC,KAE/C,cAAC,IAAD,CAAOZ,KAAK,mBAAmB/uC,UAAW4vC,KAC1C,cAAC,IAAD,CAAOb,KAAK,qBAAqB/uC,UAAW6vC,KAE5C,cAAC,IAAD,CAAOd,KAAK,mBAAmB/uC,UAAW4vC,KAC1C,cAAC,IAAD,CAAOb,KAAK,qBAAqB/uC,UAAW6vC,KAE5C,cAAC,IAAD,CAAOd,KAAK,iBAAiB/uC,UAAW8vC,KACxC,cAAC,IAAD,CAAOf,KAAK,mBAAmB/uC,UAAW+vC,KAE1C,cAAC,IAAD,CAAOhB,KAAK,oBAAoB/uC,UAAWgwC,KAC3C,cAAC,IAAD,CAAOjB,KAAK,sBAAsB/uC,UAAWiwC,KAC7C,cAAC,IAAD,CAAOlB,KAAK,oBAAoB/uC,UAAWkwC,KAE3C,cAAC,IAAD,CAAOnB,KAAK,oBAAoB/uC,UAAWmwC,KAC3C,cAAC,IAAD,CAAOpB,KAAK,sBAAsB/uC,UAAWowC,KAE7C,cAAC,IAAD,CAAOrB,KAAK,oBAAoB/uC,UAAWo5B,KAC3C,cAAC,IAAD,CAAO2V,KAAK,sBAAsB/uC,UAAWqwC,KAC7C,cAAC,IAAD,CAAOtB,KAAK,wBAAwB/uC,UAAWswC,KAE/C,cAAC,IAAD,CAAOvB,KAAK,kBAAkB/uC,UAAWuwC,KACzC,cAAC,IAAD,CAAOxB,KAAK,oBAAoB/uC,UAAWwwC,KAE3C,cAAC,IAAD,CAAOzB,KAAK,eAAe/uC,UAAWywC,KACtC,cAAC,IAAD,CAAO1B,KAAK,gBAAgB/uC,UAAW0wC,KAEvC,cAAC,IAAD,CAAO3B,KAAK,eAAe/uC,UAAW2wC,KACtC,cAAC,IAAD,CAAO5B,KAAK,sBAAsB/uC,UAAW4wC,KAC7C,cAAC,IAAD,CAAO7B,KAAK,qBAAqB/uC,UAAWguC,iBC5GzC7qC,gBAAW,SAAAC,GAAK,MAAK,CAClCC,UAAW,CACTkE,OAAQ,QACRsB,MAAO,QACPrF,QAAS,OACT4H,cAAe,SACf3H,eAAgB,SAChBC,WAAY,SACZsB,gBAAiB5B,EAAMQ,QAAQ4B,QAAQQ,KACvCnB,SAAU,WACVE,IAAK,EACLE,KAAM,GAER0E,SAAS,aACPnG,QAAS,OACTE,WAAY,SACZgJ,aAActJ,EAAMwF,QAAQ,KAC3BxF,EAAM2G,YAAYC,KAAK,MAAQ,CAC9BxG,QAAS,SAGbqtC,aAAc,CACZhnC,WAAY,IACZxE,MAAO,QACPyC,WAAY1E,EAAMwF,QAAQ,IAE5BkoC,aAAc,CACZjoC,MAAO,GACPe,YAAaxG,EAAMwF,QAAQ,IAE7BmoC,UAAW,CACTpsC,UAAWvB,EAAMmD,cAAcE,WAC/BjD,QAAS,OACT4H,cAAe,SACf1H,WAAY,SACZ8vB,WAAYpwB,EAAMwF,QAAQ,GAC1BuU,cAAe/Z,EAAMwF,QAAQ,GAC7BnB,YAAarE,EAAMwF,QAAQ,GAC3BwB,aAAchH,EAAMwF,QAAQ,GAC5BH,SAAU,KAEZuoC,QAAS,CACPtkC,aAActJ,EAAMwF,QAAQ,IAC5B6f,UAAW,UAEbwoB,UAAW,CACTtpC,SAAU,IACVkC,WAAY,KAEdqnC,WAAY,CACVrnC,WAAY,IACZxE,MAAOjC,EAAMQ,QAAQ7D,KAAKqG,MAE5B+qC,WAAY,CACVxsC,UAAWvB,EAAMmD,cAAcC,OAC/BmG,cAAe,OACfhF,SAAU,QC1DC,OAA0B,iCCW1B,SAASgH,KACtB,IAAI3K,EAAUiJ,KAEd,OACE,eAAC3I,EAAA,EAAD,CAAMjB,WAAS,EAACY,UAAWD,EAAQX,UAAnC,UACE,sBAAKY,UAAWD,EAAQ2F,SAAxB,UACE,qBAAK1F,UAAWD,EAAQ8sC,aAAcjhB,IAAKC,GAAMC,IAAI,SACrD,cAAC5qB,EAAA,EAAD,CAAYnC,QAAQ,KAAKqC,MAAM,QAAQpB,UAAWD,EAAQ6sC,aAA1D,+BAIF,eAAC9wB,GAAA,EAAD,CAAO/b,QAAS,CAAE6C,KAAM7C,EAAQ+sC,WAAhC,UACE,cAAC5rC,EAAA,EAAD,CACEnC,QAAQ,KACRqC,MAAM,UACNpB,UAAW2J,IAAW5J,EAAQgtC,QAAShtC,EAAQitC,WAHjD,iBAOA,cAAC9rC,EAAA,EAAD,CAAYnC,QAAQ,KAAKqC,MAAM,UAAUpB,UAAWD,EAAQgtC,QAA5D,2EAGA,cAAC7rC,EAAA,EAAD,CACEnC,QAAQ,KACRqC,MAAM,OACNgI,gBAAgB,YAChBpJ,UAAW2J,IAAW5J,EAAQgtC,QAAShtC,EAAQktC,YAJjD,wDAQA,cAAC9rC,EAAA,EAAD,CACEpC,QAAQ,YACRqC,MAAM,UACNrF,UAAWub,IACXE,GAAG,IACHvb,KAAK,QACL+D,UAAWD,EAAQmtC,WANrB,gCCvCOhuC,oBAAW,SAACC,GAAD,YAAY,CACpCC,UAAW,CACTkE,OAAQ,QACRsB,MAAO,QACPrF,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZmB,SAAU,WACVE,IAAK,EACLE,KAAM,EACNia,SAAU,UAEZjf,MAAO,CACLuD,QAAS,OACTE,WAAY,WACZgJ,aAAc,GACd,OAAQ,CACND,OAAQ,UAEV,OAAQ,CACN6f,KAAM,IAGV8kB,gBAAiB,CACfvsC,SAAU,WACVgE,MAAO,OACPtB,OAAQ,OACR5F,OAAQ,mBAEV0vC,mBAAiB,GACfxsC,SAAU,WACVgE,MAAO,MACPtB,OAAQ,OACR/D,QAAS,OACT4H,cAAe,SACf3H,eAAgB,SAChBC,WAAY,UAPG,cAQdN,EAAM2G,YAAYC,KAAK,MAAQ,CAC9BnB,MAAO,QATM,cAWdzF,EAAM2G,YAAYC,KAAK,MAAQ,CAC9BxG,QAAS,SAZI,GAejB8tC,cAAe,CACbzoC,MAAO,IACP6D,aAActJ,EAAMwF,QAAQ,GAC5B/D,SAAU,YAEZgsC,aAAa,aACXhsC,SAAU,WACVQ,MAAO,QACPwE,WAAY,IACZlC,SAAU,IACTvE,EAAM2G,YAAYC,KAAK,MAAQ,CAC9BrC,SAAU,KAGd4pC,cAAc,aACZ1oC,MAAO,MACPtB,OAAQ,OACR/D,QAAS,OACT4H,cAAe,SACf3H,eAAgB,SAChBC,WAAY,UACXN,EAAM2G,YAAYC,KAAK,MAAQ,CAC9BnB,MAAO,QAGX2oC,KAAM,CACJ3oC,MAAO,KAET4pB,IAAK,CACH5oB,WAAY,IACZlC,SAAU,IAEZ8pC,SAAU,CACR5nC,WAAY,IACZ4e,UAAW,SACXnd,UAAWlI,EAAMwF,QAAQ,IAE3B8oC,YAAa,CACX7nC,WAAY,IACZ4e,UAAW,SACXnd,UAAWlI,EAAMwF,QAAQ,IAE3B+oC,aAAc,CACZrmC,UAAWlI,EAAMwF,QAAQ,GACzBjE,UAAWvB,EAAMmD,cAAcC,OAC/BxB,gBAAiB,QACjB6D,MAAO,OACP8D,cAAe,QAEjBilC,qBAAsB,CACpBtmC,UAAW,GAEbumC,WAAY,CACVhpC,MAAO,GACPe,YAAaxG,EAAMwF,QAAQ,IAE7BkpC,wBAAyB,CACvBxmC,UAAWlI,EAAMwF,QAAQ,KACzBrB,OAAQ,GACR/D,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAEdquC,oBAAqB,CACnBxqC,OAAQ,GACRoF,cAAe,QAEjBqlC,qBAAsB,CACpB1mC,UAAWlI,EAAMwF,QAAQ,GACzB8D,aAActJ,EAAMwF,QAAQ,GAC5BpF,QAAS,OACTE,WAAY,UAEduuC,gBAAiB,CACfxqC,YAAarE,EAAMwF,QAAQ,GAC3BwB,aAAchH,EAAMwF,QAAQ,IAE9BspC,YAAa,CACXvpC,SAAU,EACVpB,OAAQ,EACRvC,gBAAiB5B,EAAMQ,QAAQ7D,KAAKqG,KAAO,MAE7C+rC,aAAc,CACZ1pB,UAAW,UAEb2pB,mBAAoB,CAClB,WAAY,CACVC,kBAAmBjvC,EAAMQ,QAAQ4B,QAAQ1B,OAE3C,UAAW,CACTuuC,kBAAmBjvC,EAAMQ,QAAQ4B,QAAQQ,MAE3C,iBAAkB,CAChBqsC,kBAAkB,GAAD,OAAKjvC,EAAMQ,QAAQ4B,QAAQ1B,MAA3B,iBAGrBwuC,UAAW,CACTD,kBAAmBjvC,EAAMQ,QAAQyC,WAAWvC,OAE9CyuC,YAAa,CACX1pC,MAAO,OACPyC,UAAWlI,EAAMwF,QAAQ,GACzBpF,QAAS,OACTC,eAAgB,gBAChBC,WAAY,UAEd8uC,aAAc,CACZ7lC,cAAe,OACf9C,WAAY,KAEd4oC,YAAa,CACX3qC,WAAY1E,EAAMwF,QAAQ,IAE5B8pC,UAAU,aACRpnC,UAAWlI,EAAMwF,QAAQ,GACzBkB,WAAY,UACX1G,EAAM2G,YAAYc,GAAG,MAAQ,CAC5BhG,SAAU,WACVqb,OAAQ9c,EAAMwF,QAAQ,SCpKb,OAA0B,iCCA1B,OAA0B,gCCmJ1B0T,oBAlIf,SAAehP,GACb,IAAMtJ,EAAUiJ,KACV4J,EAAejH,KACfE,EAAeiC,GAAO,CAC1BZ,OAAQ,OACRC,IAAK,eAEP,EAAkCa,oBAAS,GAA3C,oBAAO0gC,EAAP,KAAkBziC,EAAlB,KACA,EAA0B+B,mBAAS,MAAnC,oBAAc9B,GAAd,WAEA,EAA0C8B,mBAAS,IAAnD,oBAAO2gC,EAAP,KAAsBC,EAAtB,KACA,EAA0C5gC,mBAAS,IAAnD,oBAAO6gC,EAAP,KAAsBC,EAAtB,KAoBA,OAJAt7B,qBAAU,WACRu7B,OACC,IAGD,eAAC1uC,EAAA,EAAD,CAAMjB,WAAS,EAACY,UAAWD,EAAQX,UAAnC,UACE,sBAAKY,UAAWD,EAAQqtC,kBAAxB,UACE,qBAAKxhB,IAAKojB,GAAMljB,IAAI,OAAO9rB,UAAWD,EAAQotC,kBAC9C,qBAAKvhB,IAAKC,GAAMC,IAAI,OAAO9rB,UAAWD,EAAQstC,gBAC9C,cAACnsC,EAAA,EAAD,CAAYlB,UAAWD,EAAQ6sC,aAA/B,+HAIF,sBAAK5sC,UAAWD,EAAQutC,cAAxB,UACE,qBAAKttC,UAAWD,EAAQwtC,KAAxB,SACE,eAAC,IAAMxxB,SAAP,WACE,sBAAK/b,UAAWD,EAAQ/D,MAAxB,UACE,cAAC4Y,GAAA,EAAD,IACA,cAAC1T,EAAA,EAAD,CAAYnC,QAAQ,KAAKiB,UAAWD,EAAQytC,SAA5C,kFAGA,cAAC54B,GAAA,EAAD,OAGF,cAACnD,GAAA,EAAD,CACEvb,MAAM,0DACN6I,QAAQ,WACRoS,GAAG,WACHa,WAAY,CACVjS,QAAS,CACPkvC,MAAOlvC,EAAQsuC,YAGnBp4C,MAAO04C,EACPn9B,SAAU,SAAC4C,GAAD,OAAOw6B,EAAiBx6B,EAAEyP,OAAO5tB,QAC3CuS,OAAO,SACPmJ,WAAS,IAEX,cAACF,GAAA,EAAD,CACEvb,MAAM,+CACN6I,QAAQ,WACRoS,GAAG,WACHa,WAAY,CACVjS,QAAS,CACPkvC,MAAOlvC,EAAQsuC,YAGnBp4C,MAAO44C,EACPr9B,SAAU,SAAC4C,GAAD,OAAO06B,EAAiB16B,EAAEyP,OAAO5tB,QAC3CuS,OAAO,SACPrL,KAAK,WACLwU,WAAS,EACTu9B,WAlES,SAAU3wC,GACT,KAAhBA,EAAM4wC,OAAgBN,GAAiBF,GACzC/iC,GACEC,EACA+G,EACA+7B,EACAE,EACAxlC,EAAM2C,QACNC,EACAC,MA2DI,qBAAKlM,UAAWD,EAAQuuC,YAAxB,SACGI,EACC,cAACnmB,GAAA,EAAD,CAAkBtsB,KAAM,GAAI+D,UAAWD,EAAQyuC,cAE/C,cAACrtC,EAAA,EAAD,CACEwQ,WAAS,EACTkjB,SAC2B,IAAzB8Z,EAAc9gC,QAAyC,IAAzBghC,EAAchhC,OAE9CxM,QAAS,kBACPuK,GACEC,EACA+G,EACA+7B,EACAE,EACAxlC,EAAM2C,QACNC,EACAC,IAGJnN,QAAQ,YACRqC,MAAM,UACNnF,KAAK,QAlBP,yFAiCR,cAACiF,EAAA,EAAD,CACEE,MAAM,UACNpB,UAAWD,EAAQ0uC,UACnB1vC,QAAQ,UAHV,6T,kCC1HO,SAASqwC,KACtB,IAAM7jC,EAAoBG,KAApBH,gBAEN,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO8jC,OAAK,EAACvE,KAAK,IAAIv5B,OAAQ,kBAAM,cAAC,IAAD,CAAUiG,GAAG,sBACjD,cAAC,IAAD,CACE63B,OAAK,EACLvE,KAAK,OACLv5B,OAAQ,kBAAM,cAAC,IAAD,CAAUiG,GAAG,sBAG7B,cAAC83B,EAAD,CAAcxE,KAAK,OAAO/uC,UAAW8uC,KACrC,cAAC0E,EAAD,CAAazE,KAAK,SAAS/uC,UAAWyzC,KACtC,cAAC,IAAD,CAAOzzC,UAAW2O,UAOxB,SAAS4kC,EAAT,GAA+C,IAAvBvzC,EAAsB,EAAtBA,UAAc0zC,EAAQ,kBAC5C,OACE,cAAC,IAAD,2BACMA,GADN,IAEEl+B,OAAQ,SAAClI,GAAD,OACNkC,EACElB,IAAMqlC,cAAc3zC,EAAWsN,GAE/B,cAAC,IAAD,CACEmO,GAAI,CACFR,SAAU,SACV/Z,MAAO,CACL0oB,KAAMtc,EAAM0F,iBAU5B,SAASwgC,EAAT,GAA8C,IAAvBxzC,EAAsB,EAAtBA,UAAc0zC,EAAQ,kBAC3C,OACE,cAAC,IAAD,2BACMA,GADN,IAEEl+B,OAAQ,SAAClI,GAAD,OACNkC,EACE,cAAC,IAAD,CACEiM,GAAI,CACFR,SAAU,OAId3M,IAAMqlC,cAAc3zC,EAAWsN,QCzDvBmL,QACW,cAA7B1F,OAAOC,SAAS4gC,UAEe,UAA7B7gC,OAAOC,SAAS4gC,UAEhB7gC,OAAOC,SAAS4gC,SAASC,MACvB,2D,sDCbAC,GAAM5qC,aAAO,CAAE6qC,QAAQ,GAAD,mBAAMC,eAAYD,SAAlB,CAA2BE,WAMxCC,OAJf,SAAa5mC,GACX,OAAO,cAAC6mC,GAAA,EAAD,CAAgBL,IAAKA,GAArB,SAA2BxmC,EAAMF,Y,wCCW1C6/B,KAAQmH,YAAY,CAAEC,QAAS,iBAAkBC,kBAAkB,IAEnEC,IAAS/+B,OACP,cAAC,KAAD,CAAyBg/B,MAAOC,KAAavH,OAAO,KAApD,SACE,cAAC,IAAD,CAAUlrC,MAAOA,EAAjB,SACE,cAAC4M,GAAD,UACE,cAACc,GAAD,UACE,cAACglC,EAAA,EAAD,CAAetxC,MAAOuxC,EAAOruC,QAA7B,SACE,eAAC,GAAD,WACE,cAACsuC,EAAA,EAAD,IACA,cAACvB,GAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,iBAOZwB,SAASC,eAAe,SF2FpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.6689ffb1.chunk.js","sourcesContent":["const Constant = {\r\n  // API_ADDRESS: \"http://185.204.197.95:5000/\",\r\n  API_ADDRESS: \"http://account.toosbloor.ir\",\r\n  TABLE_PAGE_SIZE: 10,\r\n  EMPLOYEE_CONTACRT: [\r\n    { value: \"FACTORY\", label: \"کارخانه\" },\r\n    { value: \"DEPOT\", label: \"انبار\" },\r\n  ],\r\n  TRAFFIC_STATUS: {\r\n    PRESENT: \"حاضر\",\r\n    APSET: \"غایب\",\r\n  },\r\n  UNITS_MAP: {\r\n    KILOGRAM: \"کیلوگرم\",\r\n    GRAM: \"گرم\",\r\n    TON: \"تن\",\r\n    BOX: \"کارتن\",\r\n    SHEL: \"شل\",\r\n    CUBICMETERS: \"مترمکعب\",\r\n    PALLET: \"پالت\",\r\n  },\r\n  ACTION_TYPES: {\r\n    SHOW_ALERT: \"SHOW_ALERT\",\r\n    HIDE_ALERT: \"HIDE_ALERT\",\r\n    SHOW_DIALOG: \"SHOW_DIALOG\",\r\n    HIDE_DIALOG: \"HIDE_DIALOG\",\r\n    LOG_IN_USER: \"LOG_IN_USER\",\r\n    LOG_OUT_USER: \"LOG_OUT_USER\",\r\n    GET_UNITS: \"GET_UNITS\",\r\n  },\r\n  PERSON_TYPE: {\r\n    EMPLOYEE: \"employee\",\r\n    CUSTOMER: \"customer\",\r\n    USER: \"user\",\r\n    DRIVER: \"driver\",\r\n    PERSON: \"person\",\r\n  },\r\n  STORAGE: {\r\n    CURRENT_USER: \"CURRENT_USER\",\r\n    TOKEN: \"TOKEN\",\r\n    MODE: \"MODE\",\r\n    CURRENT_LINK: \"CURRENT_LINK\",\r\n    PRODUCT_UNITS: \"PRODUCT_UNITS\",\r\n  },\r\n  VALIDATION: {\r\n    REQUIRED: \"این فیلد الزامی است\",\r\n    MOBILE_NUMBER: \"موبایل باید 11 عدد داشته باشد\",\r\n    PASSWORD: \"رمز عبور باید حداقل 5 حرف یا رقم باشد\",\r\n    CARD_NUMBER: \"شماره کارت باید 16 رقم باشد\",\r\n    POSITIVE_NUMBER: \"این عدد باید مثبت باشد\",\r\n  },\r\n  MESSAGES: {},\r\n  ERROR_MESSAGE: {\r\n    BAD_CREDENTIAL: \"نام کاربری یا رمز عبور اشتباه است\",\r\n    ACCESS_DENIED: \"شما دسترسی لازم برای تغییر با نمایش این قسمت را ندارید\",\r\n  },\r\n  PERSON_STATUS: {\r\n    DEBTOR: \"بدهکار\",\r\n    NODEBT: \"بی حساب\",\r\n    CREDITOR: \"طلبکار\",\r\n  },\r\n  PAYMENT_TYPE: {\r\n    INCOME: \"دریافتی\",\r\n    OUTCOME: \"پرداختی\",\r\n    ALL: \"دریافتی و پرداختی\",\r\n  },\r\n  INVOICE_TYPE: {\r\n    SELL: \"فروش\",\r\n    BUY: \"خرید\",\r\n  },\r\n  ALL_PERMISSIONS: {\r\n    ATTENDANCE_SHOW: \"ATTENDANCE_SHOW\",\r\n    ATTENDANCE_EDIT: \"ATTENDANCE_EDIT\",\r\n    ATTENDANCE_ADMIN: \"ATTENDANCE_ADMIN\",\r\n    USER_SHOW: \"USER_SHOW\",\r\n    USER_EDIT: \"USER_EDIT\",\r\n    USER_DELETE: \"USER_DELETE\",\r\n    CUSTOMER_SHOW: \"CUSTOMER_SHOW\",\r\n    CUSTOMER_EDIT: \"CUSTOMER_EDIT\",\r\n    CUSTOMER_DELETE: \"CUSTOMER_DELETE\",\r\n    DRIVER_SHOW: \"DRIVER_SHOW\",\r\n    DRIVER_EDIT: \"DRIVER_EDIT\",\r\n    DRIVER_DELETE: \"DRIVER_DELETE\",\r\n    EMPLOYEE_SHOW: \"EMPLOYEE_SHOW\",\r\n    EMPLOYEE_EDIT: \"EMPLOYEE_EDIT\",\r\n    EMPLOYEE_DELETE: \"EMPLOYEE_DELETE\",\r\n    PRODUCT_SHOW: \"PRODUCT_SHOW\",\r\n    PRODUCT_EDIT: \"PRODUCT_EDIT\",\r\n    PRODUCT_DELETE: \"PRODUCT_DELETE\",\r\n    DEPOT_SHOW: \"DEPOT_SHOW\",\r\n    DEPOT_EDIT: \"DEPOT_EDIT\",\r\n    DEPOT_DELETE: \"DEPOT_DELETE\",\r\n    ACCOUNT_SHOW: \"ACCOUNT_SHOW\",\r\n    ACCOUNT_EDIT: \"ACCOUNT_EDIT\",\r\n    ACCOUNT_DELETE: \"ACCOUNT_DELETE\",\r\n    PAYMENT_SHOW: \"PAYMENT_SHOW\",\r\n    PAYMENT_EDIT: \"PAYMENT_EDIT\",\r\n    INVOICE_SHOW: \"INVOICE_SHOW\",\r\n    INVOICE_EDIT: \"INVOICE_EDIT\",\r\n    CASH_DESK_SHOW: \"CASH_DESK_SHOW\",\r\n    CASH_DESK_EDIT: \"CASH_DESK_EDIT\",\r\n    CASH_DESK_DELETE: \"CASH_DESK_DELETE\",\r\n    CHEQUE_SHOW: \"CHEQUE_SHOW:\",\r\n    CHEQUE_EDIT: \"CHEQUE_EDIT\",\r\n    CHEQUE_DELETE: \"CHEQUE_DELETE\",\r\n  },\r\n  PERMISSIONS: [\r\n    { value: \"ATTENDANCE_ADMIN\", label: \"ویرایش حضور و غیاب\" },\r\n    { value: \"ATTENDANCE_SHOW\", label: \"لیست حضور و غیاب  \" },\r\n    { value: \"ATTENDANCE_EDIT\", label: \"ثبت حضور و غیاب \" },\r\n    { value: \"PAYMENT_SHOW\", label: \"لیست پرداختی و دریافتی\" },\r\n    { value: \"PAYMENT_EDIT\", label: \"ویرایش پرداختی و دریافتی \" },\r\n    { value: \"INVOICE_SHOW\", label: \"لیست فاکتور ها\" },\r\n    { value: \"INVOICE_EDIT\", label: \"ویرایش فاکتور ها\" },\r\n    { value: \"CASH_DESK_SHOW\", label: \"لیست صندوق ها\" },\r\n    { value: \"CASH_DESK_EDIT\", label: \"ویرایش صندوق ها\" },\r\n    { value: \"CASH_DESK_DELETE\", label: \"حذف صندوق ها\" },\r\n    { value: \"CHEQUE_SHOW\", label: \"لیست چک ها\" },\r\n    { value: \"CHEQUE_EDIT\", label: \"ویرایش چک ها\" },\r\n    { value: \"CHEQUE_DELETE\", label: \"حذف چک ها\" },\r\n    { value: \"USER_SHOW\", label: \"لیست کاربران\" },\r\n    { value: \"USER_EDIT\", label: \"ویرایش کاربران\" },\r\n    { value: \"USER_DELETE\", label: \"حذف کاربران\" },\r\n    { value: \"EMPLOYEE_SHOW\", label: \"لیست پرسنل\" },\r\n    { value: \"EMPLOYEE_EDIT\", label: \"ویرایش پرسنل\" },\r\n    { value: \"EMPLOYEE_DELETE\", label: \"حذف پرسنل\" },\r\n    { value: \"PRODUCT_SHOW\", label: \"لیست محصولات\" },\r\n    { value: \"PRODUCT_EDIT\", label: \"ویرایش محصولات\" },\r\n    { value: \"PRODUCT_DELETE\", label: \"حذف محصولات\" },\r\n    { value: \"CUSTOMER_SHOW\", label: \"لیست مشتریان\" },\r\n    { value: \"CUSTOMER_EDIT\", label: \"ویرایش مشتریان\" },\r\n    { value: \"CUSTOMER_DELETE\", label: \"حذف مشتریان\" },\r\n    { value: \"DRIVER_SHOW\", label: \"لیست رانندگان\" },\r\n    { value: \"DRIVER_EDIT\", label: \"ویرایش رانندگان\" },\r\n    { value: \"DRIVER_DELETE\", label: \"حذف رانندگان\" },\r\n    { value: \"DEPOT_SHOW\", label: \"لیست انبارها\" },\r\n    { value: \"DEPOT_EDIT\", label: \"ویرایش انبارها\" },\r\n    { value: \"DEPOT_DELETE\", label: \"حذف انبارها\" },\r\n    { value: \"ACCOUNT_SHOW\", label: \"لیست حساب ها\" },\r\n    { value: \"ACCOUNT_EDIT\", label: \"ویرایش حساب ها\" },\r\n  ],\r\n  BANK_TRANSACTION_TYPE: [\r\n    { value: \"کارت به کارت\", label: \"کارت به کارت\" },\r\n    { value: \"دستگاه پوز\", label: \"دستگاه پوز\" },\r\n    { value: \"پایا/ساتنا\", label: \"پایا/ساتنا\" },\r\n    { value: \"واریز به/از حساب\", label: \"واریز به/از حساب\" },\r\n  ],\r\n};\r\nexport default Constant;\r\n","import Constant from \"../../helpers/constant\";\r\n\r\nconst initialState = {\r\n  show: false,\r\n  text: \"\",\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case Constant.ACTION_TYPES.SHOW_ALERT: {\r\n      return {\r\n        ...state,\r\n        ...action.option,\r\n        show: true,\r\n      };\r\n    }\r\n    case Constant.ACTION_TYPES.HIDE_ALERT: {\r\n      return {\r\n        ...state,\r\n        show: false,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import Constant from \"../../helpers/constant\";\r\nconst initialState = {\r\n  show: false,\r\n  component: null,\r\n  title: \"\",\r\n  size: \"8\",\r\n  disableCloseButton: false,\r\n  confirm: false,\r\n  names: [],\r\n  onAction: () => {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case Constant.ACTION_TYPES.SHOW_DIALOG: {\r\n      return {\r\n        ...state,\r\n        ...action.option,\r\n        names: [...state.names, action.option],\r\n      };\r\n    }\r\n    case Constant.ACTION_TYPES.HIDE_DIALOG: {\r\n      return {\r\n        names: state.names.filter((item) => item.name !== action.option.name),\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const Storage = {\r\n  setItem(key, data) {\r\n    if (typeof data === \"object\") {\r\n      data = JSON.stringify(data);\r\n    }\r\n    localStorage.setItem(key, data);\r\n  },\r\n\r\n  getItem(key) {\r\n    let obj = null;\r\n    const value = localStorage.getItem(key);\r\n    if (typeof value === \"object\") {\r\n      obj = JSON.parse(value);\r\n    } else {\r\n      obj = value;\r\n    }\r\n\r\n    return obj;\r\n  },\r\n\r\n  removeItem(key) {\r\n    localStorage.removeItem(key);\r\n  },\r\n};\r\n\r\nexport default Storage;\r\n","import Constant from \"../../helpers/constant\";\r\nimport Storage from \"../../services/storage\";\r\n\r\nconst initialState = JSON.parse(\r\n  Storage.getItem(Constant.STORAGE.PRODUCT_UNITS),\r\n);\r\n\r\nfunction unitReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case Constant.ACTION_TYPES.GET_UNITS: {\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default unitReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport alert from \"./AlertReducer\";\r\nimport dialog from \"./dialogReducer\";\r\nimport unit from \"./unitReducer\";\r\n\r\nconst appReducer = combineReducers({\r\n  alert,\r\n  dialog,\r\n  unit,\r\n});\r\n\r\nconst rootReducer = (state, action) => {\r\n  return appReducer(state, action);\r\n};\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\n\r\nimport rootReducer from \"../reducers\"\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport default store\r\n","import Constant from \"../../helpers/constant\";\r\nimport store from \"../store\";\r\n\r\nexport default {\r\n  show(option) {\r\n    store.dispatch({ type: Constant.ACTION_TYPES.SHOW_ALERT, option });\r\n  },\r\n\r\n  hide() {\r\n    store.dispatch({ type: Constant.ACTION_TYPES.HIDE_ALERT });\r\n  },\r\n};\r\n","import React from \"react\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nimport AlertAction from \"../../redux/actions/AlertAction\";\r\n\r\nconst Alert = function () {\r\n  const { show, text, type } = useSelector((state) => state.alert);\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    AlertAction.hide();\r\n  };\r\n\r\n  return (\r\n    <Snackbar open={show} autoHideDuration={6000} onClose={handleClose}>\r\n      <MuiAlert\r\n        elevation={6}\r\n        variant=\"filled\"\r\n        onClose={handleClose}\r\n        severity={type}\r\n      >\r\n        {text}\r\n      </MuiAlert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import Constant from \"../../helpers/constant\";\r\nimport store from \"../store\";\r\n\r\nexport default {\r\n  show(option) {\r\n    store.dispatch({ type: Constant.ACTION_TYPES.SHOW_DIALOG, option });\r\n  },\r\n\r\n  hide(option) {\r\n    store.dispatch({ type: Constant.ACTION_TYPES.HIDE_DIALOG, option });\r\n  },\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const styles = makeStyles((theme) => ({\r\n  container: {\r\n    padding: \"20px\",\r\n    overflowX: \"hidden\",\r\n  },\r\n  title: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    borderBottom: `1px solid ${theme.palette.grey.light}`,\r\n    padding: \"20px\",\r\n  },\r\n  confirm: {\r\n    padding: \"0px 20px 20px\",\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  // overlay: {\r\n  //   position: \"fixed\",\r\n  //   display: \"none\",\r\n  //   width: \"100%\",\r\n  //   height: \"100%\",\r\n  //   top: 0,\r\n  //   left: 0,\r\n  //   right: 0,\r\n  //   bottom: 0,\r\n  //   backgroundColor: \"rgba(0,0,0,0.5)\",\r\n  //   zIndex: 2,\r\n  //   cursor: \"pointer\",\r\n  // },\r\n}));\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport dialogAction from \"../../redux/actions/dialogAction\";\r\nimport { Grid, Grow, Typography, Button } from \"@material-ui/core\";\r\nimport { styles } from \"./Modal.Style\";\r\n\r\nconst Modal = function () {\r\n  const classes = styles();\r\n  const { names } = useSelector((state) => state.dialog);\r\n\r\n  const onClose = function (item) {\r\n    dialogAction.hide({ name: \"delete\" });\r\n  };\r\n\r\n  return (\r\n    // <Dialog\r\n    //   fullWidth\r\n    //   maxWidth={size}\r\n    //   onClose={onClose}\r\n    //   aria-labelledby=\"simple-dialog-title\"\r\n    //   open={x()}\r\n    //   disableBackdropClick\r\n    // >\r\n    <div className={classes.overlay}>\r\n      {names.map((item) => (\r\n        <Grow in={true}>\r\n          <Grid\r\n            xs={12}\r\n            sm={Number(item.size)}\r\n            container\r\n            style={{\r\n              boxShadow: \"0 3px 10px rgb(0 0 0 / 0.2)\",\r\n              borderRadius: 5,\r\n              padding: 20,\r\n              position: \"fixed\",\r\n              zIndex: 1000,\r\n              top: \"50%\",\r\n              backgroundColor: \"#fff\",\r\n              left: \"50%\",\r\n              transform: \"translate(-50%,-50%)\",\r\n            }}\r\n          >\r\n            <Grid item xs={12} className={classes.title}>\r\n              <Typography variant=\"h6\">{item.title}</Typography>\r\n              {/* {!item.disableCloseButton && (\r\n              <i\r\n                className=\"material-icons\"\r\n                onClick={() => onClose(item)}\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                clear\r\n              </i>\r\n            )} */}\r\n            </Grid>\r\n            {!item.confirm && (\r\n              <Grid item xs={12} className={classes.container}>\r\n                {item.component}\r\n              </Grid>\r\n            )}\r\n            {item.confirm && (\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                className={classes.confirm}\r\n                style={{ justifyContent: \"space-between\" }}\r\n              >\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  onClick={() => onClose(item)}\r\n                >\r\n                  انصراف\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={item.onAction}\r\n                >\r\n                  تایید\r\n                </Button>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </Grow>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","export const primary = \"#00989D\";\r\nexport const secondary = \"#FF5C93\";\r\nexport const warning = \"#FFC260\";\r\nexport const success = \"#3CD4A0\";\r\nexport const info = \"#9013FE\";\r\nexport const gray = \"#B9B9B9\";\r\nexport const orange = \"#F95700FF\";\r\nexport const purple = \"#E69A8DFF\";\r\n\r\nconst defaultTheme = {\r\n  direction: \"rtl\",\r\n\r\n  palette: {\r\n    primary: {\r\n      main: primary,\r\n      light: \"#dcf0fa\",\r\n      dark: primary,\r\n    },\r\n    secondary: {\r\n      main: secondary,\r\n      light: secondary,\r\n      dark: secondary,\r\n      contrastText: \"#FFFFFF\",\r\n    },\r\n    danger: {\r\n      main: secondary,\r\n      light: secondary,\r\n      dark: secondary,\r\n      contrastText: \"#FFFFFF\",\r\n    },\r\n    warning: {\r\n      main: warning,\r\n      light: warning,\r\n      dark: warning,\r\n    },\r\n    success: {\r\n      main: success,\r\n      light: success,\r\n      dark: \"#388e3c\",\r\n    },\r\n    info: {\r\n      main: info,\r\n      light: info,\r\n      dark: info,\r\n    },\r\n    gray: {\r\n      main: gray,\r\n      light: gray,\r\n      dark: gray,\r\n    },\r\n    text: {\r\n      primary: \"#6E6E6E\",\r\n      secondary: \"#6E6E6E\",\r\n      hint: \"#B9B9B9\",\r\n    },\r\n    background: {\r\n      default: \"#F6F7FF\",\r\n      light: \"#F3F5FF\",\r\n    },\r\n  },\r\n  customShadows: {\r\n    widget:\r\n      \"0px 3px 11px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\r\n    widgetDark:\r\n      \"0px 3px 18px 0px #4558A3B3, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\r\n    widgetWide:\r\n      \"0px 12px 33px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\r\n  },\r\n  overrides: {\r\n    MuiBackdrop: {\r\n      root: {\r\n        backgroundColor: \"#4A4A4A1A\",\r\n      },\r\n    },\r\n    MuiMenu: {\r\n      paper: {\r\n        boxShadow:\r\n          \"0px 3px 11px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\r\n      },\r\n    },\r\n    MuiSelect: {\r\n      icon: {\r\n        color: \"#B9B9B9\",\r\n      },\r\n    },\r\n    MuiListItem: {\r\n      root: {\r\n        \"&$selected\": {\r\n          backgroundColor: \"#F3F5FF !important\",\r\n          \"&:focus\": {\r\n            backgroundColor: \"#F3F5FF\",\r\n          },\r\n        },\r\n      },\r\n      button: {\r\n        \"&:hover, &:focus\": {\r\n          backgroundColor: \"#F3F5FF\",\r\n        },\r\n      },\r\n    },\r\n    MuiTouchRipple: {\r\n      child: {\r\n        backgroundColor: \"white\",\r\n      },\r\n    },\r\n    MuiTableRow: {\r\n      root: {\r\n        height: 45,\r\n      },\r\n    },\r\n    MuiTableCell: {\r\n      root: {\r\n        borderBottom: \"1px solid rgba(224, 224, 224, .5)\",\r\n        paddingLeft: 24,\r\n      },\r\n      head: {\r\n        fontSize: \"0.95rem\",\r\n      },\r\n      body: {\r\n        fontSize: \"0.95rem\",\r\n      },\r\n    },\r\n    PrivateSwitchBase: {\r\n      root: {\r\n        marginLeft: 10,\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nexport default defaultTheme;\r\n","import defaultTheme from \"./default\";\r\n\r\nimport { createMuiTheme } from \"@material-ui/core\";\r\n\r\nconst overrides = {\r\n  typography: {\r\n    fontFamily: \"IRANSans\",\r\n    h1: {\r\n      fontSize: \"3rem\",\r\n    },\r\n    h2: {\r\n      fontSize: \"2rem\",\r\n    },\r\n    h3: {\r\n      fontSize: \"1.64rem\",\r\n    },\r\n    h4: {\r\n      fontSize: \"1.5rem\",\r\n    },\r\n    h5: {\r\n      fontSize: \"1.285rem\",\r\n    },\r\n    h6: {\r\n      fontSize: \"1.142rem\",\r\n    },\r\n  },\r\n};\r\n\r\nconst themes = {\r\n  default: createMuiTheme({ ...defaultTheme, ...overrides }),\r\n};\r\n\r\nexport default themes;\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    maxWidth: \"100vw\",\r\n    overflowX: \"hidden\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    width: `calc(100vw - 240px)`,\r\n    minHeight: \"100vh\",\r\n  },\r\n  contentShift: {\r\n    width: `calc(100vw - ${240 + theme.spacing(6)}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  fakeToolbar: {\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  link: {\r\n    '&:not(:first-child)': {\r\n      paddingLeft: 15\r\n    }\r\n  }\r\n}));\r\n","import { makeStyles } from \"@material-ui/styles\";\r\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  logotype: {\r\n    color: \"white\",\r\n    marginLeft: theme.spacing(2.5),\r\n    marginRight: theme.spacing(2.5),\r\n    fontWeight: 500,\r\n    fontSize: 18,\r\n    whiteSpace: \"nowrap\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  appBar: {\r\n    width: \"100vw\",\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  toolbar: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: 25,\r\n    paddingLeft: theme.spacing(2.5),\r\n    width: 36,\r\n    backgroundColor: fade(theme.palette.common.black, 0),\r\n    transition: theme.transitions.create([\"background-color\", \"width\"]),\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n      backgroundColor: fade(theme.palette.common.black, 0.08),\r\n    },\r\n  },\r\n  searchFocused: {\r\n    backgroundColor: fade(theme.palette.common.black, 0.08),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: 250,\r\n    },\r\n  },\r\n  searchIcon: {\r\n    width: 36,\r\n    right: 0,\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    transition: theme.transitions.create(\"right\"),\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n  searchIconOpened: {\r\n    right: theme.spacing(1.25),\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n  },\r\n  inputInput: {\r\n    height: 36,\r\n    padding: 0,\r\n    paddingRight: 36 + theme.spacing(1.25),\r\n    width: \"100%\",\r\n  },\r\n  messageContent: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  headerMenu: {\r\n    marginTop: theme.spacing(7),\r\n  },\r\n  headerMenuList: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  headerMenuItem: {\r\n    \"&:hover, &:focus\": {\r\n      backgroundColor: theme.palette.background.light,\r\n      // color: \"white\",\r\n    },\r\n  },\r\n  headerMenuButton: {\r\n    marginLeft: theme.spacing(2),\r\n    padding: theme.spacing(0.5),\r\n  },\r\n  headerMenuButtonSandwich: {\r\n    marginLeft: 9,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginLeft: 0,\r\n    },\r\n    padding: theme.spacing(0.5),\r\n  },\r\n  headerMenuButtonCollapse: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  headerIcon: {\r\n    fontSize: 28,\r\n    color: \"rgba(255, 255, 255, 0.35)\",\r\n  },\r\n  headerIconCollapse: {\r\n    color: \"white\",\r\n  },\r\n  profileMenu: {\r\n    minWidth: 165,\r\n  },\r\n  profileMenuUser: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    padding: theme.spacing(2),\r\n  },\r\n  profileMenuItem: {\r\n    color: theme.palette.text.hint,\r\n  },\r\n  profileMenuIcon: {\r\n    marginRight: theme.spacing(2),\r\n    color: theme.palette.text.hint,\r\n    \"&:hover\": {\r\n      color: theme.palette.primary.main,\r\n    },\r\n  },\r\n  profileMenuLink: {\r\n    fontSize: 16,\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n  messageNotification: {\r\n    width: \"500px\",\r\n    justifyContent: \"space-between\",\r\n    height: \"auto\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    \"&:hover, &:focus\": {\r\n      backgroundColor: theme.palette.background.light,\r\n    },\r\n  },\r\n  messageNotificationSide: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  messageNotificationBodySide: {\r\n    alignItems: \"flex-start\",\r\n    marginRight: 0,\r\n  },\r\n  sendMessageButton: {\r\n    margin: theme.spacing(4),\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n    textTransform: \"none\",\r\n  },\r\n  sendButtonIcon: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  purchaseBtn: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n    marginRight: theme.spacing(3),\r\n  },\r\n\r\n  chip: {\r\n    color: \"#fff\",\r\n  },\r\n  allIcon: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  INCOME: {\r\n    backgroundColor: theme.palette.success.main,\r\n  },\r\n  incomeIcon: {\r\n    color: theme.palette.success.main,\r\n  },\r\n  OUTCOME: {\r\n    backgroundColor: theme.palette.danger.main,\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport {\r\n  withStyles,\r\n  Badge as BadgeBase,\r\n  Typography as TypographyBase,\r\n  Button as ButtonBase,\r\n} from \"@material-ui/core\";\r\nimport { useTheme, makeStyles } from \"@material-ui/styles\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nvar useStyles = makeStyles(theme => ({\r\n  badge: {\r\n    fontWeight: 600,\r\n    height: 16,\r\n    minWidth: 16,\r\n  },\r\n}));\r\n\r\nfunction Badge({ children, colorBrightness, color, ...props }) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n  var Styled = createStyled({\r\n    badge: {\r\n      backgroundColor: getColor(color, theme, colorBrightness),\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Styled>\r\n      {styledProps => (\r\n        <BadgeBase\r\n          classes={{\r\n            badge: classnames(classes.badge, styledProps.classes.badge),\r\n          }}\r\n          {...props}\r\n        >\r\n          {children}\r\n        </BadgeBase>\r\n      )}\r\n    </Styled>\r\n  );\r\n}\r\n\r\nfunction Typography({\r\n  children,\r\n  weight,\r\n  size,\r\n  colorBrightness,\r\n  color,\r\n  ...props\r\n}) {\r\n  var theme = useTheme();\r\n\r\n  return (\r\n    <TypographyBase\r\n      style={{\r\n        color: getColor(color, theme, colorBrightness),\r\n        fontWeight: getFontWeight(weight),\r\n        fontSize: getFontSize(size, props.variant, theme),\r\n      }}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </TypographyBase>\r\n  );\r\n}\r\n\r\nfunction Button({ children, color, className, ...props }) {\r\n  var theme = useTheme();\r\n\r\n  var Styled = createStyled({\r\n    root: {\r\n      color: getColor(color, theme),\r\n    },\r\n    contained: {\r\n      backgroundColor: getColor(color, theme),\r\n      boxShadow: theme.customShadows.widget,\r\n      color: `${color ? \"white\" : theme.palette.text.primary} !important`,\r\n      \"&:hover\": {\r\n        backgroundColor: getColor(color, theme, \"light\"),\r\n        boxShadow: theme.customShadows.widgetWide,\r\n      },\r\n      \"&:active\": {\r\n        boxShadow: theme.customShadows.widgetWide,\r\n      },\r\n    },\r\n    outlined: {\r\n      color: getColor(color, theme),\r\n      borderColor: getColor(color, theme),\r\n    },\r\n    select: {\r\n      backgroundColor: theme.palette.primary.main,\r\n      color: \"#fff\",\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Styled>\r\n      {({ classes }) => (\r\n        <ButtonBase\r\n          classes={{\r\n            contained: classes.contained,\r\n            root: classes.root,\r\n            outlined: classes.outlined,\r\n          }}\r\n          {...props}\r\n          className={classnames(\r\n            {\r\n              [classes.select]: props.select,\r\n            },\r\n            className,\r\n          )}\r\n        >\r\n          {children}\r\n        </ButtonBase>\r\n      )}\r\n    </Styled>\r\n  );\r\n}\r\n\r\nexport { Badge, Typography, Button };\r\n\r\n// ########################################################################\r\n\r\nfunction getColor(color, theme, brigtness = \"main\") {\r\n  if (color && theme.palette[color] && theme.palette[color][brigtness]) {\r\n    return theme.palette[color][brigtness];\r\n  }\r\n}\r\n\r\nfunction getFontWeight(style) {\r\n  switch (style) {\r\n    case \"light\":\r\n      return 300;\r\n    case \"medium\":\r\n      return 500;\r\n    case \"bold\":\r\n      return 600;\r\n    default:\r\n      return 400;\r\n  }\r\n}\r\n\r\nfunction getFontSize(size, variant = \"\", theme) {\r\n  var multiplier;\r\n\r\n  switch (size) {\r\n    case \"sm\":\r\n      multiplier = 0.8;\r\n      break;\r\n    case \"md\":\r\n      multiplier = 1.5;\r\n      break;\r\n    case \"xl\":\r\n      multiplier = 2;\r\n      break;\r\n    case \"xxl\":\r\n      multiplier = 3;\r\n      break;\r\n    default:\r\n      multiplier = 1;\r\n      break;\r\n  }\r\n\r\n  var defaultSize =\r\n    variant && theme.typography[variant]\r\n      ? theme.typography[variant].fontSize\r\n      : theme.typography.fontSize + \"px\";\r\n\r\n  return `calc(${defaultSize} * ${multiplier})`;\r\n}\r\n\r\nfunction createStyled(styles, options) {\r\n  var Styled = function(props) {\r\n    const { children, ...other } = props;\r\n    return children(other);\r\n  };\r\n\r\n  return withStyles(styles, options)(Styled);\r\n}\r\n","import React from \"react\";\r\n\r\nvar LayoutStateContext = React.createContext();\r\nvar LayoutDispatchContext = React.createContext();\r\n\r\nfunction layoutReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"TOGGLE_SIDEBAR\":\r\n      return { ...state, isSidebarOpened: !state.isSidebarOpened };\r\n    default: {\r\n      throw new Error(`Unhandled action type: ${action.type}`);\r\n    }\r\n  }\r\n}\r\n\r\nfunction LayoutProvider({ children }) {\r\n  var [state, dispatch] = React.useReducer(layoutReducer, {\r\n    isSidebarOpened: true,\r\n  });\r\n  return (\r\n    <LayoutStateContext.Provider value={state}>\r\n      <LayoutDispatchContext.Provider value={dispatch}>\r\n        {children}\r\n      </LayoutDispatchContext.Provider>\r\n    </LayoutStateContext.Provider>\r\n  );\r\n}\r\n\r\nfunction useLayoutState() {\r\n  var context = React.useContext(LayoutStateContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useLayoutState must be used within a LayoutProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\nfunction useLayoutDispatch() {\r\n  var context = React.useContext(LayoutDispatchContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useLayoutDispatch must be used within a LayoutProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\nexport { LayoutProvider, useLayoutState, useLayoutDispatch, toggleSidebar };\r\n\r\n// ###########################################################\r\nfunction toggleSidebar(dispatch) {\r\n  dispatch({\r\n    type: \"TOGGLE_SIDEBAR\",\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport Constant from \"../helpers/constant\";\r\nimport storageService from \"../services/storage\";\r\n\r\nvar UserStateContext = React.createContext();\r\nvar UserDispatchContext = React.createContext();\r\n\r\nfunction userReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"LOGIN_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        currentUser: action.payload,\r\n      };\r\n    case \"SIGN_OUT_SUCCESS\":\r\n      return { ...state, isAuthenticated: false, currentUser: {} };\r\n    default: {\r\n      throw new Error(`Unhandled action type: ${action.type}`);\r\n    }\r\n  }\r\n}\r\n\r\nfunction UserProvider({ children }) {\r\n  var [state, dispatch] = React.useReducer(userReducer, {\r\n    isAuthenticated: !!localStorage.getItem(Constant.STORAGE.TOKEN),\r\n    currentUser: JSON.parse(\r\n      localStorage.getItem(Constant.STORAGE.CURRENT_USER),\r\n    ),\r\n  });\r\n\r\n  return (\r\n    <UserStateContext.Provider value={state}>\r\n      <UserDispatchContext.Provider value={dispatch}>\r\n        {children}\r\n      </UserDispatchContext.Provider>\r\n    </UserStateContext.Provider>\r\n  );\r\n}\r\n\r\nfunction useUserState() {\r\n  var context = React.useContext(UserStateContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useUserState must be used within a UserProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\nfunction useUserDispatch() {\r\n  var context = React.useContext(UserDispatchContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useUserDispatch must be used within a UserProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\nexport { UserProvider, useUserState, useUserDispatch, loginUser, signOut };\r\n\r\n// ###########################################################\r\n\r\nasync function loginUser(\r\n  loginRequest,\r\n  dispatch,\r\n  username,\r\n  password,\r\n  history,\r\n  setIsLoading,\r\n  setError,\r\n) {\r\n  setError(false);\r\n  setIsLoading(true);\r\n  const result = await loginRequest.execute({ username, password });\r\n\r\n  if (result) {\r\n    storageService.setItem(Constant.STORAGE.TOKEN, result.data.token);\r\n    storageService.setItem(Constant.STORAGE.CURRENT_USER, result.data);\r\n    setError(null);\r\n    setIsLoading(false);\r\n    dispatch({ type: \"LOGIN_SUCCESS\", payload: result.data });\r\n\r\n    history.push(\"/app/dashboard\");\r\n  } else {\r\n    setError(true);\r\n    setIsLoading(false);\r\n  }\r\n}\r\n\r\nfunction signOut(dispatch, history) {\r\n  localStorage.removeItem(Constant.STORAGE.TOKEN);\r\n  localStorage.removeItem(Constant.STORAGE.CURRENT_USER);\r\n  dispatch({ type: \"SIGN_OUT_SUCCESS\" });\r\n  history.push(\"/login\");\r\n}\r\n","import axios from \"axios\";\r\nimport { cacheAdapterEnhancer } from \"axios-extensions\";\r\nimport constants from \"../helpers/constant\";\r\nimport storageService from \"../services/storage\";\r\nimport AlertAction from \"../redux/actions/AlertAction\";\r\n\r\nconst http = axios.create({\r\n  baseURL: constants.API_ADDRESS,\r\n  headers: {\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n    \"Access-Control-Allow-Credentials\": \"true\",\r\n  },\r\n  // adapter: cacheAdapterEnhancer(axios.defaults.adapter),\r\n});\r\n\r\n// http.interceptors.request.use(\r\n//   async (config) => {\r\n//     // const accessToken = storageService.getItem(constants.ACCESS_TOKEN);\r\n//     // config.headers = {\r\n//     //   Authorization: `Bearer ${accessToken}`,\r\n//     //   \"Cache-Control\": \"no-cache\",\r\n//     //   Accept: \"application/json\",\r\n//     // };\r\n//     // return config;\r\n//   },\r\n//   (error) => {\r\n//     Promise.reject(error);\r\n//   },\r\n// );\r\n\r\nhttp.interceptors.response.use(\r\n  (result) => {\r\n    // Do something before request is sent\r\n    const { method, url } = result.config;\r\n    // if ((method === \"post\" || method === \"put\") && url !== \"auth/login\") {\r\n    //   return AlertAction.show({\r\n    //     type: \"success\",\r\n    //     text: \"اطلاعات با موفقیت ثبت شد\",\r\n    //   });\r\n    // }\r\n    // if (method === \"delete\") {\r\n    //   return AlertAction.show({\r\n    //     type: \"success\",\r\n    //     text: \"اطلاعات با موفقیت حذف شد\",\r\n    //   });\r\n    // }\r\n    if (method !== \"get\") {\r\n      if (url !== \"auth/login\") {\r\n        AlertAction.show({\r\n          type: \"success\",\r\n          text:\r\n            method === \"delete\"\r\n              ? \"اطلاعات با موفقیت حذف شد\"\r\n              : \"اطلاعات با موفقیت ثبت شد\",\r\n        });\r\n      }\r\n    }\r\n    return result;\r\n  },\r\n  async (error) => {\r\n    const { code, message } = error.response.data.error;\r\n    if (code === \"UNHANDLED_DATABASE_EXCEPTION\") {\r\n      AlertAction.show({\r\n        type: \"error\",\r\n        text: \"خطایی رخ داده است\",\r\n      });\r\n    } else {\r\n      AlertAction.show({\r\n        type: \"error\",\r\n        text: message,\r\n      });\r\n    }\r\n\r\n    // TODO : handle 4xx error here and calling refresh token\r\n    // const originalRequest = error.config;\r\n    // if (error.response.status === 403 && !originalRequest._retry) {\r\n    // const access_token = await refreshAccessToken();\r\n    // axios.defaults.headers.common['Authorization'] = 'Bearer ' + access_token;\r\n    // return axiosApiInstance(originalRequest);\r\n    // }\r\n\r\n    return Promise.reject(error);\r\n  },\r\n);\r\n\r\nexport default http;\r\n","/* eslint-disable */\r\nimport { useState } from \"react\";\r\n\r\nimport http from \"../configs/axios\";\r\n\r\nconst getProperUrl = (url, urlParams) => {\r\n  return `${url.substring(0, url.indexOf(\"?\"))}/${urlParams}?${url.substring(\r\n    url.indexOf(\"?\") + 1,\r\n    url.length,\r\n  )}`;\r\n};\r\n\r\nexport const useApi = (args) => {\r\n  const [pending, setPending] = useState(false);\r\n  const [result, setResult] = useState();\r\n  const [error, setError] = useState();\r\n\r\n  const execute = async function (data, urlParams) {\r\n    setPending(true);\r\n    try {\r\n      let response;\r\n\r\n      if (urlParams) {\r\n        if (args.url.includes(\"?\")) {\r\n          const url = getProperUrl(args.url, urlParams);\r\n          response = await http({ ...args, url, data });\r\n        } else {\r\n          const url = `${args.url}/${urlParams}`;\r\n          response = await http({ ...args, url, data });\r\n        }\r\n      } else {\r\n        response = await http({ ...args, data });\r\n      }\r\n      setResult(response);\r\n      return response?.data;\r\n    } catch (e) {\r\n      setResult(null);\r\n      setError(e);\r\n      throw new Error(e);\r\n    } finally {\r\n      setPending(false);\r\n    }\r\n  };\r\n\r\n  return {\r\n    pending,\r\n    result,\r\n    error,\r\n    execute,\r\n  };\r\n};\r\n","import pickBy from \"lodash/pickBy\";\r\nimport identity from \"lodash/identity\";\r\nimport queryString from \"query-string\";\r\nimport storageService from \"../services/storage\";\r\nimport Constant from \"./constant\";\r\nimport {\r\n  primary,\r\n  secondary,\r\n  success,\r\n  warning,\r\n  info,\r\n  gray,\r\n  purple,\r\n  orange,\r\n} from \"../themes/default\";\r\nimport { number } from \"yup\";\r\n\r\nexport const convertParamsToQueryString = (params) => {\r\n  return new URLSearchParams(pickBy(params, identity)).toString();\r\n};\r\n\r\nexport const getQueryString = (param) => {\r\n  var myUrl = new URL(window.location.href.replace(/#/g, \"\"));\r\n  var param_value = myUrl.searchParams.get(param);\r\n  return param_value;\r\n  // return queryString.parse(window.location.search)[param];\r\n};\r\n\r\nexport const getRandomColor = () => {\r\n  return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\r\n};\r\n\r\nexport const getRandomColorFromTheme = () => {\r\n  const colors = [\r\n    primary,\r\n    secondary,\r\n    success,\r\n    warning,\r\n    orange,\r\n    purple,\r\n    info,\r\n    gray,\r\n  ];\r\n  var color = colors[Math.floor(Math.random() * colors.length)];\r\n\r\n  return color;\r\n};\r\n\r\nexport const getRandomNumber = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nexport const persianNumber = (en) => {\r\n  if ((en || en === 0) && typeof en !== number) {\r\n    return (\"\" + en).replace(/[0-9]/g, function (t) {\r\n      return \"۰۱۲۳۴۵۶۷۸۹\".substr(+t, 1);\r\n    });\r\n  }\r\n};\r\n\r\nexport const getDayOfWeek = (date) => {\r\n  const days = [\r\n    \"یکشنبه\",\r\n    \"دوشنبه\",\r\n    \"سه شنبه\",\r\n    \"چهارشنبه\",\r\n    \"پنج شنبه\",\r\n    \"جمعه\",\r\n    \"شنبه\",\r\n  ];\r\n  return days[date.getDay()];\r\n};\r\n\r\nexport const hasPermission = (permit) => {\r\n  if (permit === Constant.ALL_PERMISSIONS.FREE) {\r\n    return true;\r\n  }\r\n  const { permissions } = JSON.parse(\r\n    storageService.getItem(Constant.STORAGE.CURRENT_USER),\r\n  );\r\n  return permissions.includes(permit);\r\n};\r\n","import React, { useState, useRef } from \"react\";\r\nimport { Grid, TextField, Button, InputAdornment } from \"@material-ui/core\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport clsx from \"clsx\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport storageService from \"../../services/storage\";\r\n\r\nconst MainDetail = ({ onSubmit, onDismiss }) => {\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n  const [isPassword, setIsPassword] = useState(true);\r\n  const passwordRef = useRef(null);\r\n\r\n  const changePasswordRequest = useApi({\r\n    method: \"put\",\r\n    url: `user/password/change`,\r\n  });\r\n\r\n  const onChangeViewClick = function () {\r\n    setIsPassword(!isPassword);\r\n  };\r\n\r\n  const onDone = (data) => {\r\n    const { id } = JSON.parse(\r\n      storageService.getItem(Constant.STORAGE.CURRENT_USER),\r\n    );\r\n    changePasswordRequest.execute({\r\n      id,\r\n      oldPassword: data.prePassword,\r\n      newPassword: data.password,\r\n    });\r\n    onSubmit(data);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onDone)}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Controller\r\n            control={control}\r\n            render={({ onChange, value, name }) => {\r\n              return (\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\" رمز عبور قبلی\"\r\n                  name={name}\r\n                  onChange={onChange}\r\n                  value={value}\r\n                  error={!!errors.prePassword}\r\n                  helperText={\r\n                    errors.prePassword ? errors.prePassword.message : \"\"\r\n                  }\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  type={\"password\"}\r\n                />\r\n              );\r\n            }}\r\n            rules={{\r\n              required: Constant.VALIDATION.REQUIRED,\r\n              minLength: {\r\n                value: 5,\r\n                message: Constant.VALIDATION.PASSWORD,\r\n              },\r\n            }}\r\n            name=\"prePassword\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Controller\r\n            control={control}\r\n            render={({ onChange, value, name }) => {\r\n              return (\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"رمز عبور\"\r\n                  name={name}\r\n                  onChange={onChange}\r\n                  value={value}\r\n                  error={!!errors.password}\r\n                  helperText={errors.password ? errors.password.message : \"\"}\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  type={isPassword ? \"password\" : \"text\"}\r\n                  inputRef={passwordRef}\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <i\r\n                          style={{ cursor: \"pointer\" }}\r\n                          className={clsx(\"material-icons-round\")}\r\n                          onClick={onChangeViewClick}\r\n                        >\r\n                          {isPassword ? \"visibility_off\" : \"visibility\"}\r\n                        </i>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n              );\r\n            }}\r\n            rules={{\r\n              required: Constant.VALIDATION.REQUIRED,\r\n              minLength: {\r\n                value: 5,\r\n                message: Constant.VALIDATION.PASSWORD,\r\n              },\r\n            }}\r\n            name=\"password\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Controller\r\n            control={control}\r\n            render={({ onChange, value, name }) => {\r\n              return (\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"تکرار رمز عبور \"\r\n                  name={name}\r\n                  onChange={onChange}\r\n                  value={value}\r\n                  error={!!errors.repassword}\r\n                  helperText={\r\n                    errors.repassword && \"تکرار رمز عبور با رمز عبور برابر نیست\"\r\n                  }\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  type={\"password\"}\r\n                />\r\n              );\r\n            }}\r\n            rules={{\r\n              validate: (value) => value === passwordRef.current.value,\r\n            }}\r\n            name=\"repassword\"\r\n          />\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n        >\r\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n            تایید\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={onDismiss}>\r\n            انصراف\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MainDetail;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  Chip,\r\n  Divider,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nimport {\r\n  Menu as MenuIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  Person as AccountIcon,\r\n  ArrowForward as ArrowForwardIcon,\r\n} from \"@material-ui/icons\";\r\nimport classNames from \"classnames\";\r\nimport useStyles from \"./styles\";\r\nimport { Badge, Typography } from \"../Wrappers\";\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\nimport { useUserState } from \"../../context/UserContext\";\r\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { persianNumber, getDayOfWeek } from \"../../helpers/utils\";\r\nimport clsx from \"clsx\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport dialogAction from \"../../redux/actions/dialogAction\";\r\nimport ChangePassword from \"./ChangePassword\";\r\nimport Clock from \"react-live-clock\";\r\n\r\nexport default function Header(props) {\r\n  var classes = useStyles();\r\n  const history = useHistory();\r\n  var layoutState = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n  var userDispatch = useUserDispatch();\r\n  const location = useLocation();\r\n  var [mailMenu, setMailMenu] = useState(null);\r\n  var [profileMenu, setProfileMenu] = useState(null);\r\n  var { currentUser } = useUserState();\r\n  const [cheques, setCheques] = useState([]);\r\n\r\n  const getDashboardRequest = useApi({\r\n    method: \"get\",\r\n    url: `notify/cheque`,\r\n  });\r\n\r\n  const getChequeNotify = async () => {\r\n    const notify = await getDashboardRequest.execute();\r\n\r\n    setCheques(notify.data);\r\n  };\r\n\r\n  const onShowAllCheque = () => {\r\n    history.push(\"/app/cheque-list\");\r\n  };\r\n\r\n  const onSubmitChangePassword = () => {\r\n    onDismissChangePassword();\r\n  };\r\n\r\n  const onDismissChangePassword = () => {\r\n    dialogAction.hide({ name: \"password\" });\r\n  };\r\n\r\n  const onChangePassword = () => {\r\n    dialogAction.show({\r\n      title: \"تغییر پسورد\",\r\n      component: (\r\n        <ChangePassword\r\n          onSubmit={onSubmitChangePassword}\r\n          onDismiss={onDismissChangePassword}\r\n        />\r\n      ),\r\n      name: \"password\",\r\n      size: \"4\",\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getChequeNotify();\r\n  }, [location]);\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          onClick={() => toggleSidebar(layoutDispatch)}\r\n          className={classNames(\r\n            classes.headerMenuButtonSandwich,\r\n            classes.headerMenuButtonCollapse,\r\n          )}\r\n        >\r\n          {layoutState.isSidebarOpened ? (\r\n            <ArrowForwardIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          ) : (\r\n            <MenuIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n        </IconButton>\r\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\r\n          سیستم یکپارچه مدیریت\r\n        </Typography>\r\n\r\n        <div className={classes.grow} />\r\n        <div style={{ display: \"flex\" }}>\r\n          <Typography variant=\"h6\" style={{ margin: \"0 10px\" }}>\r\n            {getDayOfWeek(new Date())}\r\n          </Typography>\r\n          <Typography variant=\"h6\">\r\n            {persianNumber(new Date().toLocaleDateString(\"fa-IR\"))}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"h6\"\r\n            style={{\r\n              margin: \"0 10px\",\r\n              width: 70,\r\n              display: \"flex\",\r\n              justifyContent: \"flex-end\",\r\n            }}\r\n          >\r\n            <Clock\r\n              format={\"HH:mm:ss\"}\r\n              ticking={true}\r\n              timezone={\"Asia/Tehran\"}\r\n            />\r\n          </Typography>\r\n        </div>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={(e) => {\r\n            setMailMenu(e.currentTarget);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge badgeContent={cheques?.length} color=\"secondary\">\r\n            <NotificationsIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className={classes.headerMenuButton}\r\n          aria-controls=\"profile-menu\"\r\n          onClick={(e) => setProfileMenu(e.currentTarget)}\r\n        >\r\n          <AccountIcon classes={{ root: classes.headerIcon }} />\r\n        </IconButton>\r\n        <Menu\r\n          id=\"mail-menu\"\r\n          open={Boolean(mailMenu)}\r\n          anchorEl={mailMenu}\r\n          onClose={() => setMailMenu(null)}\r\n          MenuListProps={{ className: classes.headerMenuList }}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h6\" weight=\"medium\">\r\n              یادآوری چک ها\r\n            </Typography>\r\n            <Button color=\"primary\" onClick={onShowAllCheque}>\r\n              نمایش همه چک ها\r\n            </Button>\r\n          </div>\r\n          <Divider />\r\n          {cheques?.map((message) => (\r\n            <MenuItem key={message.id} className={classes.messageNotification}>\r\n              <Typography variant=\"h6\">\r\n                {persianNumber(\r\n                  new Date(message.chequeDueDate).toLocaleDateString(\"fa-IR\"),\r\n                )}\r\n              </Typography>\r\n              <Typography variant=\"h6\">{message.person}</Typography>\r\n              <Typography variant=\"h6\">\r\n                {persianNumber(message.price)}\r\n              </Typography>\r\n              <Typography variant=\"h6\">\r\n                <Chip\r\n                  label={Constant.PAYMENT_TYPE[message.type]}\r\n                  className={clsx(classes.chip, classes[message.type])}\r\n                />\r\n              </Typography>\r\n            </MenuItem>\r\n          ))}\r\n        </Menu>\r\n        <Menu\r\n          id=\"profile-menu\"\r\n          open={Boolean(profileMenu)}\r\n          anchorEl={profileMenu}\r\n          onClose={() => setProfileMenu(null)}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              {currentUser.username}\r\n            </Typography>\r\n          </div>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              color=\"primary\"\r\n              onClick={onChangePassword}\r\n            >\r\n              تغییر پسورد\r\n            </Typography>\r\n          </MenuItem>\r\n\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              color=\"primary\"\r\n              onClick={() => signOut(userDispatch, props.history)}\r\n            >\r\n              خروج از سیستم\r\n            </Typography>\r\n          </MenuItem>\r\n        </Menu>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport default makeStyles(theme => ({\r\n  menuButton: {\r\n    marginLeft: 12,\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 40,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: drawerWidth,\r\n    },\r\n  },\r\n  toolbar: {\r\n    ...theme.mixins.toolbar,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  /* sidebarList: {\r\n    marginTop: theme.spacing(6),\r\n  }, */\r\n  mobileBackButton: {\r\n    marginTop: theme.spacing(0.5),\r\n    marginLeft: 18,\r\n    [theme.breakpoints.only(\"sm\")]: {\r\n      marginTop: theme.spacing(0.625),\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n}));\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  link: {\r\n    textDecoration: \"none\",\r\n    \"&:hover, &:focus\": {\r\n      backgroundColor: theme.palette.background.light,\r\n    },\r\n  },\r\n  externalLink: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    textDecoration: \"none\",\r\n  },\r\n  linkActive: {\r\n    backgroundColor: theme.palette.background.light,\r\n  },\r\n  linkNested: {\r\n    paddingLeft: 0,\r\n    \"&:hover, &:focus\": {\r\n      backgroundColor: \"#FFFFFF\",\r\n    },\r\n  },\r\n  linkIcon: {\r\n    marginRight: theme.spacing(1),\r\n    color: theme.palette.text.secondary + \"99\",\r\n    transition: theme.transitions.create(\"color\"),\r\n    width: 24,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  linkIconActive: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  linkText: {\r\n    padding: 0,\r\n    color: theme.palette.text.secondary + \"CC\",\r\n    transition: theme.transitions.create([\"opacity\", \"color\"]),\r\n    fontSize: 16,\r\n  },\r\n  linkTextActive: {\r\n    color: theme.palette.text.primary,\r\n  },\r\n  linkTextHidden: {\r\n    opacity: 0,\r\n  },\r\n  nestedList: {\r\n    paddingLeft: theme.spacing(2) + 10,\r\n  },\r\n  sectionTitle: {\r\n    marginLeft: theme.spacing(4.5),\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  divider: {\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n    height: 1,\r\n    backgroundColor: \"#D8D8D880\",\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nvar useStyles = makeStyles((theme) => ({\r\n  dotBase: {\r\n    width: 8,\r\n    height: 8,\r\n    backgroundColor: theme.palette.text.hint,\r\n    borderRadius: \"50%\",\r\n    transition: theme.transitions.create(\"background-color\"),\r\n  },\r\n  dotSmall: {\r\n    width: 5,\r\n    height: 5,\r\n  },\r\n  dotLarge: {\r\n    width: 11,\r\n    height: 11,\r\n  },\r\n}));\r\n\r\nexport default function Dot({ size, color }) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  return (\r\n    <div\r\n      className={classnames(classes.dotBase, {\r\n        [classes.dotLarge]: size === \"large\",\r\n        [classes.dotSmall]: size === \"small\",\r\n      })}\r\n      style={{\r\n        backgroundColor:\r\n          color && theme.palette[color] ? theme.palette[color].main : color,\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Inbox as InboxIcon } from \"@material-ui/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useStyles from \"./styles\";\r\nimport Dot from \"../Dot\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport {\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../../../context/LayoutContext\";\r\nimport { hasPermission } from \"../../../../helpers/utils\";\r\n\r\nexport default function SidebarLink({\r\n  link,\r\n  icon,\r\n  label,\r\n  children,\r\n  location,\r\n  isSidebarOpened,\r\n  nested,\r\n  type,\r\n  permission,\r\n}) {\r\n  var classes = useStyles();\r\n  const history = useHistory();\r\n  var layoutDispatch = useLayoutDispatch();\r\n  var theme = useTheme();\r\n\r\n  const onClick = (link) => {\r\n    history.push(link);\r\n    var windowWidth = window.innerWidth;\r\n    var breakpointWidth = theme.breakpoints.values.md;\r\n    var isSmallScreen = windowWidth < breakpointWidth;\r\n\r\n    if (isSmallScreen) {\r\n      toggleSidebar(layoutDispatch);\r\n    }\r\n  };\r\n\r\n  var [isOpen, setIsOpen] = useState(false);\r\n  var isLinkActive =\r\n    link &&\r\n    (location.pathname === link || location.pathname.indexOf(link) !== -1);\r\n\r\n  if (type === \"title\")\r\n    return (\r\n      <Typography\r\n        className={classnames(classes.linkText, classes.sectionTitle, {\r\n          [classes.linkTextHidden]: !isSidebarOpened,\r\n        })}\r\n      >\r\n        {label}\r\n      </Typography>\r\n    );\r\n\r\n  if (type === \"divider\")\r\n    return (\r\n      <>\r\n        {hasPermission(permission) && <Divider className={classes.divider} />}\r\n      </>\r\n    );\r\n  if (link && link.includes(\"http\")) {\r\n    return (\r\n      <ListItem\r\n        button\r\n        className={classes.link}\r\n        classes={{\r\n          root: classnames(classes.linkRoot, {\r\n            [classes.linkActive]: isLinkActive && !nested,\r\n            [classes.linkNested]: nested,\r\n          }),\r\n        }}\r\n        disableRipple\r\n      >\r\n        <div className={classes.externalLink} href={link}>\r\n          <ListItemIcon\r\n            className={classnames(classes.linkIcon, {\r\n              [classes.linkIconActive]: isLinkActive,\r\n            })}\r\n          >\r\n            {nested ? <Dot color={isLinkActive && \"primary\"} /> : icon}\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            classes={{\r\n              primary: classnames(classes.linkText, {\r\n                [classes.linkTextActive]: isLinkActive,\r\n                [classes.linkTextHidden]: !isSidebarOpened,\r\n              }),\r\n            }}\r\n            primary={label}\r\n          />\r\n        </div>\r\n      </ListItem>\r\n    );\r\n  }\r\n  if (!children)\r\n    return (\r\n      <>\r\n        {hasPermission(permission) && (\r\n          <ListItem\r\n            button\r\n            className={classes.link}\r\n            classes={{\r\n              root: classnames(classes.linkRoot, {\r\n                [classes.linkActive]: isLinkActive && !nested,\r\n                [classes.linkNested]: nested,\r\n              }),\r\n            }}\r\n            disableRipple\r\n            onClick={() => {\r\n              onClick(link);\r\n            }}\r\n          >\r\n            <span className={classes.externalLink}>\r\n              <ListItemIcon\r\n                className={classnames(classes.linkIcon, {\r\n                  [classes.linkIconActive]: isLinkActive,\r\n                })}\r\n              >\r\n                {nested ? <Dot color={isLinkActive && \"primary\"} /> : icon}\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                classes={{\r\n                  primary: classnames(classes.linkText, {\r\n                    [classes.linkTextActive]: isLinkActive,\r\n                    [classes.linkTextHidden]: !isSidebarOpened,\r\n                  }),\r\n                }}\r\n                primary={label}\r\n              />\r\n            </span>\r\n          </ListItem>\r\n        )}\r\n      </>\r\n    );\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(permission) && (\r\n        <>\r\n          <ListItem\r\n            button\r\n            component={link && Link}\r\n            onClick={toggleCollapse}\r\n            className={classes.link}\r\n            to={link}\r\n            disableRipple\r\n          >\r\n            <span className={classes.externalLink}>\r\n              <ListItemIcon\r\n                className={classnames(classes.linkIcon, {\r\n                  [classes.linkIconActive]: isLinkActive,\r\n                })}\r\n              >\r\n                {icon ? icon : <InboxIcon />}\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                classes={{\r\n                  primary: classnames(classes.linkText, {\r\n                    [classes.linkTextActive]: isLinkActive,\r\n                    [classes.linkTextHidden]: !isSidebarOpened,\r\n                  }),\r\n                }}\r\n                primary={label}\r\n              />\r\n            </span>\r\n          </ListItem>\r\n          {children && (\r\n            <Collapse\r\n              in={isOpen && isSidebarOpened}\r\n              timeout=\"auto\"\r\n              unmountOnExit\r\n              className={classes.nestedList}\r\n            >\r\n              <List component=\"div\" disablePadding>\r\n                {children.map((childrenLink) => (\r\n                  <SidebarLink\r\n                    key={childrenLink && childrenLink.link}\r\n                    location={location}\r\n                    isSidebarOpened={isSidebarOpened}\r\n                    nested\r\n                    {...childrenLink}\r\n                  />\r\n                ))}\r\n              </List>\r\n            </Collapse>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  // ###########################################################\r\n\r\n  function toggleCollapse(e) {\r\n    if (isSidebarOpened) {\r\n      e.preventDefault();\r\n      setIsOpen(!isOpen);\r\n    }\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\r\nimport { ArrowForward as ArrowForwardIcon } from \"@material-ui/icons\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\nimport useStyles from \"./styles\";\r\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\r\nimport Constants from \"../../helpers/constant\";\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\n\r\nconst structure = [\r\n  {\r\n    id: 0,\r\n    label: \"داشبورد\",\r\n    link: \"/app/dashboard\",\r\n    icon: <i className=\"material-icons-round\">home</i>,\r\n    permission: Constants.ALL_PERMISSIONS.FREE,\r\n  },\r\n  {\r\n    id: 1,\r\n    label: \"کالاها\",\r\n    link: \"/app/product-list\",\r\n    icon: <i className=\"material-icons-round\">inventory_2</i>,\r\n    permission: Constants.ALL_PERMISSIONS.PRODUCT_SHOW,\r\n  },\r\n  {\r\n    id: 2,\r\n    label: \"انبار ها\",\r\n    link: \"/app/depot-list\",\r\n    icon: <i className=\"material-icons-round\">storefront</i>,\r\n    permission: Constants.ALL_PERMISSIONS.DEPOT_SHOW,\r\n  },\r\n  {\r\n    id: 3,\r\n    label: \"صندوق ها\",\r\n    link: \"/app/cash-list\",\r\n    icon: <i className=\"material-icons-round\">account_balance_wallet</i>,\r\n    permission: Constants.ALL_PERMISSIONS.CASH_DESK_SHOW,\r\n  },\r\n  {\r\n    id: 4,\r\n    type: \"divider\",\r\n    permission: Constants.ALL_PERMISSIONS.INVOICE_SHOW,\r\n  },\r\n  {\r\n    id: 5,\r\n    label: \"فاکتور ها\",\r\n    icon: <i className=\"material-icons-round\">receipt</i>,\r\n    permission: Constants.ALL_PERMISSIONS.INVOICE_SHOW,\r\n    children: [\r\n      { label: \"کل فاکتور ها\", link: \"/app/invoice-list?type=ALL\" },\r\n      { label: \"فاکتور خرید\", link: \"/app/invoice-list?type=BUY\" },\r\n      { label: \"فاکتور فروش\", link: \"/app/invoice-list?type=SELL\" },\r\n    ],\r\n  },\r\n  {\r\n    id: 6,\r\n    type: \"divider\",\r\n    permission:\r\n      Constants.ALL_PERMISSIONS.PAYMENT_SHOW ||\r\n      Constants.ALL_PERMISSIONS.CHEQUE_SHOW,\r\n  },\r\n  {\r\n    id: 7,\r\n    label: \"گزارشات مالی\",\r\n    icon: <i className=\"material-icons-round\">monetization_on</i>,\r\n    permission:\r\n      Constants.ALL_PERMISSIONS.PAYMENT_SHOW ||\r\n      Constants.ALL_PERMISSIONS.CHEQUE_SHOW,\r\n    children: [\r\n      { label: \"گردش کل\", link: \"/app/payment-list?type=ALL\" },\r\n      { label: \"لیست دریافتی ها\", link: \"/app/payment-list?type=INCOME\" },\r\n      { label: \"لیست پرداختی ها\", link: \"/app/payment-list?type=OUTCOME\" },\r\n      {\r\n        label: \"لیست چک ها\",\r\n        link: \"/app/cheque-list\",\r\n        permission: Constants.ALL_PERMISSIONS.PAYMENT_SHOW,\r\n      },\r\n      {\r\n        label: \"لیست شماره حساب ها\",\r\n        link: \"/app/accountNumber\",\r\n        permission: Constants.ALL_PERMISSIONS.FREE,\r\n      },\r\n      {\r\n        label: \"لیست وام ها\",\r\n        link: \"/app/loan-list\",\r\n        permission: Constants.ALL_PERMISSIONS.FREE,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 8,\r\n    type: \"divider\",\r\n    permission:\r\n      Constants.ALL_PERMISSIONS.CUSTOMER_SHOW ||\r\n      Constants.ALL_PERMISSIONS.USER_SHOW ||\r\n      Constants.ALL_PERMISSIONS.EMPLOYEE_SHOW ||\r\n      Constants.ALL_PERMISSIONS.DRIVER_EDIT,\r\n  },\r\n  {\r\n    id: 9,\r\n    label: \"اشخاص\",\r\n    icon: <i className=\"material-icons-round\">account_circle</i>,\r\n    // permission:\r\n    //   Constants.ALL_PERMISSIONS.CUSTOMER_SHOW ||\r\n    //   Constants.ALL_PERMISSIONS.USER_SHOW ||\r\n    //   Constants.ALL_PERMISSIONS.EMPLOYEE_SHOW ||\r\n    //   Constants.ALL_PERMISSIONS.DRIVER_EDIT,\r\n    children: [\r\n      {\r\n        label: \"کاربران\",\r\n        link: \"/app/user-list\",\r\n        permission: Constants.ALL_PERMISSIONS.USER_SHOW,\r\n      },\r\n      {\r\n        label: \"مشتریان\",\r\n        link: \"/app/customer-list\",\r\n        permission: Constants.ALL_PERMISSIONS.CUSTOMER_SHOW,\r\n      },\r\n      {\r\n        label: \"پرسنل\",\r\n        link: \"/app/employee-list\",\r\n        permission: Constants.ALL_PERMISSIONS.EMPLOYEE_SHOW,\r\n      },\r\n      {\r\n        label: \"رانندگان\",\r\n        link: \"/app/driver-list\",\r\n        permission: Constants.ALL_PERMISSIONS.DRIVER_SHOW,\r\n      },\r\n    ],\r\n  },\r\n\r\n  { id: 13, type: \"divider\", permission: Constants.ALL_PERMISSIONS.FREE },\r\n  {\r\n    id: 14,\r\n    label: \" حضور و غیاب\",\r\n    link: \"/app/traffic\",\r\n    icon: <i className=\"material-icons-round\">transfer_within_a_station</i>,\r\n    permission: Constants.ALL_PERMISSIONS.ATTENDANCE_SHOW,\r\n  },\r\n\r\n  {\r\n    id: 14,\r\n    label: \"دسته بندی ها \",\r\n    link: \"/app/Category\",\r\n    icon: <i className=\"material-icons-round\">category</i>,\r\n    permission: Constants.ALL_PERMISSIONS.FREE,\r\n  },\r\n  // {\r\n  //   id: 15,\r\n  //   label: \"تنظیمات \",\r\n  //   link: \"/app/Settings\",\r\n  //   icon: <i className=\"material-icons-round\">settings</i>,\r\n  //   permission: Constants.ALL_PERMISSIONS.FREE,\r\n  // },\r\n];\r\n\r\nfunction Sidebar({ location }) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // global\r\n  var { isSidebarOpened } = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n\r\n  // local\r\n  var [isPermanent, setPermanent] = useState(true);\r\n\r\n  useEffect(function () {\r\n    window.addEventListener(\"resize\", handleWindowWidthChange);\r\n    handleWindowWidthChange();\r\n    return function cleanup() {\r\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Drawer\r\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\r\n      className={classNames(classes.drawer, {\r\n        [classes.drawerOpen]: isSidebarOpened,\r\n        [classes.drawerClose]: !isSidebarOpened,\r\n      })}\r\n      classes={{\r\n        paper: classNames({\r\n          [classes.drawerOpen]: isSidebarOpened,\r\n          [classes.drawerClose]: !isSidebarOpened,\r\n        }),\r\n      }}\r\n      open={isSidebarOpened}\r\n    >\r\n      <div className={classes.toolbar} />\r\n      <div className={classes.mobileBackButton}>\r\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\r\n          <ArrowForwardIcon\r\n            classes={{\r\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\r\n            }}\r\n          />\r\n        </IconButton>\r\n      </div>\r\n      <List className={classes.sidebarList}>\r\n        {structure.map((link) => (\r\n          <SidebarLink\r\n            key={link.id}\r\n            location={location}\r\n            isSidebarOpened={isSidebarOpened}\r\n            {...link}\r\n          />\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n\r\n  // ##################################################################\r\n  function handleWindowWidthChange() {\r\n    var windowWidth = window.innerWidth;\r\n    var breakpointWidth = theme.breakpoints.values.md;\r\n    var isSmallScreen = windowWidth < breakpointWidth;\r\n\r\n    if (isSmallScreen && isPermanent) {\r\n      setPermanent(false);\r\n      toggleSidebar(layoutDispatch);\r\n    } else if (!isSmallScreen && !isPermanent) {\r\n      setPermanent(true);\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(Sidebar);\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  datePicker: {\r\n    [theme.breakpoints.only(\"xs\")]: {\r\n      margin: \"10px 0\",\r\n    },\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n  paperTitle: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    position: \"relative\",\r\n  },\r\n  card: {\r\n    minHeight: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  visitsNumberContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexGrow: 1,\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n  progressSection: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  progressTitle: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  progress: {\r\n    marginBottom: theme.spacing(1),\r\n    backgroundColor: \"rgb(236, 236, 236)\",\r\n  },\r\n  pieChartLegendWrapper: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"flex-end\",\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  legendItemContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  fullHeightBody: {\r\n    display: \"flex\",\r\n    flexGrow: 1,\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  tableWidget: {\r\n    overflowX: \"auto\",\r\n  },\r\n  progressBarPrimary: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  progressBarSecondary: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  performanceLegendWrapper: {\r\n    display: \"flex\",\r\n    flexGrow: 1,\r\n    alignItems: \"center\",\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  legendElement: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  legendElementText: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  serverOverviewElement: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    maxWidth: \"100%\",\r\n  },\r\n  serverOverviewElementText: {\r\n    minWidth: 145,\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  serverOverviewElementChartWrapper: {\r\n    width: \"100%\",\r\n  },\r\n  mainChartBody: {\r\n    overflowX: \"auto\",\r\n  },\r\n  mainChartHeader: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    [theme.breakpoints.only(\"xs\")]: {\r\n      flexWrap: \"wrap\",\r\n    },\r\n  },\r\n  mainChartHeaderLabels: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    [theme.breakpoints.only(\"xs\")]: {\r\n      order: 3,\r\n      width: \"100%\",\r\n      justifyContent: \"center\",\r\n      marginTop: theme.spacing(3),\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n  },\r\n  mainChartHeaderLabel: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginLeft: theme.spacing(3),\r\n  },\r\n  mainChartSelectRoot: {\r\n    borderColor: theme.palette.text.hint + \"80 !important\",\r\n  },\r\n  mainChartSelect: {\r\n    padding: 10,\r\n    paddingRight: 25,\r\n  },\r\n  mainChartLegentElement: {\r\n    fontSize: \"18px !important\",\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  success: {\r\n    backgroundColor: theme.palette.success.main,\r\n    color: \"#fff\",\r\n  },\r\n  warning: {\r\n    backgroundColor: theme.palette.warning.main,\r\n    color: \"#fff\",\r\n  },\r\n  secondary: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles(theme => ({\r\n  widgetWrapper: {\r\n    display: \"flex\",\r\n    minHeight: \"100%\",\r\n  },\r\n  widgetHeader: {\r\n    padding: theme.spacing(3),\r\n    paddingBottom: theme.spacing(1),\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  widgetRoot: {\r\n    boxShadow: theme.customShadows.widget,\r\n  },\r\n  widgetBody: {\r\n    paddingBottom: theme.spacing(3),\r\n    paddingRight: theme.spacing(3),\r\n    paddingLeft: theme.spacing(3),\r\n  },\r\n  noPadding: {\r\n    padding: 0,\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    flexGrow: 1,\r\n    overflow: \"auto\",\r\n  },\r\n  moreButton: {\r\n    margin: -theme.spacing(1),\r\n    padding: 0,\r\n    width: 40,\r\n    height: 40,\r\n    color: theme.palette.text.hint,\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.primary.main,\r\n      color: \"rgba(255, 255, 255, 0.35)\",\r\n    },\r\n  },\r\n  noWidgetShadow: {\r\n    boxShadow: 'none'\r\n  }\r\n}));\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Paper,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert as MoreIcon } from \"@material-ui/icons\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\nexport default function Widget({\r\n  children,\r\n  title,\r\n  noBodyPadding,\r\n  bodyClass,\r\n  disableWidgetMenu,\r\n  header,\r\n  noHeaderPadding,\r\n  headerClass,\r\n  style,\r\n  noWidgetShadow,\r\n  ...props\r\n}) {\r\n  var classes = useStyles();\r\n\r\n  // local\r\n  var [moreButtonRef, setMoreButtonRef] = useState(null);\r\n  var [isMoreMenuOpen, setMoreMenuOpen] = useState(false);\r\n\r\n  return (\r\n    <div className={classes.widgetWrapper} style={style && { ...style }}>\r\n      <Paper\r\n        className={classes.paper}\r\n        classes={{\r\n          root: classnames(classes.widgetRoot, {\r\n            [classes.noWidgetShadow]: noWidgetShadow,\r\n          }),\r\n        }}\r\n      >\r\n        <div\r\n          className={classnames(classes.widgetHeader, {\r\n            [classes.noPadding]: noHeaderPadding,\r\n            [headerClass]: headerClass,\r\n          })}\r\n        >\r\n          {header ? (\r\n            header\r\n          ) : (\r\n            <React.Fragment>\r\n              <Typography variant=\"h5\" color=\"textSecondary\" noWrap>\r\n                {title}\r\n              </Typography>\r\n              {!true && (\r\n                <IconButton\r\n                  color=\"primary\"\r\n                  classes={{ root: classes.moreButton }}\r\n                  aria-owns=\"widget-menu\"\r\n                  aria-haspopup=\"true\"\r\n                  onClick={() => setMoreMenuOpen(true)}\r\n                  buttonRef={setMoreButtonRef}\r\n                >\r\n                  <MoreIcon />\r\n                </IconButton>\r\n              )}\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n        <div\r\n          className={classnames(classes.widgetBody, {\r\n            [classes.noPadding]: noBodyPadding,\r\n            [bodyClass]: bodyClass,\r\n          })}\r\n        >\r\n          {children}\r\n        </div>\r\n      </Paper>\r\n      <Menu\r\n        id=\"widget-menu\"\r\n        open={isMoreMenuOpen}\r\n        anchorEl={moreButtonRef}\r\n        onClose={() => setMoreMenuOpen(false)}\r\n        disableAutoFocusItem\r\n      >\r\n        <MenuItem>\r\n          <Typography>Edit</Typography>\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <Typography>Copy</Typography>\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <Typography>Delete</Typography>\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <Typography>Print</Typography>\r\n        </MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport classNames from \"classnames\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"relative\",\r\n    overflow: \"hidden\",\r\n    height: \"100%\",\r\n    padding: 20,\r\n    minHeight: 150,\r\n    cursor: \"pointer\",\r\n    transition: \"all 0.5s\",\r\n    backgroundColor: (props) => props.color,\r\n  },\r\n  icon: {\r\n    position: \"absolute\",\r\n    bottom: -20,\r\n    left: -20,\r\n    fontSize: 180,\r\n    color: theme.palette.grey[100],\r\n  },\r\n}));\r\n\r\nexport default function SimplePaper(props) {\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <Paper className={classes.root} onClick={props.onClick} style={props.style}>\r\n      <i className={classNames(\"material-icons-round\", classes.icon)}>\r\n        {props.icon}\r\n      </i>\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Grid, IconButton } from \"@material-ui/core\";\r\nimport MUIToolTip from \"@material-ui/core/Tooltip\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport {\r\n  ResponsiveContainer,\r\n  AreaChart,\r\n  LineChart,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Line,\r\n  Area,\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  YAxis,\r\n  XAxis,\r\n  Bar,\r\n  BarChart,\r\n  PolarRadiusAxis,\r\n  Radar,\r\n  PolarGrid,\r\n  PolarAngleAxis,\r\n  RadarChart,\r\n} from \"recharts\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport useStyles from \"./styles\";\r\nimport Widget from \"../../components/Widget\";\r\nimport { Typography } from \"../../components/Wrappers\";\r\nimport Dot from \"../../components/Sidebar/components/Dot\";\r\n\r\nimport Paper from \"../../components/Paper\";\r\nimport {\r\n  persianNumber,\r\n  getRandomColorFromTheme,\r\n  hasPermission,\r\n} from \"../../helpers/utils\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { useEffect } from \"react\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\n\r\nconst RADIAN = Math.PI / 180;\r\nconst renderCustomizedLabel = ({\r\n  cx,\r\n  cy,\r\n  midAngle,\r\n  innerRadius,\r\n  outerRadius,\r\n  percent,\r\n  index,\r\n}) => {\r\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n  return (\r\n    <text\r\n      x={x}\r\n      y={y}\r\n      fill=\"white\"\r\n      textAnchor={x > cx ? \"start\" : \"end\"}\r\n      dominantBaseline=\"central\"\r\n    >\r\n      {`${persianNumber((percent * 100).toFixed(0))}%`}\r\n    </text>\r\n  );\r\n};\r\n\r\nconst empoyeeTrafficChart = [\r\n  {\r\n    subject: \"فروردین\",\r\n    A: 100,\r\n  },\r\n  {\r\n    subject: \"ادریبهشت\",\r\n    A: 60,\r\n  },\r\n  {\r\n    subject: \"خرداد\",\r\n    A: 69,\r\n  },\r\n  {\r\n    subject: \"تیر\",\r\n    A: 75,\r\n  },\r\n  {\r\n    subject: \"مرداد\",\r\n    A: 95,\r\n  },\r\n  {\r\n    subject: \"شهریور\",\r\n    A: 90,\r\n  },\r\n  {\r\n    subject: \"مهر\",\r\n    A: 62,\r\n  },\r\n  {\r\n    subject: \"آبان\",\r\n    A: 100,\r\n  },\r\n  {\r\n    subject: \"آذر\",\r\n    A: 85,\r\n  },\r\n  {\r\n    subject: \"دی\",\r\n    A: 43,\r\n  },\r\n  {\r\n    subject: \"بهمن\",\r\n    A: 72,\r\n  },\r\n  {\r\n    subject: \"اسفند\",\r\n    A: 86,\r\n  },\r\n];\r\n\r\nconst trafficDayliChart = [\r\n  { name: \"حاضرین\", value: 15, color: \"#00989D\" },\r\n  { name: \"غائبین\", value: 5, color: \"#FF5C93\" },\r\n];\r\n\r\nexport default function Dashboard(props) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n  const history = useHistory();\r\n  const [pieChart, setPieChart] = useState([]);\r\n  const [paymentChart, setPaymentChart] = useState([]);\r\n  const [factorChart, setFactorChart] = useState([]);\r\n  const [showFilterBoxPayment, setShowFilterBoxPayment] = useState(false);\r\n  const [showFilterBoxFactor, setShowFilterBoxFactor] = useState(false);\r\n  const [selectedFromDateFactor, handleFromDateChangeFactor] = useState(\r\n    moment(),\r\n  );\r\n  const [selectedToDateFactor, handleToDateChangeFactor] = useState(moment());\r\n  const [selectedFromDatePayment, handleFromDateChangePayment] = useState(\r\n    moment(),\r\n  );\r\n  const [selectedToDatePayment, handleToDateChangePayment] = useState(moment());\r\n\r\n  const getDashboardRequest = useApi({\r\n    method: \"get\",\r\n    url: `dashboard/cashes`,\r\n  });\r\n\r\n  const getPaymentRequest = useApi({\r\n    method: \"get\",\r\n    url: showFilterBoxPayment\r\n      ? `dashboard/payments?{from:${selectedFromDatePayment._d.toISOString()},to:${selectedToDatePayment._d.toISOString()}}`\r\n      : \"dashboard/payments\",\r\n  });\r\n\r\n  const getFactorRequest = useApi({\r\n    method: \"get\",\r\n    url: showFilterBoxFactor\r\n      ? `dashboard/invoices?{from:${selectedFromDateFactor._d.toISOString()},to:${selectedToDateFactor._d.toISOString()}}`\r\n      : \"dashboard/invoices\",\r\n  });\r\n\r\n  const onClickPaper = (type) => {\r\n    history.push(`/app/${type}`);\r\n  };\r\n\r\n  const onChnageDateFactor = (e, type) => {\r\n    if (type === \"from\") {\r\n      handleFromDateChangeFactor(e);\r\n    } else {\r\n      handleToDateChangeFactor(e);\r\n    }\r\n  };\r\n\r\n  const onChnageDatePayment = (e, type) => {\r\n    if (type === \"from\") {\r\n      handleFromDateChangePayment(e);\r\n    } else {\r\n      handleToDateChangePayment(e);\r\n    }\r\n  };\r\n\r\n  const getPieChartData = async () => {\r\n    const dashboardChart = await getDashboardRequest.execute();\r\n    const { cashDesks } = dashboardChart;\r\n    const newCashDesks = [];\r\n    cashDesks?.map((item) => {\r\n      newCashDesks.push({ ...item, color: getRandomColorFromTheme() });\r\n    });\r\n    setPieChart(newCashDesks);\r\n  };\r\n\r\n  const getPaymentChart = async () => {\r\n    const chart = await getPaymentRequest.execute();\r\n    const { payments } = chart;\r\n    setPaymentChart(payments);\r\n  };\r\n\r\n  const getFactorChart = async () => {\r\n    const chart = await getFactorRequest.execute();\r\n    const { invoices } = chart;\r\n    setFactorChart(invoices);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPieChartData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getPaymentChart();\r\n  }, [selectedFromDatePayment, selectedToDatePayment]);\r\n\r\n  useEffect(() => {\r\n    getFactorChart();\r\n  }, [selectedFromDateFactor, selectedToDateFactor]);\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={4} style={{ marginBottom: 20 }}>\r\n        {hasPermission(Constant.ALL_PERMISSIONS.INVOICE_EDIT) && (\r\n          <Grid item lg={3} md={4} sm={6} xs={12}>\r\n            <Paper\r\n              icon=\"shopping_basket\"\r\n              onClick={() => {\r\n                onClickPaper(\"invoice-detail?type=BUY\");\r\n              }}\r\n            >\r\n              <div className={classes.paperTitle}>\r\n                <Typography variant=\"h3\">ثبت خرید</Typography>\r\n              </div>\r\n            </Paper>\r\n          </Grid>\r\n        )}\r\n        {hasPermission(Constant.ALL_PERMISSIONS.INVOICE_EDIT) && (\r\n          <Grid item lg={3} md={4} sm={6} xs={12}>\r\n            <Paper\r\n              icon=\"sell\"\r\n              onClick={() => {\r\n                onClickPaper(\"invoice-detail?type=SELL\");\r\n              }}\r\n            >\r\n              <div className={classes.paperTitle}>\r\n                <Typography variant=\"h3\">ثبت فروش</Typography>\r\n              </div>\r\n            </Paper>\r\n          </Grid>\r\n        )}\r\n        {hasPermission(Constant.ALL_PERMISSIONS.INVOICE_EDIT) && (\r\n          <Grid item lg={3} md={4} sm={6} xs={12}>\r\n            <Paper\r\n              icon=\"move_to_inbox\"\r\n              onClick={() => {\r\n                onClickPaper(\"payment-detail?type=INCOME\");\r\n              }}\r\n            >\r\n              <div className={classes.paperTitle}>\r\n                <Typography variant=\"h3\">ثبت دریافت</Typography>\r\n              </div>\r\n            </Paper>\r\n          </Grid>\r\n        )}\r\n        {hasPermission(Constant.ALL_PERMISSIONS.PAYMENT_EDIT) && (\r\n          <Grid item lg={3} md={4} sm={6} xs={12}>\r\n            <Paper\r\n              icon=\"unarchive\"\r\n              onClick={() => {\r\n                onClickPaper(\"payment-detail?type=OUTCOME\");\r\n              }}\r\n            >\r\n              <div className={classes.paperTitle}>\r\n                <Typography variant=\"h3\">ثبت پرداخت</Typography>\r\n              </div>\r\n            </Paper>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n      <Grid container spacing={4} style={{ marginBottom: 20 }}>\r\n        {hasPermission(Constant.ALL_PERMISSIONS.INVOICE_EDIT) && (\r\n          <Grid item md={3} xs={6}>\r\n            <Paper\r\n              style={{ backgroundColor: \"#b8e4c4\" }}\r\n              icon=\"bolt\"\r\n              onClick={() => {\r\n                onClickPaper(\"fast_invoice?type=SELL\");\r\n              }}\r\n            >\r\n              <div className={classes.paperTitle}>\r\n                <Typography variant=\"h3\" style={{ color: \"#137333\" }}>\r\n                  فاکتور فروش سریع\r\n                </Typography>\r\n              </div>\r\n            </Paper>\r\n          </Grid>\r\n        )}\r\n        {hasPermission(Constant.ALL_PERMISSIONS.INVOICE_EDIT) && (\r\n          <Grid item md={3} xs={6}>\r\n            <Paper\r\n              style={{ backgroundColor: \"#f9d5d1\" }}\r\n              icon=\"bolt\"\r\n              onClick={() => {\r\n                onClickPaper(\"fast_invoice?type=BUY\");\r\n              }}\r\n            >\r\n              <div className={classes.paperTitle}>\r\n                <Typography variant=\"h3\" style={{ color: \"#c5221f\" }}>\r\n                  فاکتور خرید سریع\r\n                </Typography>\r\n              </div>\r\n            </Paper>\r\n          </Grid>\r\n        )}\r\n        {hasPermission(Constant.ALL_PERMISSIONS.ATTENDANCE_EDIT) && (\r\n          <Grid item lg={6} xs={12}>\r\n            <Paper\r\n              icon=\"transfer_within_a_station\"\r\n              onClick={() => {\r\n                onClickPaper(\"traffic\");\r\n              }}\r\n            >\r\n              <div\r\n                className={classes.paperTitle}\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <div>\r\n                  <Typography color=\"text-s\" variant=\"h3\">\r\n                    حضور و غیاب\r\n                  </Typography>\r\n                  <div\r\n                    className={classes.performanceLegendWrapper}\r\n                    style={{ marginTop: 20 }}\r\n                  >\r\n                    <div className={classes.legendElement}>\r\n                      <Dot color=\"secondary\" />\r\n                      <Typography\r\n                        color=\"text\"\r\n                        colorBrightness=\"secondary\"\r\n                        className={classes.legendElementText}\r\n                      >\r\n                        غائبین\r\n                      </Typography>\r\n                    </div>\r\n                    <div className={classes.legendElement}>\r\n                      <Dot color=\"primary\" />\r\n                      <Typography\r\n                        color=\"text\"\r\n                        colorBrightness=\"secondary\"\r\n                        className={classes.legendElementText}\r\n                      >\r\n                        حاضرین\r\n                      </Typography>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <PieChart width={250} height={100}>\r\n                  <Pie\r\n                    data={trafficDayliChart}\r\n                    cx={120}\r\n                    cy={100}\r\n                    startAngle={180}\r\n                    endAngle={0}\r\n                    innerRadius={60}\r\n                    outerRadius={80}\r\n                    fill=\"#8884d8\"\r\n                    paddingAngle={5}\r\n                    dataKey=\"value\"\r\n                  >\r\n                    {trafficDayliChart.map((entry, index) => (\r\n                      <Cell key={`cell-${index}`} fill={entry.color} />\r\n                    ))}\r\n                  </Pie>\r\n                  <Tooltip />\r\n                </PieChart>\r\n              </div>\r\n            </Paper>\r\n          </Grid>\r\n        )}{\" \"}\r\n      </Grid>\r\n      <Grid container spacing={4} style={{ marginBottom: 20 }}>\r\n        {hasPermission(Constant.ALL_PERMISSIONS.ATTENDANCE_SHOW) && (\r\n          <Grid style={{ height: 500 }} item lg={6} xs={12}>\r\n            <Widget\r\n              title=\"میزان حضور پرسنل\"\r\n              upperTitle\r\n              bodyClass={classes.fullHeightBody}\r\n              className={classes.card}\r\n            >\r\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                <RadarChart\r\n                  cx=\"50%\"\r\n                  cy=\"50%\"\r\n                  outerRadius=\"80%\"\r\n                  data={empoyeeTrafficChart}\r\n                >\r\n                  <PolarGrid />\r\n                  <PolarAngleAxis dataKey=\"subject\" />\r\n                  <PolarRadiusAxis />\r\n                  <Radar\r\n                    name=\"Mike\"\r\n                    dataKey=\"A\"\r\n                    stroke=\"#8884d8\"\r\n                    fill=\"#8884d8\"\r\n                    fillOpacity={0.6}\r\n                  />\r\n                </RadarChart>\r\n              </ResponsiveContainer>\r\n            </Widget>\r\n          </Grid>\r\n        )}\r\n        {hasPermission(Constant.ALL_PERMISSIONS.CASH_DESK_SHOW) && (\r\n          <Grid item lg={6} xs={12}>\r\n            <Widget title=\"موجودی صندوق ها\" upperTitle className={classes.card}>\r\n              <Grid container spacing={2}>\r\n                {pieChart.length && (\r\n                  <Grid item sm={6} xs={12}>\r\n                    <div style={{ width: \"100%\", height: \"330px\" }}>\r\n                      <div style={{ width: \"100%\", height: \"100%\" }}>\r\n                        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                          <PieChart width=\"300\" height=\"400\">\r\n                            <Pie\r\n                              data={pieChart}\r\n                              cx=\"50%\"\r\n                              cy=\"50%\"\r\n                              labelLine={false}\r\n                              label={renderCustomizedLabel}\r\n                              outerRadius={120}\r\n                              fill=\"#8884d8\"\r\n                              dataKey=\"amount\"\r\n                            >\r\n                              {pieChart.map((entry, index) => (\r\n                                <Cell\r\n                                  key={`cell-${index}`}\r\n                                  fill={entry.color}\r\n                                />\r\n                              ))}\r\n                            </Pie>\r\n                          </PieChart>\r\n                        </ResponsiveContainer>\r\n                      </div>\r\n                    </div>\r\n                  </Grid>\r\n                )}\r\n                <Grid item sm={6} xs={12}>\r\n                  <div className={classes.pieChartLegendWrapper}>\r\n                    {pieChart.map(({ name, amount, color }, index) => (\r\n                      <div key={color} className={classes.legendItemContainer}>\r\n                        <Dot color={color} />\r\n                        <Typography\r\n                          variant=\"h6\"\r\n                          style={{ whiteSpace: \"nowrap\" }}\r\n                        >\r\n                          &nbsp;{name}&nbsp;\r\n                        </Typography>\r\n                        <Typography\r\n                          color=\"text\"\r\n                          variant=\"h4\"\r\n                          colorBrightness=\"secondary\"\r\n                        >\r\n                          &nbsp;{persianNumber(amount)}\r\n                        </Typography>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n            </Widget>\r\n          </Grid>\r\n        )}\r\n\r\n        {hasPermission(Constant.ALL_PERMISSIONS.PAYMENT_SHOW) && (\r\n          <Grid item xs={12}>\r\n            <Widget\r\n              bodyClass={classes.mainChartBody}\r\n              header={\r\n                <div className={classes.mainChartHeader}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"text\"\r\n                    colorBrightness=\"secondary\"\r\n                  >\r\n                    دریافتی و پرداختی ها\r\n                  </Typography>\r\n\r\n                  {showFilterBoxPayment && (\r\n                    <>\r\n                      <Grid item lg={3} xs={12} className={classes.datePicker}>\r\n                        <DatePicker\r\n                          autoOk\r\n                          name=\"date\"\r\n                          label=\"از تاریخ\"\r\n                          inputVariant=\"outlined\"\r\n                          okLabel=\"تأیید\"\r\n                          cancelLabel=\"لغو\"\r\n                          labelFunc={(date) =>\r\n                            date ? date.format(\"jYYYY/jMM/jDD\") : \"\"\r\n                          }\r\n                          value={selectedFromDatePayment}\r\n                          onChange={(e) => onChnageDatePayment(e, \"from\")}\r\n                          style={{ width: \"100%\" }}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item lg={3} xs={12} className={classes.datePicker}>\r\n                        <DatePicker\r\n                          autoOk\r\n                          name=\"date\"\r\n                          label=\"تا تاریخ\"\r\n                          inputVariant=\"outlined\"\r\n                          okLabel=\"تأیید\"\r\n                          cancelLabel=\"لغو\"\r\n                          labelFunc={(date) =>\r\n                            date ? date.format(\"jYYYY/jMM/jDD\") : \"\"\r\n                          }\r\n                          value={selectedToDatePayment}\r\n                          onChange={(e) => onChnageDatePayment(e, \"to\")}\r\n                          style={{ width: \"100%\" }}\r\n                        />\r\n                      </Grid>\r\n                    </>\r\n                  )}\r\n                  <div className={classes.mainChartHeaderLabels}>\r\n                    <div className={classes.mainChartHeaderLabel}>\r\n                      <Dot color=\"primary\" />\r\n                      <Typography className={classes.mainChartLegentElement}>\r\n                        دریافتی\r\n                      </Typography>\r\n                    </div>\r\n                    <div className={classes.mainChartHeaderLabel}>\r\n                      <Dot color=\"secondary\" />\r\n                      <Typography className={classes.mainChartLegentElement}>\r\n                        پرداختی\r\n                      </Typography>\r\n                    </div>\r\n                    <MUIToolTip title=\"فیلتر\">\r\n                      <IconButton\r\n                        onClick={() =>\r\n                          setShowFilterBoxPayment(!showFilterBoxPayment)\r\n                        }\r\n                      >\r\n                        <i class=\"material-icons-round\">filter_alt</i>\r\n                      </IconButton>\r\n                    </MUIToolTip>\r\n                  </div>\r\n                </div>\r\n              }\r\n            >\r\n              <ResponsiveContainer width=\"100%\" height={350}>\r\n                <LineChart\r\n                  width={500}\r\n                  height={300}\r\n                  data={paymentChart}\r\n                  margin={{\r\n                    top: 5,\r\n                    right: 30,\r\n                    left: 20,\r\n                    bottom: 5,\r\n                  }}\r\n                >\r\n                  <CartesianGrid strokeDasharray=\"3 3\" />\r\n                  <XAxis dataKey=\"date\" />\r\n                  <YAxis />\r\n                  <Tooltip />\r\n                  <Line\r\n                    type=\"monotone\"\r\n                    dataKey=\"income\"\r\n                    stroke={theme.palette.primary.main}\r\n                    activeDot={{ r: 8 }}\r\n                  />\r\n                  <Line\r\n                    type=\"monotone\"\r\n                    dataKey=\"outcome\"\r\n                    stroke={theme.palette.secondary.main}\r\n                  />\r\n                </LineChart>\r\n              </ResponsiveContainer>\r\n            </Widget>\r\n          </Grid>\r\n        )}\r\n        {hasPermission(Constant.ALL_PERMISSIONS.INVOICE_SHOW) && (\r\n          <Grid item xs={12}>\r\n            <Widget\r\n              bodyClass={classes.mainChartBody}\r\n              header={\r\n                <div className={classes.mainChartHeader}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"text\"\r\n                    colorBrightness=\"secondary\"\r\n                  >\r\n                    مبلغ فاکتور ها\r\n                  </Typography>\r\n                  {showFilterBoxFactor && (\r\n                    <>\r\n                      <Grid item lg={3} xs={12} className={classes.datePicker}>\r\n                        <DatePicker\r\n                          autoOk\r\n                          name=\"date\"\r\n                          label=\"از تاریخ\"\r\n                          inputVariant=\"outlined\"\r\n                          okLabel=\"تأیید\"\r\n                          cancelLabel=\"لغو\"\r\n                          labelFunc={(date) =>\r\n                            date ? date.format(\"jYYYY/jMM/jDD\") : \"\"\r\n                          }\r\n                          value={selectedFromDateFactor}\r\n                          onChange={(e) => onChnageDateFactor(e, \"from\")}\r\n                          style={{ width: \"100%\" }}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item lg={3} xs={12} className={classes.datePicker}>\r\n                        <DatePicker\r\n                          autoOk\r\n                          name=\"date\"\r\n                          label=\"تا تاریخ\"\r\n                          inputVariant=\"outlined\"\r\n                          okLabel=\"تأیید\"\r\n                          cancelLabel=\"لغو\"\r\n                          labelFunc={(date) =>\r\n                            date ? date.format(\"jYYYY/jMM/jDD\") : \"\"\r\n                          }\r\n                          value={selectedToDateFactor}\r\n                          onChange={(e) => onChnageDateFactor(e, \"to\")}\r\n                          style={{ width: \"100%\" }}\r\n                        />\r\n                      </Grid>\r\n                    </>\r\n                  )}\r\n                  <div className={classes.mainChartHeaderLabels}>\r\n                    <div className={classes.mainChartHeaderLabel}>\r\n                      <Dot color=\"primary\" />\r\n                      <Typography className={classes.mainChartLegentElement}>\r\n                        فاکتور فروش\r\n                      </Typography>\r\n                    </div>\r\n                    <div className={classes.mainChartHeaderLabel}>\r\n                      <Dot color=\"secondary\" />\r\n                      <Typography className={classes.mainChartLegentElement}>\r\n                        فاکتور خرید\r\n                      </Typography>\r\n                    </div>\r\n                    <MUIToolTip title=\"فیلتر\">\r\n                      <IconButton\r\n                        onClick={() =>\r\n                          setShowFilterBoxFactor(!showFilterBoxFactor)\r\n                        }\r\n                      >\r\n                        <i class=\"material-icons-round\">filter_alt</i>\r\n                      </IconButton>\r\n                    </MUIToolTip>\r\n                  </div>\r\n                </div>\r\n              }\r\n            >\r\n              {factorChart.length && (\r\n                <div style={{ width: \"100%\", height: \"450px\" }}>\r\n                  <div style={{ width: \"100%\", height: \"100%\" }}>\r\n                    <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                      <BarChart\r\n                        width={100}\r\n                        height={300}\r\n                        data={factorChart}\r\n                        margin={{\r\n                          top: 5,\r\n                          right: 30,\r\n                          left: 20,\r\n                          bottom: 5,\r\n                        }}\r\n                      >\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"date\" />\r\n                        <YAxis />\r\n                        <Tooltip />\r\n                        <Bar dataKey=\"buy\" fill=\"#3CD4A0\" />\r\n                        <Bar dataKey=\"sell\" fill=\"#FF5C93\" />\r\n                      </BarChart>\r\n                    </ResponsiveContainer>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </Widget>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\n// #######################################################################\r\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\r\n  var array = new Array(length).fill();\r\n  let lastValue;\r\n\r\n  return array.map((item, index) => {\r\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\r\n\r\n    while (\r\n      randomValue <= min ||\r\n      randomValue >= max ||\r\n      (lastValue && randomValue - lastValue > maxDiff)\r\n    ) {\r\n      randomValue = Math.floor(Math.random() * multiplier + 1);\r\n    }\r\n\r\n    lastValue = randomValue;\r\n\r\n    return { value: randomValue };\r\n  });\r\n}\r\n\r\nfunction getMainChartData() {\r\n  var resultArray = [];\r\n  var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\r\n  var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\r\n  var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\r\n\r\n  for (let i = 0; i < tablet.length; i++) {\r\n    resultArray.push({\r\n      tablet: tablet[i].value,\r\n      desktop: desktop[i].value,\r\n      mobile: mobile[i].value,\r\n    });\r\n  }\r\n\r\n  return resultArray;\r\n}\r\n","import React from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\n\r\nconst ITEM_HEIGHT = 48;\r\n\r\nexport default function TableRowMenu(props) {\r\n  const { options, hadleAction } = props;\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleSelect = (type) => {\r\n    hadleAction(type);\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <IconButton\r\n        aria-label=\"more\"\r\n        aria-controls=\"long-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n      >\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5,\r\n          },\r\n        }}\r\n      >\r\n        {options.map(\r\n          (option) =>\r\n            !option.hidden && (\r\n              <MenuItem key={option.id} onClick={() => handleSelect(option.id)}>\r\n                {option.title}\r\n              </MenuItem>\r\n            ),\r\n        )}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Toolbar,\r\n  Typography,\r\n  IconButton,\r\n  Tooltip,\r\n  TextField,\r\n  Button,\r\n  Collapse,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/SearchRounded\";\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  box: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst TableTop = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const {\r\n    title,\r\n    onAdd,\r\n    FilterComponent,\r\n    handleSearch,\r\n    toolbarClass,\r\n    addButtonClass,\r\n    minimal,\r\n    defaultSearch,\r\n  } = props;\r\n  const [showSearchText, setShowSearchText] = useState(!!defaultSearch);\r\n  const [showFilterBox, setShowFilterBox] = useState(false);\r\n  const [searchText, setSearchText] = useState(defaultSearch);\r\n\r\n  const onChangeSearch = (event) => {\r\n    const { value } = event.target;\r\n    setSearchText(value);\r\n  };\r\n\r\n  const OnSearchKeyPress = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      handleSearch(searchText);\r\n    }\r\n  };\r\n\r\n  const onRemoveSearch = () => {\r\n    setSearchText(\"\");\r\n    handleSearch(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Toolbar className={clsx(classes.root, toolbarClass)}>\r\n        <Typography variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          {title}\r\n        </Typography>\r\n        <div className={classes.box}>\r\n          {showSearchText && (\r\n            <TextField\r\n              value={searchText}\r\n              size=\"small\"\r\n              label=\"جستجو\"\r\n              variant=\"outlined\"\r\n              onChange={onChangeSearch}\r\n              onKeyDown={OnSearchKeyPress}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <i\r\n                      className=\"material-icons-round\"\r\n                      style={{ cursor: \"pointer\" }}\r\n                      onClick={onRemoveSearch}\r\n                    >\r\n                      clear\r\n                    </i>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n          {handleSearch && (\r\n            <Tooltip title=\"جستجو در جدول\">\r\n              <IconButton\r\n                aria-label=\"filter list\"\r\n                onClick={() => setShowSearchText(!showSearchText)}\r\n              >\r\n                <SearchIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          )}\r\n          {FilterComponent && (\r\n            <Tooltip title=\"فیلتر\">\r\n              <IconButton onClick={() => setShowFilterBox(!showFilterBox)}>\r\n                <i class=\"material-icons-round\">filter_alt</i>\r\n              </IconButton>\r\n            </Tooltip>\r\n          )}\r\n\r\n          {typeof onAdd === \"function\" && (\r\n            <Button\r\n              variant={minimal ? \"\" : \"contained\"}\r\n              color={minimal ? \"\" : \"primary\"}\r\n              className={addButtonClass}\r\n              onClick={onAdd}\r\n            >\r\n              {minimal ? \"\" : \"افزودن\"}\r\n              <span class=\"material-icons-round\" style={{ color: \"white\" }}>\r\n                add\r\n              </span>\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </Toolbar>\r\n      <Collapse in={showFilterBox}>{FilterComponent}</Collapse>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TableTop;\r\n","import React from \"react\";\r\n\r\nimport {\r\n  Typography,\r\n  TableSortLabel,\r\n  TableRow,\r\n  TableCell,\r\n  TableHead,\r\n} from \"@material-ui/core\";\r\n\r\nfunction TableHeader(props) {\r\n  const { order, orderBy, onRequestSort, headCells } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            style={{ textAlign: \"right\" }}\r\n            key={headCell.id}\r\n            padding={\"none\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              className={{ display: \"flex\" }}\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              <Typography variant=\"h6\">{headCell.label}</Typography>\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nexport default TableHeader;\r\n","import React from \"react\";\r\n\r\nimport { TablePagination } from \"@material-ui/core\";\r\n\r\nfunction TablePaging(props) {\r\n  const {\r\n    handleChangePage,\r\n    count,\r\n    handleChangeRowsPerPage,\r\n    page,\r\n    rowsPerPage,\r\n  } = props;\r\n  return (\r\n    <TablePagination\r\n      style={{ display: \"flex\" }}\r\n      rowsPerPageOptions={[10, 25, 50]}\r\n      component=\"div\"\r\n      count={count}\r\n      rowsPerPage={rowsPerPage}\r\n      page={page}\r\n      onChangePage={handleChangePage}\r\n      onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      labelRowsPerPage=\"تعداد ردیف \"\r\n      backIconButtonText=\"صفحه قبل\"\r\n      nextIconButtonText=\"صفحه بعد\"\r\n      labelDisplayedRows={({ from, to, count }) =>\r\n        `${from}-${to} از ${count !== -1 ? count : 0}`\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default TablePaging;\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Grid,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport { getRandomNumber } from \"../../helpers/utils\";\r\n\r\nexport default function CustomSkeleton({ headCount }) {\r\n  return (\r\n    <Paper style={{ padding: 10 }}>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        style={{\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          padding: \"20px 0\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <Grid item style={{ width: `20%` }}>\r\n          <Skeleton variant=\"rect\" />\r\n        </Grid>\r\n        <Grid item style={{ width: `15%` }}>\r\n          <Skeleton variant=\"rect\" />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        style={{ width: \"100%\", display: \"flex\", padding: \"20px 0\" }}\r\n      >\r\n        {headCount.map((item) => {\r\n          return (\r\n            <Grid item style={{ width: `${100 / headCount.length}%` }}>\r\n              <Skeleton variant=\"text\" />\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n      <Divider />\r\n      <div>\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n          style={{ width: \"100%\", display: \"flex\", padding: \"10px 0\" }}\r\n        >\r\n          {headCount.map((item) => {\r\n            return (\r\n              <Grid item style={{ width: `${100 / headCount.length}%` }}>\r\n                <Skeleton\r\n                  variant=\"text\"\r\n                  width={`${getRandomNumber(60, 100)}%`}\r\n                />\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n        <Divider />\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n          style={{ width: \"100%\", display: \"flex\", padding: \"10px 0\" }}\r\n        >\r\n          {headCount.map((item) => {\r\n            return (\r\n              <Grid item style={{ width: `${100 / headCount.length}%` }}>\r\n                <Skeleton\r\n                  variant=\"text\"\r\n                  width={`${getRandomNumber(60, 100)}%`}\r\n                />\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n        <Divider />\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n          style={{ width: \"100%\", display: \"flex\", padding: \"10px 0\" }}\r\n        >\r\n          {headCount.map((item) => {\r\n            return (\r\n              <Grid item style={{ width: `${100 / headCount.length}%` }}>\r\n                <Skeleton\r\n                  variant=\"text\"\r\n                  width={`${getRandomNumber(60, 100)}%`}\r\n                />\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n        <Divider />\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n          style={{ width: \"100%\", display: \"flex\", padding: \"10px 0\" }}\r\n        >\r\n          {headCount.map((item) => {\r\n            return (\r\n              <Grid item style={{ width: `${100 / headCount.length}%` }}>\r\n                <Skeleton\r\n                  variant=\"text\"\r\n                  width={`${getRandomNumber(60, 100)}%`}\r\n                />\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n      </div>\r\n      <Divider />\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        style={{ width: \"100%\", display: \"flex\", padding: \"20px 0\" }}\r\n      >\r\n        <Grid item style={{ width: `10%` }}>\r\n          <Skeleton variant=\"rect\" />\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { convertParamsToQueryString, hasPermission } from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"username\",\r\n    label: \"نام کاربری\",\r\n  },\r\n  {\r\n    id: \"firstName\",\r\n    label: \"نام\",\r\n  },\r\n  { id: \"lastName\", label: \"نام خانوادگی\" },\r\n  {\r\n    id: \"mobile\",\r\n    label: \"موبایل\",\r\n  },\r\n  { id: \"phone\", label: \"تلفن\" },\r\n  { id: \"action\" },\r\n];\r\n\r\nconst MainList = () => {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"username\");\r\n  const [search, setSearch] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const history = useHistory();\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onAdd = () => {\r\n    history.push(\"/app/user-detail?action=add\");\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const getUserRequest = useApi({\r\n    method: \"get\",\r\n    url: `user?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n    })}`,\r\n  });\r\n\r\n  const deleteUseRequest = useApi({\r\n    method: \"delete\",\r\n    url: `user`,\r\n  });\r\n\r\n  const handleAction = (id, type) => {\r\n    const types = {\r\n      edit: () => {\r\n        history.push(`/app/user-detail?action=edit&id=${id}`);\r\n      },\r\n      delete: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            await deleteUseRequest.execute(null, id);\r\n            setList(list.filter((item) => item.id !== id));\r\n            DialogActions.hide({ name: \"delete\" });\r\n          },\r\n          name: \"delete\",\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const getData = async () => {\r\n    const userList = await getUserRequest.execute();\r\n    setList(userList.data);\r\n    setTotal(userList.total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.USER_SHOW) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getUserRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title=\"لیست کاربران\"\r\n                    onAdd={\r\n                      hasPermission(Constant.ALL_PERMISSIONS.USER_EDIT) && onAdd\r\n                    }\r\n                    handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                  />\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          if (!row.isAdmin) {\r\n                            return (\r\n                              <TableRow\r\n                                hover\r\n                                tabIndex={-1}\r\n                                key={row.id}\r\n                                style={{ paddingRight: 10 }}\r\n                              >\r\n                                <TableCell padding=\"none\">\r\n                                  {row.username}\r\n                                </TableCell>\r\n                                <TableCell padding=\"none\">\r\n                                  {row.firstName}\r\n                                </TableCell>\r\n                                <TableCell padding=\"none\">\r\n                                  {row.lastName}\r\n                                </TableCell>\r\n                                <TableCell padding=\"none\">\r\n                                  {row.mobile}\r\n                                </TableCell>\r\n                                <TableCell padding=\"none\">\r\n                                  {row.phone}\r\n                                </TableCell>\r\n\r\n                                <TableCell padding=\"none\">\r\n                                  <TableRowMenu\r\n                                    options={[\r\n                                      {\r\n                                        id: \"edit\",\r\n                                        title: \"ویرایش\",\r\n                                        hidden: !hasPermission(\r\n                                          Constant.ALL_PERMISSIONS.USER_EDIT,\r\n                                        ),\r\n                                      },\r\n                                      {\r\n                                        id: \"delete\",\r\n                                        title: \"حذف\",\r\n                                        hidden: !hasPermission(\r\n                                          Constant.ALL_PERMISSIONS.USER_DELETE,\r\n                                        ),\r\n                                      },\r\n                                    ]}\r\n                                    hadleAction={(type) =>\r\n                                      handleAction(row.id, type)\r\n                                    }\r\n                                  />\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            );\r\n                          }\r\n                        })}\r\n                        {!list.length && !getUserRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default MainList;\r\n","import { CircularProgress } from \"@material-ui/core\";\r\n\r\nconst Circular = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flex: 1,\r\n        heght: \"100vh\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <CircularProgress />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Circular;\r\n","import React, { useState } from \"react\";\r\nimport { Grid, Button, FormControlLabel, Checkbox } from \"@material-ui/core\";\r\n\r\nimport Constant from \"../../helpers/constant\";\r\n\r\nexport default function Permission({ onSubmit, defaultPermissions }) {\r\n  const permissions = Constant.PERMISSIONS;\r\n  const [userAccess, setUserAccess] = useState(defaultPermissions || []);\r\n\r\n  const handleChange = (item) => {\r\n    if (userAccess.includes(item)) {\r\n      return setUserAccess(userAccess.filter((i) => i !== item));\r\n    }\r\n    setUserAccess([...userAccess, item]);\r\n  };\r\n\r\n  const onSelectAll = () => {\r\n    const array = [];\r\n    permissions.map((item) => {\r\n      array.push(item.value);\r\n    });\r\n    setUserAccess(array);\r\n  };\r\n\r\n  const onDeSelectAll = () => {\r\n    setUserAccess([]);\r\n  };\r\n\r\n  return (\r\n    <Grid item sm={12}>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        style={{\r\n          maxHeight: 200,\r\n          overflowY: \"auto\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          flexWrap: \"wrap\",\r\n          marginBottom: 20,\r\n        }}\r\n      >\r\n        {permissions.map((item) => {\r\n          return (\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={userAccess.includes(item.value)}\r\n                  onChange={() => handleChange(item.value)}\r\n                  name={item.value}\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label={item.label}\r\n            />\r\n          );\r\n        })}\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          onClick={() => onSubmit(userAccess)}\r\n        >\r\n          تایید\r\n        </Button>\r\n        <Grid>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={onSelectAll}\r\n            style={{ margin: \"0 10px\" }}\r\n          >\r\n            انتخاب همه\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={onDeSelectAll}>\r\n            حذف همه\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport clsx from \"clsx\";\r\nimport { getQueryString } from \"../../helpers/utils\";\r\nimport CircularProgress from \"../../components/CircularProgress\";\r\nimport Permission from \"./permission\";\r\nimport dialogAction from \"../../redux/actions/dialogAction\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n}));\r\n\r\nexport default function MainDetail() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const id = getQueryString(\"id\");\r\n  const action = getQueryString(\"action\");\r\n  const [detail, setDetail] = useState({});\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n  const [isPassword, setIsPassword] = useState(true);\r\n  const addUserRequest = useApi({\r\n    method: \"post\",\r\n    url: `user`,\r\n  });\r\n  const editUserRequest = useApi({\r\n    method: \"put\",\r\n    url: `user/${id}`,\r\n  });\r\n  const detailUserRequest = useApi({\r\n    method: \"get\",\r\n    url: `user/${id}`,\r\n  });\r\n\r\n  const onChangeViewClick = function () {\r\n    setIsPassword(!isPassword);\r\n  };\r\n\r\n  const onSubmitPermission = async (data, permissions) => {\r\n    const value = { ...data, permissions };\r\n    if (id) {\r\n      await editUserRequest.execute(value);\r\n    } else {\r\n      await addUserRequest.execute(value);\r\n    }\r\n    onDismissPermission();\r\n  };\r\n\r\n  const onDismissPermission = () => {\r\n    dialogAction.hide({ name: \"permission\" });\r\n  };\r\n\r\n  const onShowPermissionDialog = (data) => {\r\n    dialogAction.show({\r\n      title: \"دسترسی ها\",\r\n      component: (\r\n        <Permission\r\n          defaultPermissions={detail?.permissions}\r\n          onSubmit={(value) => onSubmitPermission(data, value)}\r\n          onDismiss={onDismissPermission}\r\n        />\r\n      ),\r\n      name: \"permission\",\r\n      size: \"8\",\r\n      confirm: false,\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    onShowPermissionDialog(data);\r\n  };\r\n\r\n  const onReject = () => {\r\n    history.push(\"/app/user-list\");\r\n  };\r\n\r\n  const getDetail = async () => {\r\n    const detail = await detailUserRequest.execute();\r\n    setDetail(detail.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      getDetail();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(detail);\r\n  }, [reset, detail]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      {!detailUserRequest.pending ? (\r\n        <Grid item lg={6} sm={12} className={classes.root}>\r\n          <Paper className={classes.paper}>\r\n            <Typography\r\n              className={classes.title}\r\n              variant=\"h6\"\r\n              id=\"tableTitle\"\r\n              component=\"div\"\r\n            >\r\n              {id ? \"ویرایش کاربر\" : \"افزودن کاربر\"}\r\n            </Typography>\r\n\r\n            <Grid container spacing={3}>\r\n              <Fragment>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"نام\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.firstName}\r\n                          helperText={\r\n                            errors.firstName ? errors.firstName.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                    name=\"firstName\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"نام خانوادگی\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.lastName}\r\n                          helperText={\r\n                            errors.lastName ? errors.lastName.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                    name=\"lastName\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"نام کاربری\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.username}\r\n                          helperText={\r\n                            errors.username ? errors.username.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                    name=\"username\"\r\n                  />\r\n                </Grid>\r\n                {action === \"add\" && (\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"رمز عبور\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.password}\r\n                            helperText={\r\n                              errors.password ? errors.password.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            type={isPassword ? \"password\" : \"text\"}\r\n                            InputProps={{\r\n                              endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                  <i\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    className={clsx(\r\n                                      \"material-icons-round\",\r\n                                      classes.icon,\r\n                                    )}\r\n                                    onClick={onChangeViewClick}\r\n                                  >\r\n                                    {isPassword\r\n                                      ? \"visibility_off\"\r\n                                      : \"visibility\"}\r\n                                  </i>\r\n                                </InputAdornment>\r\n                              ),\r\n                            }}\r\n                          />\r\n                        );\r\n                      }}\r\n                      rules={{\r\n                        required: Constant.VALIDATION.REQUIRED,\r\n                        minLength: {\r\n                          value: 5,\r\n                          message: Constant.VALIDATION.PASSWORD,\r\n                        },\r\n                      }}\r\n                      name=\"password\"\r\n                    />\r\n                  </Grid>\r\n                )}\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"موبایل\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.mobile}\r\n                          helperText={\r\n                            errors.mobile ? errors.mobile.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    rules={{\r\n                      minLength: {\r\n                        value: 11,\r\n                        message: Constant.VALIDATION.MOBILE_NUMBER,\r\n                      },\r\n                      maxLength: {\r\n                        value: 11,\r\n                        message: Constant.VALIDATION.MOBILE_NUMBER,\r\n                      },\r\n                    }}\r\n                    name=\"mobile\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"تلفن\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.phone}\r\n                          helperText={errors.phone ? errors.phone.message : \"\"}\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    name=\"phone\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"آدرس\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.address}\r\n                          helperText={\r\n                            errors.address ? errors.address.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    name=\"address\"\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                    تایید\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={onReject}\r\n                  >\r\n                    بازگشت\r\n                  </Button>\r\n                </Grid>\r\n              </Fragment>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      ) : (\r\n        <CircularProgress />\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  status: {\r\n    color: \"#fff\",\r\n  },\r\n  CREDITOR: {\r\n    backgroundColor: theme.palette.success.main,\r\n  },\r\n  NODEBT: {\r\n    backgroundColor: theme.palette.gray.main,\r\n  },\r\n  DEBTOR: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: 7,\r\n  },\r\n}));\r\n","import React, { useState } from \"react\";\r\nimport { Grid, TextField, MenuItem, Button, Divider } from \"@material-ui/core\";\r\nimport Constant from \"../../helpers/constant\";\r\n\r\nconst personType = [\r\n  {\r\n    label: \"بدهکار\",\r\n    value: Constant.PERSON_STATUS.DEBTIOR,\r\n  },\r\n  { label: \"بی حساب\", value: Constant.PERSON_STATUS.NODEBT },\r\n  { label: \"طلبکار\", value: Constant.PERSON_STATUS.CREDITOR },\r\n];\r\n\r\nconst Filter = ({ onFilter }) => {\r\n  const [filterData, setFilterData] = useState({ name: \"\", status: \"\" });\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setFilterData({ ...filterData, [prop]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (typeof onFilter === \"function\") {\r\n      onFilter(filterData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3} alignItems=\"center\" style={{ padding: 10 }}>\r\n      <Grid item lg={3} xs={12}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          label=\"نام\"\r\n          onChange={handleChange(\"name\")}\r\n          value={filterData.name}\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n      </Grid>\r\n      <Grid item lg={3} xs={12}>\r\n        <TextField\r\n          select\r\n          label=\"وضعیت\"\r\n          onChange={handleChange(\"status\")}\r\n          value={filterData.status}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        >\r\n          {personType.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Grid>\r\n      <Grid item lg={3} xs={12}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n          تایید\r\n        </Button>\r\n      </Grid>\r\n      <Divider style={{ width: \"100%\" }} />\r\n    </Grid>\r\n  );\r\n};\r\nexport default Filter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Chip,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport {\r\n  convertParamsToQueryString,\r\n  hasPermission,\r\n  persianNumber,\r\n} from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport FilterComponent from \"./filter\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"firstName\",\r\n    label: \"نام\",\r\n  },\r\n  { id: \"lastName\", label: \"نام خانوادگی\" },\r\n  {\r\n    id: \"mobile\",\r\n    label: \"موبایل\",\r\n  },\r\n  { id: \"phone\", label: \"تلفن\" },\r\n  { id: \"remaining\", label: \"مانده حساب\" },\r\n  { id: \"status\", label: \"وضعیت\" },\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function MainList() {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [search, setSearch] = useState();\r\n  const [orderBy, setOrderBy] = useState(\"firstName\");\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [filter, setFilter] = useState();\r\n  const history = useHistory();\r\n  const [total, setTotal] = useState(0);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onAdd = () => {\r\n    history.push(\"/app/customer-detail\");\r\n  };\r\n\r\n  const getCustomerRequest = useApi({\r\n    method: \"get\",\r\n    url: decodeURIComponent(\r\n      `customer?${convertParamsToQueryString({\r\n        page,\r\n        order,\r\n        orderBy,\r\n        pageSize,\r\n        search,\r\n        filter,\r\n      })}`,\r\n    ),\r\n  });\r\n\r\n  const deleteUseRequest = useApi({\r\n    method: \"delete\",\r\n    url: `customer`,\r\n  });\r\n\r\n  const handleAction = (row, type) => {\r\n    const types = {\r\n      edit: () => {\r\n        history.push(`/app/customer-detail?id=${row.id}`);\r\n      },\r\n      delete: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            await deleteUseRequest.execute(null, row.id);\r\n            setList(list.filter((item) => item.id !== row.id));\r\n            DialogActions.hide({ name: \"delete\" });\r\n          },\r\n          name: \"delete\",\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n      transaction: () => {\r\n        history.push(`/app/person-transaction?id=${row.id}&type=employee`);\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onFilter = (data) => {\r\n    const properData = `{name:${data.name},status:${data.status}}`;\r\n    setFilter(properData);\r\n    setPage(0);\r\n  };\r\n\r\n  const getData = async () => {\r\n    const customerList = await getCustomerRequest.execute();\r\n    setList(customerList.data);\r\n    setTotal(customerList.total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize, filter]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.CUSTOMER_SHOW) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getCustomerRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title=\"لیست مشتریان\"\r\n                    onAdd={\r\n                      hasPermission(Constant.ALL_PERMISSIONS.CUSTOMER_EDIT) &&\r\n                      onAdd\r\n                    }\r\n                    FilterComponent={<FilterComponent onFilter={onFilter} />}\r\n                    handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                    addPermission={hasPermission(\r\n                      Constant.ALL_PERMISSIONS.CUSTOMER_EDIT,\r\n                    )}\r\n                  />\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                            >\r\n                              <TableCell padding=\"none\">\r\n                                {row.firstName}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.lastName}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(row.mobile)}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(row.phone)}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(row.accountRemaining)?.replace(\r\n                                  \"-\",\r\n                                  \"\",\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                <Chip\r\n                                  label={Constant.PERSON_STATUS[row.status]}\r\n                                  className={clsx(\r\n                                    classes.status,\r\n                                    classes[row.status],\r\n                                  )}\r\n                                />\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                <TableRowMenu\r\n                                  options={[\r\n                                    { id: \"transaction\", title: \"تراکنش ها\" },\r\n                                    {\r\n                                      id: \"edit\",\r\n                                      title: \"ویرایش\",\r\n                                      hidden: !hasPermission(\r\n                                        Constant.ALL_PERMISSIONS.CUSTOMER_EDIT,\r\n                                      ),\r\n                                    },\r\n                                    {\r\n                                      id: \"delete\",\r\n                                      title: \"حذف\",\r\n                                      hidden: !hasPermission(\r\n                                        Constant.ALL_PERMISSIONS\r\n                                          .CUSTOMER_DELETE,\r\n                                      ),\r\n                                    },\r\n                                  ]}\r\n                                  hadleAction={(type) =>\r\n                                    handleAction(row, type)\r\n                                  }\r\n                                />\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getCustomerRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import clsx from \"clsx\";\r\nimport theme from \"../../themes/default\";\r\n\r\nexport const DeleteIcon = () => {\r\n  return (\r\n    <i\r\n      className={clsx(\"material-icons-round\")}\r\n      style={{ color: theme.palette.danger.main }}\r\n    >\r\n      clear\r\n    </i>\r\n  );\r\n};\r\n\r\nexport const EditIcon = () => {\r\n  return (\r\n    <i\r\n      className={clsx(\"material-icons-round\")}\r\n      style={{ color: theme.palette.primary.main }}\r\n    >\r\n      edit\r\n    </i>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Grid, MenuItem } from \"@material-ui/core\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport styles from \"./style\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nconst Account = ({ onSubmit, onDismiss, defaultValues }) => {\r\n  const [banks, setBanks] = useState([]);\r\n  const [selectedBank, setSelectedBank] = useState(\r\n    defaultValues?.bank.value || 1,\r\n  );\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n  const classes = styles();\r\n\r\n  const getBankRequest = useApi({\r\n    method: \"get\",\r\n    url: `bank`,\r\n  });\r\n\r\n  const getBanks = async () => {\r\n    const result = await getBankRequest.execute();\r\n    setBanks(result.data);\r\n  };\r\n\r\n  const getSelectedBank = () => {\r\n    return banks.find((item) => item.value === selectedBank);\r\n  };\r\n\r\n  const onDone = (data) => {\r\n    const newId = uuid();\r\n    const value = {\r\n      ...data,\r\n      bank: getSelectedBank(),\r\n      id: defaultValues ? defaultValues.id : newId,\r\n      isUpdate: !!defaultValues,\r\n    };\r\n    onSubmit(value);\r\n  };\r\n\r\n  const onChangeBank = (e) => {\r\n    setSelectedBank(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBanks();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(defaultValues);\r\n  }, [reset, defaultValues]);\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          select\r\n          label=\"بانک\"\r\n          onChange={onChangeBank}\r\n          value={selectedBank}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n          name=\"bank\"\r\n          SelectProps={{\r\n            classes: {\r\n              select: classes.rootSelect,\r\n            },\r\n          }}\r\n        >\r\n          {banks.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              <img\r\n                src={`${Constant.API_ADDRESS}/${option.logo}`}\r\n                alt={option.label}\r\n                style={{\r\n                  width: 25,\r\n                  height: 25,\r\n                  borderRadius: \"50%\",\r\n                  marginLeft: 10,\r\n                }}\r\n              />\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                fullWidth\r\n                value={value}\r\n                size=\"small\"\r\n                name={name}\r\n                label=\"شماره کارت\"\r\n                variant=\"outlined\"\r\n                onChange={onChange}\r\n                error={!!errors.accountCardNumber}\r\n                helperText={\r\n                  errors.accountCardNumber\r\n                    ? errors.accountCardNumber.message\r\n                    : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          rules={{\r\n            minLength: {\r\n              value: 16,\r\n              message: Constant.VALIDATION.CARD_NUMBER,\r\n            },\r\n            maxLength: {\r\n              value: 16,\r\n              message: Constant.VALIDATION.CARD_NUMBER,\r\n            },\r\n          }}\r\n          name=\"accountCardNumber\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                fullWidth\r\n                value={value}\r\n                size=\"small\"\r\n                name={name}\r\n                label=\"شماره حساب\"\r\n                variant=\"outlined\"\r\n                onChange={onChange}\r\n                error={!!errors.accountNumber}\r\n                helperText={\r\n                  errors.accountNumber ? errors.accountNumber.message : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          name=\"accountNumber\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                fullWidth\r\n                value={value}\r\n                size=\"small\"\r\n                name={name}\r\n                label=\"شماره شبا\"\r\n                variant=\"outlined\"\r\n                onChange={onChange}\r\n                error={!!errors.accountShaba}\r\n                helperText={\r\n                  errors.accountShaba ? errors.accountShaba.message : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          name=\"accountShaba\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                label=\"توضیحات\"\r\n                multiline\r\n                rows={4}\r\n                variant=\"outlined\"\r\n                name={name}\r\n                onChange={onChange}\r\n                value={value}\r\n                fullWidth\r\n                error={!!errors.description}\r\n                helperText={\r\n                  errors.description ? errors.description.message : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          name=\"description\"\r\n        />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          onClick={handleSubmit(onDone)}\r\n        >\r\n          تایید\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onDismiss}>\r\n          انصراف\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport { DeleteIcon, EditIcon } from \"../../components/icons\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { getQueryString } from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport Account from \"./account\";\r\nimport CircularProgress from \"../../components/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n}));\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"Name\",\r\n    label: \"نام بانک\",\r\n  },\r\n  { id: \"accountNumber\", label: \"شماره حساب \" },\r\n  {\r\n    id: \"CardNumber\",\r\n    label: \"شماره کارت\",\r\n  },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function MainDetail() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const id = getQueryString(\"id\");\r\n  const [detail, setDetail] = useState({});\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [category, setCategory] = useState([]);\r\n  const [customerCategory, setCustomerCategory] = useState(1);\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n\r\n  const addCustomerRequest = useApi({\r\n    method: \"post\",\r\n    url: `customer`,\r\n  });\r\n  const editCustomerRequest = useApi({\r\n    method: \"put\",\r\n    url: `customer/${id}`,\r\n  });\r\n  const detailCustomerRequest = useApi({\r\n    method: \"get\",\r\n    url: `customer/${id}`,\r\n  });\r\n\r\n  const customerCategoryRequest = useApi({\r\n    method: \"get\",\r\n    url: `customer/category`,\r\n  });\r\n\r\n  const deleteAccountRequest = useApi({\r\n    method: \"delete\",\r\n    url: `account`,\r\n  });\r\n\r\n  const onSubmit = async (data) => {\r\n    const newAccounts = [];\r\n    accounts.map((item) => {\r\n      const newData = {\r\n        bankId: item.bank.value || item.bank.id,\r\n        accountCardNumber: item.accountCardNumber,\r\n        accountNumber: item.accountNumber,\r\n        accountShaba: item.accountShaba,\r\n        description: item.description,\r\n        id: item.id.toString().includes(\"-\") ? null : item.id,\r\n      };\r\n      newAccounts.push(newData);\r\n    });\r\n\r\n    const allData = { ...data, accounts: newAccounts, customerCategory };\r\n    if (id) {\r\n      return await editCustomerRequest.execute(allData);\r\n    }\r\n    await addCustomerRequest.execute(allData);\r\n    setTimeout(() => {\r\n      onReject();\r\n    }, 1000);\r\n  };\r\n\r\n  const onReject = () => {\r\n    history.push(\"/app/customer-list\");\r\n  };\r\n\r\n  const getDetail = async () => {\r\n    const detail = await detailCustomerRequest.execute();\r\n    setDetail(detail.data);\r\n    setCustomerCategory(detail.data.customerCategory);\r\n    setAccounts(detail.data.accounts);\r\n  };\r\n\r\n  const getCustomerCategory = async () => {\r\n    const detail = await customerCategoryRequest.execute();\r\n    setCategory(detail.data);\r\n  };\r\n\r\n  const onSubmitAccount = (data) => {\r\n    if (data.isUpdate) {\r\n      const index = accounts.findIndex((item) => item.id === data.id);\r\n      const accounstTmp = [...accounts];\r\n      accounstTmp[index] = data;\r\n      setAccounts(accounstTmp);\r\n    } else {\r\n      setAccounts([...accounts, data]);\r\n    }\r\n    onDismissAccount();\r\n  };\r\n\r\n  const onDismissAccount = () => {\r\n    DialogActions.hide({ name: \"account\" });\r\n  };\r\n\r\n  const onShowDialog = (data) => {\r\n    DialogActions.show({\r\n      title: \" حساب بانکی\",\r\n      component: (\r\n        <Account\r\n          onSubmit={onSubmitAccount}\r\n          onDismiss={onDismissAccount}\r\n          defaultValues={data}\r\n        />\r\n      ),\r\n      name: \"account\",\r\n      size: \"4\",\r\n      confirm: false,\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  const onAddAccount = () => {\r\n    onShowDialog();\r\n  };\r\n\r\n  const handleEditAccount = (data) => {\r\n    onShowDialog(data);\r\n  };\r\n\r\n  const handleDeleteAccount = (row) => {\r\n    debugger;\r\n    DialogActions.show({\r\n      confirm: true,\r\n      title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n      onAction: async () => {\r\n        if (id) {\r\n          await deleteAccountRequest.execute(null, row.id);\r\n        }\r\n        setAccounts(accounts.filter((item) => item.id !== row.id));\r\n        DialogActions.hide({ name: \"delete\" });\r\n      },\r\n      name: \"delete\",\r\n      size: \"6\",\r\n      disableCloseButton: false,\r\n    });\r\n  };\r\n\r\n  const onChangeCategory = (e) => {\r\n    setCustomerCategory(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCustomerCategory();\r\n    if (id) {\r\n      getDetail();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(detail);\r\n  }, [reset, detail]);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        {!detailCustomerRequest.pending ? (\r\n          <Grid item lg={6} sm={12} className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n              <Typography\r\n                className={classes.title}\r\n                variant=\"h6\"\r\n                id=\"tableTitle\"\r\n                component=\"div\"\r\n              >\r\n                {id ? \"ویرایش مشتری\" : \"افزودن مشتری\"}\r\n              </Typography>\r\n\r\n              <Grid container spacing={3}>\r\n                <Fragment>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"نام\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.firstName}\r\n                            helperText={\r\n                              errors.firstName ? errors.firstName.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                      name=\"firstName\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"نام خانوادگی\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.lastName}\r\n                            helperText={\r\n                              errors.lastName ? errors.lastName.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                      name=\"lastName\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"تلفن\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.phone}\r\n                            helperText={\r\n                              errors.phone ? errors.phone.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"phone\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"موبایل\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.mobile}\r\n                            helperText={\r\n                              errors.mobile ? errors.mobile.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      rules={{\r\n                        minLength: {\r\n                          value: 11,\r\n                          message: Constant.VALIDATION.MOBILE_NUMBER,\r\n                        },\r\n                        maxLength: {\r\n                          value: 11,\r\n                          message: Constant.VALIDATION.MOBILE_NUMBER,\r\n                        },\r\n                      }}\r\n                      name=\"mobile\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            type=\"number\"\r\n                            variant=\"outlined\"\r\n                            label=\"مانده از قبل\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.accountRemaining}\r\n                            helperText={\r\n                              errors.accountRemaining\r\n                                ? errors.accountRemaining.message\r\n                                : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"accountRemaining\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    {!!category.length && customerCategory && (\r\n                      <TextField\r\n                        select\r\n                        label=\"دسته بندی\"\r\n                        value={customerCategory}\r\n                        onChange={onChangeCategory}\r\n                        variant=\"outlined\"\r\n                        error={!!errors.customerCategory}\r\n                        helperText={\r\n                          errors.customerCategory\r\n                            ? errors.customerCategory.message\r\n                            : \"\"\r\n                        }\r\n                        fullWidth\r\n                        size=\"small\"\r\n                      >\r\n                        {category.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </TextField>\r\n                    )}\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={onAddAccount}\r\n                    >\r\n                      افزودن حساب بانکی\r\n                    </Button>\r\n                  </Grid>\r\n                  {!!accounts.length && (\r\n                    <Grid item xs={12}>\r\n                      <Paper>\r\n                        <TableContainer style={{ padding: \"0 10px\" }}>\r\n                          <Table\r\n                            className={classes.table}\r\n                            size={\"medium\"}\r\n                            style={{ paddingRight: 10 }}\r\n                          >\r\n                            <TableHeader headCells={headCells} />\r\n\r\n                            <TableBody>\r\n                              {accounts.map((row) => {\r\n                                return (\r\n                                  <TableRow\r\n                                    hover\r\n                                    tabIndex={-1}\r\n                                    key={row.id}\r\n                                    style={{ paddingRight: 10 }}\r\n                                  >\r\n                                    <TableCell padding=\"none\">\r\n                                      <div\r\n                                        style={{\r\n                                          display: \"flex\",\r\n                                          alignItems: \"center\",\r\n                                        }}\r\n                                      >\r\n                                        <img\r\n                                          src={`${Constant.API_ADDRESS}/${row.bank.logo}`}\r\n                                          alt={row.bank.label}\r\n                                          style={{\r\n                                            width: 25,\r\n                                            height: 25,\r\n                                            borderRadius: \"50%\",\r\n                                            marginLeft: 5,\r\n                                          }}\r\n                                        />\r\n                                        {row.bank.name || row.bank.label}\r\n                                      </div>\r\n                                    </TableCell>\r\n                                    <TableCell padding=\"none\">\r\n                                      {row.accountNumber}\r\n                                    </TableCell>\r\n                                    <TableCell padding=\"none\">\r\n                                      {row.accountCardNumber}\r\n                                    </TableCell>\r\n\r\n                                    <TableCell\r\n                                      padding=\"none\"\r\n                                      style={{ textAlign: \"left\" }}\r\n                                    >\r\n                                      <IconButton\r\n                                        onClick={() => handleEditAccount(row)}\r\n                                      >\r\n                                        <EditIcon />\r\n                                      </IconButton>\r\n\r\n                                      <IconButton\r\n                                        onClick={() => handleDeleteAccount(row)}\r\n                                      >\r\n                                        <DeleteIcon />\r\n                                      </IconButton>\r\n                                    </TableCell>\r\n                                  </TableRow>\r\n                                );\r\n                              })}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                      </Paper>\r\n                    </Grid>\r\n                  )}\r\n\r\n                  <Grid item xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"آدرس\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.address}\r\n                            helperText={\r\n                              errors.address ? errors.address.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"address\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            label=\"توضیحات\"\r\n                            multiline\r\n                            rows={4}\r\n                            variant=\"outlined\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            fullWidth\r\n                            error={!!errors.description}\r\n                            helperText={\r\n                              errors.description\r\n                                ? errors.description.message\r\n                                : \"\"\r\n                            }\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"description\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                  >\r\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                      تایید\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      onClick={onReject}\r\n                    >\r\n                      بازگشت\r\n                    </Button>\r\n                  </Grid>\r\n                </Fragment>\r\n              </Grid>\r\n            </Paper>\r\n          </Grid>\r\n        ) : (\r\n          <CircularProgress />\r\n        )}\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Tabs,\r\n  Tab,\r\n  Chip,\r\n} from \"@material-ui/core\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport {\r\n  convertParamsToQueryString,\r\n  persianNumber,\r\n  hasPermission,\r\n} from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport clsx from \"clsx\";\r\nimport { getQueryString } from \"../../helpers/utils\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"date\",\r\n    label: \"تاریخ\",\r\n  },\r\n  { id: \"price\", label: \"مبلغ\" },\r\n  {\r\n    id: \"type\",\r\n    label: \"نوع\",\r\n  },\r\n  {\r\n    id: \"Desc\",\r\n    label: \"بابت\",\r\n  },\r\n  { id: \"action\" },\r\n];\r\n\r\nconst MainList = () => {\r\n  const customerId = getQueryString(\"id\");\r\n  const type = getQueryString(\"type\");\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"date\");\r\n  const [search, setSearch] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const history = useHistory();\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n  };\r\n\r\n  const getPaymentRequest = useApi({\r\n    method: \"get\",\r\n    url: `payment/person/${type}?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n    })}`,\r\n  });\r\n\r\n  const deleteUseRequest = useApi({\r\n    method: \"delete\",\r\n    url: `payment`,\r\n  });\r\n\r\n  const handleAction = (row, type) => {\r\n    const types = {\r\n      edit: () => {\r\n        history.push(\r\n          `/app/payment-detail?type=${row.type}&id=${row.id}&customerId=${customerId}`,\r\n        );\r\n      },\r\n      delete: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            await deleteUseRequest.execute(null, row.id);\r\n            setList(list.filter((item) => item.id !== row.id));\r\n            DialogActions.hide({ name: \"delete\" });\r\n          },\r\n          name: \"delete\",\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const getTableTitle = () => {\r\n    if (list.length)\r\n      return (\r\n        <div>\r\n          لیست تراکنش های{\" \"}\r\n          <b style={{ fontWeight: \"bolder\" }}>{list[0].person}</b>\r\n        </div>\r\n      );\r\n  };\r\n\r\n  const getData = async () => {\r\n    const list = await getPaymentRequest.execute(null, customerId);\r\n    setList(list.data);\r\n    setTotal(list.total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.PAYMENT_LIST) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getPaymentRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title={getTableTitle()}\r\n                    handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                  />\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{\r\n                                paddingRight: 10,\r\n                                backgroundColor:\r\n                                  row.type === \"OUTCOME\"\r\n                                    ? \"#ffe8e8\"\r\n                                    : \"#b1eed9\",\r\n                              }}\r\n                            >\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  new Date(row.date).toLocaleDateString(\r\n                                    \"fa-IR\",\r\n                                  ),\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  Number(row.price).toLocaleString(),\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {Constant.PAYMENT_TYPE[row.type]}\r\n                              </TableCell>\r\n\r\n                              <TableCell padding=\"none\">\r\n                                {row.description}\r\n                              </TableCell>\r\n\r\n                              <TableCell padding=\"none\">\r\n                                <TableRowMenu\r\n                                  options={[\r\n                                    { id: \"edit\", title: \"ویرایش\" },\r\n                                    { id: \"delete\", title: \"حذف\" },\r\n                                  ]}\r\n                                  hadleAction={(type) =>\r\n                                    handleAction(row, type)\r\n                                  }\r\n                                />\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getPaymentRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default MainList;\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  salary: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  salaryPaperLeft: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  salaryPaperRight: {\r\n    marginBottom: theme.spacing(2),\r\n    padding: 20,\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  tab: {\r\n    borderBottom: `1px solid ${theme.palette.gray.main}`,\r\n  },\r\n  status: {\r\n    color: \"#fff\",\r\n  },\r\n  CREDITOR: {\r\n    backgroundColor: theme.palette.success.main,\r\n  },\r\n  NODEBT: {\r\n    backgroundColor: theme.palette.gray.main,\r\n  },\r\n  DEBTIOR: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  PRESENT: {\r\n    backgroundColor: theme.palette.success.main,\r\n  },\r\n  ABSET: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: 7,\r\n  },\r\n}));\r\n","import React, { useState } from \"react\";\r\nimport { Grid, TextField, MenuItem, Button, Divider } from \"@material-ui/core\";\r\nimport Constant from \"../../helpers/constant\";\r\n\r\nconst personType = [\r\n  {\r\n    label: \"بدهکار\",\r\n    value: Constant.PERSON_STATUS.DEBTIOR,\r\n  },\r\n  { label: \"بی حساب\", value: Constant.PERSON_STATUS.NODEBT },\r\n  { label: \"طلبکار\", value: Constant.PERSON_STATUS.CREDITOR },\r\n];\r\n\r\nconst Filter = ({ onFilter }) => {\r\n  const [filterData, setFilterData] = useState({ name: \"\", status: \"\" });\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setFilterData({ ...filterData, [prop]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (typeof onFilter === \"function\") {\r\n      onFilter(filterData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3} alignItems=\"center\" style={{ padding: 10 }}>\r\n      <Grid item lg={3} xs={12}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          label=\"نام\"\r\n          onChange={handleChange(\"name\")}\r\n          value={filterData.name}\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n      </Grid>\r\n      <Grid item lg={3} xs={12}>\r\n        <TextField\r\n          select\r\n          label=\"وضعیت\"\r\n          onChange={handleChange(\"status\")}\r\n          value={filterData.status}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        >\r\n          {personType.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Grid>\r\n      <Grid item lg={3} xs={12}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n          تایید\r\n        </Button>\r\n      </Grid>\r\n      <Divider style={{ width: \"100%\" }} />\r\n    </Grid>\r\n  );\r\n};\r\nexport default Filter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Chip,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { convertParamsToQueryString, hasPermission } from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport FilterComponent from \"./filter\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"firstName\",\r\n    label: \"نام\",\r\n  },\r\n  { id: \"lastName\", label: \"نام خانوادگی\" },\r\n  {\r\n    id: \"محل خدمت\",\r\n    label: \"محل خدمت\",\r\n  },\r\n  {\r\n    id: \"mobile\",\r\n    label: \"موبایل\",\r\n  },\r\n  { id: \"status\", label: \"وضعیت\" },\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function MainList() {\r\n  const CONTERACT_TYPE = {\r\n    DEPOT: \"انبار\",\r\n    FACTORY: \"کارخانه\",\r\n  };\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [search, setSearch] = useState();\r\n  const [orderBy, setOrderBy] = useState(\"firstName\");\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [type, setType] = useState(\"ALL\");\r\n  const [filter, setFilter] = useState();\r\n  const [total, setTotal] = useState(0);\r\n  const history = useHistory();\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onAdd = () => {\r\n    history.push(\"/app/employee-detail\");\r\n  };\r\n\r\n  const getEmployeeRequest = useApi({\r\n    method: \"get\",\r\n    url: decodeURIComponent(\r\n      `employee?${convertParamsToQueryString({\r\n        page,\r\n        order,\r\n        orderBy,\r\n        pageSize,\r\n        search,\r\n        filter,\r\n        type,\r\n      })}`,\r\n    ),\r\n  });\r\n\r\n  const deleteUseRequest = useApi({\r\n    method: \"delete\",\r\n    url: `employee`,\r\n  });\r\n\r\n  const handleAction = (row, type) => {\r\n    const { id, firstName, lastName } = row;\r\n    const types = {\r\n      edit: () => {\r\n        history.push(`/app/employee-detail?id=${id}`);\r\n      },\r\n      delete: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            await deleteUseRequest.execute(null, id);\r\n            setList(list.filter((item) => item.id !== id));\r\n            DialogActions.hide({ name: \"delete\" });\r\n          },\r\n          name: \"delete\",\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n      traffic: () => {\r\n        history.push(\r\n          `/app/employee-log?id=${id}&name=${firstName} ${lastName}`,\r\n        );\r\n      },\r\n      transaction: () => {\r\n        history.push(`/app/person-transaction?id=${id}&type=employee`);\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onFilter = (data) => {\r\n    const properData = `{name:${data.name},status:${data.status}}`;\r\n    setFilter(properData);\r\n    setPage(0);\r\n  };\r\n\r\n  const onChangeType = (e, value) => {\r\n    setType(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const getData = async () => {\r\n    const employeeList = await getEmployeeRequest.execute();\r\n    setList(employeeList.data);\r\n    setTotal(employeeList.total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize, type, filter]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.EMPLOYEE_SHOW) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getEmployeeRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title=\"لیست پرسنل\"\r\n                    onAdd={\r\n                      hasPermission(Constant.ALL_PERMISSIONS.EMPLOYEE_EDIT) &&\r\n                      onAdd\r\n                    }\r\n                    FilterComponent={<FilterComponent onFilter={onFilter} />}\r\n                    handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                  />\r\n                  <div className={classes.tab}>\r\n                    <Tabs\r\n                      value={type}\r\n                      onChange={onChangeType}\r\n                      indicatorColor=\"primary\"\r\n                      textColor=\"primary\"\r\n                      centered\r\n                      variant=\"fullWidth\"\r\n                    >\r\n                      <Tab label=\"کل پرسنل\" value=\"ALL\" />\r\n                      <Tab label=\"پرسنل کارخانه\" value=\"FACTORY\" />\r\n                      <Tab label=\"پرسنل انبار\" value=\"DEPOT\" />\r\n                    </Tabs>\r\n                  </div>\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                            >\r\n                              <TableCell padding=\"none\">\r\n                                {row.firstName}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.lastName}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {CONTERACT_TYPE[row.contractType]}\r\n                              </TableCell>\r\n\r\n                              <TableCell padding=\"none\">{row.mobile}</TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                <Chip\r\n                                  label={Constant.PERSON_STATUS[row.status]}\r\n                                  className={clsx(\r\n                                    classes.status,\r\n                                    classes[row.status],\r\n                                  )}\r\n                                />\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                <TableRowMenu\r\n                                  options={[\r\n                                    { id: \"transaction\", title: \"تراکنش ها\" },\r\n                                    { id: \"traffic\", title: \"گزارش تردد\" },\r\n                                    {\r\n                                      id: \"edit\",\r\n                                      title: \"ویرایش\",\r\n                                      hidden: !hasPermission(\r\n                                        Constant.ALL_PERMISSIONS.EMPLOYEE_EDIT,\r\n                                      ),\r\n                                    },\r\n                                    {\r\n                                      id: \"delete\",\r\n                                      title: \"حذف\",\r\n                                      hidden: !hasPermission(\r\n                                        Constant.ALL_PERMISSIONS\r\n                                          .EMPLOYEE_DELETE,\r\n                                      ),\r\n                                    },\r\n                                  ]}\r\n                                  hadleAction={(type) =>\r\n                                    handleAction(row, type)\r\n                                  }\r\n                                />\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getEmployeeRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Grid, MenuItem } from \"@material-ui/core\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport styles from \"./style\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nconst Account = ({ onSubmit, onDismiss, defaultValues }) => {\r\n  const [banks, setBanks] = useState([]);\r\n  const [selectedBank, setSelectedBank] = useState(\r\n    defaultValues?.bank.value || 1,\r\n  );\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n  const classes = styles();\r\n\r\n  const getBankRequest = useApi({\r\n    method: \"get\",\r\n    url: `bank`,\r\n  });\r\n\r\n  const getBanks = async () => {\r\n    const result = await getBankRequest.execute();\r\n    setBanks(result.data);\r\n  };\r\n\r\n  const getSelectedBank = () => {\r\n    return banks.find((item) => item.value === selectedBank);\r\n  };\r\n\r\n  const onDone = (data) => {\r\n    const newId = uuid();\r\n    const value = {\r\n      ...data,\r\n      bank: getSelectedBank(),\r\n      id: defaultValues ? defaultValues.id : newId,\r\n      isUpdate: !!defaultValues,\r\n    };\r\n    onSubmit(value);\r\n  };\r\n\r\n  const onChangeBank = (e) => {\r\n    setSelectedBank(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBanks();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(defaultValues);\r\n  }, [reset, defaultValues]);\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          select\r\n          label=\"بانک\"\r\n          onChange={onChangeBank}\r\n          value={selectedBank}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n          name=\"bank\"\r\n          SelectProps={{\r\n            classes: {\r\n              select: classes.rootSelect,\r\n            },\r\n          }}\r\n        >\r\n          {banks.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              <img\r\n                src={`${Constant.API_ADDRESS}/${option.logo}`}\r\n                alt={option.label}\r\n                style={{\r\n                  width: 25,\r\n                  height: 25,\r\n                  borderRadius: \"50%\",\r\n                  marginLeft: 10,\r\n                }}\r\n              />\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                fullWidth\r\n                value={value}\r\n                size=\"small\"\r\n                name={name}\r\n                label=\"شماره کارت\"\r\n                variant=\"outlined\"\r\n                onChange={onChange}\r\n                error={!!errors.accountCardNumber}\r\n                helperText={\r\n                  errors.accountCardNumber\r\n                    ? errors.accountCardNumber.message\r\n                    : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          rules={{\r\n            minLength: {\r\n              value: 16,\r\n              message: Constant.VALIDATION.CARD_NUMBER,\r\n            },\r\n            maxLength: {\r\n              value: 16,\r\n              message: Constant.VALIDATION.CARD_NUMBER,\r\n            },\r\n          }}\r\n          name=\"accountCardNumber\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                fullWidth\r\n                value={value}\r\n                size=\"small\"\r\n                name={name}\r\n                label=\"شماره حساب\"\r\n                variant=\"outlined\"\r\n                onChange={onChange}\r\n                error={!!errors.accountNumber}\r\n                helperText={\r\n                  errors.accountNumber ? errors.accountNumber.message : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          name=\"accountNumber\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                fullWidth\r\n                value={value}\r\n                size=\"small\"\r\n                name={name}\r\n                label=\"شماره شبا\"\r\n                variant=\"outlined\"\r\n                onChange={onChange}\r\n                error={!!errors.accountShaba}\r\n                helperText={\r\n                  errors.accountShaba ? errors.accountShaba.message : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          name=\"accountShaba\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                label=\"توضیحات\"\r\n                multiline\r\n                rows={4}\r\n                variant=\"outlined\"\r\n                name={name}\r\n                onChange={onChange}\r\n                value={value}\r\n                fullWidth\r\n                error={!!errors.description}\r\n                helperText={\r\n                  errors.description ? errors.description.message : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          name=\"description\"\r\n        />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          onClick={handleSubmit(onDone)}\r\n        >\r\n          تایید\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onDismiss}>\r\n          انصراف\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  IconButton,\r\n  RadioGroup,\r\n  Radio,\r\n  FormControlLabel,\r\n} from \"@material-ui/core\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport { DeleteIcon, EditIcon } from \"../../components/icons\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { getQueryString } from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport Account from \"./account\";\r\nimport CircularProgress from \"../../components/CircularProgress\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingBottom: 7,\r\n    paddingTop: 7,\r\n  },\r\n}));\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"Name\",\r\n    label: \"نام بانک\",\r\n  },\r\n  { id: \"accountNumber\", label: \"شماره حساب \" },\r\n  {\r\n    id: \"CardNumber\",\r\n    label: \"شماره کارت\",\r\n  },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function MainDetail() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const id = getQueryString(\"id\");\r\n  const [detail, setDetail] = useState({});\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [selectedGender, setSelectedGender] = useState(\"M\");\r\n  const [selectedContract, setSelectedContract] = useState(\"FACTORY\");\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n\r\n  const addEmployeeRequest = useApi({\r\n    method: \"post\",\r\n    url: `employee`,\r\n  });\r\n\r\n  const editEmployeeRequest = useApi({\r\n    method: \"put\",\r\n    url: `employee/${id}`,\r\n  });\r\n\r\n  const detailEmployeeRequest = useApi({\r\n    method: \"get\",\r\n    url: `employee/${id}`,\r\n  });\r\n\r\n  const deleteAccountRequest = useApi({\r\n    method: \"delete\",\r\n    url: `account`,\r\n  });\r\n\r\n  const onSubmit = async (data) => {\r\n    const newAccounts = [];\r\n    accounts.map((item) => {\r\n      const newData = {\r\n        bankId: item.bank.value || item.bank.id,\r\n        accountCardNumber: item.accountCardNumber,\r\n        accountNumber: item.accountNumber,\r\n        accountShaba: item.accountShaba,\r\n        description: item.description,\r\n        id: item.id.toString().includes(\"-\") ? null : item.id,\r\n      };\r\n      newAccounts.push(newData);\r\n    });\r\n\r\n    const allData = {\r\n      ...data,\r\n      accounts: newAccounts,\r\n      contractType: selectedContract,\r\n      gender: selectedGender,\r\n    };\r\n    if (id) {\r\n      return await editEmployeeRequest.execute(allData);\r\n    }\r\n    await addEmployeeRequest.execute(allData);\r\n    setTimeout(() => {\r\n      onReject();\r\n    }, 1000);\r\n  };\r\n\r\n  const onReject = () => {\r\n    history.push(\"/app/employee-list\");\r\n  };\r\n\r\n  const getDetail = async () => {\r\n    const detail = await detailEmployeeRequest.execute();\r\n    setDetail(detail.data);\r\n    setAccounts(detail.data.accounts);\r\n    setSelectedGender(detail.data.gender);\r\n    setSelectedContract(detail.data.contractType);\r\n  };\r\n\r\n  const onSubmitAccount = (data) => {\r\n    if (data.isUpdate) {\r\n      const index = accounts.findIndex((item) => item.id === data.id);\r\n      const accounstTmp = [...accounts];\r\n      accounstTmp[index] = data;\r\n      setAccounts(accounstTmp);\r\n    } else {\r\n      setAccounts([...accounts, data]);\r\n    }\r\n    onDismissAccount();\r\n  };\r\n\r\n  const onDismissAccount = () => {\r\n    DialogActions.hide({ name: \"account\" });\r\n  };\r\n\r\n  const onShowDialog = (data) => {\r\n    DialogActions.show({\r\n      title: \" حساب بانکی\",\r\n      component: (\r\n        <Account\r\n          onSubmit={onSubmitAccount}\r\n          onDismiss={onDismissAccount}\r\n          defaultValues={data}\r\n        />\r\n      ),\r\n      name: \"account\",\r\n      size: \"4\",\r\n      confirm: false,\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  const onAddAccount = () => {\r\n    onShowDialog();\r\n  };\r\n\r\n  const handleEditAccount = (data) => {\r\n    onShowDialog(data);\r\n  };\r\n\r\n  const handleDeleteAccount = (row) => {\r\n    DialogActions.show({\r\n      confirm: true,\r\n      title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n      onAction: async () => {\r\n        if (id) {\r\n          await deleteAccountRequest.execute(null, row.id);\r\n        }\r\n        setAccounts(accounts.filter((item) => item.id !== row.id));\r\n        DialogActions.hide({ name: \"delete\" });\r\n      },\r\n      name: \"delete\",\r\n      size: \"6\",\r\n      disableCloseButton: false,\r\n    });\r\n  };\r\n\r\n  const handleChangeGender = (e) => {\r\n    setSelectedGender(e.target.value);\r\n  };\r\n\r\n  const onChangeContract = (e) => {\r\n    setSelectedContract(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      getDetail();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(detail);\r\n  }, [reset, detail]);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        {!detailEmployeeRequest.pending ? (\r\n          <Grid item lg={6} sm={12} className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n              <Typography\r\n                className={classes.title}\r\n                variant=\"h6\"\r\n                id=\"tableTitle\"\r\n                component=\"div\"\r\n              >\r\n                {id ? \"ویرایش پرسنل\" : \"افزودن پرسنل\"}\r\n              </Typography>\r\n\r\n              <Grid container spacing={3}>\r\n                <Fragment>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"نام\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.firstName}\r\n                            helperText={\r\n                              errors.firstName ? errors.firstName.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                      name=\"firstName\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"نام خانوادگی\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.lastName}\r\n                            helperText={\r\n                              errors.lastName ? errors.lastName.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                      name=\"lastName\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"موبایل\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.mobile}\r\n                            helperText={\r\n                              errors.mobile ? errors.mobile.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      rules={{\r\n                        minLength: {\r\n                          value: 11,\r\n                          message: Constant.VALIDATION.MOBILE_NUMBER,\r\n                        },\r\n                        maxLength: {\r\n                          value: 11,\r\n                          message: Constant.VALIDATION.MOBILE_NUMBER,\r\n                        },\r\n                      }}\r\n                      name=\"mobile\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <RadioGroup\r\n                      aria-label=\"gender\"\r\n                      name=\"gender1\"\r\n                      value={selectedGender}\r\n                      onChange={handleChangeGender}\r\n                      style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"row\",\r\n                        justifyContent: \"space-around\",\r\n                      }}\r\n                    >\r\n                      <FormControlLabel\r\n                        color=\"primary\"\r\n                        value=\"M\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"مرد\"\r\n                      />\r\n                      <FormControlLabel\r\n                        color=\"primary\"\r\n                        value=\"F\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"زن\"\r\n                      />\r\n                    </RadioGroup>\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            type=\"number\"\r\n                            variant=\"outlined\"\r\n                            label=\"مانده از قبل\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.accountRemaining}\r\n                            helperText={\r\n                              errors.accountRemaining\r\n                                ? errors.accountRemaining.message\r\n                                : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"accountRemaining\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item lg={6} xs={12}>\r\n                    <TextField\r\n                      select\r\n                      label=\"نوع قرارداد\"\r\n                      value={selectedContract}\r\n                      onChange={onChangeContract}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      size=\"small\"\r\n                    >\r\n                      {Constant.EMPLOYEE_CONTACRT.map((option) => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </TextField>\r\n                  </Grid>\r\n\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={onAddAccount}\r\n                    >\r\n                      افزودن حساب بانکی\r\n                    </Button>\r\n                  </Grid>\r\n                  {!!accounts.length && (\r\n                    <Grid item xs={12}>\r\n                      <Paper>\r\n                        <TableContainer style={{ padding: \"0 10px\" }}>\r\n                          <Table\r\n                            className={classes.table}\r\n                            size={\"medium\"}\r\n                            style={{ paddingRight: 10 }}\r\n                          >\r\n                            <TableHeader headCells={headCells} />\r\n\r\n                            <TableBody>\r\n                              {accounts.map((row) => {\r\n                                return (\r\n                                  <TableRow\r\n                                    hover\r\n                                    tabIndex={-1}\r\n                                    key={row.id}\r\n                                    style={{ paddingRight: 10 }}\r\n                                  >\r\n                                    <TableCell padding=\"none\">\r\n                                      <div\r\n                                        style={{\r\n                                          display: \"flex\",\r\n                                          alignItems: \"center\",\r\n                                        }}\r\n                                      >\r\n                                        <img\r\n                                          src={`${Constant.API_ADDRESS}/${row.bank.logo}`}\r\n                                          alt={row.bank.label}\r\n                                          style={{\r\n                                            width: 25,\r\n                                            height: 25,\r\n                                            borderRadius: \"50%\",\r\n                                            marginLeft: 5,\r\n                                          }}\r\n                                        />\r\n                                        {row.bank.label || row.bank.name}\r\n                                      </div>\r\n                                    </TableCell>\r\n                                    <TableCell padding=\"none\">\r\n                                      {row.accountNumber}\r\n                                    </TableCell>\r\n                                    <TableCell padding=\"none\">\r\n                                      {row.accountCardNumber}\r\n                                    </TableCell>\r\n\r\n                                    <TableCell\r\n                                      padding=\"none\"\r\n                                      style={{ textAlign: \"left\" }}\r\n                                    >\r\n                                      <IconButton\r\n                                        onClick={() => handleEditAccount(row)}\r\n                                      >\r\n                                        <EditIcon />\r\n                                      </IconButton>\r\n\r\n                                      <IconButton\r\n                                        onClick={() => handleDeleteAccount(row)}\r\n                                      >\r\n                                        <DeleteIcon />\r\n                                      </IconButton>\r\n                                    </TableCell>\r\n                                  </TableRow>\r\n                                );\r\n                              })}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                      </Paper>\r\n                    </Grid>\r\n                  )}\r\n\r\n                  <Grid item xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"آدرس\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.address}\r\n                            helperText={\r\n                              errors.address ? errors.address.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"address\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            label=\"توضیحات\"\r\n                            multiline\r\n                            rows={4}\r\n                            variant=\"outlined\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            fullWidth\r\n                            error={!!errors.description}\r\n                            helperText={\r\n                              errors.description\r\n                                ? errors.description.message\r\n                                : \"\"\r\n                            }\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"description\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                  >\r\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                      تایید\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      onClick={onReject}\r\n                    >\r\n                      بازگشت\r\n                    </Button>\r\n                  </Grid>\r\n                </Fragment>\r\n              </Grid>\r\n            </Paper>\r\n          </Grid>\r\n        ) : (\r\n          <CircularProgress />\r\n        )}\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  tab: {\r\n    borderBottom: `1px solid ${theme.palette.gray.main}`,\r\n  },\r\n  type: {\r\n    color: \"#fff\",\r\n  },\r\n  allIcon: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  SELL: {\r\n    backgroundColor: theme.palette.success.main,\r\n  },\r\n  incomeIcon: {\r\n    color: theme.palette.success.main,\r\n  },\r\n  BUY: {\r\n    backgroundColor: theme.palette.danger.main,\r\n  },\r\n  outgoIcon: {\r\n    color: theme.palette.danger.main,\r\n  },\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingBottom: 7,\r\n    paddingTop: 7,\r\n  },\r\n  selectedButton: {\r\n    backgroundColor: theme.palette.success.main,\r\n    color: \"#fff\",\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.success.main,\r\n    },\r\n  },\r\n}));\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, TextField, MenuItem, Button, Divider } from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n}));\r\nconst Filter = ({ onFilter }) => {\r\n  const classes = useStyles();\r\n  const [selectedPerson, setSelectedPerson] = useState();\r\n  const [selectedFromDate, handleFromDateChange] = useState(moment());\r\n  const [selectedToDate, handleToDateChange] = useState(moment());\r\n  const [customers, setCustomers] = useState([]);\r\n\r\n  const getCustomersRequest = useApi({\r\n    method: \"get\",\r\n    url: \"customer\",\r\n  });\r\n\r\n  const onChangePerson = (e, value) => {\r\n    setSelectedPerson(value);\r\n  };\r\n\r\n  const onChnageDate = (e, type) => {\r\n    if (type === \"from\") {\r\n      handleFromDateChange(e);\r\n    } else {\r\n      handleToDateChange(e);\r\n    }\r\n  };\r\n\r\n  const getCustomers = async () => {\r\n    const customerList = await getCustomersRequest.execute();\r\n    setCustomers(customerList.data);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (typeof onFilter === \"function\") {\r\n      onFilter(\r\n        `{customerId:${\r\n          selectedPerson ? selectedPerson.id : null\r\n        },from:${selectedFromDate._d.toISOString()},to:${selectedToDate._d.toISOString()}}`,\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCustomers();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container spacing={3} alignItems=\"center\" style={{ padding: 10 }}>\r\n      <Grid item lg={3} xs={12} style={{ display: \"flex\" }}>\r\n        <Autocomplete\r\n          id=\"combo-box-demo\"\r\n          onChange={onChangePerson}\r\n          options={customers}\r\n          getOptionLabel={(option) => `${option.firstName} ${option.lastName}`}\r\n          fullWidth\r\n          size=\"small\"\r\n          renderInput={(params) => (\r\n            <TextField {...params} label=\"انتخاب شخص\" variant=\"outlined\" />\r\n          )}\r\n        />\r\n      </Grid>\r\n      <Grid item lg={3} xs={12} className={classes.datePicker}>\r\n        <DatePicker\r\n          autoOk\r\n          name=\"date\"\r\n          label=\"از تاریخ\"\r\n          inputVariant=\"outlined\"\r\n          okLabel=\"تأیید\"\r\n          cancelLabel=\"لغو\"\r\n          labelFunc={(date) => (date ? date.format(\"jYYYY/jMM/jDD\") : \"\")}\r\n          value={selectedFromDate}\r\n          onChange={(e) => onChnageDate(e, \"from\")}\r\n          style={{ width: \"100%\" }}\r\n        />\r\n      </Grid>\r\n      <Grid item lg={3} xs={12} className={classes.datePicker}>\r\n        <DatePicker\r\n          autoOk\r\n          name=\"date\"\r\n          label=\"تا تاریخ\"\r\n          inputVariant=\"outlined\"\r\n          okLabel=\"تأیید\"\r\n          cancelLabel=\"لغو\"\r\n          labelFunc={(date) => (date ? date.format(\"jYYYY/jMM/jDD\") : \"\")}\r\n          value={selectedToDate}\r\n          onChange={(e) => onChnageDate(e, \"to\")}\r\n          style={{ width: \"100%\" }}\r\n        />\r\n      </Grid>\r\n      <Grid item lg={3} xs={12}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n          تایید\r\n        </Button>\r\n      </Grid>\r\n      <Divider style={{ width: \"100%\" }} />\r\n    </Grid>\r\n  );\r\n};\r\nexport default Filter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Tabs,\r\n  Tab,\r\n  Chip,\r\n} from \"@material-ui/core\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport {\r\n  convertParamsToQueryString,\r\n  persianNumber,\r\n  hasPermission,\r\n} from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport clsx from \"clsx\";\r\nimport { getQueryString } from \"../../helpers/utils\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\nimport FilterComponent from \"./filter\";\r\n\r\nconst headCells = [\r\n  { id: \"id\", label: \"شماره فاکتور\" },\r\n  {\r\n    id: \"person\",\r\n    label: \"مشتری\",\r\n  },\r\n  {\r\n    id: \"date\",\r\n    label: \"تاریخ\",\r\n  },\r\n  { id: \"price\", label: \"مبلغ\" },\r\n  {\r\n    id: \"category\",\r\n    label: \"دسته بندی\",\r\n  },\r\n  {\r\n    id: \"type\",\r\n    label: \"نوع\",\r\n  },\r\n\r\n  // { id: \"action\" },\r\n];\r\n\r\nconst MainList = () => {\r\n  const invoiceType = getQueryString(\"type\");\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"date\");\r\n  const [search, setSearch] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [filter, setFilter] = useState();\r\n  const [total, setTotal] = useState(0);\r\n  const [type, setType] = useState(invoiceType);\r\n  const history = useHistory();\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onAdd = () => {\r\n    history.push(`/app/invoice-detail?type=${type}`);\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const getInvoiceRequest = useApi({\r\n    method: \"get\",\r\n    url: decodeURIComponent(\r\n      `invoice?${convertParamsToQueryString({\r\n        page,\r\n        order,\r\n        orderBy,\r\n        pageSize,\r\n        search,\r\n        type,\r\n        filter,\r\n      })}`,\r\n    ),\r\n  });\r\n\r\n  const deleteUseRequest = useApi({\r\n    method: \"delete\",\r\n    url: `invoice`,\r\n  });\r\n\r\n  const handleAction = (id, type) => {\r\n    const types = {\r\n      edit: () => {\r\n        history.push(`/app/invoice-detail?type=${type}&id=${id}`);\r\n      },\r\n      delete: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            await deleteUseRequest.execute(null, id);\r\n            setList(list.filter((item) => item.id !== id));\r\n            DialogActions.hide({ name: \"delete\" });\r\n          },\r\n          name: \"delete\",\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const onChangeType = (e, value) => {\r\n    setType(value);\r\n  };\r\n\r\n  const getTableTitle = () => {\r\n    if (type === \"SELL\") {\r\n      return \"لیست فاکتورهای فروش \";\r\n    } else if (type === \"BUY\") {\r\n      return \"لیست فاکتورهای خرید\";\r\n    }\r\n    return \"لیست تمامی فاکتور ها\";\r\n  };\r\n\r\n  const getData = async () => {\r\n    const invoiceList = await getInvoiceRequest.execute();\r\n    setList(invoiceList.data);\r\n    setTotal(invoiceList.total);\r\n  };\r\n\r\n  const onFilter = (data) => {\r\n    setFilter(data);\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize, type, filter]);\r\n\r\n  useEffect(() => {\r\n    setType(invoiceType);\r\n  }, [invoiceType]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.INVOICE_SHOW) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getInvoiceRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title={getTableTitle()}\r\n                    onAdd={type !== \"ALL\" && onAdd}\r\n                    handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                    FilterComponent={<FilterComponent onFilter={onFilter} />}\r\n                  />\r\n                  <div className={classes.tab}>\r\n                    <Tabs\r\n                      variant=\"fullWidth\"\r\n                      value={type}\r\n                      onChange={onChangeType}\r\n                      indicatorColor=\"primary\"\r\n                      textColor=\"primary\"\r\n                      centered\r\n                    >\r\n                      <Tab\r\n                        icon={\r\n                          <i\r\n                            className={clsx(\r\n                              \"material-icons-round\",\r\n                              classes.allIcon,\r\n                            )}\r\n                          >\r\n                            sync\r\n                          </i>\r\n                        }\r\n                        label=\"کل تراکنش ها\"\r\n                        value=\"ALL\"\r\n                      />\r\n                      <Tab\r\n                        icon={\r\n                          <i\r\n                            className={clsx(\r\n                              \"material-icons-round\",\r\n                              classes.incomeIcon,\r\n                            )}\r\n                          >\r\n                            sell\r\n                          </i>\r\n                        }\r\n                        label=\"فاکتور های فروش\"\r\n                        value=\"SELL\"\r\n                      />\r\n                      <Tab\r\n                        icon={\r\n                          <i\r\n                            className={clsx(\r\n                              \"material-icons-round\",\r\n                              classes.outgoIcon,\r\n                            )}\r\n                          >\r\n                            shopping_basket\r\n                          </i>\r\n                        }\r\n                        label=\"فاکتور های خرید\"\r\n                        value=\"BUY\"\r\n                      />\r\n                    </Tabs>\r\n                  </div>\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                            >\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(row.id)}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.globalCustomer\r\n                                  ? `${row.globalCustomer}(${row.customer})`\r\n                                  : row.customer}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  new Date(row.date).toLocaleDateString(\r\n                                    \"fa-IR\",\r\n                                  ),\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  Number(row.price).toLocaleString(),\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.category}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                <Chip\r\n                                  label={Constant.INVOICE_TYPE[row.type]}\r\n                                  className={clsx(\r\n                                    classes.type,\r\n                                    classes[row.type],\r\n                                  )}\r\n                                />\r\n                              </TableCell>\r\n\r\n                              {/* <TableCell padding=\"none\">\r\n                                <TableRowMenu\r\n                                  options={\r\n                                    [\r\n                                      // { id: \"edit\", title: \"ویرایش\" },\r\n                                      // { id: \"delete\", title: \"حذف\" },\r\n                                    ]\r\n                                  }\r\n                                  hadleAction={(type) =>\r\n                                    handleAction(row.id, type)\r\n                                  }\r\n                                />\r\n                              </TableCell> */}\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getInvoiceRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default MainList;\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  tab: {\r\n    borderBottom: `1px solid ${theme.palette.gray.main}`,\r\n  },\r\n  type: {\r\n    color: \"#fff\",\r\n  },\r\n  allIcon: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  INCOME: {\r\n    backgroundColor: theme.palette.success.main,\r\n  },\r\n  incomeIcon: {\r\n    color: theme.palette.success.main,\r\n  },\r\n  OUTCOME: {\r\n    backgroundColor: theme.palette.danger.main,\r\n  },\r\n  outgoIcon: {\r\n    color: theme.palette.danger.main,\r\n  },\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingBottom: 7,\r\n    paddingTop: 7,\r\n  },\r\n}));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Typography,\r\n  Chip,\r\n  Button,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { convertParamsToQueryString } from \"../../helpers/utils\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\n\r\nconst headCellsCustomer = [\r\n  {\r\n    id: \"firstName\",\r\n    label: \"نام\",\r\n  },\r\n  { id: \"lastName\", label: \"نام خانوادگی\" },\r\n\r\n  { id: \"status\", label: \"وضعیت\" },\r\n  { id: \"action\" },\r\n];\r\nconst headCellsPerson = [\r\n  { id: \"lastName\", label: \"نام و نام خانوادگی\" },\r\n  { id: \"type\", label: \"نوع شخص\" },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nconst PERSON_TYPE = {\r\n  EMPLOYEE: \"پرسنل\",\r\n  CUSTOMER: \"مشتری\",\r\n  DRIVER: \"راننده\",\r\n};\r\n\r\nexport default function MainList({ onSelect, onDismiss, filter }) {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [search, setSearch] = useState();\r\n  const [orderBy, setOrderBy] = useState(\"firstName\");\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onSelectPerson = (data) => {\r\n    onSelect(data);\r\n  };\r\n\r\n  const getCustomerRequest = useApi({\r\n    method: \"get\",\r\n    url: `${filter}?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n    })}`,\r\n  });\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n  };\r\n\r\n  const getData = async () => {\r\n    const customerList = await getCustomerRequest.execute();\r\n    setList(customerList.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize]);\r\n\r\n  return (\r\n    <div style={{ marginTop: -20 }}>\r\n      <TableTop handleSearch={onSearch} />\r\n      <TableContainer>\r\n        <Table className={classes.table} size={\"medium\"}>\r\n          <TableHeader\r\n            classes={classes}\r\n            order={order}\r\n            orderBy={orderBy}\r\n            onRequestSort={handleRequestSort}\r\n            rowCount={list.length}\r\n            headCells={\r\n              filter === \"person\" ? headCellsPerson : headCellsCustomer\r\n            }\r\n          />\r\n\r\n          <TableBody>\r\n            {list.map((row) => {\r\n              return (\r\n                <TableRow\r\n                  hover\r\n                  tabIndex={-1}\r\n                  key={filter === \"customer\" ? row.id : row.value}\r\n                  style={{ paddingRight: 10 }}\r\n                >\r\n                  {filter === \"person\" && (\r\n                    <TableCell padding=\"none\">{row.label}</TableCell>\r\n                  )}\r\n                  {filter === \"person\" && (\r\n                    <TableCell padding=\"none\">\r\n                      {PERSON_TYPE[row.personType]}\r\n                    </TableCell>\r\n                  )}\r\n\r\n                  {filter === \"customer\" && (\r\n                    <TableCell padding=\"none\">{row.firstName}</TableCell>\r\n                  )}\r\n                  {filter === \"customer\" && (\r\n                    <TableCell padding=\"none\">{row.lastName}</TableCell>\r\n                  )}\r\n\r\n                  {filter === \"customer\" && (\r\n                    <TableCell padding=\"none\">\r\n                      <Chip\r\n                        label={Constant.PERSON_STATUS[row.status]}\r\n                        className={clsx(classes.status, classes[row.status])}\r\n                      />\r\n                    </TableCell>\r\n                  )}\r\n\r\n                  <TableCell padding=\"none\">\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={() => onSelectPerson(row)}\r\n                    >\r\n                      انتخاب شخص\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n            {!list.length && !getCustomerRequest.pending && (\r\n              <TableRow style={{ height: 53 }}>\r\n                <TableCell colSpan={6} style={{ textAlign: \"center\" }}>\r\n                  <Typography variant=\"h6\">\r\n                    داده ای برای نمایش وجود ندارد\r\n                  </Typography>\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePaging\r\n        count={list.length}\r\n        handleChangePage={handleChangePage}\r\n        handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n        page={page}\r\n        rowsPerPage={pageSize}\r\n      />\r\n\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n      >\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n          انصراف\r\n        </Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Grid, MenuItem } from \"@material-ui/core\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport moment from \"moment\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport styles from \"./style\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nconst Payment = ({ onSubmit, onDismiss, defaultValues, paymentType, type }) => {\r\n  const [banks, setBanks] = useState([]);\r\n  const [chequeDueDate, handleChequeDueDateChange] = useState(moment());\r\n  const [selectedTransaction, setSelectedTransaction] = useState(\r\n    defaultValues?.transactionType,\r\n  );\r\n  const [selectedBank, setSelectedBank] = useState(defaultValues?.bankId || 1);\r\n  const [cashes, setCashes] = useState([]);\r\n  const [selectedCash, setSelectedCash] = useState(\r\n    defaultValues?.cashDeskId || 5,\r\n  );\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n  const classes = styles();\r\n\r\n  const getBankRequest = useApi({\r\n    method: \"get\",\r\n    url: `bank`,\r\n  });\r\n\r\n  const getCashRequest = useApi({\r\n    method: \"get\",\r\n    url: `cashdesk/picker`,\r\n  });\r\n\r\n  const getBanks = async () => {\r\n    const result = await getBankRequest.execute();\r\n    setBanks(result.data);\r\n  };\r\n\r\n  const getCashes = async () => {\r\n    const result = await getCashRequest.execute();\r\n    setCashes(result.data);\r\n  };\r\n\r\n  const getSelectedBank = () => {\r\n    return banks.find((item) => item.value === selectedBank);\r\n  };\r\n\r\n  const getSelectedCash = () => {\r\n    return cashes.find((item) => item.value === selectedCash);\r\n  };\r\n\r\n  const onDone = (data) => {\r\n    const newId = uuid();\r\n    let value;\r\n    if (type === \"NAGHD\") {\r\n      value = {\r\n        ...data,\r\n        id: defaultValues ? defaultValues.id : newId,\r\n        cashDeskId: selectedCash,\r\n        cashDesk: getSelectedCash(),\r\n        isUpdate: !!defaultValues,\r\n      };\r\n    } else if (type === \"CARD\") {\r\n      value = {\r\n        ...data,\r\n        id: defaultValues ? defaultValues.id : newId,\r\n        cashDeskId: selectedCash,\r\n        bankId: selectedBank,\r\n        cashDesk: getSelectedCash(),\r\n        bank: getSelectedBank(),\r\n        transactionType: selectedTransaction,\r\n        isUpdate: !!defaultValues,\r\n      };\r\n    } else {\r\n      value = {\r\n        ...data,\r\n        id: defaultValues ? defaultValues.id : newId,\r\n        cashDeskId: selectedCash,\r\n        bankId: selectedBank,\r\n        cashDesk: getSelectedCash(),\r\n        bank: getSelectedBank(),\r\n        chequeDueDate: chequeDueDate._d,\r\n        isUpdate: !!defaultValues,\r\n      };\r\n    }\r\n    return onSubmit(value, type, !!defaultValues);\r\n  };\r\n\r\n  const onChangeBank = (e) => {\r\n    setSelectedBank(e.target.value);\r\n  };\r\n\r\n  const onChangeTransaction = (e) => {\r\n    setSelectedTransaction(e.target.value);\r\n  };\r\n\r\n  const onChangeCash = (e) => {\r\n    setSelectedCash(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBanks();\r\n    getCashes();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(defaultValues);\r\n  }, [reset, defaultValues]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onDone)}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          {type === \"NAGHD\" && (\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  select\r\n                  label=\"صندوق\"\r\n                  onChange={onChangeCash}\r\n                  value={selectedCash}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  name=\"cash\"\r\n                >\r\n                  {cashes.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Controller\r\n                  control={control}\r\n                  render={({ onChange, value, name }) => {\r\n                    return (\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        label=\"مبلغ نقدی\"\r\n                        type=\"number\"\r\n                        name={name}\r\n                        onChange={onChange}\r\n                        value={value}\r\n                        error={!!errors.price}\r\n                        helperText={errors.price ? errors.price.message : \"\"}\r\n                        fullWidth\r\n                        size=\"small\"\r\n                      />\r\n                    );\r\n                  }}\r\n                  name=\"price\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n          {type === \"CARD\" && (\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  select\r\n                  label=\"صندوق\"\r\n                  onChange={onChangeCash}\r\n                  value={selectedCash}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  name=\"cash\"\r\n                >\r\n                  {cashes.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  select\r\n                  label=\"نوع تراکنش\"\r\n                  onChange={onChangeTransaction}\r\n                  value={selectedTransaction}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  name=\"cash\"\r\n                >\r\n                  {Constant.BANK_TRANSACTION_TYPE.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Controller\r\n                  control={control}\r\n                  render={({ onChange, value, name }) => {\r\n                    return (\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        label=\"مبلغ \"\r\n                        type=\"number\"\r\n                        name={name}\r\n                        onChange={onChange}\r\n                        value={value}\r\n                        error={!!errors.price}\r\n                        helperText={errors.price ? errors.price.message : \"\"}\r\n                        fullWidth\r\n                        size=\"small\"\r\n                      />\r\n                    );\r\n                  }}\r\n                  rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                  name=\"price\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Controller\r\n                  control={control}\r\n                  render={({ onChange, value, name }) => {\r\n                    return (\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        label=\"شماره رهگیری\"\r\n                        number\r\n                        name={name}\r\n                        onChange={onChange}\r\n                        value={value}\r\n                        error={!!errors.trackingCode}\r\n                        helperText={\r\n                          errors.trackingCode ? errors.trackingCode.message : \"\"\r\n                        }\r\n                        fullWidth\r\n                        size=\"small\"\r\n                      />\r\n                    );\r\n                  }}\r\n                  name=\"trackingCode\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  select\r\n                  label=\"بانک\"\r\n                  onChange={onChangeBank}\r\n                  value={selectedBank}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  name=\"bank\"\r\n                  SelectProps={{\r\n                    classes: {\r\n                      select: classes.rootSelect,\r\n                    },\r\n                  }}\r\n                >\r\n                  {banks.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      <img\r\n                        src={`${Constant.API_ADDRESS}/${option.logo}`}\r\n                        alt={option.label}\r\n                        style={{\r\n                          width: 25,\r\n                          height: 25,\r\n                          borderRadius: \"50%\",\r\n                          marginLeft: 10,\r\n                        }}\r\n                      />\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n          {type === \"CHECK\" && (\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  select\r\n                  label=\"صندوق\"\r\n                  onChange={onChangeCash}\r\n                  value={selectedCash}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  name=\"cash\"\r\n                >\r\n                  {cashes.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Controller\r\n                  control={control}\r\n                  render={({ onChange, value, name }) => {\r\n                    return (\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        label=\"مبلغ چک\"\r\n                        type=\"number\"\r\n                        name={name}\r\n                        onChange={onChange}\r\n                        value={value}\r\n                        error={!!errors.price}\r\n                        helperText={errors.price ? errors.price.message : \"\"}\r\n                        fullWidth\r\n                        size=\"small\"\r\n                      />\r\n                    );\r\n                  }}\r\n                  rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                  name=\"price\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Controller\r\n                  control={control}\r\n                  render={({ onChange, value, name }) => {\r\n                    return (\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        label=\"شماره چک\"\r\n                        number\r\n                        name={name}\r\n                        onChange={onChange}\r\n                        value={value}\r\n                        error={!!errors.chequeNumber}\r\n                        helperText={\r\n                          errors.chequeNumber ? errors.chequeNumber.message : \"\"\r\n                        }\r\n                        fullWidth\r\n                        size=\"small\"\r\n                      />\r\n                    );\r\n                  }}\r\n                  name=\"chequeNumber\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  select\r\n                  label=\"بانک\"\r\n                  onChange={onChangeBank}\r\n                  value={selectedBank}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  name=\"bank\"\r\n                  SelectProps={{\r\n                    classes: {\r\n                      select: classes.rootSelect,\r\n                    },\r\n                  }}\r\n                >\r\n                  {banks.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      <img\r\n                        src={`${Constant.API_ADDRESS}/${option.logo}`}\r\n                        alt={option.label}\r\n                        style={{\r\n                          width: 25,\r\n                          height: 25,\r\n                          borderRadius: \"50%\",\r\n                          marginLeft: 10,\r\n                        }}\r\n                      />\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Controller\r\n                  control={control}\r\n                  render={({ onChange, value, name }) => {\r\n                    return (\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        label=\"شعبه\"\r\n                        number\r\n                        name={name}\r\n                        onChange={onChange}\r\n                        value={value}\r\n                        error={!!errors.bankBranch}\r\n                        helperText={\r\n                          errors.bankBranch ? errors.bankBranch.message : \"\"\r\n                        }\r\n                        fullWidth\r\n                        size=\"small\"\r\n                      />\r\n                    );\r\n                  }}\r\n                  name=\"bankBranch\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} className={classes.datePicker}>\r\n                <DatePicker\r\n                  name=\"date\"\r\n                  label=\"تاریخ سررسید\"\r\n                  inputVariant=\"outlined\"\r\n                  okLabel=\"تأیید\"\r\n                  cancelLabel=\"لغو\"\r\n                  labelFunc={(date) =>\r\n                    date ? date.format(\"jYYYY/jMM/jDD\") : \"\"\r\n                  }\r\n                  value={chequeDueDate}\r\n                  onChange={handleChequeDueDateChange}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Controller\r\n                  control={control}\r\n                  render={({ onChange, value, name }) => {\r\n                    return (\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        label=\"در وجه\"\r\n                        number\r\n                        name={name}\r\n                        onChange={onChange}\r\n                        value={value}\r\n                        error={!!errors.chequePayTo}\r\n                        helperText={\r\n                          errors.chequePayTo ? errors.chequePayTo.message : \"\"\r\n                        }\r\n                        fullWidth\r\n                        size=\"small\"\r\n                      />\r\n                    );\r\n                  }}\r\n                  name=\"chequePayTo\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            onClick={handleSubmit(onDone)}\r\n          >\r\n            تایید\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n            انصراف\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Payment;\r\n","import React, { useEffect, useState, useImperativeHandle } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  Button,\r\n  ButtonGroup,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Accordion,\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport { DeleteIcon, EditIcon } from \"../../components/icons\";\r\nimport { getQueryString, persianNumber } from \"../../helpers/utils\";\r\nimport dialogAction from \"../../redux/actions/dialogAction\";\r\nimport Payment from \"./paymnet\";\r\nimport update from \"immutability-helper\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingBottom: 7,\r\n    paddingTop: 7,\r\n  },\r\n}));\r\n\r\nconst naghdPayHeadCells = [\r\n  { id: \"cash\", label: \"صندوق\" },\r\n  {\r\n    id: \"amount\",\r\n    label: \"مبلغ \",\r\n  },\r\n  { id: \"action\" },\r\n];\r\nconst cardPayHeadCells = [\r\n  { id: \"cash\", label: \"صندوق\" },\r\n  {\r\n    id: \"amount\",\r\n    label: \"مبلغ \",\r\n  },\r\n  {\r\n    id: \"type\",\r\n    label: \"نوع تراکنش \",\r\n  },\r\n  {\r\n    id: \"bank\",\r\n    label: \"بانک \",\r\n  },\r\n  {\r\n    id: \"code\",\r\n    label: \"شماره رهگیری \",\r\n  },\r\n  { id: \"action\" },\r\n];\r\nconst checkPayHeadCells = [\r\n  { id: \"cash\", label: \"صندوق\" },\r\n  {\r\n    id: \"amount\",\r\n    label: \"مبلغ \",\r\n  },\r\n  { id: \"dueDate\", label: \"تاریخ سررسید\" },\r\n  {\r\n    id: \"bank\",\r\n    label: \"بانک \",\r\n  },\r\n  { id: \"action\" },\r\n];\r\n\r\nconst PrePayment = React.forwardRef((props, ref) => {\r\n  const { defaultValues } = props;\r\n  const classes = useStyles();\r\n  const paymentType = getQueryString(\"type\");\r\n  const [payments, setPayments] = useState();\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return payments;\r\n  });\r\n\r\n  const onSubmitPaymentActions = (value, type, isEdit) => {\r\n    if (isEdit) {\r\n      return handleSubmitEditPayment(value, type);\r\n    }\r\n    return handleSubmitAddPayment(value, type);\r\n  };\r\n\r\n  const handleSubmitAddPayment = (value, type) => {\r\n    let newPayments;\r\n    const types = {\r\n      NAGHD: () => {\r\n        newPayments = update(payments, {\r\n          cashes: { $push: [value] },\r\n        });\r\n      },\r\n      CARD: () => {\r\n        newPayments = update(payments, {\r\n          banks: { $push: [value] },\r\n        });\r\n      },\r\n      CHECK: () => {\r\n        newPayments = update(payments, {\r\n          cheques: { $push: [value] },\r\n        });\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n      setPayments(newPayments);\r\n      dialogAction.hide({ name: \"prePayment\" });\r\n    }\r\n  };\r\n\r\n  const handleSubmitEditPayment = (value, type) => {\r\n    let newPayments;\r\n    const types = {\r\n      NAGHD: () => {\r\n        const index = payments.cashes.findIndex((item) => item.id === value.id);\r\n        newPayments = update(payments, {\r\n          cashes: {\r\n            [index]: { $set: value },\r\n          },\r\n        });\r\n      },\r\n      CARD: () => {\r\n        const index = payments.banks.findIndex((item) => item.id === value.id);\r\n        newPayments = update(payments, {\r\n          banks: {\r\n            [index]: { $set: value },\r\n          },\r\n        });\r\n      },\r\n      CHECK: () => {\r\n        const index = payments.cheques.findIndex(\r\n          (item) => item.id === value.id,\r\n        );\r\n        newPayments = update(payments, {\r\n          cheques: {\r\n            [index]: { $set: value },\r\n          },\r\n        });\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n      setPayments(newPayments);\r\n      dialogAction.hide({ name: \"prePayment\" });\r\n    }\r\n  };\r\n\r\n  const handleDeletePayment = (value, type) => {\r\n    dialogAction.show({\r\n      confirm: true,\r\n      title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n      onAction: () => {\r\n        let newPayments;\r\n        const types = {\r\n          NAGHD: () => {\r\n            const index = payments.cashes.findIndex(\r\n              (item) => item.id === value.id,\r\n            );\r\n            newPayments = update(payments, {\r\n              cashes: { $splice: [[index, 1]] },\r\n            });\r\n          },\r\n          CARD: () => {\r\n            const index = payments.banks.findIndex(\r\n              (item) => item.id === value.id,\r\n            );\r\n            newPayments = update(payments, {\r\n              banks: { $splice: [[index, 1]] },\r\n            });\r\n          },\r\n          CHECK: () => {\r\n            const index = payments.cheques.findIndex(\r\n              (item) => item.id === value.id,\r\n            );\r\n            newPayments = update(payments, {\r\n              cheques: { $splice: [[index, 1]] },\r\n            });\r\n          },\r\n        };\r\n        if (types[type]) {\r\n          types[type]();\r\n          setPayments(newPayments);\r\n          dialogAction.hide({ name: \"delete\" });\r\n        }\r\n      },\r\n      name: \"delete\",\r\n      size: \"6\",\r\n      disableCloseButton: false,\r\n    });\r\n  };\r\n\r\n  const onDismissPayment = () => {\r\n    dialogAction.hide({ name: \"prePayment\" });\r\n  };\r\n\r\n  const onClickPayment = (type, data) => {\r\n    dialogAction.show({\r\n      title: `${paymentType === \"INCOME\" ? \"دریافت\" : \"پرداخت\"} ${\r\n        type === \"NAGHD\" ? \"نقدی\" : type === \"CARD\" ? \"کارتی\" : \"چکی\"\r\n      }`,\r\n      component: (\r\n        <Payment\r\n          onSubmit={onSubmitPaymentActions}\r\n          onDismiss={onDismissPayment}\r\n          defaultValues={data}\r\n          paymentType={paymentType}\r\n          type={type}\r\n        />\r\n      ),\r\n      name: \"prePayment\",\r\n      size: \"4\",\r\n      confirm: false,\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  const getButtonTitle = (type) => {\r\n    const types = {\r\n      NAGHD: () => {\r\n        return (\r\n          <Typography variant=\"button\">\r\n            {paymentType === \"INCOME\" ? \"دریافت نقدی\" : \"پرداخت نقدی\"}(\r\n            {payments?.cashes.length})\r\n          </Typography>\r\n        );\r\n      },\r\n      CARD: () => {\r\n        return (\r\n          <Typography variant=\"button\">\r\n            {paymentType === \"INCOME\" ? \"دریافت کارتی\" : \"پرداخت کارتی\"}(\r\n            {payments?.banks.length})\r\n          </Typography>\r\n        );\r\n      },\r\n      CHECK: () => {\r\n        return (\r\n          <Typography variant=\"button\">\r\n            {paymentType === \"INCOME\" ? \"دریافت چکی\" : \"پرداخت چکی\"}(\r\n            {payments?.cheques.length})\r\n          </Typography>\r\n        );\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      return types[type]();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setPayments(defaultValues);\r\n  }, [defaultValues]);\r\n\r\n  useEffect(() => {\r\n    if (typeof props.onSubmit === \"function\") {\r\n      props.onSubmit(payments);\r\n    }\r\n  }, [payments]);\r\n\r\n  return (\r\n    <>\r\n      <Grid item xs={12} style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <ButtonGroup color=\"primary\">\r\n          <Button\r\n            startIcon={<i className=\"material-icons-round\">local_atm</i>}\r\n            onClick={() => onClickPayment(\"NAGHD\")}\r\n          >\r\n            {getButtonTitle(\"NAGHD\")}\r\n          </Button>\r\n          <Button\r\n            startIcon={<i className=\"material-icons-round\">payment</i>}\r\n            onClick={() => onClickPayment(\"CARD\")}\r\n          >\r\n            {getButtonTitle(\"CARD\")}\r\n          </Button>\r\n          <Button\r\n            startIcon={<i className=\"material-icons-round\">payments</i>}\r\n            onClick={() => onClickPayment(\"CHECK\")}\r\n          >\r\n            {getButtonTitle(\"CHECK\")}\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Grid>\r\n\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Accordion\r\n            expanded={payments?.cashes.length}\r\n            disabled={!payments?.cashes.length}\r\n          >\r\n            <AccordionSummary\r\n              className={classes.accordionSummary}\r\n              expandIcon={<i className=\"material-icons-round\">expand_more</i>}\r\n              aria-controls=\"panel1a-content\"\r\n              id=\"panel1a-header\"\r\n            >\r\n              <Typography className={classes.heading}>نقدی ها</Typography>\r\n            </AccordionSummary>\r\n            {!!payments?.cashes.length && (\r\n              <AccordionDetails>\r\n                <Grid item xs={12}>\r\n                  <Paper>\r\n                    <TableContainer style={{ padding: \"0 10px\" }}>\r\n                      <Table\r\n                        className={classes.table}\r\n                        size={\"medium\"}\r\n                        style={{ paddingRight: 10 }}\r\n                      >\r\n                        <TableHeader headCells={naghdPayHeadCells} />\r\n\r\n                        <TableBody>\r\n                          {payments?.cashes.map((row) => {\r\n                            return (\r\n                              <TableRow\r\n                                hover\r\n                                tabIndex={-1}\r\n                                key={row.id}\r\n                                style={{ paddingRight: 10 }}\r\n                              >\r\n                                <TableCell padding=\"none\">\r\n                                  <div\r\n                                    style={{\r\n                                      display: \"flex\",\r\n                                      alignItems: \"center\",\r\n                                    }}\r\n                                  >\r\n                                    {row.cashDesk?.label}\r\n                                  </div>\r\n                                </TableCell>\r\n                                <TableCell padding=\"none\">\r\n                                  {persianNumber(\r\n                                    Number(row.price).toLocaleString(),\r\n                                  )}\r\n                                </TableCell>\r\n\r\n                                <TableCell\r\n                                  padding=\"none\"\r\n                                  style={{ textAlign: \"left\" }}\r\n                                >\r\n                                  <IconButton\r\n                                    onClick={() => onClickPayment(\"NAGHD\", row)}\r\n                                  >\r\n                                    <EditIcon />\r\n                                  </IconButton>\r\n\r\n                                  <IconButton\r\n                                    onClick={() =>\r\n                                      handleDeletePayment(row, \"NAGHD\")\r\n                                    }\r\n                                  >\r\n                                    <DeleteIcon />\r\n                                  </IconButton>\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            );\r\n                          })}\r\n                        </TableBody>\r\n                      </Table>\r\n                    </TableContainer>\r\n                  </Paper>\r\n                </Grid>\r\n              </AccordionDetails>\r\n            )}\r\n          </Accordion>\r\n          <Accordion\r\n            expanded={payments?.banks.length}\r\n            disabled={!payments?.banks.length}\r\n          >\r\n            <AccordionSummary\r\n              className={classes.accordionSummary}\r\n              expandIcon={<i className=\"material-icons-round\">expand_more</i>}\r\n              aria-controls=\"panel2a-content\"\r\n              id=\"panel2a-header\"\r\n            >\r\n              <Typography className={classes.heading}>کارتی ها</Typography>\r\n            </AccordionSummary>\r\n            {!!payments?.banks.length && (\r\n              <AccordionDetails>\r\n                <Grid item xs={12}>\r\n                  <Paper>\r\n                    <TableContainer style={{ padding: \"0 10px\" }}>\r\n                      <Table\r\n                        className={classes.table}\r\n                        size={\"medium\"}\r\n                        style={{ paddingRight: 10 }}\r\n                      >\r\n                        <TableHeader headCells={cardPayHeadCells} />\r\n\r\n                        <TableBody>\r\n                          {payments?.banks.map((row) => {\r\n                            return (\r\n                              <TableRow\r\n                                hover\r\n                                tabIndex={-1}\r\n                                key={row.id}\r\n                                style={{ paddingRight: 10 }}\r\n                              >\r\n                                <TableCell padding=\"none\">\r\n                                  <div\r\n                                    style={{\r\n                                      display: \"flex\",\r\n                                      alignItems: \"center\",\r\n                                    }}\r\n                                  >\r\n                                    {row.cashDesk?.label}\r\n                                  </div>\r\n                                </TableCell>\r\n                                <TableCell padding=\"none\">\r\n                                  {persianNumber(\r\n                                    Number(row.price).toLocaleString(),\r\n                                  )}\r\n                                </TableCell>\r\n                                <TableCell padding=\"none\">\r\n                                  {row.transactionType}\r\n                                </TableCell>\r\n                                <TableCell padding=\"none\">\r\n                                  {row.bank?.label}\r\n                                </TableCell>\r\n                                <TableCell padding=\"none\">\r\n                                  {row.trackingCode}\r\n                                </TableCell>\r\n\r\n                                <TableCell\r\n                                  padding=\"none\"\r\n                                  style={{ textAlign: \"left\" }}\r\n                                >\r\n                                  <IconButton\r\n                                    onClick={() => onClickPayment(\"CARD\", row)}\r\n                                  >\r\n                                    <EditIcon />\r\n                                  </IconButton>\r\n\r\n                                  <IconButton\r\n                                    onClick={() =>\r\n                                      handleDeletePayment(row, \"CARD\")\r\n                                    }\r\n                                  >\r\n                                    <DeleteIcon />\r\n                                  </IconButton>\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            );\r\n                          })}\r\n                        </TableBody>\r\n                      </Table>\r\n                    </TableContainer>\r\n                  </Paper>\r\n                </Grid>\r\n              </AccordionDetails>\r\n            )}\r\n          </Accordion>\r\n          <Accordion\r\n            expanded={payments?.cheques.length}\r\n            disabled={!payments?.cheques.length}\r\n          >\r\n            <AccordionSummary\r\n              className={classes.accordionSummary}\r\n              expandIcon={<i className=\"material-icons-round\">expand_more</i>}\r\n              aria-controls=\"panel3a-content\"\r\n              id=\"panel3a-header\"\r\n            >\r\n              <Typography className={classes.heading}>چک ها</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              {!!payments?.cheques.length && (\r\n                <Grid item xs={12}>\r\n                  <Paper>\r\n                    <TableContainer style={{ padding: \"0 10px\" }}>\r\n                      <Table\r\n                        className={classes.table}\r\n                        size={\"medium\"}\r\n                        style={{ paddingRight: 10 }}\r\n                      >\r\n                        <TableHeader headCells={checkPayHeadCells} />\r\n\r\n                        <TableBody>\r\n                          {payments?.cheques.map((row) => {\r\n                            return (\r\n                              <TableRow\r\n                                hover\r\n                                tabIndex={-1}\r\n                                key={row.id}\r\n                                style={{ paddingRight: 10 }}\r\n                              >\r\n                                <TableCell padding=\"none\">\r\n                                  <div\r\n                                    style={{\r\n                                      display: \"flex\",\r\n                                      alignItems: \"center\",\r\n                                    }}\r\n                                  >\r\n                                    {row.cashDesk?.label}\r\n                                  </div>\r\n                                </TableCell>\r\n                                <TableCell padding=\"none\">\r\n                                  {persianNumber(\r\n                                    Number(row.price).toLocaleString(),\r\n                                  )}\r\n                                </TableCell>\r\n\r\n                                <TableCell padding=\"none\">\r\n                                  {row.chequeDueDate.toLocaleDateString(\r\n                                    \"fa-IR\",\r\n                                  )}\r\n                                </TableCell>\r\n                                <TableCell padding=\"none\">\r\n                                  {row.bank?.label}\r\n                                </TableCell>\r\n                                <TableCell\r\n                                  padding=\"none\"\r\n                                  style={{ textAlign: \"left\" }}\r\n                                >\r\n                                  <IconButton\r\n                                    onClick={() => onClickPayment(\"CHECK\", row)}\r\n                                  >\r\n                                    <EditIcon />\r\n                                  </IconButton>\r\n\r\n                                  <IconButton\r\n                                    onClick={() =>\r\n                                      handleDeletePayment(row, \"CHECK\")\r\n                                    }\r\n                                  >\r\n                                    <DeleteIcon />\r\n                                  </IconButton>\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            );\r\n                          })}\r\n                        </TableBody>\r\n                      </Table>\r\n                    </TableContainer>\r\n                  </Paper>\r\n                </Grid>\r\n              )}\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n});\r\nexport default PrePayment;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Typography,\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  MenuItem,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\n\r\nimport PrePayment from \"../payment/prePayment\";\r\n\r\nexport default function ProductList({ onDismiss, onSubmit, driverId }) {\r\n  const paymentRef = useRef(null);\r\n  const [payments, setPayments] = useState({\r\n    cashes: [],\r\n    banks: [],\r\n    cheques: [],\r\n  });\r\n\r\n  const onDone = () => {\r\n    onSubmit({ ...paymentRef.current }, driverId);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form>\r\n        <Grid container spacing={3}>\r\n          <PrePayment\r\n            defaultValues={payments}\r\n            type={\"OUTCOME\"}\r\n            ref={paymentRef}\r\n          />\r\n        </Grid>\r\n      </form>\r\n\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          marginTop: 20,\r\n        }}\r\n      >\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onDone}>\r\n          تایید\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n          انصراف\r\n        </Button>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Typography,\r\n  Chip,\r\n  Button,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { convertParamsToQueryString } from \"../../helpers/utils\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"firstName\",\r\n    label: \"نام\",\r\n  },\r\n  { id: \"lastName\", label: \"نام خانوادگی\" },\r\n  {\r\n    id: \"category\",\r\n    label: \"دسته بندی\",\r\n  },\r\n  { id: \"mobile\", label: \"موبایل\" },\r\n  { id: \"carName\", label: \"ماشین\" },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function MainList({ onSelect, onDismiss }) {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [search, setSearch] = useState();\r\n  const [orderBy, setOrderBy] = useState(\"firstName\");\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [selectedDrivers, setSelectedDrivers] = useState([]);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const getDriverRequest = useApi({\r\n    method: \"get\",\r\n    url: `driver?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n    })}`,\r\n  });\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n  };\r\n\r\n  const onSelectDriver = (item) => {\r\n    setSelectedDrivers([...selectedDrivers, item]);\r\n  };\r\n\r\n  const onDeselectDriver = (data) => {\r\n    setSelectedDrivers(selectedDrivers.filter((item) => item.id !== data.id));\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    onSelect(selectedDrivers);\r\n  };\r\n\r\n  const getData = async () => {\r\n    const driverList = await getDriverRequest.execute();\r\n    setList(driverList.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize]);\r\n\r\n  return (\r\n    <div style={{ marginTop: -20 }}>\r\n      <TableTop handleSearch={onSearch} />\r\n      <TableContainer>\r\n        <Table className={classes.table} size={\"medium\"}>\r\n          <TableHeader\r\n            classes={classes}\r\n            order={order}\r\n            orderBy={orderBy}\r\n            onRequestSort={handleRequestSort}\r\n            rowCount={list.length}\r\n            headCells={headCells}\r\n          />\r\n\r\n          <TableBody>\r\n            {list.map((row) => {\r\n              return (\r\n                <TableRow\r\n                  hover\r\n                  tabIndex={-1}\r\n                  key={row.id}\r\n                  style={{ paddingRight: 10 }}\r\n                >\r\n                  <TableCell padding=\"none\">{row.firstName}</TableCell>\r\n                  <TableCell padding=\"none\">{row.lastName}</TableCell>\r\n                  <TableCell padding=\"none\">{row.category.name}</TableCell>\r\n                  <TableCell padding=\"none\">{row.mobile}</TableCell>\r\n                  <TableCell padding=\"none\">{row.carName}</TableCell>\r\n                  <TableCell padding=\"none\">\r\n                    {selectedDrivers.includes(row) ? (\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        className={classes.selectedButton}\r\n                        onClick={() => onDeselectDriver(row)}\r\n                        endIcon={<i className=\"material-icons-round\">done</i>}\r\n                      >\r\n                        انتخاب شده\r\n                      </Button>\r\n                    ) : (\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => onSelectDriver(row)}\r\n                      >\r\n                        انتخاب راننده\r\n                      </Button>\r\n                    )}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n            {!list.length && !getDriverRequest.pending && (\r\n              <TableRow style={{ height: 53 }}>\r\n                <TableCell colSpan={6} style={{ textAlign: \"center\" }}>\r\n                  <Typography variant=\"h6\">\r\n                    داده ای برای نمایش وجود ندارد\r\n                  </Typography>\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePaging\r\n        count={list.length}\r\n        handleChangePage={handleChangePage}\r\n        handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n        page={page}\r\n        rowsPerPage={pageSize}\r\n      />\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n          تایید\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n          بازگشت\r\n        </Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import http from \"../../configs/axios\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport store from \"../store\";\r\nimport Storage from \"../../services/storage\";\r\n\r\nexport default {\r\n  async setProdcutUnit() {\r\n    const result = await http.get(\"/product/unit\");\r\n    if (result) {\r\n      Storage.setItem(\r\n        Constant.STORAGE.PRODUCT_UNITS,\r\n        JSON.stringify(result.data),\r\n      );\r\n      store.dispatch({\r\n        type: Constant.ACTION_TYPES.GET_UNITS,\r\n        payload: result.data,\r\n      });\r\n    }\r\n  },\r\n\r\n  getProductUnit() {\r\n    return JSON.parse(Storage.getItem(Constant.STORAGE.PRODUCT_UNITS));\r\n  },\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Typography,\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  MenuItem,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { convertParamsToQueryString } from \"../../helpers/utils\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport unitAction from \"../../redux/actions/unitAction\";\r\nimport isEmpty from \"lodash.isempty\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    label: \"نام کالا\",\r\n  },\r\n  {\r\n    id: \"category\",\r\n    label: \"دسته بندی\",\r\n  },\r\n  {\r\n    id: \"amount\",\r\n    label: \"موجودی کل\",\r\n  },\r\n  { id: \"unit\", label: \" واحد شمارشی\" },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function ProductList({\r\n  onSubmit,\r\n  onDismiss,\r\n  customerId,\r\n  defaultValues,\r\n  action,\r\n}) {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [search, setSearch] = useState();\r\n  const [orderBy, setOrderBy] = useState(\"name\");\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [showPerUnit, setShowPerUnit] = useState(\r\n    defaultValues ? !!defaultValues.perUnit : false,\r\n  );\r\n  const units = unitAction.getProductUnit();\r\n  const [selectedProduct, setSelectedProduct] = useState(defaultValues);\r\n  const [depotPicker, setDepotPicker] = useState([]);\r\n  const [selectedDepot, setSelectedDepot] = useState(1);\r\n  const [productFee, setProductFee] = useState(\r\n    defaultValues || {\r\n      name: \" \",\r\n      fee: \"\",\r\n      amount: \"\",\r\n    },\r\n  );\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const getDepotProductRequest = useApi({\r\n    method: \"get\",\r\n    url: `product/depot?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n    })}`,\r\n  });\r\n\r\n  const getProductFeeRequest = useApi({\r\n    method: \"get\",\r\n    url: \"invoice/fee\",\r\n  });\r\n\r\n  const getDepotRequest = useApi({\r\n    method: \"get\",\r\n    url: `depot/picker`,\r\n  });\r\n\r\n  const onChangeSelectedProduct = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name === \"unit\") {\r\n      const allUnits = units.filter(\r\n        (item) => item.value === selectedProduct?.unitBaseId,\r\n      )[0].children;\r\n      const targetUnit = allUnits.filter((item) => item.value === value)[0];\r\n      setShowPerUnit(targetUnit.perUnit);\r\n    }\r\n    setProductFee({\r\n      ...productFee,\r\n      [name]: value,\r\n      unitBaseId: selectedProduct?.unitBaseId,\r\n    });\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n  };\r\n\r\n  const getData = async () => {\r\n    const productList = await getDepotProductRequest.execute(\r\n      null,\r\n      selectedDepot,\r\n    );\r\n    setList(productList.data);\r\n  };\r\n\r\n  const getProductUnitPicker = () => {\r\n    if (!isEmpty(selectedProduct)) {\r\n      const allUnits = units.filter(\r\n        (item) => item.value === selectedProduct.unitBaseId,\r\n      )[0];\r\n\r\n      if (allUnits) {\r\n        return allUnits.children;\r\n      }\r\n      return [];\r\n    }\r\n    return [];\r\n  };\r\n\r\n  const onSelectProduct = async (data) => {\r\n    setSelectedProduct(data);\r\n    if (customerId === 1) {\r\n      setProductFee({\r\n        productId: data.id,\r\n        name: data.name,\r\n        fee: \"\",\r\n        amount: \"\",\r\n      });\r\n    } else {\r\n      const fee = await getProductFeeRequest.execute(\r\n        null,\r\n        `${customerId}/${data.id}`,\r\n      );\r\n\r\n      const feeProduct = fee.data;\r\n      if (isEmpty(feeProduct)) {\r\n        setProductFee({\r\n          productId: data.id,\r\n          name: data.name,\r\n          fee: \"\",\r\n          amount: \"\",\r\n        });\r\n      } else {\r\n        setProductFee({ ...feeProduct, productId: data.id, name: data.name });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onDeselectProduct = () => {\r\n    setSelectedProduct();\r\n  };\r\n\r\n  const onDone = () => {\r\n    const newId = uuid();\r\n    const data = {\r\n      id: defaultValues ? defaultValues.id : newId,\r\n      ...productFee,\r\n      depotId: selectedDepot,\r\n      totalFee: Number(productFee.fee) * Number(productFee.amount),\r\n    };\r\n\r\n    onSubmit(data, action);\r\n  };\r\n\r\n  const getDepotPicker = async () => {\r\n    const result = await getDepotRequest.execute();\r\n    setDepotPicker(result.data);\r\n  };\r\n\r\n  const onChangeDepot = (e) => {\r\n    setSelectedDepot(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize, selectedDepot]);\r\n\r\n  useEffect(() => {\r\n    getDepotPicker();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <form>\r\n        <Grid container spacing={3}>\r\n          <Grid item lg={6} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"نام کالا\"\r\n              name={\"name\"}\r\n              onChange={onChangeSelectedProduct}\r\n              value={productFee.name}\r\n              fullWidth\r\n              size=\"small\"\r\n              disabled\r\n            />\r\n          </Grid>\r\n          <Grid item lg={6} xs={12}>\r\n            <TextField\r\n              select\r\n              label=\"واحد شمارش\"\r\n              value={productFee?.unit}\r\n              onChange={onChangeSelectedProduct}\r\n              variant=\"outlined\"\r\n              name=\"unit\"\r\n              fullWidth\r\n              size=\"small\"\r\n            >\r\n              {getProductUnitPicker().map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n          {showPerUnit && (\r\n            <Grid item lg={6} xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                label=\"مقدار در واحد\"\r\n                name={\"perUnit\"}\r\n                onChange={onChangeSelectedProduct}\r\n                value={productFee?.perUnit}\r\n                fullWidth\r\n                size=\"small\"\r\n                type=\"number\"\r\n              />\r\n            </Grid>\r\n          )}\r\n          <Grid item lg={6} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"مقدار\"\r\n              name={\"amount\"}\r\n              onChange={onChangeSelectedProduct}\r\n              value={productFee?.amount}\r\n              fullWidth\r\n              size=\"small\"\r\n              type=\"number\"\r\n            />\r\n          </Grid>\r\n          <Grid item lg={6} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"قیمت\"\r\n              name={\"fee\"}\r\n              onChange={onChangeSelectedProduct}\r\n              value={productFee?.fee}\r\n              fullWidth\r\n              size=\"small\"\r\n              type=\"number\"\r\n            />\r\n          </Grid>\r\n\r\n          {!!selectedProduct && (\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n            >\r\n              <Button variant=\"contained\" color=\"primary\" onClick={onDone}>\r\n                تایید\r\n              </Button>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </form>\r\n      <Divider style={{ margin: \"20px 10px\" }} />\r\n      <Grid container spacing={3}>\r\n        <Grid item lg={12} xs={12}>\r\n          <TextField\r\n            select\r\n            label=\"انبار\"\r\n            value={selectedDepot}\r\n            onChange={onChangeDepot}\r\n            variant=\"outlined\"\r\n            name=\"depot\"\r\n            fullWidth\r\n            size=\"small\"\r\n          >\r\n            {depotPicker.map((option) => (\r\n              <MenuItem key={option.value} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n      </Grid>\r\n      <TableContainer>\r\n        <TableTop handleSearch={onSearch} defaultSearch={search} />\r\n\r\n        <Table className={classes.table} size={\"medium\"}>\r\n          <TableHeader\r\n            classes={classes}\r\n            order={order}\r\n            orderBy={orderBy}\r\n            onRequestSort={handleRequestSort}\r\n            rowCount={list.length}\r\n            headCells={headCells}\r\n          />\r\n\r\n          <TableBody>\r\n            {list.map((row) => {\r\n              return (\r\n                <TableRow\r\n                  hover\r\n                  tabIndex={-1}\r\n                  key={row.id}\r\n                  style={{ paddingRight: 10 }}\r\n                >\r\n                  <TableCell padding=\"none\">{row.name}</TableCell>\r\n                  <TableCell padding=\"none\">\r\n                    {row.categories.join(\",\")}\r\n                  </TableCell>\r\n                  <TableCell padding=\"none\">{row.totalStock}</TableCell>\r\n                  <TableCell padding=\"none\">{row.unitBase}</TableCell>\r\n                  <TableCell padding=\"none\">\r\n                    {selectedProduct?.id === row.id ? (\r\n                      <Button\r\n                        disabled={!!defaultValues}\r\n                        variant=\"contained\"\r\n                        className={classes.selectedButton}\r\n                        onClick={() => onDeselectProduct(row)}\r\n                        endIcon={<i className=\"material-icons-round\">done</i>}\r\n                      >\r\n                        انتخاب شده\r\n                      </Button>\r\n                    ) : (\r\n                      <Button\r\n                        disabled={!!defaultValues}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => onSelectProduct(row)}\r\n                      >\r\n                        انتخاب کالا\r\n                      </Button>\r\n                    )}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n            {!list.length && !getDepotProductRequest.pending && (\r\n              <TableRow style={{ height: 53 }}>\r\n                <TableCell colSpan={6} style={{ textAlign: \"center\" }}>\r\n                  <Typography variant=\"h6\">\r\n                    داده ای برای نمایش وجود ندارد\r\n                  </Typography>\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePaging\r\n        count={list.length}\r\n        handleChangePage={handleChangePage}\r\n        handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n        page={page}\r\n        rowsPerPage={pageSize}\r\n      />\r\n\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n      >\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n          انصراف\r\n        </Button>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import React, { Fragment, useEffect, useState, useRef } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  IconButton,\r\n  Chip,\r\n  MenuItem,\r\n  Hidden,\r\n} from \"@material-ui/core\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport { DeleteIcon, EditIcon } from \"../../components/icons\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { getQueryString, persianNumber } from \"../../helpers/utils\";\r\nimport CircularProgress from \"../../components/CircularProgress\";\r\nimport PersonSelector from \"../payment/personSelector\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport dialogAction from \"../../redux/actions/dialogAction\";\r\nimport DriverPayment from \"./driverPayment\";\r\nimport PrePayment from \"../payment/prePayment\";\r\nimport Drivers from \"./driver\";\r\nimport Product from \"./product\";\r\nimport Constant from \"../../helpers/constant\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingBottom: 7,\r\n    paddingTop: 7,\r\n  },\r\n}));\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    label: \"نام کالا\",\r\n  },\r\n  { id: \"unit\", label: \"واحد\" },\r\n  {\r\n    id: \"amount\",\r\n    label: \"مقدار\",\r\n  },\r\n  {\r\n    id: \"fee\",\r\n    label: \"قیمت\",\r\n  },\r\n  {\r\n    id: \"total\",\r\n    label: \"مجموع\",\r\n  },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nconst driverHeadCell = [\r\n  {\r\n    id: \"first\",\r\n    label: \"نام راننده\",\r\n  },\r\n  { id: \"last\", label: \"نام خانوادگی راننده\" },\r\n  {\r\n    id: \"car\",\r\n    label: \"نام ماشین\",\r\n  },\r\n  {\r\n    id: \"pelak\",\r\n    label: \"پلاک\",\r\n  },\r\n  {\r\n    id: \"pay\",\r\n    label: \"پرداختی\",\r\n  },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function MainDetail({ defaultValues }) {\r\n  const paymentRef = useRef(null);\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const id = getQueryString(\"id\");\r\n  const invoiceType = getQueryString(\"type\");\r\n  const [detail, setDetail] = useState({});\r\n  const [selectedPerson, setSelectedPerson] = useState();\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n  const [selectedDate, handleDateChange] = useState(moment());\r\n  const [invoiceCategory, setInvoiceCategory] = useState(3);\r\n  const [category, setCategory] = useState([]);\r\n  const [drivers, setDrivers] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n  const [invoicePerson, setInvoicePerson] = useState(\" \");\r\n  const [payments, setPayments] = useState({\r\n    cashes: [],\r\n    banks: [],\r\n    cheques: [],\r\n  });\r\n  const [totalFee, setTotalFee] = useState(0);\r\n  const [totalPayment, setTotalPayment] = useState(0);\r\n  const [discount, setDiscount] = useState(0);\r\n  const [pureFee, setPureFee] = useState(0);\r\n  const [totalRemaining, setTotalRemaining] = useState(0);\r\n\r\n  const addInvoiceRequest = useApi({\r\n    method: \"post\",\r\n    url: `invoice`,\r\n  });\r\n  const editInvoiceRequest = useApi({\r\n    method: \"put\",\r\n    url: `invoice/${id}`,\r\n  });\r\n  const detailInvoiceRequest = useApi({\r\n    method: \"get\",\r\n    url: `invoice/${id}`,\r\n  });\r\n  const invoiceCategoryRequest = useApi({\r\n    method: \"get\",\r\n    url: `invoice/category`,\r\n  });\r\n  const addInvoicePaymentRequest = useApi({\r\n    method: \"post\",\r\n    url: `payment`,\r\n  });\r\n  const getPaymentInvoiceRequest = useApi({\r\n    method: \"get\",\r\n    url: `payment/invoice/${id}`,\r\n  });\r\n\r\n  const addPaymentDriverRequest = useApi({\r\n    method: \"post\",\r\n    url: `payment`,\r\n  });\r\n\r\n  const onChnageDate = (e) => {\r\n    handleDateChange(e);\r\n  };\r\n\r\n  const getInvoiceCategory = async () => {\r\n    const detail = await invoiceCategoryRequest.execute();\r\n    setCategory(detail.data);\r\n  };\r\n\r\n  const onSelectPerson = (person) => {\r\n    setSelectedPerson(person);\r\n    setInvoicePerson(true ? `${person.firstName} ${person.lastName}` : \"\");\r\n    onDismissPerson();\r\n  };\r\n\r\n  const onDismissPerson = () => {\r\n    dialogAction.hide({ name: \"person\" });\r\n  };\r\n\r\n  const onShowDialog = () => {\r\n    dialogAction.show({\r\n      title: \"انتخاب شخص\",\r\n      component: (\r\n        <PersonSelector\r\n          onSelect={onSelectPerson}\r\n          onDismiss={onDismissPerson}\r\n          filter={Constant.PERSON_TYPE.CUSTOMER}\r\n        />\r\n      ),\r\n      name: \"person\",\r\n      size: \"8\",\r\n      confirm: false,\r\n      disableCloseButton: false,\r\n    });\r\n  };\r\n\r\n  const getProperProducts = () => {\r\n    const newProducts = [];\r\n    products.map((item) => {\r\n      delete item.id;\r\n      return newProducts.push(item);\r\n    });\r\n    return newProducts;\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    const value = {\r\n      ...data,\r\n      products: getProperProducts(),\r\n      drivers,\r\n      date: selectedDate._d,\r\n      customerId: selectedPerson ? selectedPerson.id : 1,\r\n      type: invoiceType,\r\n      categoryId: invoiceCategory,\r\n      globalCustomer: invoicePerson,\r\n    };\r\n    if (id) {\r\n      await editInvoiceRequest.execute(value);\r\n    } else {\r\n      const response = await addInvoiceRequest.execute(value);\r\n      const invoicePayment = {\r\n        ...paymentRef.current,\r\n        invoiceId: response.id,\r\n        date: selectedDate._d,\r\n        personId: selectedPerson ? selectedPerson.id : 1,\r\n        personType: \"CUSTOMER\",\r\n        type: invoiceType === \"SELL\" ? \"INCOME\" : \"OUTCOME\",\r\n        description: `بابت فاکتور به شماره  ${response.id}`,\r\n      };\r\n      if (\r\n        invoicePayment.cashes.length > 0 ||\r\n        invoicePayment.cheques.length > 0 ||\r\n        invoicePayment.banks.length > 0\r\n      ) {\r\n        await addInvoicePaymentRequest.execute(invoicePayment);\r\n      }\r\n\r\n      drivers.map(async (item) => {\r\n        const value = {\r\n          type: \"OUTCOME\",\r\n          personType: \"DRIVER\",\r\n          personId: item.id,\r\n          description: `بابت فاکتور به شماره  ${response.id}`,\r\n          date: selectedDate._d,\r\n          ...item.payments,\r\n        };\r\n        if (\r\n          value.cashes.length > 0 ||\r\n          value.cheques.length > 0 ||\r\n          value.banks.length > 0\r\n        ) {\r\n          await addPaymentDriverRequest.execute(value);\r\n        }\r\n      });\r\n\r\n      setTimeout(() => {\r\n        onReject();\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  const onReject = () => {\r\n    history.push(\"/app/invoice-list?type=ALL\");\r\n  };\r\n\r\n  const getDetail = async () => {\r\n    const detail = await detailInvoiceRequest.execute();\r\n    const payments = await getPaymentInvoiceRequest.execute();\r\n    const paymentsArray = {\r\n      cashes: payments.data.cashes,\r\n      banks: payments.data.banks,\r\n      cheques: payments.data.cheques,\r\n    };\r\n\r\n    setDetail(detail.data);\r\n    setSelectedPerson(payments.data.person);\r\n    setPayments(paymentsArray);\r\n    setDrivers(detail.data.drivers);\r\n    setProducts(detail.data.products);\r\n    handleDateChange(detail.data.date);\r\n    setTotalFee(detail.data.totalPrice);\r\n    setDiscount(detail.data.discount);\r\n    setTotalPayment(payments.data.price);\r\n    setTotalRemaining(\r\n      detail.data.totalPrice -\r\n        (detail.data.discount + payments.data.price) +\r\n        Number(payments.data.person.accountRemaining),\r\n    );\r\n    if (detail.data.customerId === 1) {\r\n      setInvoicePerson(detail.data.globalCustomer);\r\n    }\r\n  };\r\n\r\n  const onSubmitDrivers = (drivers) => {\r\n    setDrivers(drivers);\r\n    onDismissDrivers();\r\n  };\r\n\r\n  const onDismissDrivers = () => {\r\n    dialogAction.hide({ name: \"driver\" });\r\n  };\r\n\r\n  const handleDeleteDriver = (id) => {\r\n    setDrivers(drivers.filter((item) => item.id !== id));\r\n  };\r\n\r\n  const onDismissDriverPayments = () => {\r\n    dialogAction.hide({ name: \"pay\" });\r\n  };\r\n\r\n  const onSubmitDriverPayments = (driverPayments, id) => {\r\n    const newDriver = [...drivers];\r\n    const selected = newDriver.find((item) => item.id === id);\r\n    const index = newDriver.findIndex((item) => item.id === id);\r\n    selected.payments = driverPayments;\r\n    newDriver[index] = selected;\r\n    setDrivers(newDriver);\r\n    // setDrivers({ ...drivers, drivers: { payments: driverPayments } });\r\n    onDismissDriverPayments();\r\n\r\n    // if (data.isUpdate) {\r\n    //   const index = accounts.findIndex((item) => item.id === data.id);\r\n    //   const accounstTmp = [...accounts];\r\n    //   accounstTmp[index] = data;\r\n    //   setAccounts(accounstTmp);\r\n    // } else {\r\n    //   setAccounts([...accounts, data]);\r\n    // }\r\n  };\r\n\r\n  const handlePaymentDriver = (row) => {\r\n    dialogAction.show({\r\n      title: \"پرداخت به راننده\",\r\n      component: (\r\n        <DriverPayment\r\n          onSubmit={onSubmitDriverPayments}\r\n          onDismiss={onDismissDriverPayments}\r\n          driverId={row.id}\r\n        />\r\n      ),\r\n      name: \"pay\",\r\n      size: \"6\",\r\n      confirm: false,\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  const onShowDriverDialog = () => {\r\n    dialogAction.show({\r\n      title: \"انتخاب راننده\",\r\n      component: (\r\n        <Drivers\r\n          onSelect={onSubmitDrivers}\r\n          onDismiss={onDismissDrivers}\r\n          defaultValues={drivers}\r\n        />\r\n      ),\r\n      name: \"driver\",\r\n      size: \"8\",\r\n      confirm: false,\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  const onSubmitProduct = (product, type) => {\r\n    if (type === \"edit\") {\r\n      const index = products.findIndex((item) => item.id === product.id);\r\n      const ProductsTmp = [...products];\r\n      ProductsTmp[index] = product;\r\n      setProducts(ProductsTmp);\r\n    } else {\r\n      setProducts([...products, product]);\r\n    }\r\n    onDismissProduct();\r\n  };\r\n\r\n  const onDismissProduct = () => {\r\n    dialogAction.hide({ name: \"product\" });\r\n  };\r\n\r\n  const handleDeleteProduct = (id) => {\r\n    setProducts(products.filter((item) => item.id !== id));\r\n  };\r\n\r\n  const handleEditProduct = (item) => {\r\n    onShowProductDialog(\"edit\", item);\r\n  };\r\n\r\n  const onShowProductDialog = (type, data) => {\r\n    dialogAction.show({\r\n      title: \"انتخاب کالا\",\r\n      component: (\r\n        <Product\r\n          onSubmit={onSubmitProduct}\r\n          onDismiss={onDismissProduct}\r\n          customerId={selectedPerson ? selectedPerson.id : 1}\r\n          defaultValues={data}\r\n          action={type}\r\n        />\r\n      ),\r\n      name: \"product\",\r\n      size: \"6\",\r\n      confirm: false,\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  const getDetailTitle = () => {\r\n    if (id) {\r\n      if (invoiceType === \"BUY\") {\r\n        return \"ویرایش فاکتور خرید\";\r\n      }\r\n      return \"ویرایش فاکتور فروش\";\r\n    } else {\r\n      if (invoiceType === \"SELL\") {\r\n        return \"افزودن فاکتور فروش\";\r\n      }\r\n      return \"افزودن فاکتور خرید\";\r\n    }\r\n  };\r\n\r\n  const onTotalDriverPayments = (data) => {\r\n    if (data) {\r\n      const cashesPrice = data.cashes.reduce(\r\n        (n, { price }) => n + Number(price),\r\n        0,\r\n      );\r\n      const chequesPrice = data.cheques.reduce(\r\n        (n, { price }) => n + Number(price),\r\n        0,\r\n      );\r\n      const banksPrice = data.banks.reduce(\r\n        (n, { price }) => n + Number(price),\r\n        0,\r\n      );\r\n      return cashesPrice + chequesPrice + banksPrice;\r\n    }\r\n  };\r\n\r\n  const onSubmitPayment = (data) => {\r\n    if (data) {\r\n      const cashesPrice = data.cashes.reduce(\r\n        (n, { price }) => n + Number(price),\r\n        0,\r\n      );\r\n      const chequesPrice = data.cheques.reduce(\r\n        (n, { price }) => n + Number(price),\r\n        0,\r\n      );\r\n      const banksPrice = data.banks.reduce(\r\n        (n, { price }) => n + Number(price),\r\n        0,\r\n      );\r\n      setTotalPayment(cashesPrice + chequesPrice + banksPrice);\r\n    }\r\n  };\r\n\r\n  const onDiscountChange = (e) => {\r\n    setDiscount(e.target.value);\r\n  };\r\n\r\n  const onChangeCategory = (e) => {\r\n    setInvoiceCategory(e.target.value);\r\n  };\r\n\r\n  const onChangeInvoicePerson = (e) => {\r\n    setInvoicePerson(e.target.value);\r\n    setSelectedPerson();\r\n  };\r\n\r\n  useEffect(() => {\r\n    getInvoiceCategory();\r\n    if (id) {\r\n      getDetail();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setTotalFee(products.reduce((n, { totalFee }) => n + totalFee, 0));\r\n  }, [products]);\r\n\r\n  useEffect(() => {\r\n    const factorPay = totalFee - (Number(discount) + totalPayment);\r\n\r\n    setPureFee(factorPay);\r\n    if (selectedPerson) {\r\n      setTotalRemaining(factorPay + Number(selectedPerson?.accountRemaining));\r\n    }\r\n  }, [totalFee, discount, totalPayment]);\r\n\r\n  useEffect(() => {\r\n    reset(detail);\r\n  }, [reset, detail]);\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      {!detailInvoiceRequest.pending ? (\r\n        <Grid item lg={10} sm={12} className={classes.root}>\r\n          <Paper className={classes.paper}>\r\n            <Typography\r\n              className={classes.title}\r\n              variant=\"h6\"\r\n              id=\"tableTitle\"\r\n              component=\"div\"\r\n            >\r\n              {getDetailTitle()}\r\n            </Typography>\r\n\r\n            <Grid container spacing={3}>\r\n              <Fragment>\r\n                <Grid item lg={6} xs={12} style={{ display: \"flex\" }}>\r\n                  <Button\r\n                    style={{ marginLeft: 10, width: \"30%\" }}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={onShowDialog}\r\n                  >\r\n                    انتخاب مشتری\r\n                  </Button>\r\n\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    name={\"personName\"}\r\n                    onChange={onChangeInvoicePerson}\r\n                    value={invoicePerson}\r\n                    style={{ width: \"70%\" }}\r\n                    size=\"small\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12} className={classes.datePicker}>\r\n                  <DatePicker\r\n                    autoOk\r\n                    name=\"date\"\r\n                    label=\"تاریخ ثبت\"\r\n                    inputVariant=\"outlined\"\r\n                    okLabel=\"تأیید\"\r\n                    cancelLabel=\"لغو\"\r\n                    labelFunc={(date) =>\r\n                      date ? date.format(\"jYYYY/jMM/jDD\") : \"\"\r\n                    }\r\n                    value={selectedDate}\r\n                    onChange={onChnageDate}\r\n                    style={{ width: \"100%\" }}\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  {!!category.length && invoiceCategory && (\r\n                    <TextField\r\n                      select\r\n                      label=\"دسته بندی\"\r\n                      value={invoiceCategory}\r\n                      onChange={onChangeCategory}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      size=\"small\"\r\n                    >\r\n                      {category.map((option) => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </TextField>\r\n                  )}\r\n                </Grid>\r\n                <Hidden smDown>\r\n                  <Grid item lg={6} xs={12} />\r\n                </Hidden>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"مبدا\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value || \" \"}\r\n                          error={!!errors.origin}\r\n                          helperText={\r\n                            errors.origin ? errors.origin.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    name=\"origin\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"مقصد\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value || \" \"}\r\n                          error={!!errors.destination}\r\n                          helperText={\r\n                            errors.destination ? errors.destination.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    name=\"destination\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12} style={{ display: \"flex\" }}>\r\n                  <Button\r\n                    style={{ marginLeft: 10, width: \"30%\" }}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={onShowDriverDialog}\r\n                    endIcon={\r\n                      <i className=\"material-icons-round\">local_shipping</i>\r\n                    }\r\n                    inventory_2\r\n                  >\r\n                    انتخاب راننده\r\n                  </Button>\r\n                </Grid>\r\n                {!!drivers.length && (\r\n                  <Grid item xs={12}>\r\n                    <Paper>\r\n                      <TableContainer style={{ padding: \"0 10px\" }}>\r\n                        <Table\r\n                          className={classes.table}\r\n                          size={\"medium\"}\r\n                          style={{ paddingRight: 10 }}\r\n                        >\r\n                          <TableHeader headCells={driverHeadCell} />\r\n\r\n                          <TableBody>\r\n                            {drivers.map((row) => {\r\n                              console.log(row);\r\n                              return (\r\n                                <TableRow\r\n                                  hover\r\n                                  tabIndex={-1}\r\n                                  key={row.id}\r\n                                  style={{ paddingRight: 10 }}\r\n                                >\r\n                                  <TableCell padding=\"none\">\r\n                                    {row.firstName}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {row.lastName}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {row.carName}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {row.carPlaque}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {onTotalDriverPayments(row.payments)}\r\n                                  </TableCell>\r\n                                  <TableCell\r\n                                    padding=\"none\"\r\n                                    style={{ textAlign: \"left\" }}\r\n                                  >\r\n                                    <IconButton\r\n                                      onClick={() => handlePaymentDriver(row)}\r\n                                    >\r\n                                      <span\r\n                                        class=\"material-icons-round\"\r\n                                        style={{ color: \"green\" }}\r\n                                      >\r\n                                        paid\r\n                                      </span>\r\n                                    </IconButton>\r\n\r\n                                    <IconButton\r\n                                      onClick={() => handleDeleteDriver(row.id)}\r\n                                    >\r\n                                      <DeleteIcon />\r\n                                    </IconButton>\r\n                                  </TableCell>\r\n                                </TableRow>\r\n                              );\r\n                            })}\r\n                          </TableBody>\r\n                        </Table>\r\n                      </TableContainer>\r\n                    </Paper>\r\n                  </Grid>\r\n                )}\r\n                <Grid item lg={6} xs={12} style={{ display: \"flex\" }}>\r\n                  <Button\r\n                    // disabled={isEmpty(selectedPerson)}\r\n                    style={{ marginLeft: 10, width: \"30%\" }}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => onShowProductDialog(\"add\")}\r\n                    endIcon={\r\n                      <i className=\"material-icons-round\">inventory_2</i>\r\n                    }\r\n                  >\r\n                    انتخاب کالا\r\n                  </Button>\r\n                </Grid>\r\n                {!!products.length && (\r\n                  <Grid item xs={12}>\r\n                    <Paper>\r\n                      <TableContainer style={{ padding: \"0 10px\" }}>\r\n                        <Table\r\n                          className={classes.table}\r\n                          size={\"medium\"}\r\n                          style={{ paddingRight: 10 }}\r\n                        >\r\n                          <TableHeader headCells={headCells} />\r\n\r\n                          <TableBody>\r\n                            {products.map((row) => {\r\n                              return (\r\n                                <TableRow\r\n                                  hover\r\n                                  tabIndex={-1}\r\n                                  key={row.id}\r\n                                  style={{ paddingRight: 10 }}\r\n                                >\r\n                                  <TableCell padding=\"none\">\r\n                                    {row.name}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {Constant.UNITS_MAP[row.unit]}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {row.perUnit\r\n                                      ? `${persianNumber(\r\n                                          row.amount,\r\n                                        )}*${persianNumber(row.perUnit)}`\r\n                                      : persianNumber(row.amount)}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {persianNumber(row.fee)}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {persianNumber(row.fee * row.amount)}\r\n                                  </TableCell>\r\n                                  <TableCell\r\n                                    padding=\"none\"\r\n                                    style={{ textAlign: \"left\" }}\r\n                                  >\r\n                                    <IconButton\r\n                                      onClick={() => handleEditProduct(row)}\r\n                                    >\r\n                                      <EditIcon />\r\n                                    </IconButton>\r\n\r\n                                    <IconButton\r\n                                      onClick={() =>\r\n                                        handleDeleteProduct(row.id)\r\n                                      }\r\n                                    >\r\n                                      <DeleteIcon />\r\n                                    </IconButton>\r\n                                  </TableCell>\r\n                                </TableRow>\r\n                              );\r\n                            })}\r\n                          </TableBody>\r\n                        </Table>\r\n                      </TableContainer>\r\n                    </Paper>\r\n                  </Grid>\r\n                )}\r\n                <Grid item xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"توضیحات\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value || \" \"}\r\n                          error={!!errors.description}\r\n                          helperText={\r\n                            errors.description ? errors.description.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          multiline\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    name=\"description\"\r\n                  />\r\n                </Grid>\r\n                <PrePayment\r\n                  type={invoiceType === \"BUY\" ? \"OUTCOME\" : \"INCOME\"}\r\n                  defaultValues={payments}\r\n                  ref={paymentRef}\r\n                  onSubmit={onSubmitPayment}\r\n                />\r\n                <Grid container spacing={3} style={{ marginTop: 20 }}>\r\n                  <Grid item lg={3} xs={6}>\r\n                    <TextField\r\n                      disabled\r\n                      variant=\"outlined\"\r\n                      label=\"مبلغ کل\"\r\n                      value={totalFee}\r\n                      fullWidth\r\n                      size=\"small\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={3} xs={6}>\r\n                    <TextField\r\n                      disabled\r\n                      variant=\"outlined\"\r\n                      label={`${\r\n                        invoiceType === \"SELL\" ? \"جمع دریافتی\" : \"جمع پرداختی\"\r\n                      }`}\r\n                      value={totalPayment}\r\n                      fullWidth\r\n                      size=\"small\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={3} xs={6}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      onChange={onDiscountChange}\r\n                      label=\"تخفیف\"\r\n                      value={discount || \" \"}\r\n                      fullWidth\r\n                      size=\"small\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={3} xs={6}>\r\n                    <TextField\r\n                      disabled\r\n                      variant=\"outlined\"\r\n                      label=\"مبلغ خالص\"\r\n                      value={pureFee}\r\n                      fullWidth\r\n                      size=\"small\"\r\n                    />\r\n                  </Grid>\r\n                  {selectedPerson && (\r\n                    <Grid item lg={3} xs={6}>\r\n                      <TextField\r\n                        disabled\r\n                        variant=\"outlined\"\r\n                        label=\"مانده قبلی\"\r\n                        value={\r\n                          selectedPerson ? selectedPerson.accountRemaining : 0\r\n                        }\r\n                        fullWidth\r\n                        size=\"small\"\r\n                      />\r\n                    </Grid>\r\n                  )}\r\n                  <Grid item lg={3} xs={6}>\r\n                    <TextField\r\n                      disabled\r\n                      variant=\"outlined\"\r\n                      label=\"مانده نهایی\"\r\n                      value={totalRemaining}\r\n                      fullWidth\r\n                      size=\"small\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                    تایید\r\n                  </Button>\r\n\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={onReject}\r\n                  >\r\n                    بازگشت\r\n                  </Button>\r\n                </Grid>\r\n              </Fragment>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      ) : (\r\n        <CircularProgress />\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useImperativeHandle } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Typography,\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  MenuItem,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { convertParamsToQueryString, persianNumber } from \"../../helpers/utils\";\r\nimport styles from \"./style\";\r\nimport unitAction from \"../../redux/actions/unitAction\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    label: \"نام کالا\",\r\n  },\r\n  {\r\n    id: \"amount\",\r\n    label: \"موجودی کل\",\r\n  },\r\n\r\n  { id: \"amount\", label: \"مقدار\" },\r\n  { id: \"unit\", label: \" واحد شمارشی\" },\r\n\r\n  { id: \"amount\", label: \"فی\" },\r\n];\r\n\r\nconst ProductList = React.forwardRef((props, ref) => {\r\n  const { defaultValues } = props;\r\n  const classes = styles();\r\n  const [list, setList] = useState([]);\r\n  const [showPerUnit, setShowPerUnit] = useState(\r\n    defaultValues ? !!defaultValues.perUnit : false,\r\n  );\r\n  const units = unitAction.getProductUnit();\r\n  const [depotPicker, setDepotPicker] = useState([]);\r\n  const [selectedDepot, setSelectedDepot] = useState(1);\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return list;\r\n  });\r\n\r\n  const getDepotProductRequest = useApi({\r\n    method: \"get\",\r\n    url: `product/depot?${convertParamsToQueryString({})}`,\r\n  });\r\n\r\n  const getDepotRequest = useApi({\r\n    method: \"get\",\r\n    url: `depot/picker`,\r\n  });\r\n\r\n  const getData = async () => {\r\n    const productList = await getDepotProductRequest.execute(\r\n      null,\r\n      selectedDepot,\r\n    );\r\n    setList(productList.data);\r\n  };\r\n\r\n  const getProductUnitPicker = (row) => {\r\n    const allUnits = units.filter((item) => item.value === row.unitBaseId)[0];\r\n\r\n    if (allUnits) {\r\n      return allUnits.children;\r\n    }\r\n    return [];\r\n  };\r\n\r\n  const getDepotPicker = async () => {\r\n    const result = await getDepotRequest.execute();\r\n    setDepotPicker(result.data);\r\n  };\r\n\r\n  const onChangeDepot = (e) => {\r\n    setSelectedDepot(e.target.value);\r\n  };\r\n\r\n  const onChangeProductValue = (e, data) => {\r\n    const newList = [...list];\r\n    const selectedCurrentProduct = list.find((item) => item.id === data.id);\r\n    const index = list.findIndex((item) => item.id === data.id);\r\n    selectedCurrentProduct[e.target.name] = e.target.value;\r\n    newList[index] = selectedCurrentProduct;\r\n    setList(newList);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [selectedDepot]);\r\n\r\n  useEffect(() => {\r\n    getDepotPicker();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={3}>\r\n        <Grid item lg={12} xs={12} style={{ marginBottom: 20 }}>\r\n          <TextField\r\n            select\r\n            label=\"انبار\"\r\n            value={selectedDepot}\r\n            onChange={onChangeDepot}\r\n            variant=\"outlined\"\r\n            name=\"depot\"\r\n            fullWidth\r\n            size=\"small\"\r\n          >\r\n            {depotPicker.map((option) => (\r\n              <MenuItem key={option.value} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <TableContainer style={{ height: 200, overflow: \"auto\" }}>\r\n        <Table className={classes.table} size={\"medium\"}>\r\n          <TableHeader classes={classes} headCells={headCells} />\r\n\r\n          <TableBody>\r\n            {list.map((row) => {\r\n              return (\r\n                <TableRow\r\n                  hover\r\n                  tabIndex={-1}\r\n                  key={row.id}\r\n                  style={{ paddingRight: 10 }}\r\n                >\r\n                  <TableCell padding=\"none\">{row.name}</TableCell>\r\n                  <TableCell padding=\"none\">\r\n                    {persianNumber(row.totalStock)}\r\n                  </TableCell>\r\n                  <TableCell padding=\"none\">\r\n                    <TextField\r\n                      type=\"number\"\r\n                      variant=\"outlined\"\r\n                      name=\"amount\"\r\n                      style={{ width: \"70%\" }}\r\n                      size=\"small\"\r\n                      value={row.amount}\r\n                      onChange={(e) => onChangeProductValue(e, row)}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell padding=\"none\">\r\n                    <TextField\r\n                      select\r\n                      value={row.unit}\r\n                      onChange={(e) => onChangeProductValue(e, row)}\r\n                      variant=\"outlined\"\r\n                      name=\"unit\"\r\n                      style={{ width: \"70%\" }}\r\n                      size=\"small\"\r\n                    >\r\n                      {getProductUnitPicker(row).map((option) => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </TextField>\r\n                  </TableCell>\r\n                  <TableCell padding=\"none\">\r\n                    <TextField\r\n                      type=\"number\"\r\n                      variant=\"outlined\"\r\n                      name=\"fee\"\r\n                      style={{ width: \"70%\" }}\r\n                      size=\"small\"\r\n                      value={row.fee}\r\n                      onChange={(e) => onChangeProductValue(e, row)}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n            {!list.length && !getDepotProductRequest.pending && (\r\n              <TableRow style={{ height: 53 }}>\r\n                <TableCell colSpan={6} style={{ textAlign: \"center\" }}>\r\n                  <Typography variant=\"h6\">\r\n                    داده ای برای نمایش وجود ندارد\r\n                  </Typography>\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n});\r\nexport default ProductList;\r\n","import React, { Fragment, useEffect, useState, useRef } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, Paper, Typography, TextField, Button } from \"@material-ui/core\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { getQueryString } from \"../../helpers/utils\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport dialogAction from \"../../redux/actions/dialogAction\";\r\nimport PrePayment from \"../payment/prePayment\";\r\nimport Product from \"./productFastInvoice\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingBottom: 7,\r\n    paddingTop: 7,\r\n  },\r\n}));\r\n\r\nexport default function MainDetail() {\r\n  const productsRef = useRef(null);\r\n  const paymentRef = useRef(null);\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const invoiceType = getQueryString(\"type\");\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n  const [selectedDate, handleDateChange] = useState(moment());\r\n  const [products, setProducts] = useState([]);\r\n  const [invoicePerson, setInvoicePerson] = useState(\" \");\r\n  const [payments, setPayments] = useState({\r\n    cashes: [],\r\n    banks: [],\r\n    cheques: [],\r\n  });\r\n  const [totalFee, setTotalFee] = useState(0);\r\n  const [totalPayment, setTotalPayment] = useState(0);\r\n  const [discount, setDiscount] = useState(0);\r\n  const [pureFee, setPureFee] = useState(0);\r\n  const [totalRemaining, setTotalRemaining] = useState(0);\r\n\r\n  const addInvoiceRequest = useApi({\r\n    method: \"post\",\r\n    url: `invoice`,\r\n  });\r\n\r\n  const addInvoicePaymentRequest = useApi({\r\n    method: \"post\",\r\n    url: `payment`,\r\n  });\r\n\r\n  const onChnageDate = (e) => {\r\n    handleDateChange(e);\r\n  };\r\n\r\n  const getProperProducts = () => {\r\n    const newProducts = [];\r\n    productsRef.current.map((item) => {\r\n      item.productId = item.id;\r\n      delete item.id;\r\n      delete item.stocks;\r\n      delete item.categories;\r\n      if (item.fee && item.unit && item.amount) {\r\n        return newProducts.push(item);\r\n      }\r\n    });\r\n    return newProducts;\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    const value = {\r\n      ...data,\r\n      products: getProperProducts(),\r\n      date: selectedDate._d,\r\n      customerId: 1,\r\n      type: invoiceType,\r\n      categoryId: [1],\r\n      globalCustomer: invoicePerson.trim(),\r\n    };\r\n    const response = await addInvoiceRequest.execute(value);\r\n    console.log(response, addInvoiceRequest);\r\n    const invoicePayment = {\r\n      ...paymentRef.current,\r\n      invoiceId: response.id,\r\n      date: selectedDate._d,\r\n      personId: 1,\r\n      personType: \"CUSTOMER\",\r\n      type: invoiceType === \"SELL\" ? \"INCOME\" : \"OUTCOME\",\r\n      description: `بابت فاکتور به شماره  ${response.id}`,\r\n    };\r\n    if (\r\n      invoicePayment.cashes.length > 0 ||\r\n      invoicePayment.cheques.length > 0 ||\r\n      invoicePayment.banks.length > 0\r\n    ) {\r\n      await addInvoicePaymentRequest.execute(invoicePayment);\r\n    }\r\n\r\n    setTimeout(() => {\r\n      onReject();\r\n    }, 1000);\r\n  };\r\n\r\n  const onReject = () => {\r\n    history.push(\"/app/invoice-list?type=ALL\");\r\n  };\r\n\r\n  const onSubmitProduct = (product, type) => {\r\n    if (type === \"edit\") {\r\n      const index = products.findIndex((item) => item.id === product.id);\r\n      const ProductsTmp = [...products];\r\n      ProductsTmp[index] = product;\r\n      setProducts(ProductsTmp);\r\n    } else {\r\n      setProducts([...products, product]);\r\n    }\r\n    onDismissProduct();\r\n  };\r\n\r\n  const onDismissProduct = () => {\r\n    dialogAction.hide({ name: \"product\" });\r\n  };\r\n\r\n  const onShowProductDialog = (type, data) => {\r\n    dialogAction.show({\r\n      title: \"انتخاب کالا\",\r\n      component: (\r\n        <Product\r\n          onSubmit={onSubmitProduct}\r\n          onDismiss={onDismissProduct}\r\n          customerId={1}\r\n          defaultValues={data}\r\n          action={type}\r\n        />\r\n      ),\r\n      name: \"product\",\r\n      size: \"6\",\r\n      confirm: false,\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  const getDetailTitle = () => {\r\n    if (invoiceType === \"SELL\") {\r\n      return \"افزودن فاکتور فروش\";\r\n    }\r\n    return \"افزودن فاکتور خرید\";\r\n  };\r\n\r\n  const onSubmitPayment = (data) => {\r\n    if (data) {\r\n      const cashesPrice = data.cashes.reduce(\r\n        (n, { price }) => n + Number(price),\r\n        0,\r\n      );\r\n      const chequesPrice = data.cheques.reduce(\r\n        (n, { price }) => n + Number(price),\r\n        0,\r\n      );\r\n      const banksPrice = data.banks.reduce(\r\n        (n, { price }) => n + Number(price),\r\n        0,\r\n      );\r\n      setTotalPayment(cashesPrice + chequesPrice + banksPrice);\r\n    }\r\n  };\r\n\r\n  const onDiscountChange = (e) => {\r\n    setDiscount(e.target.value);\r\n  };\r\n\r\n  const onChangeInvoicePerson = (e) => {\r\n    setInvoicePerson(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTotalFee(products.reduce((n, { totalFee }) => n + totalFee, 0));\r\n  }, [products]);\r\n\r\n  useEffect(() => {\r\n    const factorPay = totalFee - (Number(discount) + totalPayment);\r\n\r\n    setPureFee(factorPay);\r\n  }, [totalFee, discount, totalPayment]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <Grid item lg={10} sm={12} className={classes.root}>\r\n        <Paper className={classes.paper}>\r\n          <Typography\r\n            className={classes.title}\r\n            variant=\"h6\"\r\n            id=\"tableTitle\"\r\n            component=\"div\"\r\n          >\r\n            {getDetailTitle()}\r\n          </Typography>\r\n\r\n          <Grid container spacing={3}>\r\n            <Fragment>\r\n              <Grid item lg={6} xs={12} style={{ display: \"flex\" }}>\r\n                <TextField\r\n                  label=\"نام مشتری\"\r\n                  variant=\"outlined\"\r\n                  name={\"personName\"}\r\n                  onChange={onChangeInvoicePerson}\r\n                  value={invoicePerson}\r\n                  fullWidth\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n              <Grid item lg={6} xs={12} className={classes.datePicker}>\r\n                <DatePicker\r\n                  autoOk\r\n                  name=\"date\"\r\n                  label=\"تاریخ ثبت\"\r\n                  inputVariant=\"outlined\"\r\n                  okLabel=\"تأیید\"\r\n                  cancelLabel=\"لغو\"\r\n                  labelFunc={(date) =>\r\n                    date ? date.format(\"jYYYY/jMM/jDD\") : \"\"\r\n                  }\r\n                  value={selectedDate}\r\n                  onChange={onChnageDate}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <Product\r\n                  onSubmit={onSubmitProduct}\r\n                  onDismiss={onDismissProduct}\r\n                  customerId={1}\r\n                  ref={productsRef}\r\n                />\r\n              </Grid>\r\n\r\n              <PrePayment\r\n                type={invoiceType === \"BUY\" ? \"OUTCOME\" : \"INCOME\"}\r\n                defaultValues={payments}\r\n                ref={paymentRef}\r\n                onSubmit={onSubmitPayment}\r\n              />\r\n              <Grid container spacing={3} style={{ marginTop: 20 }}>\r\n                <Grid item lg={3} xs={6}>\r\n                  <TextField\r\n                    disabled\r\n                    variant=\"outlined\"\r\n                    label=\"مبلغ کل\"\r\n                    value={totalFee}\r\n                    fullWidth\r\n                    size=\"small\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={3} xs={6}>\r\n                  <TextField\r\n                    disabled\r\n                    variant=\"outlined\"\r\n                    label={`${\r\n                      invoiceType === \"SELL\" ? \"جمع دریافتی\" : \"جمع پرداختی\"\r\n                    }`}\r\n                    value={totalPayment}\r\n                    fullWidth\r\n                    size=\"small\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={3} xs={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    onChange={onDiscountChange}\r\n                    label=\"تخفیف\"\r\n                    value={discount || \" \"}\r\n                    fullWidth\r\n                    size=\"small\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={3} xs={6}>\r\n                  <TextField\r\n                    disabled\r\n                    variant=\"outlined\"\r\n                    label=\"مبلغ خالص\"\r\n                    value={pureFee}\r\n                    fullWidth\r\n                    size=\"small\"\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item lg={3} xs={6}>\r\n                  <TextField\r\n                    disabled\r\n                    variant=\"outlined\"\r\n                    label=\"مانده نهایی\"\r\n                    value={totalRemaining}\r\n                    fullWidth\r\n                    size=\"small\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n              >\r\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                  تایید\r\n                </Button>\r\n\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  onClick={onReject}\r\n                >\r\n                  بازگشت\r\n                </Button>\r\n              </Grid>\r\n            </Fragment>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n    </form>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  chip: {\r\n    color: \"#fff\",\r\n  },\r\n  allIcon: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  INCOME: {\r\n    backgroundColor: theme.palette.success.main,\r\n  },\r\n  incomeIcon: {\r\n    color: theme.palette.success.main,\r\n  },\r\n  OUTCOME: {\r\n    backgroundColor: theme.palette.danger.main,\r\n  },\r\n  outgoIcon: {\r\n    color: theme.palette.danger.main,\r\n  },\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingBottom: 7,\r\n    paddingTop: 7,\r\n  },\r\n}));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Typography,\r\n  Chip,\r\n  Button,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { convertParamsToQueryString } from \"../../helpers/utils\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    label: \"نام صندوق\",\r\n  },\r\n\r\n  {\r\n    id: \"logo\",\r\n    label: \"بانک\",\r\n  },\r\n  { id: \"amount\", label: \"موجودی\" },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function CashSelector({ onSelect, onDismiss, chequeId }) {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"name\");\r\n  const [search, setSearch] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n  };\r\n\r\n  const getCashRequest = useApi({\r\n    method: \"get\",\r\n    url: `cashdesk?type=BANK&${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n    })}`,\r\n  });\r\n\r\n  const handleAction = (id) => {\r\n    onSelect(id, chequeId);\r\n  };\r\n\r\n  const getData = async () => {\r\n    const cashList = await getCashRequest.execute();\r\n    setList(cashList.data);\r\n    setTotal(cashList.total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize]);\r\n\r\n  return (\r\n    <div style={{ marginTop: -50 }}>\r\n      <TableTop handleSearch={onSearch} />\r\n      <TableContainer style={{ padding: \"0 10px\" }}>\r\n        <Table\r\n          className={classes.table}\r\n          size={\"medium\"}\r\n          style={{ paddingRight: 10 }}\r\n        >\r\n          <TableHeader\r\n            classes={classes}\r\n            order={order}\r\n            orderBy={orderBy}\r\n            onRequestSort={handleRequestSort}\r\n            rowCount={list.length}\r\n            headCells={headCells}\r\n          />\r\n          <TableBody>\r\n            {list.map((row) => {\r\n              return (\r\n                <TableRow\r\n                  hover\r\n                  tabIndex={-1}\r\n                  key={row.id}\r\n                  style={{ paddingRight: 10 }}\r\n                >\r\n                  <TableCell padding=\"none\">{row.name}</TableCell>\r\n\r\n                  <TableCell padding=\"none\">\r\n                    {row.bank && (\r\n                      <img\r\n                        style={{ width: 40, height: 40 }}\r\n                        alt={row.bank.name}\r\n                        src={`${Constant.API_ADDRESS}/${row.bank.logo}`}\r\n                      />\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell padding=\"none\">{row.amount}</TableCell>\r\n\r\n                  <TableCell padding=\"none\">\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={() => handleAction(row.id)}\r\n                    >\r\n                      انتخاب حساب\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n            {!list.length && !getCashRequest.pending && (\r\n              <TableRow style={{ height: 53 }}>\r\n                <TableCell colSpan={6} style={{ textAlign: \"center\" }}>\r\n                  <Typography variant=\"h6\">\r\n                    داده ای برای نمایش وجود ندارد\r\n                  </Typography>\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePaging\r\n        count={total}\r\n        handleChangePage={handleChangePage}\r\n        handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n        page={page}\r\n        rowsPerPage={pageSize}\r\n      />\r\n\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n      >\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n          انصراف\r\n        </Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, Paper, TextField, Button } from \"@material-ui/core\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingBottom: 7,\r\n    paddingTop: 7,\r\n  },\r\n}));\r\n\r\nexport default function SpendCheque({ chequeId, onDismiss, onSubmit }) {\r\n  const classes = useStyles();\r\n  const [selectedPerson, setSelectedPerson] = useState();\r\n  const [selectedDate, handleDateChange] = useState(moment());\r\n  const [persons, setPersons] = useState([]);\r\n  const [description, setDescription] = useState();\r\n\r\n  const getPersonsRequest = useApi({\r\n    method: \"get\",\r\n    url: \"customer\",\r\n  });\r\n\r\n  const getPersons = async () => {\r\n    const personList = await getPersonsRequest.execute();\r\n    setPersons(personList.data);\r\n  };\r\n\r\n  const onDone = () => {\r\n    onSubmit({\r\n      chequeId,\r\n      personId: selectedPerson.id,\r\n      personType: selectedPerson.type,\r\n      date: selectedDate._d,\r\n      description,\r\n    });\r\n  };\r\n\r\n  const onChangePerson = (e, value) => {\r\n    setSelectedPerson(value);\r\n  };\r\n\r\n  const onChangeDescription = (e) => {\r\n    setDescription(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPersons();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Fragment>\r\n        <Grid item xs={12} style={{ display: \"flex\" }}>\r\n          <Autocomplete\r\n            id=\"combo-box-demo\"\r\n            onChange={onChangePerson}\r\n            options={persons}\r\n            getOptionLabel={(option) =>\r\n              `${option.firstName} ${option.lastName}`\r\n            }\r\n            fullWidth\r\n            size=\"small\"\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"انتخاب شخص\" variant=\"outlined\" />\r\n            )}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.datePicker}>\r\n          <DatePicker\r\n            autoOk\r\n            name=\"date\"\r\n            label=\"تاریخ ثبت\"\r\n            inputVariant=\"outlined\"\r\n            okLabel=\"تأیید\"\r\n            cancelLabel=\"لغو\"\r\n            labelFunc={(date) => (date ? date.format(\"jYYYY/jMM/jDD\") : \"\")}\r\n            value={selectedDate}\r\n            onChange={handleDateChange}\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            label=\"بابت\"\r\n            name={\"description\"}\r\n            onChange={onChangeDescription}\r\n            value={description}\r\n            fullWidth\r\n            size=\"small\"\r\n          />\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n        >\r\n          <Button variant=\"contained\" color=\"primary\" onClick={onDone}>\r\n            تایید\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n            بازگشت\r\n          </Button>\r\n        </Grid>\r\n      </Fragment>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Tabs,\r\n  Tab,\r\n  Chip,\r\n} from \"@material-ui/core\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport {\r\n  convertParamsToQueryString,\r\n  persianNumber,\r\n  hasPermission,\r\n} from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport clsx from \"clsx\";\r\nimport dialogAction from \"../../redux/actions/dialogAction\";\r\nimport CashSelector from \"./cashSelector\";\r\nimport SpendCheque from \"./spendCheque\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \" date\",\r\n    label: \"تاریخ سررسید\",\r\n  },\r\n  {\r\n    id: \"number\",\r\n    label: \"شماره چک\",\r\n  },\r\n  {\r\n    id: \"bank\",\r\n    label: \"بانک\",\r\n  },\r\n  { id: \"amount\", label: \"مبلغ\" },\r\n  { id: \"person\", label: \"طرف حساب\" },\r\n  { id: \"cashdesk\", label: \"محل چک\" },\r\n  { id: \"type\", label: \"نوع تراکنش\" },\r\n  { id: \"action\" },\r\n];\r\n\r\nconst MainList = () => {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"chequeDueDate\");\r\n  const [search, setSearch] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [paymentType, setPaymentType] = useState(\"ALL\");\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const getChequeRequest = useApi({\r\n    method: \"get\",\r\n    url: `cheque?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n      paymentType,\r\n    })}`,\r\n  });\r\n\r\n  const spendRequest = useApi({\r\n    method: \"post\",\r\n    url: `cheque/spend`,\r\n  });\r\n\r\n  const sleepRequest = useApi({\r\n    method: \"post\",\r\n    url: `cheque/sleep`,\r\n  });\r\n\r\n  const onSelectCash = async (cashdeskId, chequeId) => {\r\n    await sleepRequest.execute({ chequeId, cashdeskId });\r\n    getData();\r\n    DialogActions.hide({ name: \"cash\" });\r\n  };\r\n\r\n  const onSubmitSpend = async (data) => {\r\n    await spendRequest.execute(data);\r\n    getData();\r\n    DialogActions.hide({ name: \"spend\" });\r\n  };\r\n\r\n  const handleAction = (row, type) => {\r\n    const types = {\r\n      sleep: () => {\r\n        dialogAction.show({\r\n          title: \"انتخاب صندوق\",\r\n          component: (\r\n            <CashSelector\r\n              chequeId={row.id}\r\n              onSelect={onSelectCash}\r\n              onDismiss={() => DialogActions.hide({ name: \"cash\" })}\r\n            />\r\n          ),\r\n          name: \"cash\",\r\n          size: \"8\",\r\n          confirm: false,\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n      spend: () => {\r\n        dialogAction.show({\r\n          title: \"خرج چک\",\r\n          component: (\r\n            <SpendCheque\r\n              chequeId={row.id}\r\n              onSubmit={onSubmitSpend}\r\n              onDismiss={() => DialogActions.hide({ name: \"spend\" })}\r\n            />\r\n          ),\r\n          name: \"spend\",\r\n          size: \"6\",\r\n          confirm: false,\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n      revert: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از برداشتن این چک مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            onSelectCash({ cashdeskId: 1, chequeId: row.id });\r\n            DialogActions.hide({ name: \"revert\" });\r\n          },\r\n          name: \"revert\",\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n    };\r\n\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const onChangeType = (data, e) => {\r\n    setPaymentType(e);\r\n  };\r\n\r\n  const getActionOptions = (data) => {\r\n    if (data.type === \"INCOME\" && data.status === \"PENDING\") {\r\n      return (\r\n        <TableCell padding=\"none\">\r\n          <TableRowMenu\r\n            options={[\r\n              { id: \"sleep\", title: \"خواباندن به حساب\" },\r\n              { id: \"spend\", title: \"خرج کردن چک\" },\r\n            ]}\r\n            hadleAction={(type) => handleAction(data, type)}\r\n          />\r\n        </TableCell>\r\n      );\r\n    } else if (data.type === \"INCOME\" && data.status === \"SLEEP\") {\r\n      return (\r\n        <TableCell padding=\"none\">\r\n          <TableRowMenu\r\n            options={[{ id: \"revert\", title: \"برداشتن از حساب\" }]}\r\n            hadleAction={(type) => handleAction(data, type)}\r\n          />\r\n        </TableCell>\r\n      );\r\n    } else {\r\n      return <TableCell padding=\"none\" />;\r\n    }\r\n  };\r\n\r\n  const getData = async () => {\r\n    const chequeList = await getChequeRequest.execute();\r\n    setList(chequeList.data);\r\n    setTotal(chequeList.total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize, paymentType]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.CASH_LIST) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getChequeRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title=\"لیست چک ها\"\r\n                    handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                  />\r\n                  <div className={classes.tab}>\r\n                    <Tabs\r\n                      variant=\"fullWidth\"\r\n                      value={paymentType}\r\n                      onChange={onChangeType}\r\n                      indicatorColor=\"primary\"\r\n                      textColor=\"primary\"\r\n                      centered\r\n                    >\r\n                      <Tab\r\n                        icon={\r\n                          <i\r\n                            className={clsx(\r\n                              \"material-icons-round\",\r\n                              classes.allIcon,\r\n                            )}\r\n                          >\r\n                            sync\r\n                          </i>\r\n                        }\r\n                        label=\"کل چک ها\"\r\n                        value=\"ALL\"\r\n                      />\r\n                      <Tab\r\n                        icon={\r\n                          <i\r\n                            className={clsx(\r\n                              \"material-icons-round\",\r\n                              classes.incomeIcon,\r\n                            )}\r\n                          >\r\n                            trending_up\r\n                          </i>\r\n                        }\r\n                        label=\"چک های دریافتی\"\r\n                        value=\"INCOME\"\r\n                      />\r\n                      <Tab\r\n                        icon={\r\n                          <i\r\n                            className={clsx(\r\n                              \"material-icons-round\",\r\n                              classes.outgoIcon,\r\n                            )}\r\n                          >\r\n                            trending_down\r\n                          </i>\r\n                        }\r\n                        label=\"چک های پرداختی\"\r\n                        value=\"OUTCOME\"\r\n                      />\r\n                    </Tabs>\r\n                  </div>\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                            >\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  new Date(\r\n                                    row.chequeDueDate,\r\n                                  ).toLocaleDateString(\"fa-IR\"),\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(row.chequeNumber)}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.bank && (\r\n                                  <img\r\n                                    style={{ width: 40, height: 40 }}\r\n                                    alt={row.bank.name}\r\n                                    src={`${Constant.API_ADDRESS}/${row.bank.logo}`}\r\n                                  />\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  Number(row.price).toLocaleString(),\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">{row.person}</TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.cashDeskName}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                <Chip\r\n                                  label={Constant.PAYMENT_TYPE[row.type]}\r\n                                  className={clsx(\r\n                                    classes.chip,\r\n                                    classes[row.type],\r\n                                  )}\r\n                                />\r\n                              </TableCell>\r\n\r\n                              {getActionOptions(row)}\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getChequeRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={10}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainList;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  RadioGroup,\r\n  Radio,\r\n  FormControlLabel,\r\n} from \"@material-ui/core\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { getQueryString } from \"../../helpers/utils\";\r\nimport CircularProgress from \"../../components/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: 7,\r\n  },\r\n}));\r\n\r\nexport default function MainDetail({ defaultValues }) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const id = getQueryString(\"id\");\r\n  const [detail, setDetail] = useState({});\r\n  const [banks, setBanks] = useState([]);\r\n  const [selectedType, setSelectedType] = React.useState(\"CASH\");\r\n  const [selectedBank, setSelectedBank] = useState(\r\n    defaultValues?.bank.value || 1,\r\n  );\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n\r\n  const addCashRequest = useApi({\r\n    method: \"post\",\r\n    url: `cashdesk`,\r\n  });\r\n  const editCashRequest = useApi({\r\n    method: \"put\",\r\n    url: `cashdesk/${id}`,\r\n  });\r\n  const detailCashRequest = useApi({\r\n    method: \"get\",\r\n    url: `cashdesk/${id}`,\r\n  });\r\n  const getBankRequest = useApi({\r\n    method: \"get\",\r\n    url: `bank`,\r\n  });\r\n\r\n  const handleChangeType = (event) => {\r\n    setSelectedType(event.target.value);\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    if (id) {\r\n      await editCashRequest.execute(data);\r\n    } else {\r\n      await addCashRequest.execute(data);\r\n    }\r\n    setTimeout(() => {\r\n      onReject();\r\n    }, 1000);\r\n  };\r\n\r\n  const onReject = () => {\r\n    history.push(\"/app/cash-list\");\r\n  };\r\n\r\n  const getDetail = async () => {\r\n    const detail = await detailCashRequest.execute();\r\n    setDetail(detail.data);\r\n    setSelectedBank(detail.data.bankId);\r\n    setSelectedType(detail.data.type);\r\n  };\r\n\r\n  const onChangeBank = (e) => {\r\n    setSelectedBank(e.target.value);\r\n  };\r\n\r\n  const getBanks = async () => {\r\n    const result = await getBankRequest.execute();\r\n    setBanks(result.data);\r\n  };\r\n\r\n  const onDone = (data) => {\r\n    const value = {\r\n      ...data,\r\n      bankId: selectedBank,\r\n      type: selectedType,\r\n      isUpdate: !!defaultValues,\r\n    };\r\n    onSubmit(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      getDetail();\r\n    }\r\n    getBanks();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(detail);\r\n  }, [reset, detail]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onDone)}>\r\n      {!detailCashRequest.pending ? (\r\n        <Grid item lg={6} sm={12} className={classes.root}>\r\n          <Paper className={classes.paper}>\r\n            <Typography\r\n              className={classes.title}\r\n              variant=\"h6\"\r\n              id=\"tableTitle\"\r\n              component=\"div\"\r\n            >\r\n              {id ? \"ویرایش صندوق\" : \"افزودن صندوق\"}\r\n            </Typography>\r\n\r\n            <Grid container spacing={3}>\r\n              <Fragment>\r\n                <Grid item lg={12} xs={12}>\r\n                  <RadioGroup\r\n                    aria-label=\"gender\"\r\n                    name=\"gender1\"\r\n                    value={selectedType}\r\n                    onChange={handleChangeType}\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-around\",\r\n                    }}\r\n                  >\r\n                    <FormControlLabel\r\n                      value=\"CASH\"\r\n                      control={<Radio />}\r\n                      label=\"نقدی\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"BANK\"\r\n                      control={<Radio />}\r\n                      label=\"بانکی\"\r\n                    />\r\n                  </RadioGroup>\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"نام\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.name}\r\n                          helperText={errors.name ? errors.name.message : \"\"}\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                    name=\"name\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"موجودی \"\r\n                          type=\"number\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.amount}\r\n                          helperText={\r\n                            errors.amount ? errors.amount.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                    name=\"amount\"\r\n                  />\r\n                </Grid>\r\n                {selectedType === \"BANK\" && (\r\n                  <>\r\n                    <Grid item lg={6} xs={12}>\r\n                      <TextField\r\n                        select\r\n                        label=\"بانک\"\r\n                        onChange={onChangeBank}\r\n                        value={selectedBank}\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        name=\"bank\"\r\n                        SelectProps={{\r\n                          classes: {\r\n                            select: classes.rootSelect,\r\n                          },\r\n                        }}\r\n                      >\r\n                        {banks.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            <img\r\n                              src={`${Constant.API_ADDRESS}/${option.logo}`}\r\n                              alt={option.label}\r\n                              style={{\r\n                                width: 25,\r\n                                height: 25,\r\n                                borderRadius: \"50%\",\r\n                                marginLeft: 10,\r\n                              }}\r\n                            />\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </TextField>\r\n                    </Grid>\r\n                    <Grid item lg={6} xs={12}>\r\n                      <Controller\r\n                        control={control}\r\n                        render={({ onChange, value, name }) => {\r\n                          return (\r\n                            <TextField\r\n                              fullWidth\r\n                              value={value}\r\n                              size=\"small\"\r\n                              name={name}\r\n                              label=\"شماره کارت\"\r\n                              variant=\"outlined\"\r\n                              onChange={onChange}\r\n                              error={!!errors.accountCardNumber}\r\n                              helperText={\r\n                                errors.accountCardNumber\r\n                                  ? errors.accountCardNumber.message\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          );\r\n                        }}\r\n                        rules={{\r\n                          minLength: {\r\n                            value: 16,\r\n                            message: Constant.VALIDATION.CARD_NUMBER,\r\n                          },\r\n                          maxLength: {\r\n                            value: 16,\r\n                            message: Constant.VALIDATION.CARD_NUMBER,\r\n                          },\r\n                        }}\r\n                        name=\"accountCardNumber\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item lg={6} xs={12}>\r\n                      <Controller\r\n                        control={control}\r\n                        render={({ onChange, value, name }) => {\r\n                          return (\r\n                            <TextField\r\n                              fullWidth\r\n                              value={value}\r\n                              size=\"small\"\r\n                              name={name}\r\n                              label=\"شماره حساب\"\r\n                              variant=\"outlined\"\r\n                              onChange={onChange}\r\n                              error={!!errors.accountNumber}\r\n                              helperText={\r\n                                errors.accountNumber\r\n                                  ? errors.accountNumber.message\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          );\r\n                        }}\r\n                        name=\"accountNumber\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item lg={6} xs={12}>\r\n                      <Controller\r\n                        control={control}\r\n                        render={({ onChange, value, name }) => {\r\n                          return (\r\n                            <TextField\r\n                              fullWidth\r\n                              value={value}\r\n                              size=\"small\"\r\n                              name={name}\r\n                              label=\"شماره شبا\"\r\n                              variant=\"outlined\"\r\n                              onChange={onChange}\r\n                              error={!!errors.accountShaba}\r\n                              helperText={\r\n                                errors.accountShaba\r\n                                  ? errors.accountShaba.message\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          );\r\n                        }}\r\n                        name=\"accountShaba\"\r\n                      />\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n                <Grid item xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          multiline\r\n                          variant=\"outlined\"\r\n                          label=\"توضیحات\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.description}\r\n                          helperText={\r\n                            errors.description ? errors.description.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    name=\"description\"\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                    تایید\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={onReject}\r\n                  >\r\n                    بازگشت\r\n                  </Button>\r\n                </Grid>\r\n              </Fragment>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      ) : (\r\n        <CircularProgress />\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, TextField, MenuItem, Button, Divider } from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n}));\r\nconst Filter = ({ onFilter }) => {\r\n  const classes = useStyles();\r\n  const [selectedPerson, setSelectedPerson] = useState();\r\n  const [selectedFromDate, handleFromDateChange] = useState(moment());\r\n  const [selectedToDate, handleToDateChange] = useState(moment());\r\n  const [customers, setCustomers] = useState([]);\r\n\r\n  const getCustomersRequest = useApi({\r\n    method: \"get\",\r\n    url: \"customer\",\r\n  });\r\n\r\n  const onChangePerson = (e, value) => {\r\n    setSelectedPerson(value);\r\n  };\r\n\r\n  const onChnageDate = (e, type) => {\r\n    if (type === \"from\") {\r\n      handleFromDateChange(e);\r\n    } else {\r\n      handleToDateChange(e);\r\n    }\r\n  };\r\n\r\n  const getCustomers = async () => {\r\n    const customerList = await getCustomersRequest.execute();\r\n    setCustomers(customerList.data);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (typeof onFilter === \"function\") {\r\n      onFilter(\r\n        `{customerId:${\r\n          selectedPerson ? selectedPerson.id : null\r\n        },from:${selectedFromDate._d.toISOString()},to:${selectedToDate._d.toISOString()}}`,\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCustomers();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container spacing={3} alignItems=\"center\" style={{ padding: 10 }}>\r\n      <Grid item lg={3} xs={12} style={{ display: \"flex\" }}>\r\n        <Autocomplete\r\n          id=\"combo-box-demo\"\r\n          onChange={onChangePerson}\r\n          options={customers}\r\n          getOptionLabel={(option) => `${option.firstName} ${option.lastName}`}\r\n          fullWidth\r\n          size=\"small\"\r\n          renderInput={(params) => (\r\n            <TextField {...params} label=\"انتخاب شخص\" variant=\"outlined\" />\r\n          )}\r\n        />\r\n      </Grid>\r\n      <Grid item lg={3} xs={12} className={classes.datePicker}>\r\n        <DatePicker\r\n          autoOk\r\n          name=\"date\"\r\n          label=\"از تاریخ\"\r\n          inputVariant=\"outlined\"\r\n          okLabel=\"تأیید\"\r\n          cancelLabel=\"لغو\"\r\n          labelFunc={(date) => (date ? date.format(\"jYYYY/jMM/jDD\") : \"\")}\r\n          value={selectedFromDate}\r\n          onChange={(e) => onChnageDate(e, \"from\")}\r\n          style={{ width: \"100%\" }}\r\n        />\r\n      </Grid>\r\n      <Grid item lg={3} xs={12} className={classes.datePicker}>\r\n        <DatePicker\r\n          autoOk\r\n          name=\"date\"\r\n          label=\"تا تاریخ\"\r\n          inputVariant=\"outlined\"\r\n          okLabel=\"تأیید\"\r\n          cancelLabel=\"لغو\"\r\n          labelFunc={(date) => (date ? date.format(\"jYYYY/jMM/jDD\") : \"\")}\r\n          value={selectedToDate}\r\n          onChange={(e) => onChnageDate(e, \"to\")}\r\n          style={{ width: \"100%\" }}\r\n        />\r\n      </Grid>\r\n      <Grid item lg={3} xs={12}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n          تایید\r\n        </Button>\r\n      </Grid>\r\n      <Divider style={{ width: \"100%\" }} />\r\n    </Grid>\r\n  );\r\n};\r\nexport default Filter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Tabs,\r\n  Tab,\r\n  Chip,\r\n} from \"@material-ui/core\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport {\r\n  convertParamsToQueryString,\r\n  persianNumber,\r\n  hasPermission,\r\n} from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport clsx from \"clsx\";\r\nimport { getQueryString } from \"../../helpers/utils\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\nimport FilterComponent from \"./filter\";\r\n\r\nconst headCells = [\r\n  { id: \"personType\" },\r\n  {\r\n    id: \"person\",\r\n    label: \"نام شخص\",\r\n  },\r\n  {\r\n    id: \"date\",\r\n    label: \"تاریخ\",\r\n  },\r\n  { id: \"price\", label: \"مبلغ\" },\r\n  {\r\n    id: \"typr\",\r\n    label: \"نوع\",\r\n  },\r\n\r\n  // { id: \"action\" },\r\n];\r\n\r\nconst MainList = () => {\r\n  const paymentType = getQueryString(\"type\");\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"date\");\r\n  const [search, setSearch] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [type, setType] = useState(paymentType);\r\n  const [filter, setFilter] = useState();\r\n  const history = useHistory();\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onAdd = () => {\r\n    history.push(`/app/payment-detail?type=${type}`);\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n  };\r\n\r\n  const getPaymentRequest = useApi({\r\n    method: \"get\",\r\n    url: decodeURIComponent(\r\n      `payment?${convertParamsToQueryString({\r\n        page,\r\n        order,\r\n        orderBy,\r\n        pageSize,\r\n        search,\r\n        type,\r\n        filter,\r\n      })}`,\r\n    ),\r\n  });\r\n\r\n  const deleteUseRequest = useApi({\r\n    method: \"delete\",\r\n    url: `payment`,\r\n  });\r\n\r\n  const handleAction = (row, type) => {\r\n    const types = {\r\n      edit: () => {\r\n        history.push(`/app/payment-detail?type=${row.type}&id=${row.id}`);\r\n      },\r\n      delete: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            await deleteUseRequest.execute(null, row.id);\r\n            setList(list.filter((item) => item.id !== row.id));\r\n            DialogActions.hide();\r\n          },\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const onChangeType = (e, value) => {\r\n    setType(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onFilter = (data) => {\r\n    setFilter(data);\r\n    setPage(0);\r\n  };\r\n\r\n  const getTableTitle = () => {\r\n    if (type === \"INCOME\") {\r\n      return \"لیست دریافتی ها\";\r\n    } else if (type === \"OUTCOME\") {\r\n      return \"لیست پرداختی ها\";\r\n    }\r\n    return \"لیست دریافتی ها و پرداختی ها\";\r\n  };\r\n\r\n  const getData = async () => {\r\n    const paymentList = await getPaymentRequest.execute();\r\n    setList(paymentList.data);\r\n    setTotal(paymentList.total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize, type, filter]);\r\n\r\n  useEffect(() => {\r\n    setType(paymentType);\r\n  }, [paymentType]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.PAYMENT_SHOW) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getPaymentRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title={getTableTitle()}\r\n                    onAdd={type !== \"ALL\" && onAdd}\r\n                    handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                    FilterComponent={<FilterComponent onFilter={onFilter} />}\r\n                  />\r\n                  <div className={classes.tab}>\r\n                    <Tabs\r\n                      value={type}\r\n                      onChange={onChangeType}\r\n                      indicatorColor=\"primary\"\r\n                      textColor=\"primary\"\r\n                      centered\r\n                      variant=\"fullWidth\"\r\n                    >\r\n                      <Tab\r\n                        icon={\r\n                          <i\r\n                            className={clsx(\r\n                              \"material-icons-round\",\r\n                              classes.allIcon,\r\n                            )}\r\n                          >\r\n                            sync\r\n                          </i>\r\n                        }\r\n                        label=\"کل تراکنش ها\"\r\n                        value=\"ALL\"\r\n                      />\r\n                      <Tab\r\n                        icon={\r\n                          <i\r\n                            className={clsx(\r\n                              \"material-icons-round\",\r\n                              classes.incomeIcon,\r\n                            )}\r\n                          >\r\n                            trending_up\r\n                          </i>\r\n                        }\r\n                        label=\"دریافتی ها\"\r\n                        value=\"INCOME\"\r\n                      />\r\n                      <Tab\r\n                        icon={\r\n                          <i\r\n                            className={clsx(\r\n                              \"material-icons-round\",\r\n                              classes.outgoIcon,\r\n                            )}\r\n                          >\r\n                            trending_down\r\n                          </i>\r\n                        }\r\n                        label=\"پرداختی ها\"\r\n                        value=\"OUTCOME\"\r\n                      />\r\n                    </Tabs>\r\n                  </div>\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                            >\r\n                              <TableCell padding=\"none\">\r\n                                {row.paymentname}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">{row.person}</TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  new Date(row.date).toLocaleDateString(\r\n                                    \"fa-IR\",\r\n                                  ),\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  Number(row.price).toLocaleString(),\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                <Chip\r\n                                  label={Constant.PAYMENT_TYPE[row.type]}\r\n                                  className={clsx(\r\n                                    classes.type,\r\n                                    classes[row.type],\r\n                                  )}\r\n                                />\r\n                              </TableCell>\r\n\r\n                              {/* <TableCell padding=\"none\">\r\n                                <TableRowMenu\r\n                                  options={\r\n                                    [\r\n                                      // { id: \"edit\", title: \"ویرایش\" },\r\n                                      // { id: \"delete\", title: \"حذف\" },\r\n                                    ]\r\n                                  }\r\n                                  hadleAction={(type) =>\r\n                                    handleAction(row, type)\r\n                                  }\r\n                                />\r\n                              </TableCell> */}\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getPaymentRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default MainList;\r\n","import React, { Fragment, useEffect, useRef, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  FormControlLabel,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { getQueryString } from \"../../helpers/utils\";\r\nimport CircularProgress from \"../../components/CircularProgress\";\r\nimport PersonSelector from \"./personSelector\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport dialogAction from \"../../redux/actions/dialogAction\";\r\nimport PrePayment from \"./prePayment\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingBottom: 7,\r\n    paddingTop: 7,\r\n  },\r\n}));\r\n\r\nexport default function MainDetail({ defaultValues }) {\r\n  const paymentRef = useRef(null);\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const id = getQueryString(\"id\");\r\n\r\n  const paymentType = getQueryString(\"type\");\r\n  const loan = getQueryString(\"loan\");\r\n  const customerId = getQueryString(\"customerId\");\r\n  const [detail, setDetail] = useState({});\r\n  const [isLoan, setIsLoan] = useState(loan);\r\n  const [selectedPerson, setSelectedPerson] = useState();\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n  const [selectedDate, setSelectedDate] = useState(moment());\r\n  const [payments, setPayments] = useState({\r\n    cashes: [],\r\n    banks: [],\r\n    cheques: [],\r\n  });\r\n  const addPaymentRequest = useApi({\r\n    method: \"post\",\r\n    url: `payment`,\r\n  });\r\n  const editPaymentRequest = useApi({\r\n    method: \"put\",\r\n    url: `payment/${id}`,\r\n  });\r\n  const detailPaymentRequest = useApi({\r\n    method: \"get\",\r\n    url: `payment/${id}`,\r\n  });\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const onSelectPerson = (person) => {\r\n    setSelectedPerson(person);\r\n    onDismissPerson();\r\n  };\r\n\r\n  const onDismissPerson = () => {\r\n    dialogAction.hide({ name: \"person\" });\r\n  };\r\n\r\n  const onShowDialog = () => {\r\n    dialogAction.show({\r\n      title: \"انتخاب شخص\",\r\n      component: (\r\n        <PersonSelector\r\n          onSelect={onSelectPerson}\r\n          onDismiss={onDismissPerson}\r\n          filter={Constant.PERSON_TYPE.PERSON}\r\n        />\r\n      ),\r\n      name: \"person\",\r\n      size: \"8\",\r\n      confirm: false,\r\n      disableCloseButton: false,\r\n    });\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    console.log(data);\r\n    const value = {\r\n      type: paymentType,\r\n      personType: selectedPerson.personType,\r\n      personId: selectedPerson.value,\r\n      description: data.description,\r\n      date: selectedDate._d,\r\n      isLoan,\r\n      ...paymentRef.current,\r\n    };\r\n    if (id) {\r\n      await editPaymentRequest.execute(value);\r\n    } else {\r\n      await addPaymentRequest.execute(value);\r\n    }\r\n    setTimeout(() => {\r\n      onReject();\r\n    }, 1000);\r\n  };\r\n\r\n  const onReject = () => {\r\n    if (customerId) {\r\n      return history.push(\r\n        `/app/person-transaction?id=${customerId}&type=customer`,\r\n      );\r\n    }\r\n    history.push(\"/app/payment-list?type=ALL\");\r\n  };\r\n\r\n  const getDetail = async () => {\r\n    const detail = await detailPaymentRequest.execute();\r\n    setDetail(detail.data);\r\n    const { person, date, banks, cashes, cheques } = detail.data;\r\n    setSelectedPerson(person);\r\n    setSelectedDate(date);\r\n    setPayments({ banks, cashes, cheques });\r\n    setIsLoan(detail.data.isLoan);\r\n  };\r\n\r\n  const getDetailTitle = () => {\r\n    if (id) {\r\n      if (paymentType === \"INCOME\") {\r\n        return \"ویرایش دریافتی\";\r\n      }\r\n      return \"ویرایش پرداختی\";\r\n    } else {\r\n      if (paymentType === \"INCOME\") {\r\n        return \"افزودن دریافتی\";\r\n      }\r\n      return \"افزودن پرداختی\";\r\n    }\r\n  };\r\n\r\n  const getPersonName = () => {\r\n    if (selectedPerson) {\r\n      if (selectedPerson.label) {\r\n        return `${selectedPerson.label}`;\r\n      }\r\n      return `${selectedPerson.firstName} ${selectedPerson.lastName}`;\r\n    }\r\n    return \"\";\r\n  };\r\n  const handleChangeIsloan = (e) => {\r\n    setIsLoan(e.target.checked);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      getDetail();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(detail);\r\n  }, [reset, detail]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      {!detailPaymentRequest.pending ? (\r\n        <Grid item lg={8} sm={12} className={classes.root}>\r\n          <Paper className={classes.paper}>\r\n            <Typography\r\n              className={classes.title}\r\n              variant=\"h6\"\r\n              id=\"tableTitle\"\r\n              component=\"div\"\r\n            >\r\n              {getDetailTitle()}\r\n            </Typography>\r\n\r\n            <Grid container spacing={3}>\r\n              <Fragment>\r\n                <Grid item lg={6} xs={12} style={{ display: \"flex\" }}>\r\n                  <Button\r\n                    style={{ marginLeft: 10, width: \"30%\" }}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={onShowDialog}\r\n                  >\r\n                    انتخاب شخص\r\n                  </Button>\r\n\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    name={\"personName\"}\r\n                    value={getPersonName()}\r\n                    disabled\r\n                    style={{ width: \"70%\" }}\r\n                    size=\"small\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12} className={classes.datePicker}>\r\n                  <DatePicker\r\n                    autoOk\r\n                    name=\"date\"\r\n                    label=\"تاریخ ثبت\"\r\n                    inputVariant=\"outlined\"\r\n                    okLabel=\"تأیید\"\r\n                    cancelLabel=\"لغو\"\r\n                    labelFunc={(date) =>\r\n                      date ? date.format(\"jYYYY/jMM/jDD\") : \"\"\r\n                    }\r\n                    value={selectedDate}\r\n                    onChange={handleDateChange}\r\n                    style={{ width: \"100%\" }}\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        checked={isLoan}\r\n                        onChange={handleChangeIsloan}\r\n                        // name={item.value}\r\n                        color=\"primary\"\r\n                      />\r\n                    }\r\n                    label={\r\n                      paymentType === \"INCOME\" ? \"پرداخت قسط\" : \"اعطای وام\"\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"بابت\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.description}\r\n                          helperText={\r\n                            errors.description ? errors.description.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    name=\"description\"\r\n                  />\r\n                </Grid>\r\n                {((id && payments) || !id) && (\r\n                  <PrePayment\r\n                    defaultValues={payments}\r\n                    type={paymentType}\r\n                    ref={paymentRef}\r\n                  />\r\n                )}\r\n\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                    تایید\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={onReject}\r\n                  >\r\n                    بازگشت\r\n                  </Button>\r\n                </Grid>\r\n              </Fragment>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      ) : (\r\n        <CircularProgress />\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n}));\r\n","import React from \"react\";\r\n\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { persianNumber } from \"../../helpers/utils\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"amount\",\r\n    label: \"موجودی\",\r\n  },\r\n  { id: \"unit\", label: \"واحد\" },\r\n  {\r\n    id: \"depot\",\r\n    label: \"انبار\",\r\n  },\r\n];\r\n\r\nexport default function MainDetail({ data, onSubmit }) {\r\n  return (\r\n    <Grid container spacing={3} alignItems=\"center\">\r\n      {!!data.length && (\r\n        <Grid item xs={12}>\r\n          <TableContainer style={{ padding: \"0 10px\" }}>\r\n            <Table size={\"medium\"} style={{ paddingRight: 10 }}>\r\n              <TableHeader headCells={headCells} />\r\n\r\n              <TableBody>\r\n                {data.map((row) => {\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      tabIndex={-1}\r\n                      key={row.id}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableCell padding=\"none\">\r\n                        {persianNumber(row.stock)}\r\n                      </TableCell>\r\n                      <TableCell padding=\"none\">{row.unit}</TableCell>\r\n                      <TableCell padding=\"none\">{row.depot}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Grid>\r\n      )}\r\n      <Grid item xs={12}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n          بازگشت\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  IconButton,\r\n  Collapse,\r\n  Typography,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport PrePayment from \"../payment/prePayment\";\r\nimport unitAction from \"../../redux/actions/unitAction\";\r\nimport { getQueryString, persianNumber } from \"../../helpers/utils\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n  deleteIcon: {\r\n    color: theme.palette.error.main,\r\n  },\r\n  formControl: {\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nexport default function MainDetail() {\r\n  const productId = getQueryString(\"id\");\r\n  const productName = getQueryString(\"productName\");\r\n  const unitBaseId = getQueryString(\"unitBaseId\");\r\n  const paymentRef = useRef(null);\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [units, setUnits] = useState([]);\r\n  const [selectedUnit, setSelectedUnit] = useState(units[0]?.value);\r\n  const [selectedSource, setSelectedSource] = useState(5);\r\n  const [selectedDestination, setSelectedDestination] = useState(5);\r\n  const [amount, setAmount] = useState();\r\n  const [selectedDriver, setSelectedDriver] = useState();\r\n  const [description, setDescription] = useState();\r\n  const [depotPicker, setDepotPicker] = useState([]);\r\n  const [driverPicker, setDriverPicker] = useState([]);\r\n  const [isAddDriver, setIsAddDriver] = useState(false);\r\n  const [category, setCategory] = useState([]);\r\n  const [categoryId, setDriverCategory] = useState(1);\r\n  const [newDriver, setNewDriver] = useState();\r\n  const [showPerUnit, setShowPerUnit] = useState(false);\r\n  const [perUnit, setPerUnit] = useState();\r\n  const [payments, setPayments] = useState({\r\n    cashes: [],\r\n    banks: [],\r\n    cheques: [],\r\n  });\r\n\r\n  const getDepotRequest = useApi({\r\n    method: \"get\",\r\n    url: `depot/picker`,\r\n  });\r\n\r\n  const getDriversRequest = useApi({\r\n    method: \"get\",\r\n    url: \"driver\",\r\n  });\r\n\r\n  const categoryIdRequest = useApi({\r\n    method: \"get\",\r\n    url: `driver/category`,\r\n  });\r\n\r\n  const transferRequest = useApi({\r\n    method: \"post\",\r\n    url: `depot/transfer`,\r\n  });\r\n\r\n  const addDriverRequest = useApi({\r\n    method: \"post\",\r\n    url: `driver`,\r\n  });\r\n\r\n  const addTransferPaymentRequest = useApi({\r\n    method: \"post\",\r\n    url: `payment`,\r\n  });\r\n\r\n  const getDriverCategory = async () => {\r\n    const detail = await categoryIdRequest.execute();\r\n    setCategory(detail.data);\r\n  };\r\n\r\n  const onSubmitTransfer = async () => {\r\n    const data = {\r\n      sourceDepotId: selectedSource,\r\n      destinationDepotId: selectedDestination,\r\n      productId,\r\n      amount,\r\n      perUnit,\r\n      unit: selectedUnit,\r\n      description,\r\n      isAddDriver,\r\n      newDriver,\r\n    };\r\n    let newAddedDriver;\r\n    if (!selectedDriver) {\r\n      newAddedDriver = await addDriverRequest.execute(data.newDriver);\r\n      data.driverId = newAddedDriver.id;\r\n      await transferRequest.execute(data);\r\n    } else {\r\n      data.driverId = selectedDriver.id;\r\n      await transferRequest.execute(data);\r\n    }\r\n\r\n    const transferPayments = {\r\n      ...paymentRef.current,\r\n      date: new Date(),\r\n      personId: selectedDriver ? selectedDriver.id : newAddedDriver.id,\r\n      personType: \"DRIVER\",\r\n      type: \"OUTCOME\",\r\n      description: `بابت انتقال بین انبارها`,\r\n    };\r\n    await addTransferPaymentRequest.execute(transferPayments);\r\n    setTimeout(() => {\r\n      onDismiss();\r\n    }, 1000);\r\n  };\r\n\r\n  const getDrivers = async () => {\r\n    const customerList = await getDriversRequest.execute();\r\n    setDriverPicker(customerList.data);\r\n  };\r\n\r\n  const onChange = (e, type) => {\r\n    const types = {\r\n      source: () => {\r\n        setSelectedSource(e.target.value);\r\n      },\r\n      destination: () => {\r\n        setSelectedDestination(e.target.value);\r\n      },\r\n      amount: () => {\r\n        setAmount(e.target.value);\r\n      },\r\n      description: () => {\r\n        setDescription(e.target.value);\r\n      },\r\n      unit: () => {\r\n        setSelectedUnit(e.target.value);\r\n        const targetUnit = units.filter(\r\n          (item) => item.value === e.target.value,\r\n        )[0];\r\n        setShowPerUnit(targetUnit.perUnit);\r\n      },\r\n      firstName: () => {\r\n        setNewDriver({ ...newDriver, firstName: e.target.value });\r\n      },\r\n      lastName: () => {\r\n        setNewDriver({ ...newDriver, lastName: e.target.value });\r\n      },\r\n      carName: () => {\r\n        setNewDriver({ ...newDriver, carName: e.target.value });\r\n      },\r\n      carPlaque: () => {\r\n        setNewDriver({ ...newDriver, carPlaque: e.target.value });\r\n      },\r\n      categoryId: () => {\r\n        setNewDriver({ ...newDriver, categoryId: e.target.value });\r\n      },\r\n      perUnit: () => {\r\n        setPerUnit(e.target.value);\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      return types[type]();\r\n    }\r\n  };\r\n\r\n  const onDismiss = () => {\r\n    history.push(\"/app/product-list\");\r\n  };\r\n\r\n  const onChangeDriver = (e, value) => {\r\n    setSelectedDriver(value);\r\n  };\r\n\r\n  const getDepotPicker = async () => {\r\n    const result = await getDepotRequest.execute();\r\n    setDepotPicker(result.data);\r\n  };\r\n\r\n  const onAddDriver = () => {\r\n    setIsAddDriver(!isAddDriver);\r\n  };\r\n\r\n  const getUnits = () => {\r\n    const allUnits = unitAction\r\n      .getProductUnit()\r\n      .filter((item) => item.value === unitBaseId)[0];\r\n    if (allUnits) {\r\n      setUnits(allUnits.children);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUnits();\r\n    getDriverCategory();\r\n    getDrivers();\r\n    getDepotPicker();\r\n  }, []);\r\n\r\n  return (\r\n    <form>\r\n      <Grid item lg={6} sm={12} className={classes.root}>\r\n        <Paper className={classes.paper}>\r\n          <Typography\r\n            className={classes.title}\r\n            variant=\"h6\"\r\n            id=\"tableTitle\"\r\n            component=\"div\"\r\n          >\r\n            {`انتقال ${productName} بین انبار ها`}\r\n          </Typography>\r\n          <Grid container spacing={3}>\r\n            <Grid item sm={6} xs={12}>\r\n              <TextField\r\n                select\r\n                label=\"انبار مبدا\"\r\n                value={selectedSource}\r\n                onChange={(e) => onChange(e, \"source\")}\r\n                variant=\"outlined\"\r\n                name=\"depot\"\r\n                fullWidth\r\n                size=\"small\"\r\n              >\r\n                {depotPicker.map((option) => (\r\n                  <MenuItem key={option.value} value={option.value}>\r\n                    {option.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n            <Grid item sm={6} xs={12}>\r\n              <TextField\r\n                select\r\n                label=\"انبار مقصد\"\r\n                value={selectedDestination}\r\n                onChange={(e) => onChange(e, \"destination\")}\r\n                variant=\"outlined\"\r\n                name=\"depot\"\r\n                fullWidth\r\n                size=\"small\"\r\n              >\r\n                {depotPicker.map((option) => (\r\n                  <MenuItem key={option.value} value={option.value}>\r\n                    {option.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n\r\n            <Grid item sm={6} xs={12}>\r\n              <TextField\r\n                select\r\n                label=\"واحد\"\r\n                value={selectedUnit}\r\n                onChange={(e) => onChange(e, \"unit\")}\r\n                variant=\"outlined\"\r\n                name=\"unit\"\r\n                fullWidth\r\n                size=\"small\"\r\n              >\r\n                {units.map((option) => (\r\n                  <MenuItem key={option.value} value={option.value}>\r\n                    {option.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n\r\n            <Grid item sm={6} xs={12}>\r\n              <TextField\r\n                type=\"number\"\r\n                variant=\"outlined\"\r\n                label=\"مقدار\"\r\n                name={\"amount\"}\r\n                onChange={(e) => onChange(e, \"amount\")}\r\n                value={amount}\r\n                fullWidth\r\n                size=\"small\"\r\n              />\r\n            </Grid>\r\n            {showPerUnit && (\r\n              <Grid item sm={6} xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"مقدار در واحد\"\r\n                  name={\"perUnit\"}\r\n                  onChange={(e) => onChange(e, \"perUnit\")}\r\n                  value={perUnit}\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  type=\"number\"\r\n                />\r\n              </Grid>\r\n            )}\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                multiline\r\n                variant=\"outlined\"\r\n                label=\"توضیحات\"\r\n                name={\"description\"}\r\n                onChange={(e) => onChange(e, \"description\")}\r\n                value={description}\r\n                fullWidth\r\n                size=\"small\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              sm={6}\r\n              xs={12}\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                marginBottom: 20,\r\n              }}\r\n            >\r\n              <Autocomplete\r\n                id=\"combo-box-demo\"\r\n                onChange={onChangeDriver}\r\n                options={driverPicker}\r\n                getOptionLabel={(option) =>\r\n                  `${option.firstName} ${option.lastName}`\r\n                }\r\n                fullWidth\r\n                size=\"small\"\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"انتخاب راننده\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                )}\r\n              />\r\n              <IconButton\r\n                color=\"primary\"\r\n                style={{ marginRight: 10 }}\r\n                onClick={onAddDriver}\r\n              >\r\n                <i className=\"material-icons-round\">\r\n                  {isAddDriver ? \"clear\" : \"add\"}\r\n                </i>\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n          <Collapse in={isAddDriver}>\r\n            <Grid container spacing={3}>\r\n              <Grid item sm={6} xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"نام راننده\"\r\n                  onChange={(e) => onChange(e, \"firstName\")}\r\n                  value={newDriver?.firstName}\r\n                  fullWidth\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n              <Grid item sm={6} xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"نام خانوادگی راننده\"\r\n                  onChange={(e) => onChange(e, \"lastName\")}\r\n                  value={newDriver?.lastName}\r\n                  fullWidth\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item sm={6} xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"نام ماشین\"\r\n                  onChange={(e) => onChange(e, \"carName\")}\r\n                  value={newDriver?.carName}\r\n                  fullWidth\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item sm={6} xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"پلاک\"\r\n                  onChange={(e) => onChange(e, \"carPlaque\")}\r\n                  value={newDriver?.carPlaque}\r\n                  fullWidth\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item sm={6} xs={12}>\r\n                {!!category.length && categoryId && (\r\n                  <TextField\r\n                    select\r\n                    label=\"دسته بندی\"\r\n                    value={categoryId}\r\n                    onChange={(e) => onChange(e, \"categoryId\")}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    size=\"small\"\r\n                  >\r\n                    {category.map((option) => (\r\n                      <MenuItem key={option.value} value={option.value}>\r\n                        {option.label}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </TextField>\r\n                )}\r\n              </Grid>\r\n\r\n              <PrePayment\r\n                type={\"OUTCOME\"}\r\n                defaultValues={payments}\r\n                ref={paymentRef}\r\n              />\r\n            </Grid>\r\n          </Collapse>\r\n\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              marginTop: 30,\r\n            }}\r\n          >\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={onSubmitTransfer}\r\n            >\r\n              تایید\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n              بازگشت\r\n            </Button>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n    </form>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Grid, TextField, MenuItem, Button, Divider } from \"@material-ui/core\";\r\n\r\nconst Filter = ({ onFilter, category }) => {\r\n  const [filterData, setFilterData] = useState({ category: \"\" });\r\n\r\n  const handleChange = (event) => {\r\n    // setFilterData(event.target.value);\r\n    setFilterData({ ...filterData, category: event.target.value });\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (typeof onFilter === \"function\") {\r\n      onFilter(filterData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3} alignItems=\"center\" style={{ padding: 10 }}>\r\n      <Grid item lg={3} xs={12}>\r\n        <TextField\r\n          select\r\n          label=\"دسته بندی\"\r\n          onChange={handleChange}\r\n          value={filterData.category}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        >\r\n          {category.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Grid>\r\n      <Grid item lg={3} xs={12}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n          تایید\r\n        </Button>\r\n      </Grid>\r\n      <Divider style={{ width: \"100%\" }} />\r\n    </Grid>\r\n  );\r\n};\r\nexport default Filter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { convertParamsToQueryString, hasPermission } from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport AmountBrif from \"./amountBrif\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\nimport Transform from \"./transfer\";\r\nimport unitAction from \"../../redux/actions/unitAction\";\r\nimport FilterComponent from \"./filter\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    label: \"نام کالا\",\r\n  },\r\n  {\r\n    id: \"category\",\r\n    label: \"دسته بندی\",\r\n  },\r\n\r\n  {\r\n    id: \"DefaultUnit\",\r\n    label: \"واحد پیش فرض\",\r\n  },\r\n  { id: \"unit\", label: \" واحد شمارشی\" },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function MainList() {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"name\");\r\n  const [search, setSearch] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(10000);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [category, setCategory] = useState([]);\r\n  const [filter, setFilter] = useState();\r\n  const history = useHistory();\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onAdd = () => {\r\n    history.push(\"/app/product-detail\");\r\n  };\r\n\r\n  const getProductRequest = useApi({\r\n    method: \"get\",\r\n    url: decodeURIComponent(\r\n      `product?${convertParamsToQueryString({\r\n        page,\r\n        order,\r\n        orderBy,\r\n        pageSize,\r\n        search,\r\n        filter,\r\n      })}`,\r\n    ),\r\n  });\r\n\r\n  const getCategoryRequest = useApi({\r\n    method: \"get\",\r\n    url: `product/category`,\r\n  });\r\n\r\n  const deleteUseRequest = useApi({\r\n    method: \"delete\",\r\n    url: `product`,\r\n  });\r\n\r\n  const transferRequest = useApi({\r\n    method: \"post\",\r\n    url: `depot/transfer`,\r\n  });\r\n\r\n  const addDriverRequest = useApi({\r\n    method: \"post\",\r\n    url: `driver`,\r\n  });\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onSubmitTransfer = async (data) => {\r\n    if (data.isAddDriver) {\r\n      await addDriverRequest.execute(data.newDriver);\r\n      await transferRequest.execute(data);\r\n    } else {\r\n      await transferRequest.execute(data);\r\n    }\r\n\r\n    // const transferPayments = {\r\n    //   ...paymentRef.current,\r\n    //   invoiceId: response.id,\r\n    //   date: selectedDate._d,\r\n    //   personId: selectedPerson ? selectedPerson.id : 1,\r\n    //   personType: \"CUSTOMER\",\r\n    //   type: invoiceType === \"SELL\" ? \"INCOME\" : \"OUTCOME\",\r\n    //   description: `بابت فاکتور به شماره  ${response.id}`,\r\n    // };\r\n    // addPaymentRequest.execute(transferPayments);\r\n\r\n    await getData();\r\n    // DialogActions.hide({});\r\n  };\r\n\r\n  const handleAction = (row, type) => {\r\n    const { id } = row;\r\n    const types = {\r\n      edit: () => {\r\n        history.push(`/app/product-detail?id=${id}`);\r\n      },\r\n      delete: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            await deleteUseRequest.execute(null, id);\r\n            setList(list.filter((item) => item.id !== id));\r\n            DialogActions.hide({ name: \"delete\" });\r\n          },\r\n          name: \"delete\",\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n      amount: () => {\r\n        DialogActions.show({\r\n          title: \"موجودی در انبار ها\",\r\n          component: (\r\n            <AmountBrif\r\n              onSubmit={() => {\r\n                DialogActions.hide({ name: \"amount\" });\r\n              }}\r\n              data={row.stocks}\r\n            />\r\n          ),\r\n          name: \"amount\",\r\n          size: \"4\",\r\n          confirm: false,\r\n          disableCloseButton: true,\r\n        });\r\n      },\r\n      transaction: () => {},\r\n\r\n      transfer: () => {\r\n        history.push(\r\n          `/app/product-transfer?id=${id}&productName=${row.name}&unitBaseId=${row.unitBaseId}`,\r\n        );\r\n\r\n        //   let units;\r\n        //   const allUnits = unitAction\r\n        //     .getProductUnit()\r\n        //     .filter((item) => item.value === row.unitBaseId)[0];\r\n        //   if (allUnits) {\r\n        //     units = allUnits.children;\r\n        //   }\r\n        //   DialogActions.show({\r\n        //     title: \"انتقال بین انبار ها\",\r\n        //     component: (\r\n        //       <Transform\r\n        //         onDismiss={() => {\r\n        //           DialogActions.hide();\r\n        //         }}\r\n        //         onSubmit={onSubmitTransfer}\r\n        //         productId={row.id}\r\n        //         units={units}\r\n        //       />\r\n        //     ),\r\n        //     size: \"4\",\r\n        //     confirm: false,\r\n        //     disableCloseButton: true,\r\n        //   });\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const onFilter = (data) => {\r\n    setFilter(`{category:${data.category}}`);\r\n  };\r\n\r\n  const getData = async () => {\r\n    const productList = await getProductRequest.execute();\r\n    setList(productList.data);\r\n    setTotal(productList.total);\r\n  };\r\n\r\n  const getCategory = async () => {\r\n    const categoryData = await getCategoryRequest.execute();\r\n    setCategory(categoryData.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    getCategory();\r\n  }, [page, order, pageSize, search, filter]);\r\n\r\n  useEffect(() => {\r\n    getCategory();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.PRODUCT_SHOW) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getProductRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title=\"لیست کالا ها\"\r\n                    onAdd={\r\n                      hasPermission(Constant.ALL_PERMISSIONS.PRODUCT_EDIT) &&\r\n                      onAdd\r\n                    }\r\n                    FilterComponent={\r\n                      <FilterComponent\r\n                        onFilter={onFilter}\r\n                        category={category}\r\n                      />\r\n                    }\r\n                    handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                  />\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                            >\r\n                              <TableCell padding=\"none\">{row.name}</TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.categories.join(\",\")}\r\n                              </TableCell>\r\n\r\n                              <TableCell padding=\"none\">\r\n                                {row.defaultUnit}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.unitBase}\r\n                              </TableCell>\r\n\r\n                              <TableCell padding=\"none\">\r\n                                <TableRowMenu\r\n                                  options={[\r\n                                    { id: \"amount\", title: \"موجودی ها\" },\r\n                                    // { id: \"transaction\", title: \"تراکنش ها\" },\r\n                                    {\r\n                                      id: \"transfer\",\r\n                                      title: \"انتقال بین انبار\",\r\n                                    },\r\n                                    {\r\n                                      id: \"edit\",\r\n                                      title: \"ویرایش\",\r\n                                      hidden: !hasPermission(\r\n                                        Constant.ALL_PERMISSIONS.PRODUCT_EDIT,\r\n                                      ),\r\n                                    },\r\n                                    {\r\n                                      id: \"delete\",\r\n                                      title: \"حذف\",\r\n                                      hidden: !hasPermission(\r\n                                        Constant.ALL_PERMISSIONS.PRODUCT_DELETE,\r\n                                      ),\r\n                                    },\r\n                                  ]}\r\n                                  hadleAction={(type) =>\r\n                                    handleAction(row, type)\r\n                                  }\r\n                                />\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getProductRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  {/* <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  /> */}\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Grid, MenuItem } from \"@material-ui/core\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport Constant from \"../../helpers/constant\";\r\n\r\nconst Account = ({ onSubmit, onDismiss, defaultValues, units }) => {\r\n  const [depotPicker, setDepotPicker] = useState([]);\r\n  const [seletedUnit, setSelectedUnit] = useState(\r\n    defaultValues ? defaultValues.unit.value : units[0].value,\r\n  );\r\n  const [seletedDepot, setSelectedDepot] = useState(1);\r\n  const [showPerUnit, setShowPerUnit] = useState(\r\n    defaultValues ? !!defaultValues.perUnit : false,\r\n  );\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n\r\n  const getDepotRequest = useApi({\r\n    method: \"get\",\r\n    url: `depot/picker`,\r\n  });\r\n\r\n  const getDepotPicker = async () => {\r\n    const result = await getDepotRequest.execute();\r\n    setDepotPicker(result.data);\r\n  };\r\n\r\n  //   const onChange = (e) => {\r\n  //     setValues({ ...values, [e.target.name]: e.target.value });\r\n  //   };\r\n\r\n  const onChangeDepot = (e) => {\r\n    setSelectedDepot(e.target.value);\r\n  };\r\n\r\n  const onChangeUnit = (e) => {\r\n    setSelectedUnit(e.target.value);\r\n\r\n    const { value } = e.target;\r\n\r\n    const targetUnit = units.filter((item) => item.value === value)[0];\r\n    setShowPerUnit(targetUnit.perUnit);\r\n\r\n    setSelectedUnit(e.target.value);\r\n  };\r\n\r\n  const getSelectedDepot = () => {\r\n    return depotPicker.find((item) => item.value === seletedDepot);\r\n  };\r\n\r\n  const getSelectedUnit = () => {\r\n    return units.find((item) => item.value === seletedUnit);\r\n  };\r\n\r\n  const onDone = (data) => {\r\n    const newId = uuid();\r\n\r\n    const value = {\r\n      ...data,\r\n      unit: getSelectedUnit(),\r\n      depot: getSelectedDepot(),\r\n      id: defaultValues ? defaultValues.id : newId,\r\n      isUpdate: !!defaultValues,\r\n    };\r\n    onSubmit(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDepotPicker();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(defaultValues);\r\n  }, [reset, defaultValues]);\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                variant=\"outlined\"\r\n                label=\"موجودی اول دوره\"\r\n                name={name}\r\n                onChange={onChange}\r\n                value={value}\r\n                error={!!errors.stock}\r\n                helperText={errors.stock ? errors.stock.message : \"\"}\r\n                fullWidth\r\n                size=\"small\"\r\n                type=\"number\"\r\n              />\r\n            );\r\n          }}\r\n          rules={{\r\n            required: Constant.VALIDATION.REQUIRED,\r\n            min: {\r\n              value: 0,\r\n              message: Constant.VALIDATION.POSITIVE_NUMBER,\r\n            },\r\n          }}\r\n          name=\"stock\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          select\r\n          label=\"واحد\"\r\n          value={seletedUnit}\r\n          onChange={onChangeUnit}\r\n          variant=\"outlined\"\r\n          name=\"unit\"\r\n          fullWidth\r\n          size=\"small\"\r\n        >\r\n          {units.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Grid>\r\n      {showPerUnit && (\r\n        <Grid item xs={12}>\r\n          <Controller\r\n            control={control}\r\n            render={({ onChange, value, name }) => {\r\n              return (\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"مقدار در واحد\"\r\n                  name={name}\r\n                  onChange={onChange}\r\n                  value={value}\r\n                  error={!!errors.perUnit}\r\n                  helperText={errors.perUnit ? errors.perUnit.message : \"\"}\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  type=\"number\"\r\n                />\r\n              );\r\n            }}\r\n            rules={{\r\n              required: Constant.VALIDATION.REQUIRED,\r\n              min: {\r\n                value: 0,\r\n                message: Constant.VALIDATION.POSITIVE_NUMBER,\r\n              },\r\n            }}\r\n            name=\"perUnit\"\r\n          />\r\n        </Grid>\r\n      )}\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          select\r\n          label=\"انبار\"\r\n          value={seletedDepot}\r\n          onChange={onChangeDepot}\r\n          variant=\"outlined\"\r\n          name=\"depot\"\r\n          fullWidth\r\n          size=\"small\"\r\n        >\r\n          {depotPicker.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Grid>\r\n\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          onClick={handleSubmit(onDone)}\r\n        >\r\n          تایید\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onDismiss}>\r\n          انصراف\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  IconButton,\r\n  Select,\r\n  FormControl,\r\n  InputLabel,\r\n} from \"@material-ui/core\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport { DeleteIcon, EditIcon } from \"../../components/icons\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { getQueryString, persianNumber } from \"../../helpers/utils\";\r\nimport CircularProgress from \"../../components/CircularProgress\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport Amount from \"./amount\";\r\nimport unitAction from \"../../redux/actions/unitAction\";\r\nimport { isEmpty } from \"lodash\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n  deleteIcon: {\r\n    color: theme.palette.error.main,\r\n  },\r\n  formControl: {\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"amount\",\r\n    label: \"موجودی\",\r\n  },\r\n  { id: \"unit\", label: \"واحد\" },\r\n  {\r\n    id: \"depot\",\r\n    label: \"انبار\",\r\n  },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function MainDetail() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const id = getQueryString(\"id\");\r\n  const [detail, setDetail] = useState({});\r\n  const [amounts, setAmounts] = useState([]);\r\n  const [category, setCategory] = useState([]);\r\n  const [selectedUnit, setSelectedUnit] = useState(\"MASS\");\r\n  const [selectedCategory, setSelectedCategory] = useState([1]);\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n  const units = unitAction.getProductUnit();\r\n\r\n  const addProductRequest = useApi({\r\n    method: \"post\",\r\n    url: `product`,\r\n  });\r\n  const editProductRequest = useApi({\r\n    method: \"put\",\r\n    url: `product/${id}`,\r\n  });\r\n  const detailProductRequest = useApi({\r\n    method: \"get\",\r\n    url: `product/${id}`,\r\n  });\r\n  const getProductCategoryRequest = useApi({\r\n    method: \"get\",\r\n    url: `product/category`,\r\n  });\r\n\r\n  const onSubmitAmount = (data) => {\r\n    if (data.isUpdate) {\r\n      const index = amounts.findIndex((item) => item.id === data.id);\r\n      const amountTmp = [...amounts];\r\n      amountTmp[index] = data;\r\n      setAmounts(amountTmp);\r\n    } else {\r\n      setAmounts([...amounts, data]);\r\n    }\r\n    onDismissAmount();\r\n  };\r\n\r\n  const onDismissAmount = () => {\r\n    DialogActions.hide({ name: \"amount\" });\r\n  };\r\n\r\n  const onShowDialog = (data) => {\r\n    let units;\r\n    const allUnits = unitAction\r\n      .getProductUnit()\r\n      .filter((item) => item.value === selectedUnit)[0];\r\n    if (allUnits) {\r\n      units = allUnits.children;\r\n    }\r\n    DialogActions.show({\r\n      title: \"موجودی اول دوره\",\r\n      component: (\r\n        <Amount\r\n          onSubmit={onSubmitAmount}\r\n          onDismiss={onDismissAmount}\r\n          defaultValues={data}\r\n          units={units}\r\n        />\r\n      ),\r\n      name: \"amount\",\r\n      size: \"4\",\r\n      confirm: false,\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  const onAddAmount = () => {\r\n    onShowDialog();\r\n  };\r\n\r\n  const filterAmounts = (amounts) => {\r\n    const filteredAmount = [];\r\n    amounts.map((item) => {\r\n      const newObject = {\r\n        stock: item.stock,\r\n        depotId: item.depot.value,\r\n        unit: item.unit.value,\r\n        perunit: item.perUnit,\r\n      };\r\n      filteredAmount.push(newObject);\r\n    });\r\n    return filteredAmount;\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    const result = {\r\n      ...data,\r\n      categories: selectedCategory,\r\n      unitBase: selectedUnit,\r\n      stocks: id ? amounts : filterAmounts(amounts),\r\n    };\r\n    if (id) {\r\n      return await editProductRequest.execute(result);\r\n    }\r\n    await addProductRequest.execute(result);\r\n    setTimeout(() => {\r\n      onReject();\r\n    }, 1000);\r\n  };\r\n\r\n  const onReject = () => {\r\n    history.push(\"/app/product-list\");\r\n  };\r\n\r\n  const getDetail = async () => {\r\n    const detail = await detailProductRequest.execute();\r\n    setDetail(detail.data);\r\n    setSelectedCategory(detail.data.categories);\r\n    setSelectedUnit(detail.data.unitBase);\r\n    setAmounts(detail.data.stocks);\r\n  };\r\n\r\n  const handleEditAmount = (data) => {\r\n    onShowDialog(data);\r\n  };\r\n\r\n  const handleDeleteAmount = (id) => {\r\n    DialogActions.show({\r\n      confirm: true,\r\n      title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n      onAction: () => {\r\n        setAmounts(amounts.filter((item) => item.id !== id));\r\n        DialogActions.hide({ name: \"delete\" });\r\n      },\r\n      name: \"delete\",\r\n      size: \"6\",\r\n      disableCloseButton: false,\r\n    });\r\n  };\r\n\r\n  const getProductCategory = async () => {\r\n    const result = await getProductCategoryRequest.execute();\r\n    setCategory(result.data);\r\n  };\r\n\r\n  const onChangeUnit = (e) => {\r\n    setSelectedUnit(e.target.value);\r\n  };\r\n\r\n  const onChangeCategory = (e) => {\r\n    setSelectedCategory(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProductCategory();\r\n    if (id) {\r\n      getDetail();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(detail);\r\n  }, [reset, detail]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      {!detailProductRequest.pending ? (\r\n        <Grid item lg={6} sm={12} className={classes.root}>\r\n          <Paper className={classes.paper}>\r\n            <Typography\r\n              className={classes.title}\r\n              variant=\"h6\"\r\n              id=\"tableTitle\"\r\n              component=\"div\"\r\n            >\r\n              {id ? \"ویرایش کالا\" : \"افزودن کالا\"}\r\n            </Typography>\r\n\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Fragment>\r\n                <Grid item lg={6} xs={12} className={classes.datePicker}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"نام \"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.name}\r\n                          helperText={errors.name ? errors.name.message : \"\"}\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                    name=\"name\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <TextField\r\n                    disabled={id}\r\n                    select\r\n                    label=\"واحد شمارش\"\r\n                    value={selectedUnit}\r\n                    onChange={onChangeUnit}\r\n                    variant=\"outlined\"\r\n                    name=\"unitBase\"\r\n                    fullWidth\r\n                    size=\"small\"\r\n                  >\r\n                    {units.map((option) => (\r\n                      <MenuItem key={option.value} value={option.value}>\r\n                        {option.label}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </TextField>\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <FormControl\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                    className={classes.formControl}\r\n                  >\r\n                    <InputLabel htmlFor=\"outlined-age-native-simple\">\r\n                      دسته بندی\r\n                    </InputLabel>\r\n                    <Select\r\n                      label=\"  دسته بندی\"\r\n                      value={selectedCategory}\r\n                      onChange={onChangeCategory}\r\n                    >\r\n                      {category.map((option) => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Button\r\n                    disabled={isEmpty(selectedUnit)}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={onAddAmount}\r\n                  >\r\n                    افزودن موجودی اول دوره\r\n                  </Button>\r\n                </Grid>\r\n                {!!amounts.length && (\r\n                  <Grid item xs={12}>\r\n                    <Paper>\r\n                      <TableContainer style={{ padding: \"0 10px\" }}>\r\n                        <Table\r\n                          className={classes.table}\r\n                          size={\"medium\"}\r\n                          style={{ paddingRight: 10 }}\r\n                        >\r\n                          <TableHeader headCells={headCells} />\r\n\r\n                          <TableBody>\r\n                            {amounts.map((row) => {\r\n                              return (\r\n                                <TableRow\r\n                                  hover\r\n                                  tabIndex={-1}\r\n                                  key={row.id}\r\n                                  style={{ paddingRight: 10 }}\r\n                                >\r\n                                  <TableCell padding=\"none\">\r\n                                    {row.perUnit\r\n                                      ? `${persianNumber(\r\n                                          row.stock,\r\n                                        )}*${persianNumber(row.perUnit)}`\r\n                                      : persianNumber(row.stock)}\r\n                                  </TableCell>\r\n\r\n                                  <TableCell padding=\"none\">\r\n                                    {row.unit.label}\r\n                                  </TableCell>\r\n\r\n                                  <TableCell padding=\"none\">\r\n                                    {row.depot.label}\r\n                                  </TableCell>\r\n                                  <TableCell\r\n                                    padding=\"none\"\r\n                                    style={{ textAlign: \"left\" }}\r\n                                  >\r\n                                    <IconButton\r\n                                      onClick={() => handleEditAmount(row)}\r\n                                    >\r\n                                      <EditIcon />\r\n                                    </IconButton>\r\n\r\n                                    <IconButton\r\n                                      onClick={() => handleDeleteAmount(row.id)}\r\n                                    >\r\n                                      <DeleteIcon />\r\n                                    </IconButton>\r\n                                  </TableCell>\r\n                                </TableRow>\r\n                              );\r\n                            })}\r\n                          </TableBody>\r\n                        </Table>\r\n                      </TableContainer>\r\n                    </Paper>\r\n                  </Grid>\r\n                )}\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                    تایید\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={onReject}\r\n                  >\r\n                    بازگشت\r\n                  </Button>\r\n                </Grid>\r\n              </Fragment>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      ) : (\r\n        <CircularProgress />\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n}));\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  Grid,\r\n  CircularProgress,\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { persianNumber } from \"../../helpers/utils\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    label: \"نام کالا\",\r\n  },\r\n  { id: \"amounts\", label: \"موجودی ها\" },\r\n];\r\n\r\nexport default function MainDetail({ depotId, onSubmit }) {\r\n  const [data, setData] = useState([]);\r\n  const getAmountRequest = useApi({\r\n    method: \"get\",\r\n    url: `product/depot/${depotId}`,\r\n  });\r\n\r\n  const getAmount = async () => {\r\n    const result = await getAmountRequest.execute();\r\n    setData(result.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAmount();\r\n  }, []);\r\n  return getAmountRequest.pending ? (\r\n    <CircularProgress style={{ position: \"absolute\", top: 20, left: 20 }} />\r\n  ) : (\r\n    <Grid container spacing={3} alignItems=\"center\">\r\n      {!!data.length && (\r\n        <Grid item xs={12}>\r\n          <TableContainer style={{ padding: \"0 10px\" }}>\r\n            <Table size={\"medium\"} style={{ paddingRight: 10 }}>\r\n              <TableHeader headCells={headCells} />\r\n\r\n              <TableBody>\r\n                {data.map((row) => {\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      tabIndex={-1}\r\n                      key={row.id}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableCell padding=\"none\">{row.name}</TableCell>\r\n                      <TableCell padding=\"none\">\r\n                        <ul>\r\n                          {row.stocks.map((item) => {\r\n                            return (\r\n                              <li>\r\n                                <span style={{ margin: \"0 -5px 0 5px\" }}>\r\n                                  {persianNumber(item.stock)}\r\n                                </span>\r\n\r\n                                <span>{item.unit}</span>\r\n                              </li>\r\n                            );\r\n                          })}\r\n                        </ul>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Grid>\r\n      )}\r\n      <Grid item xs={12}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n          بازگشت\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { convertParamsToQueryString, hasPermission } from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\nimport AmountBrif from \"./amountBrif\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    label: \"نام انبار\",\r\n  },\r\n  {\r\n    id: \"category\",\r\n    label: \"دسته بندی انبار\",\r\n  },\r\n  { id: \"phone\", label: \"تلفن\" },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nconst MainList = () => {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"name\");\r\n  const [page, setPage] = useState(0);\r\n  const [search, setSearch] = useState();\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const history = useHistory();\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onAdd = () => {\r\n    history.push(\"/app/depot-detail\");\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const getDepotRequest = useApi({\r\n    method: \"get\",\r\n    url: `depot?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n    })}`,\r\n  });\r\n\r\n  const deleteUseRequest = useApi({\r\n    method: \"delete\",\r\n    url: `depot`,\r\n  });\r\n\r\n  const handleAction = (row, type) => {\r\n    const types = {\r\n      amount: () => {\r\n        DialogActions.show({\r\n          title: \"موجودی در انبار ها\",\r\n          component: (\r\n            <AmountBrif\r\n              onSubmit={() => {\r\n                DialogActions.hide({ name: \"amount\" });\r\n              }}\r\n              depotId={row.id}\r\n            />\r\n          ),\r\n          name: \"amount\",\r\n          size: \"4\",\r\n          confirm: false,\r\n          disableCloseButton: true,\r\n        });\r\n      },\r\n\r\n      edit: () => {\r\n        history.push(`/app/depot-detail?id=${row.id}`);\r\n      },\r\n      delete: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            await deleteUseRequest.execute(null, row.id);\r\n            setList(list.filter((item) => item.id !== row.id));\r\n            DialogActions.hide({ name: \"delete\" });\r\n          },\r\n          name: \"delete\",\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const getData = async () => {\r\n    const depotList = await getDepotRequest.execute();\r\n    setList(depotList.data);\r\n    setTotal(depotList.total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, pageSize, search]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.DEPOT_SHOW) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getDepotRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title=\"لیست انبار ها\"\r\n                    onAdd={\r\n                      hasPermission(Constant.ALL_PERMISSIONS.DEPOT_EDIT) &&\r\n                      onAdd\r\n                    }\r\n                    handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                  />\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                            >\r\n                              <TableCell padding=\"none\">{row.name}</TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.depotCategory}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">{row.phone}</TableCell>\r\n\r\n                              <TableCell padding=\"none\">\r\n                                <TableRowMenu\r\n                                  options={[\r\n                                    { id: \"amount\", title: \"موجودی\" },\r\n                                    {\r\n                                      id: \"edit\",\r\n                                      title: \"ویرایش\",\r\n                                      hidden: !hasPermission(\r\n                                        Constant.ALL_PERMISSIONS.DEPOT_EDIT,\r\n                                      ),\r\n                                    },\r\n                                    {\r\n                                      id: \"delete\",\r\n                                      title: \"حذف\",\r\n                                      hidden: !hasPermission(\r\n                                        Constant.ALL_PERMISSIONS.DEPOT_DELETE,\r\n                                      ),\r\n                                    },\r\n                                  ]}\r\n                                  hadleAction={(type) =>\r\n                                    handleAction(row, type)\r\n                                  }\r\n                                />\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getDepotRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default MainList;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { getQueryString } from \"../../helpers/utils\";\r\nimport CircularProgress from \"../../components/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n}));\r\n\r\nexport default function MainDetail() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const id = getQueryString(\"id\");\r\n  const [detail, setDetail] = useState({});\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n  const [category, setCategory] = useState([]);\r\n  const [depotCategory, setDepotCategory] = useState(1);\r\n\r\n  const addDepotRequest = useApi({\r\n    method: \"post\",\r\n    url: `depot`,\r\n  });\r\n  const editDepotRequest = useApi({\r\n    method: \"put\",\r\n    url: `depot/${id}`,\r\n  });\r\n  const detailDepotRequest = useApi({\r\n    method: \"get\",\r\n    url: `depot/${id}`,\r\n  });\r\n  const depotCategoryRequest = useApi({\r\n    method: \"get\",\r\n    url: `depot/category`,\r\n  });\r\n\r\n  const onSubmit = async (data) => {\r\n    const value = { ...data, depotCategoryId: depotCategory };\r\n\r\n    if (id) {\r\n      return await editDepotRequest.execute(value);\r\n    }\r\n    await addDepotRequest.execute(value);\r\n    setTimeout(() => {\r\n      onReject();\r\n    }, 1000);\r\n  };\r\n\r\n  const onReject = () => {\r\n    history.push(\"/app/depot-list\");\r\n  };\r\n\r\n  const getDetail = async () => {\r\n    const detail = await detailDepotRequest.execute();\r\n    setDetail(detail.data);\r\n    setDepotCategory(detail.data.depotCategory);\r\n  };\r\n\r\n  const getDepotCategory = async () => {\r\n    const detail = await depotCategoryRequest.execute();\r\n    setCategory(detail.data);\r\n  };\r\n\r\n  const onChangeCategory = (e) => {\r\n    setDepotCategory(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDepotCategory();\r\n    if (id) {\r\n      getDetail();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(detail);\r\n  }, [reset, detail]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      {!detailDepotRequest.pending ? (\r\n        <Grid item lg={6} sm={12} className={classes.root}>\r\n          <Paper className={classes.paper}>\r\n            <Typography\r\n              className={classes.title}\r\n              variant=\"h6\"\r\n              id=\"tableTitle\"\r\n              component=\"div\"\r\n            >\r\n              {id ? \"ویرایش انبار\" : \"افزودن انبار\"}\r\n            </Typography>\r\n\r\n            <Grid container spacing={3}>\r\n              <Fragment>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"نام\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.name}\r\n                          helperText={errors.name ? errors.name.message : \"\"}\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                    name=\"name\"\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item lg={6} xs={12}>\r\n                  {!!category.length && depotCategory && (\r\n                    <TextField\r\n                      select\r\n                      label=\"دسته بندی\"\r\n                      value={depotCategory}\r\n                      onChange={onChangeCategory}\r\n                      variant=\"outlined\"\r\n                      error={!!errors.depotCategory}\r\n                      helperText={\r\n                        errors.depotCategory ? errors.depotCategory.message : \"\"\r\n                      }\r\n                      fullWidth\r\n                      size=\"small\"\r\n                    >\r\n                      {category.map((option) => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </TextField>\r\n                  )}\r\n                </Grid>\r\n\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"تلفن\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.phone}\r\n                          helperText={errors.phone ? errors.phone.message : \"\"}\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    name=\"phone\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"آدرس\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.address}\r\n                          helperText={\r\n                            errors.address ? errors.address.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    name=\"address\"\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                    تایید\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={onReject}\r\n                  >\r\n                    بازگشت\r\n                  </Button>\r\n                </Grid>\r\n              </Fragment>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      ) : (\r\n        <CircularProgress />\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n}));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Grid, TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\n\r\nexport default function MainDetail({ source, onSubmit, onDismiss }) {\r\n  const [cashes, setCashes] = useState([]);\r\n  const [selectedDestination, setSelectedDestination] = useState(5);\r\n  const [amount, setAmount] = useState();\r\n\r\n  const getCashRequest = useApi({\r\n    method: \"get\",\r\n    url: `cashdesk/picker`,\r\n  });\r\n\r\n  const onDone = () => {\r\n    onSubmit({\r\n      sourceId: source,\r\n      destinationId: selectedDestination,\r\n      amount,\r\n    });\r\n  };\r\n\r\n  const onChange = (e, type) => {\r\n    if (type === \"destination\") {\r\n      setSelectedDestination(e.target.value);\r\n    } else {\r\n      setAmount(e.target.value);\r\n    }\r\n  };\r\n\r\n  const getCashes = async () => {\r\n    const result = await getCashRequest.execute();\r\n    const filterdCashes = result.data.filter((item) => item.value !== source);\r\n    setCashes(filterdCashes);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCashes();\r\n  }, []);\r\n\r\n  return (\r\n    <form>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            select\r\n            label=\"صندوق مقصد\"\r\n            onChange={(e) => onChange(e, \"destination\")}\r\n            value={selectedDestination}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            size=\"small\"\r\n            name=\"cash\"\r\n          >\r\n            {cashes.map((option) => (\r\n              <MenuItem key={option.value} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            type=\"number\"\r\n            variant=\"outlined\"\r\n            label=\"مبلغ\"\r\n            name={\"amount\"}\r\n            onChange={(e) => onChange(e, \"amount\")}\r\n            value={amount}\r\n            fullWidth\r\n            size=\"small\"\r\n          />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n        >\r\n          <Button variant=\"contained\" color=\"primary\" onClick={onDone}>\r\n            تایید\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n            بازگشت\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport {\r\n  convertParamsToQueryString,\r\n  hasPermission,\r\n  persianNumber,\r\n} from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport Transfer from \"./transfer\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    label: \"نام صندوق\",\r\n  },\r\n  {\r\n    id: \"type\",\r\n    label: \"نوع\",\r\n  },\r\n  {\r\n    id: \"logo\",\r\n    label: \"بانک\",\r\n  },\r\n  { id: \"amount\", label: \"موجودی\" },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nconst MainList = () => {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"name\");\r\n  const [search, setSearch] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const history = useHistory();\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onAdd = () => {\r\n    history.push(\"/app/cash-detail\");\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const getCashRequest = useApi({\r\n    method: \"get\",\r\n    url: `cashdesk?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n    })}`,\r\n  });\r\n\r\n  const deleteCashRequest = useApi({\r\n    method: \"delete\",\r\n    url: `cashdesk`,\r\n  });\r\n\r\n  const transferCashDesk = useApi({\r\n    method: \"post\",\r\n    url: \"cashdesk/transfer\",\r\n  });\r\n\r\n  const onDismissTransfer = () => {\r\n    DialogActions.hide({ name: \"transfer\" });\r\n  };\r\n\r\n  const onSubmitTransfer = async (data) => {\r\n    await transferCashDesk.execute(data);\r\n    getData();\r\n    onDismissTransfer();\r\n  };\r\n\r\n  const handleAction = (row, type) => {\r\n    const types = {\r\n      transaction: () => {\r\n        history.push(`/app/cash-transaction?cashId=${row.id}`);\r\n      },\r\n      edit: () => {\r\n        history.push(`/app/cash-detail?id=${row.id}`);\r\n      },\r\n      delete: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            await deleteCashRequest.execute(null, row.id);\r\n            setList(list.filter((item) => item.id !== row.id));\r\n            DialogActions.hide({ name: \"delete\" });\r\n          },\r\n          name: \"delete\",\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n      transfer: () => {\r\n        DialogActions.show({\r\n          title: \"انتقال بین صندوق ها\",\r\n          component: (\r\n            <Transfer\r\n              onSubmit={onSubmitTransfer}\r\n              onDismiss={onDismissTransfer}\r\n              source={row.id}\r\n            />\r\n          ),\r\n          name: \"transfer\",\r\n          size: \"4\",\r\n          confirm: false,\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const getData = async () => {\r\n    const cashList = await getCashRequest.execute();\r\n    setList(cashList.data);\r\n    setTotal(cashList.total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.CASH_DESK_LIST) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getCashRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title=\"لیست صندوق ها\"\r\n                    onAdd={\r\n                      hasPermission(Constant.ALL_PERMISSIONS.CASH_DESK_EDIT) &&\r\n                      onAdd\r\n                    }\r\n                    handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                  />\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                            >\r\n                              <TableCell padding=\"none\">{row.name}</TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.type === \"CASH\" ? \"نقدی\" : \"بانکی\"}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.bank && (\r\n                                  <img\r\n                                    style={{ width: 40, height: 40 }}\r\n                                    alt={row.bank.name}\r\n                                    src={`${Constant.API_ADDRESS}/${row.bank.logo}`}\r\n                                  />\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  Number(row.amount).toLocaleString(),\r\n                                )}\r\n                              </TableCell>\r\n\r\n                              <TableCell padding=\"none\">\r\n                                <TableRowMenu\r\n                                  options={[\r\n                                    { id: \"transaction\", title: \"تراکنش\" },\r\n                                    { id: \"transfer\", title: \"انتقال\" },\r\n                                    {\r\n                                      id: \"edit\",\r\n                                      title: \"ویرایش\",\r\n                                      hidden: !hasPermission(\r\n                                        Constant.ALL_PERMISSIONS.CASH_DESK_EDIT,\r\n                                      ),\r\n                                    },\r\n                                    {\r\n                                      id: \"delete\",\r\n                                      title: \"حذف\",\r\n                                      hidden: !hasPermission(\r\n                                        Constant.ALL_PERMISSIONS\r\n                                          .CASH_DESK_DELETE,\r\n                                      ),\r\n                                    },\r\n                                  ]}\r\n                                  hadleAction={(type) =>\r\n                                    handleAction(row, type)\r\n                                  }\r\n                                />\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getCashRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainList;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  RadioGroup,\r\n  Radio,\r\n  FormControlLabel,\r\n} from \"@material-ui/core\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { getQueryString } from \"../../helpers/utils\";\r\nimport CircularProgress from \"../../components/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: 7,\r\n  },\r\n}));\r\n\r\nexport default function MainDetail({ defaultValues }) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const id = getQueryString(\"id\");\r\n  const [detail, setDetail] = useState({});\r\n  const [banks, setBanks] = useState([]);\r\n  const [selectedType, setSelectedType] = React.useState(\"CASH\");\r\n  const [selectedBank, setSelectedBank] = useState(\r\n    defaultValues?.bank.value || 1,\r\n  );\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n\r\n  const addCashRequest = useApi({\r\n    method: \"post\",\r\n    url: `cashdesk`,\r\n  });\r\n  const editCashRequest = useApi({\r\n    method: \"put\",\r\n    url: `cashdesk/${id}`,\r\n  });\r\n  const detailCashRequest = useApi({\r\n    method: \"get\",\r\n    url: `cashdesk/${id}`,\r\n  });\r\n  const getBankRequest = useApi({\r\n    method: \"get\",\r\n    url: `bank`,\r\n  });\r\n\r\n  const handleChangeType = (event) => {\r\n    setSelectedType(event.target.value);\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    if (id) {\r\n      await editCashRequest.execute(data);\r\n    } else {\r\n      await addCashRequest.execute(data);\r\n    }\r\n    setTimeout(() => {\r\n      onReject();\r\n    }, 1000);\r\n  };\r\n\r\n  const onReject = () => {\r\n    history.push(\"/app/cash-list\");\r\n  };\r\n\r\n  const getDetail = async () => {\r\n    const detail = await detailCashRequest.execute();\r\n    setDetail(detail.data);\r\n    setSelectedBank(detail.data.bankId);\r\n    setSelectedType(detail.data.type);\r\n  };\r\n\r\n  const onChangeBank = (e) => {\r\n    setSelectedBank(e.target.value);\r\n  };\r\n\r\n  const getBanks = async () => {\r\n    const result = await getBankRequest.execute();\r\n    setBanks(result.data);\r\n  };\r\n\r\n  const onDone = (data) => {\r\n    const value = {\r\n      ...data,\r\n      type: selectedType,\r\n      isUpdate: !!defaultValues,\r\n    };\r\n    if (selectedType === \"BANK\") {\r\n      value.bankId = selectedBank;\r\n    }\r\n    onSubmit(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      getDetail();\r\n    }\r\n    getBanks();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(detail);\r\n  }, [reset, detail]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onDone)}>\r\n      {!detailCashRequest.pending ? (\r\n        <Grid item lg={6} sm={12} className={classes.root}>\r\n          <Paper className={classes.paper}>\r\n            <Typography\r\n              className={classes.title}\r\n              variant=\"h6\"\r\n              id=\"tableTitle\"\r\n              component=\"div\"\r\n            >\r\n              {id ? \"ویرایش صندوق\" : \"افزودن صندوق\"}\r\n            </Typography>\r\n\r\n            <Grid container spacing={3}>\r\n              <Fragment>\r\n                <Grid item lg={12} xs={12}>\r\n                  <RadioGroup\r\n                    aria-label=\"gender\"\r\n                    name=\"gender1\"\r\n                    value={selectedType}\r\n                    onChange={handleChangeType}\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-around\",\r\n                    }}\r\n                  >\r\n                    <FormControlLabel\r\n                      disabled={!!id}\r\n                      value=\"CASH\"\r\n                      control={<Radio />}\r\n                      label=\"نقدی\"\r\n                    />\r\n                    <FormControlLabel\r\n                      disabled={!!id}\r\n                      value=\"BANK\"\r\n                      control={<Radio />}\r\n                      label=\"بانکی\"\r\n                    />\r\n                  </RadioGroup>\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"نام\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.name}\r\n                          helperText={errors.name ? errors.name.message : \"\"}\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                    name=\"name\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          disabled={!!id}\r\n                          variant=\"outlined\"\r\n                          label=\"موجودی \"\r\n                          type=\"number\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.amount}\r\n                          helperText={\r\n                            errors.amount ? errors.amount.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                    name=\"amount\"\r\n                  />\r\n                </Grid>\r\n                {selectedType === \"BANK\" && (\r\n                  <>\r\n                    <Grid item lg={6} xs={12}>\r\n                      <TextField\r\n                        select\r\n                        label=\"بانک\"\r\n                        onChange={onChangeBank}\r\n                        value={selectedBank}\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        name=\"bank\"\r\n                        SelectProps={{\r\n                          classes: {\r\n                            select: classes.rootSelect,\r\n                          },\r\n                        }}\r\n                      >\r\n                        {banks.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            <img\r\n                              src={`${Constant.API_ADDRESS}/${option.logo}`}\r\n                              alt={option.label}\r\n                              style={{\r\n                                width: 25,\r\n                                height: 25,\r\n                                borderRadius: \"50%\",\r\n                                marginLeft: 10,\r\n                              }}\r\n                            />\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </TextField>\r\n                    </Grid>\r\n                    <Grid item lg={6} xs={12}>\r\n                      <Controller\r\n                        control={control}\r\n                        render={({ onChange, value, name }) => {\r\n                          return (\r\n                            <TextField\r\n                              fullWidth\r\n                              value={value}\r\n                              size=\"small\"\r\n                              name={name}\r\n                              label=\"شماره کارت\"\r\n                              variant=\"outlined\"\r\n                              onChange={onChange}\r\n                              error={!!errors.accountCardNumber}\r\n                              helperText={\r\n                                errors.accountCardNumber\r\n                                  ? errors.accountCardNumber.message\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          );\r\n                        }}\r\n                        rules={{\r\n                          minLength: {\r\n                            value: 16,\r\n                            message: Constant.VALIDATION.CARD_NUMBER,\r\n                          },\r\n                          maxLength: {\r\n                            value: 16,\r\n                            message: Constant.VALIDATION.CARD_NUMBER,\r\n                          },\r\n                        }}\r\n                        name=\"accountCardNumber\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item lg={6} xs={12}>\r\n                      <Controller\r\n                        control={control}\r\n                        render={({ onChange, value, name }) => {\r\n                          return (\r\n                            <TextField\r\n                              fullWidth\r\n                              value={value}\r\n                              size=\"small\"\r\n                              name={name}\r\n                              label=\"شماره حساب\"\r\n                              variant=\"outlined\"\r\n                              onChange={onChange}\r\n                              error={!!errors.accountNumber}\r\n                              helperText={\r\n                                errors.accountNumber\r\n                                  ? errors.accountNumber.message\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          );\r\n                        }}\r\n                        name=\"accountNumber\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item lg={6} xs={12}>\r\n                      <Controller\r\n                        control={control}\r\n                        render={({ onChange, value, name }) => {\r\n                          return (\r\n                            <TextField\r\n                              fullWidth\r\n                              value={value}\r\n                              size=\"small\"\r\n                              name={name}\r\n                              label=\"شماره شبا\"\r\n                              variant=\"outlined\"\r\n                              onChange={onChange}\r\n                              error={!!errors.accountShaba}\r\n                              helperText={\r\n                                errors.accountShaba\r\n                                  ? errors.accountShaba.message\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          );\r\n                        }}\r\n                        name=\"accountShaba\"\r\n                      />\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n                <Grid item xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          multiline\r\n                          variant=\"outlined\"\r\n                          label=\"توضیحات\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.description}\r\n                          helperText={\r\n                            errors.description ? errors.description.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    name=\"description\"\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                    تایید\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={onReject}\r\n                  >\r\n                    بازگشت\r\n                  </Button>\r\n                </Grid>\r\n              </Fragment>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      ) : (\r\n        <CircularProgress />\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  status: {\r\n    color: \"#fff\",\r\n  },\r\n\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Grid, TextField, MenuItem, Button, Divider } from \"@material-ui/core\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\n\r\nconst Filter = ({ onFilter }) => {\r\n  const [filterData, setFilterData] = useState();\r\n  const [category, setCategory] = useState([]);\r\n  const [driverCategory, setDriverCategory] = useState(1);\r\n\r\n  const driverCategoryRequest = useApi({\r\n    method: \"get\",\r\n    url: `driver/category`,\r\n  });\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setFilterData(event.target.value);\r\n  };\r\n\r\n  const getDriverCategory = async () => {\r\n    const detail = await driverCategoryRequest.execute();\r\n    setCategory(detail.data);\r\n  };\r\n\r\n  const onChangeCategory = (e) => {\r\n    setDriverCategory(e.target.value);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (typeof onFilter === \"function\") {\r\n      onFilter(`{name:${filterData},category:${driverCategory} }`);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDriverCategory();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container spacing={3} alignItems=\"center\" style={{ padding: 10 }}>\r\n      <Grid item lg={3} xs={12}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          label=\"نام\"\r\n          onChange={handleChange(\"name\")}\r\n          value={filterData}\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n      </Grid>\r\n      <Grid item lg={3} xs={12}>\r\n        {!!category.length && driverCategory && (\r\n          <TextField\r\n            select\r\n            label=\"دسته بندی\"\r\n            value={driverCategory}\r\n            onChange={onChangeCategory}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            size=\"small\"\r\n          >\r\n            {category.map((option) => (\r\n              <MenuItem key={option.value} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        )}\r\n      </Grid>\r\n\r\n      <Grid item lg={3} xs={12}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n          تایید\r\n        </Button>\r\n      </Grid>\r\n      <Divider style={{ width: \"100%\" }} />\r\n    </Grid>\r\n  );\r\n};\r\nexport default Filter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport {\r\n  convertParamsToQueryString,\r\n  hasPermission,\r\n  persianNumber,\r\n} from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport FilterComponent from \"./filter\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"firstName\",\r\n    label: \"نام\",\r\n  },\r\n  { id: \"lastName\", label: \"نام خانوادگی\" },\r\n  {\r\n    id: \"firstName\",\r\n    label: \"نام\",\r\n  },\r\n  {\r\n    id: \"mobile\",\r\n    label: \"موبایل\",\r\n  },\r\n  { id: \"car\", label: \"خودرو\" },\r\n  { id: \"pelak\", label: \"پلاک\" },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function MainList() {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [search, setSearch] = useState();\r\n  const [filter, setFilter] = useState();\r\n  const [orderBy, setOrderBy] = useState(\"firstName\");\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const history = useHistory();\r\n  const [total, setTotal] = useState(0);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onAdd = () => {\r\n    history.push(\"/app/driver-detail\");\r\n  };\r\n\r\n  const getDriverRequest = useApi({\r\n    method: \"get\",\r\n    url: decodeURIComponent(\r\n      `driver?${convertParamsToQueryString({\r\n        page,\r\n        order,\r\n        orderBy,\r\n        pageSize,\r\n        search,\r\n        filter,\r\n      })}`,\r\n    ),\r\n  });\r\n\r\n  const deleteUseRequest = useApi({\r\n    method: \"delete\",\r\n    url: `driver`,\r\n  });\r\n\r\n  const handleAction = (id, type) => {\r\n    const types = {\r\n      edit: () => {\r\n        history.push(`/app/driver-detail?id=${id}`);\r\n      },\r\n      delete: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            await deleteUseRequest.execute(null, id);\r\n            setList(list.filter((item) => item.id !== id));\r\n            DialogActions.hide({ name: \"delete\" });\r\n          },\r\n          name: \"delete\",\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n      transaction: () => {\r\n        history.push(`/app/person-transaction?id=${id}&type=employee`);\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onFilter = (data) => {\r\n    setFilter(data);\r\n    setPage(0);\r\n  };\r\n\r\n  const getData = async () => {\r\n    const driverList = await getDriverRequest.execute();\r\n    setList(driverList.data);\r\n    setTotal(driverList.total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize, filter]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.DRIVER_SHOW) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getDriverRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title=\"لیست رانندگان\"\r\n                    onAdd={\r\n                      hasPermission(Constant.ALL_PERMISSIONS.DRIVER_EDIT) &&\r\n                      onAdd\r\n                    }\r\n                    FilterComponent={<FilterComponent onFilter={onFilter} />}\r\n                    handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                  />\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                            >\r\n                              <TableCell padding=\"none\">\r\n                                {row.firstName}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.lastName}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.category.name}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(Number(row.mobile))}\r\n                              </TableCell>\r\n\r\n                              <TableCell padding=\"none\">\r\n                                {row.carName}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.carPlaque}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                <TableRowMenu\r\n                                  options={[\r\n                                    { id: \"transaction\", title: \"تراکنش ها\" },\r\n                                    {\r\n                                      id: \"edit\",\r\n                                      title: \"ویرایش\",\r\n                                      hidden: !hasPermission(\r\n                                        Constant.ALL_PERMISSIONS.DRIVER_EDIT,\r\n                                      ),\r\n                                    },\r\n                                    {\r\n                                      id: \"delete\",\r\n                                      title: \"حذف\",\r\n                                      hidden: !hasPermission(\r\n                                        Constant.ALL_PERMISSIONS.DRIVER_DELETE,\r\n                                      ),\r\n                                    },\r\n                                  ]}\r\n                                  hadleAction={(type) =>\r\n                                    handleAction(row.id, type)\r\n                                  }\r\n                                />\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getDriverRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Grid, MenuItem } from \"@material-ui/core\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport styles from \"./style\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nconst Account = ({ onSubmit, onDismiss, defaultValues }) => {\r\n  const [banks, setBanks] = useState([]);\r\n  const [selectedBank, setSelectedBank] = useState(\r\n    defaultValues?.bank.value || 1,\r\n  );\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n  const classes = styles();\r\n\r\n  const getBankRequest = useApi({\r\n    method: \"get\",\r\n    url: `bank`,\r\n  });\r\n\r\n  const getBanks = async () => {\r\n    const result = await getBankRequest.execute();\r\n    setBanks(result.data);\r\n  };\r\n\r\n  const getSelectedBank = () => {\r\n    return banks.find((item) => item.value === selectedBank);\r\n  };\r\n\r\n  const onDone = (data) => {\r\n    const newId = uuid();\r\n    const value = {\r\n      ...data,\r\n      bank: getSelectedBank(),\r\n      id: defaultValues ? defaultValues.id : newId,\r\n      isUpdate: !!defaultValues,\r\n    };\r\n    onSubmit(value);\r\n  };\r\n\r\n  const onChangeBank = (e) => {\r\n    setSelectedBank(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBanks();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(defaultValues);\r\n  }, [reset, defaultValues]);\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          select\r\n          label=\"بانک\"\r\n          onChange={onChangeBank}\r\n          value={selectedBank}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n          name=\"bank\"\r\n          SelectProps={{\r\n            classes: {\r\n              select: classes.rootSelect,\r\n            },\r\n          }}\r\n        >\r\n          {banks.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              <img\r\n                src={`${Constant.API_ADDRESS}/${option.logo}`}\r\n                alt={option.label}\r\n                style={{\r\n                  width: 25,\r\n                  height: 25,\r\n                  borderRadius: \"50%\",\r\n                  marginLeft: 10,\r\n                }}\r\n              />\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                fullWidth\r\n                value={value}\r\n                size=\"small\"\r\n                name={name}\r\n                label=\"شماره کارت\"\r\n                variant=\"outlined\"\r\n                onChange={onChange}\r\n                error={!!errors.accountCardNumber}\r\n                helperText={\r\n                  errors.accountCardNumber\r\n                    ? errors.accountCardNumber.message\r\n                    : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          rules={{\r\n            minLength: {\r\n              value: 16,\r\n              message: Constant.VALIDATION.CARD_NUMBER,\r\n            },\r\n            maxLength: {\r\n              value: 16,\r\n              message: Constant.VALIDATION.CARD_NUMBER,\r\n            },\r\n          }}\r\n          name=\"accountCardNumber\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                fullWidth\r\n                value={value}\r\n                size=\"small\"\r\n                name={name}\r\n                label=\"شماره حساب\"\r\n                variant=\"outlined\"\r\n                onChange={onChange}\r\n                error={!!errors.accountNumber}\r\n                helperText={\r\n                  errors.accountNumber ? errors.accountNumber.message : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          name=\"accountNumber\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                fullWidth\r\n                value={value}\r\n                size=\"small\"\r\n                name={name}\r\n                label=\"شماره شبا\"\r\n                variant=\"outlined\"\r\n                onChange={onChange}\r\n                error={!!errors.accountShaba}\r\n                helperText={\r\n                  errors.accountShaba ? errors.accountShaba.message : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          name=\"accountShaba\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                label=\"توضیحات\"\r\n                multiline\r\n                rows={4}\r\n                variant=\"outlined\"\r\n                name={name}\r\n                onChange={onChange}\r\n                value={value}\r\n                fullWidth\r\n                error={!!errors.description}\r\n                helperText={\r\n                  errors.description ? errors.description.message : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          name=\"description\"\r\n        />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          onClick={handleSubmit(onDone)}\r\n        >\r\n          تایید\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onDismiss}>\r\n          انصراف\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  IconButton,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport { DeleteIcon, EditIcon } from \"../../components/icons\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { getQueryString } from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport Account from \"./account\";\r\nimport CircularProgress from \"../../components/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n}));\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"Name\",\r\n    label: \"نام بانک\",\r\n  },\r\n  { id: \"accountNumber\", label: \"شماره حساب \" },\r\n  {\r\n    id: \"CardNumber\",\r\n    label: \"شماره کارت\",\r\n  },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function MainDetail() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const id = getQueryString(\"id\");\r\n  const [detail, setDetail] = useState({});\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [category, setCategory] = useState([]);\r\n  const [driverCategory, setDriverCategory] = useState(1);\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n\r\n  const addDriverRequest = useApi({\r\n    method: \"post\",\r\n    url: `driver`,\r\n  });\r\n  const editDriverRequest = useApi({\r\n    method: \"put\",\r\n    url: `driver/${id}`,\r\n  });\r\n  const detailDriverRequest = useApi({\r\n    method: \"get\",\r\n    url: `driver/${id}`,\r\n  });\r\n\r\n  const driverCategoryRequest = useApi({\r\n    method: \"get\",\r\n    url: `driver/category`,\r\n  });\r\n\r\n  const deleteAccountRequest = useApi({\r\n    method: \"delete\",\r\n    url: `account`,\r\n  });\r\n\r\n  const onSubmit = async (data) => {\r\n    const newAccounts = [];\r\n    accounts.map((item) => {\r\n      const newData = {\r\n        bankId: item.bank.value || item.bank.id,\r\n        accountCardNumber: item.accountCardNumber,\r\n        accountNumber: item.accountNumber,\r\n        accountShaba: item.accountShaba,\r\n        description: item.description,\r\n        id: item.id.toString().includes(\"-\") ? null : item.id,\r\n      };\r\n      newAccounts.push(newData);\r\n    });\r\n\r\n    const allData = {\r\n      ...data,\r\n      accounts: newAccounts,\r\n      categoryId: driverCategory,\r\n    };\r\n    if (id) {\r\n      return await editDriverRequest.execute(allData);\r\n    }\r\n    await addDriverRequest.execute(allData);\r\n    setTimeout(() => {\r\n      onReject();\r\n    }, 1000);\r\n  };\r\n\r\n  const onReject = () => {\r\n    history.push(\"/app/driver-list\");\r\n  };\r\n\r\n  const getDetail = async () => {\r\n    const detail = await detailDriverRequest.execute();\r\n    setDetail(detail.data);\r\n    setDriverCategory(detail.data.driverCategory);\r\n    setAccounts(detail.data?.accounts || []);\r\n  };\r\n\r\n  const getDriverCategory = async () => {\r\n    const detail = await driverCategoryRequest.execute();\r\n    setCategory(detail.data);\r\n  };\r\n\r\n  const onSubmitAccount = (data) => {\r\n    if (data.isUpdate) {\r\n      const index = accounts.findIndex((item) => item.id === data.id);\r\n      const accounstTmp = [...accounts];\r\n      accounstTmp[index] = data;\r\n      setAccounts(accounstTmp);\r\n    } else {\r\n      setAccounts([...accounts, data]);\r\n    }\r\n    onDismissAccount();\r\n  };\r\n\r\n  const onDismissAccount = () => {\r\n    DialogActions.hide({ name: \"account\" });\r\n  };\r\n\r\n  const onShowDialog = (data) => {\r\n    DialogActions.show({\r\n      title: \" حساب بانکی\",\r\n      component: (\r\n        <Account\r\n          onSubmit={onSubmitAccount}\r\n          onDismiss={onDismissAccount}\r\n          defaultValues={data}\r\n        />\r\n      ),\r\n      name: \"account\",\r\n      size: \"4\",\r\n      confirm: false,\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  const onAddAccount = () => {\r\n    onShowDialog();\r\n  };\r\n\r\n  const handleEditAccount = (data) => {\r\n    onShowDialog(data);\r\n  };\r\n\r\n  const handleDeleteAccount = (row) => {\r\n    DialogActions.show({\r\n      confirm: true,\r\n      title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n      onAction: async () => {\r\n        if (id) {\r\n          await deleteAccountRequest.execute(null, row.id);\r\n        }\r\n        setAccounts(accounts.filter((item) => item.id !== row.id));\r\n        DialogActions.hide({ name: \"delete\" });\r\n      },\r\n      name: \"delete\",\r\n      size: \"6\",\r\n      disableCloseButton: false,\r\n    });\r\n  };\r\n\r\n  const onChangeCategory = (e) => {\r\n    setDriverCategory(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDriverCategory();\r\n    if (id) {\r\n      getDetail();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(detail);\r\n  }, [reset, detail]);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        {!detailDriverRequest.pending ? (\r\n          <Grid item lg={6} sm={12} className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n              <Typography\r\n                className={classes.title}\r\n                variant=\"h6\"\r\n                id=\"tableTitle\"\r\n                component=\"div\"\r\n              >\r\n                {id ? \"ویرایش راننده\" : \"افزودن راننده\"}\r\n              </Typography>\r\n\r\n              <Grid container spacing={3}>\r\n                <Fragment>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"نام\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.firstName}\r\n                            helperText={\r\n                              errors.firstName ? errors.firstName.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                      name=\"firstName\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"نام خانوادگی\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.lastName}\r\n                            helperText={\r\n                              errors.lastName ? errors.lastName.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                      name=\"lastName\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"تلفن\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.phone}\r\n                            helperText={\r\n                              errors.phone ? errors.phone.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"phone\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"موبایل\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.mobile}\r\n                            helperText={\r\n                              errors.mobile ? errors.mobile.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      rules={{\r\n                        minLength: {\r\n                          value: 11,\r\n                          message: Constant.VALIDATION.MOBILE_NUMBER,\r\n                        },\r\n                        maxLength: {\r\n                          value: 11,\r\n                          message: Constant.VALIDATION.MOBILE_NUMBER,\r\n                        },\r\n                      }}\r\n                      name=\"mobile\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            type=\"number\"\r\n                            variant=\"outlined\"\r\n                            label=\"مانده از قبل\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.accountRemaining}\r\n                            helperText={\r\n                              errors.accountRemaining\r\n                                ? errors.accountRemaining.message\r\n                                : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"accountRemaining\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    {!!category.length && driverCategory && (\r\n                      <TextField\r\n                        select\r\n                        label=\"دسته بندی\"\r\n                        value={driverCategory}\r\n                        onChange={onChangeCategory}\r\n                        variant=\"outlined\"\r\n                        error={!!errors.driverCategory}\r\n                        helperText={\r\n                          errors.driverCategory\r\n                            ? errors.driverCategory.message\r\n                            : \"\"\r\n                        }\r\n                        fullWidth\r\n                        size=\"small\"\r\n                      >\r\n                        {category.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </TextField>\r\n                    )}\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"نام خودرو\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.carName}\r\n                            helperText={\r\n                              errors.carName ? errors.carName.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"carName\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"پلاک خودرو\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.carPlaque}\r\n                            helperText={\r\n                              errors.carPlaque ? errors.carPlaque.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"carPlaque\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={onAddAccount}\r\n                    >\r\n                      افزودن حساب بانکی\r\n                    </Button>\r\n                  </Grid>\r\n                  {!!accounts.length && (\r\n                    <Grid item xs={12}>\r\n                      <Paper>\r\n                        <TableContainer style={{ padding: \"0 10px\" }}>\r\n                          <Table\r\n                            className={classes.table}\r\n                            size={\"medium\"}\r\n                            style={{ paddingRight: 10 }}\r\n                          >\r\n                            <TableHeader headCells={headCells} />\r\n\r\n                            <TableBody>\r\n                              {accounts.map((row) => {\r\n                                return (\r\n                                  <TableRow\r\n                                    hover\r\n                                    tabIndex={-1}\r\n                                    key={row.id}\r\n                                    style={{ paddingRight: 10 }}\r\n                                  >\r\n                                    <TableCell padding=\"none\">\r\n                                      <div\r\n                                        style={{\r\n                                          display: \"flex\",\r\n                                          alignItems: \"center\",\r\n                                        }}\r\n                                      >\r\n                                        <img\r\n                                          src={`${Constant.API_ADDRESS}/${row.bank.logo}`}\r\n                                          alt={row.bank.label}\r\n                                          style={{\r\n                                            width: 25,\r\n                                            height: 25,\r\n                                            borderRadius: \"50%\",\r\n                                            marginLeft: 5,\r\n                                          }}\r\n                                        />\r\n                                        {row.bank.name || row.bank.label}\r\n                                      </div>\r\n                                    </TableCell>\r\n                                    <TableCell padding=\"none\">\r\n                                      {row.accountNumber}\r\n                                    </TableCell>\r\n                                    <TableCell padding=\"none\">\r\n                                      {row.accountCardNumber}\r\n                                    </TableCell>\r\n\r\n                                    <TableCell\r\n                                      padding=\"none\"\r\n                                      style={{ textAlign: \"left\" }}\r\n                                    >\r\n                                      <IconButton\r\n                                        onClick={() => handleEditAccount(row)}\r\n                                      >\r\n                                        <EditIcon />\r\n                                      </IconButton>\r\n\r\n                                      <IconButton\r\n                                        onClick={() => handleDeleteAccount(row)}\r\n                                      >\r\n                                        <DeleteIcon />\r\n                                      </IconButton>\r\n                                    </TableCell>\r\n                                  </TableRow>\r\n                                );\r\n                              })}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                      </Paper>\r\n                    </Grid>\r\n                  )}\r\n\r\n                  <Grid item xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"آدرس\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.address}\r\n                            helperText={\r\n                              errors.address ? errors.address.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"address\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            label=\"توضیحات\"\r\n                            multiline\r\n                            rows={4}\r\n                            variant=\"outlined\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            fullWidth\r\n                            error={!!errors.description}\r\n                            helperText={\r\n                              errors.description\r\n                                ? errors.description.message\r\n                                : \"\"\r\n                            }\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"description\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                  >\r\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                      تایید\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      onClick={onReject}\r\n                    >\r\n                      بازگشت\r\n                    </Button>\r\n                  </Grid>\r\n                </Fragment>\r\n              </Grid>\r\n            </Paper>\r\n          </Grid>\r\n        ) : (\r\n          <CircularProgress />\r\n        )}\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n}));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { convertParamsToQueryString } from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\nconst headCells = [\r\n  {\r\n    id: \"username\",\r\n    label: \"نام کاربری\",\r\n  },\r\n  {\r\n    id: \"firstName\",\r\n    label: \"نام\",\r\n  },\r\n  { id: \"lastName\", label: \"نام خانوادگی\" },\r\n  {\r\n    id: \"mobile\",\r\n    label: \"موبایل\",\r\n  },\r\n  { id: \"phone\", label: \"تلفن\" },\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function MainList() {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"username\");\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(5);\r\n  const [list, setList] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const onAdd = () => {\r\n    history.push(\"/app/user-detail\");\r\n  };\r\n\r\n  const getUserRequest = useApi({\r\n    method: \"get\",\r\n    url: `user?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n    })}`,\r\n  });\r\n\r\n  const deleteUseRequest = useApi({\r\n    method: \"delete\",\r\n    url: `user`,\r\n  });\r\n\r\n  const handleAction = (id, type) => {\r\n    const types = {\r\n      edit: () => {\r\n        history.push(`/app/user-detail?id=${id}`);\r\n      },\r\n      delete: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            await deleteUseRequest.execute(null, id);\r\n            setList(list.filter((item) => item.id !== id));\r\n            DialogActions.hide({ name: \"delete\" });\r\n          },\r\n          name: \"delete\",\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const getData = async () => {\r\n    const userList = await getUserRequest.execute();\r\n    setList(userList.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <TableTop title=\"لیست کاربران\" onAdd={onAdd} />\r\n        <TableContainer style={{ padding: \"0 10px\" }}>\r\n          <Table\r\n            className={classes.table}\r\n            size={\"medium\"}\r\n            style={{ paddingRight: 10 }}\r\n          >\r\n            <TableHeader\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={list.length}\r\n              headCells={headCells}\r\n            />\r\n            <TableBody>\r\n              {stableSort(list, getComparator(order, orderBy))\r\n                .slice(page * pageSize, page * pageSize + pageSize)\r\n                .map((row) => {\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      tabIndex={-1}\r\n                      key={row.id}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableCell padding=\"none\">{row.username}</TableCell>\r\n                      <TableCell padding=\"none\">{row.firstName}</TableCell>\r\n                      <TableCell padding=\"none\">{row.lastName}</TableCell>\r\n                      <TableCell padding=\"none\">{row.mobile}</TableCell>\r\n                      <TableCell padding=\"none\">{row.phone}</TableCell>\r\n\r\n                      <TableCell padding=\"none\">\r\n                        <TableRowMenu\r\n                          options={[\r\n                            { id: \"edit\", title: \"ویرایش\" },\r\n                            { id: \"delete\", title: \"حذف\" },\r\n                          ]}\r\n                          hadleAction={(type) => handleAction(row.id, type)}\r\n                        />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {!list.length && !getUserRequest.pending && (\r\n                <TableRow style={{ height: 53 }}>\r\n                  <TableCell colSpan={6} style={{ textAlign: \"center\" }}>\r\n                    <Typography variant=\"h6\">\r\n                      داده ای برای نمایش وجود ندارد\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePaging\r\n          count={list.length}\r\n          handleChangePage={handleChangePage}\r\n          handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n          page={page}\r\n          rowsPerPage={pageSize}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"baseline\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      flexDirection: \"column\",\r\n    },\r\n  },\r\n  paper: {\r\n    width: \"30%\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"90%\",\r\n    },\r\n    margin: \"10px 20px\",\r\n  },\r\n  toolbar: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    \"& .MuiTypography-h6\": {\r\n      color: \"white\",\r\n    },\r\n  },\r\n}));\r\n","import React, { useState } from \"react\";\r\nimport { TextField, Button, Grid } from \"@material-ui/core\";\r\n\r\nconst MainDetail = ({ onSubmit, onDismiss, defaultValue }) => {\r\n  const [label, setLabel] = useState(defaultValue.label);\r\n\r\n  const onChangeSelectedCategory = (e) => {\r\n    const { value } = e.target;\r\n    setLabel(value);\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          style={{ width: \"100%\" }}\r\n          value={label}\r\n          size=\"small\"\r\n          label=\"عنوان\"\r\n          variant=\"outlined\"\r\n          onChange={onChangeSelectedCategory}\r\n        />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => onSubmit({ value: defaultValue.value, name: label })}\r\n        >\r\n          تایید\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n          انصراف\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default MainDetail;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport Detail from \"./detail\";\r\n\r\nconst MainList = () => {\r\n  const classes = styles();\r\n  const [customerCategory, setCustomerCategory] = useState([]);\r\n  const [depotCategory, setDepotCategory] = useState([]);\r\n  const [productCategory, setProductCategory] = useState([]);\r\n  const [invoiceCategory, setInvoiceCategory] = useState([]);\r\n  const [driverCategory, setDriverCategory] = useState([]);\r\n  const [action, setAction] = useState();\r\n  const [selectedCategory, setSelectedCategory] = useState({\r\n    value: \"\",\r\n    label: \"\",\r\n  });\r\n  const [selectedType, setSelectedType] = useState();\r\n\r\n  const GetCustomerCategoryRequest = useApi({\r\n    method: \"get\",\r\n    url: \"customer/category\",\r\n  });\r\n\r\n  const EditCustomerCategoryRequest = useApi({\r\n    method: \"put\",\r\n    url: `customer/category/${selectedCategory.value}`,\r\n  });\r\n\r\n  const AddCustomerCategoryRequest = useApi({\r\n    method: \"post\",\r\n    url: \"customer/category\",\r\n  });\r\n\r\n  const GetProductCategoryRequest = useApi({\r\n    method: \"get\",\r\n    url: \"product/category\",\r\n  });\r\n\r\n  const EditProductCategoryRequest = useApi({\r\n    method: \"put\",\r\n    url: `product/category/${selectedCategory.value}`,\r\n  });\r\n\r\n  const AddProductCategoryRequest = useApi({\r\n    method: \"post\",\r\n    url: \"product/category\",\r\n  });\r\n\r\n  const GetDepotCategoryRequest = useApi({\r\n    method: \"get\",\r\n    url: \"depot/category\",\r\n  });\r\n\r\n  const EditDepotCategoryRequest = useApi({\r\n    method: \"put\",\r\n    url: `depot/category/${selectedCategory.value}`,\r\n  });\r\n\r\n  const AddDepotCategoryRequest = useApi({\r\n    method: \"post\",\r\n    url: \"depot/category\",\r\n  });\r\n\r\n  const GetInvoiceCategoryRequest = useApi({\r\n    method: \"get\",\r\n    url: \"invoice/category\",\r\n  });\r\n\r\n  const EditInvoiceCategoryRequest = useApi({\r\n    method: \"put\",\r\n    url: `invoice/category/${selectedCategory.value}`,\r\n  });\r\n\r\n  const AddInvoiceCategoryRequest = useApi({\r\n    method: \"post\",\r\n    url: \"invoice/category\",\r\n  });\r\n\r\n  const GetDriverCategoryRequest = useApi({\r\n    method: \"get\",\r\n    url: \"driver/category\",\r\n  });\r\n\r\n  const EditDriverCategoryRequest = useApi({\r\n    method: \"put\",\r\n    url: `driver/category/${selectedCategory.value}`,\r\n  });\r\n\r\n  const AddDriverCategoryRequest = useApi({\r\n    method: \"post\",\r\n    url: \"driver/category\",\r\n  });\r\n\r\n  const onAction = ({ name, value }) => {\r\n    const types = {\r\n      customer: async () => {\r\n        if (action === \"edit\") {\r\n          await EditCustomerCategoryRequest.execute({\r\n            name,\r\n          });\r\n        } else {\r\n          await AddCustomerCategoryRequest.execute({ name });\r\n        }\r\n        getCustomerCategory();\r\n      },\r\n      depot: async () => {\r\n        if (action === \"edit\") {\r\n          await EditDepotCategoryRequest.execute({\r\n            name,\r\n          });\r\n        } else {\r\n          await AddDepotCategoryRequest.execute({ name });\r\n        }\r\n        getDepotCategory();\r\n      },\r\n      product: async () => {\r\n        if (action === \"edit\") {\r\n          await EditProductCategoryRequest.execute({\r\n            name,\r\n          });\r\n        } else {\r\n          await AddProductCategoryRequest.execute({ name });\r\n        }\r\n        getProductCategory();\r\n      },\r\n      invoice: async () => {\r\n        if (action === \"edit\") {\r\n          await EditInvoiceCategoryRequest.execute({\r\n            name,\r\n          });\r\n        } else {\r\n          await AddInvoiceCategoryRequest.execute({ name });\r\n        }\r\n        getInvoiceCategory();\r\n      },\r\n      driver: async () => {\r\n        if (action === \"edit\") {\r\n          await EditDriverCategoryRequest.execute({\r\n            name,\r\n          });\r\n        } else {\r\n          await AddDriverCategoryRequest.execute({ name });\r\n        }\r\n        getDriverCategory();\r\n      },\r\n    };\r\n    if (types[selectedType]) {\r\n      onDismiss();\r\n      return types[selectedType]();\r\n    }\r\n  };\r\n\r\n  const handleAdd = (type) => {\r\n    setAction(\"add\");\r\n    setSelectedType(type);\r\n  };\r\n\r\n  const handleAction = (type, item) => {\r\n    setAction(\"edit\");\r\n    setSelectedType(type);\r\n    setSelectedCategory(item);\r\n  };\r\n\r\n  const onDismiss = () => {\r\n    DialogActions.hide({ name: \"detail\" });\r\n    setAction();\r\n  };\r\n\r\n  const showEditModal = () => {\r\n    DialogActions.show({\r\n      title: \" دسته بندی\",\r\n      component: (\r\n        <Detail\r\n          onSubmit={onAction}\r\n          onDismiss={onDismiss}\r\n          defaultValue={selectedCategory}\r\n        />\r\n      ),\r\n      name: \"detail\",\r\n      size: \"4\",\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  const getCustomerCategory = async () => {\r\n    const customerCategoryList = await GetCustomerCategoryRequest.execute();\r\n    setCustomerCategory(customerCategoryList.data);\r\n  };\r\n\r\n  const getDepotCategory = async () => {\r\n    const depotCategoryList = await GetDepotCategoryRequest.execute();\r\n    setDepotCategory(depotCategoryList.data);\r\n  };\r\n\r\n  const getProductCategory = async () => {\r\n    const productCategoryList = await GetProductCategoryRequest.execute();\r\n    setProductCategory(productCategoryList.data);\r\n  };\r\n\r\n  const getInvoiceCategory = async () => {\r\n    const invoiceCategoryList = await GetInvoiceCategoryRequest.execute();\r\n    setInvoiceCategory(invoiceCategoryList.data);\r\n  };\r\n\r\n  const getDriverCategory = async () => {\r\n    const driverCategoryList = await GetDriverCategoryRequest.execute();\r\n    setDriverCategory(driverCategoryList.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCustomerCategory();\r\n    getDepotCategory();\r\n    getProductCategory();\r\n    getInvoiceCategory();\r\n    getDriverCategory();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (action) {\r\n      showEditModal();\r\n    }\r\n  }, [action]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <TableTop\r\n          title=\"دسته بندی مشتریان\"\r\n          onAdd={() => handleAdd(\"customer\")}\r\n          toolbarClass={classes.toolbar}\r\n          addButtonClass={classes.addButton}\r\n          minimal\r\n        />\r\n        <TableContainer style={{ padding: \"0 10px\" }}>\r\n          <Table\r\n            className={classes.table}\r\n            size={\"medium\"}\r\n            style={{ paddingRight: 10 }}\r\n          >\r\n            <TableBody>\r\n              {customerCategory.map((row) => {\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    tabIndex={-1}\r\n                    key={row.id}\r\n                    style={{ paddingRight: 10 }}\r\n                  >\r\n                    <TableCell padding=\"none\">{row.label}</TableCell>\r\n\r\n                    <TableCell padding=\"none\" style={{ textAlign: \"left\" }}>\r\n                      <IconButton onClick={() => handleAction(\"customer\", row)}>\r\n                        <i className=\"material-icons-round\">edit</i>\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n              {!customerCategory.length && !getCustomerCategory.pending && (\r\n                <TableRow style={{ height: 53 }}>\r\n                  <TableCell colSpan={6} style={{ textAlign: \"center\" }}>\r\n                    <Typography variant=\"h6\">\r\n                      داده ای برای نمایش وجود ندارد\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n      <Paper className={classes.paper}>\r\n        <TableTop\r\n          title=\"دسته بندی انبار\"\r\n          onAdd={() => handleAdd(\"depot\")}\r\n          toolbarClass={classes.toolbar}\r\n          addButtonClass={classes.addButton}\r\n          minimal\r\n        />\r\n        <TableContainer style={{ padding: \"0 10px\" }}>\r\n          <Table\r\n            className={classes.table}\r\n            size={\"medium\"}\r\n            style={{ paddingRight: 10 }}\r\n          >\r\n            <TableBody>\r\n              {depotCategory.map((row) => {\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    tabIndex={-1}\r\n                    key={row.id}\r\n                    style={{ paddingRight: 10 }}\r\n                  >\r\n                    <TableCell padding=\"none\">{row.label}</TableCell>\r\n\r\n                    <TableCell padding=\"none\" style={{ textAlign: \"left\" }}>\r\n                      <IconButton onClick={() => handleAction(\"depot\", row)}>\r\n                        <i className=\"material-icons-round\">edit</i>\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n              {!depotCategory.length && !getDepotCategory.pending && (\r\n                <TableRow style={{ height: 53 }}>\r\n                  <TableCell colSpan={6} style={{ textAlign: \"center\" }}>\r\n                    <Typography variant=\"h6\">\r\n                      داده ای برای نمایش وجود ندارد\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n      <Paper className={classes.paper}>\r\n        <TableTop\r\n          title=\"دسته بندی کالاها\"\r\n          onAdd={() => handleAdd(\"product\")}\r\n          toolbarClass={classes.toolbar}\r\n          addButtonClass={classes.addButton}\r\n          minimal\r\n        />\r\n        <TableContainer style={{ padding: \"0 10px\" }}>\r\n          <Table\r\n            className={classes.table}\r\n            size={\"medium\"}\r\n            style={{ paddingRight: 10 }}\r\n          >\r\n            <TableBody>\r\n              {productCategory.map((row) => {\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    tabIndex={-1}\r\n                    key={row.id}\r\n                    style={{ paddingRight: 10 }}\r\n                  >\r\n                    <TableCell padding=\"none\">{row.label}</TableCell>\r\n\r\n                    <TableCell padding=\"none\" style={{ textAlign: \"left\" }}>\r\n                      <IconButton onClick={() => handleAction(\"product\", row)}>\r\n                        <i className=\"material-icons-round\">edit</i>\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n              {!productCategory.length && !getProductCategory.pending && (\r\n                <TableRow style={{ height: 53 }}>\r\n                  <TableCell colSpan={6} style={{ textAlign: \"center\" }}>\r\n                    <Typography variant=\"h6\">\r\n                      داده ای برای نمایش وجود ندارد\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n      <Paper className={classes.paper}>\r\n        <TableTop\r\n          title=\"دسته بندی فاکتور ها\"\r\n          onAdd={() => handleAdd(\"invoice\")}\r\n          toolbarClass={classes.toolbar}\r\n          addButtonClass={classes.addButton}\r\n          minimal\r\n        />\r\n        <TableContainer style={{ padding: \"0 10px\" }}>\r\n          <Table\r\n            className={classes.table}\r\n            size={\"medium\"}\r\n            style={{ paddingRight: 10 }}\r\n          >\r\n            <TableBody>\r\n              {invoiceCategory.map((row) => {\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    tabIndex={-1}\r\n                    key={row.id}\r\n                    style={{ paddingRight: 10 }}\r\n                  >\r\n                    <TableCell padding=\"none\">{row.label}</TableCell>\r\n\r\n                    <TableCell padding=\"none\" style={{ textAlign: \"left\" }}>\r\n                      <IconButton onClick={() => handleAction(\"invoice\", row)}>\r\n                        <i className=\"material-icons-round\">edit</i>\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n              {!invoiceCategory.length && !getInvoiceCategory.pending && (\r\n                <TableRow style={{ height: 53 }}>\r\n                  <TableCell colSpan={6} style={{ textAlign: \"center\" }}>\r\n                    <Typography variant=\"h6\">\r\n                      داده ای برای نمایش وجود ندارد\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n      <Paper className={classes.paper}>\r\n        <TableTop\r\n          title=\"دسته بندی رانندگان ها\"\r\n          onAdd={() => handleAdd(\"driver\")}\r\n          toolbarClass={classes.toolbar}\r\n          addButtonClass={classes.addButton}\r\n          minimal\r\n        />\r\n        <TableContainer style={{ padding: \"0 10px\" }}>\r\n          <Table\r\n            className={classes.table}\r\n            size={\"medium\"}\r\n            style={{ paddingRight: 10 }}\r\n          >\r\n            <TableBody>\r\n              {driverCategory.map((row) => {\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    tabIndex={-1}\r\n                    key={row.id}\r\n                    style={{ paddingRight: 10 }}\r\n                  >\r\n                    <TableCell padding=\"none\">{row.label}</TableCell>\r\n\r\n                    <TableCell padding=\"none\" style={{ textAlign: \"left\" }}>\r\n                      <IconButton onClick={() => handleAction(\"driver\", row)}>\r\n                        <i className=\"material-icons-round\">edit</i>\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n              {!driverCategory.length && !getDriverCategory.pending && (\r\n                <TableRow style={{ height: 53 }}>\r\n                  <TableCell colSpan={6} style={{ textAlign: \"center\" }}>\r\n                    <Typography variant=\"h6\">\r\n                      داده ای برای نمایش وجود ندارد\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Grid,\r\n  TextField,\r\n  Chip,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport { TimePicker } from \"@material-ui/pickers\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport {\r\n  getQueryString,\r\n  hasPermission,\r\n  persianNumber,\r\n} from \"../../helpers/utils\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport { convertParamsToQueryString } from \"../../helpers/utils\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport clsx from \"clsx\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport AlertAction from \"../../redux/actions/AlertAction\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n    marginBottom: 10,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n  enter: {\r\n    color: \"#fff\",\r\n    backgroundColor: theme.palette.primary.main,\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n  exit: {\r\n    color: \"#fff\",\r\n    backgroundColor: theme.palette.error.main,\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.error.main,\r\n    },\r\n  },\r\n  logedEnter: {\r\n    color: \"white\",\r\n    fontSize: 16,\r\n    backgroundColor: theme.palette.gray.main,\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.gray.main,\r\n    },\r\n  },\r\n  logedExit: {\r\n    color: \"white\",\r\n    fontSize: 16,\r\n    backgroundColor: theme.palette.gray.main,\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.gray.main,\r\n    },\r\n  },\r\n  register: {\r\n    color: \"#fff\",\r\n    backgroundColor: theme.palette.success.main,\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.success.dark,\r\n    },\r\n  },\r\n  dateTime: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  clockConatiner: {\r\n    background: theme.palette.primary.main,\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n    display: \"flex\",\r\n  },\r\n  tab: {\r\n    borderBottom: `1px solid ${theme.palette.gray.main}`,\r\n  },\r\n}));\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    label: \"نام و نام خانوادگی\",\r\n  },\r\n\r\n  { id: \"enter\", label: \"ورود\" },\r\n  {\r\n    id: \"exit\",\r\n    label: \"خروج\",\r\n  },\r\n  { id: \"enter\", label: \"ورود\" },\r\n  {\r\n    id: \"exit\",\r\n    label: \"خروج\",\r\n  },\r\n];\r\n\r\nexport default function MainDetail() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [search, setSearch] = useState();\r\n  const [list, setList] = useState([]);\r\n  const [selectedDate, setSelectedDate] = useState(moment());\r\n  const [selectedTime, setSelectedTime] = useState(moment());\r\n  const [isEditTime, setIsEditTime] = useState(false);\r\n  const [editTime, setEditTime] = useState();\r\n  const [type, setType] = useState(\"ALL\");\r\n\r\n  const registerRequest = useApi({\r\n    method: \"post\",\r\n    url: `attendance`,\r\n  });\r\n\r\n  const getTrafficRequest = useApi({\r\n    method: \"get\",\r\n    url: decodeURIComponent(\r\n      `attendance?${convertParamsToQueryString({\r\n        search,\r\n        filter: `{date:${selectedDate._d.toISOString()}}`,\r\n        type,\r\n      })}`,\r\n    ),\r\n  });\r\n\r\n  const editTrafficRequest = useApi({\r\n    method: \"put\",\r\n    url: `attendance`,\r\n  });\r\n\r\n  const onSubmit = async (row, type) => {\r\n    if (hasPermission(Constant.ALL_PERMISSIONS.ATTENDANCE_EDIT)) {\r\n      if (!checkToday()) {\r\n        await registerRequest.execute({ employeeId: row.id, type });\r\n        getData();\r\n      } else {\r\n      }\r\n    } else {\r\n      AlertAction.show({\r\n        type: \"error\",\r\n        text: Constant.MESSAGES.ERROR_MESSAGE.ACCESS_DENIED,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onEdit = async (date) => {\r\n    if (hasPermission(Constant.ALL_PERMISSIONS.ATTENDANCE_ADMIN)) {\r\n      const tzOffset = new Date().getTimezoneOffset() * 60000;\r\n      await editTrafficRequest.execute({\r\n        id: editTime.id,\r\n        date: new Date(new Date(date) - tzOffset),\r\n      });\r\n      getData();\r\n    } else {\r\n      AlertAction.show({\r\n        type: \"error\",\r\n        text: Constant.MESSAGES.ERROR_MESSAGE.ACCESS_DENIED,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onChangeSearch = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  const getData = async () => {\r\n    const userList = await getTrafficRequest.execute();\r\n    setList(userList.data);\r\n  };\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date._d);\r\n    setIsEditTime(false);\r\n    setEditTime(null);\r\n    onEdit(date._d);\r\n  };\r\n\r\n  const onEditTime = (time) => {\r\n    if (!checkIsAdmin()) {\r\n      return;\r\n    }\r\n    setSelectedTime(time.dateTime);\r\n    setIsEditTime(true);\r\n    setEditTime({ id: time.id });\r\n  };\r\n\r\n  const checkIsAdmin = () => {\r\n    return hasPermission(Constant.ALL_PERMISSIONS.ATTENDANCE_ADMIN);\r\n  };\r\n\r\n  const checkToday = () => {\r\n    return selectedDate._d.toDateString() !== moment()._d.toDateString();\r\n  };\r\n\r\n  const getTimesElement = (row) => {\r\n    if (row.times.length === 0) {\r\n      return (\r\n        <>\r\n          <TableCell padding=\"none\">\r\n            {isEditTime && row.times[0].id === editTime.id ? (\r\n              <TimePicker\r\n                style={{ width: 50 }}\r\n                ampm={false}\r\n                value={selectedTime}\r\n                onChange={handleTimeChange}\r\n                okLabel=\"تایید\"\r\n                cancelLabel=\"انصراف\"\r\n              />\r\n            ) : (\r\n              <Chip\r\n                label={\"ثبت ورود\"}\r\n                className={clsx(\r\n                  classes.enter,\r\n                  checkToday() && classes.logedEnter,\r\n                )}\r\n                onClick={() => onSubmit(row, \"ENTER\")}\r\n              />\r\n            )}\r\n          </TableCell>\r\n          <TableCell padding=\"none\"></TableCell>\r\n          <TableCell padding=\"none\"></TableCell>\r\n          <TableCell padding=\"none\"></TableCell>\r\n        </>\r\n      );\r\n    }\r\n    if (row.times.length === 1) {\r\n      return (\r\n        <>\r\n          <TableCell padding=\"none\">\r\n            {isEditTime && row.times[0].id === editTime.id ? (\r\n              <TimePicker\r\n                style={{ width: 50 }}\r\n                ampm={false}\r\n                value={selectedTime}\r\n                onChange={handleTimeChange}\r\n                okLabel=\"تایید\"\r\n                cancelLabel=\"انصراف\"\r\n              />\r\n            ) : (\r\n              <Chip\r\n                label={persianNumber(row.times[0].time).substring(0, 5)}\r\n                className={classes.logedEnter}\r\n                onClick={() => onEditTime(row.times[0])}\r\n              />\r\n            )}\r\n          </TableCell>\r\n          <TableCell padding=\"none\">\r\n            <Chip\r\n              label={\"ثبت خروج\"}\r\n              className={clsx(classes.exit, checkToday() && classes.logedExit)}\r\n              onClick={() => onSubmit(row, \"EXIT\")}\r\n            />\r\n          </TableCell>\r\n          <TableCell padding=\"none\"></TableCell>\r\n          <TableCell padding=\"none\"></TableCell>\r\n        </>\r\n      );\r\n    }\r\n    if (row.times.length === 2) {\r\n      return (\r\n        <>\r\n          <TableCell padding=\"none\">\r\n            {isEditTime && row.times[0].id === editTime.id ? (\r\n              <TimePicker\r\n                style={{ width: 50 }}\r\n                ampm={false}\r\n                value={selectedTime}\r\n                onChange={handleTimeChange}\r\n                okLabel=\"تایید\"\r\n                cancelLabel=\"انصراف\"\r\n              />\r\n            ) : (\r\n              <Chip\r\n                label={persianNumber(row.times[0].time).substring(0, 5)}\r\n                className={classes.logedEnter}\r\n                onClick={() => onEditTime(row.times[0])}\r\n              />\r\n            )}\r\n          </TableCell>\r\n          <TableCell padding=\"none\">\r\n            {isEditTime && row.times[1].id === editTime.id ? (\r\n              <TimePicker\r\n                style={{ width: 50 }}\r\n                ampm={false}\r\n                value={selectedTime}\r\n                onChange={handleTimeChange}\r\n                okLabel=\"تایید\"\r\n                cancelLabel=\"انصراف\"\r\n              />\r\n            ) : (\r\n              <Chip\r\n                label={persianNumber(row.times[1].time).substring(0, 5)}\r\n                className={classes.logedExit}\r\n                onClick={() => onEditTime(row.times[1])}\r\n              />\r\n            )}\r\n          </TableCell>\r\n          <TableCell padding=\"none\">\r\n            <Chip\r\n              label={\"ثبت ورود\"}\r\n              className={clsx(\r\n                classes.enter,\r\n                checkToday() && classes.logedEnter,\r\n              )}\r\n              onClick={() => onSubmit(row, \"ENTER\")}\r\n            />\r\n          </TableCell>\r\n          <TableCell padding=\"none\"></TableCell>\r\n        </>\r\n      );\r\n    }\r\n    if (row.times.length === 3) {\r\n      return (\r\n        <>\r\n          <TableCell padding=\"none\">\r\n            {isEditTime && row.times[0].id === editTime.id ? (\r\n              <TimePicker\r\n                style={{ width: 50 }}\r\n                ampm={false}\r\n                value={selectedTime}\r\n                onChange={handleTimeChange}\r\n                okLabel=\"تایید\"\r\n                cancelLabel=\"انصراف\"\r\n              />\r\n            ) : (\r\n              <Chip\r\n                label={persianNumber(row.times[0].time).substring(0, 5)}\r\n                className={classes.logedEnter}\r\n                onClick={() => onEditTime(row.times[0])}\r\n              />\r\n            )}\r\n          </TableCell>\r\n          <TableCell padding=\"none\">\r\n            {isEditTime && row.times[1].id === editTime.id ? (\r\n              <TimePicker\r\n                style={{ width: 50 }}\r\n                ampm={false}\r\n                value={selectedTime}\r\n                onChange={handleTimeChange}\r\n                okLabel=\"تایید\"\r\n                cancelLabel=\"انصراف\"\r\n              />\r\n            ) : (\r\n              <Chip\r\n                label={persianNumber(row.times[1].time).substring(0, 5)}\r\n                className={classes.logedExit}\r\n                onClick={() => onEditTime(row.times[1])}\r\n              />\r\n            )}\r\n          </TableCell>\r\n          <TableCell padding=\"none\">\r\n            {isEditTime && row.times[2].id === editTime.id ? (\r\n              <TimePicker\r\n                style={{ width: 50 }}\r\n                ampm={false}\r\n                value={selectedTime}\r\n                onChange={handleTimeChange}\r\n                okLabel=\"تایید\"\r\n                cancelLabel=\"انصراف\"\r\n              />\r\n            ) : (\r\n              <Chip\r\n                label={persianNumber(row.times[2].time).substring(0, 5)}\r\n                className={classes.logedEnter}\r\n                onClick={() => onEditTime(row.times[2])}\r\n              />\r\n            )}\r\n          </TableCell>\r\n          <TableCell padding=\"none\">\r\n            <Chip\r\n              label={\"ثبت خروج\"}\r\n              className={clsx(classes.exit, checkToday() && classes.logedExit)}\r\n              onClick={() => onSubmit(row, \"EXIT\")}\r\n            />\r\n          </TableCell>\r\n        </>\r\n      );\r\n    }\r\n    if (row.times.length === 4) {\r\n      return (\r\n        <>\r\n          <TableCell padding=\"none\">\r\n            {isEditTime && row.times[0].id === editTime.id ? (\r\n              <TimePicker\r\n                style={{ width: 50 }}\r\n                ampm={false}\r\n                value={selectedTime}\r\n                onChange={handleTimeChange}\r\n                okLabel=\"تایید\"\r\n                cancelLabel=\"انصراف\"\r\n              />\r\n            ) : (\r\n              <Chip\r\n                label={persianNumber(row.times[0].time).substring(0, 5)}\r\n                className={classes.logedEnter}\r\n                onClick={() => onEditTime(row.times[0])}\r\n              />\r\n            )}\r\n          </TableCell>\r\n          <TableCell padding=\"none\">\r\n            {isEditTime && row.times[1].id === editTime.id ? (\r\n              <TimePicker\r\n                style={{ width: 50 }}\r\n                ampm={false}\r\n                value={selectedTime}\r\n                onChange={handleTimeChange}\r\n                okLabel=\"تایید\"\r\n                cancelLabel=\"انصراف\"\r\n              />\r\n            ) : (\r\n              <Chip\r\n                label={persianNumber(row.times[1].time).substring(0, 5)}\r\n                className={classes.logedExit}\r\n                onClick={() => onEditTime(row.times[1])}\r\n              />\r\n            )}\r\n          </TableCell>\r\n          <TableCell padding=\"none\">\r\n            {isEditTime && row.times[2].id === editTime.id ? (\r\n              <TimePicker\r\n                style={{ width: 50 }}\r\n                ampm={false}\r\n                value={selectedTime}\r\n                onChange={handleTimeChange}\r\n                okLabel=\"تایید\"\r\n                cancelLabel=\"انصراف\"\r\n              />\r\n            ) : (\r\n              <Chip\r\n                label={persianNumber(row.times[2].time).substring(0, 5)}\r\n                className={classes.logedEnter}\r\n                onClick={() => onEditTime(row.times[2])}\r\n              />\r\n            )}\r\n          </TableCell>\r\n          <TableCell padding=\"none\">\r\n            {isEditTime && row.times[3].id === editTime.id ? (\r\n              <TimePicker\r\n                style={{ width: 50 }}\r\n                ampm={false}\r\n                value={selectedTime}\r\n                onChange={handleTimeChange}\r\n                okLabel=\"تایید\"\r\n                cancelLabel=\"انصراف\"\r\n              />\r\n            ) : (\r\n              <Chip\r\n                label={persianNumber(row.times[3].time).substring(0, 5)}\r\n                className={classes.logedExit}\r\n                onClick={() => onEditTime(row.times[3])}\r\n              />\r\n            )}\r\n          </TableCell>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  const onChangeType = (e, value) => {\r\n    setType(value);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   console.log(new Date(selectedTime._d).getHours());\r\n  // }, [selectedTime]);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [search, selectedDate, type]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.ATTENDANCE_LIST) && (\r\n        <Grid container spacing={3} style={{ alignItems: \"baseline\" }}>\r\n          <Grid item lg={3} sm={12} className={classes.dateTime}>\r\n            <DatePicker\r\n              autoOk\r\n              orientation=\"portrait\"\r\n              variant=\"static\"\r\n              openTo=\"date\"\r\n              name=\"date\"\r\n              // label=\"تاریخ شروع قرارداد\"\r\n              inputVariant=\"outlined\"\r\n              okLabel=\"تأیید\"\r\n              cancelLabel=\"لغو\"\r\n              labelFunc={(date) => (date ? date.format(\"jYYYY/jMM/jDD\") : \"\")}\r\n              value={selectedDate}\r\n              onChange={handleDateChange}\r\n              style={{ width: \"100%\" }}\r\n            />\r\n\r\n            {/* {isEditTime && (\r\n          <TimePicker\r\n            autoOk={false}\r\n            variant=\"static\"\r\n            openTo=\"hours\"\r\n            ampm={false}\r\n            value={selectedTime}\r\n            onChange={setSelectedTime}\r\n          />\r\n        )} */}\r\n          </Grid>\r\n          <Grid item lg={8} sm={12} className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n              <Typography\r\n                className={classes.title}\r\n                variant=\"h6\"\r\n                id=\"tableTitle\"\r\n                component=\"div\"\r\n              >\r\n                ثبت حضور و غیاب\r\n              </Typography>\r\n\r\n              <Grid container spacing={3}>\r\n                <Grid item lg={12} xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    label=\" جستجوی پرسنل\"\r\n                    onChange={onChangeSearch}\r\n                    value={search}\r\n                    fullWidth\r\n                    size=\"small\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Paper>\r\n            <div className={classes.root}>\r\n              <Paper className={classes.paper}>\r\n                <div className={classes.tab}>\r\n                  <Tabs\r\n                    value={type}\r\n                    onChange={onChangeType}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    centered\r\n                    variant=\"fullWidth\"\r\n                  >\r\n                    <Tab label=\"کل پرسنل\" value=\"ALL\" />\r\n                    <Tab label=\"پرسنل کارخانه\" value=\"FACTORY\" />\r\n                    <Tab label=\"پرسنل انبار\" value=\"DEPOT\" />\r\n                  </Tabs>\r\n                </div>\r\n                <TableContainer style={{ padding: \"0 10px\" }}>\r\n                  <Table\r\n                    className={classes.table}\r\n                    size={\"medium\"}\r\n                    style={{ paddingRight: 10 }}\r\n                  >\r\n                    <TableHeader classes={classes} headCells={headCells} />\r\n                    <TableBody>\r\n                      {list.map((row) => {\r\n                        return (\r\n                          <TableRow\r\n                            hover\r\n                            tabIndex={-1}\r\n                            key={row.id}\r\n                            style={{ paddingRight: 10 }}\r\n                          >\r\n                            <TableCell padding=\"none\">{row.employee}</TableCell>\r\n                            {getTimesElement(row)}\r\n                          </TableRow>\r\n                        );\r\n                      })}\r\n                      {!list.length && !getTrafficRequest.pending && (\r\n                        <TableRow style={{ height: 53 }}>\r\n                          <TableCell\r\n                            colSpan={6}\r\n                            style={{ textAlign: \"center\" }}\r\n                          >\r\n                            <Typography variant=\"h6\">\r\n                              داده ای برای نمایش وجود ندارد\r\n                            </Typography>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      )}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Paper>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Grid, Button, Divider } from \"@material-ui/core\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n}));\r\nconst Filter = ({ onFilter }) => {\r\n  const classes = useStyles();\r\n  const [selectedFromDate, handleFromDateChange] = useState(moment());\r\n  const [selectedToDate, handleToDateChange] = useState(moment());\r\n\r\n  const onChnageDate = (e, type) => {\r\n    if (type === \"from\") {\r\n      handleFromDateChange(e);\r\n    } else {\r\n      handleToDateChange(e);\r\n    }\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (typeof onFilter === \"function\") {\r\n      onFilter(\r\n        `{from:${selectedFromDate._d.toISOString()},to:${selectedToDate._d.toISOString()}}`,\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3} alignItems=\"center\" style={{ padding: 10 }}>\r\n      <Grid item lg={3} xs={12} className={classes.datePicker}>\r\n        <DatePicker\r\n          autoOk\r\n          name=\"date\"\r\n          label=\"از تاریخ\"\r\n          inputVariant=\"outlined\"\r\n          okLabel=\"تأیید\"\r\n          cancelLabel=\"لغو\"\r\n          labelFunc={(date) => (date ? date.format(\"jYYYY/jMM/jDD\") : \"\")}\r\n          value={selectedFromDate}\r\n          onChange={(e) => onChnageDate(e, \"from\")}\r\n          style={{ width: \"100%\" }}\r\n        />\r\n      </Grid>\r\n      <Grid item lg={3} xs={12} className={classes.datePicker}>\r\n        <DatePicker\r\n          autoOk\r\n          name=\"date\"\r\n          label=\"تا تاریخ\"\r\n          inputVariant=\"outlined\"\r\n          okLabel=\"تأیید\"\r\n          cancelLabel=\"لغو\"\r\n          labelFunc={(date) => (date ? date.format(\"jYYYY/jMM/jDD\") : \"\")}\r\n          value={selectedToDate}\r\n          onChange={(e) => onChnageDate(e, \"to\")}\r\n          style={{ width: \"100%\" }}\r\n        />\r\n      </Grid>\r\n      <Grid item lg={3} xs={12}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n          تایید\r\n        </Button>\r\n      </Grid>\r\n      <Divider style={{ width: \"100%\" }} />\r\n    </Grid>\r\n  );\r\n};\r\nexport default Filter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Chip,\r\n  TextField,\r\n  Grid,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport {\r\n  convertParamsToQueryString,\r\n  hasPermission,\r\n  getQueryString,\r\n  persianNumber,\r\n} from \"../../helpers/utils\";\r\nimport styles from \"./style\";\r\nimport FilterComponent from \"./logFilter\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\nimport Transction from \"../customers/transaction\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport moment from \"moment-timezone\";\r\nimport jMoment from \"jalali-moment\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"date\",\r\n    label: \"تاریخ\",\r\n  },\r\n\r\n  { id: \"firstEnter\", label: \"ورود اول\" },\r\n  {\r\n    id: \"firstExit\",\r\n    label: \"خروج اول\",\r\n  },\r\n  { id: \"secondEnter\", label: \"ورود دوم\" },\r\n  {\r\n    id: \"secondExit\",\r\n    label: \"خروج دوم\",\r\n  },\r\n  { id: \"fractionTime\", label: \"کسر کار\" },\r\n  {\r\n    id: \"overTime\",\r\n    label: \"اضافه کار\",\r\n  },\r\n  {\r\n    id: \"total\",\r\n    label: \"مجموع کارکرد\",\r\n  },\r\n];\r\n\r\nexport default function EmployeeLog() {\r\n  const classes = styles();\r\n  const id = getQueryString(\"id\");\r\n  const name = getQueryString(\"name\");\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"date\");\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [sum, setSum] = useState();\r\n  const history = useHistory();\r\n  const [filter, setFilter] = useState(\r\n    `{from:${jMoment(moment(), \"YYYY/MM/DD\")\r\n      .locale(\"fa\")\r\n      .startOf(\"month\")\r\n      .toISOString()},to:${moment().toISOString()}}`,\r\n  );\r\n  // const [price, setPrice] = useState();\r\n  // const [description, setDescription] = useState();\r\n  // const [detail, setDetail] = useState({\r\n  //   totalPay: \" \",\r\n  //   totalLogPay: \" \",\r\n  //   totalLog: \" \",\r\n  //   purePay: \" \",\r\n  //   SPH: \" \",\r\n  // });\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onReject = () => {\r\n    history.push(\"/customer-list\");\r\n  };\r\n\r\n  const getEmployeeRequest = useApi({\r\n    method: \"get\",\r\n    url: decodeURIComponent(\r\n      `attendance/employee?${convertParamsToQueryString({\r\n        page,\r\n        order,\r\n        orderBy,\r\n        pageSize,\r\n        filter,\r\n      })}`,\r\n    ),\r\n  });\r\n\r\n  const onFilter = (data) => {\r\n    setFilter(data);\r\n  };\r\n\r\n  const onShowPayments = () => {\r\n    DialogActions.show({\r\n      title: \" حساب بانکی\",\r\n      component: (\r\n        <Transction\r\n        // onSubmit={onSubmitAccount}\r\n        // onDismiss={onDismissAccount}\r\n        // defaultValues={data}\r\n        />\r\n      ),\r\n      name: \"transaction\",\r\n      size: \"4\",\r\n      confirm: false,\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  const getData = async () => {\r\n    const employeeList = await getEmployeeRequest.execute(null, id);\r\n    setList(employeeList.data);\r\n    setTotal(employeeList.total);\r\n    setSum(employeeList.details);\r\n  };\r\n\r\n  const getTitle = () => {\r\n    return `لیست تردد ${name}`;\r\n  };\r\n\r\n  const onSubmitNewPayment = () => {\r\n    //add new payment in today and type =\"outcome\"\r\n  };\r\n\r\n  const onChange = (e, type) => {};\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, pageSize, filter]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.CASH_LIST) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getEmployeeRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <>\r\n                <Grid container spacing={3} className={classes.salary}>\r\n                  {/* <Grid item xs={3}>\r\n                    <Paper className={classes.salaryPaperRight}>\r\n                      <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                          <TextField\r\n                            disabled\r\n                            variant=\"outlined\"\r\n                            label=\"مجموع کارکرد\"\r\n                            name=\"totalLog\"\r\n                            value={detail.totalLog}\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <TextField\r\n                            disabled\r\n                            variant=\"outlined\"\r\n                            label=\"دریافتی در ساعت\"\r\n                            name=\"totalLog\"\r\n                            value={detail.SPH}\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <TextField\r\n                            disabled\r\n                            variant=\"outlined\"\r\n                            label=\"مبلغ قابل پرداخت\"\r\n                            name=\"totalLog\"\r\n                            value={detail.totalLogPay}\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <TextField\r\n                            disabled\r\n                            variant=\"outlined\"\r\n                            label=\"مجموع دریافتی\"\r\n                            name=\"totalLog\"\r\n                            value={detail.totalPay}\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <TextField\r\n                            disabled\r\n                            variant=\"outlined\"\r\n                            label=\"خالص دریافتی\"\r\n                            name=\"totalLog\"\r\n                            value={detail.purePay}\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid\r\n                          item\r\n                          xs={12}\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                          }}\r\n                        >\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={onShowPayments}\r\n                            fullWidth\r\n                          >\r\n                            لیست پرداختی ها\r\n                          </Button>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Paper>\r\n                  </Grid>\r\n                   */}\r\n                  <Grid item xs={12}>\r\n                    <Paper className={classes.salaryPaperLeft}>\r\n                      <TableTop\r\n                        title={getTitle()}\r\n                        FilterComponent={\r\n                          <FilterComponent onFilter={onFilter} />\r\n                        }\r\n                      />\r\n                      <TableContainer style={{ padding: \"0 10px\" }}>\r\n                        <Table\r\n                          className={classes.table}\r\n                          size={\"medium\"}\r\n                          style={{ paddingRight: 10 }}\r\n                        >\r\n                          <TableHeader\r\n                            classes={classes}\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onRequestSort={handleRequestSort}\r\n                            rowCount={list.length}\r\n                            headCells={headCells}\r\n                          />\r\n\r\n                          <TableBody>\r\n                            {list.map((row) => {\r\n                              return (\r\n                                <TableRow\r\n                                  hover\r\n                                  tabIndex={-1}\r\n                                  key={row.id}\r\n                                  style={{ paddingRight: 10 }}\r\n                                >\r\n                                  <TableCell padding=\"none\">\r\n                                    {persianNumber(\r\n                                      new Date(row.date).toLocaleDateString(\r\n                                        \"fa-IR\",\r\n                                      ),\r\n                                    )}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {persianNumber(row.times[0]?.time)}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {persianNumber(row.times[1]?.time)}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {persianNumber(row.times[2]?.time)}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {persianNumber(row.times[3]?.time)}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {persianNumber(row.fractionTime)}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {persianNumber(row.overTime)}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {persianNumber(row.total)}\r\n                                  </TableCell>\r\n                                </TableRow>\r\n                              );\r\n                            })}\r\n                            {!list.length && !getEmployeeRequest.pending && (\r\n                              <TableRow style={{ height: 53 }}>\r\n                                <TableCell\r\n                                  colSpan={headCells.length}\r\n                                  style={{ textAlign: \"center\" }}\r\n                                >\r\n                                  <Typography variant=\"h6\">\r\n                                    داده ای برای نمایش وجود ندارد\r\n                                  </Typography>\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            )}\r\n                          </TableBody>\r\n                        </Table>\r\n                      </TableContainer>\r\n                      <TablePaging\r\n                        count={total}\r\n                        handleChangePage={handleChangePage}\r\n                        handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                        page={page}\r\n                        rowsPerPage={pageSize}\r\n                      />\r\n                    </Paper>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <Paper className={classes.salaryPaperRight}>\r\n                      <Grid container spacing={3}>\r\n                        <Grid item xs={12} sm={4}>\r\n                          <TextField\r\n                            disabled\r\n                            variant=\"outlined\"\r\n                            label=\"مجموع کارکرد\"\r\n                            name=\"totalLog\"\r\n                            value={persianNumber(sum?.totalTime)}\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                          <TextField\r\n                            disabled\r\n                            variant=\"outlined\"\r\n                            label=\"مجموع اضافه کار\"\r\n                            name=\"totalLog\"\r\n                            value={persianNumber(sum?.totalOverTime)}\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                          <TextField\r\n                            disabled\r\n                            variant=\"outlined\"\r\n                            label=\"مجموع کسر کار\"\r\n                            name=\"totalLog\"\r\n                            value={persianNumber(sum?.totalFractionTime)}\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Paper>\r\n                  </Grid>\r\n                </Grid>\r\n                {/* <Grid container spacing={3} className={classes.salary}>\r\n                  <Grid item xs={3}>\r\n                    <Paper className={classes.salaryPaperRight}>\r\n                      <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"مبلغ\"\r\n                            name=\"price\"\r\n                            onChange={(e) => onChange(e, \"price\")}\r\n                            value={price}\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <TextField\r\n                            rows={3}\r\n                            multiline\r\n                            variant=\"outlined\"\r\n                            label=\"بابت\"\r\n                            name=\"description\"\r\n                            onChange={(e) => onChange(e, \"description\")}\r\n                            value={description}\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        item\r\n                        xs={12}\r\n                        style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"space-between\",\r\n                          marginTop: 10,\r\n                          flexDirection: \"column\",\r\n                        }}\r\n                      >\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={onSubmitNewPayment}\r\n                          fullWidth\r\n                        >\r\n                          پرداخت\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"Secondary\"\r\n                          onClick={onReject}\r\n                          style={{ marginTop: 10 }}\r\n                          fullWidth\r\n                        >\r\n                          بازگشت\r\n                        </Button>\r\n                      </Grid>\r\n                    </Paper>\r\n                  </Grid>\r\n                </Grid>\r\n              */}\r\n              </>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n}));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Grid, TextField, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport Constant from \"../../helpers/constant\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  img: {\r\n    width: 35,\r\n    height: 35,\r\n    borderRadius: 50,\r\n    marginLeft: 20,\r\n  },\r\n  icon: {\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: 50,\r\n    cursor: \"pointer\",\r\n  },\r\n  grid: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nexport default function MainDetail({ detail, onDismiss }) {\r\n  const classes = useStyles();\r\n  const [copyState, setCopyState] = useState();\r\n\r\n  const onCopy = (copyField) => {\r\n    setCopyState(copyField);\r\n  };\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12} className={classes.grid}>\r\n        <TextField\r\n          disabled\r\n          label=\"بانک\"\r\n          value={detail.bank.name || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n        <img\r\n          src={`${Constant.API_ADDRESS}/${detail.bank.logo}`}\r\n          alt={detail.bank.logo}\r\n          className={classes.img}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.grid}>\r\n        <TextField\r\n          disabled\r\n          label=\"شماره کارت\"\r\n          value={detail.accountCardNumber || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n        <CopyToClipboard\r\n          onCopy={() => onCopy(\"accountCardNumber\")}\r\n          text={detail.accountCardNumber}\r\n        >\r\n          <i\r\n            className=\"material-icons-round\"\r\n            style={{ marginRight: 20, cursor: \"pointer\" }}\r\n          >\r\n            {copyState === \"accountCardNumber\" ? \"done\" : \"copy\"}\r\n          </i>\r\n        </CopyToClipboard>\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.grid}>\r\n        <TextField\r\n          disabled\r\n          label=\"شماره حساب\"\r\n          value={detail.accountNumber || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n        <CopyToClipboard\r\n          onCopy={() => onCopy(\"accountNumber\")}\r\n          text={detail.accountNumber}\r\n        >\r\n          <i\r\n            className=\"material-icons-round\"\r\n            style={{ marginRight: 20, cursor: \"pointer\" }}\r\n          >\r\n            {copyState === \"accountNumber\" ? \"done\" : \"copy\"}\r\n          </i>\r\n        </CopyToClipboard>\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.grid}>\r\n        <TextField\r\n          disabled\r\n          label=\"شماره شبا\"\r\n          value={detail.accountShaba || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n        <CopyToClipboard\r\n          onCopy={() => onCopy(\"accountShaba\")}\r\n          text={detail.accountShaba}\r\n        >\r\n          <i\r\n            className=\"material-icons-round\"\r\n            style={{ marginRight: 20, cursor: \"pointer\" }}\r\n          >\r\n            {copyState === \"accountShaba\" ? \"done\" : \"copy\"}\r\n          </i>\r\n        </CopyToClipboard>\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          disabled\r\n          label=\"توضیحات\"\r\n          value={detail.description || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n      </Grid>\r\n\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n          بازگشت\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { convertParamsToQueryString, hasPermission } from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport Detail from \"./detail\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    label: \"نام شخص\",\r\n  },\r\n  {\r\n    id: \"type\",\r\n    label: \"نوع\",\r\n  },\r\n  {\r\n    id: \"logo\",\r\n    label: \"بانک\",\r\n  },\r\n  { id: \"cardNumber\", label: \"شماره کارت\" },\r\n  { id: \"action\" },\r\n];\r\nconst PERSON_TYPE = {\r\n  EMPLOYEE: \"پرسنل\",\r\n  CUSTOMER: \"مشتری\",\r\n  DRIVER: \"راننده\",\r\n};\r\n\r\nconst AccountsNumber = () => {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"name\");\r\n  const [search, setSearch] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [person, setPerson] = useState(\"ALL\");\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const getCardRequest = useApi({\r\n    method: \"get\",\r\n    url: `account?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n      personType: person,\r\n    })}`,\r\n  });\r\n\r\n  const onDismissDetail = () => {\r\n    DialogActions.hide({ name: \"personAccount\" });\r\n  };\r\n\r\n  const handleDetail = (row) => {\r\n    DialogActions.show({\r\n      title: `حساب های ${row.personName}`,\r\n      component: <Detail onDismiss={onDismissDetail} detail={row} />,\r\n      name: \"personAccount\",\r\n      size: \"6\",\r\n      confirm: false,\r\n      disableCloseButton: false,\r\n    });\r\n  };\r\n\r\n  const getData = async () => {\r\n    const cardList = await getCardRequest.execute();\r\n    setList(cardList.data);\r\n    setTotal(cardList.total);\r\n  };\r\n\r\n  const onChangeTab = (e, value) => {\r\n    setPerson(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize, person]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.CASH_LIST) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getCardRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title=\"لیست حساب های بانکی\"\r\n                    handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                  />\r\n                  <div className={classes.tab}>\r\n                    <Tabs\r\n                      value={person}\r\n                      onChange={onChangeTab}\r\n                      indicatorColor=\"primary\"\r\n                      textColor=\"primary\"\r\n                      centered\r\n                      variant=\"fullWidth\"\r\n                    >\r\n                      <Tab label=\"کل اشخاص \" value=\"ALL\" />\r\n                      <Tab label=\"مشتریان\" value=\"CUSTOMER\" />\r\n                      <Tab label=\"پرسنل\" value=\"EMPLOYEE\" />\r\n                      <Tab label=\"رانندگان\" value=\"DRIVER\" />\r\n                    </Tabs>\r\n                  </div>\r\n\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                            >\r\n                              <TableCell padding=\"none\">\r\n                                {row.personName}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {PERSON_TYPE[row.personType]}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.bank && (\r\n                                  <img\r\n                                    style={{ width: 30, height: 30 }}\r\n                                    alt={row.bank.name}\r\n                                    src={`${Constant.API_ADDRESS}/${row.bank.logo}`}\r\n                                  />\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.accountCardNumber}\r\n                              </TableCell>\r\n\r\n                              <TableCell padding=\"none\">\r\n                                <i\r\n                                  className=\"material-icons-round\"\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                  onClick={() => handleDetail(row)}\r\n                                >\r\n                                  link\r\n                                </i>\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getCardRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AccountsNumber;\r\n","import React from \"react\";\r\nimport { Grid, TextField, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { persianNumber } from \"../../helpers/utils\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  img: {\r\n    width: 35,\r\n    height: 35,\r\n    borderRadius: 50,\r\n    marginLeft: 20,\r\n  },\r\n  icon: {\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: 50,\r\n    cursor: \"pointer\",\r\n  },\r\n  grid: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nexport default function MainDetail({ data, type, onDismiss }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          disabled\r\n          label={`${data.paymentType === \"INOME\" ? \"دریافت از\" : \"پرداخت به\"}`}\r\n          value={data.name || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          disabled\r\n          label=\"تاریخ\"\r\n          value={\r\n            persianNumber(new Date(data.date).toLocaleDateString(\"fa-IR\")) ||\r\n            \" \"\r\n          }\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          disabled\r\n          label=\"مبلغ\"\r\n          value={persianNumber(data.price) || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n      </Grid>\r\n      {(type === \"BANK\" || type === \"CHEQUE\") && (\r\n        <Grid item xs={12} style={{ display: \"flex\" }}>\r\n          <TextField\r\n            disabled\r\n            label=\"بانک\"\r\n            value={data.detail.bank?.name || \" \"}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            size=\"small\"\r\n          />\r\n          <img\r\n            src={`${Constant.API_ADDRESS}/${data.detail.bank.logo}`}\r\n            alt={data.detail.bank?.logo}\r\n            className={classes.img}\r\n          />\r\n        </Grid>\r\n      )}\r\n      {type === \"BANK\" && (\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            disabled\r\n            label=\"نوع تراکنش\"\r\n            value={data.detail.transactionType || \" \"}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            size=\"small\"\r\n          />\r\n        </Grid>\r\n      )}\r\n      {type === \"BANK\" && (\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            disabled\r\n            label=\"شماره پیگیری\"\r\n            value={persianNumber(data.detail.trackingCode) || \" \"}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            size=\"small\"\r\n          />\r\n        </Grid>\r\n      )}\r\n      {type === \"CHEQUE\" && (\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            disabled\r\n            label=\"شماره چک\"\r\n            value={persianNumber(data.detail.chequeNumber) || \" \"}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            size=\"small\"\r\n          />\r\n        </Grid>\r\n      )}\r\n      {type === \"CHEQUE\" && (\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            disabled\r\n            label=\"تاریخ سررسید\"\r\n            value={\r\n              persianNumber(\r\n                new Date(data.detail.chequeDueDate).toLocaleDateString(\"fa-IR\"),\r\n              ) || \" \"\r\n            }\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            size=\"small\"\r\n          />\r\n        </Grid>\r\n      )}\r\n\r\n      {type === \"CHEQUE\" && (\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            disabled\r\n            label=\"در وجه\"\r\n            value={data.detail.chequePayTo || \" \"}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            size=\"small\"\r\n          />\r\n        </Grid>\r\n      )}\r\n\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          disabled\r\n          label=\"توضیحات\"\r\n          value={data.description || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n      </Grid>\r\n\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n          بازگشت\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport {\r\n  getQueryString,\r\n  convertParamsToQueryString,\r\n  hasPermission,\r\n  persianNumber,\r\n} from \"../../helpers/utils\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport PaymentDetail from \"./paymentDetail\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"date\",\r\n    label: \"تاریخ\",\r\n  },\r\n  {\r\n    id: \"name\",\r\n    label: \"نام شخص\",\r\n  },\r\n  {\r\n    id: \"type\",\r\n    label: \"نوع\",\r\n  },\r\n  {\r\n    id: \"price\",\r\n    label: \"مبلغ\",\r\n  },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nconst types = {\r\n  CASH: \"نقد\",\r\n  CHEQUE: \"چک\",\r\n  BANK: \"بانک\",\r\n};\r\n\r\nconst PaymentReport = () => {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"price\");\r\n  const [search, setSearch] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const cashId = getQueryString(\"cashId\");\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const history = useHistory();\r\n  const [type, setPerson] = useState(\"CASH\");\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n  };\r\n\r\n  const getPaymentByCashRequest = useApi({\r\n    method: \"get\",\r\n    url: `payment/cashdesk?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n      type,\r\n    })}`,\r\n  });\r\n\r\n  const onDismissDetail = () => {\r\n    DialogActions.hide({ name: \"detail\" });\r\n  };\r\n\r\n  const handleDetail = (row) => {\r\n    DialogActions.show({\r\n      title: `${\r\n        row.paymentType === \"INCOME\" ? \"جزییات دریافت\" : \"جزییات پرداخت\"\r\n      } `,\r\n      component: (\r\n        <PaymentDetail onDismiss={onDismissDetail} data={row} type={row.type} />\r\n      ),\r\n      name: \"detail\",\r\n      size: \"6\",\r\n      confirm: false,\r\n      disableCloseButton: false,\r\n    });\r\n  };\r\n\r\n  const getData = async () => {\r\n    const paymentList = await getPaymentByCashRequest.execute(null, cashId);\r\n    setList(paymentList.data);\r\n    setTotal(paymentList.total);\r\n  };\r\n\r\n  const onChangeTab = (e, value) => {\r\n    setPerson(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize, type]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.CASH_LIST) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getPaymentByCashRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title=\"لیست تراکنش های صندوق \"\r\n                    handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                  />\r\n                  <div className={classes.tab}>\r\n                    <Tabs\r\n                      value={type}\r\n                      onChange={onChangeTab}\r\n                      indicatorColor=\"primary\"\r\n                      textColor=\"primary\"\r\n                      centered\r\n                      variant=\"fullWidth\"\r\n                    >\r\n                      <Tab label=\"نقدی\" value=\"CASH\" />\r\n                      <Tab label=\"بانکی\" value=\"BANK\" />\r\n                      <Tab label=\"چک\" value=\"CHEQUE\" />\r\n                    </Tabs>\r\n                  </div>\r\n\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                            >\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  new Date(row.date).toLocaleDateString(\r\n                                    \"fa-IR\",\r\n                                  ),\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\"> {row.name}</TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {types[row.type]}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  Number(row.price).toLocaleString(),\r\n                                )}\r\n                              </TableCell>\r\n\r\n                              <TableCell padding=\"none\">\r\n                                <i\r\n                                  className=\"material-icons-round\"\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                  onClick={() => handleDetail(row)}\r\n                                >\r\n                                  feed\r\n                                </i>\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getPaymentByCashRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaymentReport;\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n}));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Grid, TextField, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport Constant from \"../../helpers/constant\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  img: {\r\n    width: 35,\r\n    height: 35,\r\n    borderRadius: 50,\r\n    marginLeft: 20,\r\n  },\r\n  icon: {\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: 50,\r\n    cursor: \"pointer\",\r\n  },\r\n  grid: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nexport default function MainDetail({ detail, onDismiss }) {\r\n  const classes = useStyles();\r\n  const [copyState, setCopyState] = useState();\r\n\r\n  const onCopy = (copyField) => {\r\n    setCopyState(copyField);\r\n  };\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12} className={classes.grid}>\r\n        <TextField\r\n          disabled\r\n          label=\"بانک\"\r\n          value={detail.bank.name || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n        <img\r\n          src={`${Constant.API_ADDRESS}/${detail.bank.logo}`}\r\n          alt={detail.bank.logo}\r\n          className={classes.img}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.grid}>\r\n        <TextField\r\n          disabled\r\n          label=\"شماره کارت\"\r\n          value={detail.accountCardNumber || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n        <CopyToClipboard\r\n          onCopy={() => onCopy(\"accountCardNumber\")}\r\n          text={detail.accountCardNumber}\r\n        >\r\n          <i\r\n            className=\"material-icons-round\"\r\n            style={{ marginRight: 20, cursor: \"pointer\" }}\r\n          >\r\n            {copyState === \"accountCardNumber\" ? \"done\" : \"copy\"}\r\n          </i>\r\n        </CopyToClipboard>\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.grid}>\r\n        <TextField\r\n          disabled\r\n          label=\"شماره حساب\"\r\n          value={detail.accountNumber || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n        <CopyToClipboard\r\n          onCopy={() => onCopy(\"accountNumber\")}\r\n          text={detail.accountNumber}\r\n        >\r\n          <i\r\n            className=\"material-icons-round\"\r\n            style={{ marginRight: 20, cursor: \"pointer\" }}\r\n          >\r\n            {copyState === \"accountNumber\" ? \"done\" : \"copy\"}\r\n          </i>\r\n        </CopyToClipboard>\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.grid}>\r\n        <TextField\r\n          disabled\r\n          label=\"شماره شبا\"\r\n          value={detail.accountShaba || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n        <CopyToClipboard\r\n          onCopy={() => onCopy(\"accountShaba\")}\r\n          text={detail.accountShaba}\r\n        >\r\n          <i\r\n            className=\"material-icons-round\"\r\n            style={{ marginRight: 20, cursor: \"pointer\" }}\r\n          >\r\n            {copyState === \"accountShaba\" ? \"done\" : \"copy\"}\r\n          </i>\r\n        </CopyToClipboard>\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          disabled\r\n          label=\"توضیحات\"\r\n          value={detail.description || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n      </Grid>\r\n\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n          بازگشت\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport {\r\n  convertParamsToQueryString,\r\n  hasPermission,\r\n  persianNumber,\r\n} from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport Detail from \"./detail\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    label: \"نام شخص\",\r\n  },\r\n  {\r\n    id: \"Date\",\r\n    label: \"تاریخ\",\r\n  },\r\n  {\r\n    id: \"price\",\r\n    label: \"مانده وام\",\r\n  },\r\n  { id: \"personType\", label: \"نوع شخص\" },\r\n  // { id: \"action\" },\r\n];\r\nconst PERSON_TYPE = {\r\n  EMPLOYEE: \"پرسنل\",\r\n  CUSTOMER: \"مشتری\",\r\n  DRIVER: \"راننده\",\r\n};\r\n\r\nconst MainList = () => {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"date\");\r\n  const [search, setSearch] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const history = useHistory();\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onAdd = () => {\r\n    history.push(`/app/payment-detail?type=OUTCOME&loan=true`);\r\n  };\r\n\r\n  const getLoanRequest = useApi({\r\n    method: \"get\",\r\n    url: `loan?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n    })}`,\r\n  });\r\n\r\n  const onDismissDetail = () => {\r\n    DialogActions.hide({ name: \"detail\" });\r\n  };\r\n\r\n  const handleDetail = (row) => {\r\n    // DialogActions.show({\r\n    //   title: `حساب های ${row.personName}`,\r\n    //   component: <Detail onDismiss={onDismissDetail} detail={row} />,\r\n    // name:\"detail\",\r\n    //   size: \"6\",\r\n    //   confirm: false,\r\n    //   disableCloseButton: false,\r\n    // });\r\n  };\r\n\r\n  const getData = async () => {\r\n    const cardList = await getLoanRequest.execute();\r\n    setList(cardList.data);\r\n    setTotal(cardList.total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.CASH_LIST) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getLoanRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title=\"لیست وام ها\"\r\n                    onAdd={onAdd}\r\n                    handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                  />\r\n\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                            >\r\n                              <TableCell padding=\"none\">\r\n                                {row.personName}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  new Date(row.date).toLocaleDateString(\r\n                                    \"fa-IR\",\r\n                                  ),\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  Number(row.price).toLocaleString(),\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {PERSON_TYPE[row.personType]}\r\n                              </TableCell>\r\n\r\n                              {/* <TableCell padding=\"none\">\r\n                                <i\r\n                                  className=\"material-icons-round\"\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                  onClick={() => handleDetail(row)}\r\n                                >\r\n                                  link\r\n                                </i>\r\n                              </TableCell> */}\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getLoanRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainList;\r\n","import React, { useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\n\r\nimport useStyles from \"./styles\";\r\nimport Header from \"../Header/Header\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport Dashboard from \"../../pages/dashboard/Dashboard\";\r\nimport UserList from \"../../pages/users\";\r\nimport UserDetail from \"../../pages/users/detail\";\r\nimport CustomerList from \"../../pages/customers\";\r\nimport CustomerDetail from \"../../pages/customers/detail\";\r\nimport CustomerTransaction from \"../../pages/customers/transaction\";\r\nimport EmployeeList from \"../../pages/employee\";\r\nimport EmployeeDetail from \"../../pages/employee/detail\";\r\nimport InvoiceList from \"../../pages/invoice\";\r\nimport InvoiceDetail from \"../../pages/invoice/detail\";\r\nimport FastInvoice from \"../../pages/invoice/fastInvoice\";\r\nimport ChequeList from \"../../pages/cheque\";\r\nimport ChequeDetail from \"../../pages/cheque/detail\";\r\nimport PaymentList from \"../../pages/payment\";\r\nimport PaymentDetail from \"../../pages/payment/detail\";\r\nimport ProductList from \"../../pages/product\";\r\nimport ProductDetail from \"../../pages/product/detail\";\r\nimport DepotList from \"../../pages/depot\";\r\nimport DepotDetail from \"../../pages/depot/detail\";\r\nimport CashList from \"../../pages/cash\";\r\nimport CashDetail from \"../../pages/cash/detail\";\r\nimport DriverList from \"../../pages/driver\";\r\nimport DriverDetail from \"../../pages/driver/detail\";\r\nimport Setting from \"../../pages/setting\";\r\nimport Category from \"../../pages/category\";\r\nimport Traffic from \"../../pages/traffic\";\r\nimport TrafficDetail from \"../../pages/traffic/register\";\r\nimport { useLayoutState } from \"../../context/LayoutContext\";\r\nimport EmployeeLog from \"../../pages/employee/log\";\r\nimport AccountsNumber from \"../../pages/accountNumber/list\";\r\nimport CashPaymentReport from \"../../pages/cash/paymentReport\";\r\nimport LoanList from \"../../pages/loan\";\r\nimport LoanDetail from \"../../pages/loan/detail\";\r\nimport ProductTransfer from \"../../pages/product/transfer\";\r\n\r\nfunction Layout(props) {\r\n  var classes = useStyles();\r\n\r\n  var layoutState = useLayoutState();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <>\r\n        <Header history={props.history} />\r\n        <Sidebar />\r\n        <div\r\n          className={classnames(classes.content, {\r\n            [classes.contentShift]: layoutState.isSidebarOpened,\r\n          })}\r\n        >\r\n          <div className={classes.fakeToolbar} />\r\n          <Switch>\r\n            <Route path=\"/app/dashboard\" component={Dashboard} />\r\n\r\n            <Route path=\"/app/user-list\" component={UserList} />\r\n            <Route path=\"/app/user-detail\" component={UserDetail} />\r\n\r\n            <Route path=\"/app/customer-list\" component={CustomerList} />\r\n            <Route path=\"/app/customer-detail\" component={CustomerDetail} />\r\n            <Route\r\n              path=\"/app/person-transaction\"\r\n              component={CustomerTransaction}\r\n            />\r\n\r\n            <Route path=\"/app/employee-list\" component={EmployeeList} />\r\n            <Route path=\"/app/employee-detail\" component={EmployeeDetail} />\r\n            <Route path=\"/app/employee-log\" component={EmployeeLog} />\r\n\r\n            <Route path=\"/app/driver-list\" component={DriverList} />\r\n            <Route path=\"/app/driver-detail\" component={DriverDetail} />\r\n\r\n            <Route path=\"/app/cash-list\" component={CashList} />\r\n            <Route path=\"/app/cash-detail\" component={CashDetail} />\r\n            <Route path=\"/app/cash-transaction\" component={CashPaymentReport} />\r\n\r\n            <Route path=\"/app/cheque-list\" component={ChequeList} />\r\n            <Route path=\"/app/cheque-detail\" component={ChequeDetail} />\r\n\r\n            <Route path=\"/app/cheque-list\" component={ChequeList} />\r\n            <Route path=\"/app/cheque-detail\" component={ChequeDetail} />\r\n\r\n            <Route path=\"/app/loan-list\" component={LoanList} />\r\n            <Route path=\"/app/loan-detail\" component={LoanDetail} />\r\n\r\n            <Route path=\"/app/invoice-list\" component={InvoiceList} />\r\n            <Route path=\"/app/invoice-detail\" component={InvoiceDetail} />\r\n            <Route path=\"/app/fast_invoice\" component={FastInvoice} />\r\n\r\n            <Route path=\"/app/payment-list\" component={PaymentList} />\r\n            <Route path=\"/app/payment-detail\" component={PaymentDetail} />\r\n\r\n            <Route path=\"/app/product-list\" component={ProductList} />\r\n            <Route path=\"/app/product-detail\" component={ProductDetail} />\r\n            <Route path=\"/app/product-transfer\" component={ProductTransfer} />\r\n\r\n            <Route path=\"/app/depot-list\" component={DepotList} />\r\n            <Route path=\"/app/depot-detail\" component={DepotDetail} />\r\n\r\n            <Route path=\"/app/setting\" component={Setting} />\r\n            <Route path=\"/app/category\" component={Category} />\r\n\r\n            <Route path=\"/app/traffic\" component={Traffic} />\r\n            <Route path=\"/app/traffic-detail\" component={TrafficDetail} />\r\n            <Route path=\"/app/accountNumber\" component={AccountsNumber} />\r\n          </Switch>\r\n        </div>\r\n      </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles(theme => ({\r\n  container: {\r\n    height: \"100vh\",\r\n    width: \"100vw\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: theme.palette.primary.main,\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n  },\r\n  logotype: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginBottom: theme.spacing(12),\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  logotypeText: {\r\n    fontWeight: 500,\r\n    color: \"white\",\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  logotypeIcon: {\r\n    width: 70,\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  paperRoot: {\r\n    boxShadow: theme.customShadows.widgetDark,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n    paddingLeft: theme.spacing(6),\r\n    paddingRight: theme.spacing(6),\r\n    maxWidth: 404,\r\n  },\r\n  textRow: {\r\n    marginBottom: theme.spacing(10),\r\n    textAlign: \"center\",\r\n  },\r\n  errorCode: {\r\n    fontSize: 148,\r\n    fontWeight: 600,\r\n  },\r\n  safetyText: {\r\n    fontWeight: 300,\r\n    color: theme.palette.text.hint,\r\n  },\r\n  backButton: {\r\n    boxShadow: theme.customShadows.widget,\r\n    textTransform: \"none\",\r\n    fontSize: 22,\r\n  },\r\n}));\r\n","export default __webpack_public_path__ + \"static/media/logo.d0e27845.svg\";","import React from \"react\";\r\nimport { Grid, Paper, Typography, Button } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// logo\r\nimport logo from \"./logo.svg\";\r\n\r\nexport default function Error() {\r\n  var classes = useStyles();\r\n\r\n  return (\r\n    <Grid container className={classes.container}>\r\n      <div className={classes.logotype}>\r\n        <img className={classes.logotypeIcon} src={logo} alt=\"logo\" />\r\n        <Typography variant=\"h3\" color=\"white\" className={classes.logotypeText}>\r\n          Material Admin\r\n        </Typography>\r\n      </div>\r\n      <Paper classes={{ root: classes.paperRoot }}>\r\n        <Typography\r\n          variant=\"h1\"\r\n          color=\"primary\"\r\n          className={classnames(classes.textRow, classes.errorCode)}\r\n        >\r\n          404\r\n        </Typography>\r\n        <Typography variant=\"h5\" color=\"primary\" className={classes.textRow}>\r\n          Oops. Looks like the page you're looking for no longer exists\r\n        </Typography>\r\n        <Typography\r\n          variant=\"h6\"\r\n          color=\"text\"\r\n          colorBrightness=\"secondary\"\r\n          className={classnames(classes.textRow, classes.safetyText)}\r\n        >\r\n          But we're here to bring you back to safety\r\n        </Typography>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          component={Link}\r\n          to=\"/\"\r\n          size=\"large\"\r\n          className={classes.backButton}\r\n        >\r\n          Back to Home\r\n        </Button>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  container: {\r\n    height: \"100vh\",\r\n    width: \"100vw\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    overflow: \"hidden\",\r\n  },\r\n  title: {\r\n    display: \"flex\",\r\n    alignItems: \"baseLine\",\r\n    marginBottom: 30,\r\n    \"& h4\": {\r\n      margin: \"0 10px\",\r\n    },\r\n    \"& hr\": {\r\n      flex: 1,\r\n    },\r\n  },\r\n  backgroundImage: {\r\n    position: \"absolute\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    filter: \"brightness(0.5)\",\r\n  },\r\n  logotypeContainer: {\r\n    position: \"relative\",\r\n    width: \"70%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: \"50%\",\r\n    },\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  logotypeImage: {\r\n    width: 165,\r\n    marginBottom: theme.spacing(4),\r\n    position: \"relative\",\r\n  },\r\n  logotypeText: {\r\n    position: \"relative\",\r\n    color: \"white\",\r\n    fontWeight: 500,\r\n    fontSize: 84,\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      fontSize: 48,\r\n    },\r\n  },\r\n  formContainer: {\r\n    width: \"30%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: \"50%\",\r\n    },\r\n  },\r\n  form: {\r\n    width: 320,\r\n  },\r\n  tab: {\r\n    fontWeight: 400,\r\n    fontSize: 18,\r\n  },\r\n  greeting: {\r\n    fontWeight: 500,\r\n    textAlign: \"center\",\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  subGreeting: {\r\n    fontWeight: 500,\r\n    textAlign: \"center\",\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  googleButton: {\r\n    marginTop: theme.spacing(6),\r\n    boxShadow: theme.customShadows.widget,\r\n    backgroundColor: \"white\",\r\n    width: \"100%\",\r\n    textTransform: \"none\",\r\n  },\r\n  googleButtonCreating: {\r\n    marginTop: 0,\r\n  },\r\n  googleIcon: {\r\n    width: 30,\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  creatingButtonContainer: {\r\n    marginTop: theme.spacing(2.5),\r\n    height: 46,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  createAccountButton: {\r\n    height: 46,\r\n    textTransform: \"none\",\r\n  },\r\n  formDividerContainer: {\r\n    marginTop: theme.spacing(4),\r\n    marginBottom: theme.spacing(4),\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  formDividerWord: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  formDivider: {\r\n    flexGrow: 1,\r\n    height: 1,\r\n    backgroundColor: theme.palette.text.hint + \"40\",\r\n  },\r\n  errorMessage: {\r\n    textAlign: \"center\",\r\n  },\r\n  textFieldUnderline: {\r\n    \"&:before\": {\r\n      borderBottomColor: theme.palette.primary.light,\r\n    },\r\n    \"&:after\": {\r\n      borderBottomColor: theme.palette.primary.main,\r\n    },\r\n    \"&:hover:before\": {\r\n      borderBottomColor: `${theme.palette.primary.light} !important`,\r\n    },\r\n  },\r\n  textField: {\r\n    borderBottomColor: theme.palette.background.light,\r\n  },\r\n  formButtons: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(4),\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  forgetButton: {\r\n    textTransform: \"none\",\r\n    fontWeight: 400,\r\n  },\r\n  loginLoader: {\r\n    marginLeft: theme.spacing(4),\r\n  },\r\n  copyright: {\r\n    marginTop: theme.spacing(4),\r\n    whiteSpace: \"nowrap\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      position: \"absolute\",\r\n      bottom: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n","export default __webpack_public_path__ + \"static/media/logo.d0e27845.svg\";","export default __webpack_public_path__ + \"static/media/111.788f87ef.jpg\";","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  CircularProgress,\r\n  Typography,\r\n  Button,\r\n  TextField,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport useStyles from \"./styles\";\r\nimport logo from \"./logo.svg\";\r\nimport back from \"./111.jpg\";\r\nimport { useUserDispatch, loginUser } from \"../../context/UserContext\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport unitAcion from \"../../redux/actions/unitAction\";\r\n\r\nfunction Login(props) {\r\n  const classes = useStyles();\r\n  const userDispatch = useUserDispatch();\r\n  const loginRequest = useApi({\r\n    method: \"post\",\r\n    url: \"auth/login\",\r\n  });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const [usernameValue, setUsernameValue] = useState(\"\");\r\n  const [passwordValue, setPasswordValue] = useState(\"\");\r\n\r\n  const onPressEnter = function (event) {\r\n    if (event.which === 13 && passwordValue && usernameValue) {\r\n      loginUser(\r\n        loginRequest,\r\n        userDispatch,\r\n        usernameValue,\r\n        passwordValue,\r\n        props.history,\r\n        setIsLoading,\r\n        setError,\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    unitAcion.setProdcutUnit();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container className={classes.container}>\r\n      <div className={classes.logotypeContainer}>\r\n        <img src={back} alt=\"logo\" className={classes.backgroundImage} />\r\n        <img src={logo} alt=\"logo\" className={classes.logotypeImage} />\r\n        <Typography className={classes.logotypeText}>\r\n          سیستم یکپارچه مدیریت\r\n        </Typography>\r\n      </div>\r\n      <div className={classes.formContainer}>\r\n        <div className={classes.form}>\r\n          <React.Fragment>\r\n            <div className={classes.title}>\r\n              <Divider />\r\n              <Typography variant=\"h4\" className={classes.greeting}>\r\n                ورود به سیستم\r\n              </Typography>\r\n              <Divider />\r\n            </div>\r\n\r\n            <TextField\r\n              label=\"نام کاربری\"\r\n              variant=\"outlined\"\r\n              id=\"username\"\r\n              InputProps={{\r\n                classes: {\r\n                  input: classes.textField,\r\n                },\r\n              }}\r\n              value={usernameValue}\r\n              onChange={(e) => setUsernameValue(e.target.value)}\r\n              margin=\"normal\"\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              label=\"رمز عبور \"\r\n              variant=\"outlined\"\r\n              id=\"password\"\r\n              InputProps={{\r\n                classes: {\r\n                  input: classes.textField,\r\n                },\r\n              }}\r\n              value={passwordValue}\r\n              onChange={(e) => setPasswordValue(e.target.value)}\r\n              margin=\"normal\"\r\n              type=\"password\"\r\n              fullWidth\r\n              onKeyPress={onPressEnter}\r\n            />\r\n            <div className={classes.formButtons}>\r\n              {isLoading ? (\r\n                <CircularProgress size={26} className={classes.loginLoader} />\r\n              ) : (\r\n                <Button\r\n                  fullWidth\r\n                  disabled={\r\n                    usernameValue.length === 0 || passwordValue.length === 0\r\n                  }\r\n                  onClick={() =>\r\n                    loginUser(\r\n                      loginRequest,\r\n                      userDispatch,\r\n                      usernameValue,\r\n                      passwordValue,\r\n                      props.history,\r\n                      setIsLoading,\r\n                      setError,\r\n                    )\r\n                  }\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  size=\"large\"\r\n                >\r\n                  ورود به سیستم\r\n                </Button>\r\n              )}\r\n              {/* <Button\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                className={classes.forgetButton}\r\n              >\r\n                بازیابی رمز عبور\r\n              </Button> */}\r\n            </div>\r\n          </React.Fragment>\r\n        </div>\r\n        <Typography\r\n          color=\"primary\"\r\n          className={classes.copyright}\r\n          variant=\"caption\"\r\n        >\r\n          تمامی حقوق مادی و معنوی این اثر متعلق به شرکت المان می باشد\r\n        </Typography>\r\n      </div>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default withRouter(Login);\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  HashRouter,\r\n} from \"react-router-dom\";\r\n\r\nimport Layout from \"./Layout\";\r\nimport Error from \"../pages/error\";\r\nimport Login from \"../pages/login\";\r\nimport { useUserState } from \"../context/UserContext\";\r\nexport default function App() {\r\n  var { isAuthenticated } = useUserState();\r\n\r\n  return (\r\n    <HashRouter>\r\n      <Switch>\r\n        <Route exact path=\"/\" render={() => <Redirect to=\"/app/dashboard\" />} />\r\n        <Route\r\n          exact\r\n          path=\"/app\"\r\n          render={() => <Redirect to=\"/app/dashboard\" />}\r\n        />\r\n\r\n        <PrivateRoute path=\"/app\" component={Layout} />\r\n        <PublicRoute path=\"/login\" component={Login} />\r\n        <Route component={Error} />\r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n\r\n  // #######################################################################\r\n\r\n  function PrivateRoute({ component, ...rest }) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={(props) =>\r\n          isAuthenticated ? (\r\n            React.createElement(component, props)\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: {\r\n                  from: props.location,\r\n                },\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  function PublicRoute({ component, ...rest }) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={(props) =>\r\n          isAuthenticated ? (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/\",\r\n              }}\r\n            />\r\n          ) : (\r\n            React.createElement(component, props)\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { create } from \"jss\";\r\nimport rtl from \"jss-rtl\";\r\nimport { StylesProvider, jssPreset } from \"@material-ui/core/styles\";\r\n\r\n// Configure JSS\r\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\r\n\r\nfunction RTL(props) {\r\n  return <StylesProvider jss={jss}>{props.children}</StylesProvider>;\r\n}\r\n\r\nexport default RTL;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./assets/css/font.css\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport { CssBaseline } from \"@material-ui/core\";\r\nimport { Provider } from \"react-redux\";\r\nimport Alert from \"./components/Alert\";\r\nimport Dialog from \"./components/Modal\";\r\nimport Themes from \"./themes\";\r\nimport App from \"./components/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { LayoutProvider } from \"./context/LayoutContext\";\r\nimport { UserProvider } from \"./context/UserContext\";\r\nimport store from \"./redux/store\";\r\nimport RTLProvider from \"./themes/RTL\";\r\nimport jMoment from \"moment-jalaali\";\r\nimport JalaliUtils from \"@date-io/jalaali\";\r\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\n\r\njMoment.loadPersian({ dialect: \"persian-modern\", usePersianDigits: true });\r\n\r\nReactDOM.render(\r\n  <MuiPickersUtilsProvider utils={JalaliUtils} locale=\"fa\">\r\n    <Provider store={store}>\r\n      <LayoutProvider>\r\n        <UserProvider>\r\n          <ThemeProvider theme={Themes.default}>\r\n            <RTLProvider>\r\n              <CssBaseline />\r\n              <App />\r\n              <Alert />\r\n              <Dialog />\r\n            </RTLProvider>\r\n          </ThemeProvider>\r\n        </UserProvider>\r\n      </LayoutProvider>\r\n    </Provider>\r\n  </MuiPickersUtilsProvider>,\r\n  document.getElementById(\"root\"),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}