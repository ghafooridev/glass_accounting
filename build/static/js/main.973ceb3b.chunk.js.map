{"version":3,"sources":["helpers/constant.js","redux/reducers/AlertReducer.js","redux/reducers/dialogReducer.js","services/storage.js","redux/reducers/unitReducer.js","redux/reducers/index.js","redux/store/index.js","redux/actions/AlertAction.js","components/Alert/index.jsx","redux/actions/dialogAction.jsx","components/Modal/Modal.Style.js","components/Modal/index.jsx","themes/default.js","themes/index.js","components/Layout/styles.js","components/Header/styles.js","components/Wrappers/Wrappers.js","context/LayoutContext.js","context/UserContext.js","configs/axios.js","hooks/useApi.js","helpers/utils.js","components/Header/ChangePassword.js","components/Header/Header.js","components/Sidebar/styles.js","components/Sidebar/components/SidebarLink/styles.js","components/Sidebar/components/Dot.js","components/Sidebar/components/SidebarLink/SidebarLink.js","components/Sidebar/Sidebar.js","pages/dashboard/styles.js","components/Widget/styles.js","components/Widget/Widget.js","components/Paper/index.js","pages/dashboard/Dashboard.js","components/Table/TableRowMenu.js","components/Table/TableTop.js","components/Table/TableHead.js","components/Table/TablePaging.js","pages/users/style.js","components/Skeleton/index.js","pages/users/list.js","components/CircularProgress/index.js","pages/users/permission.js","pages/users/detail.js","pages/customers/style.js","pages/customers/filter.js","pages/customers/list.js","components/icons/index.js","pages/customers/account.js","pages/customers/detail.js","pages/customers/transaction.js","pages/employee/style.js","pages/employee/filter.js","pages/employee/list.js","pages/employee/account.js","pages/employee/detail.js","pages/invoice/style.js","pages/invoice/filter.js","pages/invoice/list.js","pages/payment/style.js","pages/payment/personSelector.js","pages/payment/paymnet.js","pages/payment/prePayment.js","pages/invoice/driverPayment.js","pages/invoice/driver.js","redux/actions/unitAction.js","pages/invoice/product.js","pages/invoice/detail.js","pages/invoice/productFastInvoice.js","pages/invoice/fastInvoice.js","pages/cheque/style.js","pages/cheque/cashSelector.js","pages/cheque/spendCheque.js","pages/cheque/list.js","pages/cheque/detail.js","pages/payment/filter.js","pages/payment/list.js","pages/payment/detail.js","pages/product/style.js","pages/product/amountBrif.js","pages/product/transfer.js","pages/product/filter.js","pages/product/list.js","pages/product/amount.js","pages/product/detail.js","pages/depot/style.js","pages/depot/amountBrif.js","pages/depot/list.js","pages/depot/detail.js","pages/cash/style.js","pages/cash/transfer.js","pages/cash/list.js","pages/cash/detail.js","pages/driver/style.js","pages/driver/filter.js","pages/driver/list.js","pages/driver/account.js","pages/driver/detail.js","pages/setting/style.js","pages/setting/list.js","pages/category/style.js","pages/category/detail.js","pages/category/index.js","pages/traffic/register.js","pages/employee/logFilter.js","pages/employee/log.js","pages/accountNumber/style.js","pages/accountNumber/detail.js","pages/accountNumber/list.js","pages/cash/paymentDetail.js","pages/cash/paymentReport.js","pages/loan/style.js","pages/loan/detail.js","pages/loan/list.js","components/Layout/index.js","pages/error/styles.js","pages/error/logo.svg","pages/error/Error.js","pages/login/styles.js","pages/login/logo.svg","pages/login/111.jpg","pages/login/Login.js","components/App.js","serviceWorker.js","themes/RTL.js","index.js"],"names":["Constant","API_ADDRESS","TABLE_PAGE_SIZE","EMPLOYEE_CONTACRT","value","label","TRAFFIC_STATUS","PRESENT","APSET","UNITS_MAP","KILOGRAM","GRAM","TON","BOX","SHEL","CUBICMETERS","PALLET","ACTION_TYPES","SHOW_ALERT","HIDE_ALERT","SHOW_DIALOG","HIDE_DIALOG","LOG_IN_USER","LOG_OUT_USER","GET_UNITS","PERSON_TYPE","EMPLOYEE","CUSTOMER","USER","DRIVER","PERSON","STORAGE","CURRENT_USER","TOKEN","MODE","CURRENT_LINK","PRODUCT_UNITS","VALIDATION","REQUIRED","MOBILE_NUMBER","PASSWORD","CARD_NUMBER","POSITIVE_NUMBER","MESSAGES","ERROR_MESSAGE","BAD_CREDENTIAL","ACCESS_DENIED","PERSON_STATUS","DEBTOR","NODEBT","CREDITOR","PAYMENT_TYPE","INCOME","OUTCOME","ALL","INVOICE_TYPE","SELL","BUY","ALL_PERMISSIONS","ATTENDANCE_DEPOT_SHOW","ATTENDANCE_FACTORY1_SHOW","ATTENDANCE_FACTORY2_SHOW","ATTENDANCE_DEPOT_EDIT","ATTENDANCE_FACTORY1_EDIT","ATTENDANCE_FACTORY2_EDIT","ATTENDANCE_ADMIN","USER_SHOW","USER_EDIT","USER_DELETE","CUSTOMER_SHOW","CUSTOMER_EDIT","CUSTOMER_DELETE","DRIVER_SHOW","DRIVER_EDIT","DRIVER_DELETE","EMPLOYEE_SHOW","EMPLOYEE_EDIT","EMPLOYEE_DELETE","PRODUCT_SHOW","PRODUCT_EDIT","PRODUCT_DELETE","DEPOT_SHOW","DEPOT_EDIT","DEPOT_DELETE","ACCOUNT_SHOW","ACCOUNT_EDIT","ACCOUNT_DELETE","PAYMENT_SHOW","PAYMENT_EDIT","INVOICE_SHOW","INVOICE_EDIT","CASH_DESK_SHOW","CASH_DESK_EDIT","CASH_DESK_DELETE","CHEQUE_SHOW","CHEQUE_EDIT","CHEQUE_DELETE","PERMISSIONS","BANK_TRANSACTION_TYPE","initialState","show","text","component","title","size","disableCloseButton","confirm","names","onAction","Storage","setItem","key","data","JSON","stringify","localStorage","getItem","parse","removeItem","unitReducer","state","action","type","payload","appReducer","combineReducers","alert","option","dialog","filter","item","name","unit","rootReducer","store","createStore","applyMiddleware","thunk","dispatch","Alert","useSelector","handleClose","event","reason","AlertAction","Snackbar","open","autoHideDuration","onClose","elevation","variant","severity","styles","makeStyles","theme","container","padding","overflowX","display","justifyContent","alignItems","borderBottom","palette","grey","light","Modal","classes","console","log","dialogAction","className","overlay","map","Grow","in","Grid","xs","sm","Number","style","boxShadow","borderRadius","position","zIndex","top","backgroundColor","left","transform","Typography","onClick","cursor","Button","color","primary","secondary","warning","success","info","gray","defaultTheme","direction","main","dark","contrastText","danger","hint","background","default","customShadows","widget","widgetDark","widgetWide","overrides","MuiBackdrop","root","MuiMenu","paper","MuiSelect","icon","MuiListItem","button","MuiTouchRipple","child","MuiTableRow","height","MuiTableCell","paddingLeft","head","fontSize","body","PrivateSwitchBase","marginLeft","themes","createMuiTheme","typography","fontFamily","h1","h2","h3","h4","h5","h6","maxWidth","content","flexGrow","spacing","width","minHeight","contentShift","transition","transitions","create","easing","sharp","duration","enteringScreen","fakeToolbar","mixins","toolbar","link","logotype","marginRight","fontWeight","whiteSpace","breakpoints","down","appBar","drawer","leavingScreen","paddingRight","hide","grow","search","fade","common","black","searchFocused","up","searchIcon","right","searchIconOpened","inputRoot","inputInput","messageContent","flexDirection","headerMenu","marginTop","headerMenuList","headerMenuItem","headerMenuButton","headerMenuButtonSandwich","headerMenuButtonCollapse","headerIcon","headerIconCollapse","profileMenu","minWidth","profileMenuUser","profileMenuItem","profileMenuIcon","profileMenuLink","textDecoration","messageNotification","messageNotificationSide","messageNotificationBodySide","sendMessageButton","margin","marginBottom","textTransform","sendButtonIcon","purchaseBtn","chip","allIcon","incomeIcon","useStyles","badge","Badge","children","colorBrightness","props","Styled","createStyled","getColor","useTheme","styledProps","classnames","weight","getFontWeight","getFontSize","brigtness","multiplier","defaultSize","options","withStyles","LayoutStateContext","React","createContext","LayoutDispatchContext","layoutReducer","isSidebarOpened","Error","LayoutProvider","useReducer","Provider","useLayoutState","context","useContext","undefined","useLayoutDispatch","toggleSidebar","UserStateContext","UserDispatchContext","userReducer","isAuthenticated","currentUser","UserProvider","useUserState","useUserDispatch","loginUser","loginRequest","username","password","history","setIsLoading","setError","a","execute","result","storageService","token","push","http","axios","baseURL","constants","headers","interceptors","response","use","config","method","url","error","code","message","Promise","reject","getProperUrl","urlParams","substring","indexOf","length","useApi","args","useState","pending","setPending","setResult","includes","convertParamsToQueryString","params","URLSearchParams","pickBy","identity","toString","getQueryString","param","URL","window","location","href","replace","searchParams","get","getRandomColorFromTheme","colors","Math","floor","random","getRandomNumber","min","max","persianNumber","en","number","t","substr","hasPermission","permit","FREE","permissions","MainDetail","onSubmit","onDismiss","useForm","control","handleSubmit","errors","reset","isPassword","setIsPassword","passwordRef","useRef","changePasswordRequest","onChangeViewClick","id","oldPassword","prePassword","newPassword","render","onChange","TextField","helperText","fullWidth","rules","required","minLength","inputRef","InputProps","endAdornment","InputAdornment","clsx","repassword","validate","current","Header","date","useHistory","layoutState","layoutDispatch","userDispatch","useLocation","mailMenu","setMailMenu","setProfileMenu","cheques","setCheques","getDashboardRequest","getChequeNotify","notify","onSubmitChangePassword","onDismissChangePassword","useEffect","AppBar","Toolbar","IconButton","classNames","ArrowForward","Date","getDay","toLocaleDateString","format","ticking","timezone","e","currentTarget","badgeContent","Menu","Boolean","anchorEl","MenuListProps","disableAutoFocusItem","Divider","MenuItem","chequeDueDate","person","price","Chip","ChangePassword","signOut","menuButton","flexShrink","drawerOpen","drawerClose","mobileBackButton","only","externalLink","linkActive","linkNested","linkIcon","linkIconActive","linkText","linkTextActive","linkTextHidden","opacity","nestedList","sectionTitle","divider","dotBase","dotSmall","dotLarge","Dot","SidebarLink","nested","permission","isOpen","setIsOpen","isLinkActive","pathname","ListItem","linkRoot","disableRipple","ListItemIcon","ListItemText","Link","preventDefault","to","Inbox","Collapse","timeout","unmountOnExit","List","disablePadding","childrenLink","innerWidth","values","md","structure","Constants","withRouter","isPermanent","setPermanent","addEventListener","handleWindowWidthChange","removeEventListener","Drawer","sidebarList","isSmallScreen","datePicker","paperTitle","card","visitsNumberContainer","paddingBottom","progressSection","progressTitle","progress","pieChartLegendWrapper","legendItemContainer","fullHeightBody","tableWidget","progressBarPrimary","progressBarSecondary","performanceLegendWrapper","legendElement","legendElementText","serverOverviewElement","serverOverviewElementText","serverOverviewElementChartWrapper","mainChartBody","mainChartHeader","flexWrap","mainChartHeaderLabels","order","mainChartHeaderLabel","mainChartSelectRoot","borderColor","mainChartSelect","mainChartLegentElement","widgetWrapper","widgetHeader","widgetRoot","widgetBody","noPadding","overflow","moreButton","noWidgetShadow","Widget","noBodyPadding","bodyClass","header","disableWidgetMenu","noHeaderPadding","headerClass","moreButtonRef","isMoreMenuOpen","setMoreMenuOpen","Paper","Fragment","noWrap","bottom","SimplePaper","RADIAN","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","radius","index","x","cos","y","sin","fill","textAnchor","dominantBaseline","toFixed","empoyeeTrafficChart","subject","A","trafficDayliChart","Dashboard","pieChart","setPieChart","paymentChart","setPaymentChart","factorChart","setFactorChart","showFilterBoxPayment","setShowFilterBoxPayment","showFilterBoxFactor","setShowFilterBoxFactor","moment","selectedFromDateFactor","handleFromDateChangeFactor","selectedToDateFactor","handleToDateChangeFactor","selectedFromDatePayment","handleFromDateChangePayment","selectedToDatePayment","handleToDateChangePayment","getPaymentRequest","_d","toISOString","getFactorRequest","onClickPaper","onChnageDateFactor","onChnageDatePayment","getPieChartData","dashboardChart","cashDesks","newCashDesks","getPaymentChart","chart","payments","getFactorChart","invoices","lg","ATTENDANCE_EDIT","PieChart","Pie","startAngle","endAngle","paddingAngle","dataKey","entry","Cell","ATTENDANCE_SHOW","upperTitle","ResponsiveContainer","RadarChart","PolarGrid","PolarAngleAxis","PolarRadiusAxis","Radar","stroke","fillOpacity","labelLine","amount","DatePicker","autoOk","inputVariant","okLabel","cancelLabel","labelFunc","class","LineChart","CartesianGrid","strokeDasharray","XAxis","YAxis","Line","activeDot","r","BarChart","Bar","TableRowMenu","hadleAction","setAnchorEl","keepMounted","PaperProps","maxHeight","ITEM_HEIGHT","hidden","useToolbarStyles","highlight","lighten","box","TableTop","onAdd","FilterComponent","handleSearch","toolbarClass","addButtonClass","minimal","defaultSearch","showSearchText","setShowSearchText","showFilterBox","setShowFilterBox","searchText","setSearchText","target","onKeyDown","Tooltip","TableHeader","orderBy","onRequestSort","headCells","TableHead","TableRow","headCell","TableCell","textAlign","sortDirection","TableSortLabel","active","property","TablePaging","handleChangePage","count","handleChangeRowsPerPage","page","rowsPerPage","TablePagination","rowsPerPageOptions","onChangePage","onChangeRowsPerPage","labelRowsPerPage","backIconButtonText","nextIconButtonText","labelDisplayedRows","from","table","CustomSkeleton","headCount","Skeleton","MainList","setOrder","setOrderBy","setPage","pageSize","setPageSize","list","setList","total","setTotal","getUserRequest","deleteUseRequest","handleAction","types","edit","delete","DialogActions","getData","userList","Slide","TableContainer","Table","rowCount","TableBody","row","isAdmin","hover","tabIndex","tagName","onClicKRow","firstName","lastName","mobile","phone","colSpan","newPage","Circular","flex","heght","CircularProgress","Permission","defaultPermissions","userAccess","setUserAccess","overflowY","FormControlLabel","Checkbox","checked","i","handleChange","array","detail","setDetail","addUserRequest","editUserRequest","detailUserRequest","onSubmitPermission","onDismissPermission","getDetail","onShowPermissionDialog","maxLength","address","status","rootSelect","personType","DEBTIOR","Filter","onFilter","category","filterData","setFilterData","prop","select","setCategory","setFilter","getCustomerRequest","decodeURIComponent","GetCustomerCategoryRequest","transaction","customerList","getCategory","categories","properData","addPermission","accountCardNumber","accountRemaining","DeleteIcon","EditIcon","Account","defaultValues","banks","setBanks","bank","selectedBank","setSelectedBank","getBankRequest","getBanks","SelectProps","src","logo","alt","accountNumber","accountShaba","multiline","rows","description","newId","uuid","find","isUpdate","accounts","setAccounts","customerCategory","setCustomerCategory","addCustomerRequest","editCustomerRequest","detailCustomerRequest","customerCategoryRequest","deleteAccountRequest","newAccounts","newData","bankId","allData","setTimeout","onReject","getCustomerCategory","onSubmitAccount","findIndex","accounstTmp","onDismissAccount","onShowDialog","handleDeleteAccount","customerId","PAYMENT_LIST","getTableTitle","toLocaleString","salary","salaryPaperLeft","salaryPaperRight","tab","ABSET","CONTERACT_TYPE","DEPOT","FACTORY1","FACTORY2","setType","getEmployeeRequest","traffic","employeeList","Tabs","indicatorColor","textColor","centered","Tab","contractType","paddingTop","selectedGender","setSelectedGender","selectedContract","setSelectedContract","addEmployeeRequest","editEmployeeRequest","detailEmployeeRequest","gender","RadioGroup","Radio","outgoIcon","selectedButton","selectedPerson","setSelectedPerson","selectedFromDate","handleFromDateChange","selectedToDate","handleToDateChange","customers","setCustomers","getCustomersRequest","onChnageDate","getCustomers","Autocomplete","getOptionLabel","renderInput","invoiceType","getInvoiceRequest","invoiceList","globalCustomer","customer","headCellsCustomer","headCellsPerson","onSelect","setSearch","Payment","paymentType","handleChequeDueDateChange","transactionType","selectedTransaction","setSelectedTransaction","cashes","setCashes","cashDeskId","selectedCash","setSelectedCash","getCashRequest","getCashes","getSelectedBank","getSelectedCash","onDone","cashDesk","onChangeBank","onChangeCash","trackingCode","chequeNumber","bankBranch","chequePayTo","naghdPayHeadCells","cardPayHeadCells","checkPayHeadCells","PrePayment","forwardRef","ref","setPayments","useImperativeHandle","onSubmitPaymentActions","isEdit","handleSubmitEditPayment","handleSubmitAddPayment","newPayments","NAGHD","update","$push","CARD","CHECK","$set","handleDeletePayment","$splice","onDismissPayment","onClickPayment","getButtonTitle","ButtonGroup","startIcon","Accordion","expanded","disabled","AccordionSummary","accordionSummary","expandIcon","heading","AccordionDetails","ProductList","driverId","paymentRef","selectedDrivers","setSelectedDrivers","getDriverRequest","driverList","carName","endIcon","perUnit","showPerUnit","setShowPerUnit","units","unitAction","selectedProduct","setSelectedProduct","depotPicker","setDepotPicker","selectedDepot","setSelectedDepot","fee","productFee","setProductFee","getDepotProductRequest","getProductFeeRequest","getDepotRequest","onChangeSelectedProduct","targetUnit","unitBaseId","productList","onSelectProduct","productId","feeProduct","isEmpty","getDepotPicker","allUnits","getProductUnitPicker","depotId","totalFee","join","totalStock","unitBase","driverHeadCell","selectedDate","handleDateChange","invoiceCategory","setInvoiceCategory","drivers","setDrivers","products","setProducts","invoicePerson","setInvoicePerson","setTotalFee","totalPayment","setTotalPayment","discount","setDiscount","pureFee","setPureFee","totalRemaining","setTotalRemaining","addInvoiceRequest","editInvoiceRequest","detailInvoiceRequest","invoiceCategoryRequest","addInvoicePaymentRequest","getPaymentInvoiceRequest","addPaymentDriverRequest","getInvoiceCategory","onSelectPerson","onDismissPerson","getProperProducts","newProducts","categoryId","invoicePayment","invoiceId","personId","paymentsArray","totalPrice","onSubmitDrivers","onDismissDrivers","onDismissDriverPayments","onSubmitDriverPayments","driverPayments","newDriver","selected","onSubmitProduct","product","ProductsTmp","onDismissProduct","onShowProductDialog","onTotalDriverPayments","reduce","n","factorPay","Hidden","smDown","origin","destination","inventory_2","carPlaque","handlePaymentDriver","handleDeleteDriver","handleDeleteProduct","cashesPrice","chequesPrice","banksPrice","onChangeProductValue","newList","selectedCurrentProduct","productsRef","stocks","trim","CashSelector","chequeId","cashList","SpendCheque","persons","setPersons","setDescription","getPersonsRequest","getPersons","personList","setPaymentType","getChequeRequest","spendRequest","sleepRequest","onSelectCash","cashdeskId","onSubmitSpend","sleep","spend","revert","chequeList","CASH_LIST","cashDeskName","selectedType","setSelectedType","addCashRequest","editCashRequest","detailCashRequest","paymentList","paymentname","loan","isLoan","setIsLoan","setSelectedDate","addPaymentRequest","editPaymentRequest","detailPaymentRequest","stock","depot","deleteIcon","formControl","productName","setUnits","selectedUnit","setSelectedUnit","selectedSource","setSelectedSource","selectedDestination","setSelectedDestination","setAmount","selectedDriver","setSelectedDriver","driverPicker","setDriverPicker","isAddDriver","setIsAddDriver","setNewDriver","setPerUnit","getDriversRequest","categoryIdRequest","transferRequest","addDriverRequest","addTransferPaymentRequest","getDriverCategory","onSubmitTransfer","sourceDepotId","destinationDepotId","newAddedDriver","transferPayments","getDrivers","source","getUnits","getProductRequest","getCategoryRequest","transfer","categoryData","defaultUnit","seletedUnit","seletedDepot","amounts","setAmounts","selectedCategory","setSelectedCategory","addProductRequest","editProductRequest","detailProductRequest","getProductCategoryRequest","onSubmitAmount","amountTmp","onDismissAmount","filterAmounts","filteredAmount","newObject","perunit","getProductCategory","FormControl","InputLabel","htmlFor","Select","handleDeleteAmount","setData","getAmountRequest","getAmount","depotList","depotCategory","setDepotCategory","addDepotRequest","editDepotRequest","detailDepotRequest","depotCategoryRequest","depotCategoryId","getDepotCategory","filterdCashes","sourceId","destinationId","deleteCashRequest","transferCashDesk","onDismissTransfer","CASH_DESK_LIST","driverCategory","setDriverCategory","driverCategoryRequest","editDriverRequest","detailDriverRequest","descendingComparator","b","getComparator","stableSort","comparator","stabilizedThis","el","sort","slice","defaultValue","setLabel","productCategory","setProductCategory","setAction","EditCustomerCategoryRequest","AddCustomerCategoryRequest","GetProductCategoryRequest","EditProductCategoryRequest","AddProductCategoryRequest","GetDepotCategoryRequest","EditDepotCategoryRequest","AddDepotCategoryRequest","GetInvoiceCategoryRequest","EditInvoiceCategoryRequest","AddInvoiceCategoryRequest","GetDriverCategoryRequest","EditDriverCategoryRequest","AddDriverCategoryRequest","invoice","driver","handleAdd","customerCategoryList","depotCategoryList","productCategoryList","invoiceCategoryList","driverCategoryList","addButton","enter","exit","logedEnter","logedExit","register","dateTime","clockConatiner","place","selectedTime","setSelectedTime","isEditTime","setIsEditTime","editTime","setEditTime","registerRequest","getTrafficRequest","editTrafficRequest","checkToday","employeeId","onEdit","tzOffset","getTimezoneOffset","handleTimeChange","onEditTime","time","checkIsAdmin","toDateString","getTimesElement","times","TimePicker","ampm","orientation","openTo","employee","EmployeeLog","sum","setSum","jMoment","locale","startOf","details","fractionTime","overTime","totalTime","totalOverTime","totalFractionTime","img","grid","copyState","setCopyState","onCopy","copyField","AccountsNumber","setPerson","getCardRequest","onDismissDetail","handleDetail","personName","cardList","CASH","CHEQUE","BANK","PaymentReport","cashId","getPaymentByCashRequest","getLoanRequest","Layout","path","UserList","UserDetail","CustomerList","CustomerDetail","CustomerTransaction","EmployeeList","EmployeeDetail","DriverList","DriverDetail","CashList","CashDetail","CashPaymentReport","ChequeList","ChequeDetail","LoanList","LoanDetail","InvoiceList","InvoiceDetail","FastInvoice","PaymentList","PaymentDetail","ProductDetail","ProductTransfer","DepotList","DepotDetail","Setting","Category","Traffic","TrafficDetail","logotypeText","logotypeIcon","paperRoot","textRow","errorCode","safetyText","backButton","backgroundImage","logotypeContainer","logotypeImage","formContainer","form","greeting","subGreeting","googleButton","googleButtonCreating","googleIcon","creatingButtonContainer","createAccountButton","formDividerContainer","formDividerWord","formDivider","errorMessage","textFieldUnderline","borderBottomColor","textField","formButtons","forgetButton","loginLoader","copyright","isLoading","usernameValue","setUsernameValue","passwordValue","setPasswordValue","unitAcion","back","input","onKeyPress","which","App","exact","PrivateRoute","PublicRoute","Login","rest","createElement","hostname","match","jss","plugins","jssPreset","rtl","RTL","StylesProvider","loadPersian","dialect","usePersianDigits","ReactDOM","utils","JalaliUtils","ThemeProvider","Themes","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4PAmKeA,EAnKE,CAEfC,YAAa,8BACbC,gBAAiB,IACjBC,kBAAmB,CACjB,CAAEC,MAAO,WAAYC,MAAO,2DAC5B,CAAED,MAAO,WAAYC,MAAO,2DAC5B,CAAED,MAAO,QAASC,MAAO,mCAE3BC,eAAgB,CACdC,QAAS,2BACTC,MAAO,4BAETC,UAAW,CACTC,SAAU,6CACVC,KAAM,qBACNC,IAAK,eACLC,IAAK,iCACLC,KAAM,eACNC,YAAa,6CACbC,OAAQ,4BAEVC,aAAc,CACZC,WAAY,aACZC,WAAY,aACZC,YAAa,cACbC,YAAa,cACbC,YAAa,cACbC,aAAc,eACdC,UAAW,aAEbC,YAAa,CACXC,SAAU,WACVC,SAAU,WACVC,KAAM,OACNC,OAAQ,SACRC,OAAQ,UAEVC,QAAS,CACPC,aAAc,eACdC,MAAO,QACPC,KAAM,OACNC,aAAc,eACdC,cAAe,iBAEjBC,WAAY,CACVC,SAAU,sGACVC,cAAe,8IACfC,SAAU,oLACVC,YAAa,kIACbC,gBAAiB,oHAEnBC,SAAU,GACVC,cAAe,CACbC,eAAgB,2KAChBC,cAAe,sRAEjBC,cAAe,CACbC,OAAQ,uCACRC,OAAQ,wCACRC,SAAU,wCAEZC,aAAc,CACZC,OAAQ,6CACRC,QAAS,6CACTC,IAAK,gGAEPC,aAAc,CACZC,KAAM,2BACNC,IAAK,4BAEPC,gBAAiB,CACfC,sBAAuB,wBACvBC,yBAA0B,2BAC1BC,yBAA0B,2BAE1BC,sBAAuB,wBACvBC,yBAA0B,2BAC1BC,yBAA0B,2BAE1BC,iBAAkB,mBAClBC,UAAW,YACXC,UAAW,YACXC,YAAa,cACbC,cAAe,gBACfC,cAAe,gBACfC,gBAAiB,kBACjBC,YAAa,cACbC,YAAa,cACbC,cAAe,gBACfC,cAAe,gBACfC,cAAe,gBACfC,gBAAiB,kBACjBC,aAAc,eACdC,aAAc,eACdC,eAAgB,iBAChBC,WAAY,aACZC,WAAY,aACZC,aAAc,eACdC,aAAc,eACdC,aAAc,eACdC,eAAgB,iBAChBC,aAAc,eACdC,aAAc,eACdC,aAAc,eACdC,aAAc,eACdC,eAAgB,iBAChBC,eAAgB,iBAChBC,iBAAkB,mBAClBC,YAAa,eACbC,YAAa,cACbC,cAAe,iBAEjBC,YAAa,CACX,CAAE7F,MAAO,mBAAoBC,MAAO,iGAEpC,CAAED,MAAO,2BAA4BC,MAAO,6HAC5C,CACED,MAAO,2BACPC,MAAO,oIAET,CAAED,MAAO,2BAA4BC,MAAO,6HAC5C,CAAED,MAAO,2BAA4BC,MAAO,mIAC5C,CAAED,MAAO,wBAAyBC,MAAO,qHACzC,CAAED,MAAO,wBAAyBC,MAAO,+GACzC,CAAED,MAAO,eAAgBC,MAAO,yHAChC,CAAED,MAAO,eAAgBC,MAAO,sIAChC,CAAED,MAAO,eAAgBC,MAAO,8EAChC,CAAED,MAAO,eAAgBC,MAAO,0FAChC,CAAED,MAAO,iBAAkBC,MAAO,wEAClC,CAAED,MAAO,iBAAkBC,MAAO,oFAClC,CAAED,MAAO,mBAAoBC,MAAO,kEACpC,CAAED,MAAO,cAAeC,MAAO,sDAC/B,CAAED,MAAO,cAAeC,MAAO,kEAC/B,CAAED,MAAO,gBAAiBC,MAAO,gDACjC,CAAED,MAAO,YAAaC,MAAO,uEAC7B,CAAED,MAAO,YAAaC,MAAO,mFAC7B,CAAED,MAAO,cAAeC,MAAO,iEAC/B,CAAED,MAAO,gBAAiBC,MAAO,2DACjC,CAAED,MAAO,gBAAiBC,MAAO,uEACjC,CAAED,MAAO,kBAAmBC,MAAO,qDACnC,CAAED,MAAO,eAAgBC,MAAO,uEAChC,CAAED,MAAO,eAAgBC,MAAO,mFAChC,CAAED,MAAO,iBAAkBC,MAAO,iEAClC,CAAED,MAAO,gBAAiBC,MAAO,uEACjC,CAAED,MAAO,gBAAiBC,MAAO,mFACjC,CAAED,MAAO,kBAAmBC,MAAO,iEACnC,CAAED,MAAO,cAAeC,MAAO,6EAC/B,CAAED,MAAO,cAAeC,MAAO,yFAC/B,CAAED,MAAO,gBAAiBC,MAAO,uEACjC,CAAED,MAAO,aAAcC,MAAO,uEAC9B,CAAED,MAAO,aAAcC,MAAO,mFAC9B,CAAED,MAAO,eAAgBC,MAAO,iEAChC,CAAED,MAAO,eAAgBC,MAAO,kEAChC,CAAED,MAAO,eAAgBC,MAAO,+EAElC6F,sBAAuB,CACrB,CAAE9F,MAAO,iEAAgBC,MAAO,kEAChC,CAAED,MAAO,0DAAcC,MAAO,2DAC9B,CAAED,MAAO,0DAAcC,MAAO,2DAC9B,CAAED,MAAO,oFAAoBC,MAAO,uF,0BC9JlC8F,EAAe,CACnBC,MAAM,EACNC,KAAM,I,QCHFF,EAAe,CACnBC,MAAM,EACNE,UAAW,KACXC,MAAO,GACPC,KAAM,IACNC,oBAAoB,EACpBC,SAAS,EACTC,MAAO,GACPC,SAAU,cCgBGC,EAzBC,CACdC,QADc,SACNC,EAAKC,GACS,kBAATA,IACTA,EAAOC,KAAKC,UAAUF,IAExBG,aAAaL,QAAQC,EAAKC,IAG5BI,QARc,SAQNL,GACN,IACM3G,EAAQ+G,aAAaC,QAAQL,GAOnC,MANqB,kBAAV3G,EACH6G,KAAKI,MAAMjH,GAEXA,GAMVkH,WApBc,SAoBHP,GACTI,aAAaG,WAAWP,KClBtBZ,EAAec,KAAKI,MACxBR,EAAQO,QAAQpH,EAAS+B,QAAQK,gBAiBpBmF,MAdf,WAAoD,IAA/BC,EAA8B,uDAAtBrB,EAAcsB,EAAQ,uCACjD,OAAQA,EAAOC,MACb,KAAK1H,EAASiB,aAAaO,UACzB,OAAO,2BACFgG,GACAC,EAAOE,SAId,QACE,OAAOH,ICZPI,EAAaC,YAAgB,CACjCC,MJCa,WAAyC,IAA/BN,EAA8B,uDAAtBrB,EAAcsB,EAAQ,uCACrD,OAAQA,EAAOC,MACb,KAAK1H,EAASiB,aAAaC,WACzB,OAAO,uCACFsG,GACAC,EAAOM,QAFZ,IAGE3B,MAAM,IAGV,KAAKpG,EAASiB,aAAaE,WACzB,OAAO,2BACFqG,GADL,IAEEpB,MAAM,IAGV,QACE,OAAOoB,IIhBXQ,OHKa,WAAyC,IAA/BR,EAA8B,uDAAtBrB,EAAcsB,EAAQ,uCACrD,OAAQA,EAAOC,MACb,KAAK1H,EAASiB,aAAaG,YACzB,OAAO,uCACFoG,GACAC,EAAOM,QAFZ,IAGEpB,MAAM,GAAD,mBAAMa,EAAMb,OAAZ,CAAmBc,EAAOM,WAGnC,KAAK/H,EAASiB,aAAaI,YACzB,MAAO,CACLsF,MAAOa,EAAMb,MAAMsB,QAAO,SAACC,GAAD,OAAUA,EAAKC,OAASV,EAAOM,OAAOI,SAGpE,QACE,OAAOX,IGnBXY,SAOaC,EAJK,SAACb,EAAOC,GAC1B,OAAOG,EAAWJ,EAAOC,ICLZa,EAFDC,YAAYF,EAAaG,YAAgBC,MCFxC,WACRV,GACHO,EAAMI,SAAS,CAAEhB,KAAM1H,EAASiB,aAAaC,WAAY6G,YAF9C,aAMXO,EAAMI,SAAS,CAAEhB,KAAM1H,EAASiB,aAAaE,c,OCyBlCwH,EAzBD,WACZ,MAA6BC,aAAY,SAACpB,GAAD,OAAWA,EAAMM,SAAlD1B,EAAR,EAAQA,KAAMC,EAAd,EAAcA,KAAMqB,EAApB,EAAoBA,KAEdmB,EAAc,SAACC,EAAOC,GACX,cAAXA,GAIJC,KAGF,OACE,cAACC,EAAA,EAAD,CAAUC,KAAM9C,EAAM+C,iBAAkB,IAAMC,QAASP,EAAvD,SACE,cAAC,IAAD,CACEQ,UAAW,EACXC,QAAQ,SACRF,QAASP,EACTU,SAAU7B,EAJZ,SAMGrB,OCzBM,WACR0B,GACHO,EAAMI,SAAS,CAAEhB,KAAM1H,EAASiB,aAAaG,YAAa2G,YAF/C,WAKRA,GACHO,EAAMI,SAAS,CAAEhB,KAAM1H,EAASiB,aAAaI,YAAa0G,Y,2CCPjDyB,EAASC,aAAW,SAACC,GAAD,MAAY,CAC3CC,UAAW,CACTC,QAAS,OACTC,UAAW,UAEbtD,MAAO,CACLuD,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZC,aAAa,aAAD,OAAeP,EAAMQ,QAAQC,KAAKC,OAC9CR,QAAS,QAEXlD,QAAS,CACPkD,QAAS,gBACTE,QAAS,OACTC,eAAgB,gBC6ELM,EAxFD,WACZ,IAAMC,EAAUd,IACR7C,EAAUiC,aAAY,SAACpB,GAAD,OAAWA,EAAMQ,UAAvCrB,MAEFyC,EAAU,SAAUlB,GACxBqC,QAAQC,IAAItC,GAEVuC,EADEvC,EACgB,CAAEC,KAAMD,EAAKC,MAEb,CAAEA,KAAM,YAI9B,OASE,aARA,CAQA,OAAKuC,UAAWJ,EAAQK,QAAxB,SACGhE,EAAMiE,KAAI,SAAC1C,GAAD,OACT,cAAC2C,EAAA,EAAD,CAAMC,IAAI,EAAV,SACE,eAACC,EAAA,EAAD,CACEC,GAAI,GACJC,GAAIC,OAAOhD,EAAK1B,MAChBmD,WAAS,EACTwB,MAAO,CACLC,UAAW,8BACXC,aAAc,EACdzB,QAAS,GACT0B,SAAU,QACVC,OAAQ,IACRC,IAAK,MACLC,gBAAiB,OACjBC,KAAM,MACNC,UAAW,wBAbf,UAgBE,eAACZ,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAIN,UAAWJ,EAAQ/D,MAAtC,UACE,cAACqF,EAAA,EAAD,CAAYtC,QAAQ,KAApB,SAA0BpB,EAAK3B,SAC7B2B,EAAKzB,oBACL,mBACEiE,UAAU,iBACVmB,QAAS,kBAAMzC,EAAQlB,IACvBiD,MAAO,CAAEW,OAAQ,WAHnB,uBASF5D,EAAKxB,SACL,cAACqE,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAIN,UAAWJ,EAAQX,UAAtC,SACGzB,EAAK5B,YAGT4B,EAAKxB,SACJ,eAACqE,EAAA,EAAD,CACE7C,MAAI,EACJ8C,GAAI,GACJN,UAAWJ,EAAQ5D,QACnByE,MAAO,CAAEpB,eAAgB,iBAJ3B,UAME,cAACgC,EAAA,EAAD,CACEzC,QAAQ,YACR0C,MAAM,YACNH,QAAS,kBAAMzC,EAAQlB,IAHzB,kDAOA,cAAC6D,EAAA,EAAD,CACEzC,QAAQ,YACR0C,MAAM,UACNH,QAAS3D,EAAKtB,SAHhB,0DC9EHqF,EAAU,UACVC,EAAY,UACZC,EAAU,UACVC,EAAU,UACVC,EAAO,UACPC,EAAO,UA6HLC,EAzHM,CACnBC,UAAW,MAEXtC,QAAS,CACP+B,QAAS,CACPQ,KAAMR,EACN7B,MAAO,UACPsC,KAAMT,GAERC,UAAW,CACTO,KAAMP,EACN9B,MAAO8B,EACPQ,KAAMR,EACNS,aAAc,WAEhBC,OAAQ,CACNH,KAAMP,EACN9B,MAAO8B,EACPQ,KAAMR,EACNS,aAAc,WAEhBR,QAAS,CACPM,KAAMN,EACN/B,MAAO+B,EACPO,KAAMP,GAERC,QAAS,CACPK,KAAML,EACNhC,MAAOgC,EACPM,KAAM,WAERL,KAAM,CACJI,KAAMJ,EACNjC,MAAOiC,EACPK,KAAML,GAERC,KAAM,CACJG,KAAMH,EACNlC,MAAOkC,EACPI,KAAMJ,GAERjG,KAAM,CACJ4F,QAAS,UACTC,UAAW,UACXW,KAAM,WAERC,WAAY,CACVC,QAAS,UACT3C,MAAO,YAGX4C,cAAe,CACbC,OACE,4EACFC,WACE,8EACFC,WACE,8EAEJC,UAAW,CACTC,YAAa,CACXC,KAAM,CACJ7B,gBAAiB,cAGrB8B,QAAS,CACPC,MAAO,CACLpC,UACE,8EAGNqC,UAAW,CACTC,KAAM,CACJ1B,MAAO,YAGX2B,YAAa,CACXL,KAAM,CACJ,aAAc,CACZ7B,gBAAiB,qBACjB,UAAW,CACTA,gBAAiB,aAIvBmC,OAAQ,CACN,mBAAoB,CAClBnC,gBAAiB,aAIvBoC,eAAgB,CACdC,MAAO,CACLrC,gBAAiB,UAGrBsC,YAAa,CACXT,KAAM,CACJU,OAAQ,KAGZC,aAAc,CACZX,KAAM,CACJrD,aAAc,oCACdiE,YAAa,IAEfC,KAAM,CACJC,SAAU,WAEZC,KAAM,CACJD,SAAU,YAGdE,kBAAmB,CACjBhB,KAAM,CACJiB,WAAY,O,SC5FLC,EAJA,CACbzB,QAAS0B,YAAe,2BAAKlC,GAzBb,CAChBmC,WAAY,CACVC,WAAY,WACZC,GAAI,CACFR,SAAU,QAEZS,GAAI,CACFT,SAAU,QAEZU,GAAI,CACFV,SAAU,WAEZW,GAAI,CACFX,SAAU,UAEZY,GAAI,CACFZ,SAAU,YAEZa,GAAI,CACFb,SAAU,iB,0DCrBD3E,gBAAW,SAAAC,GAAK,MAAK,CAClC4D,KAAM,CACJxD,QAAS,OACToF,SAAU,QACVrF,UAAW,UAEbsF,QAAS,CACPC,SAAU,EACVxF,QAASF,EAAM2F,QAAQ,GACvBC,MAAM,sBACNC,UAAW,SAEbC,aAAc,CACZF,MAAM,gBAAD,OAAkB,IAAM5F,EAAM2F,QAAQ,GAAtC,OACLI,WAAY/F,EAAMgG,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQlG,EAAMgG,YAAYE,OAAOC,MACjCC,SAAUpG,EAAMgG,YAAYI,SAASC,kBAGzCC,YAAY,eACPtG,EAAMuG,OAAOC,SAElBC,KAAM,CACJ,sBAAuB,CACrBjC,YAAa,S,2JCvBJzE,gBAAW,SAACC,GAAD,cAAY,CACpC0G,SAAS,aACPpE,MAAO,QACPuC,WAAY7E,EAAM2F,QAAQ,KAC1BgB,YAAa3G,EAAM2F,QAAQ,KAC3BiB,WAAY,IACZlC,SAAU,GACVmC,WAAY,UACX7G,EAAM8G,YAAYC,KAAK,MAAQ,CAC9B3G,QAAS,SAGb4G,OAAQ,CACNpB,MAAO,QACP/D,OAAQ7B,EAAM6B,OAAOoF,OAAS,EAC9BlB,WAAY/F,EAAMgG,YAAYC,OAAO,CAAC,UAAW,CAC/CC,OAAQlG,EAAMgG,YAAYE,OAAOC,MACjCC,SAAUpG,EAAMgG,YAAYI,SAASc,iBAGzCV,QAAS,CACPhC,YAAaxE,EAAM2F,QAAQ,GAC3BwB,aAAcnH,EAAM2F,QAAQ,IAE9ByB,KAAM,CACJhH,QAAS,QAEXiH,KAAM,CACJ3B,SAAU,GAEZ4B,OAAQ,CACN1F,SAAU,WACVD,aAAc,GACd6C,YAAaxE,EAAM2F,QAAQ,KAC3BC,MAAO,GACP7D,gBAAiBwF,gBAAKvH,EAAMQ,QAAQgH,OAAOC,MAAO,GAClD1B,WAAY/F,EAAMgG,YAAYC,OAAO,CAAC,mBAAoB,UAC1D,UAAW,CACT7D,OAAQ,UACRL,gBAAiBwF,gBAAKvH,EAAMQ,QAAQgH,OAAOC,MAAO,OAGtDC,cAAc,aACZ3F,gBAAiBwF,gBAAKvH,EAAMQ,QAAQgH,OAAOC,MAAO,KAClD7B,MAAO,QACN5F,EAAM8G,YAAYa,GAAG,MAAQ,CAC5B/B,MAAO,MAGXgC,WAAY,CACVhC,MAAO,GACPiC,MAAO,EACPvD,OAAQ,OACR1C,SAAU,WACVxB,QAAS,OACTE,WAAY,SACZD,eAAgB,SAChB0F,WAAY/F,EAAMgG,YAAYC,OAAO,SACrC,UAAW,CACT7D,OAAQ,YAGZ0F,iBAAkB,CAChBD,MAAO7H,EAAM2F,QAAQ,OAEvBoC,UAAW,CACTzF,MAAO,UACPsD,MAAO,QAEToC,WAAY,CACV1D,OAAQ,GACRpE,QAAS,EACTiH,aAAc,GAAKnH,EAAM2F,QAAQ,MACjCC,MAAO,QAETqC,eAAgB,CACd7H,QAAS,OACT8H,cAAe,UAEjBC,WAAY,CACVC,UAAWpI,EAAM2F,QAAQ,IAE3B0C,eAAgB,CACdjI,QAAS,OACT8H,cAAe,UAEjBI,eAAgB,CACd,mBAAoB,CAClBvG,gBAAiB/B,EAAMQ,QAAQ4C,WAAW1C,QAI9C6H,iBAAkB,CAChB1D,WAAY7E,EAAM2F,QAAQ,GAC1BzF,QAASF,EAAM2F,QAAQ,KAEzB6C,0BAAwB,GACtB3D,WAAY,GADU,cAErB7E,EAAM8G,YAAYC,KAAK,MAAQ,CAC9BlC,WAAY,IAHQ,wBAKb7E,EAAM2F,QAAQ,KALD,GAOxB8C,yBAA0B,CACxB9B,YAAa3G,EAAM2F,QAAQ,IAE7B+C,WAAY,CACVhE,SAAU,GACVpC,MAAO,6BAETqG,mBAAoB,CAClBrG,MAAO,SAETsG,YAAa,CACXC,SAAU,KAEZC,gBAAiB,CACf1I,QAAS,OACT8H,cAAe,MACf5H,WAAY,SACZD,eAAgB,gBAChBH,QAASF,EAAM2F,QAAQ,IAEzBoD,gBAAiB,CACfzG,MAAOtC,EAAMQ,QAAQ7D,KAAKwG,MAE5B6F,gBAAiB,CACfrC,YAAa3G,EAAM2F,QAAQ,GAC3BrD,MAAOtC,EAAMQ,QAAQ7D,KAAKwG,KAC1B,UAAW,CACTb,MAAOtC,EAAMQ,QAAQ+B,QAAQQ,OAGjCkG,gBAAiB,CACfvE,SAAU,GACVwE,eAAgB,OAChB,UAAW,CACT9G,OAAQ,YAGZ+G,oBAAqB,CACnBvD,MAAO,QACPvF,eAAgB,gBAChBiE,OAAQ,OACRlE,QAAS,OACTE,WAAY,SACZ,mBAAoB,CAClByB,gBAAiB/B,EAAMQ,QAAQ4C,WAAW1C,QAG9C0I,wBAAyB,CACvBhJ,QAAS,OACT8H,cAAe,SACf5H,WAAY,SACZqG,YAAa3G,EAAM2F,QAAQ,IAE7B0D,4BAA6B,CAC3B/I,WAAY,aACZqG,YAAa,GAEf2C,kBAAmB,CACjBC,OAAQvJ,EAAM2F,QAAQ,GACtByC,UAAWpI,EAAM2F,QAAQ,GACzB6D,aAAcxJ,EAAM2F,QAAQ,GAC5B8D,cAAe,QAEjBC,eAAgB,CACd7E,WAAY7E,EAAM2F,QAAQ,IAE5BgE,aAAW,mBACR3J,EAAM8G,YAAYC,KAAK,MAAQ,CAC9B3G,QAAS,SAFF,4BAIIJ,EAAM2F,QAAQ,IAJlB,GAOXiE,KAAM,CACJtH,MAAO,QAETuH,QAAS,CACPvH,MAAOtC,EAAMQ,QAAQ+B,QAAQQ,MAE/BrJ,OAAQ,CACNqI,gBAAiB/B,EAAMQ,QAAQkC,QAAQK,MAEzC+G,WAAY,CACVxH,MAAOtC,EAAMQ,QAAQkC,QAAQK,MAE/BpJ,QAAS,CACPoI,gBAAiB/B,EAAMQ,QAAQ0C,OAAOH,U,iJCrLtCgH,GAAYhK,aAAW,SAAAC,GAAK,MAAK,CACnCgK,MAAO,CACLpD,WAAY,IACZtC,OAAQ,GACRuE,SAAU,QAId,SAASoB,GAAT,GAAgE,IAA/CC,EAA8C,EAA9CA,SAAUC,EAAoC,EAApCA,gBAAiB7H,EAAmB,EAAnBA,MAAU8H,EAAS,kBACzDxJ,EAAUmJ,KAEVM,EAASC,GAAa,CACxBN,MAAO,CACLjI,gBAAiBwI,GAASjI,EAHlBkI,eAGgCL,MAI5C,OACE,cAACE,EAAD,UACG,SAAAI,GAAW,OACV,cAACR,GAAA,EAAD,yBACErJ,QAAS,CACPoJ,MAAOU,IAAW9J,EAAQoJ,MAAOS,EAAY7J,QAAQoJ,SAEnDI,GAJN,aAMGF,QAOX,SAAShI,GAAT,GAOI,IANFgI,EAMC,EANDA,SACAS,EAKC,EALDA,OACA7N,EAIC,EAJDA,KACAqN,EAGC,EAHDA,gBACA7H,EAEC,EAFDA,MACG8H,EACF,kBACGpK,EAAQwK,eAEZ,OACE,cAACtI,EAAA,EAAD,yBACET,MAAO,CACLa,MAAOiI,GAASjI,EAAOtC,EAAOmK,GAC9BvD,WAAYgE,GAAcD,GAC1BjG,SAAUmG,GAAY/N,EAAMsN,EAAMxK,QAASI,KAEzCoK,GANN,aAQGF,KA8DP,SAASK,GAASjI,EAAOtC,GAA4B,IAArB8K,EAAoB,uDAAR,OAC1C,GAAIxI,GAAStC,EAAMQ,QAAQ8B,IAAUtC,EAAMQ,QAAQ8B,GAAOwI,GACxD,OAAO9K,EAAMQ,QAAQ8B,GAAOwI,GAIhC,SAASF,GAAcnJ,GACrB,OAAQA,GACN,IAAK,QACH,OAAO,IACT,IAAK,SACH,OAAO,IACT,IAAK,OACH,OAAO,IACT,QACE,OAAO,KAIb,SAASoJ,GAAY/N,GAA4B,IAC3CiO,EADqBnL,EAAqB,uDAAX,GAAII,EAAO,uCAG9C,OAAQlD,GACN,IAAK,KACHiO,EAAa,GACb,MACF,IAAK,KACHA,EAAa,IACb,MACF,IAAK,KACHA,EAAa,EACb,MACF,IAAK,MACHA,EAAa,EACb,MACF,QACEA,EAAa,EAIjB,IAAIC,EACFpL,GAAWI,EAAMgF,WAAWpF,GACxBI,EAAMgF,WAAWpF,GAAS8E,SAC1B1E,EAAMgF,WAAWN,SAAW,KAElC,MAAM,QAAN,OAAesG,EAAf,cAAgCD,EAAhC,KAGF,SAAST,GAAaxK,EAAQmL,GAM5B,OAAOC,aAAWpL,EAAQmL,EAAnBC,EALM,SAASd,GAEpB,OAAOF,EADwBE,EAAvBF,UAAR,YAA+BE,EAA/B,QC7KJ,IAAIe,GAAqBC,IAAMC,gBAC3BC,GAAwBF,IAAMC,gBAElC,SAASE,GAAczN,EAAOC,GAC5B,OAAQA,EAAOC,MACb,IAAK,iBACH,OAAO,2BAAKF,GAAZ,IAAmB0N,iBAAkB1N,EAAM0N,kBAC7C,QACE,MAAM,IAAIC,MAAJ,iCAAoC1N,EAAOC,QAKvD,SAAS0N,GAAT,GAAuC,IAAbxB,EAAY,EAAZA,SACpB,EAAoBkB,IAAMO,WAAWJ,GAAe,CACtDC,iBAAiB,IADnB,oBAAK1N,EAAL,KAAYkB,EAAZ,KAGA,OACE,cAACmM,GAAmBS,SAApB,CAA6BlV,MAAOoH,EAApC,SACE,cAACwN,GAAsBM,SAAvB,CAAgClV,MAAOsI,EAAvC,SACGkL,MAMT,SAAS2B,KACP,IAAIC,EAAUV,IAAMW,WAAWZ,IAC/B,QAAgBa,IAAZF,EACF,MAAM,IAAIL,MAAM,uDAElB,OAAOK,EAGT,SAASG,KACP,IAAIH,EAAUV,IAAMW,WAAWT,IAC/B,QAAgBU,IAAZF,EACF,MAAM,IAAIL,MAAM,0DAElB,OAAOK,EAMT,SAASI,GAAclN,GACrBA,EAAS,CACPhB,KAAM,mBC7CV,IAAImO,GAAmBf,IAAMC,gBACzBe,GAAsBhB,IAAMC,gBAEhC,SAASgB,GAAYvO,EAAOC,GAC1B,OAAQA,EAAOC,MACb,IAAK,gBACH,OAAO,2BACFF,GADL,IAEEwO,iBAAiB,EACjBC,YAAaxO,EAAOE,UAExB,IAAK,mBACH,OAAO,2BAAKH,GAAZ,IAAmBwO,iBAAiB,EAAOC,YAAa,KAC1D,QACE,MAAM,IAAId,MAAJ,iCAAoC1N,EAAOC,QAKvD,SAASwO,GAAT,GAAqC,IAAbtC,EAAY,EAAZA,SAClB,EAAoBkB,IAAMO,WAAWU,GAAa,CACpDC,kBAAmB7O,aAAaC,QAAQpH,EAAS+B,QAAQE,OACzDgU,YAAahP,KAAKI,MAChBF,aAAaC,QAAQpH,EAAS+B,QAAQC,iBAH1C,oBAAKwF,EAAL,KAAYkB,EAAZ,KAOA,OACE,cAACmN,GAAiBP,SAAlB,CAA2BlV,MAAOoH,EAAlC,SACE,cAACsO,GAAoBR,SAArB,CAA8BlV,MAAOsI,EAArC,SACGkL,MAMT,SAASuC,KACP,IAAIX,EAAUV,IAAMW,WAAWI,IAC/B,QAAgBH,IAAZF,EACF,MAAM,IAAIL,MAAM,mDAElB,OAAOK,EAGT,SAASY,KACP,IAAIZ,EAAUV,IAAMW,WAAWK,IAC/B,QAAgBJ,IAAZF,EACF,MAAM,IAAIL,MAAM,sDAElB,OAAOK,E,SAOMa,G,+FAAf,WACEC,EACA5N,EACA6N,EACAC,EACAC,EACAC,EACAC,GAPF,gBAAAC,EAAA,6DASED,GAAS,GACTD,GAAa,GAVf,SAWuBJ,EAAaO,QAAQ,CAAEN,WAAUC,aAXxD,QAWQM,EAXR,SAcIC,EAAejQ,QAAQ9G,EAAS+B,QAAQE,MAAO6U,EAAO9P,KAAKgQ,OAC3DD,EAAejQ,QAAQ9G,EAAS+B,QAAQC,aAAc8U,EAAO9P,MAC7D2P,EAAS,MACTD,GAAa,GACbhO,EAAS,CAAEhB,KAAM,gBAAiBC,QAASmP,EAAO9P,OAElDyP,EAAQQ,KAAK,oBAEbN,GAAS,GACTD,GAAa,IAvBjB,4C,oCCtDMQ,G,QAAOC,EAAMxH,OAAO,CACxByH,QAASC,EAAUpX,YACnBqX,QAAS,CACP,8BAA+B,IAC/B,mCAAoC,UAoBxCJ,GAAKK,aAAaC,SAASC,KACzB,SAACX,GAEC,MAAwBA,EAAOY,OAAvBC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,IAwBhB,MAXe,QAAXD,GACU,eAARC,GACF5O,EAAiB,CACftB,KAAM,UACNrB,KACa,WAAXsR,EACI,+HACA,iIAILb,IA3BX,yCA6BE,WAAOe,GAAP,oBAAAjB,EAAA,+DAC4BiB,EAAML,SAASxQ,KAAK6Q,MAAtCC,EADV,EACUA,KAAMC,EADhB,EACgBA,QAEZ/O,EADW,iCAAT8O,EACe,CACfpQ,KAAM,QACNrB,KAAM,2FAGS,CACfqB,KAAM,QACNrB,KAAM0R,IAVZ,kBAsBSC,QAAQC,OAAOJ,IAtBxB,2CA7BF,uDAuDeX,UChFTgB,GAAe,SAACN,EAAKO,GACzB,MAAM,GAAN,OAAUP,EAAIQ,UAAU,EAAGR,EAAIS,QAAQ,MAAvC,YAAgDF,EAAhD,YAA6DP,EAAIQ,UAC/DR,EAAIS,QAAQ,KAAO,EACnBT,EAAIU,UAIKC,GAAS,SAACC,GACrB,MAA8BC,oBAAS,GAAvC,oBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,qBAA5B,oBAAO3B,EAAP,KAAe8B,EAAf,KACA,EAA0BH,qBAA1B,oBAAOZ,EAAP,KAAclB,EAAd,KA6BA,MAAO,CACL+B,UACA5B,SACAe,QACAhB,QA/BW,yCAAG,WAAgB7P,EAAMmR,GAAtB,sBAAAvB,EAAA,yDACd+B,GAAW,GADG,UAKRR,EALQ,qBAMNK,EAAKZ,IAAIiB,SAAS,KANZ,wBAOFjB,EAAMM,GAAaM,EAAKZ,IAAKO,GAP3B,SAQSjB,GAAK,2BAAKsB,GAAN,IAAYZ,MAAK5Q,UAR9B,OAQRwQ,EARQ,sCAUFI,EAVE,UAUOY,EAAKZ,IAVZ,YAUmBO,GAVnB,UAWSjB,GAAK,2BAAKsB,GAAN,IAAYZ,MAAK5Q,UAX9B,QAWRwQ,EAXQ,wDAcON,GAAK,2BAAKsB,GAAN,IAAYxR,UAdvB,QAcVwQ,EAdU,sBAgBZoB,EAAUpB,GAhBE,4BAiBLA,SAjBK,aAiBL,EAAUxQ,MAjBL,wCAmBZ4R,EAAU,MACVjC,EAAS,EAAD,IACF,IAAIxB,MAAJ,MArBM,yBAuBZwD,GAAW,GAvBC,6EAAH,0D,6DCAFG,GAA6B,SAACC,GACzC,OAAO,IAAIC,gBAAgBC,KAAOF,EAAQG,OAAWC,YAG1CC,GAAiB,SAACC,GAG7B,OAFY,IAAIC,IAAIC,OAAOC,SAASC,KAAKC,QAAQ,KAAM,KAC/BC,aAAaC,IAAIP,IAS9BQ,GAA0B,WACrC,IAAMC,EAAS,CACb7N,EACAC,EACAE,EACAD,ET/BkB,YACA,YSiClBE,EACAC,GAIF,OAFYwN,EAAOC,KAAKC,MAAMD,KAAKE,SAAWH,EAAOxB,UAK1C4B,GAAkB,SAACC,EAAKC,GACnC,OAAOL,KAAKC,MAAMD,KAAKE,UAAYG,EAAMD,EAAM,GAAKA,IAGzCE,GAAgB,SAACC,GAC5B,IAAKA,GAAa,IAAPA,WAAoBA,IAAOC,KACpC,OAAQ,GAAKD,GAAIZ,QAAQ,UAAU,SAAUc,GAC3C,MAAO,+DAAaC,QAAQD,EAAG,OAkBxBE,GAAgB,SAACC,GAC5B,OAAIA,IAAW3a,EAAS0D,gBAAgBkX,MAGhB3T,KAAKI,MAC3B0P,EAAe3P,QAAQpH,EAAS+B,QAAQC,eADlC6Y,YAGWhC,SAAS8B,I,qCC4EfG,GApJI,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UAC9B,EAAiDC,eAAzCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,OAC/B,GADA,EAAuCC,MACH5C,oBAAS,IAA7C,oBAAO6C,EAAP,KAAmBC,EAAnB,KACMC,EAAcC,iBAAO,MAErBC,EAAwBnD,GAAO,CACnCZ,OAAQ,MACRC,IAAI,yBAGA+D,EAAoB,WACxBJ,GAAeD,IAejB,OACE,sBAAMP,SAAUI,GAbH,SAACnU,GACd,IAAQ4U,EAAO3U,KAAKI,MAClB0P,EAAe3P,QAAQpH,EAAS+B,QAAQC,eADlC4Z,GAGRF,EAAsB7E,QAAQ,CAC5B+E,KACAC,YAAa7U,EAAK8U,YAClBC,YAAa/U,EAAKwP,WAEpBuE,EAAS/T,MAIT,SACE,eAAC+D,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAzB,UACE,cAACtE,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,wEACN8H,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAOU,YAChBK,WACEf,EAAOU,YAAcV,EAAOU,YAAY/D,QAAU,GAEpDqE,WAAS,EACT5V,KAAK,QACLkB,KAAM,cAIZ2U,MAAO,CACLC,SAAUtc,EAASqC,WAAWC,SAC9Bia,UAAW,CACTnc,MAAO,EACP2X,QAAS/X,EAASqC,WAAWG,WAGjC2F,KAAK,kBAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,8CACN8H,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAO5E,SAChB2F,WAAYf,EAAO5E,SAAW4E,EAAO5E,SAASuB,QAAU,GACxDqE,WAAS,EACT5V,KAAK,QACLkB,KAAM4T,EAAa,WAAa,OAChCkB,SAAUhB,EACViB,WAAY,CACVC,aACE,cAACC,GAAA,EAAD,CAAgBrR,SAAS,MAAzB,SACE,mBACEH,MAAO,CAAEW,OAAQ,WACjBpB,UAAWkS,aAAK,wBAChB/Q,QAAS8P,EAHX,SAKGL,EAAa,iBAAmB,qBAQ/Ce,MAAO,CACLC,SAAUtc,EAASqC,WAAWC,SAC9Bia,UAAW,CACTnc,MAAO,EACP2X,QAAS/X,EAASqC,WAAWG,WAGjC2F,KAAK,eAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,8EACN8H,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAOyB,WAChBV,WACEf,EAAOyB,YAAc,8LAEvBT,WAAS,EACT5V,KAAK,QACLkB,KAAM,cAIZ2U,MAAO,CACLS,SAAU,SAAC1c,GAAD,OAAWA,IAAUob,EAAYuB,QAAQ3c,QAErD+H,KAAK,iBAIT,eAAC4C,EAAA,EAAD,CACE7C,MAAI,EACJ8C,GAAI,GACJG,MAAO,CAAErB,QAAS,OAAQC,eAAgB,iBAH5C,UAKE,cAACgC,EAAA,EAAD,CAAQzC,QAAQ,YAAY0C,MAAM,UAAUtE,KAAK,SAAjD,4CAGA,cAACqE,EAAA,EAAD,CAAQzC,QAAQ,YAAY0C,MAAM,UAAUH,QAASmP,EAArD,2D,qBC9GK,SAASgC,GAAOlJ,GAC7B,IFsB2BmJ,EEtBvB3S,EAAUmJ,KACRgD,EAAUyG,cACZC,EAAc5H,KACd6H,EAAiBzH,KACjB0H,EAAejH,KACboD,EAAW8D,cACb,EAA0B7E,mBAAS,MAAvC,oBAAK8E,EAAL,KAAeC,EAAf,KACI,EAAgC/E,mBAAS,MAA7C,oBAAKnG,EAAL,KAAkBmL,EAAlB,KACMxH,EAAgBE,KAAhBF,YACN,EAA8BwC,mBAAS,IAAvC,oBAAOiF,EAAP,KAAgBC,EAAhB,KAEMC,EAAsBrF,GAAO,CACjCZ,OAAQ,MACRC,IAAI,kBAGAiG,EAAe,yCAAG,6BAAAjH,EAAA,sEACDgH,EAAoB/G,UADnB,OAChBiH,EADgB,OAGtBH,EAAWG,EAAO9W,MAHI,2CAAH,qDAUf+W,EAAyB,WAC7BC,KAGIA,EAA0B,WAC9BvT,EAAkB,CAAEtC,KAAM,cAsB5B,OAJA8V,qBAAU,WACRJ,MACC,CAACrE,IAGF,cAAC0E,GAAA,EAAD,CAAQ5S,SAAS,QAAQZ,UAAWJ,EAAQoG,OAA5C,SACE,eAACyN,GAAA,EAAD,CAASzT,UAAWJ,EAAQ4F,QAA5B,UACE,cAACkO,GAAA,EAAD,CACEpS,MAAM,UACNH,QAAS,kBAAM+J,GAAcwH,IAC7B1S,UAAW2T,IACT/T,EAAQ4H,yBACR5H,EAAQ6H,0BALZ,SAQGgL,EAAYjI,gBACX,cAACoJ,GAAA,EAAD,CACEhU,QAAS,CACPgD,KAAM+Q,IACJ/T,EAAQ8H,WACR9H,EAAQ+H,uBAKd,cAAC,KAAD,CACE/H,QAAS,CACPgD,KAAM+Q,IACJ/T,EAAQ8H,WACR9H,EAAQ+H,yBAMlB,cAAC,GAAD,CAAY/I,QAAQ,KAAK+K,OAAO,SAAS3J,UAAWJ,EAAQ8F,SAA5D,4HAIA,qBAAK1F,UAAWJ,EAAQyG,OACxB,sBAAK5F,MAAO,CAAErB,QAAS,QAAvB,UACE,cAAC,GAAD,CAAYR,QAAQ,KAAK6B,MAAO,CAAE8H,OAAQ,UAA1C,UFpEmBgK,EEqEH,IAAIsB,KFpEf,CACX,uCACA,uCACA,wCACA,mDACA,8CACA,2BACA,4BAEUtB,EAAKuB,aE6DT,cAAC,GAAD,CAAYlV,QAAQ,KAApB,SACG+Q,IAAc,IAAIkE,MAAOE,mBAAmB,YAE/C,cAAC,GAAD,CACEnV,QAAQ,KACR6B,MAAO,CACL8H,OAAQ,SACR3D,MAAO,GACPxF,QAAS,OACTC,eAAgB,YANpB,SASE,cAAC,KAAD,CACE2U,OAAQ,WACRC,SAAS,EACTC,SAAU,qBAIhB,cAACR,GAAA,EAAD,CACEpS,MAAM,UACN,gBAAc,OACd,gBAAc,YACdH,QAAS,SAACgT,GACRrB,EAAYqB,EAAEC,gBAEhBpU,UAAWJ,EAAQ2H,iBAPrB,SASE,cAAC,GAAD,CAAO8M,aAAY,OAAErB,QAAF,IAAEA,OAAF,EAAEA,EAASpF,OAAQtM,MAAM,YAA5C,SACE,cAAC,KAAD,CAAmB1B,QAAS,CAAEgD,KAAMhD,EAAQ8H,kBAGhD,cAACgM,GAAA,EAAD,CACE,gBAAc,OACdpS,MAAM,UACNtB,UAAWJ,EAAQ2H,iBACnB,gBAAc,eACdpG,QAAS,SAACgT,GAAD,OAAOpB,EAAeoB,EAAEC,gBALnC,SAOE,cAAC,KAAD,CAAaxU,QAAS,CAAEgD,KAAMhD,EAAQ8H,gBAExC,eAAC4M,GAAA,EAAD,CACEpD,GAAG,YACH1S,KAAM+V,QAAQ1B,GACd2B,SAAU3B,EACVnU,QAAS,kBAAMoU,EAAY,OAC3B2B,cAAe,CAAEzU,UAAWJ,EAAQyH,gBACpCrH,UAAWJ,EAAQuH,WACnBvH,QAAS,CAAEkD,MAAOlD,EAAQgI,aAC1B8M,sBAAoB,EARtB,UAUE,sBAAK1U,UAAWJ,EAAQkI,gBAAxB,UACE,cAAC,GAAD,CAAYlJ,QAAQ,KAAK+K,OAAO,SAAhC,kFAGA,cAACtI,EAAA,EAAD,CAAQC,MAAM,UAAUH,QA9HV,WACtB4K,EAAQQ,KAAK,qBA6HL,4FAIF,cAACoI,GAAA,EAAD,IAlBF,OAmBG3B,QAnBH,IAmBGA,OAnBH,EAmBGA,EAAS9S,KAAI,SAACmN,GAAD,OACZ,eAACuH,GAAA,EAAD,CAA2B5U,UAAWJ,EAAQuI,oBAA9C,UACE,cAAC,GAAD,CAAYvJ,QAAQ,KAApB,SACG+Q,GACC,IAAIkE,KAAKxG,EAAQwH,eAAed,mBAAmB,YAGvD,cAAC,GAAD,CAAYnV,QAAQ,KAApB,SAA0ByO,EAAQyH,SAClC,cAAC,GAAD,CAAYlW,QAAQ,KAApB,SACG+Q,GAActC,EAAQ0H,SAEzB,cAAC,GAAD,CAAYnW,QAAQ,KAApB,SACE,cAACoW,GAAA,EAAD,CACErf,MAAOL,EAASmD,aAAa4U,EAAQrQ,MACrCgD,UAAWkS,aAAKtS,EAAQgJ,KAAMhJ,EAAQyN,EAAQrQ,aAbrCqQ,EAAQ6D,UAmB3B,eAACoD,GAAA,EAAD,CACEpD,GAAG,eACH1S,KAAM+V,QAAQ3M,GACd4M,SAAU5M,EACVlJ,QAAS,kBAAMqU,EAAe,OAC9B/S,UAAWJ,EAAQuH,WACnBvH,QAAS,CAAEkD,MAAOlD,EAAQgI,aAC1B8M,sBAAoB,EAPtB,UASE,qBAAK1U,UAAWJ,EAAQkI,gBAAxB,SACE,cAAC,GAAD,CAAYlJ,QAAQ,KAAK+K,OAAO,SAAhC,SACG4B,EAAYM,aAGjB,cAAC+I,GAAA,EAAD,CACE5U,UAAW2T,IACT/T,EAAQmI,gBACRnI,EAAQ0H,gBAHZ,SAME,cAAC,GAAD,CACEtH,UAAWJ,EAAQqI,gBACnB3G,MAAM,UACNH,QAlKa,WACvBpB,EAAkB,CAChBlE,MAAO,gEACPD,UACE,cAACqZ,GAAD,CACE5E,SAAUgD,EACV/C,UAAWgD,IAGf7V,KAAM,WACN3B,KAAM,IACNC,oBAAoB,KAoJd,6EASF,cAAC6Y,GAAA,EAAD,CACE5U,UAAW2T,IACT/T,EAAQmI,gBACRnI,EAAQ0H,gBAHZ,SAME,cAAC,GAAD,CACEtH,UAAWJ,EAAQqI,gBACnB3G,MAAM,UACNH,QAAS,kBLlKvB,SAAiBnD,EAAU+N,GACzBtP,aAAaG,WAAWtH,EAAS+B,QAAQE,OACzCkF,aAAaG,WAAWtH,EAAS+B,QAAQC,cACzC0G,EAAS,CAAEhB,KAAM,qBACjB+O,EAAQQ,KAAK,UK8Jc2I,CAAQvC,EAAcvJ,EAAM2C,UAH7C,4F,wBClPGhN,gBAAW,SAAAC,GAAK,YAAK,CAClCmW,WAAY,CACVtR,WAAY,GACZ8B,YAAa,IAEfS,KAAM,CACJhH,QAAS,QAEX6G,OAAQ,CACNrB,MAXgB,IAYhBwQ,WAAY,EACZvP,WAAY,UAEdwP,WAAY,CACVzQ,MAhBgB,IAiBhBG,WAAY/F,EAAMgG,YAAYC,OAAO,QAAS,CAC5CC,OAAQlG,EAAMgG,YAAYE,OAAOC,MACjCC,SAAUpG,EAAMgG,YAAYI,SAASC,kBAGzCiQ,YAAY,aACVvQ,WAAY/F,EAAMgG,YAAYC,OAAO,QAAS,CAC5CC,OAAQlG,EAAMgG,YAAYE,OAAOC,MACjCC,SAAUpG,EAAMgG,YAAYI,SAASc,gBAEvC/G,UAAW,SACXyF,MAAO5F,EAAM2F,QAAQ,GAAK,IACzB3F,EAAM8G,YAAYC,KAAK,MAAQ,CAC9BnB,MA9Bc,MAiClBY,QAAQ,2BACHxG,EAAMuG,OAAOC,SADX,kBAEJxG,EAAM8G,YAAYC,KAAK,MAAQ,CAC9B3G,QAAS,UAGbqF,QAAS,CACPC,SAAU,EACVxF,QAASF,EAAM2F,QAAQ,IAKzB4Q,kBAAgB,GACdnO,UAAWpI,EAAM2F,QAAQ,IACzBd,WAAY,IAFE,cAGb7E,EAAM8G,YAAY0P,KAAK,MAAQ,CAC9BpO,UAAWpI,EAAM2F,QAAQ,QAJb,cAMb3F,EAAM8G,YAAYa,GAAG,MAAQ,CAC5BvH,QAAS,SAPG,O,kDC9CHL,gBAAW,SAACC,GAAD,MAAY,CACpCyG,KAAM,CACJyC,eAAgB,OAChB,mBAAoB,CAClBnH,gBAAiB/B,EAAMQ,QAAQ4C,WAAW1C,QAG9C+V,aAAc,CACZrW,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZ4I,eAAgB,QAElBwN,WAAY,CACV3U,gBAAiB/B,EAAMQ,QAAQ4C,WAAW1C,OAE5CiW,WAAY,CACVnS,YAAa,EACb,mBAAoB,CAClBzC,gBAAiB,YAGrB6U,SAAU,CACRjQ,YAAa3G,EAAM2F,QAAQ,GAC3BrD,MAAOtC,EAAMQ,QAAQ7D,KAAK6F,UAAY,KACtCuD,WAAY/F,EAAMgG,YAAYC,OAAO,SACrCL,MAAO,GACPxF,QAAS,OACTC,eAAgB,UAElBwW,eAAgB,CACdvU,MAAOtC,EAAMQ,QAAQ+B,QAAQQ,MAE/B+T,SAAU,CACR5W,QAAS,EACToC,MAAOtC,EAAMQ,QAAQ7D,KAAK6F,UAAY,KACtCuD,WAAY/F,EAAMgG,YAAYC,OAAO,CAAC,UAAW,UACjDvB,SAAU,IAEZqS,eAAgB,CACdzU,MAAOtC,EAAMQ,QAAQ7D,KAAK4F,SAE5ByU,eAAgB,CACdC,QAAS,GAEXC,WAAY,CACV1S,YAAaxE,EAAM2F,QAAQ,GAAK,IAElCwR,aAAc,CACZtS,WAAY7E,EAAM2F,QAAQ,KAC1ByC,UAAWpI,EAAM2F,QAAQ,GACzB6D,aAAcxJ,EAAM2F,QAAQ,IAE9ByR,QAAS,CACPhP,UAAW,GACXoB,aAAc,GACdlF,OAAQ,EACRvC,gBAAiB,iBCtDjBgI,GAAYhK,aAAW,SAACC,GAAD,MAAY,CACrCqX,QAAS,CACPzR,MAAO,EACPtB,OAAQ,EACRvC,gBAAiB/B,EAAMQ,QAAQ7D,KAAKwG,KACpCxB,aAAc,MACdoE,WAAY/F,EAAMgG,YAAYC,OAAO,qBAEvCqR,SAAU,CACR1R,MAAO,EACPtB,OAAQ,GAEViT,SAAU,CACR3R,MAAO,GACPtB,OAAQ,QAIG,SAASkT,GAAT,GAA+B,IAAD,EAAf1a,EAAe,EAAfA,KAAMwF,EAAS,EAATA,MAC9B1B,EAAUmJ,KACV/J,EAAQwK,eAEZ,OACE,qBACExJ,UAAW0J,IAAW9J,EAAQyW,SAAT,mBAClBzW,EAAQ2W,SAAoB,UAATza,GADD,cAElB8D,EAAQ0W,SAAoB,UAATxa,GAFD,IAIrB2E,MAAO,CACLM,gBACEO,GAAStC,EAAMQ,QAAQ8B,GAAStC,EAAMQ,QAAQ8B,GAAOS,KAAOT,KCZvD,SAASmV,GAAT,GAUX,IAAD,MAuCkC,IAhDnChR,EASC,EATDA,KACAzC,EAQC,EARDA,KACArN,EAOC,EAPDA,MACAuT,EAMC,EANDA,SACA4F,EAKC,EALDA,SACAtE,EAIC,EAJDA,gBACAkM,EAGC,EAHDA,OACA1Z,EAEC,EAFDA,KACA2Z,EACC,EADDA,WAEI/W,EAAUmJ,KACRgD,EAAUyG,cACZE,EAAiBzH,KACjBjM,EAAQwK,eAaR,EAAsBuE,oBAAS,GAAnC,oBAAK6I,EAAL,KAAaC,EAAb,KACIC,EACFrR,IACCqJ,EAASiI,WAAatR,IAA6C,IAArCqJ,EAASiI,SAASpJ,QAAQlI,IAE3D,MAAa,UAATzI,EAEA,cAACkE,EAAA,EAAD,CACElB,UAAW0J,IAAW9J,EAAQkW,SAAUlW,EAAQuW,aAA3B,eAClBvW,EAAQoW,gBAAkBxL,IAF/B,SAKG7U,IAIM,YAATqH,EAEA,mCACGgT,GAAc2G,IAAe,cAAChC,GAAA,EAAD,CAAS3U,UAAWJ,EAAQwW,YAG5D3Q,GAAQA,EAAK0I,SAAS,QAEtB,cAAC6I,GAAA,EAAD,CACE9T,QAAM,EACNlD,UAAWJ,EAAQ6F,KACnB7F,QAAS,CACPgD,KAAM8G,IAAW9J,EAAQqX,UAAT,mBACbrX,EAAQ8V,WAAaoB,IAAiBJ,GADzB,cAEb9W,EAAQ+V,WAAae,GAFR,KAKlBQ,eAAa,EATf,SAWE,sBAAKlX,UAAWJ,EAAQ6V,aAAc1G,KAAMtJ,EAA5C,UACE,cAAC0R,GAAA,EAAD,CACEnX,UAAW0J,IAAW9J,EAAQgW,SAAT,eAClBhW,EAAQiW,eAAiBiB,IAF9B,SAKGJ,EAAS,cAACF,GAAD,CAAKlV,MAAOwV,GAAgB,YAAgB9T,IAExD,cAACoU,GAAA,EAAD,CACExX,QAAS,CACP2B,QAASmI,IAAW9J,EAAQkW,UAAT,mBAChBlW,EAAQmW,eAAiBe,GADT,cAEhBlX,EAAQoW,gBAAkBxL,GAFV,KAKrBjJ,QAAS5L,SAMduT,EA0CH,mCACG8G,GAAc2G,IACb,qCACE,cAACK,GAAA,EAAD,CACE9T,QAAM,EACNtH,UAAW6J,GAAQ4R,IACnBlW,QAmDV,SAAwBgT,GAClB3J,IACF2J,EAAEmD,iBACFT,GAAWD,KArDL5W,UAAWJ,EAAQ6F,KACnB8R,GAAI9R,EACJyR,eAAa,EANf,SAQE,uBAAMlX,UAAWJ,EAAQ6V,aAAzB,UACE,cAAC0B,GAAA,EAAD,CACEnX,UAAW0J,IAAW9J,EAAQgW,SAAT,eAClBhW,EAAQiW,eAAiBiB,IAF9B,SAKG9T,GAAc,cAACwU,GAAA,EAAD,MAEjB,cAACJ,GAAA,EAAD,CACExX,QAAS,CACP2B,QAASmI,IAAW9J,EAAQkW,UAAT,mBAChBlW,EAAQmW,eAAiBe,GADT,cAEhBlX,EAAQoW,gBAAkBxL,GAFV,KAKrBjJ,QAAS5L,SAIduT,GACC,cAACuO,GAAA,EAAD,CACErX,GAAIwW,GAAUpM,EACdkN,QAAQ,OACRC,eAAa,EACb3X,UAAWJ,EAAQsW,WAJrB,SAME,cAAC0B,GAAA,EAAD,CAAMhc,UAAU,MAAMic,gBAAc,EAApC,SACG3O,EAAShJ,KAAI,SAAC4X,GAAD,OACZ,cAACrB,GAAD,aAEE3H,SAAUA,EACVtE,gBAAiBA,EACjBkM,QAAM,GACFoB,GAJCA,GAAgBA,EAAarS,kBAhFhD,mCACGuK,GAAc2G,IACb,cAACK,GAAA,EAAD,CACE9T,QAAM,EACNlD,UAAWJ,EAAQ6F,KACnB7F,QAAS,CACPgD,KAAM8G,IAAW9J,EAAQqX,UAAT,mBACbrX,EAAQ8V,WAAaoB,IAAiBJ,GADzB,cAEb9W,EAAQ+V,WAAae,GAFR,KAKlBQ,eAAa,EACb/V,QAAS,YAjFH,SAACsE,GACfsG,EAAQQ,KAAK9G,GACKoJ,OAAOkJ,WACH/Y,EAAM8G,YAAYkS,OAAOC,IAI7C/M,GAAcwH,GA2ENvR,CAAQsE,IAXZ,SAcE,uBAAMzF,UAAWJ,EAAQ6V,aAAzB,UACE,cAAC0B,GAAA,EAAD,CACEnX,UAAW0J,IAAW9J,EAAQgW,SAAT,eAClBhW,EAAQiW,eAAiBiB,IAF9B,SAKGJ,EAAS,cAACF,GAAD,CAAKlV,MAAOwV,GAAgB,YAAgB9T,IAExD,cAACoU,GAAA,EAAD,CACExX,QAAS,CACP2B,QAASmI,IAAW9J,EAAQkW,UAAT,mBAChBlW,EAAQmW,eAAiBe,GADT,cAEhBlX,EAAQoW,gBAAkBxL,GAFV,KAKrBjJ,QAAS5L,WC5HzB,IAAMuiB,GAAY,CAChB,CACEhH,GAAI,EACJvb,MAAO,6CACP8P,KAAM,iBACNzC,KAAM,mBAAGhD,UAAU,uBAAb,kBACN2W,WAAYwB,EAAUnf,gBAAgBkX,MAExC,CACEgB,GAAI,EACJvb,MAAO,uCACP8P,KAAM,oBACNzC,KAAM,mBAAGhD,UAAU,uBAAb,yBACN2W,WAAYwB,EAAUnf,gBAAgBoB,cAExC,CACE8W,GAAI,EACJvb,MAAO,8CACP8P,KAAM,kBACNzC,KAAM,mBAAGhD,UAAU,uBAAb,wBACN2W,WAAYwB,EAAUnf,gBAAgBuB,YAExC,CACE2W,GAAI,EACJvb,MAAO,8CACP8P,KAAM,iBACNzC,KAAM,mBAAGhD,UAAU,uBAAb,oCACN2W,WAAYwB,EAAUnf,gBAAgBiC,gBAExC,CACEiW,GAAI,EACJlU,KAAM,UACN2Z,WAAYwB,EAAUnf,gBAAgB+B,cAExC,CACEmW,GAAI,EACJvb,MAAO,oDACPqN,KAAM,mBAAGhD,UAAU,uBAAb,qBACN2W,WAAYwB,EAAUnf,gBAAgB+B,aACtCmO,SAAU,CACR,CAAEvT,MAAO,iEAAgB8P,KAAM,8BAC/B,CAAE9P,MAAO,gEAAe8P,KAAM,8BAC9B,CAAE9P,MAAO,gEAAe8P,KAAM,iCAGlC,CACEyL,GAAI,EACJlU,KAAM,UACN2Z,WACEwB,EAAUnf,gBAAgB6B,cAC1Bsd,EAAUnf,gBAAgBoC,aAE9B,CACE8V,GAAI,EACJvb,MAAO,sEACPqN,KAAM,mBAAGhD,UAAU,uBAAb,6BACN2W,WACEwB,EAAUnf,gBAAgB6B,cAC1Bsd,EAAUnf,gBAAgBoC,YAC5B8N,SAAU,CACR,CAAEvT,MAAO,wCAAW8P,KAAM,8BAC1B,CAAE9P,MAAO,mFAAmB8P,KAAM,iCAClC,CAAE9P,MAAO,mFAAmB8P,KAAM,kCAClC,CACE9P,MAAO,qDACP8P,KAAM,mBACNkR,WAAYwB,EAAUnf,gBAAgB6B,cAExC,CACElF,MAAO,gGACP8P,KAAM,qBACNkR,WAAYwB,EAAUnf,gBAAgBkX,MAExC,CACEva,MAAO,2DACP8P,KAAM,iBACNkR,WAAYwB,EAAUnf,gBAAgBkX,QAI5C,CACEgB,GAAI,EACJlU,KAAM,UACN2Z,WACEwB,EAAUnf,gBAAgBW,eAC1Bwe,EAAUnf,gBAAgBQ,WAC1B2e,EAAUnf,gBAAgBiB,eAC1Bke,EAAUnf,gBAAgBe,aAE9B,CACEmX,GAAI,EACJvb,MAAO,iCACPqN,KAAM,mBAAGhD,UAAU,uBAAb,4BAMNkJ,SAAU,CACR,CACEvT,MAAO,6CACP8P,KAAM,iBACNkR,WAAYwB,EAAUnf,gBAAgBQ,WAExC,CACE7D,MAAO,6CACP8P,KAAM,qBACNkR,WAAYwB,EAAUnf,gBAAgBW,eAExC,CACEhE,MAAO,iCACP8P,KAAM,qBACNkR,WAAYwB,EAAUnf,gBAAgBiB,eAExC,CACEtE,MAAO,mDACP8P,KAAM,mBACNkR,WAAYwB,EAAUnf,gBAAgBc,eAK5C,CAAEoX,GAAI,GAAIlU,KAAM,UAAW2Z,WAAYwB,EAAUnf,gBAAgBkX,MACjE,CACEgB,GAAI,GACJvb,MAAO,4DACPqN,KAAM,mBAAGhD,UAAU,uBAAb,uCACN2W,WACEwB,EAAUnf,gBAAgBE,0BAC1Bif,EAAUnf,gBAAgBG,0BAC1Bgf,EAAUnf,gBAAgBC,sBAC5BiQ,SAAU,CACR,CACEvT,MAAO,0DACP8P,KAAM,6BACNkR,WAAYwB,EAAUnf,gBAAgBE,0BAExC,CACEvD,MAAO,0DACP8P,KAAM,6BACNkR,WAAYwB,EAAUnf,gBAAgBG,0BAExC,CACExD,MAAO,iCACP8P,KAAM,0BACNkR,WAAYwB,EAAUnf,gBAAgBC,yBAK5C,CACEiY,GAAI,GACJvb,MAAO,kEACP8P,KAAM,gBACNzC,KAAM,mBAAGhD,UAAU,uBAAb,sBACN2W,WAAYwB,EAAUnf,gBAAgBkX,OAmF3BkI,oBAxEf,YAAgC,IAAD,IAAZtJ,EAAY,EAAZA,SACblP,EAAUmJ,KACV/J,EAAQwK,eAGNgB,EAAoBK,KAApBL,gBACFkI,EAAiBzH,KAGjB,EAA8B8C,oBAAS,GAA3C,oBAAKsK,EAAL,KAAkBC,EAAlB,KAUA,OARA/E,qBAAU,WAGR,OAFA1E,OAAO0J,iBAAiB,SAAUC,GAClCA,IACO,WACL3J,OAAO4J,oBAAoB,SAAUD,OAKvC,eAACE,GAAA,EAAD,CACE9Z,QAASyZ,EAAc,YAAc,YACrCrY,UAAW2T,IAAW/T,EAAQqG,QAAT,mBAClBrG,EAAQyV,WAAa7K,GADH,cAElB5K,EAAQ0V,aAAe9K,GAFL,IAIrB5K,QAAS,CACPkD,MAAO6Q,KAAU,mBACd/T,EAAQyV,WAAa7K,GADP,cAEd5K,EAAQ0V,aAAe9K,GAFT,KAKnBhM,KAAMgM,EAZR,UAcE,qBAAKxK,UAAWJ,EAAQ4F,UACxB,qBAAKxF,UAAWJ,EAAQ2V,iBAAxB,SACE,cAAC7B,GAAA,EAAD,CAAYvS,QAAS,kBAAM+J,GAAcwH,IAAzC,SACE,cAACkB,GAAA,EAAD,CACEhU,QAAS,CACPgD,KAAM+Q,IAAW/T,EAAQ8H,WAAY9H,EAAQ+H,2BAKrD,cAACiQ,GAAA,EAAD,CAAM5X,UAAWJ,EAAQ+Y,YAAzB,SACGT,GAAUhY,KAAI,SAACuF,GAAD,OACb,cAACgR,GAAD,aAEE3H,SAAUA,EACVtE,gBAAiBA,GACb/E,GAHCA,EAAKyL,YAWpB,SAASsH,IACP,IAEII,EAFc/J,OAAOkJ,WACH/Y,EAAM8G,YAAYkS,OAAOC,GAG3CW,GAAiBP,GACnBC,GAAa,GACbpN,GAAcwH,IACJkG,GAAkBP,GAC5BC,GAAa,O,oLCtPJvZ,gBAAW,SAACC,GAAD,YAAY,CACpC6Z,YAAU,mBACP7Z,EAAM8G,YAAY0P,KAAK,MAAQ,CAC9BjN,OAAQ,WAFF,cAIR,UAAW,CACTrJ,QAAS,cALH,GAQV4Z,WAAY,CACV1Z,QAAS,OACT8H,cAAe,SACftG,SAAU,YAEZmY,KAAM,CACJlU,UAAW,OACXzF,QAAS,OACT8H,cAAe,UAEjB8R,sBAAuB,CACrB5Z,QAAS,OACTE,WAAY,SACZoF,SAAU,EACVuU,cAAeja,EAAM2F,QAAQ,IAE/BuU,gBAAiB,CACf1Q,aAAcxJ,EAAM2F,QAAQ,IAE9BwU,cAAe,CACb3Q,aAAcxJ,EAAM2F,QAAQ,IAE9ByU,SAAU,CACR5Q,aAAcxJ,EAAM2F,QAAQ,GAC5B5D,gBAAiB,sBAEnBsY,sBAAuB,CACrB/V,OAAQ,OACRlE,QAAS,OACT8H,cAAe,SACf7H,eAAgB,SAChBC,WAAY,WACZqG,YAAa3G,EAAM2F,QAAQ,IAE7B2U,oBAAqB,CACnBla,QAAS,OACTE,WAAY,SACZkJ,aAAcxJ,EAAM2F,QAAQ,IAE9B4U,eAAgB,CACdna,QAAS,OACTsF,SAAU,EACVwC,cAAe,SACf7H,eAAgB,iBAElBma,YAAa,CACXra,UAAW,QAEbsa,mBAAoB,CAClB1Y,gBAAiB/B,EAAMQ,QAAQ+B,QAAQQ,MAEzC2X,qBAAsB,CACpB3Y,gBAAiB/B,EAAMQ,QAAQgC,UAAUO,MAE3C4X,yBAA0B,CACxBva,QAAS,OACTsF,SAAU,EACVpF,WAAY,SACZkJ,aAAcxJ,EAAM2F,QAAQ,IAE9BiV,cAAe,CACbxa,QAAS,OACTE,WAAY,SACZqG,YAAa3G,EAAM2F,QAAQ,IAE7BkV,kBAAmB,CACjBhW,WAAY7E,EAAM2F,QAAQ,IAE5BmV,sBAAuB,CACrB1a,QAAS,OACTE,WAAY,SACZkF,SAAU,QAEZuV,0BAA2B,CACzBlS,SAAU,IACV1B,aAAcnH,EAAM2F,QAAQ,IAE9BqV,kCAAmC,CACjCpV,MAAO,QAETqV,cAAe,CACb9a,UAAW,QAEb+a,gBAAgB,aACdtV,MAAO,OACPxF,QAAS,OACTE,WAAY,SACZD,eAAgB,iBACfL,EAAM8G,YAAY0P,KAAK,MAAQ,CAC9B2E,SAAU,SAGdC,sBAAsB,aACpBhb,QAAS,OACTE,WAAY,UACXN,EAAM8G,YAAY0P,KAAK,MAAQ,CAC9B6E,MAAO,EACPzV,MAAO,OACPvF,eAAgB,SAChB+H,UAAWpI,EAAM2F,QAAQ,GACzB6D,aAAcxJ,EAAM2F,QAAQ,KAGhC2V,qBAAsB,CACpBlb,QAAS,OACTE,WAAY,SACZuE,WAAY7E,EAAM2F,QAAQ,IAE5B4V,oBAAqB,CACnBC,YAAaxb,EAAMQ,QAAQ7D,KAAKwG,KAAO,iBAEzCsY,gBAAiB,CACfvb,QAAS,GACTiH,aAAc,IAEhBuU,uBAAwB,CACtBhX,SAAU,kBACVG,WAAY7E,EAAM2F,QAAQ,IAE5BjD,QAAS,CACPX,gBAAiB/B,EAAMQ,QAAQkC,QAAQK,KACvCT,MAAO,QAETG,QAAS,CACPV,gBAAiB/B,EAAMQ,QAAQiC,QAAQM,KACvCT,MAAO,QAETE,UAAW,CACTT,gBAAiB/B,EAAMQ,QAAQgC,UAAUO,KACzCT,MAAO,Y,UC1IIvC,gBAAW,SAAAC,GAAK,MAAK,CAClC2b,cAAe,CACbvb,QAAS,OACTyF,UAAW,QAEb+V,aAAc,CACZ1b,QAASF,EAAM2F,QAAQ,GACvBsU,cAAeja,EAAM2F,QAAQ,GAC7BvF,QAAS,OACTC,eAAgB,gBAChBC,WAAY,UAEdub,WAAY,CACVna,UAAW1B,EAAMsD,cAAcC,QAEjCuY,WAAY,CACV7B,cAAeja,EAAM2F,QAAQ,GAC7BwB,aAAcnH,EAAM2F,QAAQ,GAC5BnB,YAAaxE,EAAM2F,QAAQ,IAE7BoW,UAAW,CACT7b,QAAS,GAEX4D,MAAO,CACL1D,QAAS,OACT8H,cAAe,SACfxC,SAAU,EACVsW,SAAU,QAEZC,WAAY,CACV1S,QAASvJ,EAAM2F,QAAQ,GACvBzF,QAAS,EACT0F,MAAO,GACPtB,OAAQ,GACRhC,MAAOtC,EAAMQ,QAAQ7D,KAAKwG,KAC1B,UAAW,CACTpB,gBAAiB/B,EAAMQ,QAAQ+B,QAAQQ,KACvCT,MAAO,8BAGX4Z,eAAgB,CACdxa,UAAW,Y,0IC7BA,SAASya,GAAT,GAYX,IAAD,IAXDjS,EAWC,EAXDA,SACArN,EAUC,EAVDA,MACAuf,EASC,EATDA,cACAC,EAQC,EARDA,UAEAC,GAMC,EAPDC,kBAOC,EANDD,QACAE,EAKC,EALDA,gBACAC,EAIC,EAJDA,YACAhb,EAGC,EAHDA,MACAya,EAEC,EAFDA,eAGItb,GADH,kBACamJ,MAGV,EAAoCgF,mBAAS,MAAjD,oBAAK2N,EAAL,KACI,GADJ,KACwC3N,oBAAS,IAAjD,oBAAK4N,EAAL,KAAqBC,EAArB,KAEA,OACE,sBAAK5b,UAAWJ,EAAQ+a,cAAela,MAAOA,GAAK,eAASA,GAA5D,UACE,eAACob,GAAA,EAAD,CACE7b,UAAWJ,EAAQkD,MACnBlD,QAAS,CACPgD,KAAM8G,IAAW9J,EAAQib,WAAT,eACbjb,EAAQsb,eAAiBA,KAJhC,UAQE,qBACElb,UAAW0J,IAAW9J,EAAQgb,cAAT,mBAClBhb,EAAQmb,UAAYS,GADF,cAElBC,EAAcA,GAFI,IADvB,SAMGH,GAGC,eAAC,IAAMQ,SAAP,WACE,cAAC5a,EAAA,EAAD,CAAYtC,QAAQ,KAAK0C,MAAM,gBAAgBya,QAAM,EAArD,SACGlgB,KAEF,OAeP,qBACEmE,UAAW0J,IAAW9J,EAAQkb,YAAT,mBAClBlb,EAAQmb,UAAYK,GADF,cAElBC,EAAYA,GAFM,IADvB,SAMGnS,OAGL,eAACoL,GAAA,EAAD,CACEpD,GAAG,cACH1S,KAAMmd,EACNnH,SAAUkH,EACVhd,QAAS,kBAAMkd,GAAgB,IAC/BlH,sBAAoB,EALtB,UAOE,cAACE,GAAA,EAAD,UACE,cAAC1T,EAAA,EAAD,qBAEF,cAAC0T,GAAA,EAAD,UACE,cAAC1T,EAAA,EAAD,qBAEF,cAAC0T,GAAA,EAAD,UACE,cAAC1T,EAAA,EAAD,uBAEF,cAAC0T,GAAA,EAAD,UACE,cAAC1T,EAAA,EAAD,4BC7FV,IAAM6H,GAAYhK,aAAW,SAACC,GAAD,MAAY,CACvC4D,KAAM,CACJhC,SAAU,WACVoa,SAAU,SACV1X,OAAQ,OACRpE,QAAS,GACT2F,UAAW,IACXzD,OAAQ,UACR2D,WAAY,WACZhE,gBAAiB,SAACqI,GAAD,OAAWA,EAAM9H,QAEpC0B,KAAM,CACJpC,SAAU,WACVob,QAAS,GACThb,MAAO,GACP0C,SAAU,IACVpC,MAAOtC,EAAMQ,QAAQC,KAAK,UAIf,SAASwc,GAAY7S,GAClC,IAAMxJ,EAAUmJ,GAAUK,GAE1B,OACE,eAACyS,GAAA,EAAD,CAAO7b,UAAWJ,EAAQgD,KAAMzB,QAASiI,EAAMjI,QAASV,MAAO2I,EAAM3I,MAArE,UACE,mBAAGT,UAAW2T,IAAW,uBAAwB/T,EAAQoD,MAAzD,SACGoG,EAAMpG,OAERoG,EAAMF,Y,kCCWPgT,GAAS7M,KAAK8M,GAAK,IACnBC,GAAwB,SAAC,GAQxB,IAPLC,EAOI,EAPJA,GACAC,EAMI,EANJA,GACAC,EAKI,EALJA,SACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,QAGMC,GADF,EADJC,MAEeJ,EAA4C,IAA7BC,EAAcD,IACtCK,EAAIR,EAAKM,EAAStN,KAAKyN,KAAKP,EAAWL,IACvCa,EAAIT,EAAKK,EAAStN,KAAK2N,KAAKT,EAAWL,IAE7C,OACE,sBACEW,EAAGA,EACHE,EAAGA,EACHE,KAAK,QACLC,WAAYL,EAAIR,EAAK,QAAU,MAC/Bc,iBAAiB,UALnB,mBAOMxN,IAAyB,IAAV+M,GAAeU,QAAQ,IAP5C,QAYEC,GAAsB,CAC1B,CACEC,QAAS,6CACTC,EAAG,KAEL,CACED,QAAS,mDACTC,EAAG,IAEL,CACED,QAAS,iCACTC,EAAG,IAEL,CACED,QAAS,qBACTC,EAAG,IAEL,CACED,QAAS,iCACTC,EAAG,IAEL,CACED,QAAS,uCACTC,EAAG,IAEL,CACED,QAAS,qBACTC,EAAG,IAEL,CACED,QAAS,2BACTC,EAAG,KAEL,CACED,QAAS,qBACTC,EAAG,IAEL,CACED,QAAS,eACTC,EAAG,IAEL,CACED,QAAS,2BACTC,EAAG,IAEL,CACED,QAAS,iCACTC,EAAG,KAIDC,GAAoB,CACxB,CAAE/f,KAAM,uCAAU/H,MAAO,GAAI4L,MAAO,WACpC,CAAE7D,KAAM,uCAAU/H,MAAO,EAAG4L,MAAO,YAGtB,SAASmc,GAAUrU,GAChC,IAAIxJ,EAAUmJ,KACV/J,EAAQwK,eACNuC,EAAUyG,cAChB,EAAgCzE,mBAAS,IAAzC,oBAAO2P,EAAP,KAAiBC,EAAjB,KACA,EAAwC5P,mBAAS,IAAjD,oBAAO6P,EAAP,KAAqBC,EAArB,KACA,EAAsC9P,mBAAS,IAA/C,oBAAO+P,EAAP,KAAoBC,EAApB,KACA,EAAwDhQ,oBAAS,GAAjE,oBAAOiQ,EAAP,KAA6BC,EAA7B,KACA,EAAsDlQ,oBAAS,GAA/D,oBAAOmQ,EAAP,KAA4BC,EAA5B,KACA,EAA6DpQ,mBAC3DqQ,QADF,oBAAOC,EAAP,KAA+BC,EAA/B,KAGA,EAAyDvQ,mBAASqQ,QAAlE,oBAAOG,EAAP,KAA6BC,EAA7B,KACA,EAA+DzQ,mBAC7DqQ,QADF,oBAAOK,EAAP,KAAgCC,EAAhC,KAGA,EAA2D3Q,mBAASqQ,QAApE,oBAAOO,EAAP,KAA8BC,EAA9B,KAEM1L,EAAsBrF,GAAO,CACjCZ,OAAQ,MACRC,IAAI,qBAGA2R,EAAoBhR,GAAO,CAC/BZ,OAAQ,MACRC,IAAK8Q,EAAoB,mCACOS,EAAwBK,GAAGC,cADlC,eACsDJ,EAAsBG,GAAGC,cAD/E,KAErB,uBAGAC,EAAmBnR,GAAO,CAC9BZ,OAAQ,MACRC,IAAKgR,EAAmB,mCACQG,EAAuBS,GAAGC,cADlC,eACsDR,EAAqBO,GAAGC,cAD9E,KAEpB,uBAGAE,EAAe,SAACjiB,GACpB+O,EAAQQ,KAAR,eAAqBvP,KAGjBkiB,EAAqB,SAAC/K,EAAGnX,GAChB,SAATA,EACFshB,EAA2BnK,GAE3BqK,EAAyBrK,IAIvBgL,EAAsB,SAAChL,EAAGnX,GACjB,SAATA,EACF0hB,EAA4BvK,GAE5ByK,EAA0BzK,IAIxBiL,EAAe,yCAAG,iCAAAlT,EAAA,sEACOgH,EAAoB/G,UAD3B,OAChBkT,EADgB,OAEdC,EAAcD,EAAdC,UACFC,EAAe,GACZ,OAATD,QAAS,IAATA,KAAWpf,KAAI,SAAC1C,GACd+hB,EAAahT,KAAb,2BAAuB/O,GAAvB,IAA6B8D,MAAO6N,WAEtCwO,EAAY4B,GAPU,2CAAH,qDAUfC,EAAe,yCAAG,+BAAAtT,EAAA,sEACF2S,EAAkB1S,UADhB,OAChBsT,EADgB,OAEdC,EAAaD,EAAbC,SACR7B,EAAgB6B,GAHM,2CAAH,qDAMfC,GAAc,yCAAG,+BAAAzT,EAAA,sEACD8S,EAAiB7S,UADhB,OACfsT,EADe,OAEbG,EAAaH,EAAbG,SACR7B,EAAe6B,GAHM,2CAAH,qDAkBpB,OAZArM,qBAAU,WACR6L,MACC,IAEH7L,qBAAU,WACRiM,MACC,CAACf,EAAyBE,IAE7BpL,qBAAU,WACRoM,OACC,CAACtB,EAAwBE,IAG1B,qCACE,eAACle,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAGlE,MAAO,CAAE+H,aAAc,IAAnD,UACGwH,GAAc1a,EAAS0D,gBAAgBgC,eACtC,cAACqF,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAG5H,GAAI,EAAG1X,GAAI,EAAGD,GAAI,GAApC,SACE,cAAC,GAAD,CACE0C,KAAK,kBACL7B,QAAS,WACP8d,EAAa,4BAHjB,SAME,qBAAKjf,UAAWJ,EAAQkZ,WAAxB,SACE,cAAC,GAAD,CAAYla,QAAQ,KAApB,+DAKPoR,GAAc1a,EAAS0D,gBAAgBgC,eACtC,cAACqF,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAG5H,GAAI,EAAG1X,GAAI,EAAGD,GAAI,GAApC,SACE,cAAC,GAAD,CACE0C,KAAK,OACL7B,QAAS,WACP8d,EAAa,6BAHjB,SAME,qBAAKjf,UAAWJ,EAAQkZ,WAAxB,SACE,cAAC,GAAD,CAAYla,QAAQ,KAApB,+DAKPoR,GAAc1a,EAAS0D,gBAAgBgC,eACtC,cAACqF,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAG5H,GAAI,EAAG1X,GAAI,EAAGD,GAAI,GAApC,SACE,cAAC,GAAD,CACE0C,KAAK,gBACL7B,QAAS,WACP8d,EAAa,+BAHjB,SAME,qBAAKjf,UAAWJ,EAAQkZ,WAAxB,SACE,cAAC,GAAD,CAAYla,QAAQ,KAApB,2EAKPoR,GAAc1a,EAAS0D,gBAAgB8B,eACtC,cAACuF,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAG5H,GAAI,EAAG1X,GAAI,EAAGD,GAAI,GAApC,SACE,cAAC,GAAD,CACE0C,KAAK,YACL7B,QAAS,WACP8d,EAAa,gCAHjB,SAME,qBAAKjf,UAAWJ,EAAQkZ,WAAxB,SACE,cAAC,GAAD,CAAYla,QAAQ,KAApB,8EAMV,eAACyB,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAGlE,MAAO,CAAE+H,aAAc,IAAnD,UACGwH,GAAc1a,EAAS0D,gBAAgBgC,eACtC,cAACqF,EAAA,EAAD,CAAM7C,MAAI,EAACya,GAAI,EAAG3X,GAAI,EAAtB,SACE,cAAC,GAAD,CACEG,MAAO,CAAEM,gBAAiB,WAC1BiC,KAAK,OACL7B,QAAS,WACP8d,EAAa,0BAJjB,SAOE,qBAAKjf,UAAWJ,EAAQkZ,WAAxB,SACE,cAAC,GAAD,CAAYla,QAAQ,KAAK6B,MAAO,CAAEa,MAAO,WAAzC,0GAOP0O,GAAc1a,EAAS0D,gBAAgB8mB,kBACtC,cAACzf,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAAC,GAAD,CACE0C,KAAK,4BACL7B,QAAS,WACP8d,EAAa,YAHjB,SAME,sBACEjf,UAAWJ,EAAQkZ,WACnBrY,MAAO,CACLyG,cAAe,MACf7H,eAAgB,iBAJpB,UAOE,gCACE,cAAC,GAAD,CAAYiC,MAAM,SAAS1C,QAAQ,KAAnC,sEAGA,sBACEoB,UAAWJ,EAAQ+Z,yBACnBlZ,MAAO,CAAE2G,UAAW,IAFtB,UAIE,sBAAKpH,UAAWJ,EAAQga,cAAxB,UACE,cAACpD,GAAD,CAAKlV,MAAM,cACX,cAAC,GAAD,CACEA,MAAM,OACN6H,gBAAgB,YAChBnJ,UAAWJ,EAAQia,kBAHrB,qDAQF,sBAAK7Z,UAAWJ,EAAQga,cAAxB,UACE,cAACpD,GAAD,CAAKlV,MAAM,YACX,cAAC,GAAD,CACEA,MAAM,OACN6H,gBAAgB,YAChBnJ,UAAWJ,EAAQia,kBAHrB,2DAUN,eAACkG,GAAA,EAAD,CAAUnb,MAAO,IAAKtB,OAAQ,IAA9B,UACE,cAAC0c,GAAA,EAAD,CACE1jB,KAAMkhB,GACNnB,GAAI,IACJC,GAAI,IACJ2D,WAAY,IACZC,SAAU,EACV1D,YAAa,GACbC,YAAa,GACbQ,KAAK,UACLkD,aAAc,EACdC,QAAQ,QAVV,SAYG5C,GAAkBtd,KAAI,SAACmgB,EAAOzD,GAAR,OACrB,cAAC0D,GAAA,EAAD,CAA4BrD,KAAMoD,EAAM/e,OAAxC,eAAmBsb,SAGvB,cAAC,KAAD,cAKP,OAEL,eAACvc,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAGlE,MAAO,CAAE+H,aAAc,IAAnD,UACGwH,GAAc1a,EAAS0D,gBAAgBunB,kBACtC,cAAClgB,EAAA,EAAD,CAAMI,MAAO,CAAE6C,OAAQ,KAAO9F,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAA9C,SACE,cAAC6a,GAAD,CACEtf,MAAM,yFACN2kB,YAAU,EACVnF,UAAWzb,EAAQ2Z,eACnBvZ,UAAWJ,EAAQmZ,KAJrB,SAME,cAAC0H,GAAA,EAAD,CAAqB7b,MAAM,OAAOtB,OAAO,OAAzC,SACE,eAACod,GAAA,EAAD,CACErE,GAAG,MACHC,GAAG,MACHG,YAAY,MACZngB,KAAM+gB,GAJR,UAME,cAACsD,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,CAAgBR,QAAQ,YACxB,cAACS,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,CACErjB,KAAK,OACL2iB,QAAQ,IACRW,OAAO,UACP9D,KAAK,UACL+D,YAAa,cAOxBhR,GAAc1a,EAAS0D,gBAAgBiC,iBACtC,cAACoF,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAAC6a,GAAD,CAAQtf,MAAM,mFAAkB2kB,YAAU,EAACxgB,UAAWJ,EAAQmZ,KAA9D,SACE,eAAC1Y,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAzB,UACG+Y,EAAS9P,QACR,cAACvN,EAAA,EAAD,CAAM7C,MAAI,EAAC+C,GAAI,EAAGD,GAAI,GAAtB,SACE,qBAAKG,MAAO,CAAEmE,MAAO,OAAQtB,OAAQ,SAArC,SACE,qBAAK7C,MAAO,CAAEmE,MAAO,OAAQtB,OAAQ,QAArC,SACE,cAACmd,GAAA,EAAD,CAAqB7b,MAAM,OAAOtB,OAAO,OAAzC,SACE,cAACyc,GAAA,EAAD,CAAUnb,MAAM,MAAMtB,OAAO,MAA7B,SACE,cAAC0c,GAAA,EAAD,CACE1jB,KAAMohB,EACNrB,GAAG,MACHC,GAAG,MACH2E,WAAW,EACXtrB,MAAOymB,GACPK,YAAa,IACbQ,KAAK,UACLmD,QAAQ,SARV,SAUG1C,EAASxd,KAAI,SAACmgB,EAAOzD,GAAR,OACZ,cAAC0D,GAAA,EAAD,CAEErD,KAAMoD,EAAM/e,OAFd,eACesb,mBAW/B,cAACvc,EAAA,EAAD,CAAM7C,MAAI,EAAC+C,GAAI,EAAGD,GAAI,GAAtB,SACE,qBAAKN,UAAWJ,EAAQyZ,sBAAxB,SACGqE,EAASxd,KAAI,WAA0B0c,GAA1B,IAAGnf,EAAH,EAAGA,KAAMyjB,EAAT,EAASA,OAAQ5f,EAAjB,EAAiBA,MAAjB,OACZ,sBAAiBtB,UAAWJ,EAAQ0Z,oBAApC,UACE,cAAC9C,GAAD,CAAKlV,MAAOA,IACZ,eAAC,GAAD,CACE1C,QAAQ,KACR6B,MAAO,CAAEoF,WAAY,UAFvB,iBAISpI,EAJT,UAMA,eAAC,GAAD,CACE6D,MAAM,OACN1C,QAAQ,KACRuK,gBAAgB,YAHlB,iBAKSwG,GAAcuR,QAbf5f,iBAwBvB0O,GAAc1a,EAAS0D,gBAAgB6B,eACtC,cAACwF,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAAC6a,GAAD,CACEE,UAAWzb,EAAQqa,cACnBqB,OACE,sBAAKtb,UAAWJ,EAAQsa,gBAAxB,UACE,cAAC,GAAD,CACEtb,QAAQ,KACR0C,MAAM,OACN6H,gBAAgB,YAHlB,uHAQC6U,GACC,qCACE,cAAC3d,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAIN,UAAWJ,EAAQiZ,WAA7C,SACE,cAACsI,GAAA,EAAD,CACEC,QAAM,EACN3jB,KAAK,OACL9H,MAAM,8CACN0rB,aAAa,WACbC,QAAQ,iCACRC,YAAY,qBACZC,UAAW,SAACjP,GAAD,OACTA,EAAOA,EAAKyB,OAAO,iBAAmB,IAExCte,MAAO+oB,EACPlN,SAAU,SAAC4C,GAAD,OAAOgL,EAAoBhL,EAAG,SACxC1T,MAAO,CAAEmE,MAAO,YAGpB,cAACvE,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAIN,UAAWJ,EAAQiZ,WAA7C,SACE,cAACsI,GAAA,EAAD,CACEC,QAAM,EACN3jB,KAAK,OACL9H,MAAM,8CACN0rB,aAAa,WACbC,QAAQ,iCACRC,YAAY,qBACZC,UAAW,SAACjP,GAAD,OACTA,EAAOA,EAAKyB,OAAO,iBAAmB,IAExCte,MAAOipB,EACPpN,SAAU,SAAC4C,GAAD,OAAOgL,EAAoBhL,EAAG,OACxC1T,MAAO,CAAEmE,MAAO,eAKxB,sBAAK5E,UAAWJ,EAAQwa,sBAAxB,UACE,sBAAKpa,UAAWJ,EAAQ0a,qBAAxB,UACE,cAAC9D,GAAD,CAAKlV,MAAM,YACX,cAAC,GAAD,CAAYtB,UAAWJ,EAAQ8a,uBAA/B,2DAIF,sBAAK1a,UAAWJ,EAAQ0a,qBAAxB,UACE,cAAC9D,GAAD,CAAKlV,MAAM,cACX,cAAC,GAAD,CAAYtB,UAAWJ,EAAQ8a,uBAA/B,2DAIF,cAAC,KAAD,CAAY7e,MAAM,iCAAlB,SACE,cAAC6X,GAAA,EAAD,CACEvS,QAAS,kBACP8c,GAAyBD,IAF7B,SAKE,mBAAGyD,MAAM,uBAAT,kCAnEZ,SA0EE,cAAChB,GAAA,EAAD,CAAqB7b,MAAM,OAAOtB,OAAQ,IAA1C,SACE,eAACoe,GAAA,EAAD,CACE9c,MAAO,IACPtB,OAAQ,IACRhH,KAAMshB,EACNrV,OAAQ,CACNzH,IAAK,EACL+F,MAAO,GACP7F,KAAM,GACNgb,OAAQ,GARZ,UAWE,cAAC2F,GAAA,EAAD,CAAeC,gBAAgB,QAC/B,cAACC,GAAA,EAAD,CAAOzB,QAAQ,SACf,cAAC0B,GAAA,EAAD,IACA,cAAC,KAAD,IACA,cAACC,GAAA,EAAD,CACE/kB,KAAK,WACLojB,QAAQ,SACRW,OAAQ/hB,EAAMQ,QAAQ+B,QAAQQ,KAC9BigB,UAAW,CAAEC,EAAG,KAElB,cAACF,GAAA,EAAD,CACE/kB,KAAK,WACLojB,QAAQ,UACRW,OAAQ/hB,EAAMQ,QAAQgC,UAAUO,gBAO3CiO,GAAc1a,EAAS0D,gBAAgB+B,eACtC,cAACsF,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAAC6a,GAAD,CACEE,UAAWzb,EAAQqa,cACnBqB,OACE,sBAAKtb,UAAWJ,EAAQsa,gBAAxB,UACE,cAAC,GAAD,CACEtb,QAAQ,KACR0C,MAAM,OACN6H,gBAAgB,YAHlB,wFAOC+U,GACC,qCACE,cAAC7d,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAIN,UAAWJ,EAAQiZ,WAA7C,SACE,cAACsI,GAAA,EAAD,CACEC,QAAM,EACN3jB,KAAK,OACL9H,MAAM,8CACN0rB,aAAa,WACbC,QAAQ,iCACRC,YAAY,qBACZC,UAAW,SAACjP,GAAD,OACTA,EAAOA,EAAKyB,OAAO,iBAAmB,IAExCte,MAAO2oB,EACP9M,SAAU,SAAC4C,GAAD,OAAO+K,EAAmB/K,EAAG,SACvC1T,MAAO,CAAEmE,MAAO,YAGpB,cAACvE,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAIN,UAAWJ,EAAQiZ,WAA7C,SACE,cAACsI,GAAA,EAAD,CACEC,QAAM,EACN3jB,KAAK,OACL9H,MAAM,8CACN0rB,aAAa,WACbC,QAAQ,iCACRC,YAAY,qBACZC,UAAW,SAACjP,GAAD,OACTA,EAAOA,EAAKyB,OAAO,iBAAmB,IAExCte,MAAO6oB,EACPhN,SAAU,SAAC4C,GAAD,OAAO+K,EAAmB/K,EAAG,OACvC1T,MAAO,CAAEmE,MAAO,eAKxB,sBAAK5E,UAAWJ,EAAQwa,sBAAxB,UACE,sBAAKpa,UAAWJ,EAAQ0a,qBAAxB,UACE,cAAC9D,GAAD,CAAKlV,MAAM,YACX,cAAC,GAAD,CAAYtB,UAAWJ,EAAQ8a,uBAA/B,8EAIF,sBAAK1a,UAAWJ,EAAQ0a,qBAAxB,UACE,cAAC9D,GAAD,CAAKlV,MAAM,cACX,cAAC,GAAD,CAAYtB,UAAWJ,EAAQ8a,uBAA/B,8EAIF,cAAC,KAAD,CAAY7e,MAAM,iCAAlB,SACE,cAAC6X,GAAA,EAAD,CACEvS,QAAS,kBACPgd,GAAwBD,IAF5B,SAKE,mBAAGuD,MAAM,uBAAT,kCAlEZ,SAyEG3D,EAAYlQ,QACX,qBAAKnN,MAAO,CAAEmE,MAAO,OAAQtB,OAAQ,SAArC,SACE,qBAAK7C,MAAO,CAAEmE,MAAO,OAAQtB,OAAQ,QAArC,SACE,cAACmd,GAAA,EAAD,CAAqB7b,MAAM,OAAOtB,OAAO,OAAzC,SACE,eAAC4e,GAAA,EAAD,CACEtd,MAAO,IACPtB,OAAQ,IACRhH,KAAMwhB,EACNvV,OAAQ,CACNzH,IAAK,EACL+F,MAAO,GACP7F,KAAM,GACNgb,OAAQ,GARZ,UAWE,cAAC2F,GAAA,EAAD,CAAeC,gBAAgB,QAC/B,cAACC,GAAA,EAAD,CAAOzB,QAAQ,SACf,cAAC0B,GAAA,EAAD,IACA,cAAC,KAAD,IACA,cAACK,GAAA,EAAD,CAAK/B,QAAQ,MAAMnD,KAAK,YACxB,cAACkF,GAAA,EAAD,CAAK/B,QAAQ,OAAOnD,KAAK,+B,2EC1oBlC,SAASmF,GAAahZ,GACnC,IAAQa,EAAyBb,EAAzBa,QAASoY,EAAgBjZ,EAAhBiZ,YACjB,EAAgCjY,IAAM2D,SAAS,MAA/C,oBAAOyG,EAAP,KAAiB8N,EAAjB,KACM9jB,EAAO+V,QAAQC,GAMfrW,EAAc,WAClBmkB,EAAY,OAQd,OACE,gCACE,cAAC5O,GAAA,EAAD,CACE,aAAW,OACX,gBAAc,YACd,gBAAc,OACdvS,QAnBc,SAAC/C,GACnBkkB,EAAYlkB,EAAMgW,gBAchB,SAME,cAAC,KAAD,MAEF,cAACE,GAAA,EAAD,CACEpD,GAAG,YACHsD,SAAUA,EACV+N,aAAW,EACX/jB,KAAMA,EACNE,QAASP,EACTqkB,WAAY,CACV/hB,MAAO,CACLgiB,UAAWC,MARjB,SAYGzY,EAAQ/J,KACP,SAAC7C,GAAD,OACGA,EAAOslB,QACN,cAAC/N,GAAA,EAAD,CAA0BzT,QAAS,kBA9BzBnE,EA8B4CK,EAAO6T,GA7BvEmR,EAAYrlB,QACZmB,IAFmB,IAACnB,GA8BV,SACGK,EAAOxB,OADKwB,EAAO6T,Y,kCCpC9B0R,GAAmB7jB,aAAW,SAACC,GAAD,MAAY,CAC9C4D,KAAM,CACJY,YAAaxE,EAAM2F,QAAQ,GAC3BwB,aAAcnH,EAAM2F,QAAQ,GAC5BvF,QAAS,OACTC,eAAgB,gBAChBC,WAAY,UAEdujB,UACyB,UAAvB7jB,EAAMQ,QAAQxC,KACV,CACEsE,MAAOtC,EAAMQ,QAAQgC,UAAUO,KAC/BhB,gBAAiB+hB,aAAQ9jB,EAAMQ,QAAQgC,UAAU9B,MAAO,MAE1D,CACE4B,MAAOtC,EAAMQ,QAAQ7D,KAAK4F,QAC1BR,gBAAiB/B,EAAMQ,QAAQgC,UAAUQ,MAEjD+gB,IAAK,CACH3jB,QAAS,OACTE,WAAY,cAwGD0jB,GApGE,SAAC5Z,GAChB,IAAMxJ,EAAUgjB,KAEd/mB,EAQEuN,EARFvN,MACAonB,EAOE7Z,EAPF6Z,MACAC,EAME9Z,EANF8Z,gBACAC,EAKE/Z,EALF+Z,aACAC,EAIEha,EAJFga,aACAC,EAGEja,EAHFia,eACAC,EAEEla,EAFFka,QACAC,EACEna,EADFma,cAEF,EAA4CxV,qBAAWwV,GAAvD,oBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAA0C1V,oBAAS,GAAnD,oBAAO2V,EAAP,KAAsBC,EAAtB,KACA,EAAoC5V,mBAASwV,GAA7C,oBAAOK,EAAP,KAAmBC,EAAnB,KAkBA,OACE,qCACE,eAACpQ,GAAA,EAAD,CAASzT,UAAWkS,aAAKtS,EAAQgD,KAAMwgB,GAAvC,UACE,cAACliB,EAAA,EAAD,CAAYtC,QAAQ,KAAKsS,GAAG,aAAatV,UAAU,MAAnD,SACGC,IAEH,sBAAKmE,UAAWJ,EAAQmjB,IAAxB,UACGS,GACC,cAAChS,GAAA,EAAD,CACE9b,MAAOkuB,EACP9nB,KAAK,QACLnG,MAAM,iCACNiJ,QAAQ,WACR2S,SA7BW,SAACnT,GACtB,IAAQ1I,EAAU0I,EAAM0lB,OAAhBpuB,MACRmuB,EAAcnuB,IA4BJquB,UAzBa,SAAC5P,GACV,UAAVA,EAAE9X,KACJ8mB,EAAaS,IAwBL7R,WAAY,CACVC,aACE,cAACC,GAAA,EAAD,CAAgBrR,SAAS,MAAzB,SACE,mBACEZ,UAAU,uBACVS,MAAO,CAAEW,OAAQ,WACjBD,QA1BG,WACrB0iB,EAAc,IACdV,EAAa,KAqBG,wBAYTA,GACC,cAACa,GAAA,EAAD,CAASnoB,MAAM,uEAAf,SACE,cAAC6X,GAAA,EAAD,CACE,aAAW,cACXvS,QAAS,kBAAMsiB,GAAmBD,IAFpC,SAIE,cAAC,KAAD,QAILN,GACC,cAACc,GAAA,EAAD,CAASnoB,MAAM,iCAAf,SACE,cAAC6X,GAAA,EAAD,CAAYvS,QAAS,kBAAMwiB,GAAkBD,IAA7C,SACE,mBAAGjC,MAAM,uBAAT,4BAKY,oBAAVwB,GACN,eAAC5hB,EAAA,EAAD,CACEzC,QAAS0kB,EAAU,GAAK,YACxBhiB,MAAOgiB,EAAU,GAAK,UACtBtjB,UAAWqjB,EACXliB,QAAS8hB,EAJX,UAMGK,EAAU,GAAK,uCAChB,sBAAM7B,MAAM,uBAAuBhhB,MAAO,CAAEa,MAAO,SAAnD,0BAOR,cAACmW,GAAA,EAAD,CAAUrX,GAAIsjB,EAAd,SAA8BR,Q,oBC7FrBe,OA/Bf,SAAqB7a,GACnB,IAAQiR,EAA6CjR,EAA7CiR,MAAO6J,EAAsC9a,EAAtC8a,QAASC,EAA6B/a,EAA7B+a,cAAeC,EAAchb,EAAdgb,UAKvC,OACE,cAACC,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,UACGF,EAAUlkB,KAAI,SAACqkB,GAAD,OACb,cAACC,GAAA,EAAD,CACE/jB,MAAO,CAAEgkB,UAAW,SAEpBvlB,QAAS,OACTwlB,cAAeR,IAAYK,EAASrT,IAAKmJ,EAJ3C,SAME,cAACsK,GAAA,EAAD,CACE3kB,UAAW,CAAEZ,QAAS,QACtBwlB,OAAQV,IAAYK,EAASrT,GAC7BpP,UAAWoiB,IAAYK,EAASrT,GAAKmJ,EAAQ,MAC7ClZ,SAlBe0jB,EAkBYN,EAASrT,GAlBR,SAAC9S,GACvC+lB,EAAc/lB,EAAOymB,KAab,SAME,cAAC3jB,EAAA,EAAD,CAAYtC,QAAQ,KAApB,SAA0B2lB,EAAS5uB,WAVhC4uB,EAASrT,IAVE,IAAC2T,U,UCoBdC,OA5Bf,SAAqB1b,GACnB,IACE2b,EAKE3b,EALF2b,iBACAC,EAIE5b,EAJF4b,MACAC,EAGE7b,EAHF6b,wBACAC,EAEE9b,EAFF8b,KACAC,EACE/b,EADF+b,YAEF,OACE,cAACC,GAAA,EAAD,CACE3kB,MAAO,CAAErB,QAAS,QAClBimB,mBAAoB,CAAC,IAAK,IAAK,KAC/BzpB,UAAU,MACVopB,MAAOA,EACPG,YAAaA,EACbD,KAAMA,EACNI,aAAcP,EACdQ,oBAAqBN,EACrBO,iBAAiB,2DACjBC,mBAAmB,8CACnBC,mBAAmB,8CACnBC,mBAAoB,gBAAGC,EAAH,EAAGA,KAAMrO,EAAT,EAASA,GAAIyN,EAAb,EAAaA,MAAb,gBACfY,EADe,YACPrO,EADO,0BACa,IAAXyN,EAAeA,EAAQ,OCxBpCjmB,gBAAW,SAACC,GAAD,MAAY,CACpC4D,KAAM,CACJgC,MAAO,QAET9B,MAAO,CACL8B,MAAO,OACP4D,aAAcxJ,EAAM2F,QAAQ,IAE9BkhB,MAAO,CACLhe,SAAU,S,oBCIC,SAASie,GAAT,GAAwC,IAAdC,EAAa,EAAbA,UACvC,OACE,eAAClK,GAAA,EAAD,CAAOpb,MAAO,CAAEvB,QAAS,IAAzB,UACE,eAACmB,EAAA,EAAD,CACEpB,WAAS,EACT0F,QAAS,EACTlE,MAAO,CACLmE,MAAO,OACPxF,QAAS,OACTF,QAAS,SACTG,eAAgB,iBAPpB,UAUE,cAACgB,EAAA,EAAD,CAAM7C,MAAI,EAACiD,MAAO,CAAEmE,MAAM,OAA1B,SACE,cAACohB,GAAA,EAAD,CAAUpnB,QAAQ,WAEpB,cAACyB,EAAA,EAAD,CAAM7C,MAAI,EAACiD,MAAO,CAAEmE,MAAM,OAA1B,SACE,cAACohB,GAAA,EAAD,CAAUpnB,QAAQ,cAGtB,cAACyB,EAAA,EAAD,CACEpB,WAAS,EACT0F,QAAS,EACTlE,MAAO,CAAEmE,MAAO,OAAQxF,QAAS,OAAQF,QAAS,UAHpD,SAKG6mB,EAAU7lB,KAAI,SAAC1C,GACd,OACE,cAAC6C,EAAA,EAAD,CAAM7C,MAAI,EAACiD,MAAO,CAAEmE,MAAM,GAAD,OAAK,IAAMmhB,EAAUnY,OAArB,MAAzB,SACE,cAACoY,GAAA,EAAD,CAAUpnB,QAAQ,gBAK1B,cAAC+V,GAAA,EAAD,IACA,gCACE,cAACtU,EAAA,EAAD,CACEpB,WAAS,EACT0F,QAAS,EACTlE,MAAO,CAAEmE,MAAO,OAAQxF,QAAS,OAAQF,QAAS,UAHpD,SAKG6mB,EAAU7lB,KAAI,SAAC1C,GACd,OACE,cAAC6C,EAAA,EAAD,CAAM7C,MAAI,EAACiD,MAAO,CAAEmE,MAAM,GAAD,OAAK,IAAMmhB,EAAUnY,OAArB,MAAzB,SACE,cAACoY,GAAA,EAAD,CACEpnB,QAAQ,OACRgG,MAAK,UAAK4K,GAAgB,GAAI,KAAzB,cAMf,cAACmF,GAAA,EAAD,IACA,cAACtU,EAAA,EAAD,CACEpB,WAAS,EACT0F,QAAS,EACTlE,MAAO,CAAEmE,MAAO,OAAQxF,QAAS,OAAQF,QAAS,UAHpD,SAKG6mB,EAAU7lB,KAAI,SAAC1C,GACd,OACE,cAAC6C,EAAA,EAAD,CAAM7C,MAAI,EAACiD,MAAO,CAAEmE,MAAM,GAAD,OAAK,IAAMmhB,EAAUnY,OAArB,MAAzB,SACE,cAACoY,GAAA,EAAD,CACEpnB,QAAQ,OACRgG,MAAK,UAAK4K,GAAgB,GAAI,KAAzB,cAMf,cAACmF,GAAA,EAAD,IACA,cAACtU,EAAA,EAAD,CACEpB,WAAS,EACT0F,QAAS,EACTlE,MAAO,CAAEmE,MAAO,OAAQxF,QAAS,OAAQF,QAAS,UAHpD,SAKG6mB,EAAU7lB,KAAI,SAAC1C,GACd,OACE,cAAC6C,EAAA,EAAD,CAAM7C,MAAI,EAACiD,MAAO,CAAEmE,MAAM,GAAD,OAAK,IAAMmhB,EAAUnY,OAArB,MAAzB,SACE,cAACoY,GAAA,EAAD,CACEpnB,QAAQ,OACRgG,MAAK,UAAK4K,GAAgB,GAAI,KAAzB,cAMf,cAACmF,GAAA,EAAD,IACA,cAACtU,EAAA,EAAD,CACEpB,WAAS,EACT0F,QAAS,EACTlE,MAAO,CAAEmE,MAAO,OAAQxF,QAAS,OAAQF,QAAS,UAHpD,SAKG6mB,EAAU7lB,KAAI,SAAC1C,GACd,OACE,cAAC6C,EAAA,EAAD,CAAM7C,MAAI,EAACiD,MAAO,CAAEmE,MAAM,GAAD,OAAK,IAAMmhB,EAAUnY,OAArB,MAAzB,SACE,cAACoY,GAAA,EAAD,CACEpnB,QAAQ,OACRgG,MAAK,UAAK4K,GAAgB,GAAI,KAAzB,iBAOjB,cAACmF,GAAA,EAAD,IACA,cAACtU,EAAA,EAAD,CACEpB,WAAS,EACT0F,QAAS,EACTlE,MAAO,CAAEmE,MAAO,OAAQxF,QAAS,OAAQF,QAAS,UAHpD,SAKE,cAACmB,EAAA,EAAD,CAAM7C,MAAI,EAACiD,MAAO,CAAEmE,MAAM,OAA1B,SACE,cAACohB,GAAA,EAAD,CAAUpnB,QAAQ,gBCtG5B,IAAMwlB,GAAY,CAChB,CACElT,GAAI,WACJvb,MAAO,2DAET,CACEub,GAAI,YACJvb,MAAO,sBAET,CAAEub,GAAI,WAAYvb,MAAO,uEACzB,CACEub,GAAI,SACJvb,MAAO,wCAET,CAAEub,GAAI,QAASvb,MAAO,4BACtB,CAAEub,GAAI,WAoNO+U,GAjNE,WACf,IAAMrmB,EAAUd,KAChB,EAA0BiP,mBAAS,OAAnC,oBAAOsM,EAAP,KAAc6L,EAAd,KACA,EAA8BnY,mBAAS,YAAvC,oBAAOmW,EAAP,KAAgBiC,EAAhB,KACA,EAA4BpY,qBAA5B,oBAAOzH,EAAP,KACA,GADA,KACwByH,mBAAS,IAAjC,oBAAOmX,EAAP,KAAakB,EAAb,KACA,EAAgCrY,mBAASzY,EAASE,iBAAlD,oBAAO6wB,EAAP,KAAiBC,EAAjB,KACA,EAAwBvY,mBAAS,IAAjC,oBAAOwY,EAAP,KAAaC,EAAb,KACA,EAA0BzY,mBAAS,GAAnC,oBAAO0Y,EAAP,KAAcC,EAAd,KACM3a,EAAUyG,cA0BVmU,EAAiB9Y,GAAO,CAC5BZ,OAAQ,MACRC,IAAI,QAAD,OAAUkB,GAA2B,CACtC8W,OACA7K,QACA6J,UACAmC,WACA/f,cAIEsgB,EAAmB/Y,GAAO,CAC9BZ,OAAQ,SACRC,IAAI,SAGA2Z,EAAe,SAAC3V,EAAIlU,GACxB,IAAM8pB,EAAQ,CACZC,KAAM,WACJhb,EAAQQ,KAAR,0CAAgD2E,KAElD8V,OAAQ,WACNC,EAAmB,CACjBjrB,SAAS,EACTH,MAAO,4KACPK,SAAS,WAAD,8BAAE,uBAAAgQ,EAAA,sEACF0a,EAAiBza,QAAQ,KAAM+E,GAD7B,OAERsV,EAAQD,EAAKhpB,QAAO,SAACC,GAAD,OAAUA,EAAK0T,KAAOA,MAC1C+V,EAAmB,CAAExpB,KAAM,WAHnB,2CAAF,kDAAC,GAKTA,KAAM,SACN3B,KAAM,IACNC,oBAAoB,MAItB+qB,EAAM9pB,IACR8pB,EAAM9pB,MAIJkqB,EAAO,yCAAG,6BAAAhb,EAAA,sEACSya,EAAexa,UADxB,OACRgb,EADQ,OAEdX,EAAQW,EAAS7qB,MACjBoqB,EAASS,EAASV,OAHJ,2CAAH,qDAgBb,OAJAlT,qBAAU,WACR2T,MACC,CAAChC,EAAM7K,EAAO/T,EAAQ+f,IAGvB,mCACGrW,GAAc1a,EAAS0D,gBAAgBQ,YACtC,cAAC4tB,GAAA,EAAD,CAAOtlB,UAAU,OAAO1B,IAAI,EAA5B,SACE,8BACGumB,EAAe3Y,QACd,cAAC,GAAD,CAAe+X,UAAW3B,KAE1B,qBAAKpkB,UAAWJ,EAAQgD,KAAxB,SACE,eAACiZ,GAAA,EAAD,CAAO7b,UAAWJ,EAAQkD,MAA1B,UACE,cAAC,GAAD,CACEjH,MAAM,sEACNonB,MACEjT,GAAc1a,EAAS0D,gBAAgBS,YA/E7C,WACZsS,EAAQQ,KAAK,gCAiFGgX,cAAejd,IAEjB,cAAC+gB,GAAA,EAAD,CAAgB5mB,MAAO,CAAEvB,QAAS,UAAlC,SACE,eAACooB,GAAA,EAAD,CACEtnB,UAAWJ,EAAQimB,MACnB/pB,KAAM,SACN2E,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CACEvG,QAASA,EACTya,MAAOA,EACP6J,QAASA,EACTC,cA7GI,SAAC/lB,EAAOymB,GAEhCqB,EADchC,IAAYW,GAAsB,QAAVxK,EACrB,OAAS,OAC1B8L,EAAWtB,IA2GS0C,SAAUhB,EAAK3Y,OACfwW,UAAWA,KAEb,eAACoD,GAAA,EAAD,WACGjB,EAAKrmB,KAAI,SAACunB,GACT,IAAKA,EAAIC,QACP,OACE,eAACpD,GAAA,EAAD,CACEqD,OAAK,EACLC,UAAW,EAEXnnB,MAAO,CAAE0F,aAAc,IACvBhF,QAAS,SAACgT,GAAD,OAnDpB,SAACA,EAAGsT,GACI,OAArBtT,EAAE2P,OAAO+D,SACXhB,EAAaY,EAAIvW,GAAI,QAiDqB4W,CAAW3T,EAAGsT,IALhC,UAOE,cAACjD,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAI5b,WAEP,cAAC2Y,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAIM,YAEP,cAACvD,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAIO,WAEP,cAACxD,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAIQ,SAEP,cAACzD,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAIS,QAGP,cAAC1D,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACE,cAACkjB,GAAD,CACEnY,QAAS,CACP,CACEiH,GAAI,OACJrV,MAAO,uCACP8mB,QAAS3S,GACP1a,EAAS0D,gBAAgBS,YAG7B,CACEyX,GAAI,SACJrV,MAAO,qBACP8mB,QAAS3S,GACP1a,EAAS0D,gBAAgBU,eAI/B2oB,YAAa,SAACrlB,GAAD,OACX6pB,EAAaY,EAAIvW,GAAIlU,UAvCtByqB,EAAIvW,QA+CfqV,EAAK3Y,SAAW+Y,EAAe3Y,SAC/B,cAACsW,GAAA,EAAD,CAAU7jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACkhB,GAAA,EAAD,CACE2D,QAAS,EACT1nB,MAAO,CAAEgkB,UAAW,UAFtB,SAIE,cAACvjB,EAAA,EAAD,CAAYtC,QAAQ,KAApB,+KASZ,cAAC,GAAD,CACEomB,MAAOyB,EACP1B,iBAlLO,SAAC3mB,EAAOgqB,GAC/BhC,EAAQgC,IAkLQnD,wBA/Kc,SAAC7mB,GAC/BkoB,EAAYloB,EAAM0lB,OAAOpuB,OACzB0wB,EAAQ,IA8KQlB,KAAMA,EACNC,YAAakB,gB,UC7NlBgC,GAhBE,WACf,OACE,qBACE5nB,MAAO,CACLrB,QAAS,OACTkpB,KAAM,EACNC,MAAO,QACPlpB,eAAgB,SAChBC,WAAY,UANhB,SASE,cAACkpB,GAAA,EAAD,O,oBCRS,SAASC,GAAT,GAAuD,IAAjCpY,EAAgC,EAAhCA,SAAUqY,EAAsB,EAAtBA,mBACvCvY,EAAc7a,EAASiG,YAC7B,EAAoCwS,mBAAS2a,GAAsB,IAAnE,oBAAOC,EAAP,KAAmBC,EAAnB,KAqBA,OACE,eAACvoB,EAAA,EAAD,CAAM7C,MAAI,EAAC+C,GAAI,GAAf,UACE,cAACF,EAAA,EAAD,CACEpB,WAAS,EACT0F,QAAS,EACTlE,MAAO,CACLgiB,UAAW,IACXoG,UAAW,OACXzpB,QAAS,OACT8H,cAAe,SACfiT,SAAU,OACV3R,aAAc,IATlB,SAYG2H,EAAYjQ,KAAI,SAAC1C,GAChB,OACE,cAACsrB,GAAA,EAAD,CACEtY,QACE,cAACuY,GAAA,EAAD,CACEC,QAASL,EAAWxa,SAAS3Q,EAAK9H,OAClC6b,SAAU,kBAvCL,SAAC/T,GACpB,GAAImrB,EAAWxa,SAAS3Q,GACtB,OAAOorB,EAAcD,EAAWprB,QAAO,SAAC0rB,GAAD,OAAOA,IAAMzrB,MAEtDorB,EAAc,GAAD,mBAAKD,GAAL,CAAiBnrB,KAmCA0rB,CAAa1rB,EAAK9H,QAClC+H,KAAMD,EAAK9H,MACX4L,MAAM,YAGV3L,MAAO6H,EAAK7H,aAKpB,eAAC0K,EAAA,EAAD,CACE7C,MAAI,EACJ8C,GAAI,GACJG,MAAO,CAAErB,QAAS,OAAQC,eAAgB,iBAH5C,UAKE,cAACgC,EAAA,EAAD,CACEzC,QAAQ,YACR0C,MAAM,UACNtE,KAAK,SACLmE,QAAS,kBAAMkP,EAASsY,IAJ1B,4CAQA,eAACtoB,EAAA,EAAD,WACE,cAACgB,EAAA,EAAD,CACEzC,QAAQ,YACR0C,MAAM,YACNH,QA3DU,WAClB,IAAMgoB,EAAQ,GACdhZ,EAAYjQ,KAAI,SAAC1C,GACf2rB,EAAM5c,KAAK/O,EAAK9H,UAElBkzB,EAAcO,IAuDN1oB,MAAO,CAAE8H,OAAQ,UAJnB,qEAQA,cAAClH,EAAA,EAAD,CAAQzC,QAAQ,YAAY0C,MAAM,YAAYH,QAxDhC,WACpBynB,EAAc,KAuDR,4DC5DV,IAAM7f,GAAYhK,aAAW,SAACC,GAAD,MAAY,CACvC4D,KAAM,CACJ2F,OAAQ,UAEVzF,MAAO,CACL8B,MAAO,OACP1F,QAAS,IAEXrD,MAAO,CACLod,cAAe,QAIJ,SAAS7I,KACtB,IAAMxQ,EAAUmJ,KACVgD,EAAUyG,cACVtB,EAAKxC,GAAe,MACpB3R,EAAS2R,GAAe,UAC9B,EAA4BX,mBAAS,IAArC,oBAAOqb,EAAP,KAAeC,EAAf,KACA,EAAiD9Y,eAAzCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,OAAQC,EAAvC,EAAuCA,MACvC,EAAoC5C,oBAAS,GAA7C,oBAAO6C,EAAP,KAAmBC,EAAnB,KACMyY,EAAiBzb,GAAO,CAC5BZ,OAAQ,OACRC,IAAI,SAEAqc,EAAkB1b,GAAO,CAC7BZ,OAAQ,MACRC,IAAI,QAAD,OAAUgE,KAETsY,EAAoB3b,GAAO,CAC/BZ,OAAQ,MACRC,IAAI,QAAD,OAAUgE,KAGTD,EAAoB,WACxBJ,GAAeD,IAGX6Y,EAAkB,yCAAG,WAAOntB,EAAM6T,GAAb,gBAAAjE,EAAA,yDACnBxW,EADmB,2BACN4G,GADM,IACA6T,iBACrBe,EAFqB,gCAGjBqY,EAAgBpd,QAAQzW,GAHP,6CAKjB4zB,EAAend,QAAQzW,GALN,OAOzBg0B,IAPyB,2CAAH,wDAUlBA,EAAsB,WAC1B3pB,EAAkB,CAAEtC,KAAM,gBA4BtBksB,EAAS,yCAAG,6BAAAzd,EAAA,sEACKsd,EAAkBrd,UADvB,OACVid,EADU,OAEhBC,EAAUD,EAAO9sB,MAFD,2CAAH,qDAef,OAVAiX,qBAAU,WACJrC,GACFyY,MAED,IAEHpW,qBAAU,WACR5C,EAAMyY,KACL,CAACzY,EAAOyY,IAGT,sBAAM/Y,SAAUI,GAxBD,SAACnU,IAjBa,SAACA,GAC9ByD,EAAkB,CAChBlE,MAAO,oDACPD,UACE,cAAC6sB,GAAD,CACEC,mBAAkB,OAAEU,QAAF,IAAEA,OAAF,EAAEA,EAAQjZ,YAC5BE,SAAU,SAAC3a,GAAD,OAAW+zB,EAAmBntB,EAAM5G,IAC9C4a,UAAWoZ,IAGfjsB,KAAM,aACN3B,KAAM,IACNE,SAAS,EACTD,oBAAoB,IAKtB6tB,CAAuBttB,MAuBvB,SACIktB,EAAkBxb,QA2OlB,cAAC,GAAD,IA1OA,cAAC3N,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGtf,GAAI,GAAIP,UAAWJ,EAAQgD,KAA7C,SACE,eAACiZ,GAAA,EAAD,CAAO7b,UAAWJ,EAAQkD,MAA1B,UACE,cAAC5B,EAAA,EAAD,CACElB,UAAWJ,EAAQ/D,MACnB+C,QAAQ,KACRsS,GAAG,aACHtV,UAAU,MAJZ,SAMGsV,EAAK,sEAAiB,wEAGzB,cAAC7Q,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAzB,SACE,eAAC,WAAD,WACE,cAACtE,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,qBACN8H,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAOqX,UAChBtW,WACEf,EAAOqX,UAAYrX,EAAOqX,UAAU1a,QAAU,GAEhDqE,WAAS,EACT5V,KAAK,WAIX6V,MAAO,CAAEC,SAAUtc,EAASqC,WAAWC,UACvC6F,KAAK,gBAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,sEACN8H,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAOsX,SAChBvW,WACEf,EAAOsX,SAAWtX,EAAOsX,SAAS3a,QAAU,GAE9CqE,WAAS,EACT5V,KAAK,WAIX6V,MAAO,CAAEC,SAAUtc,EAASqC,WAAWC,UACvC6F,KAAK,eAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,0DACN8H,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAO7E,SAChB4F,WACEf,EAAO7E,SAAW6E,EAAO7E,SAASwB,QAAU,GAE9CqE,WAAS,EACT5V,KAAK,WAIX6V,MAAO,CAAEC,SAAUtc,EAASqC,WAAWC,UACvC6F,KAAK,eAGG,QAAXV,GACC,cAACsD,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,8CACN8H,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAO5E,SAChB2F,WACEf,EAAO5E,SAAW4E,EAAO5E,SAASuB,QAAU,GAE9CqE,WAAS,EACT5V,KAAK,QACLkB,KAAM4T,EAAa,WAAa,OAChCmB,WAAY,CACVC,aACE,cAACC,GAAA,EAAD,CAAgBrR,SAAS,MAAzB,SACE,mBACEH,MAAO,CAAEW,OAAQ,WACjBpB,UAAWkS,aACT,uBACAtS,EAAQoD,MAEV7B,QAAS8P,EANX,SAQGL,EACG,iBACA,qBAQlBe,MAAO,CACLC,SAAUtc,EAASqC,WAAWC,SAC9Bia,UAAW,CACTnc,MAAO,EACP2X,QAAS/X,EAASqC,WAAWG,WAGjC2F,KAAK,eAIX,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,uCACN8H,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAOuX,OAChBxW,WACEf,EAAOuX,OAASvX,EAAOuX,OAAO5a,QAAU,GAE1CqE,WAAS,EACT5V,KAAK,WAIX6V,MAAO,CACLE,UAAW,CACTnc,MAAO,GACP2X,QAAS/X,EAASqC,WAAWE,eAE/BgyB,UAAW,CACTn0B,MAAO,GACP2X,QAAS/X,EAASqC,WAAWE,gBAGjC4F,KAAK,aAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,2BACN8H,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAOwX,MAChBzW,WAAYf,EAAOwX,MAAQxX,EAAOwX,MAAM7a,QAAU,GAClDqE,WAAS,EACT5V,KAAK,WAIX2B,KAAK,YAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,2BACN8H,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAOoZ,QAChBrY,WACEf,EAAOoZ,QAAUpZ,EAAOoZ,QAAQzc,QAAU,GAE5CqE,WAAS,EACT5V,KAAK,WAIX2B,KAAK,cAGT,eAAC4C,EAAA,EAAD,CACE7C,MAAI,EACJ8C,GAAI,GACJG,MAAO,CAAErB,QAAS,OAAQC,eAAgB,iBAH5C,UAKE,cAACgC,EAAA,EAAD,CAAQzC,QAAQ,YAAY0C,MAAM,UAAUtE,KAAK,SAAjD,4CAGA,cAACqE,EAAA,EAAD,CACEzC,QAAQ,YACR0C,MAAM,YACNH,QAtPD,WACf4K,EAAQQ,KAAK,mBAkPC,iEC9UHxN,oBAAW,SAACC,GAAD,MAAY,CACpC4D,KAAM,CACJgC,MAAO,QAET9B,MAAO,CACL8B,MAAO,OACP4D,aAAcxJ,EAAM2F,QAAQ,IAE9BkhB,MAAO,CACLhe,SAAU,KAEZkiB,OAAQ,CACNzoB,MAAO,QAET9I,SAAU,CACRuI,gBAAiB/B,EAAMQ,QAAQkC,QAAQK,MAEzCxJ,OAAQ,CACNwI,gBAAiB/B,EAAMQ,QAAQoC,KAAKG,MAEtCzJ,OAAQ,CACNyI,gBAAiB/B,EAAMQ,QAAQgC,UAAUO,MAE3CioB,WAAY,CACV5qB,QAAS,OACTE,WAAY,SACZJ,QAAS,OCxBP+qB,GAAa,CACjB,CACEt0B,MAAO,uCACPD,MAAOJ,EAAS+C,cAAc6xB,SAEhC,CAAEv0B,MAAO,wCAAWD,MAAOJ,EAAS+C,cAAcE,QAClD,CAAE5C,MAAO,uCAAUD,MAAOJ,EAAS+C,cAAcG,WAiFpC2xB,GA9EA,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC1B,EAAoCtc,mBAAS,CAC3CtQ,KAAM,GACNssB,OAAQ,GACRM,SAAU,KAHZ,oBAAOC,EAAP,KAAmBC,EAAnB,KAMMrB,EAAe,SAACsB,GAAD,OAAU,SAACpsB,GAC9BmsB,EAAc,2BAAKD,GAAN,kBAAmBE,EAAOpsB,EAAM0lB,OAAOpuB,WAStD,OACE,eAAC2K,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAGrF,WAAW,SAASmB,MAAO,CAAEvB,QAAS,IAAlE,UACE,cAACmB,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAACkR,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,qBACN4b,SAAU2X,EAAa,QACvBxzB,MAAO40B,EAAW7sB,KAClBiU,WAAS,EACT5V,KAAK,YAGT,cAACuE,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,eAACkR,GAAA,EAAD,CACEiZ,QAAM,EACN90B,MAAM,iCACN4b,SAAU2X,EAAa,UACvBxzB,MAAO40B,EAAWP,OAClBnrB,QAAQ,WACR8S,WAAS,EACT5V,KAAK,QAPP,UASGmuB,GAAW/pB,KAAI,SAAC7C,GAAD,OACd,cAACuX,GAAA,EAAD,CAA6Blf,MAAO2H,EAAO3H,MAA3C,SACG2H,EAAO1H,OADK0H,EAAO3H,UAIxB,cAACkf,GAAA,EAAD,CAAsBlf,MAAO,MAA7B,2EAAe,YAKnB,cAAC2K,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,eAACkR,GAAA,EAAD,CACEiZ,QAAM,EACN90B,MAAM,oDACN4b,SAAU2X,EAAa,YACvBxzB,MAAO40B,EAAWD,SAClBzrB,QAAQ,WACR8S,WAAS,EACT5V,KAAK,QAPP,UASGuuB,EAASnqB,KAAI,SAAC7C,GAAD,OACZ,cAACuX,GAAA,EAAD,CAA6Blf,MAAO2H,EAAO3H,MAA3C,SACG2H,EAAO1H,OADK0H,EAAO3H,UAIxB,cAACkf,GAAA,EAAD,CAAsBlf,MAAO,MAA7B,8FAAe,YAKnB,cAAC2K,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAACe,EAAA,EAAD,CAAQzC,QAAQ,YAAY0C,MAAM,UAAUH,QA3DjC,WACS,oBAAbipB,GACTA,EAASE,IAyDP,8CAIF,cAAC3V,GAAA,EAAD,CAASlU,MAAO,CAAEmE,MAAO,cCzDzBwf,GAAY,CAChB,CACElT,GAAI,YACJvb,MAAO,sBAET,CAAEub,GAAI,WAAYvb,MAAO,uEACzB,CACEub,GAAI,SACJvb,MAAO,wCAET,CAAEub,GAAI,aAAcvb,MAAO,2DAC3B,CAAEub,GAAI,YAAavb,MAAO,2DAC1B,CAAEub,GAAI,SAAUvb,MAAO,kCACvB,CAAEub,GAAI,WAGO,SAAS+U,KACtB,IAAMrmB,EAAUd,KAChB,EAA0BiP,mBAAS,OAAnC,oBAAOsM,EAAP,KAAc6L,EAAd,KACA,EAA4BnY,qBAA5B,oBAAOzH,EAAP,KACA,GADA,KAC8ByH,mBAAS,cAAvC,oBAAOmW,EAAP,KAAgBiC,EAAhB,KACA,EAAwBpY,mBAAS,GAAjC,oBAAOmX,EAAP,KAAakB,EAAb,KACA,EAAgCrY,mBAASzY,EAASE,iBAAlD,oBAAO6wB,EAAP,KAAiBC,EAAjB,KACA,EAAwBvY,mBAAS,IAAjC,oBAAOwY,EAAP,KAAaC,EAAb,KACA,EAAgCzY,mBAAS,IAAzC,oBAAOsc,EAAP,KAAiBK,EAAjB,KACA,EAA4B3c,qBAA5B,oBAAOxQ,EAAP,KAAeotB,EAAf,KACM5e,EAAUyG,cAChB,EAA0BzE,mBAAS,GAAnC,oBAAO0Y,EAAP,KAAcC,EAAd,KAqBMkE,EAAqB/c,GAAO,CAChCZ,OAAQ,MACRC,IAAK2d,mBAAmB,YAAD,OACTzc,GAA2B,CACrC8W,OACA7K,QACA6J,UACAmC,WACA/f,SACA/I,eAKAqpB,EAAmB/Y,GAAO,CAC9BZ,OAAQ,SACRC,IAAI,aAGA4d,EAA6Bjd,GAAO,CACxCZ,OAAQ,MACRC,IAAK,sBAGD2Z,EAAe,SAACY,EAAKzqB,GACzB,IAAM8pB,EAAQ,CACZC,KAAM,WACJhb,EAAQQ,KAAR,kCAAwCkb,EAAIvW,MAE9C8V,OAAQ,WACNC,EAAmB,CACjBjrB,SAAS,EACTH,MAAO,4KACPK,SAAS,WAAD,8BAAE,uBAAAgQ,EAAA,sEACF0a,EAAiBza,QAAQ,KAAMsb,EAAIvW,IADjC,OAERsV,EAAQD,EAAKhpB,QAAO,SAACC,GAAD,OAAUA,EAAK0T,KAAOuW,EAAIvW,OAC9C+V,EAAmB,CAAExpB,KAAM,WAHnB,2CAAF,kDAAC,GAKTA,KAAM,SACN3B,KAAM,IACNC,oBAAoB,KAGxBgvB,YAAa,WACXhf,EAAQQ,KAAR,qCAA2Ckb,EAAIvW,GAA/C,qBAGA4V,EAAM9pB,IACR8pB,EAAM9pB,MAqBJkqB,EAAO,yCAAG,6BAAAhb,EAAA,sEACa0e,EAAmBze,UADhC,OACR6e,EADQ,OAEdxE,EAAQwE,EAAa1uB,MACrBoqB,EAASsE,EAAavE,OAHR,2CAAH,qDAMPwE,EAAW,yCAAG,6BAAA/e,EAAA,sEACO4e,EAA2B3e,UADlC,OACZ+e,EADY,OAElBR,EAAYQ,EAAW5uB,MAFL,2CAAH,qDAajB,OARAiX,qBAAU,WACR2T,MACC,CAAChC,EAAM7K,EAAO/T,EAAQ+f,EAAU9oB,IAEnCgW,qBAAU,WACR0X,MACC,IAGD,mCACGjb,GAAc1a,EAAS0D,gBAAgBW,gBACtC,cAACytB,GAAA,EAAD,CAAOtlB,UAAU,OAAO1B,IAAI,EAA5B,SACE,8BACGwqB,EAAmB5c,QAClB,cAAC,GAAD,CAAe+X,UAAW3B,KAE1B,qBAAKpkB,UAAWJ,EAAQgD,KAAxB,SACE,eAACiZ,GAAA,EAAD,CAAO7b,UAAWJ,EAAQkD,MAA1B,UACE,cAAC,GAAD,CACEjH,MAAM,sEACNonB,MACEjT,GAAc1a,EAAS0D,gBAAgBY,gBAzG7C,WACZmS,EAAQQ,KAAK,yBA2GG2W,gBACE,cAAC,GAAD,CACEkH,SA3CL,SAAC9tB,GAChB,IAAM6uB,EAAU,gBAAY7uB,EAAKmB,KAAjB,mBAAgCnB,EAAKytB,OAArC,qBAAwDztB,EAAK+tB,SAA7D,KAChBM,EAAUQ,GACV/E,EAAQ,IAyCYiE,SAAUA,IAId9G,cAAejd,EACf8kB,cAAepb,GACb1a,EAAS0D,gBAAgBY,iBAG7B,cAACytB,GAAA,EAAD,CAAgB5mB,MAAO,CAAEvB,QAAS,UAAlC,SACE,eAACooB,GAAA,EAAD,CACEtnB,UAAWJ,EAAQimB,MACnB/pB,KAAM,SACN2E,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CACEvG,QAASA,EACTya,MAAOA,EACP6J,QAASA,EACTC,cAjJI,SAAC/lB,EAAOymB,GAEhCqB,EADchC,IAAYW,GAAsB,QAAVxK,EACrB,OAAS,OAC1B8L,EAAWtB,IA+IS0C,SAAUhB,EAAK3Y,OACfwW,UAAWA,KAGb,eAACoD,GAAA,EAAD,WACGjB,EAAKrmB,KAAI,SAACunB,GAAS,IAAD,EACjB,OACE,eAACnD,GAAA,EAAD,CACEqD,OAAK,EACLC,UAAW,EAEXnnB,MAAO,CAAE0F,aAAc,IACvBhF,QAAS,SAACgT,GAAD,OAvFlB,SAACA,EAAGsT,GACI,OAArBtT,EAAE2P,OAAO+D,SACXhB,EAAaY,EAAK,QAqFsBK,CAAW3T,EAAGsT,IALhC,UAOE,cAACjD,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAIM,YAEP,cAACvD,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAIO,WAEP,cAACxD,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGyQ,GAAc8X,EAAIQ,UAErB,cAACzD,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGyQ,GAAc8X,EAAI4D,qBAErB,cAAC7G,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,mBACGyQ,GAAc8X,EAAI6D,yBADrB,aACG,EAAqCtc,QACpC,IACA,MAGJ,cAACwV,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACE,cAAC8V,GAAA,EAAD,CACErf,MAAOL,EAAS+C,cAAcovB,EAAIsC,QAClC/pB,UAAWkS,aACTtS,EAAQmqB,OACRnqB,EAAQ6nB,EAAIsC,aAIlB,cAACvF,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACE,cAACkjB,GAAD,CACEnY,QAAS,CACP,CAAEiH,GAAI,cAAerV,MAAO,qDAC5B,CACEqV,GAAI,OACJrV,MAAO,uCACP8mB,QAAS3S,GACP1a,EAAS0D,gBAAgBY,gBAG7B,CACEsX,GAAI,SACJrV,MAAO,qBACP8mB,QAAS3S,GACP1a,EAAS0D,gBACNa,mBAITwoB,YAAa,SAACrlB,GAAD,OACX6pB,EAAaY,EAAKzqB,UApDnByqB,EAAIvW,QA2DbqV,EAAK3Y,SAAWgd,EAAmB5c,SACnC,cAACsW,GAAA,EAAD,CAAU7jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACkhB,GAAA,EAAD,CACE2D,QAAS,EACT1nB,MAAO,CAAEgkB,UAAW,UAFtB,SAIE,cAACvjB,EAAA,EAAD,CAAYtC,QAAQ,KAApB,+KASZ,cAAC,GAAD,CACEomB,MAAOyB,EACP1B,iBAlOO,SAAC3mB,EAAOgqB,GAC/BhC,EAAQgC,IAkOQnD,wBA/Nc,SAAC7mB,GAC/BkoB,EAAYloB,EAAM0lB,OAAOpuB,OACzB0wB,EAAQ,IA8NQlB,KAAMA,EACNC,YAAakB,eCnS1B,IAAMkF,GAAa,WACxB,OACE,mBACEvrB,UAAWkS,aAAK,wBAChBzR,MAAO,CAAEa,MAAOtC,EAAMQ,QAAQ0C,OAAOH,MAFvC,oBASSypB,GAAW,WACtB,OACE,mBACExrB,UAAWkS,aAAK,wBAChBzR,MAAO,CAAEa,MAAOtC,EAAMQ,QAAQ+B,QAAQQ,MAFxC,mB,UCsMW0pB,GA9MC,SAAC,GAA4C,IAA1Cpb,EAAyC,EAAzCA,SAAUC,EAA+B,EAA/BA,UAAWob,EAAoB,EAApBA,cACtC,EAA0B3d,mBAAS,IAAnC,oBAAO4d,EAAP,KAAcC,EAAd,KACA,EAAwC7d,oBACzB,OAAb2d,QAAa,IAAbA,OAAA,EAAAA,EAAeG,KAAKn2B,QAAS,GAD/B,oBAAOo2B,EAAP,KAAqBC,EAArB,KAGA,EAAiDxb,eAAzCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,OAAQC,EAAvC,EAAuCA,MACjC/Q,EAAUd,KAEVktB,EAAiBne,GAAO,CAC5BZ,OAAQ,MACRC,IAAI,SAGA+e,EAAQ,yCAAG,6BAAA/f,EAAA,sEACM8f,EAAe7f,UADrB,OACTC,EADS,OAEfwf,EAASxf,EAAO9P,MAFD,2CAAH,qDAgCd,OARAiX,qBAAU,WACR0Y,MACC,IAEH1Y,qBAAU,WACR5C,EAAM+a,KACL,CAAC/a,EAAO+a,IAGT,eAACrrB,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAzB,UACE,cAACtE,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAACkR,GAAA,EAAD,CACEiZ,QAAM,EACN90B,MAAM,2BACN4b,SAlBa,SAAC4C,GACpB4X,EAAgB5X,EAAE2P,OAAOpuB,QAkBnBA,MAAOo2B,EACPltB,QAAQ,WACR8S,WAAS,EACT5V,KAAK,QACL2B,KAAK,OACLyuB,YAAa,CACXtsB,QAAS,CACP6qB,OAAQ7qB,EAAQoqB,aAXtB,SAeG2B,EAAMzrB,KAAI,SAAC7C,GAAD,OACT,eAACuX,GAAA,EAAD,CAA6Blf,MAAO2H,EAAO3H,MAA3C,UACE,qBACEy2B,IAAG,UAAK72B,EAASC,YAAd,YAA6B8H,EAAO+uB,MACvCC,IAAKhvB,EAAO1H,MACZ8K,MAAO,CACLmE,MAAO,GACPtB,OAAQ,GACR3C,aAAc,MACdkD,WAAY,MAGfxG,EAAO1H,QAXK0H,EAAO3H,cAgB5B,cAAC2K,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACEE,WAAS,EACThc,MAAOA,EACPoG,KAAK,QACL2B,KAAMA,EACN9H,MAAM,0DACNiJ,QAAQ,WACR2S,SAAUA,EACVpE,QAASuD,EAAO2a,kBAChB5Z,WACEf,EAAO2a,kBACH3a,EAAO2a,kBAAkBhe,QACzB,MAKZsE,MAAO,CACLE,UAAW,CACTnc,MAAO,GACP2X,QAAS/X,EAASqC,WAAWI,aAE/B8xB,UAAW,CACTn0B,MAAO,GACP2X,QAAS/X,EAASqC,WAAWI,cAGjC0F,KAAK,wBAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACEE,WAAS,EACThc,MAAOA,EACPoG,KAAK,QACL2B,KAAMA,EACN9H,MAAM,0DACNiJ,QAAQ,WACR2S,SAAUA,EACVpE,QAASuD,EAAO4b,cAChB7a,WACEf,EAAO4b,cAAgB5b,EAAO4b,cAAcjf,QAAU,MAK9D5P,KAAK,oBAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACEE,WAAS,EACThc,MAAOA,EACPoG,KAAK,QACL2B,KAAMA,EACN9H,MAAM,oDACNiJ,QAAQ,WACR2S,SAAUA,EACVpE,QAASuD,EAAO6b,aAChB9a,WACEf,EAAO6b,aAAe7b,EAAO6b,aAAalf,QAAU,MAK5D5P,KAAK,mBAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE7b,MAAM,6CACN62B,WAAS,EACTC,KAAM,EACN7tB,QAAQ,WACRnB,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPgc,WAAS,EACTvE,QAASuD,EAAOgc,YAChBjb,WACEf,EAAOgc,YAAchc,EAAOgc,YAAYrf,QAAU,MAK1D5P,KAAK,kBAGT,eAAC4C,EAAA,EAAD,CACE7C,MAAI,EACJ8C,GAAI,GACJG,MAAO,CAAErB,QAAS,OAAQC,eAAgB,iBAH5C,UAKE,cAACgC,EAAA,EAAD,CACEzC,QAAQ,YACR0C,MAAM,UACNtE,KAAK,SACLmE,QAASsP,GA5KF,SAACnU,GACd,IAAMqwB,EAAQC,eACRl3B,EAAK,2BACN4G,GADM,IAETuvB,KAPKF,EAAMkB,MAAK,SAACrvB,GAAD,OAAUA,EAAK9H,QAAUo2B,KAQzC5a,GAAIwa,EAAgBA,EAAcxa,GAAKyb,EACvCG,WAAYpB,IAEdrb,EAAS3a,MAgKL,4CAQA,cAAC2L,EAAA,EAAD,CAAQzC,QAAQ,YAAY0C,MAAM,UAAUH,QAASmP,EAArD,yDCnLFvH,GAAYhK,aAAW,SAACC,GAAD,MAAY,CACvC4D,KAAM,CACJ2F,OAAQ,UAEVzF,MAAO,CACL8B,MAAO,OACP1F,QAAS,IAEXrD,MAAO,CACLod,cAAe,QAIbmL,GAAY,CAChB,CACElT,GAAI,OACJvb,MAAO,+CAET,CAAEub,GAAI,gBAAiBvb,MAAO,4DAC9B,CACEub,GAAI,aACJvb,MAAO,2DAGT,CAAEub,GAAI,WAGO,SAASd,KACtB,IAAMxQ,EAAUmJ,KACVgD,EAAUyG,cACVtB,EAAKxC,GAAe,MAC1B,EAA4BX,mBAAS,IAArC,oBAAOqb,EAAP,KAAeC,EAAf,KACA,EAAgCtb,mBAAS,IAAzC,oBAAOgf,EAAP,KAAiBC,EAAjB,KACA,EAAgCjf,mBAAS,IAAzC,oBAAOsc,EAAP,KAAiBK,EAAjB,KACA,EAAgD3c,mBAAS,GAAzD,oBAAOkf,EAAP,KAAyBC,EAAzB,KACA,EAAiD3c,eAAzCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,OAAQC,EAAvC,EAAuCA,MAEjCwc,EAAqBtf,GAAO,CAChCZ,OAAQ,OACRC,IAAI,aAEAkgB,EAAsBvf,GAAO,CACjCZ,OAAQ,MACRC,IAAI,YAAD,OAAcgE,KAEbmc,EAAwBxf,GAAO,CACnCZ,OAAQ,MACRC,IAAI,YAAD,OAAcgE,KAGboc,EAA0Bzf,GAAO,CACrCZ,OAAQ,MACRC,IAAI,sBAGAqgB,EAAuB1f,GAAO,CAClCZ,OAAQ,SACRC,IAAI,YAGAmD,EAAQ,yCAAG,WAAO/T,GAAP,kBAAA4P,EAAA,yDACTshB,EAAc,GACpBT,EAAS7sB,KAAI,SAAC1C,GACZ,IAAMiwB,EAAU,CACdC,OAAQlwB,EAAKquB,KAAKn2B,OAAS8H,EAAKquB,KAAK3a,GACrCma,kBAAmB7tB,EAAK6tB,kBACxBiB,cAAe9uB,EAAK8uB,cACpBC,aAAc/uB,EAAK+uB,aACnBG,YAAalvB,EAAKkvB,YAClBxb,GAAI1T,EAAK0T,GAAGzC,WAAWN,SAAS,KAAO,KAAO3Q,EAAK0T,IAErDsc,EAAYjhB,KAAKkhB,MAGbE,EAdS,2BAcMrxB,GAdN,IAcYywB,SAAUS,EAAaP,sBAC9C/b,EAfW,gCAgBAkc,EAAoBjhB,QAAQwhB,GAhB5B,+DAkBTR,EAAmBhhB,QAAQwhB,GAlBlB,OAmBfC,YAAW,WACTC,MACC,KArBY,4CAAH,sDAwBRA,EAAW,WACf9hB,EAAQQ,KAAK,uBAGTod,EAAS,yCAAG,6BAAAzd,EAAA,sEACKmhB,EAAsBlhB,UAD3B,OACVid,EADU,OAEhBC,EAAUD,EAAO9sB,MACjB4wB,EAAoB9D,EAAO9sB,KAAK2wB,kBAChCD,EAAY5D,EAAO9sB,KAAKywB,UAJR,2CAAH,qDAOTe,EAAmB,yCAAG,6BAAA5hB,EAAA,sEACLohB,EAAwBnhB,UADnB,OACpBid,EADoB,OAE1BsB,EAAYtB,EAAO9sB,MAFO,2CAAH,qDAKnByxB,EAAkB,SAACzxB,GACvB,GAAIA,EAAKwwB,SAAU,CACjB,IAAMlQ,EAAQmQ,EAASiB,WAAU,SAACxwB,GAAD,OAAUA,EAAK0T,KAAO5U,EAAK4U,MACtD+c,EAAW,YAAOlB,GACxBkB,EAAYrR,GAAStgB,EACrB0wB,EAAYiB,QAEZjB,EAAY,GAAD,mBAAKD,GAAL,CAAezwB,KAE5B4xB,KAGIA,EAAmB,WACvBjH,EAAmB,CAAExpB,KAAM,aAGvB0wB,EAAe,SAAC7xB,GACpB2qB,EAAmB,CACjBprB,MAAO,2DACPD,UACE,cAAC,GAAD,CACEyU,SAAU0d,EACVzd,UAAW4d,EACXxC,cAAepvB,IAGnBmB,KAAM,UACN3B,KAAM,IACNE,SAAS,EACTD,oBAAoB,KA6CxB,OAXAwX,qBAAU,WACRua,IACI5c,GACFyY,MAED,IAEHpW,qBAAU,WACR5C,EAAMyY,KACL,CAACzY,EAAOyY,IAGT,mCACE,sBAAM/Y,SAAUI,EAAaJ,GAA7B,SACIgd,EAAsBrf,QAkUtB,cAAC,GAAD,IAjUA,cAAC3N,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGtf,GAAI,GAAIP,UAAWJ,EAAQgD,KAA7C,SACE,eAACiZ,GAAA,EAAD,CAAO7b,UAAWJ,EAAQkD,MAA1B,UACE,cAAC5B,EAAA,EAAD,CACElB,UAAWJ,EAAQ/D,MACnB+C,QAAQ,KACRsS,GAAG,aACHtV,UAAU,MAJZ,SAMGsV,EAAK,sEAAiB,wEAGzB,cAAC7Q,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAzB,SACE,eAAC,WAAD,WACE,cAACtE,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,qBACN8H,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAOqX,UAChBtW,WACEf,EAAOqX,UAAYrX,EAAOqX,UAAU1a,QAAU,GAEhDqE,WAAS,EACT5V,KAAK,WAIX6V,MAAO,CAAEC,SAAUtc,EAASqC,WAAWC,UACvC6F,KAAK,gBAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,sEACN8H,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAOsX,SAChBvW,WACEf,EAAOsX,SAAWtX,EAAOsX,SAAS3a,QAAU,GAE9CqE,WAAS,EACT5V,KAAK,WAIX6V,MAAO,CAAEC,SAAUtc,EAASqC,WAAWC,UACvC6F,KAAK,eAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,2BACN8H,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAOwX,MAChBzW,WACEf,EAAOwX,MAAQxX,EAAOwX,MAAM7a,QAAU,GAExCqE,WAAS,EACT5V,KAAK,WAIX2B,KAAK,YAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,uCACN8H,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAOuX,OAChBxW,WACEf,EAAOuX,OAASvX,EAAOuX,OAAO5a,QAAU,GAE1CqE,WAAS,EACT5V,KAAK,WAIX6V,MAAO,CACLE,UAAW,CACTnc,MAAO,GACP2X,QAAS/X,EAASqC,WAAWE,eAE/BgyB,UAAW,CACTn0B,MAAO,GACP2X,QAAS/X,EAASqC,WAAWE,gBAGjC4F,KAAK,aAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACExU,KAAK,SACL4B,QAAQ,WACRjJ,MAAM,iEACN8H,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAO4a,iBAChB7Z,WACEf,EAAO4a,iBACH5a,EAAO4a,iBAAiBje,QACxB,GAENqE,WAAS,EACT5V,KAAK,WAIX2B,KAAK,uBAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,WACK+pB,EAASzc,QAAUqf,GACpB,cAACzb,GAAA,EAAD,CACEiZ,QAAM,EACN90B,MAAM,oDACND,MAAOu3B,EACP1b,SAxKG,SAAC4C,GACxB+Y,EAAoB/Y,EAAE2P,OAAOpuB,QAwKTkJ,QAAQ,WACRuO,QAASuD,EAAOuc,iBAChBxb,WACEf,EAAOuc,iBACHvc,EAAOuc,iBAAiB5f,QACxB,GAENqE,WAAS,EACT5V,KAAK,QAbP,SAeGuuB,EAASnqB,KAAI,SAAC7C,GAAD,OACZ,cAACuX,GAAA,EAAD,CAA6Blf,MAAO2H,EAAO3H,MAA3C,SACG2H,EAAO1H,OADK0H,EAAO3H,cAO9B,cAAC2K,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAACe,EAAA,EAAD,CACEzC,QAAQ,YACR0C,MAAM,UACNH,QAzNC,WACnBgtB,KAqNgB,8GAQCpB,EAASnf,QACV,cAACvN,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAACub,GAAA,EAAD,UACE,cAACwL,GAAA,EAAD,CAAgB5mB,MAAO,CAAEvB,QAAS,UAAlC,SACE,eAACooB,GAAA,EAAD,CACEtnB,UAAWJ,EAAQimB,MACnB/pB,KAAM,SACN2E,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CAAaie,UAAWA,KAExB,cAACoD,GAAA,EAAD,UACGuF,EAAS7sB,KAAI,SAACunB,GACb,OACE,eAACnD,GAAA,EAAD,CACEqD,OAAK,EACLC,UAAW,EAEXnnB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACqe,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACE,sBACEuB,MAAO,CACLrB,QAAS,OACTE,WAAY,UAHhB,UAME,qBACE6sB,IAAG,UAAK72B,EAASC,YAAd,YAA6BkyB,EAAIoE,KAAKO,MACzCC,IAAK5E,EAAIoE,KAAKl2B,MACd8K,MAAO,CACLmE,MAAO,GACPtB,OAAQ,GACR3C,aAAc,MACdkD,WAAY,KAGf4jB,EAAIoE,KAAKpuB,MAAQgqB,EAAIoE,KAAKl2B,WAG/B,cAAC6uB,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAI6E,gBAEP,cAAC9H,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAI4D,oBAGP,eAAC7G,GAAA,EAAD,CACEtlB,QAAQ,OACRuB,MAAO,CAAEgkB,UAAW,QAFtB,UAIE,cAAC/Q,GAAA,EAAD,CACEvS,QAAS,WA7Q7CgtB,EA6QqE1G,IADnC,SAGE,cAAC,GAAD,MAGF,cAAC/T,GAAA,EAAD,CACEvS,QAAS,kBAhRnB,SAACsmB,GAE3BR,EAAmB,CACjBjrB,SAAS,EACTH,MAAO,4KACPK,SAAS,WAAD,8BAAE,uBAAAgQ,EAAA,0DACJgF,EADI,gCAEAqc,EAAqBphB,QAAQ,KAAMsb,EAAIvW,IAFvC,OAIR8b,EAAYD,EAASxvB,QAAO,SAACC,GAAD,OAAUA,EAAK0T,KAAOuW,EAAIvW,OACtD+V,EAAmB,CAAExpB,KAAM,WALnB,2CAAF,kDAAC,GAOTA,KAAM,SACN3B,KAAM,IACNC,oBAAoB,IAkQ6BqyB,CAAoB3G,IADrC,SAGE,cAAC,GAAD,WA3CCA,EAAIvW,kBAwD3B,cAAC7Q,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,2BACN8H,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAOoZ,QAChBrY,WACEf,EAAOoZ,QAAUpZ,EAAOoZ,QAAQzc,QAAU,GAE5CqE,WAAS,EACT5V,KAAK,WAIX2B,KAAK,cAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE7b,MAAM,6CACN62B,WAAS,EACTC,KAAM,EACN7tB,QAAQ,WACRnB,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPgc,WAAS,EACTvE,QAASuD,EAAOgc,YAChBjb,WACEf,EAAOgc,YACHhc,EAAOgc,YAAYrf,QACnB,MAKZ5P,KAAK,kBAIT,eAAC4C,EAAA,EAAD,CACE7C,MAAI,EACJ8C,GAAI,GACJG,MAAO,CAAErB,QAAS,OAAQC,eAAgB,iBAH5C,UAKE,cAACgC,EAAA,EAAD,CAAQzC,QAAQ,YAAY0C,MAAM,UAAUtE,KAAK,SAAjD,4CAGA,cAACqE,EAAA,EAAD,CACEzC,QAAQ,YACR0C,MAAM,YACNH,QAAS0sB,EAHX,mECjepB,IAAMzJ,GAAY,CAChB,CACElT,GAAI,OACJvb,MAAO,kCAET,CAAEub,GAAI,QAASvb,MAAO,4BACtB,CACEub,GAAI,OACJvb,MAAO,sBAET,CACEub,GAAI,OACJvb,MAAO,4BAET,CAAEub,GAAI,WAsNO+U,GAnNE,WACf,IAAMoI,EAAa3f,GAAe,MAC5B1R,EAAO0R,GAAe,QACtB9O,EAAUd,KAChB,EAA0BiP,mBAAS,OAAnC,oBAAOsM,EAAP,KAAc6L,EAAd,KACA,EAA8BnY,mBAAS,QAAvC,oBAAOmW,EAAP,KAAgBiC,EAAhB,KACA,EAA4BpY,qBAA5B,oBAAOzH,EAAP,KACA,GADA,KACwByH,mBAAS,IAAjC,oBAAOmX,EAAP,KAAakB,EAAb,KACA,EAAgCrY,mBAASzY,EAASE,iBAAlD,oBAAO6wB,EAAP,KAAiBC,EAAjB,KACA,EAAwBvY,mBAAS,IAAjC,oBAAOwY,EAAP,KAAaC,EAAb,KACA,EAA0BzY,mBAAS,GAAnC,oBAAO0Y,EAAP,KAAcC,EAAd,KACM3a,EAAUyG,cAqBVqM,EAAoBhR,GAAO,CAC/BZ,OAAQ,MACRC,IAAI,kBAAD,OAAoBlQ,EAApB,YAA4BoR,GAA2B,CACxD8W,OACA7K,QACA6J,UACAmC,WACA/f,cAIEsgB,EAAmB/Y,GAAO,CAC9BZ,OAAQ,SACRC,IAAI,YAGA2Z,EAAe,SAACY,EAAKzqB,GACzB,IAAM8pB,EAAQ,CACZC,KAAM,WACJhb,EAAQQ,KAAR,mCAC8Bkb,EAAIzqB,KADlC,eAC6CyqB,EAAIvW,GADjD,uBACkEmd,KAGpErH,OAAQ,WACNC,EAAmB,CACjBjrB,SAAS,EACTH,MAAO,4KACPK,SAAS,WAAD,8BAAE,uBAAAgQ,EAAA,sEACF0a,EAAiBza,QAAQ,KAAMsb,EAAIvW,IADjC,OAERsV,EAAQD,EAAKhpB,QAAO,SAACC,GAAD,OAAUA,EAAK0T,KAAOuW,EAAIvW,OAC9C+V,EAAmB,CAAExpB,KAAM,WAHnB,2CAAF,kDAAC,GAKTA,KAAM,SACN3B,KAAM,IACNC,oBAAoB,MAItB+qB,EAAM9pB,IACR8pB,EAAM9pB,MAoBJkqB,EAAO,yCAAG,6BAAAhb,EAAA,sEACK2S,EAAkB1S,QAAQ,KAAMkiB,GADrC,OACR9H,EADQ,OAEdC,EAAQD,EAAKjqB,MACboqB,EAASH,EAAKE,OAHA,2CAAH,qDAUb,OAJAlT,qBAAU,WACR2T,MACC,CAAChC,EAAM7K,EAAO/T,EAAQ+f,IAGvB,mCACGrW,GAAc1a,EAAS0D,gBAAgBs1B,eACtC,cAAClH,GAAA,EAAD,CAAOtlB,UAAU,OAAO1B,IAAI,EAA5B,SACE,8BACGye,EAAkB7Q,QACjB,cAAC,GAAD,CAAe+X,UAAW3B,KAE1B,qBAAKpkB,UAAWJ,EAAQgD,KAAxB,SACE,eAACiZ,GAAA,EAAD,CAAO7b,UAAWJ,EAAQkD,MAA1B,UACE,cAAC,GAAD,CACEjH,MA/BI,WACpB,GAAI0qB,EAAK3Y,OACP,OACE,mHACkB,IAChB,mBAAGnN,MAAO,CAAEmF,WAAY,UAAxB,SAAqC2gB,EAAK,GAAGzR,YA0B5ByZ,GAEPhL,cAAejd,IAEjB,cAAC+gB,GAAA,EAAD,CAAgB5mB,MAAO,CAAEvB,QAAS,UAAlC,SACE,eAACooB,GAAA,EAAD,CACEtnB,UAAWJ,EAAQimB,MACnB/pB,KAAM,SACN2E,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CACEvG,QAASA,EACTya,MAAOA,EACP6J,QAASA,EACTC,cAjHI,SAAC/lB,EAAOymB,GAEhCqB,EADchC,IAAYW,GAAsB,QAAVxK,EACrB,OAAS,OAC1B8L,EAAWtB,IA+GS0C,SAAUhB,EAAK3Y,OACfwW,UAAWA,KAEb,eAACoD,GAAA,EAAD,WACGjB,EAAKrmB,KAAI,SAACunB,GACT,OACE,eAACnD,GAAA,EAAD,CACEqD,OAAK,EACLC,UAAW,EAEXnnB,MAAO,CACL0F,aAAc,GACdpF,gBACe,YAAb0mB,EAAIzqB,KACA,UACA,WAERmE,QAAS,SAACgT,GAAD,OArElB,SAACA,EAAGsT,GACI,OAArBtT,EAAE2P,OAAO+D,SACXhB,EAAaY,EAAK,QAmEsBK,CAAW3T,EAAGsT,IAXhC,UAaE,cAACjD,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGyQ,GACC,IAAIkE,KAAK4T,EAAIlV,MAAMwB,mBACjB,YAIN,cAACyQ,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGyQ,GACCnP,OAAOinB,EAAI1S,OAAOyZ,oBAGtB,cAAChK,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACG5J,EAASmD,aAAagvB,EAAIzqB,QAG7B,cAACwnB,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAIiF,cAGP,cAAClI,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACE,cAACkjB,GAAD,CACEnY,QAAS,CACP,CAAEiH,GAAI,OAAQrV,MAAO,wCACrB,CAAEqV,GAAI,SAAUrV,MAAO,uBAEzBwmB,YAAa,SAACrlB,GAAD,OACX6pB,EAAaY,EAAKzqB,UArCnByqB,EAAIvW,QA4CbqV,EAAK3Y,SAAWiR,EAAkB7Q,SAClC,cAACsW,GAAA,EAAD,CAAU7jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACkhB,GAAA,EAAD,CACE2D,QAAS,EACT1nB,MAAO,CAAEgkB,UAAW,UAFtB,SAIE,cAACvjB,EAAA,EAAD,CAAYtC,QAAQ,KAApB,+KASZ,cAAC,GAAD,CACEomB,MAAOyB,EACP1B,iBAlLO,SAAC3mB,EAAOgqB,GAC/BhC,EAAQgC,IAkLQnD,wBA/Kc,SAAC7mB,GAC/BkoB,EAAYloB,EAAM0lB,OAAOpuB,OACzB0wB,EAAQ,IA8KQlB,KAAMA,EACNC,YAAakB,gB,oBCvPlBtnB,gBAAW,SAACC,GAAD,MAAY,CACpC4D,KAAM,CACJgC,MAAO,QAET6pB,OAAQ,CACN7pB,MAAO,OACPxF,QAAS,QAEX0D,MAAO,CACL8B,MAAO,OACP4D,aAAcxJ,EAAM2F,QAAQ,IAE9B+pB,gBAAiB,CACflmB,aAAcxJ,EAAM2F,QAAQ,IAE9BgqB,iBAAkB,CAChBnmB,aAAcxJ,EAAM2F,QAAQ,GAC5BzF,QAAS,IAEX2mB,MAAO,CACLhe,SAAU,KAEZ+mB,IAAK,CACHrvB,aAAa,aAAD,OAAeP,EAAMQ,QAAQoC,KAAKG,OAEhDgoB,OAAQ,CACNzoB,MAAO,QAET9I,SAAU,CACRuI,gBAAiB/B,EAAMQ,QAAQkC,QAAQK,MAEzCxJ,OAAQ,CACNwI,gBAAiB/B,EAAMQ,QAAQoC,KAAKG,MAEtCmoB,QAAS,CACPnpB,gBAAiB/B,EAAMQ,QAAQgC,UAAUO,MAE3ClM,QAAS,CACPkL,gBAAiB/B,EAAMQ,QAAQkC,QAAQK,MAEzC8sB,MAAO,CACL9tB,gBAAiB/B,EAAMQ,QAAQgC,UAAUO,MAE3CioB,WAAY,CACV5qB,QAAS,OACTE,WAAY,SACZJ,QAAS,OC5CP+qB,GAAa,CACjB,CACEt0B,MAAO,uCACPD,MAAOJ,EAAS+C,cAAc6xB,SAEhC,CAAEv0B,MAAO,wCAAWD,MAAOJ,EAAS+C,cAAcE,QAClD,CAAE5C,MAAO,uCAAUD,MAAOJ,EAAS+C,cAAcG,WAyDpC2xB,GAtDA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChB,EAAoCrc,mBAAS,CAAEtQ,KAAM,GAAIssB,OAAQ,KAAjE,oBAAOO,EAAP,KAAmBC,EAAnB,KAEMrB,EAAe,SAACsB,GAAD,OAAU,SAACpsB,GAC9BmsB,EAAc,2BAAKD,GAAN,kBAAmBE,EAAOpsB,EAAM0lB,OAAOpuB,WAStD,OACE,eAAC2K,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAGrF,WAAW,SAASmB,MAAO,CAAEvB,QAAS,IAAlE,UACE,cAACmB,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAACkR,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,qBACN4b,SAAU2X,EAAa,QACvBxzB,MAAO40B,EAAW7sB,KAClBiU,WAAS,EACT5V,KAAK,YAGT,cAACuE,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,eAACkR,GAAA,EAAD,CACEiZ,QAAM,EACN90B,MAAM,iCACN4b,SAAU2X,EAAa,UACvBxzB,MAAO40B,EAAWP,OAClBnrB,QAAQ,WACR8S,WAAS,EACT5V,KAAK,QAPP,UASGmuB,GAAW/pB,KAAI,SAAC7C,GAAD,OACd,cAACuX,GAAA,EAAD,CAA6Blf,MAAO2H,EAAO3H,MAA3C,SACG2H,EAAO1H,OADK0H,EAAO3H,UAIxB,cAACkf,GAAA,EAAD,CAAsBlf,MAAO,MAA7B,2EAAe,YAKnB,cAAC2K,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAACe,EAAA,EAAD,CAAQzC,QAAQ,YAAY0C,MAAM,UAAUH,QAvCjC,WACS,oBAAbipB,GACTA,EAASE,IAqCP,8CAIF,cAAC3V,GAAA,EAAD,CAASlU,MAAO,CAAEmE,MAAO,cCnCzBwf,GAAY,CAChB,CACElT,GAAI,YACJvb,MAAO,sBAET,CAAEub,GAAI,WAAYvb,MAAO,uEACzB,CACEub,GAAI,8CACJvb,MAAO,+CAET,CACEub,GAAI,SACJvb,MAAO,wCAET,CAAEub,GAAI,SAAUvb,MAAO,kCACvB,CAAEub,GAAI,WAGO,SAAS+U,KACtB,IAAM6I,EAAiB,CACrBC,MAAO,iCACPC,SAAU,0DACVC,SAAU,2DAENrvB,EAAUd,KAChB,EAA0BiP,mBAAS,OAAnC,oBAAOsM,EAAP,KAAc6L,EAAd,KACA,EAA4BnY,qBAA5B,oBAAOzH,EAAP,KACA,GADA,KAC8ByH,mBAAS,cAAvC,oBAAOmW,EAAP,KAAgBiC,EAAhB,KACA,EAAwBpY,mBAAS,GAAjC,oBAAOmX,EAAP,KAAakB,EAAb,KACA,EAAgCrY,mBAASzY,EAASE,iBAAlD,oBAAO6wB,EAAP,KAAiBC,EAAjB,KACA,EAAwBvY,mBAAS,IAAjC,oBAAOwY,EAAP,KAAaC,EAAb,KACA,EAAwBzY,mBAAS,OAAjC,oBAAO/Q,EAAP,KAAakyB,EAAb,KACA,EAA4BnhB,qBAA5B,oBAAOxQ,EAAP,KAAeotB,EAAf,KACA,EAA0B5c,mBAAS,GAAnC,oBAAO0Y,EAAP,KAAcC,EAAd,KACM3a,EAAUyG,cAqBV2c,EAAqBthB,GAAO,CAChCZ,OAAQ,MACRC,IAAK2d,mBAAmB,YAAD,OACTzc,GAA2B,CACrC8W,OACA7K,QACA6J,UACAmC,WACA/f,SACA/I,SACAP,aAKA4pB,EAAmB/Y,GAAO,CAC9BZ,OAAQ,SACRC,IAAI,aAGA2Z,EAAe,SAACY,EAAKzqB,GACzB,IAAQkU,EAA4BuW,EAA5BvW,GAAI6W,EAAwBN,EAAxBM,UAAWC,EAAaP,EAAbO,SACjBlB,EAAQ,CACZC,KAAM,WACJhb,EAAQQ,KAAR,kCAAwC2E,KAE1C8V,OAAQ,WACNC,EAAmB,CACjBjrB,SAAS,EACTH,MAAO,4KACPK,SAAS,WAAD,8BAAE,uBAAAgQ,EAAA,sEACF0a,EAAiBza,QAAQ,KAAM+E,GAD7B,OAERsV,EAAQD,EAAKhpB,QAAO,SAACC,GAAD,OAAUA,EAAK0T,KAAOA,MAC1C+V,EAAmB,CAAExpB,KAAM,WAHnB,2CAAF,kDAAC,GAKTA,KAAM,SACN3B,KAAM,IACNC,oBAAoB,KAGxBqzB,QAAS,WACPrjB,EAAQQ,KAAR,+BAC0B2E,EAD1B,iBACqC6W,EADrC,YACkDC,KAGpD+C,YAAa,WACXhf,EAAQQ,KAAR,qCAA2C2E,EAA3C,qBAGA4V,EAAM9pB,IACR8pB,EAAM9pB,MA0BJkqB,EAAO,yCAAG,6BAAAhb,EAAA,sEACaijB,EAAmBhjB,UADhC,OACRkjB,EADQ,OAEd7I,EAAQ6I,EAAa/yB,MACrBoqB,EAAS2I,EAAa5I,OAHR,2CAAH,qDAUb,OAJAlT,qBAAU,WACR2T,MACC,CAAChC,EAAM7K,EAAO/T,EAAQ+f,EAAUrpB,EAAMO,IAGvC,mCACGyS,GAAc1a,EAAS0D,gBAAgBiB,gBACtC,cAACmtB,GAAA,EAAD,CAAOtlB,UAAU,OAAO1B,IAAI,EAA5B,SACE,8BACG+uB,EAAmBnhB,QAClB,cAAC,GAAD,CAAe+X,UAAW3B,KAE1B,qBAAKpkB,UAAWJ,EAAQgD,KAAxB,SACE,eAACiZ,GAAA,EAAD,CAAO7b,UAAWJ,EAAQkD,MAA1B,UACE,cAAC,GAAD,CACEjH,MAAM,0DACNonB,MACEjT,GAAc1a,EAAS0D,gBAAgBkB,gBAvG7C,WACZ6R,EAAQQ,KAAK,yBAyGG2W,gBAAiB,cAAC,GAAD,CAAiBkH,SArCnC,SAAC9tB,GAChB,IAAM6uB,EAAU,gBAAY7uB,EAAKmB,KAAjB,mBAAgCnB,EAAKytB,OAArC,KAChBY,EAAUQ,GACV/E,EAAQ,MAoCQ7C,cAAejd,IAEjB,qBAAKtG,UAAWJ,EAAQgvB,IAAxB,SACE,eAACU,GAAA,EAAD,CACE55B,MAAOsH,EACPuU,SAtCC,SAAC4C,EAAGze,GACvBw5B,EAAQx5B,GACR0wB,EAAQ,IAqCUmJ,eAAe,UACfC,UAAU,UACVC,UAAQ,EACR7wB,QAAQ,YANV,UAQE,cAAC8wB,GAAA,EAAD,CAAK/5B,MAAM,8CAAWD,MAAM,QAE5B,cAACg6B,GAAA,EAAD,CAAK/5B,MAAM,yFAAmBD,MAAM,aACpC,cAACg6B,GAAA,EAAD,CAAK/5B,MAAM,yFAAmBD,MAAM,aACpC,cAACg6B,GAAA,EAAD,CAAK/5B,MAAM,gEAAcD,MAAM,eAGnC,cAAC2xB,GAAA,EAAD,CAAgB5mB,MAAO,CAAEvB,QAAS,UAAlC,SACE,eAACooB,GAAA,EAAD,CACEtnB,UAAWJ,EAAQimB,MACnB/pB,KAAM,SACN2E,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CACEvG,QAASA,EACTya,MAAOA,EACP6J,QAASA,EACTC,cAvJI,SAAC/lB,EAAOymB,GAEhCqB,EADchC,IAAYW,GAAsB,QAAVxK,EACrB,OAAS,OAC1B8L,EAAWtB,IAqJS0C,SAAUhB,EAAK3Y,OACfwW,UAAWA,KAGb,eAACoD,GAAA,EAAD,WACGjB,EAAKrmB,KAAI,SAACunB,GACT,OACE,eAACnD,GAAA,EAAD,CACEqD,OAAK,EACLC,UAAW,EAEXnnB,MAAO,CAAE0F,aAAc,IACvBhF,QAAS,SAACgT,GAAD,OA3FlB,SAACA,EAAGsT,GACI,OAArBtT,EAAE2P,OAAO+D,SACXhB,EAAaY,EAAK,QAyFsBK,CAAW3T,EAAGsT,IALhC,UAOE,cAACjD,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAIM,YAEP,cAACvD,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAIO,WAEP,cAACxD,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACG4vB,EAAerH,EAAIkI,gBAGtB,cAACnL,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SAA2BuoB,EAAIQ,SAC/B,cAACzD,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACE,cAAC8V,GAAA,EAAD,CACErf,MAAOL,EAAS+C,cAAcovB,EAAIsC,QAClC/pB,UAAWkS,aACTtS,EAAQmqB,OACRnqB,EAAQ6nB,EAAIsC,aAIlB,cAACvF,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACE,cAACkjB,GAAD,CACEnY,QAAS,CACP,CAAEiH,GAAI,cAAerV,MAAO,qDAC5B,CAAEqV,GAAI,UAAWrV,MAAO,2DACxB,CACEqV,GAAI,OACJrV,MAAO,uCACP8mB,QAAS3S,GACP1a,EAAS0D,gBAAgBkB,gBAG7B,CACEgX,GAAI,SACJrV,MAAO,qBACP8mB,QAAS3S,GACP1a,EAAS0D,gBACNmB,mBAITkoB,YAAa,SAACrlB,GAAD,OACX6pB,EAAaY,EAAKzqB,UA9CnByqB,EAAIvW,QAqDbqV,EAAK3Y,SAAWuhB,EAAmBnhB,SACnC,cAACsW,GAAA,EAAD,CAAU7jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACkhB,GAAA,EAAD,CACE2D,QAAS,EACT1nB,MAAO,CAAEgkB,UAAW,UAFtB,SAIE,cAACvjB,EAAA,EAAD,CAAYtC,QAAQ,KAApB,+KASZ,cAAC,GAAD,CACEomB,MAAOyB,EACP1B,iBAlOO,SAAC3mB,EAAOgqB,GAC/BhC,EAAQgC,IAkOQnD,wBA/Nc,SAAC7mB,GAC/BkoB,EAAYloB,EAAM0lB,OAAOpuB,OACzB0wB,EAAQ,IA8NQlB,KAAMA,EACNC,YAAakB,e,wBCrFlBoF,GA9MC,SAAC,GAA4C,IAA1Cpb,EAAyC,EAAzCA,SAAUC,EAA+B,EAA/BA,UAAWob,EAAoB,EAApBA,cACtC,EAA0B3d,mBAAS,IAAnC,oBAAO4d,EAAP,KAAcC,EAAd,KACA,EAAwC7d,oBACzB,OAAb2d,QAAa,IAAbA,OAAA,EAAAA,EAAeG,KAAKn2B,QAAS,GAD/B,oBAAOo2B,EAAP,KAAqBC,EAArB,KAGA,EAAiDxb,eAAzCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,OAAQC,EAAvC,EAAuCA,MACjC/Q,EAAUd,KAEVktB,EAAiBne,GAAO,CAC5BZ,OAAQ,MACRC,IAAI,SAGA+e,EAAQ,yCAAG,6BAAA/f,EAAA,sEACM8f,EAAe7f,UADrB,OACTC,EADS,OAEfwf,EAASxf,EAAO9P,MAFD,2CAAH,qDAgCd,OARAiX,qBAAU,WACR0Y,MACC,IAEH1Y,qBAAU,WACR5C,EAAM+a,KACL,CAAC/a,EAAO+a,IAGT,eAACrrB,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAzB,UACE,cAACtE,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAACkR,GAAA,EAAD,CACEiZ,QAAM,EACN90B,MAAM,2BACN4b,SAlBa,SAAC4C,GACpB4X,EAAgB5X,EAAE2P,OAAOpuB,QAkBnBA,MAAOo2B,EACPltB,QAAQ,WACR8S,WAAS,EACT5V,KAAK,QACL2B,KAAK,OACLyuB,YAAa,CACXtsB,QAAS,CACP6qB,OAAQ7qB,EAAQoqB,aAXtB,SAeG2B,EAAMzrB,KAAI,SAAC7C,GAAD,OACT,eAACuX,GAAA,EAAD,CAA6Blf,MAAO2H,EAAO3H,MAA3C,UACE,qBACEy2B,IAAG,UAAK72B,EAASC,YAAd,YAA6B8H,EAAO+uB,MACvCC,IAAKhvB,EAAO1H,MACZ8K,MAAO,CACLmE,MAAO,GACPtB,OAAQ,GACR3C,aAAc,MACdkD,WAAY,MAGfxG,EAAO1H,QAXK0H,EAAO3H,cAgB5B,cAAC2K,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACEE,WAAS,EACThc,MAAOA,EACPoG,KAAK,QACL2B,KAAMA,EACN9H,MAAM,0DACNiJ,QAAQ,WACR2S,SAAUA,EACVpE,QAASuD,EAAO2a,kBAChB5Z,WACEf,EAAO2a,kBACH3a,EAAO2a,kBAAkBhe,QACzB,MAKZsE,MAAO,CACLE,UAAW,CACTnc,MAAO,GACP2X,QAAS/X,EAASqC,WAAWI,aAE/B8xB,UAAW,CACTn0B,MAAO,GACP2X,QAAS/X,EAASqC,WAAWI,cAGjC0F,KAAK,wBAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACEE,WAAS,EACThc,MAAOA,EACPoG,KAAK,QACL2B,KAAMA,EACN9H,MAAM,0DACNiJ,QAAQ,WACR2S,SAAUA,EACVpE,QAASuD,EAAO4b,cAChB7a,WACEf,EAAO4b,cAAgB5b,EAAO4b,cAAcjf,QAAU,MAK9D5P,KAAK,oBAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACEE,WAAS,EACThc,MAAOA,EACPoG,KAAK,QACL2B,KAAMA,EACN9H,MAAM,oDACNiJ,QAAQ,WACR2S,SAAUA,EACVpE,QAASuD,EAAO6b,aAChB9a,WACEf,EAAO6b,aAAe7b,EAAO6b,aAAalf,QAAU,MAK5D5P,KAAK,mBAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE7b,MAAM,6CACN62B,WAAS,EACTC,KAAM,EACN7tB,QAAQ,WACRnB,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPgc,WAAS,EACTvE,QAASuD,EAAOgc,YAChBjb,WACEf,EAAOgc,YAAchc,EAAOgc,YAAYrf,QAAU,MAK1D5P,KAAK,kBAGT,eAAC4C,EAAA,EAAD,CACE7C,MAAI,EACJ8C,GAAI,GACJG,MAAO,CAAErB,QAAS,OAAQC,eAAgB,iBAH5C,UAKE,cAACgC,EAAA,EAAD,CACEzC,QAAQ,YACR0C,MAAM,UACNtE,KAAK,SACLmE,QAASsP,GA5KF,SAACnU,GACd,IAAMqwB,EAAQC,eACRl3B,EAAK,2BACN4G,GADM,IAETuvB,KAPKF,EAAMkB,MAAK,SAACrvB,GAAD,OAAUA,EAAK9H,QAAUo2B,KAQzC5a,GAAIwa,EAAgBA,EAAcxa,GAAKyb,EACvCG,WAAYpB,IAEdrb,EAAS3a,MAgKL,4CAQA,cAAC2L,EAAA,EAAD,CAAQzC,QAAQ,YAAY0C,MAAM,UAAUH,QAASmP,EAArD,yDC9KFvH,GAAYhK,aAAW,SAACC,GAAD,MAAY,CACvC4D,KAAM,CACJ2F,OAAQ,UAEVzF,MAAO,CACL8B,MAAO,OACP1F,QAAS,IAEXrD,MAAO,CACLod,cAAe,IAEjBJ,WAAY,CACV,UAAW,CACT3Z,QAAS,cAGb8qB,WAAY,CACV5qB,QAAS,OACTE,WAAY,SACZ2Z,cAAe,EACf2W,WAAY,OAIVxL,GAAY,CAChB,CACElT,GAAI,OACJvb,MAAO,+CAET,CAAEub,GAAI,gBAAiBvb,MAAO,4DAC9B,CACEub,GAAI,aACJvb,MAAO,2DAGT,CAAEub,GAAI,WAGO,SAASd,KACtB,IAAMxQ,EAAUmJ,KACVgD,EAAUyG,cACVtB,EAAKxC,GAAe,MAC1B,EAA4BX,mBAAS,IAArC,oBAAOqb,EAAP,KAAeC,EAAf,KACA,EAAgCtb,mBAAS,IAAzC,oBAAOgf,EAAP,KAAiBC,EAAjB,KACA,EAA4Cjf,mBAAS,KAArD,oBAAO8hB,EAAP,KAAuBC,EAAvB,KACA,EAAgD/hB,mBAAS,YAAzD,oBAAOgiB,EAAP,KAAyBC,EAAzB,KACA,EAAiDzf,eAAzCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,OAAQC,EAAvC,EAAuCA,MAEjCsf,EAAqBpiB,GAAO,CAChCZ,OAAQ,OACRC,IAAI,aAGAgjB,EAAsBriB,GAAO,CACjCZ,OAAQ,MACRC,IAAI,YAAD,OAAcgE,KAGbif,EAAwBtiB,GAAO,CACnCZ,OAAQ,MACRC,IAAI,YAAD,OAAcgE,KAGbqc,EAAuB1f,GAAO,CAClCZ,OAAQ,SACRC,IAAI,YAGAmD,EAAQ,yCAAG,WAAO/T,GAAP,kBAAA4P,EAAA,yDACTshB,EAAc,GACpBT,EAAS7sB,KAAI,SAAC1C,GACZ,IAAMiwB,EAAU,CACdC,OAAQlwB,EAAKquB,KAAKn2B,OAAS8H,EAAKquB,KAAK3a,GACrCma,kBAAmB7tB,EAAK6tB,kBACxBiB,cAAe9uB,EAAK8uB,cACpBC,aAAc/uB,EAAK+uB,aACnBG,YAAalvB,EAAKkvB,YAClBxb,GAAI1T,EAAK0T,GAAGzC,WAAWN,SAAS,KAAO,KAAO3Q,EAAK0T,IAErDsc,EAAYjhB,KAAKkhB,MAGbE,EAdS,2BAeVrxB,GAfU,IAgBbywB,SAAUS,EACVmC,aAAcI,EACdK,OAAQP,KAEN3e,EApBW,gCAqBAgf,EAAoB/jB,QAAQwhB,GArB5B,+DAuBTsC,EAAmB9jB,QAAQwhB,GAvBlB,OAwBfC,YAAW,WACTC,MACC,KA1BY,4CAAH,sDA6BRA,EAAW,WACf9hB,EAAQQ,KAAK,uBAGTod,EAAS,yCAAG,6BAAAzd,EAAA,sEACKikB,EAAsBhkB,UAD3B,OACVid,EADU,OAEhBC,EAAUD,EAAO9sB,MACjB0wB,EAAY5D,EAAO9sB,KAAKywB,UACxB+C,EAAkB1G,EAAO9sB,KAAK8zB,QAC9BJ,EAAoB5G,EAAO9sB,KAAKqzB,cALhB,2CAAH,qDAQT5B,EAAkB,SAACzxB,GACvB,GAAIA,EAAKwwB,SAAU,CACjB,IAAMlQ,EAAQmQ,EAASiB,WAAU,SAACxwB,GAAD,OAAUA,EAAK0T,KAAO5U,EAAK4U,MACtD+c,EAAW,YAAOlB,GACxBkB,EAAYrR,GAAStgB,EACrB0wB,EAAYiB,QAEZjB,EAAY,GAAD,mBAAKD,GAAL,CAAezwB,KAE5B4xB,KAGIA,EAAmB,WACvBjH,EAAmB,CAAExpB,KAAM,aAGvB0wB,EAAe,SAAC7xB,GACpB2qB,EAAmB,CACjBprB,MAAO,2DACPD,UACE,cAAC,GAAD,CACEyU,SAAU0d,EACVzd,UAAW4d,EACXxC,cAAepvB,IAGnBmB,KAAM,UACN3B,KAAM,IACNE,SAAS,EACTD,oBAAoB,KA+CxB,OAVAwX,qBAAU,WACJrC,GACFyY,MAED,IAEHpW,qBAAU,WACR5C,EAAMyY,KACL,CAACzY,EAAOyY,IAGT,mCACE,sBAAM/Y,SAAUI,EAAaJ,GAA7B,SACI8f,EAAsBniB,QAgUtB,cAAC,GAAD,IA/TA,cAAC3N,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGtf,GAAI,GAAIP,UAAWJ,EAAQgD,KAA7C,SACE,eAACiZ,GAAA,EAAD,CAAO7b,UAAWJ,EAAQkD,MAA1B,UACE,cAAC5B,EAAA,EAAD,CACElB,UAAWJ,EAAQ/D,MACnB+C,QAAQ,KACRsS,GAAG,aACHtV,UAAU,MAJZ,SAMGsV,EAAK,sEAAiB,wEAGzB,cAAC7Q,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAzB,SACE,eAAC,WAAD,WACE,cAACtE,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,qBACN8H,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAOqX,UAChBtW,WACEf,EAAOqX,UAAYrX,EAAOqX,UAAU1a,QAAU,GAEhDqE,WAAS,EACT5V,KAAK,WAIX6V,MAAO,CAAEC,SAAUtc,EAASqC,WAAWC,UACvC6F,KAAK,gBAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,sEACN8H,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAOsX,SAChBvW,WACEf,EAAOsX,SAAWtX,EAAOsX,SAAS3a,QAAU,GAE9CqE,WAAS,EACT5V,KAAK,WAIX6V,MAAO,CAAEC,SAAUtc,EAASqC,WAAWC,UACvC6F,KAAK,eAIT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,uCACN8H,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAOuX,OAChBxW,WACEf,EAAOuX,OAASvX,EAAOuX,OAAO5a,QAAU,GAE1CqE,WAAS,EACT5V,KAAK,WAIX6V,MAAO,CACLE,UAAW,CACTnc,MAAO,GACP2X,QAAS/X,EAASqC,WAAWE,eAE/BgyB,UAAW,CACTn0B,MAAO,GACP2X,QAAS/X,EAASqC,WAAWE,gBAGjC4F,KAAK,aAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,eAAC+vB,GAAA,EAAD,CACE,aAAW,SACX5yB,KAAK,UACL/H,MAAOm6B,EACPte,SA1HO,SAAC4C,GAC1B2b,EAAkB3b,EAAE2P,OAAOpuB,QA0HT+K,MAAO,CACLrB,QAAS,OACT8H,cAAe,MACf7H,eAAgB,gBARpB,UAWE,cAACypB,GAAA,EAAD,CACExnB,MAAM,UACN5L,MAAM,IACN8a,QAAS,cAAC8f,GAAA,EAAD,CAAOhvB,MAAM,YACtB3L,MAAM,uBAER,cAACmzB,GAAA,EAAD,CACExnB,MAAM,UACN5L,MAAM,IACN8a,QAAS,cAAC8f,GAAA,EAAD,CAAOhvB,MAAM,YACtB3L,MAAM,sBAIZ,cAAC0K,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACExU,KAAK,SACL4B,QAAQ,WACRjJ,MAAM,iEACN8H,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAO4a,iBAChB7Z,WACEf,EAAO4a,iBACH5a,EAAO4a,iBAAiBje,QACxB,GAENqE,WAAS,EACT5V,KAAK,WAIX2B,KAAK,uBAIT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAACkR,GAAA,EAAD,CACEiZ,QAAM,EACN90B,MAAM,gEACND,MAAOq6B,EACPxe,SA3KK,SAAC4C,GACxB6b,EAAoB7b,EAAE2P,OAAOpuB,QA2KXkJ,QAAQ,WACR8S,WAAS,EACT5V,KAAK,QAPP,SASGxG,EAASG,kBAAkByK,KAAI,SAAC7C,GAAD,OAC9B,cAACuX,GAAA,EAAD,CAA6Blf,MAAO2H,EAAO3H,MAA3C,SACG2H,EAAO1H,OADK0H,EAAO3H,cAO5B,cAAC2K,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAACe,EAAA,EAAD,CACEzC,QAAQ,YACR0C,MAAM,UACNH,QAzNC,WACnBgtB,KAqNgB,8GAQCpB,EAASnf,QACV,cAACvN,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAACub,GAAA,EAAD,UACE,cAACwL,GAAA,EAAD,CAAgB5mB,MAAO,CAAEvB,QAAS,UAAlC,SACE,eAACooB,GAAA,EAAD,CACEtnB,UAAWJ,EAAQimB,MACnB/pB,KAAM,SACN2E,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CAAaie,UAAWA,KAExB,cAACoD,GAAA,EAAD,UACGuF,EAAS7sB,KAAI,SAACunB,GACb,OACE,eAACnD,GAAA,EAAD,CACEqD,OAAK,EACLC,UAAW,EAEXnnB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACqe,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACE,sBACEuB,MAAO,CACLrB,QAAS,OACTE,WAAY,UAHhB,UAME,qBACE6sB,IAAG,UAAK72B,EAASC,YAAd,YAA6BkyB,EAAIoE,KAAKO,MACzCC,IAAK5E,EAAIoE,KAAKl2B,MACd8K,MAAO,CACLmE,MAAO,GACPtB,OAAQ,GACR3C,aAAc,MACdkD,WAAY,KAGf4jB,EAAIoE,KAAKl2B,OAAS8xB,EAAIoE,KAAKpuB,UAGhC,cAAC+mB,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAI6E,gBAEP,cAAC9H,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAI4D,oBAGP,eAAC7G,GAAA,EAAD,CACEtlB,QAAQ,OACRuB,MAAO,CAAEgkB,UAAW,QAFtB,UAIE,cAAC/Q,GAAA,EAAD,CACEvS,QAAS,WA7Q7CgtB,EA6QqE1G,IADnC,SAGE,cAAC,GAAD,MAGF,cAAC/T,GAAA,EAAD,CACEvS,QAAS,kBAhRnB,SAACsmB,GAC3BR,EAAmB,CACjBjrB,SAAS,EACTH,MAAO,4KACPK,SAAS,WAAD,8BAAE,uBAAAgQ,EAAA,0DACJgF,EADI,gCAEAqc,EAAqBphB,QAAQ,KAAMsb,EAAIvW,IAFvC,OAIR8b,EAAYD,EAASxvB,QAAO,SAACC,GAAD,OAAUA,EAAK0T,KAAOuW,EAAIvW,OACtD+V,EAAmB,CAAExpB,KAAM,WALnB,2CAAF,kDAAC,GAOTA,KAAM,SACN3B,KAAM,IACNC,oBAAoB,IAmQ6BqyB,CAAoB3G,IADrC,SAGE,cAAC,GAAD,WA3CCA,EAAIvW,kBAwD3B,cAAC7Q,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,2BACN8H,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAOoZ,QAChBrY,WACEf,EAAOoZ,QAAUpZ,EAAOoZ,QAAQzc,QAAU,GAE5CqE,WAAS,EACT5V,KAAK,WAIX2B,KAAK,cAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE7b,MAAM,6CACN62B,WAAS,EACTC,KAAM,EACN7tB,QAAQ,WACRnB,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPgc,WAAS,EACTvE,QAASuD,EAAOgc,YAChBjb,WACEf,EAAOgc,YACHhc,EAAOgc,YAAYrf,QACnB,MAKZ5P,KAAK,kBAIT,eAAC4C,EAAA,EAAD,CACE7C,MAAI,EACJ8C,GAAI,GACJG,MAAO,CAAErB,QAAS,OAAQC,eAAgB,iBAH5C,UAKE,cAACgC,EAAA,EAAD,CAAQzC,QAAQ,YAAY0C,MAAM,UAAUtE,KAAK,SAAjD,4CAGA,cAACqE,EAAA,EAAD,CACEzC,QAAQ,YACR0C,MAAM,YACNH,QAAS0sB,EAHX,mEC7gBL9uB,oBAAW,SAACC,GAAD,MAAY,CACpC4D,KAAM,CACJgC,MAAO,QAET9B,MAAO,CACL8B,MAAO,OACP4D,aAAcxJ,EAAM2F,QAAQ,IAE9BkhB,MAAO,CACLhe,SAAU,KAEZ+mB,IAAK,CACHrvB,aAAa,aAAD,OAAeP,EAAMQ,QAAQoC,KAAKG,OAEhD/E,KAAM,CACJsE,MAAO,QAETuH,QAAS,CACPvH,MAAOtC,EAAMQ,QAAQ+B,QAAQQ,MAE/BjJ,KAAM,CACJiI,gBAAiB/B,EAAMQ,QAAQkC,QAAQK,MAEzC+G,WAAY,CACVxH,MAAOtC,EAAMQ,QAAQkC,QAAQK,MAE/BhJ,IAAK,CACHgI,gBAAiB/B,EAAMQ,QAAQ0C,OAAOH,MAExCwuB,UAAW,CACTjvB,MAAOtC,EAAMQ,QAAQ0C,OAAOH,MAE9B8W,WAAY,CACV,UAAW,CACT3Z,QAAS,cAGb8qB,WAAY,CACV5qB,QAAS,OACTE,WAAY,SACZ2Z,cAAe,EACf2W,WAAY,GAEdY,eAAgB,CACdzvB,gBAAiB/B,EAAMQ,QAAQkC,QAAQK,KACvCT,MAAO,OACP,UAAW,CACTP,gBAAiB/B,EAAMQ,QAAQkC,QAAQK,W,UCzCvCgH,GAAYhK,aAAW,SAACC,GAAD,MAAY,CACvC6Z,WAAY,CACV,UAAW,CACT3Z,QAAS,kBAmGAirB,GA/FA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACVxqB,EAAUmJ,KAChB,EAA4CgF,qBAA5C,oBAAO0iB,EAAP,KAAuBC,EAAvB,KACA,EAAiD3iB,mBAASqQ,QAA1D,oBAAOuS,EAAP,KAAyBC,EAAzB,KACA,EAA6C7iB,mBAASqQ,QAAtD,oBAAOyS,EAAP,KAAuBC,EAAvB,KACA,EAAkC/iB,mBAAS,IAA3C,oBAAOgjB,EAAP,KAAkBC,EAAlB,KAEMC,EAAsBpjB,GAAO,CACjCZ,OAAQ,MACRC,IAAK,aAODgkB,EAAe,SAAC/c,EAAGnX,GACV,SAATA,EACF4zB,EAAqBzc,GAErB2c,EAAmB3c,IAIjBgd,EAAY,yCAAG,6BAAAjlB,EAAA,sEACQ+kB,EAAoB9kB,UAD5B,OACb6e,EADa,OAEnBgG,EAAahG,EAAa1uB,MAFP,2CAAH,qDAmBlB,OAJAiX,qBAAU,WACR4d,MACC,IAGD,eAAC9wB,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAGrF,WAAW,SAASmB,MAAO,CAAEvB,QAAS,IAAlE,UACE,cAACmB,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAIG,MAAO,CAAErB,QAAS,QAA5C,SACE,cAACgyB,GAAA,EAAD,CACElgB,GAAG,iBACHK,SApCe,SAAC4C,EAAGze,GACzBg7B,EAAkBh7B,IAoCZuU,QAAS8mB,EACTM,eAAgB,SAACh0B,GAAD,gBAAeA,EAAO0qB,UAAtB,YAAmC1qB,EAAO2qB,WAC1DtW,WAAS,EACT5V,KAAK,QACLw1B,YAAa,SAACjjB,GAAD,OACX,cAACmD,GAAA,EAAD,2BAAenD,GAAf,IAAuB1Y,MAAM,0DAAaiJ,QAAQ,mBAIxD,cAACyB,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAIN,UAAWJ,EAAQiZ,WAA7C,SACE,cAACsI,GAAA,EAAD,CACEC,QAAM,EACN3jB,KAAK,OACL9H,MAAM,8CACN0rB,aAAa,WACbC,QAAQ,iCACRC,YAAY,qBACZC,UAAW,SAACjP,GAAD,OAAWA,EAAOA,EAAKyB,OAAO,iBAAmB,IAC5Dte,MAAOi7B,EACPpf,SAAU,SAAC4C,GAAD,OAAO+c,EAAa/c,EAAG,SACjC1T,MAAO,CAAEmE,MAAO,YAGpB,cAACvE,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAIN,UAAWJ,EAAQiZ,WAA7C,SACE,cAACsI,GAAA,EAAD,CACEC,QAAM,EACN3jB,KAAK,OACL9H,MAAM,8CACN0rB,aAAa,WACbC,QAAQ,iCACRC,YAAY,qBACZC,UAAW,SAACjP,GAAD,OAAWA,EAAOA,EAAKyB,OAAO,iBAAmB,IAC5Dte,MAAOm7B,EACPtf,SAAU,SAAC4C,GAAD,OAAO+c,EAAa/c,EAAG,OACjC1T,MAAO,CAAEmE,MAAO,YAGpB,cAACvE,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAACe,EAAA,EAAD,CAAQzC,QAAQ,YAAY0C,MAAM,UAAUH,QA1DjC,WACS,oBAAbipB,GACTA,EAAS,eAAD,OAEJqG,EAAiBA,EAAevf,GAAK,KAFjC,iBAGGyf,EAAiB7R,GAAGC,cAHvB,eAG2C8R,EAAe/R,GAAGC,cAH7D,OAwDN,8CAIF,cAACpK,GAAA,EAAD,CAASlU,MAAO,CAAEmE,MAAO,cCzEzBwf,GAAY,CAChB,CAAElT,GAAI,KAAMvb,MAAO,uEACnB,CACEub,GAAI,SACJvb,MAAO,kCAET,CACEub,GAAI,OACJvb,MAAO,kCAET,CAAEub,GAAI,QAASvb,MAAO,4BACtB,CACEub,GAAI,WACJvb,MAAO,qDAET,CACEub,GAAI,OACJvb,MAAO,uBAsSIswB,GAhSE,WACf,IAAMsL,EAAc7iB,GAAe,QAC7B9O,EAAUd,KAChB,EAA0BiP,mBAAS,OAAnC,oBAAOsM,EAAP,KAAc6L,EAAd,KACA,EAA8BnY,mBAAS,QAAvC,oBAAOmW,EAAP,KAAgBiC,EAAhB,KACA,EAA4BpY,qBAA5B,oBAAOzH,EAAP,KACA,GADA,KACwByH,mBAAS,IAAjC,oBAAOmX,EAAP,KAAakB,EAAb,KACA,EAAgCrY,mBAASzY,EAASE,iBAAlD,oBAAO6wB,EAAP,KAAiBC,EAAjB,KACA,EAAwBvY,mBAAS,IAAjC,oBAAOwY,EAAP,KAAaC,EAAb,KACA,EAA4BzY,qBAA5B,oBAAOxQ,EAAP,KAAeotB,EAAf,KACA,EAA0B5c,mBAAS,GAAnC,oBAAO0Y,EAAP,KAAcC,EAAd,KACA,EAAwB3Y,mBAASwjB,GAAjC,oBAAOv0B,EAAP,KAAakyB,EAAb,KACMnjB,EAAUyG,cA0BVgf,EAAoB3jB,GAAO,CAC/BZ,OAAQ,MACRC,IAAK2d,mBAAmB,WAAD,OACVzc,GAA2B,CACpC8W,OACA7K,QACA6J,UACAmC,WACA/f,SACAtJ,OACAO,eAgDA2pB,GA3CmBrZ,GAAO,CAC9BZ,OAAQ,SACRC,IAAI,YAyCO,yCAAG,6BAAAhB,EAAA,sEACYslB,EAAkBrlB,UAD9B,OACRslB,EADQ,OAEdjL,EAAQiL,EAAYn1B,MACpBoqB,EAAS+K,EAAYhL,OAHP,2CAAH,sDAmBb,OARAlT,qBAAU,WACR2T,MACC,CAAChC,EAAM7K,EAAO/T,EAAQ+f,EAAUrpB,EAAMO,IAEzCgW,qBAAU,WACR2b,EAAQqC,KACP,CAACA,IAGF,mCACGvhB,GAAc1a,EAAS0D,gBAAgB+B,eACtC,cAACqsB,GAAA,EAAD,CAAOtlB,UAAU,OAAO1B,IAAI,EAA5B,SACE,8BACGoxB,EAAkBxjB,QACjB,cAAC,GAAD,CAAe+X,UAAW3B,KAE1B,qBAAKpkB,UAAWJ,EAAQgD,KAAxB,SACE,eAACiZ,GAAA,EAAD,CAAO7b,UAAWJ,EAAQkD,MAA1B,UACE,cAAC,GAAD,CACEjH,MAtCH,SAATmB,EACK,4GACW,QAATA,EACF,2GAEF,4GAkCSimB,MAAgB,QAATjmB,GAlGX,WACZ+O,EAAQQ,KAAR,mCAAyCvP,KAmGzBumB,cAAejd,EACf4c,gBAAiB,cAAC,GAAD,CAAiBkH,SA5BnC,SAAC9tB,GAChBquB,EAAUruB,GACV8pB,EAAQ,QA4BM,qBAAKpmB,UAAWJ,EAAQgvB,IAAxB,SACE,eAACU,GAAA,EAAD,CACE1wB,QAAQ,YACRlJ,MAAOsH,EACPuU,SArDC,SAAC4C,EAAGze,GACvBw5B,EAAQx5B,IAqDU65B,eAAe,UACfC,UAAU,UACVC,UAAQ,EANV,UAQE,cAACC,GAAA,EAAD,CACE1sB,KACE,mBACEhD,UAAWkS,aACT,uBACAtS,EAAQiJ,SAHZ,kBASFlT,MAAM,iEACND,MAAM,QAER,cAACg6B,GAAA,EAAD,CACE1sB,KACE,mBACEhD,UAAWkS,aACT,uBACAtS,EAAQkJ,YAHZ,kBASFnT,MAAM,mFACND,MAAM,SAER,cAACg6B,GAAA,EAAD,CACE1sB,KACE,mBACEhD,UAAWkS,aACT,uBACAtS,EAAQ2wB,WAHZ,6BASF56B,MAAM,mFACND,MAAM,aAIZ,cAAC2xB,GAAA,EAAD,CAAgB5mB,MAAO,CAAEvB,QAAS,UAAlC,SACE,eAACooB,GAAA,EAAD,CACEtnB,UAAWJ,EAAQimB,MACnB/pB,KAAM,SACN2E,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CACEvG,QAASA,EACTya,MAAOA,EACP6J,QAASA,EACTC,cArLI,SAAC/lB,EAAOymB,GAEhCqB,EADchC,IAAYW,GAAsB,QAAVxK,EACrB,OAAS,OAC1B8L,EAAWtB,IAmLS0C,SAAUhB,EAAK3Y,OACfwW,UAAWA,KAEb,eAACoD,GAAA,EAAD,WACGjB,EAAKrmB,KAAI,SAACunB,GACT,OACE,eAACnD,GAAA,EAAD,CACEqD,OAAK,EACLC,UAAW,EAEXnnB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACqe,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGyQ,GAAc8X,EAAIvW,MAErB,cAACsT,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAIiK,eAAJ,UACMjK,EAAIiK,eADV,YAC4BjK,EAAIkK,SADhC,KAEGlK,EAAIkK,WAEV,cAACnN,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGyQ,GACC,IAAIkE,KAAK4T,EAAIlV,MAAMwB,mBACjB,YAIN,cAACyQ,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGyQ,GACCnP,OAAOinB,EAAI1S,OAAOyZ,oBAGtB,cAAChK,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAI4C,WAEP,cAAC7F,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACE,cAAC8V,GAAA,EAAD,CACErf,MAAOL,EAASuD,aAAa4uB,EAAIzqB,MACjCgD,UAAWkS,aACTtS,EAAQ5C,KACR4C,EAAQ6nB,EAAIzqB,aA/BbyqB,EAAIvW,QAoDbqV,EAAK3Y,SAAW4jB,EAAkBxjB,SAClC,cAACsW,GAAA,EAAD,CAAU7jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACkhB,GAAA,EAAD,CACE2D,QAAS,EACT1nB,MAAO,CAAEgkB,UAAW,UAFtB,SAIE,cAACvjB,EAAA,EAAD,CAAYtC,QAAQ,KAApB,+KASZ,cAAC,GAAD,CACEomB,MAAOyB,EACP1B,iBA9PO,SAAC3mB,EAAOgqB,GAC/BhC,EAAQgC,IA8PQnD,wBA3Pc,SAAC7mB,GAC/BkoB,EAAYloB,EAAM0lB,OAAOpuB,OACzB0wB,EAAQ,IA0PQlB,KAAMA,EACNC,YAAakB,gB,UC3UlBtnB,gBAAW,SAACC,GAAD,MAAY,CACpC4D,KAAM,CACJgC,MAAO,QAET9B,MAAO,CACL8B,MAAO,OACP4D,aAAcxJ,EAAM2F,QAAQ,IAE9BkhB,MAAO,CACLhe,SAAU,KAEZ+mB,IAAK,CACHrvB,aAAa,aAAD,OAAeP,EAAMQ,QAAQoC,KAAKG,OAEhD/E,KAAM,CACJsE,MAAO,QAETuH,QAAS,CACPvH,MAAOtC,EAAMQ,QAAQ+B,QAAQQ,MAE/BrJ,OAAQ,CACNqI,gBAAiB/B,EAAMQ,QAAQkC,QAAQK,MAEzC+G,WAAY,CACVxH,MAAOtC,EAAMQ,QAAQkC,QAAQK,MAE/BpJ,QAAS,CACPoI,gBAAiB/B,EAAMQ,QAAQ0C,OAAOH,MAExCwuB,UAAW,CACTjvB,MAAOtC,EAAMQ,QAAQ0C,OAAOH,MAE9B8W,WAAY,CACV,UAAW,CACT3Z,QAAS,cAGb8qB,WAAY,CACV5qB,QAAS,OACTE,WAAY,SACZ2Z,cAAe,EACf2W,WAAY,OCrBVgC,GAAoB,CACxB,CACE1gB,GAAI,YACJvb,MAAO,sBAET,CAAEub,GAAI,WAAYvb,MAAO,uEAEzB,CAAEub,GAAI,SAAUvb,MAAO,mCAEnBk8B,GAAkB,CACtB,CAAE3gB,GAAI,WAAYvb,MAAO,iGACzB,CAAEub,GAAI,OAAQvb,MAAO,0CAGjBoB,GAAc,CAClBC,SAAU,iCACVC,SAAU,iCACVE,OAAQ,wCAGK,SAAS8uB,GAAT,GAAoD,IAAhC6L,EAA+B,EAA/BA,SAAqBv0B,GAAU,EAArB+S,UAAqB,EAAV/S,QAChDqC,EAAUd,KAChB,EAA0BiP,mBAAS,OAAnC,oBAAOsM,EAAP,KAAc6L,EAAd,KACA,EAA4BnY,qBAA5B,oBAAOzH,EAAP,KAAeyrB,EAAf,KACA,EAA8BhkB,mBAAS,aAAvC,oBAAOmW,EAAP,KAAgBiC,EAAhB,KACA,EAAwBpY,mBAAS,GAAjC,oBAAOmX,EAAP,KAAakB,EAAb,KACA,EAAgCrY,mBAASzY,EAASE,iBAAlD,oBAAO6wB,EAAP,KAAiBC,EAAjB,KACA,EAAwBvY,mBAAS,IAAjC,oBAAOwY,EAAP,KAAaC,EAAb,KAiBMoE,EAAqB/c,GAAO,CAChCZ,OAAQ,MACRC,IAAI,GAAD,OAAK3P,EAAL,YAAe6Q,GAA2B,CAC3C8W,OACA7K,QACA6J,UACAmC,WACA/f,cAQE4gB,EAAO,yCAAG,6BAAAhb,EAAA,sEACa0e,EAAmBze,UADhC,OACR6e,EADQ,OAEdxE,EAAQwE,EAAa1uB,MAFP,2CAAH,qDAeb,OAJAiX,qBAAU,WACR2T,MACC,CAAChC,EAAM7K,EAAO/T,EAAQ+f,IAGvB,sBAAK5lB,MAAO,CAAE2G,WAAY,GAAIqb,UAAW,KAAzC,UACE,sBAAKhiB,MAAO,CAAErB,QAAS,OAAQC,eAAgB,iBAA/C,UACE,cAAC6B,EAAA,EAAD,CACElB,UAAWJ,EAAQ/D,MACnB+C,QAAQ,KACRsS,GAAG,aACHtV,UAAU,MAJZ,qEASA,cAAC4V,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,kCACN4b,SAlCe,SAAC4C,GACtB4d,EAAU5d,EAAE2P,OAAOpuB,QAkCbA,MAAO4Q,EACPxK,KAAK,aAGT,cAACurB,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CAAOtnB,UAAWJ,EAAQimB,MAAO/pB,KAAM,SAAvC,UACE,cAAC,GAAD,CACE8D,QAASA,EACTya,MAAOA,EACP6J,QAASA,EACTC,cAvEgB,SAAC/lB,EAAOymB,GAEhCqB,EADchC,IAAYW,GAAsB,QAAVxK,EACrB,OAAS,OAC1B8L,EAAWtB,IAqEH0C,SAAUhB,EAAK3Y,OACfwW,UACa,WAAX7mB,EAAsBs0B,GAAkBD,KAI5C,eAACpK,GAAA,EAAD,WACGjB,EAAKrmB,KAAI,SAACunB,GACT,OACE,eAACnD,GAAA,EAAD,CACEqD,OAAK,EACLC,UAAW,EAEXnnB,MAAO,CAAE0F,aAAc,IACvBhF,QAAS,SAACgT,GAAD,OAnDN,SAACA,EAAGsT,GACI,OAArBtT,EAAE2P,OAAO+D,SACXiK,EAASrK,GAiDmBK,CAAW3T,EAAGsT,IALhC,UAOc,WAAXlqB,GACC,cAACinB,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SAA2BuoB,EAAI9xB,QAErB,WAAX4H,GACC,cAACinB,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGnI,GAAY0wB,EAAIwC,cAIT,aAAX1sB,GACC,cAACinB,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SAA2BuoB,EAAIM,YAErB,aAAXxqB,GACC,cAACinB,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SAA2BuoB,EAAIO,WAGrB,aAAXzqB,GACC,cAACinB,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACE,cAAC8V,GAAA,EAAD,CACErf,MAAOL,EAAS+C,cAAcovB,EAAIsC,QAClC/pB,UAAWkS,aAAKtS,EAAQmqB,OAAQnqB,EAAQ6nB,EAAIsC,eAxBlC,aAAXxsB,EAAwBkqB,EAAIvW,GAAKuW,EAAI/xB,WA+B9C6wB,EAAK3Y,SAAWgd,EAAmB5c,SACnC,cAACsW,GAAA,EAAD,CAAU7jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACkhB,GAAA,EAAD,CAAW2D,QAAS,EAAG1nB,MAAO,CAAEgkB,UAAW,UAA3C,SACE,cAACvjB,EAAA,EAAD,CAAYtC,QAAQ,KAApB,+KASZ,cAAC,GAAD,CACEomB,MAAOuB,EAAK3Y,OACZmX,iBA3HmB,SAAC3mB,EAAOgqB,GAC/BhC,EAAQgC,IA2HJnD,wBAxH0B,SAAC7mB,GAC/BkoB,EAAYloB,EAAM0lB,OAAOpuB,OACzB0wB,EAAQ,IAuHJlB,KAAMA,EACNC,YAAakB,O,4CC4RN2L,GAzcC,SAAC,GAA+D,IAA7D3hB,EAA4D,EAA5DA,SAAUC,EAAkD,EAAlDA,UAAWob,EAAuC,EAAvCA,cAA4B1uB,GAAW,EAAxBi1B,YAAwB,EAAXj1B,MAClE,EAA0B+Q,mBAAS,IAAnC,oBAAO4d,EAAP,KAAcC,EAAd,KACA,EAAmD7d,mBAASqQ,QAA5D,oBAAOvJ,EAAP,KAAsBqd,EAAtB,KACA,EAAsDnkB,mBAAQ,OAC5D2d,QAD4D,IAC5DA,OAD4D,EAC5DA,EAAeyG,iBADjB,oBAAOC,EAAP,KAA4BC,EAA5B,KAGA,EAAwCtkB,oBAAsB,OAAb2d,QAAa,IAAbA,OAAA,EAAAA,EAAegC,SAAU,GAA1E,oBAAO5B,EAAP,KAAqBC,EAArB,KACA,EAA4Bhe,mBAAS,IAArC,oBAAOukB,EAAP,KAAeC,EAAf,KACA,EAAwCxkB,oBACzB,OAAb2d,QAAa,IAAbA,OAAA,EAAAA,EAAe8G,aAAc,GAD/B,oBAAOC,EAAP,KAAqBC,EAArB,KAGA,EAAiDniB,eAAzCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,OAAQC,EAAvC,EAAuCA,MACjC/Q,EAAUd,KAEVktB,EAAiBne,GAAO,CAC5BZ,OAAQ,MACRC,IAAI,SAGAylB,EAAiB9kB,GAAO,CAC5BZ,OAAQ,MACRC,IAAI,oBAGA+e,EAAQ,yCAAG,6BAAA/f,EAAA,sEACM8f,EAAe7f,UADrB,OACTC,EADS,OAEfwf,EAASxf,EAAO9P,MAFD,2CAAH,qDAKRs2B,EAAS,yCAAG,6BAAA1mB,EAAA,sEACKymB,EAAexmB,UADpB,OACVC,EADU,OAEhBmmB,EAAUnmB,EAAO9P,MAFD,2CAAH,qDAKTu2B,EAAkB,WACtB,OAAOlH,EAAMkB,MAAK,SAACrvB,GAAD,OAAUA,EAAK9H,QAAUo2B,MAGvCgH,EAAkB,WACtB,OAAOR,EAAOzF,MAAK,SAACrvB,GAAD,OAAUA,EAAK9H,QAAU+8B,MAGxCM,EAAS,SAACz2B,GACd,IACI5G,EADEi3B,EAAQC,eAiCd,OA9BEl3B,EADW,UAATsH,EACG,2BACAV,GADA,IAEH4U,GAAIwa,EAAgBA,EAAcxa,GAAKyb,EACvC6F,WAAYC,EACZO,SAAUF,IACVhG,WAAYpB,IAEI,SAAT1uB,EACJ,2BACAV,GADA,IAEH4U,GAAIwa,EAAgBA,EAAcxa,GAAKyb,EACvC6F,WAAYC,EACZ/E,OAAQ5B,EACRkH,SAAUF,IACVjH,KAAMgH,IACNV,gBAAiBC,EACjBtF,WAAYpB,IAGT,2BACApvB,GADA,IAEH4U,GAAIwa,EAAgBA,EAAcxa,GAAKyb,EACvC6F,WAAYC,EACZ/E,OAAQ5B,EACRkH,SAAUF,IACVjH,KAAMgH,IACNhe,cAAeA,EAAciK,GAC7BgO,WAAYpB,IAGTrb,EAAS3a,EAAOsH,IAAQ0uB,IAG3BuH,EAAe,SAAC9e,GACpB4X,EAAgB5X,EAAE2P,OAAOpuB,QAOrBw9B,EAAe,SAAC/e,GACpBue,EAAgBve,EAAE2P,OAAOpuB,QAY3B,OATA6d,qBAAU,WACR0Y,IACA2G,MACC,IAEHrf,qBAAU,WACR5C,EAAM+a,KACL,CAAC/a,EAAO+a,IAGT,sBAAMrb,SAAUI,EAAasiB,GAA7B,SACE,eAAC1yB,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAzB,UACE,eAACtE,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,UACY,UAATtD,GACC,eAACqD,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAzB,UACE,cAACtE,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAACkR,GAAA,EAAD,CACEiZ,QAAM,EACN90B,MAAM,iCACN4b,SAAU2hB,EACVx9B,MAAO+8B,EACP7zB,QAAQ,WACR8S,WAAS,EACT5V,KAAK,QACL2B,KAAK,OARP,SAUG60B,EAAOpyB,KAAI,SAAC7C,GAAD,OACV,cAACuX,GAAA,EAAD,CAA6Blf,MAAO2H,EAAO3H,MAA3C,SACG2H,EAAO1H,OADK0H,EAAO3H,cAM5B,cAAC2K,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,oDACNqH,KAAK,SACLS,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAOqE,MAChBtD,WAAYf,EAAOqE,MAAQrE,EAAOqE,MAAM1H,QAAU,GAClDqE,WAAS,EACT5V,KAAK,WAIX2B,KAAK,eAKH,SAATT,GACC,eAACqD,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAzB,UACE,cAACtE,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAACkR,GAAA,EAAD,CACEiZ,QAAM,EACN90B,MAAM,iCACN4b,SAAU2hB,EACVx9B,MAAO+8B,EACP7zB,QAAQ,WACR8S,WAAS,EACT5V,KAAK,QACL2B,KAAK,OARP,SAUG60B,EAAOpyB,KAAI,SAAC7C,GAAD,OACV,cAACuX,GAAA,EAAD,CAA6Blf,MAAO2H,EAAO3H,MAA3C,SACG2H,EAAO1H,OADK0H,EAAO3H,cAM5B,cAAC2K,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAACkR,GAAA,EAAD,CACEiZ,QAAM,EACN90B,MAAM,0DACN4b,SAzFY,SAAC4C,GAC3Bke,EAAuBle,EAAE2P,OAAOpuB,QAyFlBA,MAAO08B,EACPxzB,QAAQ,WACR8S,WAAS,EACT5V,KAAK,QACL2B,KAAK,OARP,SAUGnI,EAASkG,sBAAsB0E,KAAI,SAAC7C,GAAD,OAClC,cAACuX,GAAA,EAAD,CAA6Blf,MAAO2H,EAAO3H,MAA3C,SACG2H,EAAO1H,OADK0H,EAAO3H,cAM5B,cAAC2K,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,4BACNqH,KAAK,SACLS,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAOqE,MAChBtD,WAAYf,EAAOqE,MAAQrE,EAAOqE,MAAM1H,QAAU,GAClDqE,WAAS,EACT5V,KAAK,WAIX6V,MAAO,CAAEC,SAAUtc,EAASqC,WAAWC,UACvC6F,KAAK,YAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,sEACNka,QAAM,EACNpS,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAOyiB,aAChB1hB,WACEf,EAAOyiB,aAAeziB,EAAOyiB,aAAa9lB,QAAU,GAEtDqE,WAAS,EACT5V,KAAK,WAIX2B,KAAK,mBAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAACkR,GAAA,EAAD,CACEiZ,QAAM,EACN90B,MAAM,2BACN4b,SAAU0hB,EACVv9B,MAAOo2B,EACPltB,QAAQ,WACR8S,WAAS,EACT5V,KAAK,QACL2B,KAAK,OACLyuB,YAAa,CACXtsB,QAAS,CACP6qB,OAAQ7qB,EAAQoqB,aAXtB,SAeG2B,EAAMzrB,KAAI,SAAC7C,GAAD,OACT,eAACuX,GAAA,EAAD,CAA6Blf,MAAO2H,EAAO3H,MAA3C,UACE,qBACEy2B,IAAG,UAAK72B,EAASC,YAAd,YAA6B8H,EAAO+uB,MACvCC,IAAKhvB,EAAO1H,MACZ8K,MAAO,CACLmE,MAAO,GACPtB,OAAQ,GACR3C,aAAc,MACdkD,WAAY,MAGfxG,EAAO1H,QAXK0H,EAAO3H,iBAkBtB,UAATsH,GACC,eAACqD,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAzB,UACE,cAACtE,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAACkR,GAAA,EAAD,CACEiZ,QAAM,EACN90B,MAAM,iCACN4b,SAAU2hB,EACVx9B,MAAO+8B,EACP7zB,QAAQ,WACR8S,WAAS,EACT5V,KAAK,QACL2B,KAAK,OARP,SAUG60B,EAAOpyB,KAAI,SAAC7C,GAAD,OACV,cAACuX,GAAA,EAAD,CAA6Blf,MAAO2H,EAAO3H,MAA3C,SACG2H,EAAO1H,OADK0H,EAAO3H,cAM5B,cAAC2K,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,wCACNqH,KAAK,SACLS,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAOqE,MAChBtD,WAAYf,EAAOqE,MAAQrE,EAAOqE,MAAM1H,QAAU,GAClDqE,WAAS,EACT5V,KAAK,WAIX6V,MAAO,CAAEC,SAAUtc,EAASqC,WAAWC,UACvC6F,KAAK,YAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,8CACNka,QAAM,EACNpS,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAO0iB,aAChB3hB,WACEf,EAAO0iB,aAAe1iB,EAAO0iB,aAAa/lB,QAAU,GAEtDqE,WAAS,EACT5V,KAAK,WAIX2B,KAAK,mBAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAACkR,GAAA,EAAD,CACEiZ,QAAM,EACN90B,MAAM,2BACN4b,SAAU0hB,EACVv9B,MAAOo2B,EACPltB,QAAQ,WACR8S,WAAS,EACT5V,KAAK,QACL2B,KAAK,OACLyuB,YAAa,CACXtsB,QAAS,CACP6qB,OAAQ7qB,EAAQoqB,aAXtB,SAeG2B,EAAMzrB,KAAI,SAAC7C,GAAD,OACT,eAACuX,GAAA,EAAD,CAA6Blf,MAAO2H,EAAO3H,MAA3C,UACE,qBACEy2B,IAAG,UAAK72B,EAASC,YAAd,YAA6B8H,EAAO+uB,MACvCC,IAAKhvB,EAAO1H,MACZ8K,MAAO,CACLmE,MAAO,GACPtB,OAAQ,GACR3C,aAAc,MACdkD,WAAY,MAGfxG,EAAO1H,QAXK0H,EAAO3H,cAgB5B,cAAC2K,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,2BACNka,QAAM,EACNpS,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAO2iB,WAChB5hB,WACEf,EAAO2iB,WAAa3iB,EAAO2iB,WAAWhmB,QAAU,GAElDqE,WAAS,EACT5V,KAAK,WAIX2B,KAAK,iBAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAIN,UAAWJ,EAAQiZ,WAAtC,SACE,cAACsI,GAAA,EAAD,CACE1jB,KAAK,OACL9H,MAAM,sEACN0rB,aAAa,WACbC,QAAQ,iCACRC,YAAY,qBACZC,UAAW,SAACjP,GAAD,OACTA,EAAOA,EAAKyB,OAAO,iBAAmB,IAExCte,MAAOmf,EACPtD,SAAU2gB,EACVzxB,MAAO,CAAEmE,MAAO,YAGpB,cAACvE,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,kCACNka,QAAM,EACNpS,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAO4iB,YAChB7hB,WACEf,EAAO4iB,YAAc5iB,EAAO4iB,YAAYjmB,QAAU,GAEpDqE,WAAS,EACT5V,KAAK,WAIX2B,KAAK,wBAOf,eAAC4C,EAAA,EAAD,CACE7C,MAAI,EACJ8C,GAAI,GACJG,MAAO,CAAErB,QAAS,OAAQC,eAAgB,iBAH5C,UAKE,cAACgC,EAAA,EAAD,CACEzC,QAAQ,YACR0C,MAAM,UACNtE,KAAK,SACLmE,QAASsP,EAAasiB,GAJxB,4CAQA,cAAC1xB,EAAA,EAAD,CAAQzC,QAAQ,YAAY0C,MAAM,YAAYH,QAASmP,EAAvD,2D,oBCjbJvH,GAAYhK,aAAW,SAACC,GAAD,MAAY,CACvC4D,KAAM,CACJ2F,OAAQ,UAEVzF,MAAO,CACL8B,MAAO,OACP1F,QAAS,IAEXrD,MAAO,CACLod,cAAe,IAEjBJ,WAAY,CACV,UAAW,CACT3Z,QAAS,cAGb8qB,WAAY,CACV5qB,QAAS,OACTE,WAAY,SACZ2Z,cAAe,EACf2W,WAAY,OAIV2D,GAAoB,CACxB,CAAEriB,GAAI,OAAQvb,MAAO,kCACrB,CACEub,GAAI,SACJvb,MAAO,6BAET,CAAEub,GAAI,WAEFsiB,GAAmB,CACvB,CAAEtiB,GAAI,OAAQvb,MAAO,kCACrB,CACEub,GAAI,SACJvb,MAAO,6BAET,CACEub,GAAI,OACJvb,MAAO,4DAET,CACEub,GAAI,OACJvb,MAAO,6BAET,CACEub,GAAI,OACJvb,MAAO,wEAET,CAAEub,GAAI,WAEFuiB,GAAoB,CACxB,CAAEviB,GAAI,OAAQvb,MAAO,kCACrB,CACEub,GAAI,SACJvb,MAAO,6BAET,CAAEub,GAAI,UAAWvb,MAAO,uEACxB,CACEub,GAAI,OACJvb,MAAO,6BAET,CAAEub,GAAI,WA6dOwiB,GA1dItpB,IAAMupB,YAAW,SAACvqB,EAAOwqB,GAC1C,IAAQlI,EAAkBtiB,EAAlBsiB,cACF9rB,EAAUmJ,KACVkpB,EAAcvjB,GAAe,QACnC,EAAgCX,qBAAhC,oBAAO2R,EAAP,KAAiBmU,EAAjB,KAEAC,8BAAoBF,GAAK,WACvB,OAAOlU,KAGT,IAAMqU,EAAyB,SAACr+B,EAAOsH,EAAMg3B,GAC3C,OAAIA,EACKC,EAAwBv+B,EAAOsH,GAEjCk3B,EAAuBx+B,EAAOsH,IAGjCk3B,EAAyB,SAACx+B,EAAOsH,GACrC,IAAIm3B,EACErN,EAAQ,CACZsN,MAAO,WACLD,EAAcE,KAAO3U,EAAU,CAC7B4S,OAAQ,CAAEgC,MAAO,CAAC5+B,OAGtB6+B,KAAM,WACJJ,EAAcE,KAAO3U,EAAU,CAC7BiM,MAAO,CAAE2I,MAAO,CAAC5+B,OAGrB8+B,MAAO,WACLL,EAAcE,KAAO3U,EAAU,CAC7B1M,QAAS,CAAEshB,MAAO,CAAC5+B,QAIrBoxB,EAAM9pB,KACR8pB,EAAM9pB,KACN62B,EAAYM,GACZp0B,EAAkB,CAAEtC,KAAM,iBAIxBw2B,EAA0B,SAACv+B,EAAOsH,GACtC,IAAIm3B,EACErN,EAAQ,CACZsN,MAAO,WACL,IAAMxX,EAAQ8C,EAAS4S,OAAOtE,WAAU,SAACxwB,GAAD,OAAUA,EAAK0T,KAAOxb,EAAMwb,MACpEijB,EAAcE,KAAO3U,EAAU,CAC7B4S,OAAO,eACJ1V,EAAQ,CAAE6X,KAAM/+B,OAIvB6+B,KAAM,WACJ,IAAM3X,EAAQ8C,EAASiM,MAAMqC,WAAU,SAACxwB,GAAD,OAAUA,EAAK0T,KAAOxb,EAAMwb,MACnEijB,EAAcE,KAAO3U,EAAU,CAC7BiM,MAAM,eACH/O,EAAQ,CAAE6X,KAAM/+B,OAIvB8+B,MAAO,WACL,IAAM5X,EAAQ8C,EAAS1M,QAAQgb,WAC7B,SAACxwB,GAAD,OAAUA,EAAK0T,KAAOxb,EAAMwb,MAE9BijB,EAAcE,KAAO3U,EAAU,CAC7B1M,QAAQ,eACL4J,EAAQ,CAAE6X,KAAM/+B,QAKrBoxB,EAAM9pB,KACR8pB,EAAM9pB,KACN62B,EAAYM,GACZp0B,EAAkB,CAAEtC,KAAM,iBAIxBi3B,EAAsB,SAACh/B,EAAOsH,GAClC+C,EAAkB,CAChB/D,SAAS,EACTH,MAAO,4KACPK,SAAU,WACR,IAAIi4B,EACErN,EAAQ,CACZsN,MAAO,WACL,IAAMxX,EAAQ8C,EAAS4S,OAAOtE,WAC5B,SAACxwB,GAAD,OAAUA,EAAK0T,KAAOxb,EAAMwb,MAE9BijB,EAAcE,KAAO3U,EAAU,CAC7B4S,OAAQ,CAAEqC,QAAS,CAAC,CAAC/X,EAAO,QAGhC2X,KAAM,WACJ,IAAM3X,EAAQ8C,EAASiM,MAAMqC,WAC3B,SAACxwB,GAAD,OAAUA,EAAK0T,KAAOxb,EAAMwb,MAE9BijB,EAAcE,KAAO3U,EAAU,CAC7BiM,MAAO,CAAEgJ,QAAS,CAAC,CAAC/X,EAAO,QAG/B4X,MAAO,WACL,IAAM5X,EAAQ8C,EAAS1M,QAAQgb,WAC7B,SAACxwB,GAAD,OAAUA,EAAK0T,KAAOxb,EAAMwb,MAE9BijB,EAAcE,KAAO3U,EAAU,CAC7B1M,QAAS,CAAE2hB,QAAS,CAAC,CAAC/X,EAAO,SAI/BkK,EAAM9pB,KACR8pB,EAAM9pB,KACN62B,EAAYM,GACZp0B,EAAkB,CAAEtC,KAAM,aAG9BA,KAAM,SACN3B,KAAM,IACNC,oBAAoB,KAIlB64B,EAAmB,WACvB70B,EAAkB,CAAEtC,KAAM,gBAGtBo3B,EAAiB,SAAC73B,EAAMV,GAC5ByD,EAAkB,CAChBlE,MAAM,GAAD,OAAqB,WAAhBo2B,EAA2B,uCAAW,uCAA3C,YACM,UAATj1B,EAAmB,2BAAkB,SAATA,EAAkB,iCAAU,sBAE1DpB,UACE,cAAC,GAAD,CACEyU,SAAU0jB,EACVzjB,UAAWskB,EACXlJ,cAAepvB,EACf21B,YAAaA,EACbj1B,KAAMA,IAGVS,KAAM,aACN3B,KAAM,IACNE,SAAS,EACTD,oBAAoB,KAIlB+4B,EAAiB,SAAC93B,GACtB,IAAM8pB,EAAQ,CACZsN,MAAO,WACL,OACE,eAAClzB,EAAA,EAAD,CAAYtC,QAAQ,SAApB,UACmB,WAAhBqzB,EAA2B,gEAAgB,gEAD9C,WAEGvS,QAFH,IAEGA,OAFH,EAEGA,EAAU4S,OAAO1kB,OAFpB,QAMJ2mB,KAAM,WACJ,OACE,eAACrzB,EAAA,EAAD,CAAYtC,QAAQ,SAApB,UACmB,WAAhBqzB,EAA2B,sEAAiB,sEAD/C,WAEGvS,QAFH,IAEGA,OAFH,EAEGA,EAAUiM,MAAM/d,OAFnB,QAMJ4mB,MAAO,WACL,OACE,eAACtzB,EAAA,EAAD,CAAYtC,QAAQ,SAApB,UACmB,WAAhBqzB,EAA2B,0DAAe,0DAD7C,WAEGvS,QAFH,IAEGA,OAFH,EAEGA,EAAU1M,QAAQpF,OAFrB,SAON,GAAIkZ,EAAM9pB,GACR,OAAO8pB,EAAM9pB,MAcjB,OAVAuW,qBAAU,WACRsgB,EAAYnI,KACX,CAACA,IAEJnY,qBAAU,WACsB,oBAAnBnK,EAAMiH,UACfjH,EAAMiH,SAASqP,KAEhB,CAACA,IAGF,qCACE,cAACrf,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAIG,MAAO,CAAErB,QAAS,OAAQC,eAAgB,UAA7D,SACE,eAAC01B,GAAA,EAAD,CAAazzB,MAAM,UAAnB,UACE,cAACD,EAAA,EAAD,CACE2zB,UAAW,mBAAGh1B,UAAU,uBAAb,uBACXmB,QAAS,kBAAM0zB,EAAe,UAFhC,SAIGC,EAAe,WAElB,cAACzzB,EAAA,EAAD,CACE2zB,UAAW,mBAAGh1B,UAAU,uBAAb,qBACXmB,QAAS,kBAAM0zB,EAAe,SAFhC,SAIGC,EAAe,UAElB,cAACzzB,EAAA,EAAD,CACE2zB,UAAW,mBAAGh1B,UAAU,uBAAb,sBACXmB,QAAS,kBAAM0zB,EAAe,UAFhC,SAIGC,EAAe,gBAKtB,cAACz0B,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAzB,SACE,eAACtE,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,UACE,eAAC20B,GAAA,EAAD,CACEC,SAAQ,OAAExV,QAAF,IAAEA,OAAF,EAAEA,EAAU4S,OAAO1kB,OAC3BunB,WAAU,OAACzV,QAAD,IAACA,OAAD,EAACA,EAAU4S,OAAO1kB,QAF9B,UAIE,cAACwnB,GAAA,EAAD,CACEp1B,UAAWJ,EAAQy1B,iBACnBC,WAAY,mBAAGt1B,UAAU,uBAAb,yBACZ,gBAAc,kBACdkR,GAAG,iBAJL,SAME,cAAChQ,EAAA,EAAD,CAAYlB,UAAWJ,EAAQ21B,QAA/B,wDAEA,OAAC7V,QAAD,IAACA,OAAD,EAACA,EAAU4S,OAAO1kB,SAClB,cAAC4nB,GAAA,EAAD,UACE,cAACn1B,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAACub,GAAA,EAAD,UACE,cAACwL,GAAA,EAAD,CAAgB5mB,MAAO,CAAEvB,QAAS,UAAlC,SACE,eAACooB,GAAA,EAAD,CACEtnB,UAAWJ,EAAQimB,MACnB/pB,KAAM,SACN2E,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CAAaie,UAAWmP,KAExB,cAAC/L,GAAA,EAAD,iBACG9H,QADH,IACGA,OADH,EACGA,EAAU4S,OAAOpyB,KAAI,SAACunB,GAAS,IAAD,EAC7B,OACE,eAACnD,GAAA,EAAD,CACEqD,OAAK,EACLC,UAAW,EAEXnnB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACqe,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACE,qBACEuB,MAAO,CACLrB,QAAS,OACTE,WAAY,UAHhB,mBAMGmoB,EAAIuL,gBANP,aAMG,EAAcr9B,UAGnB,cAAC6uB,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGyQ,GACCnP,OAAOinB,EAAI1S,OAAOyZ,oBAItB,eAAChK,GAAA,EAAD,CACEtlB,QAAQ,OACRuB,MAAO,CAAEgkB,UAAW,QAFtB,UAIE,cAAC/Q,GAAA,EAAD,CACEvS,QAAS,kBAAM0zB,EAAe,QAASpN,IADzC,SAGE,cAAC,GAAD,MAGF,cAAC/T,GAAA,EAAD,CACEvS,QAAS,kBACPuzB,EAAoBjN,EAAK,UAF7B,SAKE,cAAC,GAAD,WAlCCA,EAAIvW,uBAgD/B,eAAC+jB,GAAA,EAAD,CACEC,SAAQ,OAAExV,QAAF,IAAEA,OAAF,EAAEA,EAAUiM,MAAM/d,OAC1BunB,WAAU,OAACzV,QAAD,IAACA,OAAD,EAACA,EAAUiM,MAAM/d,QAF7B,UAIE,cAACwnB,GAAA,EAAD,CACEp1B,UAAWJ,EAAQy1B,iBACnBC,WAAY,mBAAGt1B,UAAU,uBAAb,yBACZ,gBAAc,kBACdkR,GAAG,iBAJL,SAME,cAAChQ,EAAA,EAAD,CAAYlB,UAAWJ,EAAQ21B,QAA/B,8DAEA,OAAC7V,QAAD,IAACA,OAAD,EAACA,EAAUiM,MAAM/d,SACjB,cAAC4nB,GAAA,EAAD,UACE,cAACn1B,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAACub,GAAA,EAAD,UACE,cAACwL,GAAA,EAAD,CAAgB5mB,MAAO,CAAEvB,QAAS,UAAlC,SACE,eAACooB,GAAA,EAAD,CACEtnB,UAAWJ,EAAQimB,MACnB/pB,KAAM,SACN2E,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CAAaie,UAAWoP,KAExB,cAAChM,GAAA,EAAD,iBACG9H,QADH,IACGA,OADH,EACGA,EAAUiM,MAAMzrB,KAAI,SAACunB,GAAS,IAAD,IAC5B,OACE,eAACnD,GAAA,EAAD,CACEqD,OAAK,EACLC,UAAW,EAEXnnB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACqe,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACE,qBACEuB,MAAO,CACLrB,QAAS,OACTE,WAAY,UAHhB,mBAMGmoB,EAAIuL,gBANP,aAMG,EAAcr9B,UAGnB,cAAC6uB,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGyQ,GACCnP,OAAOinB,EAAI1S,OAAOyZ,oBAGtB,cAAChK,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAI0K,kBAEP,cAAC3N,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,mBACGuoB,EAAIoE,YADP,aACG,EAAUl2B,QAEb,cAAC6uB,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAI0L,eAGP,eAAC3O,GAAA,EAAD,CACEtlB,QAAQ,OACRuB,MAAO,CAAEgkB,UAAW,QAFtB,UAIE,cAAC/Q,GAAA,EAAD,CACEvS,QAAS,kBAAM0zB,EAAe,OAAQpN,IADxC,SAGE,cAAC,GAAD,MAGF,cAAC/T,GAAA,EAAD,CACEvS,QAAS,kBACPuzB,EAAoBjN,EAAK,SAF7B,SAKE,cAAC,GAAD,WA3CCA,EAAIvW,uBAyD/B,eAAC+jB,GAAA,EAAD,CACEC,SAAQ,OAAExV,QAAF,IAAEA,OAAF,EAAEA,EAAU1M,QAAQpF,OAC5BunB,WAAU,OAACzV,QAAD,IAACA,OAAD,EAACA,EAAU1M,QAAQpF,QAF/B,UAIE,cAACwnB,GAAA,EAAD,CACEp1B,UAAWJ,EAAQy1B,iBACnBC,WAAY,mBAAGt1B,UAAU,uBAAb,yBACZ,gBAAc,kBACdkR,GAAG,iBAJL,SAME,cAAChQ,EAAA,EAAD,CAAYlB,UAAWJ,EAAQ21B,QAA/B,yCAEF,cAACC,GAAA,EAAD,aACI,OAAC9V,QAAD,IAACA,OAAD,EAACA,EAAU1M,QAAQpF,SACnB,cAACvN,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAACub,GAAA,EAAD,UACE,cAACwL,GAAA,EAAD,CAAgB5mB,MAAO,CAAEvB,QAAS,UAAlC,SACE,eAACooB,GAAA,EAAD,CACEtnB,UAAWJ,EAAQimB,MACnB/pB,KAAM,SACN2E,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CAAaie,UAAWqP,KAExB,cAACjM,GAAA,EAAD,iBACG9H,QADH,IACGA,OADH,EACGA,EAAU1M,QAAQ9S,KAAI,SAACunB,GAAS,IAAD,IAC9B,OACE,eAACnD,GAAA,EAAD,CACEqD,OAAK,EACLC,UAAW,EAEXnnB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACqe,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACE,qBACEuB,MAAO,CACLrB,QAAS,OACTE,WAAY,UAHhB,mBAMGmoB,EAAIuL,gBANP,aAMG,EAAcr9B,UAGnB,cAAC6uB,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGyQ,GACCnP,OAAOinB,EAAI1S,OAAOyZ,oBAItB,cAAChK,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAI5S,cAAcd,mBACjB,WAGJ,cAACyQ,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,mBACGuoB,EAAIoE,YADP,aACG,EAAUl2B,QAEb,eAAC6uB,GAAA,EAAD,CACEtlB,QAAQ,OACRuB,MAAO,CAAEgkB,UAAW,QAFtB,UAIE,cAAC/Q,GAAA,EAAD,CACEvS,QAAS,kBAAM0zB,EAAe,QAASpN,IADzC,SAGE,cAAC,GAAD,MAGF,cAAC/T,GAAA,EAAD,CACEvS,QAAS,kBACPuzB,EAAoBjN,EAAK,UAF7B,SAKE,cAAC,GAAD,WA1CCA,EAAIvW,kCCve1B,SAASukB,GAAT,GAAyD,IAAlCnlB,EAAiC,EAAjCA,UAAWD,EAAsB,EAAtBA,SAAUqlB,EAAY,EAAZA,SACnDC,EAAa5kB,iBAAO,MAC1B,EAAgChD,mBAAS,CACvCukB,OAAQ,GACR3G,MAAO,GACP3Y,QAAS,KAHX,oBAAO0M,EAAP,UAUA,OACE,sBAAKjf,MAAO,CAAE2G,WAAY,GAAIqb,UAAW,KAAzC,UACE,+BACE,cAACpiB,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAzB,SACE,cAAC,GAAD,CACE+mB,cAAehM,EACf1iB,KAAM,UACN42B,IAAK+B,QAKX,eAACt1B,EAAA,EAAD,CACE7C,MAAI,EACJ8C,GAAI,GACJG,MAAO,CACLrB,QAAS,OACTC,eAAgB,gBAChB+H,UAAW,IANf,UASE,cAAC/F,EAAA,EAAD,CAAQzC,QAAQ,YAAY0C,MAAM,UAAUH,QAzBnC,WACbkP,EAAS,eAAKslB,EAAWtjB,SAAWqjB,IAwBhC,4CAGA,cAACr0B,EAAA,EAAD,CAAQzC,QAAQ,YAAY0C,MAAM,YAAYH,QAASmP,EAAvD,wDC/BR,IAAM8T,GAAY,CAChB,CACElT,GAAI,YACJvb,MAAO,sBAET,CAAEub,GAAI,WAAYvb,MAAO,uEACzB,CACEub,GAAI,WACJvb,MAAO,qDAET,CAAEub,GAAI,SAAUvb,MAAO,wCACvB,CAAEub,GAAI,UAAWvb,MAAO,kCAExB,CAAEub,GAAI,WAGO,SAAS+U,GAAT,GAA4C,IAAxB6L,EAAuB,EAAvBA,SAAUxhB,EAAa,EAAbA,UACrC1Q,EAAUd,KAChB,EAA0BiP,mBAAS,OAAnC,oBAAOsM,EAAP,KAAc6L,EAAd,KACA,EAA4BnY,qBAA5B,oBAAOzH,EAAP,KACA,GADA,KAC8ByH,mBAAS,cAAvC,oBAAOmW,EAAP,KAAgBiC,EAAhB,KACA,EAAwBpY,mBAAS,GAAjC,oBAAOmX,EAAP,KAAakB,EAAb,KACA,EAAgCrY,mBAASzY,EAASE,iBAAlD,oBAAO6wB,EAAP,KAAiBC,EAAjB,KACA,EAAwBvY,mBAAS,IAAjC,oBAAOwY,EAAP,KAAaC,EAAb,KACA,EAA8CzY,mBAAS,IAAvD,oBAAO6nB,EAAP,KAAwBC,EAAxB,KAiBMC,EAAmBjoB,GAAO,CAC9BZ,OAAQ,MACRC,IAAI,UAAD,OAAYkB,GAA2B,CACxC8W,OACA7K,QACA6J,UACAmC,WACA/f,cAoBE4gB,EAAO,yCAAG,6BAAAhb,EAAA,sEACW4pB,EAAiB3pB,UAD5B,OACR4pB,EADQ,OAEdvP,EAAQuP,EAAWz5B,MAFL,2CAAH,qDAKPwrB,EAAa,SAAC3T,EAAGsT,GAEnB,IAnBoBjqB,EAIElB,EAcC,OAArB6X,EAAE2P,OAAO+D,UACG+N,EAAgB5H,WAAU,SAACxwB,GAAD,OAAUA,EAAK0T,KAAOuW,EAAIvW,OACrD,GAhBS5U,EAiBHmrB,EAhBrBoO,EAAmBD,EAAgBr4B,QAAO,SAACC,GAAD,OAAUA,EAAK0T,KAAO5U,EAAK4U,SAL/C1T,EAuBHiqB,EAtBnBoO,EAAmB,GAAD,mBAAKD,GAAL,CAAsBp4B,QA+B1C,OAJA+V,qBAAU,WACR2T,MACC,CAAChC,EAAM7K,EAAO/T,EAAQ+f,IAGvB,sBAAK5lB,MAAO,CAAE2G,WAAY,GAAIqb,UAAW,KAAzC,UACE,cAAC,GAAD,IAGA,cAAC4E,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CAAOtnB,UAAWJ,EAAQimB,MAAO/pB,KAAM,SAAvC,UACE,cAAC,GAAD,CACE8D,QAASA,EACTya,MAAOA,EACP6J,QAASA,EACTC,cAzEgB,SAAC/lB,EAAOymB,GAEhCqB,EADchC,IAAYW,GAAsB,QAAVxK,EACrB,OAAS,OAC1B8L,EAAWtB,IAuEH0C,SAAUhB,EAAK3Y,OACfwW,UAAWA,KAGb,eAACoD,GAAA,EAAD,WACGjB,EAAKrmB,KAAI,SAACunB,GACT,OACE,eAACnD,GAAA,EAAD,CACEqD,OAAK,EACLC,UAAW,EAEXnnB,MAAO,CAAE0F,aAAc,IACvBhF,QAAS,SAACgT,GAAD,OAAO2T,EAAW3T,EAAGsT,IALhC,UAOE,cAACjD,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SAA2BuoB,EAAIM,YAC/B,cAACvD,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SAA2BuoB,EAAIO,WAC/B,cAACxD,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SAA2BuoB,EAAI4C,SAAS5sB,OACxC,cAAC+mB,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SAA2BuoB,EAAIQ,SAC/B,cAACzD,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SAA2BuoB,EAAIuO,UAC/B,cAACxR,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACG02B,EAAgBznB,SAASsZ,GACxB,cAACpmB,EAAA,EAAD,CACE8zB,UAAQ,EACRv2B,QAAQ,YACRoB,UAAWJ,EAAQ4wB,eACnByF,QAAS,mBAAGj2B,UAAU,uBAAb,kBAJX,qEASA,4BApBCynB,EAAIvW,QA0BbqV,EAAK3Y,SAAWkoB,EAAiB9nB,SACjC,cAACsW,GAAA,EAAD,CAAU7jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACkhB,GAAA,EAAD,CAAW2D,QAAS,EAAG1nB,MAAO,CAAEgkB,UAAW,UAA3C,SACE,cAACvjB,EAAA,EAAD,CAAYtC,QAAQ,KAApB,+KASZ,cAAC,GAAD,CACEomB,MAAOuB,EAAK3Y,OACZmX,iBAtHmB,SAAC3mB,EAAOgqB,GAC/BhC,EAAQgC,IAsHJnD,wBAnH0B,SAAC7mB,GAC/BkoB,EAAYloB,EAAM0lB,OAAOpuB,OACzB0wB,EAAQ,IAkHJlB,KAAMA,EACNC,YAAakB,IAEf,eAAChmB,EAAA,EAAD,CACE7C,MAAI,EACJ8C,GAAI,GACJG,MAAO,CAAErB,QAAS,OAAQC,eAAgB,iBAH5C,UAKE,cAACgC,EAAA,EAAD,CAAQzC,QAAQ,YAAY0C,MAAM,UAAUH,QAhGjC,WACf2wB,EAAS8D,IA+FL,4CAGA,cAACv0B,EAAA,EAAD,CAAQzC,QAAQ,YAAY0C,MAAM,YAAYH,QAASmP,EAAvD,wDCpLO,kBACW,OAAD,6HACA9D,GAAK0C,IAAI,iBADT,QACf9C,EADe,UAGnBjQ,EAAQC,QACN9G,EAAS+B,QAAQK,cACjB6E,KAAKC,UAAU4P,EAAO9P,OAExBsB,EAAMI,SAAS,CACbhB,KAAM1H,EAASiB,aAAaO,UAC5BmG,QAASmP,EAAO9P,QATC,8CADV,cAgBX,OAAOC,KAAKI,MAAMR,EAAQO,QAAQpH,EAAS+B,QAAQK,iB,qBCIjD0sB,GAAY,CAChB,CACElT,GAAI,OACJvb,MAAO,+CAET,CACEub,GAAI,WACJvb,MAAO,qDAET,CACEub,GAAI,SACJvb,MAAO,qDAET,CAAEub,GAAI,OAAQvb,MAAO,kEAErB,CAAEub,GAAI,WAGO,SAASukB,GAAT,GAMX,IALFplB,EAKC,EALDA,SACAC,EAIC,EAJDA,UACA+d,EAGC,EAHDA,WACA3C,EAEC,EAFDA,cACA3uB,EACC,EADDA,OAEM6C,EAAUd,KAChB,EAA0BiP,mBAAS,OAAnC,oBAAOsM,EAAP,KAAc6L,EAAd,KACA,EAA4BnY,qBAA5B,oBAAOzH,EAAP,KACA,GADA,KAC8ByH,mBAAS,SAAvC,oBAAOmW,EAAP,KAAgBiC,EAAhB,KACA,EAAwBpY,mBAAS,GAAjC,oBAAOmX,EAAP,KAAakB,EAAb,KACA,EAAgCrY,mBAASzY,EAASE,iBAAlD,oBAAO6wB,EAAP,KAAiBC,EAAjB,KACA,EAAwBvY,mBAAS,IAAjC,oBAAOwY,EAAP,KAAaC,EAAb,KACA,EAAsCzY,qBACpC2d,KAAkBA,EAAcwK,SADlC,oBAAOC,EAAP,KAAoBC,EAApB,KAGMC,EAAQC,KACd,EAA8CvoB,mBAAS2d,GAAvD,oBAAO6K,EAAP,KAAwBC,EAAxB,KACA,EAAsCzoB,mBAAS,IAA/C,oBAAO0oB,EAAP,KAAoBC,EAApB,KACA,EAA0C3oB,mBAAS,GAAnD,oBAAO4oB,EAAP,KAAsBC,GAAtB,KACA,GAAoC7oB,mBAClC2d,GAAiB,CACfjuB,KAAM,IACNo5B,IAAK,GACL3V,OAAQ,KAJZ,sBAAO4V,GAAP,MAAmBC,GAAnB,MAsBMC,GAAyBnpB,GAAO,CACpCZ,OAAQ,MACRC,IAAI,iBAAD,OAAmBkB,GAA2B,CAC/C8W,OACA7K,QACA6J,UACAmC,WACA/f,cAIE2wB,GAAuBppB,GAAO,CAClCZ,OAAQ,MACRC,IAAK,gBAGDgqB,GAAkBrpB,GAAO,CAC7BZ,OAAQ,MACRC,IAAI,iBAGAiqB,GAA0B,SAAChjB,GAAO,IAAD,EACrC,EAAwBA,EAAE2P,OAAlBrmB,EAAR,EAAQA,KAAM/H,EAAd,EAAcA,MAEd,GAAa,SAAT+H,EAAiB,CACnB,IAGM25B,EAHWf,EAAM94B,QACrB,SAACC,GAAD,OAAUA,EAAK9H,SAAL,OAAe6gC,QAAf,IAAeA,OAAf,EAAeA,EAAiBc,eAC1C,GAAGnuB,SACuB3L,QAAO,SAACC,GAAD,OAAUA,EAAK9H,QAAUA,KAAO,GACnE0gC,EAAegB,EAAWlB,SAE5Ba,GAAc,2BACTD,IADQ,uBAEVr5B,EAAO/H,GAFG,kCAGC6gC,QAHD,IAGCA,OAHD,EAGCA,EAAiBc,YAHlB,MAWTnQ,GAAO,yCAAG,6BAAAhb,EAAA,sEACY8qB,GAAuB7qB,QAC/C,KACAwqB,GAHY,OACRW,EADQ,OAKd9Q,EAAQ8Q,EAAYh7B,MALN,2CAAH,qDA4BPi7B,GAAe,yCAAG,WAAOj7B,GAAP,kBAAA4P,EAAA,yDACtBsqB,EAAmBl6B,GACA,IAAf+xB,EAFkB,gBAGpB0I,GAAc,CACZS,UAAWl7B,EAAK4U,GAChBzT,KAAMnB,EAAKmB,KACXo5B,IAAK,GACL3V,OAAQ,KAPU,uCAUF+V,GAAqB9qB,QACrC,KADgB,UAEbkiB,EAFa,YAEC/xB,EAAK4U,KAZJ,OAUd2lB,EAVc,OAedY,EAAaZ,EAAIv6B,KACnBo7B,KAAQD,GACVV,GAAc,CACZS,UAAWl7B,EAAK4U,GAChBzT,KAAMnB,EAAKmB,KACXo5B,IAAK,GACL3V,OAAQ,KAGV6V,GAAc,2BAAKU,GAAN,IAAkBD,UAAWl7B,EAAK4U,GAAIzT,KAAMnB,EAAKmB,QAxB5C,4CAAH,sDA6Cfk6B,GAAc,yCAAG,6BAAAzrB,EAAA,sEACAgrB,GAAgB/qB,UADhB,OACfC,EADe,OAErBsqB,EAAetqB,EAAO9P,MAFD,2CAAH,qDAiBpB,OARAiX,qBAAU,WACR2T,OACC,CAAChC,EAAM7K,EAAO/T,EAAQ+f,EAAUsQ,IAEnCpjB,qBAAU,WACRokB,OACC,IAGD,sBAAKl3B,MAAO,CAAE2G,WAAY,GAAIqb,UAAW,KAAzC,UACE,+BACE,eAACpiB,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAzB,UACE,cAACtE,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAACkR,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,8CACN8H,KAAM,OACN8T,SAAU4lB,GACVzhC,MAAOohC,GAAWr5B,KAClBiU,WAAS,EACT5V,KAAK,QACLq5B,UAAQ,MAGZ,cAAC90B,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAACkR,GAAA,EAAD,CACEiZ,QAAM,EACN90B,MAAM,0DACND,MAAK,OAAEohC,SAAF,IAAEA,QAAF,EAAEA,GAAYp5B,KACnB6T,SAAU4lB,GACVv4B,QAAQ,WACRnB,KAAK,OACLiU,WAAS,EACT5V,KAAK,QARP,SAnGmB,WAC3B,IAAK47B,KAAQnB,GAAkB,CAC7B,IAAMqB,EAAWvB,EAAM94B,QACrB,SAACC,GAAD,OAAUA,EAAK9H,QAAU6gC,EAAgBc,cACzC,GAEF,OAAIO,EACKA,EAAS1uB,SAEX,GAET,MAAO,GAkGI2uB,GAAuB33B,KAAI,SAAC7C,GAAD,OAC1B,cAACuX,GAAA,EAAD,CAA6Blf,MAAO2H,EAAO3H,MAA3C,SACG2H,EAAO1H,OADK0H,EAAO3H,cAM3BygC,GACC,cAAC91B,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAACkR,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,uEACN8H,KAAM,UACN8T,SAAU4lB,GACVzhC,MAAK,OAAEohC,SAAF,IAAEA,QAAF,EAAEA,GAAYZ,QACnBxkB,WAAS,EACT5V,KAAK,QACLkB,KAAK,aAIX,cAACqD,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAACkR,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,iCACN8H,KAAM,SACN8T,SAAU4lB,GACVzhC,MAAK,OAAEohC,SAAF,IAAEA,QAAF,EAAEA,GAAY5V,OACnBxP,WAAS,EACT5V,KAAK,QACLkB,KAAK,aAGT,cAACqD,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAACkR,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,2BACN8H,KAAM,MACN8T,SAAU4lB,GACVzhC,MAAK,OAAEohC,SAAF,IAAEA,QAAF,EAAEA,GAAYD,IACnBnlB,WAAS,EACT5V,KAAK,QACLkB,KAAK,eAINu5B,GACD,cAACl2B,EAAA,EAAD,CACE7C,MAAI,EACJ8C,GAAI,GACJG,MAAO,CAAErB,QAAS,OAAQC,eAAgB,YAH5C,SAKE,cAACgC,EAAA,EAAD,CAAQzC,QAAQ,YAAY0C,MAAM,UAAUH,QA5GzC,WACb,IAAMwrB,EAAQC,eACRtwB,EAAI,yBACR4U,GAAIwa,EAAgBA,EAAcxa,GAAKyb,GACpCmK,IAFK,IAGRgB,QAASnB,EACToB,SAAUv3B,OAAOs2B,GAAWD,KAAOr2B,OAAOs2B,GAAW5V,UAGvD7Q,EAAS/T,EAAMS,IAmGL,mDAOR,cAAC4X,GAAA,EAAD,CAASlU,MAAO,CAAE8H,OAAQ,eAC1B,cAAClI,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAzB,SACE,cAACtE,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,GAAIvf,GAAI,GAAvB,SACE,cAACkR,GAAA,EAAD,CACEiZ,QAAM,EACN90B,MAAM,iCACND,MAAOihC,EACPplB,SAzGY,SAAC4C,GACrByiB,GAAiBziB,EAAE2P,OAAOpuB,QAyGlBkJ,QAAQ,WACRnB,KAAK,QACLiU,WAAS,EACT5V,KAAK,QARP,SAUG26B,EAAYv2B,KAAI,SAAC7C,GAAD,OACf,cAACuX,GAAA,EAAD,CAA6Blf,MAAO2H,EAAO3H,MAA3C,SACG2H,EAAO1H,OADK0H,EAAO3H,gBAO9B,eAAC2xB,GAAA,EAAD,WACE,cAAC,GAAD,CAEE9D,cAAejd,IAGjB,eAACghB,GAAA,EAAD,CAAOtnB,UAAWJ,EAAQimB,MAAO/pB,KAAM,SAAvC,UACE,cAAC,GAAD,CACE8D,QAASA,EACTya,MAAOA,EACP6J,QAASA,EACTC,cAzQgB,SAAC/lB,EAAOymB,GAEhCqB,EADchC,IAAYW,GAAsB,QAAVxK,EACrB,OAAS,OAC1B8L,EAAWtB,IAuQH0C,SAAUhB,EAAK3Y,OACfwW,UAAWA,KAGb,eAACoD,GAAA,EAAD,WACGjB,EAAKrmB,KAAI,SAACunB,GACT,OACE,eAACnD,GAAA,EAAD,CACEqD,OAAK,EACLC,UAAW,EAEXnnB,MAAO,CAAE0F,aAAc,IACvBhF,QAAS,SAACgT,GAAD,OAvMN,SAACA,EAAGsT,GACI,OAArBtT,EAAE2P,OAAO+D,SACX0P,GAAgB9P,GAqMYK,CAAW3T,EAAGsT,IALhC,UAOE,cAACjD,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SAA2BuoB,EAAIhqB,OAC/B,cAAC+mB,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAIyD,WAAW8M,KAAK,OAEvB,cAACxT,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SAA2BuoB,EAAIwQ,aAC/B,cAACzT,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SAA2BuoB,EAAIyQ,WAC/B,cAAC1T,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,UACkB,OAAfq3B,QAAe,IAAfA,OAAA,EAAAA,EAAiBrlB,MAAOuW,EAAIvW,GAC3B,cAAC7P,EAAA,EAAD,CACE8zB,WAAYzJ,EACZ9sB,QAAQ,YACRoB,UAAWJ,EAAQ4wB,eACnBrvB,QAAS,WAjL7Bq1B,KAkLoBP,QAAS,mBAAGj2B,UAAU,uBAAb,kBALX,qEAUA,cAACqB,EAAA,EAAD,CACE8zB,WAAYzJ,EACZ9sB,QAAQ,YACR0C,MAAM,UACNH,QAAS,kBAAMo2B,GAAgB9P,IAJjC,+EAtBCA,EAAIvW,QAmCbqV,EAAK3Y,SAAWopB,GAAuBhpB,SACvC,cAACsW,GAAA,EAAD,CAAU7jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACkhB,GAAA,EAAD,CAAW2D,QAAS,EAAG1nB,MAAO,CAAEgkB,UAAW,UAA3C,SACE,cAACvjB,EAAA,EAAD,CAAYtC,QAAQ,KAApB,gLASZ,cAAC,GAAD,CACEomB,MAAOuB,EAAK3Y,OACZmX,iBA/TmB,SAAC3mB,EAAOgqB,GAC/BhC,EAAQgC,IA+TJnD,wBA5T0B,SAAC7mB,GAC/BkoB,EAAYloB,EAAM0lB,OAAOpuB,OACzB0wB,EAAQ,IA2TJlB,KAAMA,EACNC,YAAakB,IAGf,cAAChmB,EAAA,EAAD,CACE7C,MAAI,EACJ8C,GAAI,GACJG,MAAO,CAAErB,QAAS,OAAQC,eAAgB,YAH5C,SAKE,cAACgC,EAAA,EAAD,CAAQzC,QAAQ,YAAY0C,MAAM,YAAYH,QAASmP,EAAvD,uDCpXR,IAAMvH,GAAYhK,aAAW,SAACC,GAAD,MAAY,CACvC4D,KAAM,CACJ2F,OAAQ,UAEVzF,MAAO,CACL8B,MAAO,OACP1F,QAAS,IAEXrD,MAAO,CACLod,cAAe,IAEjBJ,WAAY,CACV,UAAW,CACT3Z,QAAS,cAGb8qB,WAAY,CACV5qB,QAAS,OACTE,WAAY,SACZ2Z,cAAe,EACf2W,WAAY,OAIVxL,GAAY,CAChB,CACElT,GAAI,OACJvb,MAAO,+CAET,CAAEub,GAAI,OAAQvb,MAAO,4BACrB,CACEub,GAAI,SACJvb,MAAO,kCAET,CACEub,GAAI,MACJvb,MAAO,4BAET,CACEub,GAAI,QACJvb,MAAO,kCAGT,CAAEub,GAAI,WAGFinB,GAAiB,CACrB,CACEjnB,GAAI,QACJvb,MAAO,2DAET,CAAEub,GAAI,OAAQvb,MAAO,4GACrB,CACEub,GAAI,MACJvb,MAAO,qDAET,CACEub,GAAI,QACJvb,MAAO,4BAET,CACEub,GAAI,MACJvb,MAAO,8CAGT,CAAEub,GAAI,WAGO,SAASd,GAAT,GAAuC,EAAjBsb,cAAkB,IAC/CiK,EAAa5kB,iBAAO,MACpBnR,EAAUmJ,KACVgD,EAAUyG,cACVtB,EAAKxC,GAAe,MACpB6iB,EAAc7iB,GAAe,QACnC,EAA4BX,mBAAS,IAArC,oBAAOqb,EAAP,KAAeC,EAAf,KACA,EAA4Ctb,qBAA5C,oBAAO0iB,EAAP,KAAuBC,EAAvB,KACA,EAAiDngB,eAAzCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,OAAQC,EAAvC,EAAuCA,MACvC,EAAyC5C,mBAASqQ,QAAlD,oBAAOga,EAAP,KAAqBC,EAArB,KACA,EAA8CtqB,mBAAS,GAAvD,oBAAOuqB,EAAP,KAAwBC,EAAxB,KACA,EAAgCxqB,mBAAS,IAAzC,oBAAOsc,EAAP,KAAiBK,EAAjB,KACA,EAA8B3c,mBAAS,IAAvC,oBAAOyqB,EAAP,KAAgBC,EAAhB,KACA,EAAgC1qB,mBAAS,IAAzC,oBAAO2qB,EAAP,KAAiBC,EAAjB,KACA,EAA0C5qB,mBAAS,KAAnD,oBAAO6qB,EAAP,KAAsBC,EAAtB,KACA,GAAgC9qB,mBAAS,CACvCukB,OAAQ,GACR3G,MAAO,GACP3Y,QAAS,KAHX,sBAAO0M,GAAP,MAAiBmU,GAAjB,MAKA,GAAgC9lB,mBAAS,GAAzC,sBAAOgqB,GAAP,MAAiBe,GAAjB,MACA,GAAwC/qB,mBAAS,GAAjD,sBAAOgrB,GAAP,MAAqBC,GAArB,MACA,GAAgCjrB,mBAAS,GAAzC,sBAAOkrB,GAAP,MAAiBC,GAAjB,MACA,GAA8BnrB,mBAAS,GAAvC,sBAAOorB,GAAP,MAAgBC,GAAhB,MACA,GAA4CrrB,mBAAS,GAArD,sBAAOsrB,GAAP,MAAuBC,GAAvB,MAEMC,GAAoB1rB,GAAO,CAC/BZ,OAAQ,OACRC,IAAI,YAEAssB,GAAqB3rB,GAAO,CAChCZ,OAAQ,MACRC,IAAI,WAAD,OAAagE,KAEZuoB,GAAuB5rB,GAAO,CAClCZ,OAAQ,MACRC,IAAI,WAAD,OAAagE,KAEZwoB,GAAyB7rB,GAAO,CACpCZ,OAAQ,MACRC,IAAI,qBAEAysB,GAA2B9rB,GAAO,CACtCZ,OAAQ,OACRC,IAAI,YAEA0sB,GAA2B/rB,GAAO,CACtCZ,OAAQ,MACRC,IAAI,mBAAD,OAAqBgE,KAGpB2oB,GAA0BhsB,GAAO,CACrCZ,OAAQ,OACRC,IAAI,YAOA4sB,GAAkB,yCAAG,6BAAA5tB,EAAA,sEACJwtB,GAAuBvtB,UADnB,OACnBid,EADmB,OAEzBsB,EAAYtB,EAAO9sB,MAFM,2CAAH,qDAKlBy9B,GAAiB,SAACjlB,GACtB4b,EAAkB5b,GAClB+jB,EAAiB,UAAU/jB,EAAOiT,UAAjB,YAA8BjT,EAAOkT,WACtDgS,MAGIA,GAAkB,WACtBj6B,EAAkB,CAAEtC,KAAM,YAmBtBw8B,GAAoB,WACxB,IAAMC,EAAc,GAKpB,OAJAxB,EAASx4B,KAAI,SAAC1C,GAEZ,cADOA,EAAK0T,GACLgpB,EAAY3tB,KAAK/O,MAEnB08B,GAGH7pB,GAAQ,yCAAG,WAAO/T,GAAP,oBAAA4P,EAAA,yDACTxW,EADS,2BAEV4G,GAFU,IAGbo8B,SAAUuB,KACVzB,UACAjmB,KAAM6lB,EAAatZ,GACnBuP,WAAYoC,EAAiBA,EAAevf,GAAK,EACjDlU,KAAMu0B,EACN4I,WAAY7B,EACZ5G,eAAgBkH,KAEd1nB,EAXW,gCAYPsoB,GAAmBrtB,QAAQzW,GAZpB,8CAcU6jC,GAAkBptB,QAAQzW,GAdpC,UAcPoX,EAdO,UAePstB,EAfO,2BAgBRzE,EAAWtjB,SAhBH,IAiBXgoB,UAAWvtB,EAASoE,GACpBqB,KAAM6lB,EAAatZ,GACnBwb,SAAU7J,EAAiBA,EAAevf,GAAK,EAC/C+Y,WAAY,WACZjtB,KAAsB,SAAhBu0B,EAAyB,SAAW,UAC1C7E,YAAY,8GAAD,OAA2B5f,EAASoE,OAGhCohB,OAAO1kB,OAAS,GAC/BwsB,EAAepnB,QAAQpF,OAAS,GAChCwsB,EAAezO,MAAM/d,OAAS,GA3BnB,kCA6BL+rB,GAAyBxtB,QAAQiuB,GA7B5B,QAgCb5B,EAAQt4B,IAAR,yCAAY,WAAO1C,GAAP,gBAAA0O,EAAA,4DACJxW,EADI,aAERsH,KAAM,UACNitB,WAAY,SACZqQ,SAAU98B,EAAK0T,GACfwb,YAAY,8GAAD,OAA2B5f,EAASoE,IAC/CqB,KAAM6lB,EAAatZ,IAChBthB,EAAKkiB,WAGF4S,OAAO1kB,OAAS,GACtBlY,EAAMsd,QAAQpF,OAAS,GACvBlY,EAAMi2B,MAAM/d,OAAS,GAZb,gCAcFisB,GAAwB1tB,QAAQzW,GAd9B,2CAAZ,uDAkBAk4B,YAAW,WACTC,OACC,KApDU,4CAAH,sDAwDRA,GAAW,WACf9hB,EAAQQ,KAAK,+BAGTod,GAAS,yCAAG,iCAAAzd,EAAA,sEACKutB,GAAqBttB,UAD1B,cACVid,EADU,gBAEOwQ,GAAyBztB,UAFhC,OAEVuT,EAFU,OAGV6a,EAAgB,CACpBjI,OAAQ5S,EAASpjB,KAAKg2B,OACtB3G,MAAOjM,EAASpjB,KAAKqvB,MACrB3Y,QAAS0M,EAASpjB,KAAK0W,SAGzBqW,EAAUD,EAAO9sB,MACjBo0B,EAAkBhR,EAASpjB,KAAKwY,QAChC+e,GAAY0G,GACZ9B,EAAWrP,EAAO9sB,KAAKk8B,SACvBG,EAAYvP,EAAO9sB,KAAKo8B,UACxBL,EAAiBjP,EAAO9sB,KAAKiW,MAC7BumB,GAAY1P,EAAO9sB,KAAKk+B,YACxBtB,GAAY9P,EAAO9sB,KAAK28B,UACxBD,GAAgBtZ,EAASpjB,KAAKyY,OAC9BukB,GACElQ,EAAO9sB,KAAKk+B,YACTpR,EAAO9sB,KAAK28B,SAAWvZ,EAASpjB,KAAKyY,OACtCvU,OAAOkf,EAASpjB,KAAKwY,OAAOwW,mBAED,IAA3BlC,EAAO9sB,KAAK+xB,YACdwK,EAAiBzP,EAAO9sB,KAAKo1B,gBAxBf,4CAAH,qDA4BT+I,GAAkB,SAACjC,GACvBC,EAAWD,GACXkC,MAGIA,GAAmB,WACvB36B,EAAkB,CAAEtC,KAAM,YAOtBk9B,GAA0B,WAC9B56B,EAAkB,CAAEtC,KAAM,SAGtBm9B,GAAyB,SAACC,EAAgB3pB,GAC9C,IAAM4pB,EAAS,YAAOtC,GAChBuC,EAAWD,EAAUjO,MAAK,SAACrvB,GAAD,OAAUA,EAAK0T,KAAOA,KAChD0L,EAAQke,EAAU9M,WAAU,SAACxwB,GAAD,OAAUA,EAAK0T,KAAOA,KACxD6pB,EAASrb,SAAWmb,EACpBC,EAAUle,GAASme,EACnBtC,EAAWqC,GAEXH,MA8CIK,GAAkB,SAACC,EAASj+B,GAChC,GAAa,SAATA,EAAiB,CACnB,IAAM4f,EAAQ8b,EAAS1K,WAAU,SAACxwB,GAAD,OAAUA,EAAK0T,KAAO+pB,EAAQ/pB,MACzDgqB,EAAW,YAAOxC,GACxBwC,EAAYte,GAASqe,EACrBtC,EAAYuC,QAEZvC,EAAY,GAAD,mBAAKD,GAAL,CAAeuC,KAE5BE,MAGIA,GAAmB,WACvBp7B,EAAkB,CAAEtC,KAAM,aAWtB29B,GAAsB,SAACp+B,EAAMV,GACjCyD,EAAkB,CAChBlE,MAAO,gEACPD,UACE,cAAC,GAAD,CACEyU,SAAU2qB,GACV1qB,UAAW6qB,GACX9M,WAAYoC,EAAiBA,EAAevf,GAAK,EACjDwa,cAAepvB,EACfS,OAAQC,IAGZS,KAAM,UACN3B,KAAM,IACNE,SAAS,EACTD,oBAAoB,KAkBlBs/B,GAAwB,SAAC/+B,GAC7B,GAAIA,EAaF,OAZoBA,EAAKg2B,OAAOgJ,QAC9B,SAACC,EAAD,OAAMxmB,EAAN,EAAMA,MAAN,OAAkBwmB,EAAI/6B,OAAOuU,KAC7B,GAEmBzY,EAAK0W,QAAQsoB,QAChC,SAACC,EAAD,OAAMxmB,EAAN,EAAMA,MAAN,OAAkBwmB,EAAI/6B,OAAOuU,KAC7B,GAEiBzY,EAAKqvB,MAAM2P,QAC5B,SAACC,EAAD,OAAMxmB,EAAN,EAAMA,MAAN,OAAkBwmB,EAAI/6B,OAAOuU,KAC7B,IA4DN,OAvBAxB,qBAAU,WACRumB,KACI5oB,GACFyY,OAED,IAEHpW,qBAAU,WACRulB,GAAYJ,EAAS4C,QAAO,SAACC,EAAD,UAAqBA,EAArB,EAAMxD,WAA6B,MAC9D,CAACW,IAEJnlB,qBAAU,WACR,IAAMioB,EAAYzD,IAAYv3B,OAAOy4B,IAAYF,IAEjDK,GAAWoC,GACP/K,GACF6I,GAAkBkC,EAAYh7B,OAAM,OAACiwB,QAAD,IAACA,OAAD,EAACA,EAAgBnF,qBAEtD,CAACyM,GAAUkB,GAAUF,KAExBxlB,qBAAU,WACR5C,EAAMyY,KACL,CAACzY,EAAOyY,IAET,sBAAM/Y,SAAUI,EAAaJ,IAA7B,SACIopB,GAAqBzrB,QA6YrB,cAAC,GAAD,IA5YA,cAAC3N,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,GAAItf,GAAI,GAAIP,UAAWJ,EAAQgD,KAA9C,SACE,eAACiZ,GAAA,EAAD,CAAO7b,UAAWJ,EAAQkD,MAA1B,UACE,cAAC5B,EAAA,EAAD,CACElB,UAAWJ,EAAQ/D,MACnB+C,QAAQ,KACRsS,GAAG,aACHtV,UAAU,MAJZ,SA1FJsV,EACkB,QAAhBqgB,EACK,qGAEF,qGAEa,SAAhBA,EACK,qGAEF,uGA0FD,cAAClxB,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAzB,SACE,eAAC,WAAD,WACE,eAACtE,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAIG,MAAO,CAAErB,QAAS,QAA5C,UACE,cAACiC,EAAA,EAAD,CACEZ,MAAO,CAAEoD,WAAY,GAAIe,MAAO,OAChChG,QAAQ,YACR0C,MAAM,UACNH,QA9UG,WACnBpB,EAAkB,CAChBnE,UACE,cAAC,GAAD,CACEk2B,SAAUiI,GACVzpB,UAAW0pB,GACXz8B,OAAQjI,EAASyB,YAAYE,WAGjCwG,KAAM,SACN3B,KAAM,IACNE,SAAS,EACTD,oBAAoB,KA8TR,iFASA,cAACyV,GAAA,EAAD,CACE5S,QAAQ,WACRnB,KAAM,aACN8T,SAzDY,SAAC4C,GAC7B0kB,EAAiB1kB,EAAE2P,OAAOpuB,OAC1Bg7B,KAwDgBh7B,MAAOkjC,EACPn4B,MAAO,CAAEmE,MAAO,OAChB9I,KAAK,aAGT,cAACuE,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAIN,UAAWJ,EAAQiZ,WAA7C,SACE,cAACsI,GAAA,EAAD,CACEC,QAAM,EACN3jB,KAAK,OACL9H,MAAM,oDACN0rB,aAAa,WACbC,QAAQ,iCACRC,YAAY,qBACZC,UAAW,SAACjP,GAAD,OACTA,EAAOA,EAAKyB,OAAO,iBAAmB,IAExCte,MAAO0iC,EACP7mB,SA3XG,SAAC4C,GACpBkkB,EAAiBlkB,IA2XD1T,MAAO,CAAEmE,MAAO,YAGpB,cAACvE,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,WACK+pB,EAASzc,QAAU0qB,GACpB,cAAC9mB,GAAA,EAAD,CACEiZ,QAAM,EACN90B,MAAM,oDACND,MAAO4iC,EACP/mB,SAzFK,SAAC4C,GACxBokB,EAAmBpkB,EAAE2P,OAAOpuB,QAyFVkJ,QAAQ,WACR8S,WAAS,EACT5V,KAAK,QAPP,SASGuuB,EAASnqB,KAAI,SAAC7C,GAAD,OACZ,cAACuX,GAAA,EAAD,CAA6Blf,MAAO2H,EAAO3H,MAA3C,SACG2H,EAAO1H,OADK0H,EAAO3H,cAO9B,cAAC+lC,GAAA,EAAD,CAAQC,QAAM,EAAd,SACE,cAACr7B,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,OAExB,cAACD,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,2BACN8H,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,GAAS,IAChByX,QAASuD,EAAOirB,OAChBlqB,WACEf,EAAOirB,OAASjrB,EAAOirB,OAAOtuB,QAAU,GAE1CqE,WAAS,EACT5V,KAAK,WAIX2B,KAAK,aAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,2BACN8H,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,GAAS,IAChByX,QAASuD,EAAOkrB,YAChBnqB,WACEf,EAAOkrB,YAAclrB,EAAOkrB,YAAYvuB,QAAU,GAEpDqE,WAAS,EACT5V,KAAK,WAIX2B,KAAK,kBAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAIG,MAAO,CAAErB,QAAS,QAA5C,SACE,cAACiC,EAAA,EAAD,CACEZ,MAAO,CAAEoD,WAAY,GAAIe,MAAO,OAChChG,QAAQ,YACR0C,MAAM,UACNH,QA9QS,WACzBpB,EAAkB,CAChBlE,MAAO,4EACPD,UACE,cAAC,GAAD,CACEk2B,SAAU2I,GACVnqB,UAAWoqB,GACXhP,cAAe8M,IAGnB/6B,KAAM,SACN3B,KAAM,IACNE,SAAS,EACTD,oBAAoB,KAkQNk6B,QACE,mBAAGj2B,UAAU,uBAAb,4BAEF67B,aAAW,EARb,2FAaCrD,EAAQ5qB,QACT,cAACvN,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAACub,GAAA,EAAD,UACE,cAACwL,GAAA,EAAD,CAAgB5mB,MAAO,CAAEvB,QAAS,UAAlC,SACE,eAACooB,GAAA,EAAD,CACEtnB,UAAWJ,EAAQimB,MACnB/pB,KAAM,SACN2E,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CAAaie,UAAW+T,KAExB,cAAC3Q,GAAA,EAAD,UACGgR,EAAQt4B,KAAI,SAACunB,GAEZ,OADA5nB,QAAQC,IAAI2nB,GAEV,eAACnD,GAAA,EAAD,CACEqD,OAAK,EACLC,UAAW,EAEXnnB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACqe,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAIM,YAEP,cAACvD,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAIO,WAEP,cAACxD,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAIuO,UAEP,cAACxR,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAIqU,YAEP,cAACtX,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGm8B,GAAsB5T,EAAI/H,YAE7B,eAAC8E,GAAA,EAAD,CACEtlB,QAAQ,OACRuB,MAAO,CAAEgkB,UAAW,QAFtB,UAIE,cAAC/Q,GAAA,EAAD,CACEvS,QAAS,kBAjVjB,SAACsmB,GAC3B1nB,EAAkB,CAChBlE,MAAO,yFACPD,UACE,cAAC,GAAD,CACEyU,SAAUuqB,GACVtqB,UAAWqqB,GACXjF,SAAUjO,EAAIvW,KAGlBzT,KAAM,MACN3B,KAAM,IACNE,SAAS,EACTD,oBAAoB,IAoU2BggC,CAAoBtU,IADrC,SAGE,sBACEhG,MAAM,uBACNhhB,MAAO,CAAEa,MAAO,SAFlB,oBAQF,cAACoS,GAAA,EAAD,CACEvS,QAAS,kBAxXlB,SAAC+P,GAC1BunB,EAAWD,EAAQj7B,QAAO,SAACC,GAAD,OAAUA,EAAK0T,KAAOA,MAuXC8qB,CAAmBvU,EAAIvW,KADxC,SAGE,cAAC,GAAD,WApCCuW,EAAIvW,kBAgD3B,cAAC7Q,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAIG,MAAO,CAAErB,QAAS,QAA5C,SACE,cAACiC,EAAA,EAAD,CAEEZ,MAAO,CAAEoD,WAAY,GAAIe,MAAO,OAChChG,QAAQ,YACR0C,MAAM,UACNH,QAAS,kBAAMi6B,GAAoB,QACnCnF,QACE,mBAAGj2B,UAAU,uBAAb,yBAPJ,+EAaC04B,EAAS9qB,QACV,cAACvN,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAACub,GAAA,EAAD,UACE,cAACwL,GAAA,EAAD,CAAgB5mB,MAAO,CAAEvB,QAAS,UAAlC,SACE,eAACooB,GAAA,EAAD,CACEtnB,UAAWJ,EAAQimB,MACnB/pB,KAAM,SACN2E,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CAAaie,UAAWA,KAExB,cAACoD,GAAA,EAAD,UACGkR,EAASx4B,KAAI,SAACunB,GACb,OACE,eAACnD,GAAA,EAAD,CACEqD,OAAK,EACLC,UAAW,EAEXnnB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACqe,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAIhqB,OAEP,cAAC+mB,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACG5J,EAASS,UAAU0xB,EAAI/pB,QAE1B,cAAC8mB,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAIyO,QAAJ,UACMvmB,GACD8X,EAAIvG,QAFT,YAGQvR,GAAc8X,EAAIyO,UACvBvmB,GAAc8X,EAAIvG,UAExB,cAACsD,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGyQ,GAAc8X,EAAIoP,OAErB,cAACrS,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGyQ,GAAc8X,EAAIoP,IAAMpP,EAAIvG,UAE/B,eAACsD,GAAA,EAAD,CACEtlB,QAAQ,OACRuB,MAAO,CAAEgkB,UAAW,QAFtB,UAIE,cAAC/Q,GAAA,EAAD,CACEvS,QAAS,WA7W3Ci6B,GAAoB,OA6W+C3T,IADnC,SAGE,cAAC,GAAD,MAGF,cAAC/T,GAAA,EAAD,CACEvS,QAAS,kBAxXjB,SAAC+P,GAC3BynB,EAAYD,EAASn7B,QAAO,SAACC,GAAD,OAAUA,EAAK0T,KAAOA,MAwXd+qB,CAAoBxU,EAAIvW,KAF5B,SAKE,cAAC,GAAD,WArCCuW,EAAIvW,kBAiD3B,cAAC7Q,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,6CACN8H,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,GAAS,IAChByX,QAASuD,EAAOgc,YAChBjb,WACEf,EAAOgc,YAAchc,EAAOgc,YAAYrf,QAAU,GAEpDqE,WAAS,EACT8a,WAAS,EACT1wB,KAAK,WAIX2B,KAAK,kBAGT,cAAC,GAAD,CACET,KAAsB,QAAhBu0B,EAAwB,UAAY,SAC1C7F,cAAehM,GACfkU,IAAK+B,EACLtlB,SAzWQ,SAAC/T,GACvB,GAAIA,EAAM,CACR,IAAM4/B,EAAc5/B,EAAKg2B,OAAOgJ,QAC9B,SAACC,EAAD,OAAMxmB,EAAN,EAAMA,MAAN,OAAkBwmB,EAAI/6B,OAAOuU,KAC7B,GAEIonB,EAAe7/B,EAAK0W,QAAQsoB,QAChC,SAACC,EAAD,OAAMxmB,EAAN,EAAMA,MAAN,OAAkBwmB,EAAI/6B,OAAOuU,KAC7B,GAEIqnB,EAAa9/B,EAAKqvB,MAAM2P,QAC5B,SAACC,EAAD,OAAMxmB,EAAN,EAAMA,MAAN,OAAkBwmB,EAAI/6B,OAAOuU,KAC7B,GAEFikB,GAAgBkD,EAAcC,EAAeC,OA6VnC,eAAC/7B,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAGlE,MAAO,CAAE2G,UAAW,IAAhD,UACE,cAAC/G,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,EAAtB,SACE,cAACkR,GAAA,EAAD,CACE2jB,UAAQ,EACRv2B,QAAQ,WACRjJ,MAAM,wCACND,MAAOqiC,GACPrmB,WAAS,EACT5V,KAAK,YAGT,cAACuE,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,EAAtB,SACE,cAACkR,GAAA,EAAD,CACE2jB,UAAQ,EACRv2B,QAAQ,WACRjJ,MAAK,UACa,SAAhB47B,EAAyB,gEAAgB,iEAE3C77B,MAAOqjC,GACPrnB,WAAS,EACT5V,KAAK,YAGT,cAACuE,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,EAAtB,SACE,cAACkR,GAAA,EAAD,CACE5S,QAAQ,WACR2S,SAnXK,SAAC4C,GACxB+kB,GAAY/kB,EAAE2P,OAAOpuB,QAmXHC,MAAM,iCACND,MAAOujC,IAAY,IACnBvnB,WAAS,EACT5V,KAAK,YAGT,cAACuE,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,EAAtB,SACE,cAACkR,GAAA,EAAD,CACE2jB,UAAQ,EACRv2B,QAAQ,WACRjJ,MAAM,oDACND,MAAOyjC,GACPznB,WAAS,EACT5V,KAAK,YAGR20B,GACC,cAACpwB,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,EAAtB,SACE,cAACkR,GAAA,EAAD,CACE2jB,UAAQ,EACRv2B,QAAQ,WACRjJ,MAAM,0DACND,MACE+6B,EAAiBA,EAAenF,iBAAmB,EAErD5Z,WAAS,EACT5V,KAAK,YAIX,cAACuE,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,EAAtB,SACE,cAACkR,GAAA,EAAD,CACE2jB,UAAQ,EACRv2B,QAAQ,WACRjJ,MAAM,gEACND,MAAO2jC,GACP3nB,WAAS,EACT5V,KAAK,eAIX,eAACuE,EAAA,EAAD,CACE7C,MAAI,EACJ8C,GAAI,GACJG,MAAO,CAAErB,QAAS,OAAQC,eAAgB,iBAH5C,UAKE,cAACgC,EAAA,EAAD,CAAQzC,QAAQ,YAAY0C,MAAM,UAAUtE,KAAK,SAAjD,4CAIA,cAACqE,EAAA,EAAD,CACEzC,QAAQ,YACR0C,MAAM,YACNH,QAAS0sB,GAHX,iECz1BlB,IAAMzJ,GAAY,CAChB,CACElT,GAAI,OACJvb,MAAO,+CAET,CACEub,GAAI,SACJvb,MAAO,qDAGT,CAAEub,GAAI,SAAUvb,MAAO,kCACvB,CAAEub,GAAI,OAAQvb,MAAO,kEAErB,CAAEub,GAAI,SAAUvb,MAAO,iBAwKV8/B,GArKKrrB,IAAMupB,YAAW,SAACvqB,EAAOwqB,GAC3C,IAAQlI,EAAkBtiB,EAAlBsiB,cACF9rB,EAAUd,KAChB,EAAwBiP,mBAAS,IAAjC,oBAAOwY,EAAP,KAAaC,EAAb,KACA,EAAsCzY,qBACpC2d,KAAkBA,EAAcwK,SADlC,oBAGMG,GAHN,UAGcC,MACd,EAAsCvoB,mBAAS,IAA/C,oBAAO0oB,EAAP,KAAoBC,EAApB,KACA,EAA0C3oB,mBAAS,GAAnD,oBAAO4oB,EAAP,KAAsBC,EAAtB,KAEA9C,8BAAoBF,GAAK,WACvB,OAAOrN,KAGT,IAAMyQ,EAAyBnpB,GAAO,CACpCZ,OAAQ,MACRC,IAAI,iBAAD,OAAmBkB,GAA2B,OAG7C8oB,EAAkBrpB,GAAO,CAC7BZ,OAAQ,MACRC,IAAI,iBAGAga,EAAO,yCAAG,6BAAAhb,EAAA,sEACY8qB,EAAuB7qB,QAC/C,KACAwqB,GAHY,OACRW,EADQ,OAKd9Q,EAAQ8Q,EAAYh7B,MALN,2CAAH,qDAQPu7B,EAAuB,SAACpQ,GAC5B,IAAMmQ,EAAWvB,EAAM94B,QAAO,SAACC,GAAD,OAAUA,EAAK9H,QAAU+xB,EAAI4P,cAAY,GAEvE,OAAIO,EACKA,EAAS1uB,SAEX,IAGHyuB,EAAc,yCAAG,6BAAAzrB,EAAA,sEACAgrB,EAAgB/qB,UADhB,OACfC,EADe,OAErBsqB,EAAetqB,EAAO9P,MAFD,2CAAH,qDASd+/B,EAAuB,SAACloB,EAAG7X,GAC/B,IAAMggC,EAAO,YAAO/V,GACdgW,EAAyBhW,EAAKsG,MAAK,SAACrvB,GAAD,OAAUA,EAAK0T,KAAO5U,EAAK4U,MAC9D0L,EAAQ2J,EAAKyH,WAAU,SAACxwB,GAAD,OAAUA,EAAK0T,KAAO5U,EAAK4U,MACxDqrB,EAAuBpoB,EAAE2P,OAAOrmB,MAAQ0W,EAAE2P,OAAOpuB,MACjD4mC,EAAQ1f,GAAS2f,EACjB/V,EAAQ8V,IAWV,OARA/oB,qBAAU,WACR2T,MACC,CAACyP,IAEJpjB,qBAAU,WACRokB,MACC,IAGD,qCACE,cAACt3B,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAzB,SACE,cAACtE,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,GAAIvf,GAAI,GAAIG,MAAO,CAAE+H,aAAc,IAAlD,SACE,cAACgJ,GAAA,EAAD,CACEiZ,QAAM,EACN90B,MAAM,iCACND,MAAOihC,EACPplB,SA7BY,SAAC4C,GACrByiB,EAAiBziB,EAAE2P,OAAOpuB,QA6BlBkJ,QAAQ,WACRnB,KAAK,QACLiU,WAAS,EACT5V,KAAK,QARP,SAUG26B,EAAYv2B,KAAI,SAAC7C,GAAD,OACf,cAACuX,GAAA,EAAD,CAA6Blf,MAAO2H,EAAO3H,MAA3C,SACG2H,EAAO1H,OADK0H,EAAO3H,gBAQ9B,cAAC2xB,GAAA,EAAD,CAAgB5mB,MAAO,CAAE6C,OAAQ,IAAK0X,SAAU,QAAhD,SACE,eAACsM,GAAA,EAAD,CAAOtnB,UAAWJ,EAAQimB,MAAO/pB,KAAM,SAAvC,UACE,cAAC,GAAD,CAAa8D,QAASA,EAASwkB,UAAWA,KAE1C,eAACoD,GAAA,EAAD,WACGjB,EAAKrmB,KAAI,SAACunB,GACT,OACE,eAACnD,GAAA,EAAD,CACEqD,OAAK,EACLC,UAAW,EAEXnnB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACqe,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SAA2BuoB,EAAIhqB,OAC/B,cAAC+mB,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGyQ,GAAc8X,EAAIwQ,cAErB,cAACzT,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACE,cAACsS,GAAA,EAAD,CACExU,KAAK,SACL4B,QAAQ,WACRnB,KAAK,SACLgD,MAAO,CAAEmE,MAAO,OAChB9I,KAAK,QACLpG,MAAO+xB,EAAIvG,OACX3P,SAAU,SAAC4C,GAAD,OAAOkoB,EAAqBloB,EAAGsT,QAG7C,cAACjD,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACE,cAACsS,GAAA,EAAD,CACEiZ,QAAM,EACN/0B,MAAO+xB,EAAI/pB,KACX6T,SAAU,SAAC4C,GAAD,OAAOkoB,EAAqBloB,EAAGsT,IACzC7oB,QAAQ,WACRnB,KAAK,OACLgD,MAAO,CAAEmE,MAAO,OAChB9I,KAAK,QAPP,SASG+7B,EAAqBpQ,GAAKvnB,KAAI,SAAC7C,GAAD,OAC7B,cAACuX,GAAA,EAAD,CAA6Blf,MAAO2H,EAAO3H,MAA3C,SACG2H,EAAO1H,OADK0H,EAAO3H,cAM5B,cAAC8uB,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACE,cAACsS,GAAA,EAAD,CACExU,KAAK,SACL4B,QAAQ,WACRnB,KAAK,MACLgD,MAAO,CAAEmE,MAAO,OAChB9I,KAAK,QACLpG,MAAO+xB,EAAIoP,IACXtlB,SAAU,SAAC4C,GAAD,OAAOkoB,EAAqBloB,EAAGsT,UA3CxCA,EAAIvW,QAiDbqV,EAAK3Y,SAAWopB,EAAuBhpB,SACvC,cAACsW,GAAA,EAAD,CAAU7jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACkhB,GAAA,EAAD,CAAW2D,QAAS,EAAG1nB,MAAO,CAAEgkB,UAAW,UAA3C,SACE,cAACvjB,EAAA,EAAD,CAAYtC,QAAQ,KAApB,qLC9KZmK,GAAYhK,aAAW,SAACC,GAAD,MAAY,CACvC4D,KAAM,CACJ2F,OAAQ,UAEVzF,MAAO,CACL8B,MAAO,OACP1F,QAAS,IAEXrD,MAAO,CACLod,cAAe,IAEjBJ,WAAY,CACV,UAAW,CACT3Z,QAAS,cAGb8qB,WAAY,CACV5qB,QAAS,OACTE,WAAY,SACZ2Z,cAAe,EACf2W,WAAY,OAID,SAASxf,KACtB,IAAMosB,EAAczrB,iBAAO,MACrB4kB,EAAa5kB,iBAAO,MACpBnR,EAAUmJ,KACVgD,EAAUyG,cACV+e,EAAc7iB,GAAe,QACnC,EAAiD6B,eAAhCE,GAAjB,EAAQD,QAAR,EAAiBC,cACjB,GADA,EAA+BC,OAA/B,EAAuCC,MACE5C,mBAASqQ,SAAlD,oBAAOga,EAAP,KAAqBC,EAArB,KACA,EAAgCtqB,mBAAS,IAAzC,oBAAO2qB,EAAP,KAAiBC,EAAjB,KACA,EAA0C5qB,mBAAS,KAAnD,oBAAO6qB,EAAP,KAAsBC,EAAtB,KACA,EAA4C9qB,qBAA5C,oBAAuB2iB,GAAvB,WAEA,EAAgC3iB,mBAAS,CACvCukB,OAAQ,GACR3G,MAAO,GACP3Y,QAAS,KAHX,oBAAO0M,EAAP,KAKA,GALA,KAKgC3R,mBAAS,IAAzC,oBAAOgqB,EAAP,KAAiBe,EAAjB,KACA,EAAwC/qB,mBAAS,GAAjD,oBAAOgrB,EAAP,KAAqBC,EAArB,KACA,EAAgCjrB,mBAAS,GAAzC,oBAAOkrB,EAAP,KAAiBC,EAAjB,KACA,EAA8BnrB,mBAAS,GAAvC,oBAAOorB,EAAP,KAAgBC,EAAhB,KACA,EAA4CrrB,mBAAS,GAArD,oBAAOsrB,GAAP,KAEME,IAFN,KAE0B1rB,GAAO,CAC/BZ,OAAQ,OACRC,IAAI,aAGAysB,GAA2B9rB,GAAO,CACtCZ,OAAQ,OACRC,IAAI,YAOA+sB,GAAoB,WACxB,IAAMC,EAAc,GAUpB,OATAsC,EAAYnqB,QAAQnS,KAAI,SAAC1C,GAKvB,GAJAA,EAAKg6B,UAAYh6B,EAAK0T,UACf1T,EAAK0T,UACL1T,EAAKi/B,cACLj/B,EAAK0tB,WACR1tB,EAAKq5B,KAAOr5B,EAAKE,MAAQF,EAAK0jB,OAChC,OAAOgZ,EAAY3tB,KAAK/O,MAGrB08B,GAGH7pB,GAAQ,yCAAG,WAAO/T,GAAP,oBAAA4P,EAAA,6DACTxW,EADS,2BAEV4G,GAFU,IAGbo8B,SAAUuB,KACV1nB,KAAM6lB,EAAatZ,GACnBuP,WAAY,EACZrxB,KAAMu0B,EACN4I,WAAY,CAAC,GACbzI,eAAgBkH,EAAc8D,SARjB,SAUQnD,GAAkBptB,QAAQzW,GAVlC,UAUToX,EAVS,OAWfjN,QAAQC,IAAIgN,EAAUysB,OAChBa,EAZS,2BAaVzE,EAAWtjB,SAbD,IAcbgoB,UAAWvtB,EAASoE,GACpBqB,KAAM6lB,EAAatZ,GACnBwb,SAAU,EACVrQ,WAAY,WACZjtB,KAAsB,SAAhBu0B,EAAyB,SAAW,UAC1C7E,YAAY,8GAAD,OAA2B5f,EAASoE,OAGhCohB,OAAO1kB,OAAS,GAC/BwsB,EAAepnB,QAAQpF,OAAS,GAChCwsB,EAAezO,MAAM/d,OAAS,GAxBjB,gCA0BP+rB,GAAyBxtB,QAAQiuB,GA1B1B,OA6BfxM,YAAW,WACTC,OACC,KA/BY,4CAAH,sDAkCRA,GAAW,WACf9hB,EAAQQ,KAAK,+BAGTyuB,GAAkB,SAACC,EAASj+B,GAChC,GAAa,SAATA,EAAiB,CACnB,IAAM4f,EAAQ8b,EAAS1K,WAAU,SAACxwB,GAAD,OAAUA,EAAK0T,KAAO+pB,EAAQ/pB,MACzDgqB,EAAW,YAAOxC,GACxBwC,EAAYte,GAASqe,EACrBtC,EAAYuC,QAEZvC,EAAY,GAAD,mBAAKD,GAAL,CAAeuC,KAE5BE,MAGIA,GAAmB,WACvBp7B,EAAkB,CAAEtC,KAAM,aAwDtBs8B,GAAiB,SAACjlB,GACtB4b,EAAkB5b,GAClB+jB,EAAiB,UAAU/jB,EAAOiT,UAAjB,YAA8BjT,EAAOkT,WACtDgS,MAGIA,GAAkB,WACtBj6B,EAAkB,CAAEtC,KAAM,YA6B5B,OAVA8V,qBAAU,WACRulB,EAAYJ,EAAS4C,QAAO,SAACC,EAAD,UAAqBA,EAArB,EAAMxD,WAA6B,MAC9D,CAACW,IAEJnlB,qBAAU,WACR,IAAMioB,EAAYzD,GAAYv3B,OAAOy4B,GAAYF,GAEjDK,EAAWoC,KACV,CAACzD,EAAUkB,EAAUF,IAGtB,sBAAM1oB,SAAUI,EAAaJ,IAA7B,SACE,cAAChQ,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,GAAItf,GAAI,GAAIP,UAAWJ,EAAQgD,KAA9C,SACE,eAACiZ,GAAA,EAAD,CAAO7b,UAAWJ,EAAQkD,MAA1B,UACE,cAAC5B,EAAA,EAAD,CACElB,UAAWJ,EAAQ/D,MACnB+C,QAAQ,KACRsS,GAAG,aACHtV,UAAU,MAJZ,SAzEc,SAAhB21B,EACK,qGAEF,uGA+ED,cAAClxB,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAzB,SACE,eAAC,WAAD,WACE,eAACtE,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAIG,MAAO,CAAErB,QAAS,QAA5C,UACE,cAACiC,EAAA,EAAD,CACEZ,MAAO,CAAEoD,WAAY,GAAIe,MAAO,OAChChG,QAAQ,YACR0C,MAAM,UACNH,QA9CK,WACnBpB,EAAkB,CAChBnE,UACE,cAAC,GAAD,CACEk2B,SAAUiI,GACVzpB,UAAW0pB,GACXz8B,OAAQjI,EAASyB,YAAYE,WAGjCwG,KAAM,SACN3B,KAAM,IACNE,SAAS,EACTD,oBAAoB,KA8BV,iFASA,cAACyV,GAAA,EAAD,CACE5S,QAAQ,WACRnB,KAAM,aACN8T,SArEc,SAAC4C,GAC7B0kB,EAAiB1kB,EAAE2P,OAAOpuB,OAC1Bg7B,KAoEch7B,MAAOkjC,EACPn4B,MAAO,CAAEmE,MAAO,OAChB9I,KAAK,aAcT,cAACuE,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAIN,UAAWJ,EAAQiZ,WAA7C,SACE,cAACsI,GAAA,EAAD,CACEC,QAAM,EACN3jB,KAAK,OACL9H,MAAM,oDACN0rB,aAAa,WACbC,QAAQ,iCACRC,YAAY,qBACZC,UAAW,SAACjP,GAAD,OACTA,EAAOA,EAAKyB,OAAO,iBAAmB,IAExCte,MAAO0iC,EACP7mB,SA1NK,SAAC4C,GACpBkkB,EAAiBlkB,IA0NH1T,MAAO,CAAEmE,MAAO,YAIpB,cAACvE,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAAC,GAAD,CACE+P,SAAU2qB,GACV1qB,UAAW6qB,GACX9M,WAAY,EACZuF,IAAK4I,MAIT,cAAC,GAAD,CACEx/B,KAAsB,QAAhBu0B,EAAwB,UAAY,SAC1C7F,cAAehM,EACfkU,IAAK+B,EACLtlB,SA1IU,SAAC/T,GACvB,GAAIA,EAAM,CACR,IAAM4/B,EAAc5/B,EAAKg2B,OAAOgJ,QAC9B,SAACC,EAAD,OAAMxmB,EAAN,EAAMA,MAAN,OAAkBwmB,EAAI/6B,OAAOuU,KAC7B,GAEIonB,EAAe7/B,EAAK0W,QAAQsoB,QAChC,SAACC,EAAD,OAAMxmB,EAAN,EAAMA,MAAN,OAAkBwmB,EAAI/6B,OAAOuU,KAC7B,GAEIqnB,EAAa9/B,EAAKqvB,MAAM2P,QAC5B,SAACC,EAAD,OAAMxmB,EAAN,EAAMA,MAAN,OAAkBwmB,EAAI/6B,OAAOuU,KAC7B,GAEFikB,EAAgBkD,EAAcC,EAAeC,OA8HrC,eAAC/7B,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAGlE,MAAO,CAAE2G,UAAW,IAAhD,UACE,cAAC/G,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,EAAtB,SACE,cAACkR,GAAA,EAAD,CACE2jB,UAAQ,EACRv2B,QAAQ,WACRjJ,MAAM,wCACND,MAAOqiC,EACPrmB,WAAS,EACT5V,KAAK,YAGT,cAACuE,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,EAAtB,SACE,cAACkR,GAAA,EAAD,CACE2jB,UAAQ,EACRv2B,QAAQ,WACRjJ,MAAK,UACa,SAAhB47B,EAAyB,gEAAgB,iEAE3C77B,MAAOqjC,EACPrnB,WAAS,EACT5V,KAAK,YAGT,cAACuE,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,EAAtB,SACE,cAACkR,GAAA,EAAD,CACE5S,QAAQ,WACR2S,SApJO,SAAC4C,GACxB+kB,EAAY/kB,EAAE2P,OAAOpuB,QAoJLC,MAAM,iCACND,MAAOujC,GAAY,IACnBvnB,WAAS,EACT5V,KAAK,YAGT,cAACuE,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,EAAtB,SACE,cAACkR,GAAA,EAAD,CACE2jB,UAAQ,EACRv2B,QAAQ,WACRjJ,MAAM,oDACND,MAAOyjC,EACPznB,WAAS,EACT5V,KAAK,YAIT,cAACuE,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,EAAtB,SACE,cAACkR,GAAA,EAAD,CACE2jB,UAAQ,EACRv2B,QAAQ,WACRjJ,MAAM,gEACND,MAAO2jC,GACP3nB,WAAS,EACT5V,KAAK,eAIX,eAACuE,EAAA,EAAD,CACE7C,MAAI,EACJ8C,GAAI,GACJG,MAAO,CAAErB,QAAS,OAAQC,eAAgB,iBAH5C,UAKE,cAACgC,EAAA,EAAD,CAAQzC,QAAQ,YAAY0C,MAAM,UAAUtE,KAAK,SAAjD,4CAIA,cAACqE,EAAA,EAAD,CACEzC,QAAQ,YACR0C,MAAM,YACNH,QAAS0sB,GAHX,iECpXD9uB,oBAAW,SAACC,GAAD,MAAY,CACpC4D,KAAM,CACJgC,MAAO,QAET9B,MAAO,CACL8B,MAAO,OACP4D,aAAcxJ,EAAM2F,QAAQ,IAE9BkhB,MAAO,CACLhe,SAAU,KAEZe,KAAM,CACJtH,MAAO,QAETuH,QAAS,CACPvH,MAAOtC,EAAMQ,QAAQ+B,QAAQQ,MAE/BrJ,OAAQ,CACNqI,gBAAiB/B,EAAMQ,QAAQkC,QAAQK,MAEzC+G,WAAY,CACVxH,MAAOtC,EAAMQ,QAAQkC,QAAQK,MAE/BpJ,QAAS,CACPoI,gBAAiB/B,EAAMQ,QAAQ0C,OAAOH,MAExCwuB,UAAW,CACTjvB,MAAOtC,EAAMQ,QAAQ0C,OAAOH,MAE9B8W,WAAY,CACV,UAAW,CACT3Z,QAAS,cAGb8qB,WAAY,CACV5qB,QAAS,OACTE,WAAY,SACZ2Z,cAAe,EACf2W,WAAY,OCnBVxL,GAAY,CAChB,CACElT,GAAI,OACJvb,MAAO,qDAGT,CACEub,GAAI,OACJvb,MAAO,4BAET,CAAEub,GAAI,SAAUvb,MAAO,wCAEvB,CAAEub,GAAI,WAGO,SAASyrB,GAAT,GAA0D,IAAlC7K,EAAiC,EAAjCA,SAAUxhB,EAAuB,EAAvBA,UAAWssB,EAAY,EAAZA,SACpDh9B,EAAUd,KAChB,EAA0BiP,mBAAS,OAAnC,oBAAOsM,EAAP,KAAc6L,EAAd,KACA,EAA8BnY,mBAAS,QAAvC,oBAAOmW,EAAP,KAAgBiC,EAAhB,KACA,EAA4BpY,qBAA5B,oBAAOzH,EAAP,KACA,GADA,KACwByH,mBAAS,IAAjC,oBAAOmX,EAAP,KAAakB,EAAb,KACA,EAAgCrY,mBAASzY,EAASE,iBAAlD,oBAAO6wB,EAAP,KAAiBC,EAAjB,KACA,EAAwBvY,mBAAS,IAAjC,oBAAOwY,EAAP,KAAaC,EAAb,KACA,EAA0BzY,mBAAS,GAAnC,oBAAO0Y,EAAP,KAAcC,EAAd,KAoBMiM,EAAiB9kB,GAAO,CAC5BZ,OAAQ,MACRC,IAAI,sBAAD,OAAwBkB,GAA2B,CACpD8W,OACA7K,QACA6J,UACAmC,WACA/f,cAIEugB,EAAe,SAAC3V,GACpB4gB,EAAS5gB,EAAI0rB,IAST1V,EAAO,yCAAG,6BAAAhb,EAAA,sEACSymB,EAAexmB,UADxB,OACR0wB,EADQ,OAEdrW,EAAQqW,EAASvgC,MACjBoqB,EAASmW,EAASpW,OAHJ,2CAAH,qDAUb,OAJAlT,qBAAU,WACR2T,MACC,CAAChC,EAAM7K,EAAO/T,EAAQ+f,IAGvB,sBAAK5lB,MAAO,CAAE2G,WAAY,IAA1B,UACE,cAAC,GAAD,IAGA,cAACigB,GAAA,EAAD,CAAgB5mB,MAAO,CAAEvB,QAAS,UAAlC,SACE,eAACooB,GAAA,EAAD,CACEtnB,UAAWJ,EAAQimB,MACnB/pB,KAAM,SACN2E,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CACEvG,QAASA,EACTya,MAAOA,EACP6J,QAASA,EACTC,cAhEgB,SAAC/lB,EAAOymB,GAEhCqB,EADchC,IAAYW,GAAsB,QAAVxK,EACrB,OAAS,OAC1B8L,EAAWtB,IA8DH0C,SAAUhB,EAAK3Y,OACfwW,UAAWA,KAEb,eAACoD,GAAA,EAAD,WACGjB,EAAKrmB,KAAI,SAACunB,GACT,OACE,eAACnD,GAAA,EAAD,CACEqD,OAAK,EACLC,UAAW,EAEXnnB,MAAO,CAAE0F,aAAc,IACvBhF,QAAS,SAACgT,GAAD,OA3CN,SAACA,EAAGsT,GACI,OAArBtT,EAAE2P,OAAO+D,SACXhB,EAAaY,EAAIvW,IAyCW4W,CAAW3T,EAAGsT,IALhC,UAOE,cAACjD,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SAA2BuoB,EAAIhqB,OAE/B,cAAC+mB,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAIoE,MACH,qBACEprB,MAAO,CAAEmE,MAAO,GAAItB,OAAQ,IAC5B+oB,IAAK5E,EAAIoE,KAAKpuB,KACd0uB,IAAG,UAAK72B,EAASC,YAAd,YAA6BkyB,EAAIoE,KAAKO,UAI/C,cAAC5H,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SAA2BuoB,EAAIvG,SAE/B,cAACsD,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACE,cAACmC,EAAA,EAAD,CACEzC,QAAQ,YACR0C,MAAM,UACNH,QAAS,kBAAM0lB,EAAaY,EAAIvW,KAHlC,+EAlBGuW,EAAIvW,QA6BbqV,EAAK3Y,SAAW+kB,EAAe3kB,SAC/B,cAACsW,GAAA,EAAD,CAAU7jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACkhB,GAAA,EAAD,CAAW2D,QAAS,EAAG1nB,MAAO,CAAEgkB,UAAW,UAA3C,SACE,cAACvjB,EAAA,EAAD,CAAYtC,QAAQ,KAApB,+KASZ,cAAC,GAAD,CACEomB,MAAOyB,EACP1B,iBA/GmB,SAAC3mB,EAAOgqB,GAC/BhC,EAAQgC,IA+GJnD,wBA5G0B,SAAC7mB,GAC/BkoB,EAAYloB,EAAM0lB,OAAOpuB,OACzB0wB,EAAQ,IA2GJlB,KAAMA,EACNC,YAAakB,IAGf,cAAChmB,EAAA,EAAD,CACE7C,MAAI,EACJ8C,GAAI,GACJG,MAAO,CAAErB,QAAS,OAAQC,eAAgB,YAH5C,SAKE,cAACgC,EAAA,EAAD,CAAQzC,QAAQ,YAAY0C,MAAM,YAAYH,QAASmP,EAAvD,uDCtKR,IAAMvH,GAAYhK,aAAW,SAACC,GAAD,MAAY,CACvC4D,KAAM,CACJ2F,OAAQ,UAEVzF,MAAO,CACL8B,MAAO,OACP1F,QAAS,IAEXrD,MAAO,CACLod,cAAe,IAEjBJ,WAAY,CACV,UAAW,CACT3Z,QAAS,cAGb8qB,WAAY,CACV5qB,QAAS,OACTE,WAAY,SACZ2Z,cAAe,EACf2W,WAAY,OAID,SAASkN,GAAT,GAAyD,IAAlCF,EAAiC,EAAjCA,SAAUtsB,EAAuB,EAAvBA,UAAWD,EAAY,EAAZA,SACnDzQ,EAAUmJ,KAChB,EAA4CgF,qBAA5C,oBAAO0iB,EAAP,KAAuBC,EAAvB,KACA,EAAyC3iB,mBAASqQ,QAAlD,oBAAOga,EAAP,KAAqBC,EAArB,KACA,EAA8BtqB,mBAAS,IAAvC,oBAAOgvB,EAAP,KAAgBC,EAAhB,KACA,EAAsCjvB,qBAAtC,oBAAO2e,EAAP,KAAoBuQ,EAApB,KAEMC,EAAoBrvB,GAAO,CAC/BZ,OAAQ,MACRC,IAAK,aAGDiwB,EAAU,yCAAG,6BAAAjxB,EAAA,sEACQgxB,EAAkB/wB,UAD1B,OACXixB,EADW,OAEjBJ,EAAWI,EAAW9gC,MAFL,2CAAH,qDA2BhB,OAJAiX,qBAAU,WACR4pB,MACC,IAGD,cAAC98B,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAzB,SACE,eAAC,WAAD,WACE,cAACtE,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAIG,MAAO,CAAErB,QAAS,QAArC,SACE,cAACgyB,GAAA,EAAD,CACElgB,GAAG,iBACHK,SAlBa,SAAC4C,EAAGze,GACzBg7B,EAAkBh7B,IAkBVuU,QAAS8yB,EACT1L,eAAgB,SAACh0B,GAAD,gBACXA,EAAO0qB,UADI,YACS1qB,EAAO2qB,WAEhCtW,WAAS,EACT5V,KAAK,QACLw1B,YAAa,SAACjjB,GAAD,OACX,cAACmD,GAAA,EAAD,2BAAenD,GAAf,IAAuB1Y,MAAM,0DAAaiJ,QAAQ,mBAIxD,cAACyB,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAIN,UAAWJ,EAAQiZ,WAAtC,SACE,cAACsI,GAAA,EAAD,CACEC,QAAM,EACN3jB,KAAK,OACL9H,MAAM,oDACN0rB,aAAa,WACbC,QAAQ,iCACRC,YAAY,qBACZC,UAAW,SAACjP,GAAD,OAAWA,EAAOA,EAAKyB,OAAO,iBAAmB,IAC5Dte,MAAO0iC,EACP7mB,SAAU8mB,EACV53B,MAAO,CAAEmE,MAAO,YAGpB,cAACvE,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAACkR,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,2BACN8H,KAAM,cACN8T,SA7CkB,SAAC4C,GAC3B8oB,EAAe9oB,EAAE2P,OAAOpuB,QA6ChBA,MAAOg3B,EACPhb,WAAS,EACT5V,KAAK,YAIT,eAACuE,EAAA,EAAD,CACE7C,MAAI,EACJ8C,GAAI,GACJG,MAAO,CAAErB,QAAS,OAAQC,eAAgB,iBAH5C,UAKE,cAACgC,EAAA,EAAD,CAAQzC,QAAQ,YAAY0C,MAAM,UAAUH,QAvErC,WACbkP,EAAS,CACPusB,WACAtC,SAAU7J,EAAevf,GACzB+Y,WAAYwG,EAAezzB,KAC3BuV,KAAM6lB,EAAatZ,GACnB4N,iBAiEI,4CAGA,cAACrrB,EAAA,EAAD,CAAQzC,QAAQ,YAAY0C,MAAM,YAAYH,QAASmP,EAAvD,0DC1FV,IAAM8T,GAAY,CAChB,CACElT,GAAI,QACJvb,MAAO,uEAET,CACEub,GAAI,SACJvb,MAAO,+CAET,CACEub,GAAI,OACJvb,MAAO,4BAET,CAAEub,GAAI,SAAUvb,MAAO,4BACvB,CAAEub,GAAI,SAAUvb,MAAO,+CACvB,CAAEub,GAAI,WAAYvb,MAAO,mCACzB,CAAEub,GAAI,OAAQvb,MAAO,2DACrB,CAAEub,GAAI,WAyUO+U,GAtUE,WACf,IAAMrmB,EAAUd,KAChB,EAA0BiP,mBAAS,OAAnC,oBAAOsM,EAAP,KAAc6L,EAAd,KACA,EAA8BnY,mBAAS,iBAAvC,oBAAOmW,EAAP,KAAgBiC,EAAhB,KACA,EAA4BpY,qBAA5B,oBAAOzH,EAAP,KACA,GADA,KACwByH,mBAAS,IAAjC,oBAAOmX,EAAP,KAAakB,EAAb,KACA,EAAgCrY,mBAASzY,EAASE,iBAAlD,oBAAO6wB,EAAP,KAAiBC,EAAjB,KACA,EAAwBvY,mBAAS,IAAjC,oBAAOwY,EAAP,KAAaC,EAAb,KACA,EAA0BzY,mBAAS,GAAnC,oBAAO0Y,EAAP,KAAcC,EAAd,KACA,EAAsC3Y,mBAAS,OAA/C,oBAAOkkB,EAAP,KAAoBoL,EAApB,KAsBMC,EAAmBzvB,GAAO,CAC9BZ,OAAQ,MACRC,IAAI,UAAD,OAAYkB,GAA2B,CACxC8W,OACA7K,QACA6J,UACAmC,WACA/f,SACA2rB,mBAIEsL,EAAe1vB,GAAO,CAC1BZ,OAAQ,OACRC,IAAI,iBAGAswB,EAAe3vB,GAAO,CAC1BZ,OAAQ,OACRC,IAAI,iBAGAuwB,EAAY,yCAAG,WAAOC,EAAYd,GAAnB,UAAA1wB,EAAA,sEACbsxB,EAAarxB,QAAQ,CAAEywB,WAAUc,eADpB,OAEnBxW,IACAD,EAAmB,CAAExpB,KAAM,SAHR,2CAAH,wDAMZkgC,EAAa,yCAAG,WAAOrhC,GAAP,UAAA4P,EAAA,sEACdqxB,EAAapxB,QAAQ7P,GADP,OAEpB4qB,IACAD,EAAmB,CAAExpB,KAAM,UAHP,2CAAH,sDAMbopB,EAAe,SAACY,EAAKzqB,GACzB,IAAM8pB,EAAQ,CACZ8W,MAAO,WACL79B,EAAkB,CAChBlE,MAAO,sEACPD,UACE,cAAC+gC,GAAD,CACEC,SAAUnV,EAAIvW,GACd4gB,SAAU2L,EACVntB,UAAW,kBAAM2W,EAAmB,CAAExpB,KAAM,YAGhDA,KAAM,OACN3B,KAAM,IACNE,SAAS,EACTD,oBAAoB,KAGxB8hC,MAAO,WACL99B,EAAkB,CAChBlE,MAAO,kCACPD,UACE,cAACkhC,GAAD,CACEF,SAAUnV,EAAIvW,GACdb,SAAUstB,EACVrtB,UAAW,kBAAM2W,EAAmB,CAAExpB,KAAM,aAGhDA,KAAM,QACN3B,KAAM,IACNE,SAAS,EACTD,oBAAoB,KAGxB+hC,OAAQ,WACN7W,EAAmB,CACjBjrB,SAAS,EACTH,MAAO,kLACPK,SAAS,WAAD,8BAAE,uBAAAgQ,EAAA,sDACRuxB,EAAa,CAAEC,WAAY,EAAGd,SAAUnV,EAAIvW,KAC5C+V,EAAmB,CAAExpB,KAAM,WAFnB,2CAAF,kDAAC,GAITA,KAAM,SACN3B,KAAM,IACNC,oBAAoB,MAKtB+qB,EAAM9pB,IACR8pB,EAAM9pB,MAmCJkqB,EAAO,yCAAG,6BAAAhb,EAAA,sEACWoxB,EAAiBnxB,UAD5B,OACR4xB,EADQ,OAEdvX,EAAQuX,EAAWzhC,MACnBoqB,EAASqX,EAAWtX,OAHN,2CAAH,qDAUb,OAJAlT,qBAAU,WACR2T,MACC,CAAChC,EAAM7K,EAAO/T,EAAQ+f,EAAU4L,IAGjC,mCACGjiB,GAAc1a,EAAS0D,gBAAgBglC,YACtC,cAAC5W,GAAA,EAAD,CAAOtlB,UAAU,OAAO1B,IAAI,EAA5B,SACE,8BACGk9B,EAAiBtvB,QAChB,cAAC,GAAD,CAAe+X,UAAW3B,KAE1B,qBAAKpkB,UAAWJ,EAAQgD,KAAxB,SACE,eAACiZ,GAAA,EAAD,CAAO7b,UAAWJ,EAAQkD,MAA1B,UACE,cAAC,GAAD,CACEjH,MAAM,qDAEN0nB,cAAejd,IAEjB,qBAAKtG,UAAWJ,EAAQgvB,IAAxB,SACE,eAACU,GAAA,EAAD,CACE1wB,QAAQ,YACRlJ,MAAOu8B,EACP1gB,SA5DC,SAACjV,EAAM6X,GAC1BkpB,EAAelpB,IA4DGob,eAAe,UACfC,UAAU,UACVC,UAAQ,EANV,UAQE,cAACC,GAAA,EAAD,CACE1sB,KACE,mBACEhD,UAAWkS,aACT,uBACAtS,EAAQiJ,SAHZ,kBASFlT,MAAM,yCACND,MAAM,QAER,cAACg6B,GAAA,EAAD,CACE1sB,KACE,mBACEhD,UAAWkS,aACT,uBACAtS,EAAQkJ,YAHZ,yBASFnT,MAAM,6EACND,MAAM,WAER,cAACg6B,GAAA,EAAD,CACE1sB,KACE,mBACEhD,UAAWkS,aACT,uBACAtS,EAAQ2wB,WAHZ,2BASF56B,MAAM,6EACND,MAAM,iBAIZ,cAAC2xB,GAAA,EAAD,CAAgB5mB,MAAO,CAAEvB,QAAS,UAAlC,SACE,eAACooB,GAAA,EAAD,CACEtnB,UAAWJ,EAAQimB,MACnB/pB,KAAM,SACN2E,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CACEvG,QAASA,EACTya,MAAOA,EACP6J,QAASA,EACTC,cAnOI,SAAC/lB,EAAOymB,GAEhCqB,EADchC,IAAYW,GAAsB,QAAVxK,EACrB,OAAS,OAC1B8L,EAAWtB,IAiOS0C,SAAUhB,EAAK3Y,OACfwW,UAAWA,KAGb,eAACoD,GAAA,EAAD,WACGjB,EAAKrmB,KAAI,SAACunB,GACT,OACE,eAACnD,GAAA,EAAD,CACEqD,OAAK,EACLC,UAAW,EAEXnnB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACqe,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGyQ,GACC,IAAIkE,KACF4T,EAAI5S,eACJd,mBAAmB,YAGzB,cAACyQ,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGyQ,GAAc8X,EAAI2L,gBAErB,cAAC5O,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAIoE,MACH,qBACEprB,MAAO,CAAEmE,MAAO,GAAItB,OAAQ,IAC5B+oB,IAAK5E,EAAIoE,KAAKpuB,KACd0uB,IAAG,UAAK72B,EAASC,YAAd,YAA6BkyB,EAAIoE,KAAKO,UAI/C,cAAC5H,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGyQ,GACCnP,OAAOinB,EAAI1S,OAAOyZ,oBAGtB,cAAChK,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SAA2BuoB,EAAI3S,SAC/B,cAAC0P,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAIwW,eAEP,cAACzZ,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACE,cAAC8V,GAAA,EAAD,CACErf,MAAOL,EAASmD,aAAagvB,EAAIzqB,MACjCgD,UAAWkS,aACTtS,EAAQgJ,KACRhJ,EAAQ6nB,EAAIzqB,YAlKpBV,EAuKoBmrB,EAtK1B,WAAdnrB,EAAKU,MAAqC,YAAhBV,EAAKytB,OAE/B,cAACvF,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACE,cAACkjB,GAAD,CACEnY,QAAS,CACP,CAAEiH,GAAI,QAASrV,MAAO,0FACtB,CAAEqV,GAAI,QAASrV,MAAO,6DAExBwmB,YAAa,SAACrlB,GAAD,OAAU6pB,EAAavqB,EAAMU,QAIzB,WAAdV,EAAKU,MAAqC,UAAhBV,EAAKytB,OAEtC,cAACvF,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACE,cAACkjB,GAAD,CACEnY,QAAS,CAAC,CAAEiH,GAAI,SAAUrV,MAAO,qFACjCwmB,YAAa,SAACrlB,GAAD,OAAU6pB,EAAavqB,EAAMU,QAKzC,cAACwnB,GAAA,EAAD,CAAWtlB,QAAQ,YAuGGuoB,EAAIvW,IA9HZ,IAAC5U,MA2KFiqB,EAAK3Y,SAAW0vB,EAAiBtvB,SACjC,cAACsW,GAAA,EAAD,CAAU7jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACkhB,GAAA,EAAD,CACE2D,QAAS,GACT1nB,MAAO,CAAEgkB,UAAW,UAFtB,SAIE,cAACvjB,EAAA,EAAD,CAAYtC,QAAQ,KAApB,+KASZ,cAAC,GAAD,CACEomB,MAAOyB,EACP1B,iBAtSO,SAAC3mB,EAAOgqB,GAC/BhC,EAAQgC,IAsSQnD,wBAnSc,SAAC7mB,GAC/BkoB,EAAYloB,EAAM0lB,OAAOpuB,OACzB0wB,EAAQ,IAkSQlB,KAAMA,EACNC,YAAakB,gBC3V3Btd,GAAYhK,aAAW,SAACC,GAAD,MAAY,CACvC4D,KAAM,CACJ2F,OAAQ,UAEVzF,MAAO,CACL8B,MAAO,OACP1F,QAAS,IAEXrD,MAAO,CACLod,cAAe,IAEjB+Q,WAAY,CACV5qB,QAAS,OACTE,WAAY,SACZJ,QAAS,OAIE,SAASkR,GAAT,GAAwC,IAAlBsb,EAAiB,EAAjBA,cAC7B9rB,EAAUmJ,KACVgD,EAAUyG,cACVtB,EAAKxC,GAAe,MAC1B,EAA4BX,mBAAS,IAArC,oBAAOqb,EAAP,KAAeC,EAAf,KACA,EAA0Btb,mBAAS,IAAnC,oBAAO4d,EAAP,KAAcC,EAAd,KACA,EAAwCxhB,IAAM2D,SAAS,QAAvD,oBAAOmwB,EAAP,KAAqBC,EAArB,KACA,EAAwCpwB,oBACzB,OAAb2d,QAAa,IAAbA,OAAA,EAAAA,EAAeG,KAAKn2B,QAAS,GAD/B,oBAAOo2B,EAAP,KAAqBC,EAArB,KAGA,EAAiDxb,eAAzCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,OAAQC,EAAvC,EAAuCA,MAEjCytB,EAAiBvwB,GAAO,CAC5BZ,OAAQ,OACRC,IAAI,aAEAmxB,EAAkBxwB,GAAO,CAC7BZ,OAAQ,MACRC,IAAI,YAAD,OAAcgE,KAEbotB,EAAoBzwB,GAAO,CAC/BZ,OAAQ,MACRC,IAAI,YAAD,OAAcgE,KAEb8a,EAAiBne,GAAO,CAC5BZ,OAAQ,MACRC,IAAI,SAOAmD,EAAQ,yCAAG,WAAO/T,GAAP,UAAA4P,EAAA,0DACXgF,EADW,gCAEPmtB,EAAgBlyB,QAAQ7P,GAFjB,6CAIP8hC,EAAejyB,QAAQ7P,GAJhB,OAMfsxB,YAAW,WACTC,MACC,KARY,2CAAH,sDAWRA,EAAW,WACf9hB,EAAQQ,KAAK,mBAGTod,EAAS,yCAAG,6BAAAzd,EAAA,sEACKoyB,EAAkBnyB,UADvB,OACVid,EADU,OAEhBC,EAAUD,EAAO9sB,MACjByvB,EAAgB3C,EAAO9sB,KAAKoxB,QAC5ByQ,EAAgB/U,EAAO9sB,KAAKU,MAJZ,2CAAH,qDAWTivB,EAAQ,yCAAG,6BAAA/f,EAAA,sEACM8f,EAAe7f,UADrB,OACTC,EADS,OAEfwf,EAASxf,EAAO9P,MAFD,2CAAH,qDA0Bd,OAXAiX,qBAAU,WACJrC,GACFyY,IAEFsC,MACC,IAEH1Y,qBAAU,WACR5C,EAAMyY,KACL,CAACzY,EAAOyY,IAGT,sBAAM/Y,SAAUI,GAtBH,SAACnU,GACd,IAAM5G,EAAK,2BACN4G,GADM,IAEToxB,OAAQ5B,EACR9uB,KAAMkhC,EACNpR,WAAYpB,IAEdrb,EAAS3a,MAeT,SACI4oC,EAAkBtwB,QA4PlB,cAAC,GAAD,IA3PA,cAAC3N,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGtf,GAAI,GAAIP,UAAWJ,EAAQgD,KAA7C,SACE,eAACiZ,GAAA,EAAD,CAAO7b,UAAWJ,EAAQkD,MAA1B,UACE,cAAC5B,EAAA,EAAD,CACElB,UAAWJ,EAAQ/D,MACnB+C,QAAQ,KACRsS,GAAG,aACHtV,UAAU,MAJZ,SAMGsV,EAAK,sEAAiB,wEAGzB,cAAC7Q,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAzB,SACE,eAAC,WAAD,WACE,cAACtE,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,GAAIvf,GAAI,GAAvB,SACE,eAAC+vB,GAAA,EAAD,CACE,aAAW,SACX5yB,KAAK,UACL/H,MAAOwoC,EACP3sB,SA7EO,SAACnT,GACxB+/B,EAAgB//B,EAAM0lB,OAAOpuB,QA6Eb+K,MAAO,CACLrB,QAAS,OACT8H,cAAe,MACf7H,eAAgB,gBARpB,UAWE,cAACypB,GAAA,EAAD,CACEpzB,MAAM,OACN8a,QAAS,cAAC8f,GAAA,EAAD,IACT36B,MAAM,6BAER,cAACmzB,GAAA,EAAD,CACEpzB,MAAM,OACN8a,QAAS,cAAC8f,GAAA,EAAD,IACT36B,MAAM,wCAIZ,cAAC0K,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,qBACN8H,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAOjT,KAChBgU,WAAYf,EAAOjT,KAAOiT,EAAOjT,KAAK4P,QAAU,GAChDqE,WAAS,EACT5V,KAAK,WAIX6V,MAAO,CAAEC,SAAUtc,EAASqC,WAAWC,UACvC6F,KAAK,WAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,wCACNqH,KAAK,SACLS,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAOwQ,OAChBzP,WACEf,EAAOwQ,OAASxQ,EAAOwQ,OAAO7T,QAAU,GAE1CqE,WAAS,EACT5V,KAAK,WAIX6V,MAAO,CAAEC,SAAUtc,EAASqC,WAAWC,UACvC6F,KAAK,aAGS,SAAjBygC,GACC,qCACE,cAAC79B,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAACkR,GAAA,EAAD,CACEiZ,QAAM,EACN90B,MAAM,2BACN4b,SA3HD,SAAC4C,GACpB4X,EAAgB5X,EAAE2P,OAAOpuB,QA2HLA,MAAOo2B,EACPltB,QAAQ,WACR8S,WAAS,EACT5V,KAAK,QACL2B,KAAK,OACLyuB,YAAa,CACXtsB,QAAS,CACP6qB,OAAQ7qB,EAAQoqB,aAXtB,SAeG2B,EAAMzrB,KAAI,SAAC7C,GAAD,OACT,eAACuX,GAAA,EAAD,CAA6Blf,MAAO2H,EAAO3H,MAA3C,UACE,qBACEy2B,IAAG,UAAK72B,EAASC,YAAd,YAA6B8H,EAAO+uB,MACvCC,IAAKhvB,EAAO1H,MACZ8K,MAAO,CACLmE,MAAO,GACPtB,OAAQ,GACR3C,aAAc,MACdkD,WAAY,MAGfxG,EAAO1H,QAXK0H,EAAO3H,cAgB5B,cAAC2K,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACEE,WAAS,EACThc,MAAOA,EACPoG,KAAK,QACL2B,KAAMA,EACN9H,MAAM,0DACNiJ,QAAQ,WACR2S,SAAUA,EACVpE,QAASuD,EAAO2a,kBAChB5Z,WACEf,EAAO2a,kBACH3a,EAAO2a,kBAAkBhe,QACzB,MAKZsE,MAAO,CACLE,UAAW,CACTnc,MAAO,GACP2X,QAAS/X,EAASqC,WAAWI,aAE/B8xB,UAAW,CACTn0B,MAAO,GACP2X,QAAS/X,EAASqC,WAAWI,cAGjC0F,KAAK,wBAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACEE,WAAS,EACThc,MAAOA,EACPoG,KAAK,QACL2B,KAAMA,EACN9H,MAAM,0DACNiJ,QAAQ,WACR2S,SAAUA,EACVpE,QAASuD,EAAO4b,cAChB7a,WACEf,EAAO4b,cACH5b,EAAO4b,cAAcjf,QACrB,MAKZ5P,KAAK,oBAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACEE,WAAS,EACThc,MAAOA,EACPoG,KAAK,QACL2B,KAAMA,EACN9H,MAAM,oDACNiJ,QAAQ,WACR2S,SAAUA,EACVpE,QAASuD,EAAO6b,aAChB9a,WACEf,EAAO6b,aACH7b,EAAO6b,aAAalf,QACpB,MAKZ5P,KAAK,sBAKb,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACEgb,WAAS,EACT5tB,QAAQ,WACRjJ,MAAM,6CACN8H,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAOgc,YAChBjb,WACEf,EAAOgc,YAAchc,EAAOgc,YAAYrf,QAAU,GAEpDqE,WAAS,EACT5V,KAAK,WAIX2B,KAAK,kBAGT,eAAC4C,EAAA,EAAD,CACE7C,MAAI,EACJ8C,GAAI,GACJG,MAAO,CAAErB,QAAS,OAAQC,eAAgB,iBAH5C,UAKE,cAACgC,EAAA,EAAD,CAAQzC,QAAQ,YAAY0C,MAAM,UAAUtE,KAAK,SAAjD,4CAGA,cAACqE,EAAA,EAAD,CACEzC,QAAQ,YACR0C,MAAM,YACNH,QAAS0sB,EAHX,iECpWlB,IAAM9kB,GAAYhK,aAAW,SAACC,GAAD,MAAY,CACvC6Z,WAAY,CACV,UAAW,CACT3Z,QAAS,kBAmGAirB,GA/FA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACVxqB,EAAUmJ,KAChB,EAA4CgF,qBAA5C,oBAAO0iB,EAAP,KAAuBC,EAAvB,KACA,EAAiD3iB,mBAASqQ,QAA1D,oBAAOuS,EAAP,KAAyBC,EAAzB,KACA,EAA6C7iB,mBAASqQ,QAAtD,oBAAOyS,EAAP,KAAuBC,EAAvB,KACA,EAAkC/iB,mBAAS,IAA3C,oBAAOgjB,EAAP,KAAkBC,EAAlB,KAEMC,EAAsBpjB,GAAO,CACjCZ,OAAQ,MACRC,IAAK,aAODgkB,EAAe,SAAC/c,EAAGnX,GACV,SAATA,EACF4zB,EAAqBzc,GAErB2c,EAAmB3c,IAIjBgd,EAAY,yCAAG,6BAAAjlB,EAAA,sEACQ+kB,EAAoB9kB,UAD5B,OACb6e,EADa,OAEnBgG,EAAahG,EAAa1uB,MAFP,2CAAH,qDAmBlB,OAJAiX,qBAAU,WACR4d,MACC,IAGD,eAAC9wB,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAGrF,WAAW,SAASmB,MAAO,CAAEvB,QAAS,IAAlE,UACE,cAACmB,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAIG,MAAO,CAAErB,QAAS,QAA5C,SACE,cAACgyB,GAAA,EAAD,CACElgB,GAAG,iBACHK,SApCe,SAAC4C,EAAGze,GACzBg7B,EAAkBh7B,IAoCZuU,QAAS8mB,EACTM,eAAgB,SAACh0B,GAAD,gBAAeA,EAAO0qB,UAAtB,YAAmC1qB,EAAO2qB,WAC1DtW,WAAS,EACT5V,KAAK,QACLw1B,YAAa,SAACjjB,GAAD,OACX,cAACmD,GAAA,EAAD,2BAAenD,GAAf,IAAuB1Y,MAAM,0DAAaiJ,QAAQ,mBAIxD,cAACyB,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAIN,UAAWJ,EAAQiZ,WAA7C,SACE,cAACsI,GAAA,EAAD,CACEC,QAAM,EACN3jB,KAAK,OACL9H,MAAM,8CACN0rB,aAAa,WACbC,QAAQ,iCACRC,YAAY,qBACZC,UAAW,SAACjP,GAAD,OAAWA,EAAOA,EAAKyB,OAAO,iBAAmB,IAC5Dte,MAAOi7B,EACPpf,SAAU,SAAC4C,GAAD,OAAO+c,EAAa/c,EAAG,SACjC1T,MAAO,CAAEmE,MAAO,YAGpB,cAACvE,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAIN,UAAWJ,EAAQiZ,WAA7C,SACE,cAACsI,GAAA,EAAD,CACEC,QAAM,EACN3jB,KAAK,OACL9H,MAAM,8CACN0rB,aAAa,WACbC,QAAQ,iCACRC,YAAY,qBACZC,UAAW,SAACjP,GAAD,OAAWA,EAAOA,EAAKyB,OAAO,iBAAmB,IAC5Dte,MAAOm7B,EACPtf,SAAU,SAAC4C,GAAD,OAAO+c,EAAa/c,EAAG,OACjC1T,MAAO,CAAEmE,MAAO,YAGpB,cAACvE,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAACe,EAAA,EAAD,CAAQzC,QAAQ,YAAY0C,MAAM,UAAUH,QA1DjC,WACS,oBAAbipB,GACTA,EAAS,eAAD,OAEJqG,EAAiBA,EAAevf,GAAK,KAFjC,iBAGGyf,EAAiB7R,GAAGC,cAHvB,eAG2C8R,EAAe/R,GAAGC,cAH7D,OAwDN,8CAIF,cAACpK,GAAA,EAAD,CAASlU,MAAO,CAAEmE,MAAO,cCzEzBwf,GAAY,CAChB,CAAElT,GAAI,cACN,CACEA,GAAI,SACJvb,MAAO,yCAET,CACEub,GAAI,OACJvb,MAAO,kCAET,CAAEub,GAAI,QAASvb,MAAO,4BACtB,CACEub,GAAI,OACJvb,MAAO,uBA8RIswB,GAxRE,WACf,IAAMgM,EAAcvjB,GAAe,QAC7B9O,EAAUd,KAChB,EAA0BiP,mBAAS,OAAnC,oBAAOsM,EAAP,KAAc6L,EAAd,KACA,EAA8BnY,mBAAS,QAAvC,oBAAOmW,EAAP,KAAgBiC,EAAhB,KACA,EAA4BpY,qBAA5B,oBAAOzH,EAAP,KACA,GADA,KACwByH,mBAAS,IAAjC,oBAAOmX,EAAP,KAAakB,EAAb,KACA,EAAgCrY,mBAASzY,EAASE,iBAAlD,oBAAO6wB,EAAP,KAAiBC,EAAjB,KACA,EAAwBvY,mBAAS,IAAjC,oBAAOwY,EAAP,KAAaC,EAAb,KACA,EAA0BzY,mBAAS,GAAnC,oBAAO0Y,EAAP,KAAcC,EAAd,KACA,EAAwB3Y,mBAASkkB,GAAjC,oBAAOj1B,EAAP,KAAakyB,EAAb,KACA,EAA4BnhB,qBAA5B,oBAAOxQ,EAAP,KAAeotB,EAAf,KACM5e,EAAUyG,cAyBVqM,EAAoBhR,GAAO,CAC/BZ,OAAQ,MACRC,IAAK2d,mBAAmB,WAAD,OACVzc,GAA2B,CACpC8W,OACA7K,QACA6J,UACAmC,WACA/f,SACAtJ,OACAO,eAqDA2pB,GAhDmBrZ,GAAO,CAC9BZ,OAAQ,SACRC,IAAI,YA8CO,yCAAG,6BAAAhB,EAAA,sEACY2S,EAAkB1S,UAD9B,OACRoyB,EADQ,OAEd/X,EAAQ+X,EAAYjiC,MACpBoqB,EAAS6X,EAAY9X,OAHP,2CAAH,sDAcb,OARAlT,qBAAU,WACR2T,MACC,CAAChC,EAAM7K,EAAO/T,EAAQ+f,EAAUrpB,EAAMO,IAEzCgW,qBAAU,WACR2b,EAAQ+C,KACP,CAACA,IAGF,mCACGjiB,GAAc1a,EAAS0D,gBAAgB6B,eACtC,cAACusB,GAAA,EAAD,CAAOtlB,UAAU,OAAO1B,IAAI,EAA5B,SACE,8BACGye,EAAkB7Q,QACjB,cAAC,GAAD,CAAe+X,UAAW3B,KAE1B,qBAAKpkB,UAAWJ,EAAQgD,KAAxB,SACE,eAACiZ,GAAA,EAAD,CAAO7b,UAAWJ,EAAQkD,MAA1B,UACE,cAAC,GAAD,CACEjH,MAjCH,WAATmB,EACK,mFACW,YAATA,EACF,mFAEF,kJA6BSimB,MAAgB,QAATjmB,GAjGX,WACZ+O,EAAQQ,KAAR,mCAAyCvP,KAkGzBumB,cAAejd,EACf4c,gBAAiB,cAAC,GAAD,CAAiBkH,SA3CnC,SAAC9tB,GAChBquB,EAAUruB,GACV8pB,EAAQ,QA2CM,qBAAKpmB,UAAWJ,EAAQgvB,IAAxB,SACE,eAACU,GAAA,EAAD,CACE55B,MAAOsH,EACPuU,SArDC,SAAC4C,EAAGze,GACvBw5B,EAAQx5B,GACR0wB,EAAQ,IAoDUmJ,eAAe,UACfC,UAAU,UACVC,UAAQ,EACR7wB,QAAQ,YANV,UAQE,cAAC8wB,GAAA,EAAD,CACE1sB,KACE,mBACEhD,UAAWkS,aACT,uBACAtS,EAAQiJ,SAHZ,kBASFlT,MAAM,iEACND,MAAM,QAER,cAACg6B,GAAA,EAAD,CACE1sB,KACE,mBACEhD,UAAWkS,aACT,uBACAtS,EAAQkJ,YAHZ,yBASFnT,MAAM,0DACND,MAAM,WAER,cAACg6B,GAAA,EAAD,CACE1sB,KACE,mBACEhD,UAAWkS,aACT,uBACAtS,EAAQ2wB,WAHZ,2BASF56B,MAAM,0DACND,MAAM,iBAIZ,cAAC2xB,GAAA,EAAD,CAAgB5mB,MAAO,CAAEvB,QAAS,UAAlC,SACE,eAACooB,GAAA,EAAD,CACEtnB,UAAWJ,EAAQimB,MACnB/pB,KAAM,SACN2E,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CACEvG,QAASA,EACTya,MAAOA,EACP6J,QAASA,EACTC,cApLI,SAAC/lB,EAAOymB,GAEhCqB,EADchC,IAAYW,GAAsB,QAAVxK,EACrB,OAAS,OAC1B8L,EAAWtB,IAkLS0C,SAAUhB,EAAK3Y,OACfwW,UAAWA,KAEb,eAACoD,GAAA,EAAD,WACGjB,EAAKrmB,KAAI,SAACunB,GACT,OACE,eAACnD,GAAA,EAAD,CACEqD,OAAK,EACLC,UAAW,EAEXnnB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACqe,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAI+W,cAEP,cAACha,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SAA2BuoB,EAAI3S,SAC/B,cAAC0P,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGyQ,GACC,IAAIkE,KAAK4T,EAAIlV,MAAMwB,mBACjB,YAIN,cAACyQ,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGyQ,GACCnP,OAAOinB,EAAI1S,OAAOyZ,oBAGtB,cAAChK,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACE,cAAC8V,GAAA,EAAD,CACErf,MAAOL,EAASmD,aAAagvB,EAAIzqB,MACjCgD,UAAWkS,aACTtS,EAAQ5C,KACR4C,EAAQ6nB,EAAIzqB,aAxBbyqB,EAAIvW,QA6CbqV,EAAK3Y,SAAWiR,EAAkB7Q,SAClC,cAACsW,GAAA,EAAD,CAAU7jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACkhB,GAAA,EAAD,CACE2D,QAAS,EACT1nB,MAAO,CAAEgkB,UAAW,UAFtB,SAIE,cAACvjB,EAAA,EAAD,CAAYtC,QAAQ,KAApB,+KASZ,cAAC,GAAD,CACEomB,MAAOyB,EACP1B,iBAtPO,SAAC3mB,EAAOgqB,GAC/BhC,EAAQgC,IAsPQnD,wBAnPc,SAAC7mB,GAC/BkoB,EAAYloB,EAAM0lB,OAAOpuB,OACzB0wB,EAAQ,IAkPQlB,KAAMA,EACNC,YAAakB,gBC1S3Btd,GAAYhK,aAAW,SAACC,GAAD,MAAY,CACvC4D,KAAM,CACJ2F,OAAQ,UAEVzF,MAAO,CACL8B,MAAO,OACP1F,QAAS,IAEXrD,MAAO,CACLod,cAAe,IAEjBJ,WAAY,CACV,UAAW,CACT3Z,QAAS,cAGb8qB,WAAY,CACV5qB,QAAS,OACTE,WAAY,SACZ2Z,cAAe,EACf2W,WAAY,OAID,SAASxf,GAAT,GAAuC,EAAjBsb,cAAkB,IAC/CiK,EAAa5kB,iBAAO,MACpBnR,EAAUmJ,KACVgD,EAAUyG,cACVtB,EAAKxC,GAAe,MAEpBujB,EAAcvjB,GAAe,QAC7B+vB,EAAO/vB,GAAe,QACtB2f,EAAa3f,GAAe,cAClC,EAA4BX,mBAAS,IAArC,oBAAOqb,EAAP,KAAeC,EAAf,KACA,EAA4Btb,mBAAS0wB,GAArC,oBAAOC,EAAP,KAAeC,EAAf,KACA,EAA4C5wB,qBAA5C,oBAAO0iB,EAAP,KAAuBC,EAAvB,KACA,EAAiDngB,eAAzCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,OAAQC,EAAvC,EAAuCA,MACvC,EAAwC5C,mBAASqQ,QAAjD,oBAAOga,EAAP,KAAqBwG,EAArB,KACA,EAAgC7wB,mBAAS,CACvCukB,OAAQ,GACR3G,MAAO,GACP3Y,QAAS,KAHX,oBAAO0M,EAAP,KAAiBmU,EAAjB,KAKMgL,EAAoBhxB,GAAO,CAC/BZ,OAAQ,OACRC,IAAI,YAEA4xB,EAAqBjxB,GAAO,CAChCZ,OAAQ,MACRC,IAAI,WAAD,OAAagE,KAEZ6tB,EAAuBlxB,GAAO,CAClCZ,OAAQ,MACRC,IAAI,WAAD,OAAagE,KAOZ6oB,EAAiB,SAACjlB,GACtB4b,EAAkB5b,GAClBklB,KAGIA,EAAkB,WACtBj6B,EAAkB,CAAEtC,KAAM,YAoBtB4S,EAAQ,yCAAG,WAAO/T,GAAP,gBAAA4P,EAAA,yDACfrM,QAAQC,IAAIxD,GACN5G,EAFS,aAGbsH,KAAMi1B,EACNhI,WAAYwG,EAAexG,WAC3BqQ,SAAU7J,EAAe/6B,MACzBg3B,YAAapwB,EAAKowB,YAClBna,KAAM6lB,EAAatZ,GACnB4f,UACG/I,EAAWtjB,UAEZnB,EAXW,gCAYP4tB,EAAmB3yB,QAAQzW,GAZpB,6CAcPmpC,EAAkB1yB,QAAQzW,GAdnB,OAgBfk4B,YAAW,WACTC,MACC,KAlBY,4CAAH,sDAqBRA,EAAW,WACf,GAAIQ,EACF,OAAOtiB,EAAQQ,KAAR,qCACyB8hB,EADzB,mBAITtiB,EAAQQ,KAAK,+BAGTod,EAAS,yCAAG,yCAAAzd,EAAA,sEACK6yB,EAAqB5yB,UAD1B,OACVid,EADU,OAEhBC,EAAUD,EAAO9sB,MAFD,EAGiC8sB,EAAO9sB,KAAhDwY,EAHQ,EAGRA,OAAQvC,EAHA,EAGAA,KAAMoZ,EAHN,EAGMA,MAAO2G,EAHb,EAGaA,OAAQtf,EAHrB,EAGqBA,QACrC0d,EAAkB5b,GAClB8pB,EAAgBrsB,GAChBshB,EAAY,CAAElI,QAAO2G,SAAQtf,YAC7B2rB,EAAUvV,EAAO9sB,KAAKoiC,QAPN,2CAAH,qDA+Cf,OAVAnrB,qBAAU,WACJrC,GACFyY,MAED,IAEHpW,qBAAU,WACR5C,EAAMyY,KACL,CAACzY,EAAOyY,IAGT,sBAAM/Y,SAAUI,EAAaJ,GAA7B,SACI0uB,EAAqB/wB,QAoHrB,cAAC,GAAD,IAnHA,cAAC3N,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGtf,GAAI,GAAIP,UAAWJ,EAAQgD,KAA7C,SACE,eAACiZ,GAAA,EAAD,CAAO7b,UAAWJ,EAAQkD,MAA1B,UACE,cAAC5B,EAAA,EAAD,CACElB,UAAWJ,EAAQ/D,MACnB+C,QAAQ,KACRsS,GAAG,aACHtV,UAAU,MAJZ,SAzCJsV,EACkB,WAAhB+gB,EACK,kFAEF,kFAEa,WAAhBA,EACK,kFAEF,oFAyCD,cAAC5xB,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAzB,SACE,eAAC,WAAD,WACE,eAACtE,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAIG,MAAO,CAAErB,QAAS,QAA5C,UACE,cAACiC,EAAA,EAAD,CACEZ,MAAO,CAAEoD,WAAY,GAAIe,MAAO,OAChChG,QAAQ,YACR0C,MAAM,UACNH,QAnHG,WACnBpB,EAAkB,CAChBlE,MAAO,0DACPD,UACE,cAAC,GAAD,CACEk2B,SAAUiI,EACVzpB,UAAW0pB,EACXz8B,OAAQjI,EAASyB,YAAYK,SAGjCqG,KAAM,SACN3B,KAAM,IACNE,SAAS,EACTD,oBAAoB,KAkGR,qEASA,cAACyV,GAAA,EAAD,CACE5S,QAAQ,WACRnB,KAAM,aACN/H,MAnDZ+6B,EACEA,EAAe96B,MACX,GAAN,OAAU86B,EAAe96B,OAErB,GAAN,OAAU86B,EAAe1I,UAAzB,YAAsC0I,EAAezI,UAEhD,GA8CSmN,UAAQ,EACR10B,MAAO,CAAEmE,MAAO,OAChB9I,KAAK,aAGT,cAACuE,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAIN,UAAWJ,EAAQiZ,WAA7C,SACE,cAACsI,GAAA,EAAD,CACEC,QAAM,EACN3jB,KAAK,OACL9H,MAAM,oDACN0rB,aAAa,WACbC,QAAQ,iCACRC,YAAY,qBACZC,UAAW,SAACjP,GAAD,OACTA,EAAOA,EAAKyB,OAAO,iBAAmB,IAExCte,MAAO0iC,EACP7mB,SA1JO,SAACgB,GACxBqsB,EAAgBrsB,IA0JA9R,MAAO,CAAEmE,MAAO,YAGpB,cAACvE,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAACwoB,GAAA,EAAD,CACEtY,QACE,cAACuY,GAAA,EAAD,CACEC,QAAS0V,EACTntB,SAtEK,SAAC4C,GAC1BwqB,EAAUxqB,EAAE2P,OAAOkF,UAuEC1nB,MAAM,YAGV3L,MACkB,WAAhBs8B,EAA2B,0DAAe,wDAIhD,cAAC5xB,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,2BACN8H,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAOgc,YAChBjb,WACEf,EAAOgc,YAAchc,EAAOgc,YAAYrf,QAAU,GAEpDqE,WAAS,EACT5V,KAAK,WAIX2B,KAAK,mBAGNyT,GAAMwO,IAAcxO,IACrB,cAAC,GAAD,CACEwa,cAAehM,EACf1iB,KAAMi1B,EACN2B,IAAK+B,IAIT,eAACt1B,EAAA,EAAD,CACE7C,MAAI,EACJ8C,GAAI,GACJG,MAAO,CAAErB,QAAS,OAAQC,eAAgB,iBAH5C,UAKE,cAACgC,EAAA,EAAD,CAAQzC,QAAQ,YAAY0C,MAAM,UAAUtE,KAAK,SAAjD,4CAGA,cAACqE,EAAA,EAAD,CACEzC,QAAQ,YACR0C,MAAM,YACNH,QAAS0sB,EAHX,iECjSH9uB,oBAAW,SAACC,GAAD,MAAY,CACpC4D,KAAM,CACJgC,MAAO,QAET9B,MAAO,CACL8B,MAAO,OACP4D,aAAcxJ,EAAM2F,QAAQ,IAE9BkhB,MAAO,CACLhe,SAAU,SCIRuc,GAAY,CAChB,CACElT,GAAI,SACJvb,MAAO,wCAET,CAAEub,GAAI,OAAQvb,MAAO,4BACrB,CACEub,GAAI,QACJvb,MAAO,mCAII,SAASya,GAAT,GAAyC,IAAnB9T,EAAkB,EAAlBA,KAAM+T,EAAY,EAAZA,SACzC,OACE,eAAChQ,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAGrF,WAAW,SAAvC,YACKhD,EAAKsR,QACN,cAACvN,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAAC+mB,GAAA,EAAD,CAAgB5mB,MAAO,CAAEvB,QAAS,UAAlC,SACE,eAACooB,GAAA,EAAD,CAAOxrB,KAAM,SAAU2E,MAAO,CAAE0F,aAAc,IAA9C,UACE,cAAC,GAAD,CAAaie,UAAWA,KAExB,cAACoD,GAAA,EAAD,UACGlrB,EAAK4D,KAAI,SAACunB,GACT,OACE,eAACnD,GAAA,EAAD,CACEqD,OAAK,EACLC,UAAW,EAEXnnB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACqe,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGyQ,GAAc8X,EAAIuX,SAErB,cAACxa,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SAA2BuoB,EAAI/pB,OAC/B,cAAC8mB,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SAA2BuoB,EAAIwX,UAP1BxX,EAAIvW,gBAgBzB,cAAC7Q,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAACe,EAAA,EAAD,CAAQzC,QAAQ,YAAY0C,MAAM,UAAUH,QAASkP,EAArD,uDCxCR,IAAMtH,GAAYhK,aAAW,SAACC,GAAD,MAAY,CACvC4D,KAAM,CACJ2F,OAAQ,UAEVzF,MAAO,CACL8B,MAAO,OACP1F,QAAS,IAEXrD,MAAO,CACLod,cAAe,IAEjBimB,WAAY,CACV59B,MAAOtC,EAAMQ,QAAQ2N,MAAMpL,MAE7Bo9B,YAAa,CACXv6B,MAAO,YAII,SAASwL,KAAc,IAAD,EAC7BonB,EAAY9oB,GAAe,MAC3B0wB,EAAc1wB,GAAe,eAC7B2oB,EAAa3oB,GAAe,cAC5BinB,EAAa5kB,iBAAO,MACpBhF,EAAUyG,cACV5S,EAAUmJ,KAChB,EAA0BgF,mBAAS,IAAnC,oBAAOsoB,EAAP,KAAcgJ,EAAd,KACA,EAAwCtxB,mBAAQ,UAACsoB,EAAM,UAAP,aAAC,EAAU3gC,OAA3D,oBAAO4pC,EAAP,KAAqBC,EAArB,KACA,EAA4CxxB,mBAAS,GAArD,oBAAOyxB,EAAP,KAAuBC,EAAvB,KACA,EAAsD1xB,mBAAS,GAA/D,oBAAO2xB,EAAP,KAA4BC,EAA5B,KACA,EAA4B5xB,qBAA5B,oBAAOmT,EAAP,KAAe0e,EAAf,KACA,EAA4C7xB,qBAA5C,oBAAO8xB,EAAP,KAAuBC,EAAvB,KACA,EAAsC/xB,qBAAtC,oBAAO2e,EAAP,KAAoBuQ,EAApB,KACA,EAAsClvB,mBAAS,IAA/C,oBAAO0oB,EAAP,KAAoBC,EAApB,KACA,EAAwC3oB,mBAAS,IAAjD,oBAAOgyB,EAAP,KAAqBC,EAArB,KACA,EAAsCjyB,oBAAS,GAA/C,oBAAOkyB,EAAP,KAAoBC,EAApB,KACA,GAAgCnyB,mBAAS,IAAzC,sBAAOsc,GAAP,MAAiBK,GAAjB,MACA,GAAwC3c,mBAAS,GAAjD,sBAAOosB,GAAP,MACA,IADA,MACkCpsB,sBAAlC,sBAAO+sB,GAAP,MAAkBqF,GAAlB,MACA,GAAsCpyB,oBAAS,GAA/C,sBAAOooB,GAAP,MAAoBC,GAApB,MACA,GAA8BroB,qBAA9B,sBAAOmoB,GAAP,MAAgBkK,GAAhB,MACA,GAAgCryB,mBAAS,CACvCukB,OAAQ,GACR3G,MAAO,GACP3Y,QAAS,KAHX,sBAAO0M,GAAP,MAMMwX,IANN,MAMwBrpB,GAAO,CAC7BZ,OAAQ,MACRC,IAAI,kBAGAmzB,GAAoBxyB,GAAO,CAC/BZ,OAAQ,MACRC,IAAK,WAGDozB,GAAoBzyB,GAAO,CAC/BZ,OAAQ,MACRC,IAAI,oBAGAqzB,GAAkB1yB,GAAO,CAC7BZ,OAAQ,OACRC,IAAI,mBAGAszB,GAAmB3yB,GAAO,CAC9BZ,OAAQ,OACRC,IAAI,WAGAuzB,GAA4B5yB,GAAO,CACvCZ,OAAQ,OACRC,IAAI,YAGAwzB,GAAiB,yCAAG,6BAAAx0B,EAAA,sEACHo0B,GAAkBn0B,UADf,OAClBid,EADkB,OAExBsB,GAAYtB,EAAO9sB,MAFK,2CAAH,qDAKjBqkC,GAAgB,yCAAG,iCAAAz0B,EAAA,yDACjB5P,EAAO,CACXskC,cAAepB,EACfqB,mBAAoBnB,EACpBlI,YACAtW,SACAgV,WACAx4B,KAAM4hC,EACN5S,cACAuT,cACAnF,cAGG+E,EAbkB,iCAcEW,GAAiBr0B,QAAQ7P,EAAKw+B,WAdhC,cAcrBgG,EAdqB,OAerBxkC,EAAKo5B,SAAWoL,EAAe5vB,GAfV,SAgBfqvB,GAAgBp0B,QAAQ7P,GAhBT,sCAkBrBA,EAAKo5B,SAAWmK,EAAe3uB,GAlBV,UAmBfqvB,GAAgBp0B,QAAQ7P,GAnBT,eAsBjBykC,EAtBiB,2BAuBlBpL,EAAWtjB,SAvBO,IAwBrBE,KAAM,IAAIsB,KACVymB,SAAUuF,EAAiBA,EAAe3uB,GAAK4vB,EAAe5vB,GAC9D+Y,WAAY,SACZjtB,KAAM,UACN0vB,YAAY,gIA5BS,UA8BjB+T,GAA0Bt0B,QAAQ40B,GA9BjB,QA+BvBnT,YAAW,WACTtd,OACC,KAjCoB,4CAAH,qDAoChB0wB,GAAU,yCAAG,6BAAA90B,EAAA,sEACUm0B,GAAkBl0B,UAD5B,OACX6e,EADW,OAEjBgV,EAAgBhV,EAAa1uB,MAFZ,2CAAH,qDAKViV,GAAW,SAAC4C,EAAGnX,GACnB,IAAM8pB,EAAQ,CACZma,OAAQ,WACNxB,EAAkBtrB,EAAE2P,OAAOpuB,QAE7BkmC,YAAa,WACX+D,EAAuBxrB,EAAE2P,OAAOpuB,QAElCwrB,OAAQ,WACN0e,EAAUzrB,EAAE2P,OAAOpuB,QAErBg3B,YAAa,WACXuQ,EAAe9oB,EAAE2P,OAAOpuB,QAE1BgI,KAAM,WACJ6hC,EAAgBprB,EAAE2P,OAAOpuB,OACzB,IAAM0hC,EAAaf,EAAM94B,QACvB,SAACC,GAAD,OAAUA,EAAK9H,QAAUye,EAAE2P,OAAOpuB,SAClC,GACF0gC,GAAegB,EAAWlB,UAE5BnO,UAAW,WACToY,GAAa,2BAAKrF,IAAN,IAAiB/S,UAAW5T,EAAE2P,OAAOpuB,UAEnDsyB,SAAU,WACRmY,GAAa,2BAAKrF,IAAN,IAAiB9S,SAAU7T,EAAE2P,OAAOpuB,UAElDsgC,QAAS,WACPmK,GAAa,2BAAKrF,IAAN,IAAiB9E,QAAS7hB,EAAE2P,OAAOpuB,UAEjDomC,UAAW,WACTqE,GAAa,2BAAKrF,IAAN,IAAiBgB,UAAW3nB,EAAE2P,OAAOpuB,UAEnDykC,WAAY,WACVgG,GAAa,2BAAKrF,IAAN,IAAiBX,WAAYhmB,EAAE2P,OAAOpuB,UAEpDwgC,QAAS,WACPkK,GAAWjsB,EAAE2P,OAAOpuB,SAGxB,GAAIoxB,EAAM9pB,GACR,OAAO8pB,EAAM9pB,MAIXsT,GAAY,WAChBvE,EAAQQ,KAAK,sBAOTorB,GAAc,yCAAG,6BAAAzrB,EAAA,sEACAgrB,GAAgB/qB,UADhB,OACfC,EADe,OAErBsqB,EAAetqB,EAAO9P,MAFD,2CAAH,qDAyBpB,OAPAiX,qBAAU,YATO,WACf,IAAMqkB,EAAWtB,KAEd/4B,QAAO,SAACC,GAAD,OAAUA,EAAK9H,QAAU2hC,KAAY,GAC3CO,GACFyH,EAASzH,EAAS1uB,UAKpBg4B,GACAR,KACAM,KACArJ,OACC,IAGD,+BACE,cAACt3B,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGtf,GAAI,GAAIP,UAAWJ,EAAQgD,KAA7C,SACE,eAACiZ,GAAA,EAAD,CAAO7b,UAAWJ,EAAQkD,MAA1B,UACE,cAAC5B,EAAA,EAAD,CACElB,UAAWJ,EAAQ/D,MACnB+C,QAAQ,KACRsS,GAAG,aACHtV,UAAU,MAJZ,wDAMawjC,EANb,qEAQA,eAAC/+B,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAzB,UACE,cAACtE,EAAA,EAAD,CAAM7C,MAAI,EAAC+C,GAAI,EAAGD,GAAI,GAAtB,SACE,cAACkR,GAAA,EAAD,CACEiZ,QAAM,EACN90B,MAAM,0DACND,MAAO8pC,EACPjuB,SAAU,SAAC4C,GAAD,OAAO5C,GAAS4C,EAAG,WAC7BvV,QAAQ,WACRnB,KAAK,QACLiU,WAAS,EACT5V,KAAK,QARP,SAUG26B,EAAYv2B,KAAI,SAAC7C,GAAD,OACf,cAACuX,GAAA,EAAD,CAA6Blf,MAAO2H,EAAO3H,MAA3C,SACG2H,EAAO1H,OADK0H,EAAO3H,cAM5B,cAAC2K,EAAA,EAAD,CAAM7C,MAAI,EAAC+C,GAAI,EAAGD,GAAI,GAAtB,SACE,cAACkR,GAAA,EAAD,CACEiZ,QAAM,EACN90B,MAAM,0DACND,MAAOgqC,EACPnuB,SAAU,SAAC4C,GAAD,OAAO5C,GAAS4C,EAAG,gBAC7BvV,QAAQ,WACRnB,KAAK,QACLiU,WAAS,EACT5V,KAAK,QARP,SAUG26B,EAAYv2B,KAAI,SAAC7C,GAAD,OACf,cAACuX,GAAA,EAAD,CAA6Blf,MAAO2H,EAAO3H,MAA3C,SACG2H,EAAO1H,OADK0H,EAAO3H,cAO5B,cAAC2K,EAAA,EAAD,CAAM7C,MAAI,EAAC+C,GAAI,EAAGD,GAAI,GAAtB,SACE,cAACkR,GAAA,EAAD,CACEiZ,QAAM,EACN90B,MAAM,2BACND,MAAO4pC,EACP/tB,SAAU,SAAC4C,GAAD,OAAO5C,GAAS4C,EAAG,SAC7BvV,QAAQ,WACRnB,KAAK,OACLiU,WAAS,EACT5V,KAAK,QARP,SAUGu6B,EAAMn2B,KAAI,SAAC7C,GAAD,OACT,cAACuX,GAAA,EAAD,CAA6Blf,MAAO2H,EAAO3H,MAA3C,SACG2H,EAAO1H,OADK0H,EAAO3H,cAO5B,cAAC2K,EAAA,EAAD,CAAM7C,MAAI,EAAC+C,GAAI,EAAGD,GAAI,GAAtB,SACE,cAACkR,GAAA,EAAD,CACExU,KAAK,SACL4B,QAAQ,WACRjJ,MAAM,iCACN8H,KAAM,SACN8T,SAAU,SAAC4C,GAAD,OAAO5C,GAAS4C,EAAG,WAC7Bze,MAAOwrB,EACPxP,WAAS,EACT5V,KAAK,YAGRq6B,IACC,cAAC91B,EAAA,EAAD,CAAM7C,MAAI,EAAC+C,GAAI,EAAGD,GAAI,GAAtB,SACE,cAACkR,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,uEACN8H,KAAM,UACN8T,SAAU,SAAC4C,GAAD,OAAO5C,GAAS4C,EAAG,YAC7Bze,MAAOwgC,GACPxkB,WAAS,EACT5V,KAAK,QACLkB,KAAK,aAIX,cAACqD,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAACkR,GAAA,EAAD,CACEgb,WAAS,EACT5tB,QAAQ,WACRjJ,MAAM,6CACN8H,KAAM,cACN8T,SAAU,SAAC4C,GAAD,OAAO5C,GAAS4C,EAAG,gBAC7Bze,MAAOg3B,EACPhb,WAAS,EACT5V,KAAK,YAGT,eAACuE,EAAA,EAAD,CACE7C,MAAI,EACJ+C,GAAI,EACJD,GAAI,GACJG,MAAO,CACLrB,QAAS,OACTE,WAAY,SACZkJ,aAAc,IAPlB,UAUE,cAAC4oB,GAAA,EAAD,CACElgB,GAAG,iBACHK,SApJS,SAAC4C,EAAGze,GACzBoqC,EAAkBpqC,IAoJNuU,QAAS81B,EACT1O,eAAgB,SAACh0B,GAAD,gBACXA,EAAO0qB,UADI,YACS1qB,EAAO2qB,WAEhCtW,WAAS,EACT5V,KAAK,QACLw1B,YAAa,SAACjjB,GAAD,OACX,cAACmD,GAAA,EAAD,2BACMnD,GADN,IAEE1Y,MAAM,4EACNiJ,QAAQ,iBAId,cAAC8U,GAAA,EAAD,CACEpS,MAAM,UACNb,MAAO,CAAEkF,YAAa,IACtBxE,QA7JM,WAClB++B,GAAgBD,IAyJN,SAKE,mBAAGjgC,UAAU,uBAAb,SACGigC,EAAc,QAAU,gBAKjC,cAACxoB,GAAA,EAAD,CAAUrX,GAAI6/B,EAAd,SACE,eAAC5/B,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAzB,UACE,cAACtE,EAAA,EAAD,CAAM7C,MAAI,EAAC+C,GAAI,EAAGD,GAAI,GAAtB,SACE,cAACkR,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,0DACN4b,SAAU,SAAC4C,GAAD,OAAO5C,GAAS4C,EAAG,cAC7Bze,MAAK,OAAEolC,SAAF,IAAEA,QAAF,EAAEA,GAAW/S,UAClBrW,WAAS,EACT5V,KAAK,YAGT,cAACuE,EAAA,EAAD,CAAM7C,MAAI,EAAC+C,GAAI,EAAGD,GAAI,GAAtB,SACE,cAACkR,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,2GACN4b,SAAU,SAAC4C,GAAD,OAAO5C,GAAS4C,EAAG,aAC7Bze,MAAK,OAAEolC,SAAF,IAAEA,QAAF,EAAEA,GAAW9S,SAClBtW,WAAS,EACT5V,KAAK,YAIT,cAACuE,EAAA,EAAD,CAAM7C,MAAI,EAAC+C,GAAI,EAAGD,GAAI,GAAtB,SACE,cAACkR,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,oDACN4b,SAAU,SAAC4C,GAAD,OAAO5C,GAAS4C,EAAG,YAC7Bze,MAAK,OAAEolC,SAAF,IAAEA,QAAF,EAAEA,GAAW9E,QAClBtkB,WAAS,EACT5V,KAAK,YAIT,cAACuE,EAAA,EAAD,CAAM7C,MAAI,EAAC+C,GAAI,EAAGD,GAAI,GAAtB,SACE,cAACkR,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,2BACN4b,SAAU,SAAC4C,GAAD,OAAO5C,GAAS4C,EAAG,cAC7Bze,MAAK,OAAEolC,SAAF,IAAEA,QAAF,EAAEA,GAAWgB,UAClBpqB,WAAS,EACT5V,KAAK,YAIT,cAACuE,EAAA,EAAD,CAAM7C,MAAI,EAAC+C,GAAI,EAAGD,GAAI,GAAtB,WACK+pB,GAASzc,QAAUusB,IACpB,cAAC3oB,GAAA,EAAD,CACEiZ,QAAM,EACN90B,MAAM,oDACND,MAAOykC,GACP5oB,SAAU,SAAC4C,GAAD,OAAO5C,GAAS4C,EAAG,eAC7BvV,QAAQ,WACR8S,WAAS,EACT5V,KAAK,QAPP,SASGuuB,GAASnqB,KAAI,SAAC7C,GAAD,OACZ,cAACuX,GAAA,EAAD,CAA6Blf,MAAO2H,EAAO3H,MAA3C,SACG2H,EAAO1H,OADK0H,EAAO3H,cAQ9B,cAAC,GAAD,CACEsH,KAAM,UACN0uB,cAAehM,GACfkU,IAAK+B,SAKX,eAACt1B,EAAA,EAAD,CACE7C,MAAI,EACJ8C,GAAI,GACJG,MAAO,CACLrB,QAAS,OACTC,eAAgB,gBAChB+H,UAAW,IANf,UASE,cAAC/F,EAAA,EAAD,CACEzC,QAAQ,YACR0C,MAAM,UACNH,QAASw/B,GAHX,4CAOA,cAACt/B,EAAA,EAAD,CAAQzC,QAAQ,YAAY0C,MAAM,YAAYH,QAASmP,GAAvD,4DCncZ,IA6Ce6Z,GA7CA,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC1B,EAAoCtc,mBAAS,CAAEsc,SAAU,KAAzD,oBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACE,eAAClqB,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAGrF,WAAW,SAASmB,MAAO,CAAEvB,QAAS,IAAlE,UACE,cAACmB,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,eAACkR,GAAA,EAAD,CACEiZ,QAAM,EACN90B,MAAM,oDACN4b,SAjBa,SAACnT,GAEpBmsB,EAAc,2BAAKD,GAAN,IAAkBD,SAAUjsB,EAAM0lB,OAAOpuB,UAgBhDA,MAAO40B,EAAWD,SAClBzrB,QAAQ,WACR8S,WAAS,EACT5V,KAAK,QAPP,UASGuuB,EAASnqB,KAAI,SAAC7C,GAAD,OACZ,cAACuX,GAAA,EAAD,CAA6Blf,MAAO2H,EAAO3H,MAA3C,SACG2H,EAAO1H,OADK0H,EAAO3H,UAIxB,cAACkf,GAAA,EAAD,CAAsBlf,MAAO,MAA7B,8FAAe,YAKnB,cAAC2K,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAACe,EAAA,EAAD,CAAQzC,QAAQ,YAAY0C,MAAM,UAAUH,QA7BjC,WACS,oBAAbipB,GACTA,EAASE,IA2BP,8CAIF,cAAC3V,GAAA,EAAD,CAASlU,MAAO,CAAEmE,MAAO,cCjBzBwf,GAAY,CAChB,CACElT,GAAI,OACJvb,MAAO,+CAET,CACEub,GAAI,WACJvb,MAAO,qDAGT,CACEub,GAAI,cACJvb,MAAO,kEAET,CAAEub,GAAI,OAAQvb,MAAO,kEAErB,CAAEub,GAAI,WAGO,SAAS+U,KACtB,IAAMrmB,EAAUd,KAChB,EAA0BiP,mBAAS,OAAnC,oBAAOsM,EAAP,KAAc6L,EAAd,KACA,EAA8BnY,mBAAS,QAAvC,oBAAOmW,EAAP,KAAgBiC,EAAhB,KACA,EAA4BpY,qBAA5B,oBAAOzH,EAAP,KACA,GADA,KACwByH,mBAAS,IAAjC,oBAAOmX,EAAP,KAAakB,EAAb,KACA,EAAgCrY,mBAAS,KAAzC,oBAAOsY,EAAP,KAAiBC,EAAjB,KACA,EAAwBvY,mBAAS,IAAjC,oBAAOwY,EAAP,KAAaC,EAAb,KACA,EAA0BzY,mBAAS,GAAnC,oBAAO0Y,EAAP,KAAcC,EAAd,KACA,EAAgC3Y,mBAAS,IAAzC,oBAAOsc,EAAP,KAAiBK,EAAjB,KACA,EAA4B3c,qBAA5B,oBAAOxQ,EAAP,KAAeotB,EAAf,KACM5e,EAAUyG,cAqBV2uB,EAAoBtzB,GAAO,CAC/BZ,OAAQ,MACRC,IAAK2d,mBAAmB,WAAD,OACVzc,GAA2B,CACpC8W,OACA7K,QACA6J,UACAmC,WACA/f,SACA/I,eAKA6jC,EAAqBvzB,GAAO,CAChCZ,OAAQ,MACRC,IAAI,qBAGA0Z,EAAmB/Y,GAAO,CAC9BZ,OAAQ,SACRC,IAAI,YAyCA2Z,GAtCkBhZ,GAAO,CAC7BZ,OAAQ,OACRC,IAAI,mBAGmBW,GAAO,CAC9BZ,OAAQ,OACRC,IAAI,WA+Be,SAACua,EAAKzqB,GACzB,IAAQkU,EAAOuW,EAAPvW,GACF4V,EAAQ,CACZC,KAAM,WACJhb,EAAQQ,KAAR,iCAAuC2E,KAEzC8V,OAAQ,WACNC,EAAmB,CACjBjrB,SAAS,EACTH,MAAO,4KACPK,SAAS,WAAD,8BAAE,uBAAAgQ,EAAA,sEACF0a,EAAiBza,QAAQ,KAAM+E,GAD7B,OAERsV,EAAQD,EAAKhpB,QAAO,SAACC,GAAD,OAAUA,EAAK0T,KAAOA,MAC1C+V,EAAmB,CAAExpB,KAAM,WAHnB,2CAAF,kDAAC,GAKTA,KAAM,SACN3B,KAAM,IACNC,oBAAoB,KAGxBmlB,OAAQ,WACN+F,EAAmB,CACjBprB,MAAO,gGACPD,UACE,cAAC,GAAD,CACEyU,SAAU,WACR4W,EAAmB,CAAExpB,KAAM,YAE7BnB,KAAMmrB,EAAIgV,SAGdh/B,KAAM,SACN3B,KAAM,IACNE,SAAS,EACTD,oBAAoB,KAGxBgvB,YAAa,aAEbsW,SAAU,WACRt1B,EAAQQ,KAAR,mCAC8B2E,EAD9B,wBACgDuW,EAAIhqB,KADpD,uBACuEgqB,EAAI4P,eA4B3EvQ,EAAM9pB,IACR8pB,EAAM9pB,OAcJkqB,EAAO,yCAAG,6BAAAhb,EAAA,sEACYi1B,EAAkBh1B,UAD9B,OACRmrB,EADQ,OAEd9Q,EAAQ8Q,EAAYh7B,MACpBoqB,EAAS4Q,EAAY7Q,OAHP,2CAAH,qDAMPwE,EAAW,yCAAG,6BAAA/e,EAAA,sEACSk1B,EAAmBj1B,UAD5B,OACZm1B,EADY,OAElB5W,EAAY4W,EAAahlC,MAFP,2CAAH,qDAcjB,OATAiX,qBAAU,WACR2T,IACA+D,MACC,CAAC/F,EAAM7K,EAAOgM,EAAU/f,EAAQ/I,IAEnCgW,qBAAU,WACR0X,MACC,IAGD,mCACGjb,GAAc1a,EAAS0D,gBAAgBoB,eACtC,cAACgtB,GAAA,EAAD,CAAOtlB,UAAU,OAAO1B,IAAI,EAA5B,SACE,8BACG+gC,EAAkBnzB,QACjB,cAAC,GAAD,CAAe+X,UAAW3B,KAE1B,qBAAKpkB,UAAWJ,EAAQgD,KAAxB,SACE,eAACiZ,GAAA,EAAD,CAAO7b,UAAWJ,EAAQkD,MAA1B,UACE,cAAC,GAAD,CACEjH,MAAM,iEACNonB,MACEjT,GAAc1a,EAAS0D,gBAAgBqB,eAvL7C,WACZ0R,EAAQQ,KAAK,wBAyLG2W,gBACE,cAAC,GAAD,CACEkH,SA1CL,SAAC9tB,GAChBquB,EAAU,aAAD,OAAcruB,EAAK+tB,SAAnB,OA0CWA,SAAUA,IAId9G,cAAejd,IAEjB,cAAC+gB,GAAA,EAAD,CAAgB5mB,MAAO,CAAEvB,QAAS,UAAlC,SACE,eAACooB,GAAA,EAAD,CACEtnB,UAAWJ,EAAQimB,MACnB/pB,KAAM,SACN2E,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CACEvG,QAASA,EACTya,MAAOA,EACP6J,QAASA,EACTC,cA5NI,SAAC/lB,EAAOymB,GAEhCqB,EADchC,IAAYW,GAAsB,QAAVxK,EACrB,OAAS,OAC1B8L,EAAWtB,IA0NS0C,SAAUhB,EAAK3Y,OACfwW,UAAWA,KAEb,eAACoD,GAAA,EAAD,WACGjB,EAAKrmB,KAAI,SAACunB,GACT,OACE,eAACnD,GAAA,EAAD,CACEqD,OAAK,EACLC,UAAW,EAEXnnB,MAAO,CAAE0F,aAAc,IACvBhF,QAAS,SAACgT,GAAD,OA7ElB,SAACA,EAAGsT,GACI,OAArBtT,EAAE2P,OAAO+D,SACXhB,EAAaY,EAAK,QA2EsBK,CAAW3T,EAAGsT,IALhC,UAOE,cAACjD,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SAA2BuoB,EAAIhqB,OAC/B,cAAC+mB,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAIyD,WAAW8M,KAAK,OAGvB,cAACxT,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAI8Z,cAEP,cAAC/c,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAIyQ,WAGP,cAAC1T,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACE,cAACkjB,GAAD,CACEnY,QAAS,CACP,CAAEiH,GAAI,SAAUrV,MAAO,qDAEvB,CACEqV,GAAI,WACJrV,MAAO,0FAET,CACEqV,GAAI,OACJrV,MAAO,uCACP8mB,QAAS3S,GACP1a,EAAS0D,gBAAgBqB,eAG7B,CACE6W,GAAI,SACJrV,MAAO,qBACP8mB,QAAS3S,GACP1a,EAAS0D,gBAAgBsB,kBAI/B+nB,YAAa,SAACrlB,GAAD,OACX6pB,EAAaY,EAAKzqB,UAzCnByqB,EAAIvW,QAgDbqV,EAAK3Y,SAAWuzB,EAAkBnzB,SAClC,cAACsW,GAAA,EAAD,CAAU7jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACkhB,GAAA,EAAD,CACE2D,QAAS,EACT1nB,MAAO,CAAEgkB,UAAW,UAFtB,SAIE,cAACvjB,EAAA,EAAD,CAAYtC,QAAQ,KAApB,+KASZ,cAAC,GAAD,CACEomB,MAAOyB,EACP1B,iBAjSO,SAAC3mB,EAAOgqB,GAC/BhC,EAAQgC,IAiSQnD,wBA9Rc,SAAC7mB,GAC/BkoB,EAAYloB,EAAM0lB,OAAOpuB,OACzB0wB,EAAQ,IA6RQlB,KAAMA,EACNC,YAAakB,e,kCCjKlBoF,GA7LC,SAAC,GAAmD,IAAjDpb,EAAgD,EAAhDA,SAAUC,EAAsC,EAAtCA,UAAWob,EAA2B,EAA3BA,cAAe2K,EAAY,EAAZA,MACrD,EAAsCtoB,mBAAS,IAA/C,oBAAO0oB,EAAP,KAAoBC,EAApB,KACA,EAAuC3oB,mBACrC2d,EAAgBA,EAAchuB,KAAKhI,MAAQ2gC,EAAM,GAAG3gC,OADtD,oBAAO8rC,EAAP,KAAoBjC,EAApB,KAGA,EAAyCxxB,mBAAS,GAAlD,oBAAO0zB,EAAP,KAAqB7K,EAArB,KACA,EAAsC7oB,qBACpC2d,KAAkBA,EAAcwK,SADlC,oBAAOC,EAAP,KAAoBC,EAApB,KAGA,EAAiD7lB,eAAzCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,OAAQC,EAAvC,EAAuCA,MAEjCumB,EAAkBrpB,GAAO,CAC7BZ,OAAQ,MACRC,IAAI,iBAGAyqB,EAAc,yCAAG,6BAAAzrB,EAAA,sEACAgrB,EAAgB/qB,UADhB,OACfC,EADe,OAErBsqB,EAAetqB,EAAO9P,MAFD,2CAAH,qDAqDpB,OARAiX,qBAAU,WACRokB,MACC,IAEHpkB,qBAAU,WACR5C,EAAM+a,KACL,CAAC/a,EAAO+a,IAGT,eAACrrB,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAzB,UACE,cAACtE,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,mFACN8H,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAOsuB,MAChBvtB,WAAYf,EAAOsuB,MAAQtuB,EAAOsuB,MAAM3xB,QAAU,GAClDqE,WAAS,EACT5V,KAAK,QACLkB,KAAK,YAIX2U,MAAO,CACLC,SAAUtc,EAASqC,WAAWC,SAC9B6X,IAAK,CACH/Z,MAAO,EACP2X,QAAS/X,EAASqC,WAAWK,kBAGjCyF,KAAK,YAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAACkR,GAAA,EAAD,CACEiZ,QAAM,EACN90B,MAAM,2BACND,MAAO8rC,EACPjwB,SA5Ea,SAAC4C,GACpBorB,EAAgBprB,EAAE2P,OAAOpuB,OAEzB,IAAQA,EAAUye,EAAE2P,OAAZpuB,MAEF0hC,EAAaf,EAAM94B,QAAO,SAACC,GAAD,OAAUA,EAAK9H,QAAUA,KAAO,GAChE0gC,EAAegB,EAAWlB,SAE1BqJ,EAAgBprB,EAAE2P,OAAOpuB,QAqEnBkJ,QAAQ,WACRnB,KAAK,OACLiU,WAAS,EACT5V,KAAK,QARP,SAUGu6B,EAAMn2B,KAAI,SAAC7C,GAAD,OACT,cAACuX,GAAA,EAAD,CAA6Blf,MAAO2H,EAAO3H,MAA3C,SACG2H,EAAO1H,OADK0H,EAAO3H,cAM3BygC,GACC,cAAC91B,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,uEACN8H,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAOwlB,QAChBzkB,WAAYf,EAAOwlB,QAAUxlB,EAAOwlB,QAAQ7oB,QAAU,GACtDqE,WAAS,EACT5V,KAAK,QACLkB,KAAK,YAIX2U,MAAO,CACLC,SAAUtc,EAASqC,WAAWC,SAC9B6X,IAAK,CACH/Z,MAAO,EACP2X,QAAS/X,EAASqC,WAAWK,kBAGjCyF,KAAK,cAIX,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAACkR,GAAA,EAAD,CACEiZ,QAAM,EACN90B,MAAM,iCACND,MAAO+rC,EACPlwB,SAjIc,SAAC4C,GACrByiB,EAAiBziB,EAAE2P,OAAOpuB,QAiIpBkJ,QAAQ,WACRnB,KAAK,QACLiU,WAAS,EACT5V,KAAK,QARP,SAUG26B,EAAYv2B,KAAI,SAAC7C,GAAD,OACf,cAACuX,GAAA,EAAD,CAA6Blf,MAAO2H,EAAO3H,MAA3C,SACG2H,EAAO1H,OADK0H,EAAO3H,cAO5B,eAAC2K,EAAA,EAAD,CACE7C,MAAI,EACJ8C,GAAI,GACJG,MAAO,CAAErB,QAAS,OAAQC,eAAgB,iBAH5C,UAKE,cAACgC,EAAA,EAAD,CACEzC,QAAQ,YACR0C,MAAM,UACNtE,KAAK,SACLmE,QAASsP,GAjIF,SAACnU,GACd,IAAMqwB,EAAQC,eAERl3B,EAAK,2BACN4G,GADM,IAEToB,KARK24B,EAAMxJ,MAAK,SAACrvB,GAAD,OAAUA,EAAK9H,QAAU8rC,KASzCvC,MAbKxI,EAAY5J,MAAK,SAACrvB,GAAD,OAAUA,EAAK9H,QAAU+rC,KAc/CvwB,GAAIwa,EAAgBA,EAAcxa,GAAKyb,EACvCG,WAAYpB,IAEdrb,EAAS3a,MAmHL,4CAQA,cAAC2L,EAAA,EAAD,CAAQzC,QAAQ,YAAY0C,MAAM,UAAUH,QAASmP,EAArD,yD,UC5JFvH,GAAYhK,aAAW,SAACC,GAAD,MAAY,CACvC4D,KAAM,CACJ2F,OAAQ,UAEVzF,MAAO,CACL8B,MAAO,OACP1F,QAAS,IAEXrD,MAAO,CACLod,cAAe,IAEjBimB,WAAY,CACV59B,MAAOtC,EAAMQ,QAAQ2N,MAAMpL,MAE7Bo9B,YAAa,CACXv6B,MAAO,YAILwf,GAAY,CAChB,CACElT,GAAI,SACJvb,MAAO,wCAET,CAAEub,GAAI,OAAQvb,MAAO,4BACrB,CACEub,GAAI,QACJvb,MAAO,kCAGT,CAAEub,GAAI,WAGO,SAASd,KACtB,IAAMxQ,EAAUmJ,KACVgD,EAAUyG,cACVtB,EAAKxC,GAAe,MAC1B,EAA4BX,mBAAS,IAArC,oBAAOqb,EAAP,KAAeC,EAAf,KACA,EAA8Btb,mBAAS,IAAvC,oBAAO2zB,EAAP,KAAgBC,EAAhB,KACA,EAAgC5zB,mBAAS,IAAzC,oBAAOsc,EAAP,KAAiBK,EAAjB,KACA,EAAwC3c,mBAAS,QAAjD,oBAAOuxB,EAAP,KAAqBC,EAArB,KACA,EAAgDxxB,mBAAS,CAAC,IAA1D,oBAAO6zB,EAAP,KAAyBC,EAAzB,KACA,EAAiDtxB,eAAzCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,OAAQC,EAAvC,EAAuCA,MACjC0lB,EAAQC,KAERwL,EAAoBj0B,GAAO,CAC/BZ,OAAQ,OACRC,IAAI,YAEA60B,EAAqBl0B,GAAO,CAChCZ,OAAQ,MACRC,IAAI,WAAD,OAAagE,KAEZ8wB,EAAuBn0B,GAAO,CAClCZ,OAAQ,MACRC,IAAI,WAAD,OAAagE,KAEZ+wB,EAA4Bp0B,GAAO,CACvCZ,OAAQ,MACRC,IAAI,qBAGAg1B,EAAiB,SAAC5lC,GACtB,GAAIA,EAAKwwB,SAAU,CACjB,IAAMlQ,EAAQ8kB,EAAQ1T,WAAU,SAACxwB,GAAD,OAAUA,EAAK0T,KAAO5U,EAAK4U,MACrDixB,EAAS,YAAOT,GACtBS,EAAUvlB,GAAStgB,EACnBqlC,EAAWQ,QAEXR,EAAW,GAAD,mBAAKD,GAAL,CAAcplC,KAE1B8lC,KAGIA,EAAkB,WACtBnb,EAAmB,CAAExpB,KAAM,YAGvB0wB,EAAe,SAAC7xB,GACpB,IAAI+5B,EACEuB,EAAWtB,KAEd/4B,QAAO,SAACC,GAAD,OAAUA,EAAK9H,QAAU4pC,KAAc,GAC7C1H,IACFvB,EAAQuB,EAAS1uB,UAEnB+d,EAAmB,CACjBprB,MAAO,mFACPD,UACE,cAAC,GAAD,CACEyU,SAAU6xB,EACV5xB,UAAW8xB,EACX1W,cAAepvB,EACf+5B,MAAOA,IAGX54B,KAAM,SACN3B,KAAM,IACNE,SAAS,EACTD,oBAAoB,KAQlBsmC,EAAgB,SAACX,GACrB,IAAMY,EAAiB,GAUvB,OATAZ,EAAQxhC,KAAI,SAAC1C,GACX,IAAM+kC,EAAY,CAChBvD,MAAOxhC,EAAKwhC,MACZlH,QAASt6B,EAAKyhC,MAAMvpC,MACpBgI,KAAMF,EAAKE,KAAKhI,MAChB8sC,QAAShlC,EAAK04B,SAEhBoM,EAAe/1B,KAAKg2B,MAEfD,GAGHjyB,EAAQ,yCAAG,WAAO/T,GAAP,gBAAA4P,EAAA,yDACTE,EADS,2BAEV9P,GAFU,IAGb4uB,WAAY0W,EACZ1J,SAAUoH,EACV7C,OAAQvrB,EAAKwwB,EAAUW,EAAcX,MAEnCxwB,EAPW,gCAQA6wB,EAAmB51B,QAAQC,GAR3B,+DAUT01B,EAAkB31B,QAAQC,GAVjB,OAWfwhB,YAAW,WACTC,MACC,KAbY,2CAAH,sDAgBRA,EAAW,WACf9hB,EAAQQ,KAAK,sBAGTod,EAAS,yCAAG,6BAAAzd,EAAA,sEACK81B,EAAqB71B,UAD1B,OACVid,EADU,OAEhBC,EAAUD,EAAO9sB,MACjBulC,EAAoBzY,EAAO9sB,KAAK4uB,YAChCqU,EAAgBnW,EAAO9sB,KAAK47B,UAC5ByJ,EAAWvY,EAAO9sB,KAAKmgC,QALP,2CAAH,qDA0BTgG,EAAkB,yCAAG,6BAAAv2B,EAAA,sEACJ+1B,EAA0B91B,UADtB,OACnBC,EADmB,OAEzBse,EAAYte,EAAO9P,MAFM,2CAAH,qDAwBxB,OAXAiX,qBAAU,WACRkvB,IACIvxB,GACFyY,MAED,IAEHpW,qBAAU,WACR5C,EAAMyY,KACL,CAACzY,EAAOyY,IAGT,sBAAM/Y,SAAUI,EAAaJ,GAA7B,SACI2xB,EAAqBh0B,QAwKrB,cAAC,GAAD,IAvKA,cAAC3N,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGtf,GAAI,GAAIP,UAAWJ,EAAQgD,KAA7C,SACE,eAACiZ,GAAA,EAAD,CAAO7b,UAAWJ,EAAQkD,MAA1B,UACE,cAAC5B,EAAA,EAAD,CACElB,UAAWJ,EAAQ/D,MACnB+C,QAAQ,KACRsS,GAAG,aACHtV,UAAU,MAJZ,SAMGsV,EAAK,gEAAgB,kEAGxB,cAAC7Q,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAGrF,WAAW,SAAvC,SACE,eAAC,WAAD,WACE,cAACe,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAIN,UAAWJ,EAAQiZ,WAA7C,SACE,cAAC,KAAD,CACErI,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,sBACN8H,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAOjT,KAChBgU,WAAYf,EAAOjT,KAAOiT,EAAOjT,KAAK4P,QAAU,GAChDqE,WAAS,EACT5V,KAAK,WAIX6V,MAAO,CAAEC,SAAUtc,EAASqC,WAAWC,UACvC6F,KAAK,WAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAACkR,GAAA,EAAD,CACE2jB,SAAUjkB,EACVuZ,QAAM,EACN90B,MAAM,0DACND,MAAO4pC,EACP/tB,SA/DG,SAAC4C,GACpBorB,EAAgBprB,EAAE2P,OAAOpuB,QA+DTkJ,QAAQ,WACRnB,KAAK,WACLiU,WAAS,EACT5V,KAAK,QATP,SAWGu6B,EAAMn2B,KAAI,SAAC7C,GAAD,OACT,cAACuX,GAAA,EAAD,CAA6Blf,MAAO2H,EAAO3H,MAA3C,SACG2H,EAAO1H,OADK0H,EAAO3H,cAM5B,cAAC2K,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,eAACoiC,GAAA,EAAD,CACE5mC,KAAK,QACL8C,QAAQ,WACRoB,UAAWJ,EAAQu/B,YAHrB,UAKE,cAACwD,GAAA,EAAD,CAAYC,QAAQ,6BAApB,+DAGA,cAACC,GAAA,EAAD,CACEltC,MAAM,sDACND,MAAOksC,EACPrwB,SApFK,SAAC4C,GACxB0tB,EAAoB1tB,EAAE2P,OAAOpuB,QAgFb,SAKG20B,EAASnqB,KAAI,SAAC7C,GAAD,OACZ,cAACuX,GAAA,EAAD,CAA6Blf,MAAO2H,EAAO3H,MAA3C,SACG2H,EAAO1H,OADK0H,EAAO3H,iBAO9B,cAAC2K,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAACe,EAAA,EAAD,CACE8zB,SAAUuC,mBAAQ4H,GAClB1gC,QAAQ,YACR0C,MAAM,UACNH,QA5KE,WAClBgtB,KAuKc,uIASCuT,EAAQ9zB,QACT,cAACvN,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAACub,GAAA,EAAD,UACE,cAACwL,GAAA,EAAD,CAAgB5mB,MAAO,CAAEvB,QAAS,UAAlC,SACE,eAACooB,GAAA,EAAD,CACEtnB,UAAWJ,EAAQimB,MACnB/pB,KAAM,SACN2E,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CAAaie,UAAWA,KAExB,cAACoD,GAAA,EAAD,UACGka,EAAQxhC,KAAI,SAACunB,GACZ,OACE,eAACnD,GAAA,EAAD,CACEqD,OAAK,EACLC,UAAW,EAEXnnB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACqe,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAIyO,QAAJ,UACMvmB,GACD8X,EAAIuX,OAFT,YAGQrvB,GAAc8X,EAAIyO,UACvBvmB,GAAc8X,EAAIuX,SAGxB,cAACxa,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAI/pB,KAAK/H,QAGZ,cAAC6uB,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAIwX,MAAMtpC,QAEb,eAAC6uB,GAAA,EAAD,CACEtlB,QAAQ,OACRuB,MAAO,CAAEgkB,UAAW,QAFtB,UAIE,cAAC/Q,GAAA,EAAD,CACEvS,QAAS,WA1K3CgtB,EA0KkE1G,IADlC,SAGE,cAAC,GAAD,MAGF,cAAC/T,GAAA,EAAD,CACEvS,QAAS,kBA7KlB,SAAC+P,GAC1B+V,EAAmB,CACjBjrB,SAAS,EACTH,MAAO,4KACPK,SAAU,WACRylC,EAAWD,EAAQnkC,QAAO,SAACC,GAAD,OAAUA,EAAK0T,KAAOA,MAChD+V,EAAmB,CAAExpB,KAAM,YAE7BA,KAAM,SACN3B,KAAM,IACNC,oBAAoB,IAmK2B+mC,CAAmBrb,EAAIvW,KADxC,SAGE,cAAC,GAAD,WA/BCuW,EAAIvW,kBA2C3B,eAAC7Q,EAAA,EAAD,CACE7C,MAAI,EACJ8C,GAAI,GACJG,MAAO,CAAErB,QAAS,OAAQC,eAAgB,iBAH5C,UAKE,cAACgC,EAAA,EAAD,CAAQzC,QAAQ,YAAY0C,MAAM,UAAUtE,KAAK,SAAjD,4CAGA,cAACqE,EAAA,EAAD,CACEzC,QAAQ,YACR0C,MAAM,YACNH,QAAS0sB,EAHX,iEC1XH9uB,oBAAW,SAACC,GAAD,MAAY,CACpC4D,KAAM,CACJgC,MAAO,QAET9B,MAAO,CACL8B,MAAO,OACP4D,aAAcxJ,EAAM2F,QAAQ,IAE9BkhB,MAAO,CACLhe,SAAU,SCKRuc,GAAY,CAChB,CACElT,GAAI,OACJvb,MAAO,+CAET,CAAEub,GAAI,UAAWvb,MAAO,sDAGX,SAASya,GAAT,GAA4C,IAAtB0nB,EAAqB,EAArBA,QAASznB,EAAY,EAAZA,SAC5C,EAAwBtC,mBAAS,IAAjC,oBAAOzR,EAAP,KAAaymC,EAAb,KACMC,EAAmBn1B,GAAO,CAC9BZ,OAAQ,MACRC,IAAI,iBAAD,OAAmB4qB,KAGlBmL,EAAS,yCAAG,6BAAA/2B,EAAA,sEACK82B,EAAiB72B,UADtB,OACVC,EADU,OAEhB22B,EAAQ32B,EAAO9P,MAFC,2CAAH,qDASf,OAJAiX,qBAAU,WACR0vB,MACC,IAEID,EAAiBh1B,QACtB,cAACwa,GAAA,EAAD,CAAkB/nB,MAAO,CAAEG,SAAU,WAAYE,IAAK,GAAIE,KAAM,MAEhE,eAACX,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAGrF,WAAW,SAAvC,YACKhD,EAAKsR,QACN,cAACvN,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAAC+mB,GAAA,EAAD,CAAgB5mB,MAAO,CAAEvB,QAAS,UAAlC,SACE,eAACooB,GAAA,EAAD,CAAOxrB,KAAM,SAAU2E,MAAO,CAAE0F,aAAc,IAA9C,UACE,cAAC,GAAD,CAAaie,UAAWA,KAExB,cAACoD,GAAA,EAAD,UACGlrB,EAAK4D,KAAI,SAACunB,GACT,OACE,eAACnD,GAAA,EAAD,CACEqD,OAAK,EACLC,UAAW,EAEXnnB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACqe,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SAA2BuoB,EAAIhqB,OAC/B,cAAC+mB,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACE,6BACGuoB,EAAIgV,OAAOv8B,KAAI,SAAC1C,GACf,OACE,+BACE,sBAAMiD,MAAO,CAAE8H,OAAQ,gBAAvB,SACGoH,GAAcnS,EAAKwhC,SAGtB,+BAAOxhC,EAAKE,mBAbjB+pB,EAAIvW,gBA2BzB,cAAC7Q,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAACe,EAAA,EAAD,CAAQzC,QAAQ,YAAY0C,MAAM,UAAUH,QAASkP,EAArD,uDC5DR,IAAM+T,GAAY,CAChB,CACElT,GAAI,OACJvb,MAAO,qDAET,CACEub,GAAI,WACJvb,MAAO,oFAET,CAAEub,GAAI,QAASvb,MAAO,4BAEtB,CAAEub,GAAI,WA2NO+U,GAxNE,WACf,IAAMrmB,EAAUd,KAChB,EAA0BiP,mBAAS,OAAnC,oBAAOsM,EAAP,KAAc6L,EAAd,KACA,EAA8BnY,mBAAS,QAAvC,oBAAOmW,EAAP,KAAgBiC,EAAhB,KACA,EAAwBpY,mBAAS,GAAjC,oBAAOmX,EAAP,KAAakB,EAAb,KACA,EAA4BrY,qBAA5B,oBAAOzH,EAAP,KACA,GADA,KACgCyH,mBAASzY,EAASE,kBAAlD,oBAAO6wB,EAAP,KAAiBC,EAAjB,KACA,EAAwBvY,mBAAS,IAAjC,oBAAOwY,EAAP,KAAaC,EAAb,KACA,EAA0BzY,mBAAS,GAAnC,oBAAO0Y,EAAP,KAAcC,EAAd,KACM3a,EAAUyG,cAyBV0kB,EAAkBrpB,GAAO,CAC7BZ,OAAQ,MACRC,IAAI,SAAD,OAAWkB,GAA2B,CACvC8W,OACA7K,QACA6J,UACAmC,WACA/f,cAIEsgB,EAAmB/Y,GAAO,CAC9BZ,OAAQ,SACRC,IAAI,UAGA2Z,EAAe,SAACY,EAAKzqB,GACzB,IAAM8pB,EAAQ,CACZ5F,OAAQ,WACN+F,EAAmB,CACjBprB,MAAO,gGACPD,UACE,cAAC,GAAD,CACEyU,SAAU,WACR4W,EAAmB,CAAExpB,KAAM,YAE7Bq6B,QAASrQ,EAAIvW,KAGjBzT,KAAM,SACN3B,KAAM,IACNE,SAAS,EACTD,oBAAoB,KAIxBgrB,KAAM,WACJhb,EAAQQ,KAAR,+BAAqCkb,EAAIvW,MAE3C8V,OAAQ,WACNC,EAAmB,CACjBjrB,SAAS,EACTH,MAAO,4KACPK,SAAS,WAAD,8BAAE,uBAAAgQ,EAAA,sEACF0a,EAAiBza,QAAQ,KAAMsb,EAAIvW,IADjC,OAERsV,EAAQD,EAAKhpB,QAAO,SAACC,GAAD,OAAUA,EAAK0T,KAAOuW,EAAIvW,OAC9C+V,EAAmB,CAAExpB,KAAM,WAHnB,2CAAF,kDAAC,GAKTA,KAAM,SACN3B,KAAM,IACNC,oBAAoB,MAItB+qB,EAAM9pB,IACR8pB,EAAM9pB,MAUJkqB,EAAO,yCAAG,6BAAAhb,EAAA,sEACUgrB,EAAgB/qB,UAD1B,OACR+2B,EADQ,OAEd1c,EAAQ0c,EAAU5mC,MAClBoqB,EAASwc,EAAUzc,OAHL,2CAAH,qDAUb,OAJAlT,qBAAU,WACR2T,MACC,CAAChC,EAAM7K,EAAOgM,EAAU/f,IAGzB,mCACG0J,GAAc1a,EAAS0D,gBAAgBuB,aACtC,cAAC6sB,GAAA,EAAD,CAAOtlB,UAAU,OAAO1B,IAAI,EAA5B,SACE,8BACG82B,EAAgBlpB,QACf,cAAC,GAAD,CAAe+X,UAAW3B,KAE1B,qBAAKpkB,UAAWJ,EAAQgD,KAAxB,SACE,eAACiZ,GAAA,EAAD,CAAO7b,UAAWJ,EAAQkD,MAA1B,UACE,cAAC,GAAD,CACEjH,MAAM,uEACNonB,MACEjT,GAAc1a,EAAS0D,gBAAgBwB,aAjG7C,WACZuR,EAAQQ,KAAK,sBAoGGgX,cAAejd,IAEjB,cAAC+gB,GAAA,EAAD,CAAgB5mB,MAAO,CAAEvB,QAAS,UAAlC,SACE,eAACooB,GAAA,EAAD,CACEtnB,UAAWJ,EAAQimB,MACnB/pB,KAAM,SACN2E,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CACEvG,QAASA,EACTya,MAAOA,EACP6J,QAASA,EACTC,cA/HI,SAAC/lB,EAAOymB,GAEhCqB,EADchC,IAAYW,GAAsB,QAAVxK,EACrB,OAAS,OAC1B8L,EAAWtB,IA6HS0C,SAAUhB,EAAK3Y,OACfwW,UAAWA,KAEb,eAACoD,GAAA,EAAD,WACGjB,EAAKrmB,KAAI,SAACunB,GACT,OACE,eAACnD,GAAA,EAAD,CACEqD,OAAK,EACLC,UAAW,EAEXnnB,MAAO,CAAE0F,aAAc,IACvBhF,QAAS,SAACgT,GAAD,OAzDlB,SAACA,EAAGsT,GACI,OAArBtT,EAAE2P,OAAO+D,SACXhB,EAAaY,EAAK,QAuDsBK,CAAW3T,EAAGsT,IALhC,UAOE,cAACjD,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SAA2BuoB,EAAIhqB,OAC/B,cAAC+mB,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAI0b,gBAEP,cAAC3e,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SAA2BuoB,EAAIS,QAE/B,cAAC1D,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACE,cAACkjB,GAAD,CACEnY,QAAS,CACP,CAAEiH,GAAI,SAAUrV,MAAO,wCACvB,CACEqV,GAAI,OACJrV,MAAO,uCACP8mB,QAAS3S,GACP1a,EAAS0D,gBAAgBwB,aAG7B,CACE0W,GAAI,SACJrV,MAAO,qBACP8mB,QAAS3S,GACP1a,EAAS0D,gBAAgByB,gBAI/B4nB,YAAa,SAACrlB,GAAD,OACX6pB,EAAaY,EAAKzqB,UA9BnByqB,EAAIvW,QAqCbqV,EAAK3Y,SAAWspB,EAAgBlpB,SAChC,cAACsW,GAAA,EAAD,CAAU7jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACkhB,GAAA,EAAD,CACE2D,QAAS,EACT1nB,MAAO,CAAEgkB,UAAW,UAFtB,SAIE,cAACvjB,EAAA,EAAD,CAAYtC,QAAQ,KAApB,+KASZ,cAAC,GAAD,CACEomB,MAAOyB,EACP1B,iBAzLO,SAAC3mB,EAAOgqB,GAC/BhC,EAAQgC,IAyLQnD,wBAtLc,SAAC7mB,GAC/BkoB,EAAYloB,EAAM0lB,OAAOpuB,OACzB0wB,EAAQ,IAqLQlB,KAAMA,EACNC,YAAakB,gBClO3Btd,GAAYhK,aAAW,SAACC,GAAD,MAAY,CACvC4D,KAAM,CACJ2F,OAAQ,UAEVzF,MAAO,CACL8B,MAAO,OACP1F,QAAS,IAEXrD,MAAO,CACLod,cAAe,QAIJ,SAAS7I,KACtB,IAAMxQ,EAAUmJ,KACVgD,EAAUyG,cACVtB,EAAKxC,GAAe,MAC1B,EAA4BX,mBAAS,IAArC,oBAAOqb,EAAP,KAAeC,EAAf,KACA,EAAiD9Y,eAAzCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,OAAQC,EAAvC,EAAuCA,MACvC,EAAgC5C,mBAAS,IAAzC,oBAAOsc,EAAP,KAAiBK,EAAjB,KACA,EAA0C3c,mBAAS,GAAnD,oBAAOo1B,EAAP,KAAsBC,EAAtB,KAEMC,EAAkBx1B,GAAO,CAC7BZ,OAAQ,OACRC,IAAI,UAEAo2B,EAAmBz1B,GAAO,CAC9BZ,OAAQ,MACRC,IAAI,SAAD,OAAWgE,KAEVqyB,EAAqB11B,GAAO,CAChCZ,OAAQ,MACRC,IAAI,SAAD,OAAWgE,KAEVsyB,EAAuB31B,GAAO,CAClCZ,OAAQ,MACRC,IAAI,mBAGAmD,EAAQ,yCAAG,WAAO/T,GAAP,gBAAA4P,EAAA,yDACTxW,EADS,2BACI4G,GADJ,IACUmnC,gBAAiBN,KAEtCjyB,EAHW,gCAIAoyB,EAAiBn3B,QAAQzW,GAJzB,+DAMT2tC,EAAgBl3B,QAAQzW,GANf,OAOfk4B,YAAW,WACTC,MACC,KATY,2CAAH,sDAYRA,EAAW,WACf9hB,EAAQQ,KAAK,oBAGTod,EAAS,yCAAG,6BAAAzd,EAAA,sEACKq3B,EAAmBp3B,UADxB,OACVid,EADU,OAEhBC,EAAUD,EAAO9sB,MACjB8mC,EAAiBha,EAAO9sB,KAAK6mC,eAHb,2CAAH,qDAMTO,EAAgB,yCAAG,6BAAAx3B,EAAA,sEACFs3B,EAAqBr3B,UADnB,OACjBid,EADiB,OAEvBsB,EAAYtB,EAAO9sB,MAFI,2CAAH,qDAoBtB,OAXAiX,qBAAU,WACRmwB,IACIxyB,GACFyY,MAED,IAEHpW,qBAAU,WACR5C,EAAMyY,KACL,CAACzY,EAAOyY,IAGT,sBAAM/Y,SAAUI,EAAaJ,GAA7B,SACIkzB,EAAmBv1B,QA8HnB,cAAC,GAAD,IA7HA,cAAC3N,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGtf,GAAI,GAAIP,UAAWJ,EAAQgD,KAA7C,SACE,eAACiZ,GAAA,EAAD,CAAO7b,UAAWJ,EAAQkD,MAA1B,UACE,cAAC5B,EAAA,EAAD,CACElB,UAAWJ,EAAQ/D,MACnB+C,QAAQ,KACRsS,GAAG,aACHtV,UAAU,MAJZ,SAMGsV,EAAK,sEAAiB,wEAGzB,cAAC7Q,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAzB,SACE,eAAC,WAAD,WACE,cAACtE,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,qBACN8H,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAOjT,KAChBgU,WAAYf,EAAOjT,KAAOiT,EAAOjT,KAAK4P,QAAU,GAChDqE,WAAS,EACT5V,KAAK,WAIX6V,MAAO,CAAEC,SAAUtc,EAASqC,WAAWC,UACvC6F,KAAK,WAIT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,WACK+pB,EAASzc,QAAUu1B,GACpB,cAAC3xB,GAAA,EAAD,CACEiZ,QAAM,EACN90B,MAAM,oDACND,MAAOytC,EACP5xB,SA5DK,SAAC4C,GACxBivB,EAAiBjvB,EAAE2P,OAAOpuB,QA4DRkJ,QAAQ,WACRuO,QAASuD,EAAOyyB,cAChB1xB,WACEf,EAAOyyB,cAAgBzyB,EAAOyyB,cAAc91B,QAAU,GAExDqE,WAAS,EACT5V,KAAK,QAXP,SAaGuuB,EAASnqB,KAAI,SAAC7C,GAAD,OACZ,cAACuX,GAAA,EAAD,CAA6Blf,MAAO2H,EAAO3H,MAA3C,SACG2H,EAAO1H,OADK0H,EAAO3H,cAQ9B,cAAC2K,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,2BACN8H,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAOwX,MAChBzW,WAAYf,EAAOwX,MAAQxX,EAAOwX,MAAM7a,QAAU,GAClDqE,WAAS,EACT5V,KAAK,WAIX2B,KAAK,YAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,2BACN8H,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAOoZ,QAChBrY,WACEf,EAAOoZ,QAAUpZ,EAAOoZ,QAAQzc,QAAU,GAE5CqE,WAAS,EACT5V,KAAK,WAIX2B,KAAK,cAGT,eAAC4C,EAAA,EAAD,CACE7C,MAAI,EACJ8C,GAAI,GACJG,MAAO,CAAErB,QAAS,OAAQC,eAAgB,iBAH5C,UAKE,cAACgC,EAAA,EAAD,CAAQzC,QAAQ,YAAY0C,MAAM,UAAUtE,KAAK,SAAjD,4CAGA,cAACqE,EAAA,EAAD,CACEzC,QAAQ,YACR0C,MAAM,YACNH,QAAS0sB,EAHX,iECnNH9uB,oBAAW,SAACC,GAAD,MAAY,CACpC4D,KAAM,CACJgC,MAAO,QAET9B,MAAO,CACL8B,MAAO,OACP4D,aAAcxJ,EAAM2F,QAAQ,IAE9BkhB,MAAO,CACLhe,SAAU,SCPC,SAASuI,GAAT,GAAsD,IAAhC6wB,EAA+B,EAA/BA,OAAQ5wB,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,UACrD,EAA4BvC,mBAAS,IAArC,oBAAOukB,EAAP,KAAeC,EAAf,KACA,EAAsDxkB,mBAAS,GAA/D,oBAAO2xB,EAAP,KAA4BC,EAA5B,KACA,EAA4B5xB,qBAA5B,oBAAOmT,EAAP,KAAe0e,EAAf,KAEMjN,EAAiB9kB,GAAO,CAC5BZ,OAAQ,MACRC,IAAI,oBAWAqE,EAAW,SAAC4C,EAAGnX,GACN,gBAATA,EACF2iC,EAAuBxrB,EAAE2P,OAAOpuB,OAEhCkqC,EAAUzrB,EAAE2P,OAAOpuB,QAIjBk9B,EAAS,yCAAG,+BAAA1mB,EAAA,sEACKymB,EAAexmB,UADpB,OACVC,EADU,OAEVu3B,EAAgBv3B,EAAO9P,KAAKiB,QAAO,SAACC,GAAD,OAAUA,EAAK9H,QAAUurC,KAClE1O,EAAUoR,GAHM,2CAAH,qDAUf,OAJApwB,qBAAU,WACRqf,MACC,IAGD,+BACE,eAACvyB,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAzB,UACE,cAACtE,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAACkR,GAAA,EAAD,CACEiZ,QAAM,EACN90B,MAAM,0DACN4b,SAAU,SAAC4C,GAAD,OAAO5C,EAAS4C,EAAG,gBAC7Bze,MAAOgqC,EACP9gC,QAAQ,WACR8S,WAAS,EACT5V,KAAK,QACL2B,KAAK,OARP,SAUG60B,EAAOpyB,KAAI,SAAC7C,GAAD,OACV,cAACuX,GAAA,EAAD,CAA6Blf,MAAO2H,EAAO3H,MAA3C,SACG2H,EAAO1H,OADK0H,EAAO3H,cAM5B,cAAC2K,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAACkR,GAAA,EAAD,CACExU,KAAK,SACL4B,QAAQ,WACRjJ,MAAM,2BACN8H,KAAM,SACN8T,SAAU,SAAC4C,GAAD,OAAO5C,EAAS4C,EAAG,WAC7Bze,MAAOwrB,EACPxP,WAAS,EACT5V,KAAK,YAGT,eAACuE,EAAA,EAAD,CACE7C,MAAI,EACJ8C,GAAI,GACJG,MAAO,CAAErB,QAAS,OAAQC,eAAgB,iBAH5C,UAKE,cAACgC,EAAA,EAAD,CAAQzC,QAAQ,YAAY0C,MAAM,UAAUH,QAhErC,WACbkP,EAAS,CACPuzB,SAAU3C,EACV4C,cAAenE,EACfxe,YA4DI,4CAGA,cAAC7f,EAAA,EAAD,CAAQzC,QAAQ,YAAY0C,MAAM,YAAYH,QAASmP,EAAvD,0DCrDV,IAAM8T,GAAY,CAChB,CACElT,GAAI,OACJvb,MAAO,qDAET,CACEub,GAAI,OACJvb,MAAO,sBAET,CACEub,GAAI,OACJvb,MAAO,4BAET,CAAEub,GAAI,SAAUvb,MAAO,wCAEvB,CAAEub,GAAI,WA4PO+U,GAzPE,WACf,IAAMrmB,EAAUd,KAChB,EAA0BiP,mBAAS,OAAnC,oBAAOsM,EAAP,KAAc6L,EAAd,KACA,EAA8BnY,mBAAS,QAAvC,oBAAOmW,EAAP,KAAgBiC,EAAhB,KACA,EAA4BpY,qBAA5B,oBAAOzH,EAAP,KACA,GADA,KACwByH,mBAAS,IAAjC,oBAAOmX,EAAP,KAAakB,EAAb,KACA,EAAgCrY,mBAASzY,EAASE,iBAAlD,oBAAO6wB,EAAP,KAAiBC,EAAjB,KACA,EAAwBvY,mBAAS,IAAjC,oBAAOwY,EAAP,KAAaC,EAAb,KACA,EAA0BzY,mBAAS,GAAnC,oBAAO0Y,EAAP,KAAcC,EAAd,KACM3a,EAAUyG,cA0BVmgB,EAAiB9kB,GAAO,CAC5BZ,OAAQ,MACRC,IAAI,YAAD,OAAckB,GAA2B,CAC1C8W,OACA7K,QACA6J,UACAmC,WACA/f,cAIEw9B,EAAoBj2B,GAAO,CAC/BZ,OAAQ,SACRC,IAAI,aAGA62B,EAAmBl2B,GAAO,CAC9BZ,OAAQ,OACRC,IAAK,sBAGD82B,EAAoB,WACxB/c,EAAmB,CAAExpB,KAAM,cAGvBkjC,EAAgB,yCAAG,WAAOrkC,GAAP,UAAA4P,EAAA,sEACjB63B,EAAiB53B,QAAQ7P,GADR,OAEvB4qB,IACA8c,IAHuB,2CAAH,sDAMhBnd,EAAe,SAACY,EAAKzqB,GACzB,IAAM8pB,EAAQ,CACZiE,YAAa,WACXhf,EAAQQ,KAAR,uCAA6Ckb,EAAIvW,MAEnD6V,KAAM,WACJhb,EAAQQ,KAAR,8BAAoCkb,EAAIvW,MAE1C8V,OAAQ,WACNC,EAAmB,CACjBjrB,SAAS,EACTH,MAAO,4KACPK,SAAS,WAAD,8BAAE,uBAAAgQ,EAAA,sEACF43B,EAAkB33B,QAAQ,KAAMsb,EAAIvW,IADlC,OAERsV,EAAQD,EAAKhpB,QAAO,SAACC,GAAD,OAAUA,EAAK0T,KAAOuW,EAAIvW,OAC9C+V,EAAmB,CAAExpB,KAAM,WAHnB,2CAAF,kDAAC,GAKTA,KAAM,SACN3B,KAAM,IACNC,oBAAoB,KAGxBslC,SAAU,WACRpa,EAAmB,CACjBprB,MAAO,sGACPD,UACE,cAAC,GAAD,CACEyU,SAAUswB,EACVrwB,UAAW0zB,EACX/C,OAAQxZ,EAAIvW,KAGhBzT,KAAM,WACN3B,KAAM,IACNE,SAAS,EACTD,oBAAoB,MAItB+qB,EAAM9pB,IACR8pB,EAAM9pB,MAUJkqB,EAAO,yCAAG,6BAAAhb,EAAA,sEACSymB,EAAexmB,UADxB,OACR0wB,EADQ,OAEdrW,EAAQqW,EAASvgC,MACjBoqB,EAASmW,EAASpW,OAHJ,2CAAH,qDAUb,OAJAlT,qBAAU,WACR2T,MACC,CAAChC,EAAM7K,EAAO/T,EAAQ+f,IAGvB,mCACGrW,GAAc1a,EAAS0D,gBAAgBirC,iBACtC,cAAC7c,GAAA,EAAD,CAAOtlB,UAAU,OAAO1B,IAAI,EAA5B,SACE,8BACGuyB,EAAe3kB,QACd,cAAC,GAAD,CAAe+X,UAAW3B,KAE1B,qBAAKpkB,UAAWJ,EAAQgD,KAAxB,SACE,eAACiZ,GAAA,EAAD,CAAO7b,UAAWJ,EAAQkD,MAA1B,UACE,cAAC,GAAD,CACEjH,MAAM,uEACNonB,MACEjT,GAAc1a,EAAS0D,gBAAgBkC,iBAjH7C,WACZ6Q,EAAQQ,KAAK,qBAoHGgX,cAAejd,IAEjB,cAAC+gB,GAAA,EAAD,CAAgB5mB,MAAO,CAAEvB,QAAS,UAAlC,SACE,eAACooB,GAAA,EAAD,CACEtnB,UAAWJ,EAAQimB,MACnB/pB,KAAM,SACN2E,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CACEvG,QAASA,EACTya,MAAOA,EACP6J,QAASA,EACTC,cAhJI,SAAC/lB,EAAOymB,GAEhCqB,EADchC,IAAYW,GAAsB,QAAVxK,EACrB,OAAS,OAC1B8L,EAAWtB,IA8IS0C,SAAUhB,EAAK3Y,OACfwW,UAAWA,KAEb,eAACoD,GAAA,EAAD,WACGjB,EAAKrmB,KAAI,SAACunB,GACT,OACE,eAACnD,GAAA,EAAD,CACEqD,OAAK,EACLC,UAAW,EAEXnnB,MAAO,CAAE0F,aAAc,IACvBhF,QAAS,SAACgT,GAAD,OAzDlB,SAACA,EAAGsT,GACI,OAArBtT,EAAE2P,OAAO+D,SACXhB,EAAaY,EAAK,QAuDsBK,CAAW3T,EAAGsT,IALhC,UAOE,cAACjD,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SAA2BuoB,EAAIhqB,OAC/B,cAAC+mB,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACgB,SAAbuoB,EAAIzqB,KAAkB,2BAAS,mCAElC,cAACwnB,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAIoE,MACH,qBACEprB,MAAO,CAAEmE,MAAO,GAAItB,OAAQ,IAC5B+oB,IAAK5E,EAAIoE,KAAKpuB,KACd0uB,IAAG,UAAK72B,EAASC,YAAd,YAA6BkyB,EAAIoE,KAAKO,UAI/C,cAAC5H,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGyQ,GACCnP,OAAOinB,EAAIvG,QAAQsN,oBAIvB,cAAChK,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACE,cAACkjB,GAAD,CACEnY,QAAS,CACP,CAAEiH,GAAI,cAAerV,MAAO,wCAC5B,CAAEqV,GAAI,WAAYrV,MAAO,wCACzB,CACEqV,GAAI,OACJrV,MAAO,uCACP8mB,QAAS3S,GACP1a,EAAS0D,gBAAgBkC,iBAG7B,CACEgW,GAAI,SACJrV,MAAO,qBACP8mB,QAAS3S,GACP1a,EAAS0D,gBACNmC,oBAITknB,YAAa,SAACrlB,GAAD,OACX6pB,EAAaY,EAAKzqB,UA7CnByqB,EAAIvW,QAoDbqV,EAAK3Y,SAAW+kB,EAAe3kB,SAC/B,cAACsW,GAAA,EAAD,CAAU7jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACkhB,GAAA,EAAD,CACE2D,QAAS,EACT1nB,MAAO,CAAEgkB,UAAW,UAFtB,SAIE,cAACvjB,EAAA,EAAD,CAAYtC,QAAQ,KAApB,+KASZ,cAAC,GAAD,CACEomB,MAAOyB,EACP1B,iBAzNO,SAAC3mB,EAAOgqB,GAC/BhC,EAAQgC,IAyNQnD,wBAtNc,SAAC7mB,GAC/BkoB,EAAYloB,EAAM0lB,OAAOpuB,OACzB0wB,EAAQ,IAqNQlB,KAAMA,EACNC,YAAakB,gBCvQ3Btd,GAAYhK,aAAW,SAACC,GAAD,MAAY,CACvC4D,KAAM,CACJ2F,OAAQ,UAEVzF,MAAO,CACL8B,MAAO,OACP1F,QAAS,IAEXrD,MAAO,CACLod,cAAe,IAEjB+Q,WAAY,CACV5qB,QAAS,OACTE,WAAY,SACZJ,QAAS,OAIE,SAASkR,GAAT,GAAwC,IAAlBsb,EAAiB,EAAjBA,cAC7B9rB,EAAUmJ,KACVgD,EAAUyG,cACVtB,EAAKxC,GAAe,MAC1B,EAA4BX,mBAAS,IAArC,oBAAOqb,EAAP,KAAeC,EAAf,KACA,EAA0Btb,mBAAS,IAAnC,oBAAO4d,EAAP,KAAcC,EAAd,KACA,EAAwCxhB,IAAM2D,SAAS,QAAvD,oBAAOmwB,EAAP,KAAqBC,EAArB,KACA,EAAwCpwB,oBACzB,OAAb2d,QAAa,IAAbA,OAAA,EAAAA,EAAeG,KAAKn2B,QAAS,GAD/B,oBAAOo2B,EAAP,KAAqBC,EAArB,KAGA,EAAiDxb,eAAzCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,OAAQC,EAAvC,EAAuCA,MAEjCytB,EAAiBvwB,GAAO,CAC5BZ,OAAQ,OACRC,IAAI,aAEAmxB,EAAkBxwB,GAAO,CAC7BZ,OAAQ,MACRC,IAAI,YAAD,OAAcgE,KAEbotB,EAAoBzwB,GAAO,CAC/BZ,OAAQ,MACRC,IAAI,YAAD,OAAcgE,KAEb8a,EAAiBne,GAAO,CAC5BZ,OAAQ,MACRC,IAAI,SAOAmD,EAAQ,yCAAG,WAAO/T,GAAP,UAAA4P,EAAA,0DACXgF,EADW,gCAEPmtB,EAAgBlyB,QAAQ7P,GAFjB,6CAIP8hC,EAAejyB,QAAQ7P,GAJhB,OAMfsxB,YAAW,WACTC,MACC,KARY,2CAAH,sDAWRA,EAAW,WACf9hB,EAAQQ,KAAK,mBAGTod,EAAS,yCAAG,6BAAAzd,EAAA,sEACKoyB,EAAkBnyB,UADvB,OACVid,EADU,OAEhBC,EAAUD,EAAO9sB,MACjByvB,EAAgB3C,EAAO9sB,KAAKoxB,QAC5ByQ,EAAgB/U,EAAO9sB,KAAKU,MAJZ,2CAAH,qDAWTivB,EAAQ,yCAAG,6BAAA/f,EAAA,sEACM8f,EAAe7f,UADrB,OACTC,EADS,OAEfwf,EAASxf,EAAO9P,MAFD,2CAAH,qDA4Bd,OAXAiX,qBAAU,WACJrC,GACFyY,IAEFsC,MACC,IAEH1Y,qBAAU,WACR5C,EAAMyY,KACL,CAACzY,EAAOyY,IAGT,sBAAM/Y,SAAUI,GAxBH,SAACnU,GACd,IAAM5G,EAAK,2BACN4G,GADM,IAETU,KAAMkhC,EACNpR,WAAYpB,IAEO,SAAjBwS,IACFxoC,EAAMg4B,OAAS5B,GAEjBzb,EAAS3a,MAeT,SACI4oC,EAAkBtwB,QA+PlB,cAAC,GAAD,IA9PA,cAAC3N,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGtf,GAAI,GAAIP,UAAWJ,EAAQgD,KAA7C,SACE,eAACiZ,GAAA,EAAD,CAAO7b,UAAWJ,EAAQkD,MAA1B,UACE,cAAC5B,EAAA,EAAD,CACElB,UAAWJ,EAAQ/D,MACnB+C,QAAQ,KACRsS,GAAG,aACHtV,UAAU,MAJZ,SAMGsV,EAAK,sEAAiB,wEAGzB,cAAC7Q,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAzB,SACE,eAAC,WAAD,WACE,cAACtE,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,GAAIvf,GAAI,GAAvB,SACE,eAAC+vB,GAAA,EAAD,CACE,aAAW,SACX5yB,KAAK,UACL/H,MAAOwoC,EACP3sB,SA/EO,SAACnT,GACxB+/B,EAAgB//B,EAAM0lB,OAAOpuB,QA+Eb+K,MAAO,CACLrB,QAAS,OACT8H,cAAe,MACf7H,eAAgB,gBARpB,UAWE,cAACypB,GAAA,EAAD,CACEqM,WAAYjkB,EACZxb,MAAM,OACN8a,QAAS,cAAC8f,GAAA,EAAD,IACT36B,MAAM,6BAER,cAACmzB,GAAA,EAAD,CACEqM,WAAYjkB,EACZxb,MAAM,OACN8a,QAAS,cAAC8f,GAAA,EAAD,IACT36B,MAAM,wCAIZ,cAAC0K,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,qBACN8H,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAOjT,KAChBgU,WAAYf,EAAOjT,KAAOiT,EAAOjT,KAAK4P,QAAU,GAChDqE,WAAS,EACT5V,KAAK,WAIX6V,MAAO,CAAEC,SAAUtc,EAASqC,WAAWC,UACvC6F,KAAK,WAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE2jB,WAAYjkB,EACZtS,QAAQ,WACRjJ,MAAM,wCACNqH,KAAK,SACLS,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAOwQ,OAChBzP,WACEf,EAAOwQ,OAASxQ,EAAOwQ,OAAO7T,QAAU,GAE1CqE,WAAS,EACT5V,KAAK,WAIX6V,MAAO,CAAEC,SAAUtc,EAASqC,WAAWC,UACvC6F,KAAK,aAGS,SAAjBygC,GACC,qCACE,cAAC79B,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAACkR,GAAA,EAAD,CACEiZ,QAAM,EACN90B,MAAM,2BACN4b,SAhID,SAAC4C,GACpB4X,EAAgB5X,EAAE2P,OAAOpuB,QAgILA,MAAOo2B,EACPltB,QAAQ,WACR8S,WAAS,EACT5V,KAAK,QACL2B,KAAK,OACLyuB,YAAa,CACXtsB,QAAS,CACP6qB,OAAQ7qB,EAAQoqB,aAXtB,SAeG2B,EAAMzrB,KAAI,SAAC7C,GAAD,OACT,eAACuX,GAAA,EAAD,CAA6Blf,MAAO2H,EAAO3H,MAA3C,UACE,qBACEy2B,IAAG,UAAK72B,EAASC,YAAd,YAA6B8H,EAAO+uB,MACvCC,IAAKhvB,EAAO1H,MACZ8K,MAAO,CACLmE,MAAO,GACPtB,OAAQ,GACR3C,aAAc,MACdkD,WAAY,MAGfxG,EAAO1H,QAXK0H,EAAO3H,cAgB5B,cAAC2K,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACEE,WAAS,EACThc,MAAOA,EACPoG,KAAK,QACL2B,KAAMA,EACN9H,MAAM,0DACNiJ,QAAQ,WACR2S,SAAUA,EACVpE,QAASuD,EAAO2a,kBAChB5Z,WACEf,EAAO2a,kBACH3a,EAAO2a,kBAAkBhe,QACzB,MAKZsE,MAAO,CACLE,UAAW,CACTnc,MAAO,GACP2X,QAAS/X,EAASqC,WAAWI,aAE/B8xB,UAAW,CACTn0B,MAAO,GACP2X,QAAS/X,EAASqC,WAAWI,cAGjC0F,KAAK,wBAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACEE,WAAS,EACThc,MAAOA,EACPoG,KAAK,QACL2B,KAAMA,EACN9H,MAAM,0DACNiJ,QAAQ,WACR2S,SAAUA,EACVpE,QAASuD,EAAO4b,cAChB7a,WACEf,EAAO4b,cACH5b,EAAO4b,cAAcjf,QACrB,MAKZ5P,KAAK,oBAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACEE,WAAS,EACThc,MAAOA,EACPoG,KAAK,QACL2B,KAAMA,EACN9H,MAAM,oDACNiJ,QAAQ,WACR2S,SAAUA,EACVpE,QAASuD,EAAO6b,aAChB9a,WACEf,EAAO6b,aACH7b,EAAO6b,aAAalf,QACpB,MAKZ5P,KAAK,sBAKb,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACEgb,WAAS,EACT5tB,QAAQ,WACRjJ,MAAM,6CACN8H,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAOgc,YAChBjb,WACEf,EAAOgc,YAAchc,EAAOgc,YAAYrf,QAAU,GAEpDqE,WAAS,EACT5V,KAAK,WAIX2B,KAAK,kBAGT,eAAC4C,EAAA,EAAD,CACE7C,MAAI,EACJ8C,GAAI,GACJG,MAAO,CAAErB,QAAS,OAAQC,eAAgB,iBAH5C,UAKE,cAACgC,EAAA,EAAD,CAAQzC,QAAQ,YAAY0C,MAAM,UAAUtE,KAAK,SAAjD,4CAGA,cAACqE,EAAA,EAAD,CACEzC,QAAQ,YACR0C,MAAM,YACNH,QAAS0sB,EAHX,iEC/WH9uB,oBAAW,SAACC,GAAD,MAAY,CACpC4D,KAAM,CACJgC,MAAO,QAET9B,MAAO,CACL8B,MAAO,OACP4D,aAAcxJ,EAAM2F,QAAQ,IAE9BkhB,MAAO,CACLhe,SAAU,KAEZkiB,OAAQ,CACNzoB,MAAO,QAGT0oB,WAAY,CACV5qB,QAAS,OACTE,WAAY,cC8DD6qB,GA7EA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChB,EAAoCrc,mBAAS,IAA7C,oBAAOuc,EAAP,KAAmBC,EAAnB,KACA,EAAgCxc,mBAAS,IAAzC,oBAAOsc,EAAP,KAAiBK,EAAjB,KACA,EAA4C3c,mBAAS,GAArD,oBAAOm2B,EAAP,KAAuBC,EAAvB,KAEMC,EAAwBv2B,GAAO,CACnCZ,OAAQ,MACRC,IAAI,oBAOAwzB,EAAiB,yCAAG,6BAAAx0B,EAAA,sEACHk4B,EAAsBj4B,UADnB,OAClBid,EADkB,OAExBsB,EAAYtB,EAAO9sB,MAFK,2CAAH,qDAmBvB,OAJAiX,qBAAU,WACRmtB,MACC,IAGD,eAACrgC,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAGrF,WAAW,SAASmB,MAAO,CAAEvB,QAAS,IAAlE,UACE,cAACmB,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAACkR,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,qBACN4b,SA7BuB,SAACnT,GAC9BmsB,EAAcnsB,EAAM0lB,OAAOpuB,QA6BrBA,MAAO40B,EACP5Y,WAAS,EACT5V,KAAK,YAGT,cAACuE,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,WACK+pB,EAASzc,QAAUs2B,GACpB,eAAC1yB,GAAA,EAAD,CACEiZ,QAAM,EACN90B,MAAM,oDACND,MAAOwuC,EACP3yB,SAhCe,SAAC4C,GACxBgwB,EAAkBhwB,EAAE2P,OAAOpuB,QAgCnBkJ,QAAQ,WACR8S,WAAS,EACT5V,KAAK,QAPP,UASGuuB,EAASnqB,KAAI,SAAC7C,GAAD,OACZ,cAACuX,GAAA,EAAD,CAA6Blf,MAAO2H,EAAO3H,MAA3C,SACG2H,EAAO1H,OADK0H,EAAO3H,UAIxB,cAACkf,GAAA,EAAD,CAAsBlf,MAAO,MAA7B,8FAAe,YAOrB,cAAC2K,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAACe,EAAA,EAAD,CAAQzC,QAAQ,YAAY0C,MAAM,UAAUH,QA9CjC,WACS,oBAAbipB,GACTA,EAAS,SAAD,OAAUE,EAAV,qBAAiC4Z,EAAjC,OA4CN,8CAIF,cAACvvB,GAAA,EAAD,CAASlU,MAAO,CAAEmE,MAAO,cCjDzBwf,GAAY,CAChB,CACElT,GAAI,YACJvb,MAAO,sBAET,CAAEub,GAAI,WAAYvb,MAAO,uEACzB,CACEub,GAAI,YACJvb,MAAO,sBAET,CACEub,GAAI,SACJvb,MAAO,wCAET,CAAEub,GAAI,MAAOvb,MAAO,kCACpB,CAAEub,GAAI,QAASvb,MAAO,4BAEtB,CAAEub,GAAI,WAGO,SAAS+U,KACtB,IAAMrmB,EAAUd,KAChB,EAA0BiP,mBAAS,OAAnC,oBAAOsM,EAAP,KAAc6L,EAAd,KACA,EAA4BnY,qBAA5B,oBAAOzH,EAAP,KACA,GADA,KAC4ByH,sBAA5B,oBAAOxQ,EAAP,KAAeotB,EAAf,KACA,EAA8B5c,mBAAS,aAAvC,oBAAOmW,EAAP,KAAgBiC,EAAhB,KACA,EAAwBpY,mBAAS,GAAjC,oBAAOmX,EAAP,KAAakB,EAAb,KACA,EAAgCrY,mBAASzY,EAASE,iBAAlD,oBAAO6wB,EAAP,KAAiBC,EAAjB,KACA,EAAwBvY,mBAAS,IAAjC,oBAAOwY,EAAP,KAAaC,EAAb,KACMza,EAAUyG,cAChB,EAA0BzE,mBAAS,GAAnC,oBAAO0Y,EAAP,KAAcC,EAAd,KAqBMoP,EAAmBjoB,GAAO,CAC9BZ,OAAQ,MACRC,IAAK2d,mBAAmB,UAAD,OACXzc,GAA2B,CACnC8W,OACA7K,QACA6J,UACAmC,WACA/f,SACA/I,eAKAqpB,EAAmB/Y,GAAO,CAC9BZ,OAAQ,SACRC,IAAI,WAGA2Z,EAAe,SAAC3V,EAAIlU,GACxB,IAAM8pB,EAAQ,CACZC,KAAM,WACJhb,EAAQQ,KAAR,gCAAsC2E,KAExC8V,OAAQ,WACNC,EAAmB,CACjBjrB,SAAS,EACTH,MAAO,4KACPK,SAAS,WAAD,8BAAE,uBAAAgQ,EAAA,sEACF0a,EAAiBza,QAAQ,KAAM+E,GAD7B,OAERsV,EAAQD,EAAKhpB,QAAO,SAACC,GAAD,OAAUA,EAAK0T,KAAOA,MAC1C+V,EAAmB,CAAExpB,KAAM,WAHnB,2CAAF,kDAAC,GAKTA,KAAM,SACN3B,KAAM,IACNC,oBAAoB,KAGxBgvB,YAAa,WACXhf,EAAQQ,KAAR,qCAA2C2E,EAA3C,qBAGA4V,EAAM9pB,IACR8pB,EAAM9pB,MAoBJkqB,EAAO,yCAAG,6BAAAhb,EAAA,sEACW4pB,EAAiB3pB,UAD5B,OACR4pB,EADQ,OAEdvP,EAAQuP,EAAWz5B,MACnBoqB,EAASqP,EAAWtP,OAHN,2CAAH,qDAUb,OAJAlT,qBAAU,WACR2T,MACC,CAAChC,EAAM7K,EAAO/T,EAAQ+f,EAAU9oB,IAGjC,mCACGyS,GAAc1a,EAAS0D,gBAAgBc,cACtC,cAACstB,GAAA,EAAD,CAAOtlB,UAAU,OAAO1B,IAAI,EAA5B,SACE,8BACG01B,EAAiB9nB,QAChB,cAAC,GAAD,CAAe+X,UAAW3B,KAE1B,qBAAKpkB,UAAWJ,EAAQgD,KAAxB,SACE,eAACiZ,GAAA,EAAD,CAAO7b,UAAWJ,EAAQkD,MAA1B,UACE,cAAC,GAAD,CACEjH,MAAM,4EACNonB,MACEjT,GAAc1a,EAAS0D,gBAAgBe,cA1F7C,WACZgS,EAAQQ,KAAK,uBA4FG2W,gBAAiB,cAAC,GAAD,CAAiBkH,SA/BnC,SAAC9tB,GAChBquB,EAAUruB,GACV8pB,EAAQ,MA+BQ7C,cAAejd,IAEjB,cAAC+gB,GAAA,EAAD,CAAgB5mB,MAAO,CAAEvB,QAAS,UAAlC,SACE,eAACooB,GAAA,EAAD,CACEtnB,UAAWJ,EAAQimB,MACnB/pB,KAAM,SACN2E,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CACEvG,QAASA,EACTya,MAAOA,EACP6J,QAASA,EACTC,cA1HI,SAAC/lB,EAAOymB,GAEhCqB,EADchC,IAAYW,GAAsB,QAAVxK,EACrB,OAAS,OAC1B8L,EAAWtB,IAwHS0C,SAAUhB,EAAK3Y,OACfwW,UAAWA,KAGb,eAACoD,GAAA,EAAD,WACGjB,EAAKrmB,KAAI,SAACunB,GACT,OACE,eAACnD,GAAA,EAAD,CACEqD,OAAK,EACLC,UAAW,EAEXnnB,MAAO,CAAE0F,aAAc,IACvBhF,QAAS,SAACgT,GAAD,OArElB,SAACA,EAAGsT,GACI,OAArBtT,EAAE2P,OAAO+D,SACXhB,EAAaY,EAAIvW,GAAI,QAmEmB4W,CAAW3T,EAAGsT,IALhC,UAOE,cAACjD,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAIM,YAEP,cAACvD,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAIO,WAEP,cAACxD,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAI4C,SAAS5sB,OAEhB,cAAC+mB,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGyQ,GAAcnP,OAAOinB,EAAIQ,WAG5B,cAACzD,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAIuO,UAEP,cAACxR,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAIqU,YAEP,cAACtX,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACE,cAACkjB,GAAD,CACEnY,QAAS,CACP,CAAEiH,GAAI,cAAerV,MAAO,qDAC5B,CACEqV,GAAI,OACJrV,MAAO,uCACP8mB,QAAS3S,GACP1a,EAAS0D,gBAAgBe,cAG7B,CACEmX,GAAI,SACJrV,MAAO,qBACP8mB,QAAS3S,GACP1a,EAAS0D,gBAAgBgB,iBAI/BqoB,YAAa,SAACrlB,GAAD,OACX6pB,EAAaY,EAAIvW,GAAIlU,UA3CtByqB,EAAIvW,QAkDbqV,EAAK3Y,SAAWkoB,EAAiB9nB,SACjC,cAACsW,GAAA,EAAD,CAAU7jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACkhB,GAAA,EAAD,CACE2D,QAAS,EACT1nB,MAAO,CAAEgkB,UAAW,UAFtB,SAIE,cAACvjB,EAAA,EAAD,CAAYtC,QAAQ,KAApB,+KASZ,cAAC,GAAD,CACEomB,MAAOyB,EACP1B,iBAlMO,SAAC3mB,EAAOgqB,GAC/BhC,EAAQgC,IAkMQnD,wBA/Lc,SAAC7mB,GAC/BkoB,EAAYloB,EAAM0lB,OAAOpuB,OACzB0wB,EAAQ,IA8LQlB,KAAMA,EACNC,YAAakB,eC/PjC,IA8MeoF,GA9MC,SAAC,GAA4C,IAA1Cpb,EAAyC,EAAzCA,SAAUC,EAA+B,EAA/BA,UAAWob,EAAoB,EAApBA,cACtC,EAA0B3d,mBAAS,IAAnC,oBAAO4d,EAAP,KAAcC,EAAd,KACA,EAAwC7d,oBACzB,OAAb2d,QAAa,IAAbA,OAAA,EAAAA,EAAeG,KAAKn2B,QAAS,GAD/B,oBAAOo2B,EAAP,KAAqBC,EAArB,KAGA,EAAiDxb,eAAzCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,OAAQC,EAAvC,EAAuCA,MACjC/Q,EAAUd,KAEVktB,EAAiBne,GAAO,CAC5BZ,OAAQ,MACRC,IAAI,SAGA+e,EAAQ,yCAAG,6BAAA/f,EAAA,sEACM8f,EAAe7f,UADrB,OACTC,EADS,OAEfwf,EAASxf,EAAO9P,MAFD,2CAAH,qDAgCd,OARAiX,qBAAU,WACR0Y,MACC,IAEH1Y,qBAAU,WACR5C,EAAM+a,KACL,CAAC/a,EAAO+a,IAGT,eAACrrB,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAzB,UACE,cAACtE,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAACkR,GAAA,EAAD,CACEiZ,QAAM,EACN90B,MAAM,2BACN4b,SAlBa,SAAC4C,GACpB4X,EAAgB5X,EAAE2P,OAAOpuB,QAkBnBA,MAAOo2B,EACPltB,QAAQ,WACR8S,WAAS,EACT5V,KAAK,QACL2B,KAAK,OACLyuB,YAAa,CACXtsB,QAAS,CACP6qB,OAAQ7qB,EAAQoqB,aAXtB,SAeG2B,EAAMzrB,KAAI,SAAC7C,GAAD,OACT,eAACuX,GAAA,EAAD,CAA6Blf,MAAO2H,EAAO3H,MAA3C,UACE,qBACEy2B,IAAG,UAAK72B,EAASC,YAAd,YAA6B8H,EAAO+uB,MACvCC,IAAKhvB,EAAO1H,MACZ8K,MAAO,CACLmE,MAAO,GACPtB,OAAQ,GACR3C,aAAc,MACdkD,WAAY,MAGfxG,EAAO1H,QAXK0H,EAAO3H,cAgB5B,cAAC2K,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACEE,WAAS,EACThc,MAAOA,EACPoG,KAAK,QACL2B,KAAMA,EACN9H,MAAM,0DACNiJ,QAAQ,WACR2S,SAAUA,EACVpE,QAASuD,EAAO2a,kBAChB5Z,WACEf,EAAO2a,kBACH3a,EAAO2a,kBAAkBhe,QACzB,MAKZsE,MAAO,CACLE,UAAW,CACTnc,MAAO,GACP2X,QAAS/X,EAASqC,WAAWI,aAE/B8xB,UAAW,CACTn0B,MAAO,GACP2X,QAAS/X,EAASqC,WAAWI,cAGjC0F,KAAK,wBAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACEE,WAAS,EACThc,MAAOA,EACPoG,KAAK,QACL2B,KAAMA,EACN9H,MAAM,0DACNiJ,QAAQ,WACR2S,SAAUA,EACVpE,QAASuD,EAAO4b,cAChB7a,WACEf,EAAO4b,cAAgB5b,EAAO4b,cAAcjf,QAAU,MAK9D5P,KAAK,oBAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACEE,WAAS,EACThc,MAAOA,EACPoG,KAAK,QACL2B,KAAMA,EACN9H,MAAM,oDACNiJ,QAAQ,WACR2S,SAAUA,EACVpE,QAASuD,EAAO6b,aAChB9a,WACEf,EAAO6b,aAAe7b,EAAO6b,aAAalf,QAAU,MAK5D5P,KAAK,mBAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE7b,MAAM,6CACN62B,WAAS,EACTC,KAAM,EACN7tB,QAAQ,WACRnB,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPgc,WAAS,EACTvE,QAASuD,EAAOgc,YAChBjb,WACEf,EAAOgc,YAAchc,EAAOgc,YAAYrf,QAAU,MAK1D5P,KAAK,kBAGT,eAAC4C,EAAA,EAAD,CACE7C,MAAI,EACJ8C,GAAI,GACJG,MAAO,CAAErB,QAAS,OAAQC,eAAgB,iBAH5C,UAKE,cAACgC,EAAA,EAAD,CACEzC,QAAQ,YACR0C,MAAM,UACNtE,KAAK,SACLmE,QAASsP,GA5KF,SAACnU,GACd,IAAMqwB,EAAQC,eACRl3B,EAAK,2BACN4G,GADM,IAETuvB,KAPKF,EAAMkB,MAAK,SAACrvB,GAAD,OAAUA,EAAK9H,QAAUo2B,KAQzC5a,GAAIwa,EAAgBA,EAAcxa,GAAKyb,EACvCG,WAAYpB,IAEdrb,EAAS3a,MAgKL,4CAQA,cAAC2L,EAAA,EAAD,CAAQzC,QAAQ,YAAY0C,MAAM,UAAUH,QAASmP,EAArD,yDCnLFvH,GAAYhK,aAAW,SAACC,GAAD,MAAY,CACvC4D,KAAM,CACJ2F,OAAQ,UAEVzF,MAAO,CACL8B,MAAO,OACP1F,QAAS,IAEXrD,MAAO,CACLod,cAAe,QAIbmL,GAAY,CAChB,CACElT,GAAI,OACJvb,MAAO,+CAET,CAAEub,GAAI,gBAAiBvb,MAAO,4DAC9B,CACEub,GAAI,aACJvb,MAAO,2DAGT,CAAEub,GAAI,WAGO,SAASd,KACtB,IAAMxQ,EAAUmJ,KACVgD,EAAUyG,cACVtB,EAAKxC,GAAe,MAC1B,EAA4BX,mBAAS,IAArC,oBAAOqb,EAAP,KAAeC,EAAf,KACA,EAAgCtb,mBAAS,IAAzC,oBAAOgf,EAAP,KAAiBC,EAAjB,KACA,EAAgCjf,mBAAS,IAAzC,oBAAOsc,EAAP,KAAiBK,EAAjB,KACA,EAA4C3c,mBAAS,GAArD,oBAAOm2B,EAAP,KAAuBC,EAAvB,KACA,EAAiD5zB,eAAzCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,OAAQC,EAAvC,EAAuCA,MAEjC6vB,EAAmB3yB,GAAO,CAC9BZ,OAAQ,OACRC,IAAI,WAEAm3B,EAAoBx2B,GAAO,CAC/BZ,OAAQ,MACRC,IAAI,UAAD,OAAYgE,KAEXozB,EAAsBz2B,GAAO,CACjCZ,OAAQ,MACRC,IAAI,UAAD,OAAYgE,KAGXkzB,EAAwBv2B,GAAO,CACnCZ,OAAQ,MACRC,IAAI,oBAGAqgB,EAAuB1f,GAAO,CAClCZ,OAAQ,SACRC,IAAI,YAGAmD,EAAQ,yCAAG,WAAO/T,GAAP,kBAAA4P,EAAA,yDACTshB,EAAc,GACpBT,EAAS7sB,KAAI,SAAC1C,GACZ,IAAMiwB,EAAU,CACdC,OAAQlwB,EAAKquB,KAAKn2B,OAAS8H,EAAKquB,KAAK3a,GACrCma,kBAAmB7tB,EAAK6tB,kBACxBiB,cAAe9uB,EAAK8uB,cACpBC,aAAc/uB,EAAK+uB,aACnBG,YAAalvB,EAAKkvB,YAClBxb,GAAI1T,EAAK0T,GAAGzC,WAAWN,SAAS,KAAO,KAAO3Q,EAAK0T,IAErDsc,EAAYjhB,KAAKkhB,MAGbE,EAdS,2BAeVrxB,GAfU,IAgBbywB,SAAUS,EACV2M,WAAY+J,KAEVhzB,EAnBW,gCAoBAmzB,EAAkBl4B,QAAQwhB,GApB1B,+DAsBT6S,EAAiBr0B,QAAQwhB,GAtBhB,OAuBfC,YAAW,WACTC,MACC,KAzBY,4CAAH,sDA4BRA,EAAW,WACf9hB,EAAQQ,KAAK,qBAGTod,EAAS,yCAAG,+BAAAzd,EAAA,sEACKo4B,EAAoBn4B,UADzB,OACVid,EADU,OAEhBC,EAAUD,EAAO9sB,MACjB6nC,EAAkB/a,EAAO9sB,KAAK4nC,gBAC9BlX,GAAY,UAAA5D,EAAO9sB,YAAP,eAAaywB,WAAY,IAJrB,2CAAH,qDAOT2T,EAAiB,yCAAG,6BAAAx0B,EAAA,sEACHk4B,EAAsBj4B,UADnB,OAClBid,EADkB,OAExBsB,EAAYtB,EAAO9sB,MAFK,2CAAH,qDAKjByxB,EAAkB,SAACzxB,GACvB,GAAIA,EAAKwwB,SAAU,CACjB,IAAMlQ,EAAQmQ,EAASiB,WAAU,SAACxwB,GAAD,OAAUA,EAAK0T,KAAO5U,EAAK4U,MACtD+c,EAAW,YAAOlB,GACxBkB,EAAYrR,GAAStgB,EACrB0wB,EAAYiB,QAEZjB,EAAY,GAAD,mBAAKD,GAAL,CAAezwB,KAE5B4xB,KAGIA,EAAmB,WACvBjH,EAAmB,CAAExpB,KAAM,aAGvB0wB,EAAe,SAAC7xB,GACpB2qB,EAAmB,CACjBprB,MAAO,2DACPD,UACE,cAAC,GAAD,CACEyU,SAAU0d,EACVzd,UAAW4d,EACXxC,cAAepvB,IAGnBmB,KAAM,UACN3B,KAAM,IACNE,SAAS,EACTD,oBAAoB,KA4CxB,OAXAwX,qBAAU,WACRmtB,IACIxvB,GACFyY,MAED,IAEHpW,qBAAU,WACR5C,EAAMyY,KACL,CAACzY,EAAOyY,IAGT,mCACE,sBAAM/Y,SAAUI,EAAaJ,GAA7B,SACIi0B,EAAoBt2B,QAgXpB,cAAC,GAAD,IA/WA,cAAC3N,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGtf,GAAI,GAAIP,UAAWJ,EAAQgD,KAA7C,SACE,eAACiZ,GAAA,EAAD,CAAO7b,UAAWJ,EAAQkD,MAA1B,UACE,cAAC5B,EAAA,EAAD,CACElB,UAAWJ,EAAQ/D,MACnB+C,QAAQ,KACRsS,GAAG,aACHtV,UAAU,MAJZ,SAMGsV,EAAK,4EAAkB,8EAG1B,cAAC7Q,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAzB,SACE,eAAC,WAAD,WACE,cAACtE,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,qBACN8H,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAOqX,UAChBtW,WACEf,EAAOqX,UAAYrX,EAAOqX,UAAU1a,QAAU,GAEhDqE,WAAS,EACT5V,KAAK,WAIX6V,MAAO,CAAEC,SAAUtc,EAASqC,WAAWC,UACvC6F,KAAK,gBAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,sEACN8H,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAOsX,SAChBvW,WACEf,EAAOsX,SAAWtX,EAAOsX,SAAS3a,QAAU,GAE9CqE,WAAS,EACT5V,KAAK,WAIX6V,MAAO,CAAEC,SAAUtc,EAASqC,WAAWC,UACvC6F,KAAK,eAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,2BACN8H,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAOwX,MAChBzW,WACEf,EAAOwX,MAAQxX,EAAOwX,MAAM7a,QAAU,GAExCqE,WAAS,EACT5V,KAAK,WAIX2B,KAAK,YAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,uCACN8H,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAOuX,OAChBxW,WACEf,EAAOuX,OAASvX,EAAOuX,OAAO5a,QAAU,GAE1CqE,WAAS,EACT5V,KAAK,WAIX6V,MAAO,CACLE,UAAW,CACTnc,MAAO,GACP2X,QAAS/X,EAASqC,WAAWE,eAE/BgyB,UAAW,CACTn0B,MAAO,GACP2X,QAAS/X,EAASqC,WAAWE,gBAGjC4F,KAAK,aAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACExU,KAAK,SACL4B,QAAQ,WACRjJ,MAAM,iEACN8H,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAO4a,iBAChB7Z,WACEf,EAAO4a,iBACH5a,EAAO4a,iBAAiBje,QACxB,GAENqE,WAAS,EACT5V,KAAK,WAIX2B,KAAK,uBAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,WACK+pB,EAASzc,QAAUs2B,GACpB,cAAC1yB,GAAA,EAAD,CACEiZ,QAAM,EACN90B,MAAM,oDACND,MAAOwuC,EACP3yB,SAxKG,SAAC4C,GACxBgwB,EAAkBhwB,EAAE2P,OAAOpuB,QAwKPkJ,QAAQ,WACRuO,QAASuD,EAAOwzB,eAChBzyB,WACEf,EAAOwzB,eACHxzB,EAAOwzB,eAAe72B,QACtB,GAENqE,WAAS,EACT5V,KAAK,QAbP,SAeGuuB,EAASnqB,KAAI,SAAC7C,GAAD,OACZ,cAACuX,GAAA,EAAD,CAA6Blf,MAAO2H,EAAO3H,MAA3C,SACG2H,EAAO1H,OADK0H,EAAO3H,cAO9B,cAAC2K,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,oDACN8H,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAOslB,QAChBvkB,WACEf,EAAOslB,QAAUtlB,EAAOslB,QAAQ3oB,QAAU,GAE5CqE,WAAS,EACT5V,KAAK,WAIX2B,KAAK,cAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,0DACN8H,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAOorB,UAChBrqB,WACEf,EAAOorB,UAAYprB,EAAOorB,UAAUzuB,QAAU,GAEhDqE,WAAS,EACT5V,KAAK,WAIX2B,KAAK,gBAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAACe,EAAA,EAAD,CACEzC,QAAQ,YACR0C,MAAM,UACNH,QAtQC,WACnBgtB,KAkQgB,8GAQCpB,EAASnf,QACV,cAACvN,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAACub,GAAA,EAAD,UACE,cAACwL,GAAA,EAAD,CAAgB5mB,MAAO,CAAEvB,QAAS,UAAlC,SACE,eAACooB,GAAA,EAAD,CACEtnB,UAAWJ,EAAQimB,MACnB/pB,KAAM,SACN2E,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CAAaie,UAAWA,KAExB,cAACoD,GAAA,EAAD,UACGuF,EAAS7sB,KAAI,SAACunB,GACb,OACE,eAACnD,GAAA,EAAD,CACEqD,OAAK,EACLC,UAAW,EAEXnnB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACqe,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACE,sBACEuB,MAAO,CACLrB,QAAS,OACTE,WAAY,UAHhB,UAME,qBACE6sB,IAAG,UAAK72B,EAASC,YAAd,YAA6BkyB,EAAIoE,KAAKO,MACzCC,IAAK5E,EAAIoE,KAAKl2B,MACd8K,MAAO,CACLmE,MAAO,GACPtB,OAAQ,GACR3C,aAAc,MACdkD,WAAY,KAGf4jB,EAAIoE,KAAKpuB,MAAQgqB,EAAIoE,KAAKl2B,WAG/B,cAAC6uB,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAI6E,gBAEP,cAAC9H,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAI4D,oBAGP,eAAC7G,GAAA,EAAD,CACEtlB,QAAQ,OACRuB,MAAO,CAAEgkB,UAAW,QAFtB,UAIE,cAAC/Q,GAAA,EAAD,CACEvS,QAAS,WA1T7CgtB,EA0TqE1G,IADnC,SAGE,cAAC,GAAD,MAGF,cAAC/T,GAAA,EAAD,CACEvS,QAAS,kBA7TnB,SAACsmB,GAC3BR,EAAmB,CACjBjrB,SAAS,EACTH,MAAO,4KACPK,SAAS,WAAD,8BAAE,uBAAAgQ,EAAA,0DACJgF,EADI,gCAEAqc,EAAqBphB,QAAQ,KAAMsb,EAAIvW,IAFvC,OAIR8b,EAAYD,EAASxvB,QAAO,SAACC,GAAD,OAAUA,EAAK0T,KAAOuW,EAAIvW,OACtD+V,EAAmB,CAAExpB,KAAM,WALnB,2CAAF,kDAAC,GAOTA,KAAM,SACN3B,KAAM,IACNC,oBAAoB,IAgT6BqyB,CAAoB3G,IADrC,SAGE,cAAC,GAAD,WA3CCA,EAAIvW,kBAwD3B,cAAC7Q,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,2BACN8H,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPyX,QAASuD,EAAOoZ,QAChBrY,WACEf,EAAOoZ,QAAUpZ,EAAOoZ,QAAQzc,QAAU,GAE5CqE,WAAS,EACT5V,KAAK,WAIX2B,KAAK,cAGT,cAAC4C,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAAC,KAAD,CACEkQ,QAASA,EACTc,OAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,SAAU7b,EAAkB,EAAlBA,MAAO+H,EAAW,EAAXA,KAC1B,OACE,cAAC+T,GAAA,EAAD,CACE7b,MAAM,6CACN62B,WAAS,EACTC,KAAM,EACN7tB,QAAQ,WACRnB,KAAMA,EACN8T,SAAUA,EACV7b,MAAOA,EACPgc,WAAS,EACTvE,QAASuD,EAAOgc,YAChBjb,WACEf,EAAOgc,YACHhc,EAAOgc,YAAYrf,QACnB,MAKZ5P,KAAK,kBAIT,eAAC4C,EAAA,EAAD,CACE7C,MAAI,EACJ8C,GAAI,GACJG,MAAO,CAAErB,QAAS,OAAQC,eAAgB,iBAH5C,UAKE,cAACgC,EAAA,EAAD,CAAQzC,QAAQ,YAAY0C,MAAM,UAAUtE,KAAK,SAAjD,4CAGA,cAACqE,EAAA,EAAD,CACEzC,QAAQ,YACR0C,MAAM,YACNH,QAAS0sB,EAHX,mEChjBL9uB,oBAAW,SAACC,GAAD,MAAY,CACpC4D,KAAM,CACJgC,MAAO,QAET9B,MAAO,CACL8B,MAAO,OACP4D,aAAcxJ,EAAM2F,QAAQ,IAE9BkhB,MAAO,CACLhe,SAAU,SCSd,SAAS08B,GAAqBr4B,EAAGs4B,EAAGtgB,GAClC,OAAIsgB,EAAEtgB,GAAWhY,EAAEgY,IACT,EAENsgB,EAAEtgB,GAAWhY,EAAEgY,GACV,EAEF,EAGT,SAASugB,GAAcpqB,EAAO6J,GAC5B,MAAiB,SAAV7J,EACH,SAACnO,EAAGs4B,GAAJ,OAAUD,GAAqBr4B,EAAGs4B,EAAGtgB,IACrC,SAAChY,EAAGs4B,GAAJ,OAAWD,GAAqBr4B,EAAGs4B,EAAGtgB,IAG5C,SAASwgB,GAAWvb,EAAOwb,GACzB,IAAMC,EAAiBzb,EAAMjpB,KAAI,SAAC2kC,EAAIjoB,GAAL,MAAe,CAACioB,EAAIjoB,MAMrD,OALAgoB,EAAeE,MAAK,SAAC54B,EAAGs4B,GACtB,IAAMnqB,EAAQsqB,EAAWz4B,EAAE,GAAIs4B,EAAE,IACjC,OAAc,IAAVnqB,EAAoBA,EACjBnO,EAAE,GAAKs4B,EAAE,MAEXI,EAAe1kC,KAAI,SAAC2kC,GAAD,OAAQA,EAAG,MAEvC,IAAMzgB,GAAY,CAChB,CACElT,GAAI,WACJvb,MAAO,2DAET,CACEub,GAAI,YACJvb,MAAO,sBAET,CAAEub,GAAI,WAAYvb,MAAO,uEACzB,CACEub,GAAI,SACJvb,MAAO,wCAET,CAAEub,GAAI,QAASvb,MAAO,4BACtB,CAAEub,GAAI,WAGO,SAAS+U,KACtB,IAAMrmB,EAAUd,KAChB,EAA0BiP,mBAAS,OAAnC,oBAAOsM,EAAP,KAAc6L,EAAd,KACA,EAA8BnY,mBAAS,YAAvC,oBAAOmW,EAAP,KAAgBiC,EAAhB,KACA,EAAwBpY,mBAAS,GAAjC,oBAAOmX,EAAP,KAAakB,EAAb,KACA,EAAgCrY,mBAAS,GAAzC,oBAAOsY,EAAP,KAAiBC,EAAjB,KACA,EAAwBvY,mBAAS,IAAjC,oBAAOwY,EAAP,KAAaC,EAAb,KACMza,EAAUyG,cAqBVmU,EAAiB9Y,GAAO,CAC5BZ,OAAQ,MACRC,IAAI,QAAD,OAAUkB,GAA2B,CACtC8W,OACA7K,QACA6J,UACAmC,gBAIEO,EAAmB/Y,GAAO,CAC9BZ,OAAQ,SACRC,IAAI,SAGA2Z,EAAe,SAAC3V,EAAIlU,GACxB,IAAM8pB,EAAQ,CACZC,KAAM,WACJhb,EAAQQ,KAAR,8BAAoC2E,KAEtC8V,OAAQ,WACNC,EAAmB,CACjBjrB,SAAS,EACTH,MAAO,4KACPK,SAAS,WAAD,8BAAE,uBAAAgQ,EAAA,sEACF0a,EAAiBza,QAAQ,KAAM+E,GAD7B,OAERsV,EAAQD,EAAKhpB,QAAO,SAACC,GAAD,OAAUA,EAAK0T,KAAOA,MAC1C+V,EAAmB,CAAExpB,KAAM,WAHnB,2CAAF,kDAAC,GAKTA,KAAM,SACN3B,KAAM,IACNC,oBAAoB,MAItB+qB,EAAM9pB,IACR8pB,EAAM9pB,MAUJkqB,EAAO,yCAAG,6BAAAhb,EAAA,sEACSya,EAAexa,UADxB,OACRgb,EADQ,OAEdX,EAAQW,EAAS7qB,MAFH,2CAAH,qDASb,OAJAiX,qBAAU,WACR2T,MACC,CAAChC,EAAM7K,IAGR,qBAAKra,UAAWJ,EAAQgD,KAAxB,SACE,eAACiZ,GAAA,EAAD,CAAO7b,UAAWJ,EAAQkD,MAA1B,UACE,cAAC,GAAD,CAAUjH,MAAM,sEAAeonB,MA9DvB,WACZlX,EAAQQ,KAAK,uBA8DT,cAAC8a,GAAA,EAAD,CAAgB5mB,MAAO,CAAEvB,QAAS,UAAlC,SACE,eAACooB,GAAA,EAAD,CACEtnB,UAAWJ,EAAQimB,MACnB/pB,KAAM,SACN2E,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CACEvG,QAASA,EACTya,MAAOA,EACP6J,QAASA,EACTC,cAxFc,SAAC/lB,EAAOymB,GAEhCqB,EADchC,IAAYW,GAAsB,QAAVxK,EACrB,OAAS,OAC1B8L,EAAWtB,IAsFD0C,SAAUhB,EAAK3Y,OACfwW,UAAWA,KAEb,eAACoD,GAAA,EAAD,WACGkd,GAAWne,EAAMke,GAAcpqB,EAAO6J,IACpC6gB,MAAM7f,EAAOmB,EAAUnB,EAAOmB,EAAWA,GACzCnmB,KAAI,SAACunB,GACJ,OACE,eAACnD,GAAA,EAAD,CACEqD,OAAK,EACLC,UAAW,EAEXnnB,MAAO,CAAE0F,aAAc,IACvBhF,QAAS,SAACgT,GAAD,OA3CV,SAACA,EAAGsT,GACI,OAArBtT,EAAE2P,OAAO+D,SACXhB,EAAaY,EAAIvW,GAAI,QAyCW4W,CAAW3T,EAAGsT,IALhC,UAOE,cAACjD,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SAA2BuoB,EAAI5b,WAC/B,cAAC2Y,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SAA2BuoB,EAAIM,YAC/B,cAACvD,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SAA2BuoB,EAAIO,WAC/B,cAACxD,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SAA2BuoB,EAAIQ,SAC/B,cAACzD,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SAA2BuoB,EAAIS,QAE/B,cAAC1D,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACE,cAACkjB,GAAD,CACEnY,QAAS,CACP,CAAEiH,GAAI,OAAQrV,MAAO,wCACrB,CAAEqV,GAAI,SAAUrV,MAAO,uBAEzBwmB,YAAa,SAACrlB,GAAD,OAAU6pB,EAAaY,EAAIvW,GAAIlU,UAhB3CyqB,EAAIvW,QAsBfqV,EAAK3Y,SAAW+Y,EAAe3Y,SAC/B,cAACsW,GAAA,EAAD,CAAU7jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACkhB,GAAA,EAAD,CAAW2D,QAAS,EAAG1nB,MAAO,CAAEgkB,UAAW,UAA3C,SACE,cAACvjB,EAAA,EAAD,CAAYtC,QAAQ,KAApB,+KASZ,cAAC,GAAD,CACEomB,MAAOuB,EAAK3Y,OACZmX,iBAlIiB,SAAC3mB,EAAOgqB,GAC/BhC,EAAQgC,IAkIFnD,wBA/HwB,SAAC7mB,GAC/BkoB,EAAYloB,EAAM0lB,OAAOpuB,OACzB0wB,EAAQ,IA8HFlB,KAAMA,EACNC,YAAakB,SCjNRtnB,oBAAW,SAACC,GAAD,YAAY,CACpC4D,KAAK,aACHgC,MAAO,OACPxF,QAAS,OACTC,eAAgB,gBAChB6H,cAAe,MACf5H,WAAY,YACXN,EAAM8G,YAAYC,KAAK,MAAQ,CAC9BmB,cAAe,WAGnBpE,OAAK,GACH8B,MAAO,OADJ,cAEF5F,EAAM8G,YAAYC,KAAK,MAAQ,CAC9BnB,MAAO,QAHN,uBAKK,aALL,GAOLY,QAAS,CACPzE,gBAAiB/B,EAAMQ,QAAQ+B,QAAQQ,KACvC,sBAAuB,CACrBT,MAAO,cCoBE8O,GAxCI,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,UAAW00B,EAAmB,EAAnBA,aACzC,EAA0Bj3B,mBAASi3B,EAAarvC,OAAhD,oBAAOA,EAAP,KAAcsvC,EAAd,KAOA,OACE,eAAC5kC,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAzB,UACE,cAACtE,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAACkR,GAAA,EAAD,CACE/Q,MAAO,CAAEmE,MAAO,QAChBlP,MAAOC,EACPmG,KAAK,QACLnG,MAAM,iCACNiJ,QAAQ,WACR2S,SAdyB,SAAC4C,GAChC,IAAQze,EAAUye,EAAE2P,OAAZpuB,MACRuvC,EAASvvC,QAeP,eAAC2K,EAAA,EAAD,CACE7C,MAAI,EACJ8C,GAAI,GACJG,MAAO,CAAErB,QAAS,OAAQC,eAAgB,iBAH5C,UAKE,cAACgC,EAAA,EAAD,CACEzC,QAAQ,YACR0C,MAAM,UACNH,QAAS,kBAAMkP,EAAS,CAAE3a,MAAOsvC,EAAatvC,MAAO+H,KAAM9H,KAH7D,4CAOA,cAAC0L,EAAA,EAAD,CAAQzC,QAAQ,YAAY0C,MAAM,YAAYH,QAASmP,EAAvD,yDCqbO2V,GAvcE,WACf,IAAMrmB,EAAUd,KAChB,EAAgDiP,mBAAS,IAAzD,oBAAOkf,EAAP,KAAyBC,EAAzB,KACA,EAA0Cnf,mBAAS,IAAnD,oBAAOo1B,EAAP,KAAsBC,EAAtB,KACA,EAA8Cr1B,mBAAS,IAAvD,oBAAOm3B,EAAP,KAAwBC,EAAxB,KACA,EAA8Cp3B,mBAAS,IAAvD,oBAAOuqB,EAAP,KAAwBC,EAAxB,KACA,EAA4CxqB,mBAAS,IAArD,oBAAOm2B,EAAP,KAAuBC,EAAvB,KACA,EAA4Bp2B,qBAA5B,oBAAOhR,EAAP,KAAeqoC,EAAf,KACA,EAAgDr3B,mBAAS,CACvDrY,MAAO,GACPC,MAAO,KAFT,oBAAOisC,EAAP,KAAyBC,EAAzB,KAIA,EAAwC9zB,qBAAxC,oBAAOmwB,EAAP,KAAqBC,EAArB,KAEMrT,EAA6Bjd,GAAO,CACxCZ,OAAQ,MACRC,IAAK,sBAGDm4B,EAA8Bx3B,GAAO,CACzCZ,OAAQ,MACRC,IAAI,qBAAD,OAAuB00B,EAAiBlsC,SAGvC4vC,EAA6Bz3B,GAAO,CACxCZ,OAAQ,OACRC,IAAK,sBAGDq4B,EAA4B13B,GAAO,CACvCZ,OAAQ,MACRC,IAAK,qBAGDs4B,EAA6B33B,GAAO,CACxCZ,OAAQ,MACRC,IAAI,oBAAD,OAAsB00B,EAAiBlsC,SAGtC+vC,EAA4B53B,GAAO,CACvCZ,OAAQ,OACRC,IAAK,qBAGDw4B,EAA0B73B,GAAO,CACrCZ,OAAQ,MACRC,IAAK,mBAGDy4B,EAA2B93B,GAAO,CACtCZ,OAAQ,MACRC,IAAI,kBAAD,OAAoB00B,EAAiBlsC,SAGpCkwC,EAA0B/3B,GAAO,CACrCZ,OAAQ,OACRC,IAAK,mBAGD24B,EAA4Bh4B,GAAO,CACvCZ,OAAQ,MACRC,IAAK,qBAGD44B,EAA6Bj4B,GAAO,CACxCZ,OAAQ,MACRC,IAAI,oBAAD,OAAsB00B,EAAiBlsC,SAGtCqwC,EAA4Bl4B,GAAO,CACvCZ,OAAQ,OACRC,IAAK,qBAGD84B,EAA2Bn4B,GAAO,CACtCZ,OAAQ,MACRC,IAAK,oBAGD+4B,EAA4Bp4B,GAAO,CACvCZ,OAAQ,MACRC,IAAI,mBAAD,OAAqB00B,EAAiBlsC,SAGrCwwC,EAA2Br4B,GAAO,CACtCZ,OAAQ,OACRC,IAAK,oBAGDhR,EAAW,SAAC,GAAqB,IAAnBuB,EAAkB,EAAlBA,KACZqpB,GAD8B,EAAZpxB,MACV,CACZi8B,SAAS,WAAD,8BAAE,uBAAAzlB,EAAA,yDACO,SAAXnP,EADI,gCAEAsoC,EAA4Bl5B,QAAQ,CACxC1O,SAHI,6CAMA6nC,EAA2Bn5B,QAAQ,CAAE1O,SANrC,OAQRqwB,KARQ,2CAAF,kDAAC,GAUTmR,MAAM,WAAD,8BAAE,uBAAA/yB,EAAA,yDACU,SAAXnP,EADC,gCAEG4oC,EAAyBx5B,QAAQ,CACrC1O,SAHC,6CAMGmoC,EAAwBz5B,QAAQ,CAAE1O,SANrC,OAQLimC,KARK,2CAAF,kDAAC,GAUNzI,QAAQ,WAAD,8BAAE,uBAAA/uB,EAAA,yDACQ,SAAXnP,EADG,gCAECyoC,EAA2Br5B,QAAQ,CACvC1O,SAHG,6CAMCgoC,EAA0Bt5B,QAAQ,CAAE1O,SANrC,OAQPglC,KARO,2CAAF,kDAAC,GAUR0D,QAAQ,WAAD,8BAAE,uBAAAj6B,EAAA,yDACQ,SAAXnP,EADG,gCAEC+oC,EAA2B35B,QAAQ,CACvC1O,SAHG,6CAMCsoC,EAA0B55B,QAAQ,CAAE1O,SANrC,OAQPq8B,KARO,2CAAF,kDAAC,GAURsM,OAAO,WAAD,8BAAE,uBAAAl6B,EAAA,yDACS,SAAXnP,EADE,gCAEEkpC,EAA0B95B,QAAQ,CACtC1O,SAHE,6CAMEyoC,EAAyB/5B,QAAQ,CAAE1O,SANrC,OAQNijC,KARM,2CAAF,kDAAC,KAWT,GAAI5Z,EAAMoX,GAER,OADA5tB,KACOwW,EAAMoX,MAIXmI,GAAY,SAACrpC,GACjBooC,EAAU,OACVjH,EAAgBnhC,IAGZ6pB,GAAe,SAAC7pB,EAAMQ,GAC1B4nC,EAAU,QACVjH,EAAgBnhC,GAChB6kC,EAAoBrkC,IAGhB8S,GAAY,WAChB2W,EAAmB,CAAExpB,KAAM,WAC3B2nC,KAmBItX,GAAmB,yCAAG,6BAAA5hB,EAAA,sEACS4e,EAA2B3e,UADpC,OACpBm6B,EADoB,OAE1BpZ,EAAoBoZ,EAAqBhqC,MAFf,2CAAH,qDAKnBonC,GAAgB,yCAAG,6BAAAx3B,EAAA,sEACSw5B,EAAwBv5B,UADjC,OACjBo6B,EADiB,OAEvBnD,EAAiBmD,EAAkBjqC,MAFZ,2CAAH,qDAKhBmmC,GAAkB,yCAAG,6BAAAv2B,EAAA,sEACSq5B,EAA0Bp5B,UADnC,OACnBq6B,EADmB,OAEzBrB,EAAmBqB,EAAoBlqC,MAFd,2CAAH,qDAKlBw9B,GAAkB,yCAAG,6BAAA5tB,EAAA,sEACS25B,EAA0B15B,UADnC,OACnBs6B,EADmB,OAEzBlO,EAAmBkO,EAAoBnqC,MAFd,2CAAH,qDAKlBokC,GAAiB,yCAAG,6BAAAx0B,EAAA,sEACS85B,EAAyB75B,UADlC,OAClBu6B,EADkB,OAExBvC,EAAkBuC,EAAmBpqC,MAFb,2CAAH,qDAmBvB,OAdAiX,qBAAU,WACRua,KACA4V,KACAjB,KACA3I,KACA4G,OACC,IAEHntB,qBAAU,WACJxW,GAjDJkqB,EAAmB,CACjBprB,MAAO,qDACPD,UACE,cAAC,GAAD,CACEyU,SAAUnU,EACVoU,UAAWA,GACX00B,aAAcpD,IAGlBnkC,KAAM,SACN3B,KAAM,IACNC,oBAAoB,MAyCrB,CAACgB,IAGF,sBAAKiD,UAAWJ,EAAQgD,KAAxB,UACE,eAACiZ,GAAA,EAAD,CAAO7b,UAAWJ,EAAQkD,MAA1B,UACE,cAAC,GAAD,CACEjH,MAAM,+FACNonB,MAAO,kBAAMojB,GAAU,aACvBjjB,aAAcxjB,EAAQ4F,QACtB6d,eAAgBzjB,EAAQ+mC,UACxBrjB,SAAO,IAET,cAAC+D,GAAA,EAAD,CAAgB5mB,MAAO,CAAEvB,QAAS,UAAlC,SACE,cAACooB,GAAA,EAAD,CACEtnB,UAAWJ,EAAQimB,MACnB/pB,KAAM,SACN2E,MAAO,CAAE0F,aAAc,IAHzB,SAKE,eAACqhB,GAAA,EAAD,WACGyF,EAAiB/sB,KAAI,SAACunB,GACrB,OACE,eAACnD,GAAA,EAAD,CACEqD,OAAK,EACLC,UAAW,EAEXnnB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACqe,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SAA2BuoB,EAAI9xB,QAE/B,cAAC6uB,GAAA,EAAD,CAAWtlB,QAAQ,OAAOuB,MAAO,CAAEgkB,UAAW,QAA9C,SACE,cAAC/Q,GAAA,EAAD,CAAYvS,QAAS,kBAAM0lB,GAAa,WAAYY,IAApD,SACE,mBAAGznB,UAAU,uBAAb,wBAPCynB,EAAIvW,QAab+b,EAAiBrf,SAAWkgB,GAAoB9f,SAChD,cAACsW,GAAA,EAAD,CAAU7jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACkhB,GAAA,EAAD,CAAW2D,QAAS,EAAG1nB,MAAO,CAAEgkB,UAAW,UAA3C,SACE,cAACvjB,EAAA,EAAD,CAAYtC,QAAQ,KAApB,iLAUd,eAACid,GAAA,EAAD,CAAO7b,UAAWJ,EAAQkD,MAA1B,UACE,cAAC,GAAD,CACEjH,MAAM,mFACNonB,MAAO,kBAAMojB,GAAU,UACvBjjB,aAAcxjB,EAAQ4F,QACtB6d,eAAgBzjB,EAAQ+mC,UACxBrjB,SAAO,IAET,cAAC+D,GAAA,EAAD,CAAgB5mB,MAAO,CAAEvB,QAAS,UAAlC,SACE,cAACooB,GAAA,EAAD,CACEtnB,UAAWJ,EAAQimB,MACnB/pB,KAAM,SACN2E,MAAO,CAAE0F,aAAc,IAHzB,SAKE,eAACqhB,GAAA,EAAD,WACG2b,EAAcjjC,KAAI,SAACunB,GAClB,OACE,eAACnD,GAAA,EAAD,CACEqD,OAAK,EACLC,UAAW,EAEXnnB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACqe,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SAA2BuoB,EAAI9xB,QAE/B,cAAC6uB,GAAA,EAAD,CAAWtlB,QAAQ,OAAOuB,MAAO,CAAEgkB,UAAW,QAA9C,SACE,cAAC/Q,GAAA,EAAD,CAAYvS,QAAS,kBAAM0lB,GAAa,QAASY,IAAjD,SACE,mBAAGznB,UAAU,uBAAb,wBAPCynB,EAAIvW,QAabiyB,EAAcv1B,SAAW81B,GAAiB11B,SAC1C,cAACsW,GAAA,EAAD,CAAU7jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACkhB,GAAA,EAAD,CAAW2D,QAAS,EAAG1nB,MAAO,CAAEgkB,UAAW,UAA3C,SACE,cAACvjB,EAAA,EAAD,CAAYtC,QAAQ,KAApB,iLAUd,eAACid,GAAA,EAAD,CAAO7b,UAAWJ,EAAQkD,MAA1B,UACE,cAAC,GAAD,CACEjH,MAAM,yFACNonB,MAAO,kBAAMojB,GAAU,YACvBjjB,aAAcxjB,EAAQ4F,QACtB6d,eAAgBzjB,EAAQ+mC,UACxBrjB,SAAO,IAET,cAAC+D,GAAA,EAAD,CAAgB5mB,MAAO,CAAEvB,QAAS,UAAlC,SACE,cAACooB,GAAA,EAAD,CACEtnB,UAAWJ,EAAQimB,MACnB/pB,KAAM,SACN2E,MAAO,CAAE0F,aAAc,IAHzB,SAKE,eAACqhB,GAAA,EAAD,WACG0d,EAAgBhlC,KAAI,SAACunB,GACpB,OACE,eAACnD,GAAA,EAAD,CACEqD,OAAK,EACLC,UAAW,EAEXnnB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACqe,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SAA2BuoB,EAAI9xB,QAE/B,cAAC6uB,GAAA,EAAD,CAAWtlB,QAAQ,OAAOuB,MAAO,CAAEgkB,UAAW,QAA9C,SACE,cAAC/Q,GAAA,EAAD,CAAYvS,QAAS,kBAAM0lB,GAAa,UAAWY,IAAnD,SACE,mBAAGznB,UAAU,uBAAb,wBAPCynB,EAAIvW,QAabg0B,EAAgBt3B,SAAW60B,GAAmBz0B,SAC9C,cAACsW,GAAA,EAAD,CAAU7jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACkhB,GAAA,EAAD,CAAW2D,QAAS,EAAG1nB,MAAO,CAAEgkB,UAAW,UAA3C,SACE,cAACvjB,EAAA,EAAD,CAAYtC,QAAQ,KAApB,iLAUd,eAACid,GAAA,EAAD,CAAO7b,UAAWJ,EAAQkD,MAA1B,UACE,cAAC,GAAD,CACEjH,MAAM,sGACNonB,MAAO,kBAAMojB,GAAU,YACvBjjB,aAAcxjB,EAAQ4F,QACtB6d,eAAgBzjB,EAAQ+mC,UACxBrjB,SAAO,IAET,cAAC+D,GAAA,EAAD,CAAgB5mB,MAAO,CAAEvB,QAAS,UAAlC,SACE,cAACooB,GAAA,EAAD,CACEtnB,UAAWJ,EAAQimB,MACnB/pB,KAAM,SACN2E,MAAO,CAAE0F,aAAc,IAHzB,SAKE,eAACqhB,GAAA,EAAD,WACG8Q,EAAgBp4B,KAAI,SAACunB,GACpB,OACE,eAACnD,GAAA,EAAD,CACEqD,OAAK,EACLC,UAAW,EAEXnnB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACqe,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SAA2BuoB,EAAI9xB,QAE/B,cAAC6uB,GAAA,EAAD,CAAWtlB,QAAQ,OAAOuB,MAAO,CAAEgkB,UAAW,QAA9C,SACE,cAAC/Q,GAAA,EAAD,CAAYvS,QAAS,kBAAM0lB,GAAa,UAAWY,IAAnD,SACE,mBAAGznB,UAAU,uBAAb,wBAPCynB,EAAIvW,QAabonB,EAAgB1qB,SAAWksB,GAAmB9rB,SAC9C,cAACsW,GAAA,EAAD,CAAU7jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACkhB,GAAA,EAAD,CAAW2D,QAAS,EAAG1nB,MAAO,CAAEgkB,UAAW,UAA3C,SACE,cAACvjB,EAAA,EAAD,CAAYtC,QAAQ,KAApB,iLAUd,eAACid,GAAA,EAAD,CAAO7b,UAAWJ,EAAQkD,MAA1B,UACE,cAAC,GAAD,CACEjH,MAAM,kHACNonB,MAAO,kBAAMojB,GAAU,WACvBjjB,aAAcxjB,EAAQ4F,QACtB6d,eAAgBzjB,EAAQ+mC,UACxBrjB,SAAO,IAET,cAAC+D,GAAA,EAAD,CAAgB5mB,MAAO,CAAEvB,QAAS,UAAlC,SACE,cAACooB,GAAA,EAAD,CACEtnB,UAAWJ,EAAQimB,MACnB/pB,KAAM,SACN2E,MAAO,CAAE0F,aAAc,IAHzB,SAKE,eAACqhB,GAAA,EAAD,WACG0c,EAAehkC,KAAI,SAACunB,GACnB,OACE,eAACnD,GAAA,EAAD,CACEqD,OAAK,EACLC,UAAW,EAEXnnB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACqe,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SAA2BuoB,EAAI9xB,QAE/B,cAAC6uB,GAAA,EAAD,CAAWtlB,QAAQ,OAAOuB,MAAO,CAAEgkB,UAAW,QAA9C,SACE,cAAC/Q,GAAA,EAAD,CAAYvS,QAAS,kBAAM0lB,GAAa,SAAUY,IAAlD,SACE,mBAAGznB,UAAU,uBAAb,wBAPCynB,EAAIvW,QAabgzB,EAAet2B,SAAW8yB,GAAkB1yB,SAC5C,cAACsW,GAAA,EAAD,CAAU7jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACkhB,GAAA,EAAD,CAAW2D,QAAS,EAAG1nB,MAAO,CAAEgkB,UAAW,UAA3C,SACE,cAACvjB,EAAA,EAAD,CAAYtC,QAAQ,KAApB,qL,UC1admK,GAAYhK,aAAW,SAACC,GAAD,MAAY,CACvC4D,KAAM,CACJ2F,OAAQ,UAEVzF,MAAO,CACL8B,MAAO,OACP1F,QAAS,GACTsJ,aAAc,IAEhB3M,MAAO,CACLod,cAAe,IAEjBJ,WAAY,CACV,UAAW,CACT3Z,QAAS,cAGb0nC,MAAO,CACLtlC,MAAO,OACPP,gBAAiB/B,EAAMQ,QAAQ+B,QAAQQ,KACvC,UAAW,CACThB,gBAAiB/B,EAAMQ,QAAQ+B,QAAQQ,OAG3C8kC,KAAM,CACJvlC,MAAO,OACPP,gBAAiB/B,EAAMQ,QAAQ2N,MAAMpL,KACrC,UAAW,CACThB,gBAAiB/B,EAAMQ,QAAQ2N,MAAMpL,OAGzC+kC,WAAY,CACVxlC,MAAO,QACPoC,SAAU,GACV3C,gBAAiB/B,EAAMQ,QAAQoC,KAAKG,KACpC,UAAW,CACThB,gBAAiB/B,EAAMQ,QAAQoC,KAAKG,OAGxCglC,UAAW,CACTzlC,MAAO,QACPoC,SAAU,GACV3C,gBAAiB/B,EAAMQ,QAAQoC,KAAKG,KACpC,UAAW,CACThB,gBAAiB/B,EAAMQ,QAAQoC,KAAKG,OAGxCilC,SAAU,CACR1lC,MAAO,OACPP,gBAAiB/B,EAAMQ,QAAQkC,QAAQK,KACvC,UAAW,CACThB,gBAAiB/B,EAAMQ,QAAQkC,QAAQM,OAG3CilC,SAAU,CACR7nC,QAAS,OACT8H,cAAe,UAEjBggC,eAAgB,CACd9kC,WAAYpD,EAAMQ,QAAQ+B,QAAQQ,KAClC1C,eAAgB,WAChBC,WAAY,SACZF,QAAS,QAEXwvB,IAAK,CACHrvB,aAAa,aAAD,OAAeP,EAAMQ,QAAQoC,KAAKG,WAI5CqiB,GAAY,CAChB,CACElT,GAAI,OACJvb,MAAO,iGAGT,CAAEub,GAAI,QAASvb,MAAO,4BACtB,CACEub,GAAI,OACJvb,MAAO,4BAET,CAAEub,GAAI,QAASvb,MAAO,4BACtB,CACEub,GAAI,OACJvb,MAAO,6BAII,SAASya,KACtB,IAAMxQ,EAAUmJ,KAEhB,GADgByJ,cACYzE,sBAA5B,oBAAOzH,EAAP,KAAeyrB,EAAf,KACMoV,EAAQz4B,GAAe,QAC7B,EAAwBX,mBAAS,IAAjC,oBAAOwY,EAAP,KAAaC,EAAb,KACA,EAAwCzY,mBAASqQ,QAAjD,oBAAOga,EAAP,KAAqBwG,EAArB,KACA,EAAwC7wB,mBAASqQ,QAAjD,oBAAOgpB,EAAP,KAAqBC,EAArB,KACA,EAAoCt5B,oBAAS,GAA7C,oBAAOu5B,EAAP,KAAmBC,EAAnB,KACA,EAAgCx5B,qBAAhC,oBAAOy5B,EAAP,KAAiBC,EAAjB,KACA,EAAwB15B,mBAASo5B,GAAjC,oBAAOnqC,EAAP,KAAakyB,EAAb,KAEMwY,EAAkB75B,GAAO,CAC7BZ,OAAQ,OACRC,IAAI,eAGAy6B,EAAoB95B,GAAO,CAC/BZ,OAAQ,MACRC,IAAK2d,mBAAmB,cAAD,OACPzc,GAA2B,CACvC9H,SACA/I,OAAO,SAAD,OAAW66B,EAAatZ,GAAGC,cAA3B,KACN/hB,aAKA4qC,EAAqB/5B,GAAO,CAChCZ,OAAQ,MACRC,IAAI,eAGAmD,EAAQ,yCAAG,WAAOoX,EAAKqd,GAAZ,UAAA54B,EAAA,0DAEb8D,GACW,aAAThT,EACI1H,EAAS0D,gBAAgBK,yBAChB,aAAT2D,EACA1H,EAAS0D,gBAAgBM,yBACzBhE,EAAS0D,gBAAgBI,uBAPlB,mBAURyuC,IAVQ,gCAWLH,EAAgBv7B,QAAQ,CAAE27B,WAAYrgB,EAAIvW,GAAI4zB,SAXzC,OAYX5d,IAZW,6CAgBb5oB,EAAiB,CACftB,KAAM,QACNrB,KAAMrG,EAAS2C,SAASC,cAAcE,gBAlB3B,4CAAH,wDAuBR2vC,EAAM,yCAAG,WAAOx1B,GAAP,gBAAArG,EAAA,0DACT8D,GAAc1a,EAAS0D,gBAAgBO,kBAD9B,uBAELyuC,EAA4C,KAAjC,IAAIn0B,MAAOo0B,oBAFjB,SAGLL,EAAmBz7B,QAAQ,CAC/B+E,GAAIs2B,EAASt2B,GACbqB,KAAM,IAAIsB,KAAK,IAAIA,KAAKtB,GAAQy1B,KALvB,OAOX9gB,IAPW,sBASX5oB,EAAiB,CACftB,KAAM,QACNrB,KAAMrG,EAAS2C,SAASC,cAAcE,gBAX7B,2CAAH,sDAoBN8uB,EAAO,yCAAG,6BAAAhb,EAAA,sEACSy7B,EAAkBx7B,UAD3B,OACRgb,EADQ,OAEdX,EAAQW,EAAS7qB,MAFH,2CAAH,qDASP4rC,EAAmB,SAAC31B,GACxB80B,EAAgB90B,EAAKuM,IACrByoB,GAAc,GACdE,EAAY,MACZM,EAAOx1B,EAAKuM,KAGRqpB,EAAa,SAACC,GACbC,MAGLhB,EAAgBe,EAAKnB,UACrBM,GAAc,GACdE,EAAY,CAAEv2B,GAAIk3B,EAAKl3B,OAGnBm3B,EAAe,WACnB,OAAOr4B,GAAc1a,EAAS0D,gBAAgBO,mBAG1CsuC,EAAa,WACjB,OAAOzP,EAAatZ,GAAGwpB,iBAAmBlqB,OAASU,GAAGwpB,gBAGlDC,EAAkB,SAAC9gB,GACvB,OAAyB,IAArBA,EAAI+gB,MAAM56B,OAEV,qCACE,cAAC4W,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGooC,GAAc7f,EAAI+gB,MAAM,GAAGt3B,KAAOs2B,EAASt2B,GAC1C,cAACu3B,GAAA,EAAD,CACEhoC,MAAO,CAAEmE,MAAO,IAChB8jC,MAAM,EACNhzC,MAAO0xC,EACP71B,SAAU22B,EACV5mB,QAAQ,iCACRC,YAAY,yCAGd,cAACvM,GAAA,EAAD,CACErf,MAAO,8CACPqK,UAAWkS,aACTtS,EAAQgnC,MACRiB,KAAgBjoC,EAAQknC,YAE1B3lC,QAAS,kBAAMkP,EAASoX,EAAK,cAInC,cAACjD,GAAA,EAAD,CAAWtlB,QAAQ,SACnB,cAACslB,GAAA,EAAD,CAAWtlB,QAAQ,SACnB,cAACslB,GAAA,EAAD,CAAWtlB,QAAQ,YAIA,IAArBuoB,EAAI+gB,MAAM56B,OAEV,qCACE,cAAC4W,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGooC,GAAc7f,EAAI+gB,MAAM,GAAGt3B,KAAOs2B,EAASt2B,GAC1C,cAACu3B,GAAA,EAAD,CACEhoC,MAAO,CAAEmE,MAAO,IAChB8jC,MAAM,EACNhzC,MAAO0xC,EACP71B,SAAU22B,EACV5mB,QAAQ,iCACRC,YAAY,yCAGd,cAACvM,GAAA,EAAD,CACErf,MAAOga,GAAc8X,EAAI+gB,MAAM,GAAGJ,MAAM16B,UAAU,EAAG,GACrD1N,UAAWJ,EAAQknC,WACnB3lC,QAAS,kBAAMgnC,EAAW1gB,EAAI+gB,MAAM,SAI1C,cAAChkB,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACE,cAAC8V,GAAA,EAAD,CACErf,MAAO,8CACPqK,UAAWkS,aAAKtS,EAAQinC,KAAMgB,KAAgBjoC,EAAQmnC,WACtD5lC,QAAS,kBAAMkP,EAASoX,EAAK,aAGjC,cAACjD,GAAA,EAAD,CAAWtlB,QAAQ,SACnB,cAACslB,GAAA,EAAD,CAAWtlB,QAAQ,YAIA,IAArBuoB,EAAI+gB,MAAM56B,OAEV,qCACE,cAAC4W,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGooC,GAAc7f,EAAI+gB,MAAM,GAAGt3B,KAAOs2B,EAASt2B,GAC1C,cAACu3B,GAAA,EAAD,CACEhoC,MAAO,CAAEmE,MAAO,IAChB8jC,MAAM,EACNhzC,MAAO0xC,EACP71B,SAAU22B,EACV5mB,QAAQ,iCACRC,YAAY,yCAGd,cAACvM,GAAA,EAAD,CACErf,MAAOga,GAAc8X,EAAI+gB,MAAM,GAAGJ,MAAM16B,UAAU,EAAG,GACrD1N,UAAWJ,EAAQknC,WACnB3lC,QAAS,kBAAMgnC,EAAW1gB,EAAI+gB,MAAM,SAI1C,cAAChkB,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGooC,GAAc7f,EAAI+gB,MAAM,GAAGt3B,KAAOs2B,EAASt2B,GAC1C,cAACu3B,GAAA,EAAD,CACEhoC,MAAO,CAAEmE,MAAO,IAChB8jC,MAAM,EACNhzC,MAAO0xC,EACP71B,SAAU22B,EACV5mB,QAAQ,iCACRC,YAAY,yCAGd,cAACvM,GAAA,EAAD,CACErf,MAAOga,GAAc8X,EAAI+gB,MAAM,GAAGJ,MAAM16B,UAAU,EAAG,GACrD1N,UAAWJ,EAAQmnC,UACnB5lC,QAAS,kBAAMgnC,EAAW1gB,EAAI+gB,MAAM,SAI1C,cAAChkB,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACE,cAAC8V,GAAA,EAAD,CACErf,MAAO,8CACPqK,UAAWkS,aACTtS,EAAQgnC,MACRiB,KAAgBjoC,EAAQknC,YAE1B3lC,QAAS,kBAAMkP,EAASoX,EAAK,cAGjC,cAACjD,GAAA,EAAD,CAAWtlB,QAAQ,YAIA,IAArBuoB,EAAI+gB,MAAM56B,OAEV,qCACE,cAAC4W,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGooC,GAAc7f,EAAI+gB,MAAM,GAAGt3B,KAAOs2B,EAASt2B,GAC1C,cAACu3B,GAAA,EAAD,CACEhoC,MAAO,CAAEmE,MAAO,IAChB8jC,MAAM,EACNhzC,MAAO0xC,EACP71B,SAAU22B,EACV5mB,QAAQ,iCACRC,YAAY,yCAGd,cAACvM,GAAA,EAAD,CACErf,MAAOga,GAAc8X,EAAI+gB,MAAM,GAAGJ,MAAM16B,UAAU,EAAG,GACrD1N,UAAWJ,EAAQknC,WACnB3lC,QAAS,kBAAMgnC,EAAW1gB,EAAI+gB,MAAM,SAI1C,cAAChkB,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGooC,GAAc7f,EAAI+gB,MAAM,GAAGt3B,KAAOs2B,EAASt2B,GAC1C,cAACu3B,GAAA,EAAD,CACEhoC,MAAO,CAAEmE,MAAO,IAChB8jC,MAAM,EACNhzC,MAAO0xC,EACP71B,SAAU22B,EACV5mB,QAAQ,iCACRC,YAAY,yCAGd,cAACvM,GAAA,EAAD,CACErf,MAAOga,GAAc8X,EAAI+gB,MAAM,GAAGJ,MAAM16B,UAAU,EAAG,GACrD1N,UAAWJ,EAAQmnC,UACnB5lC,QAAS,kBAAMgnC,EAAW1gB,EAAI+gB,MAAM,SAI1C,cAAChkB,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGooC,GAAc7f,EAAI+gB,MAAM,GAAGt3B,KAAOs2B,EAASt2B,GAC1C,cAACu3B,GAAA,EAAD,CACEhoC,MAAO,CAAEmE,MAAO,IAChB8jC,MAAM,EACNhzC,MAAO0xC,EACP71B,SAAU22B,EACV5mB,QAAQ,iCACRC,YAAY,yCAGd,cAACvM,GAAA,EAAD,CACErf,MAAOga,GAAc8X,EAAI+gB,MAAM,GAAGJ,MAAM16B,UAAU,EAAG,GACrD1N,UAAWJ,EAAQknC,WACnB3lC,QAAS,kBAAMgnC,EAAW1gB,EAAI+gB,MAAM,SAI1C,cAAChkB,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACE,cAAC8V,GAAA,EAAD,CACErf,MAAO,8CACPqK,UAAWkS,aAAKtS,EAAQinC,KAAMgB,KAAgBjoC,EAAQmnC,WACtD5lC,QAAS,kBAAMkP,EAASoX,EAAK,gBAMd,IAArBA,EAAI+gB,MAAM56B,OAEV,qCACE,cAAC4W,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGooC,GAAc7f,EAAI+gB,MAAM,GAAGt3B,KAAOs2B,EAASt2B,GAC1C,cAACu3B,GAAA,EAAD,CACEhoC,MAAO,CAAEmE,MAAO,IAChB8jC,MAAM,EACNhzC,MAAO0xC,EACP71B,SAAU22B,EACV5mB,QAAQ,iCACRC,YAAY,yCAGd,cAACvM,GAAA,EAAD,CACErf,MAAOga,GAAc8X,EAAI+gB,MAAM,GAAGJ,MAAM16B,UAAU,EAAG,GACrD1N,UAAWJ,EAAQknC,WACnB3lC,QAAS,kBAAMgnC,EAAW1gB,EAAI+gB,MAAM,SAI1C,cAAChkB,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGooC,GAAc7f,EAAI+gB,MAAM,GAAGt3B,KAAOs2B,EAASt2B,GAC1C,cAACu3B,GAAA,EAAD,CACEhoC,MAAO,CAAEmE,MAAO,IAChB8jC,MAAM,EACNhzC,MAAO0xC,EACP71B,SAAU22B,EACV5mB,QAAQ,iCACRC,YAAY,yCAGd,cAACvM,GAAA,EAAD,CACErf,MAAOga,GAAc8X,EAAI+gB,MAAM,GAAGJ,MAAM16B,UAAU,EAAG,GACrD1N,UAAWJ,EAAQmnC,UACnB5lC,QAAS,kBAAMgnC,EAAW1gB,EAAI+gB,MAAM,SAI1C,cAAChkB,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGooC,GAAc7f,EAAI+gB,MAAM,GAAGt3B,KAAOs2B,EAASt2B,GAC1C,cAACu3B,GAAA,EAAD,CACEhoC,MAAO,CAAEmE,MAAO,IAChB8jC,MAAM,EACNhzC,MAAO0xC,EACP71B,SAAU22B,EACV5mB,QAAQ,iCACRC,YAAY,yCAGd,cAACvM,GAAA,EAAD,CACErf,MAAOga,GAAc8X,EAAI+gB,MAAM,GAAGJ,MAAM16B,UAAU,EAAG,GACrD1N,UAAWJ,EAAQknC,WACnB3lC,QAAS,kBAAMgnC,EAAW1gB,EAAI+gB,MAAM,SAI1C,cAAChkB,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGooC,GAAc7f,EAAI+gB,MAAM,GAAGt3B,KAAOs2B,EAASt2B,GAC1C,cAACu3B,GAAA,EAAD,CACEhoC,MAAO,CAAEmE,MAAO,IAChB8jC,MAAM,EACNhzC,MAAO0xC,EACP71B,SAAU22B,EACV5mB,QAAQ,iCACRC,YAAY,yCAGd,cAACvM,GAAA,EAAD,CACErf,MAAOga,GAAc8X,EAAI+gB,MAAM,GAAGJ,MAAM16B,UAAU,EAAG,GACrD1N,UAAWJ,EAAQmnC,UACnB5lC,QAAS,kBAAMgnC,EAAW1gB,EAAI+gB,MAAM,iBAvEhD,GA4FF,OARAj1B,qBAAU,WACR2T,MACC,CAAC5gB,EAAQ8xB,EAAcp7B,IAE1BuW,qBAAU,WACR2b,EAAQiY,KACP,CAACA,IAGF,mCACGn3B,GACU,aAAThT,EACI1H,EAAS0D,gBAAgBE,yBAChB,aAAT8D,EACA1H,EAAS0D,gBAAgBG,yBACzB7D,EAAS0D,gBAAgBC,wBAE7B,eAACoH,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAGlE,MAAO,CAAEnB,WAAY,YAAjD,UACE,cAACe,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGtf,GAAI,GAAIP,UAAWJ,EAAQqnC,SAA7C,SACE,cAAC9lB,GAAA,EAAD,CACEC,QAAM,EACNunB,YAAY,WACZ/pC,QAAQ,SACRgqC,OAAO,OACPnrC,KAAK,OAEL4jB,aAAa,WACbC,QAAQ,iCACRC,YAAY,qBACZC,UAAW,SAACjP,GAAD,OAAWA,EAAOA,EAAKyB,OAAO,iBAAmB,IAC5Dte,MAAO0iC,EACP7mB,SAvUa,SAACgB,GACxBqsB,EAAgBrsB,IAuUN9R,MAAO,CAAEmE,MAAO,YAcpB,eAACvE,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGtf,GAAI,GAAIP,UAAWJ,EAAQgD,KAA7C,UACE,eAACiZ,GAAA,EAAD,CAAO7b,UAAWJ,EAAQkD,MAA1B,UACE,cAAC5B,EAAA,EAAD,CACElB,UAAWJ,EAAQ/D,MACnB+C,QAAQ,KACRsS,GAAG,aACHtV,UAAU,MAJZ,yFASA,cAACyE,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAzB,SACE,cAACtE,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,GAAIvf,GAAI,GAAvB,SACE,cAACkR,GAAA,EAAD,CACE5S,QAAQ,WACRjJ,MAAM,uEACN4b,SA/WK,SAAC4C,GACtB4d,EAAU5d,EAAE2P,OAAOpuB,QA+WHA,MAAO4Q,EACPoL,WAAS,EACT5V,KAAK,iBAKb,qBAAKkE,UAAWJ,EAAQgD,KAAxB,SACE,cAACiZ,GAAA,EAAD,CAAO7b,UAAWJ,EAAQkD,MAA1B,SACE,cAACukB,GAAA,EAAD,CAAgB5mB,MAAO,CAAEvB,QAAS,UAAlC,SACE,eAACooB,GAAA,EAAD,CACEtnB,UAAWJ,EAAQimB,MACnB/pB,KAAM,SACN2E,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CAAavG,QAASA,EAASwkB,UAAWA,KAC1C,eAACoD,GAAA,EAAD,WACGjB,EAAKrmB,KAAI,SAACunB,GACT,OACE,eAACnD,GAAA,EAAD,CACEqD,OAAK,EACLC,UAAW,EAEXnnB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACqe,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SAA2BuoB,EAAIohB,WAC9BN,EAAgB9gB,KAJZA,EAAIvW,QAQbqV,EAAK3Y,SAAW+5B,EAAkB35B,SAClC,cAACsW,GAAA,EAAD,CAAU7jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACkhB,GAAA,EAAD,CACE2D,QAAS,EACT1nB,MAAO,CAAEgkB,UAAW,UAFtB,SAIE,cAACvjB,EAAA,EAAD,CAAYtC,QAAQ,KAApB,2LC7kB5B,IAAMmK,GAAYhK,aAAW,SAACC,GAAD,MAAY,CACvC6Z,WAAY,CACV,UAAW,CACT3Z,QAAS,kBAgEAirB,GA5DA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACVxqB,EAAUmJ,KAChB,EAAiDgF,mBAASqQ,QAA1D,oBAAOuS,EAAP,KAAyBC,EAAzB,KACA,EAA6C7iB,mBAASqQ,QAAtD,oBAAOyS,EAAP,KAAuBC,EAAvB,KAEMI,EAAe,SAAC/c,EAAGnX,GACV,SAATA,EACF4zB,EAAqBzc,GAErB2c,EAAmB3c,IAYvB,OACE,eAAC9T,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAGrF,WAAW,SAASmB,MAAO,CAAEvB,QAAS,IAAlE,UACE,cAACmB,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAIN,UAAWJ,EAAQiZ,WAA7C,SACE,cAACsI,GAAA,EAAD,CACEC,QAAM,EACN3jB,KAAK,OACL9H,MAAM,8CACN0rB,aAAa,WACbC,QAAQ,iCACRC,YAAY,qBACZC,UAAW,SAACjP,GAAD,OAAWA,EAAOA,EAAKyB,OAAO,iBAAmB,IAC5Dte,MAAOi7B,EACPpf,SAAU,SAAC4C,GAAD,OAAO+c,EAAa/c,EAAG,SACjC1T,MAAO,CAAEmE,MAAO,YAGpB,cAACvE,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAIN,UAAWJ,EAAQiZ,WAA7C,SACE,cAACsI,GAAA,EAAD,CACEC,QAAM,EACN3jB,KAAK,OACL9H,MAAM,8CACN0rB,aAAa,WACbC,QAAQ,iCACRC,YAAY,qBACZC,UAAW,SAACjP,GAAD,OAAWA,EAAOA,EAAKyB,OAAO,iBAAmB,IAC5Dte,MAAOm7B,EACPtf,SAAU,SAAC4C,GAAD,OAAO+c,EAAa/c,EAAG,OACjC1T,MAAO,CAAEmE,MAAO,YAGpB,cAACvE,EAAA,EAAD,CAAM7C,MAAI,EAACqiB,GAAI,EAAGvf,GAAI,GAAtB,SACE,cAACe,EAAA,EAAD,CAAQzC,QAAQ,YAAY0C,MAAM,UAAUH,QAvCjC,WACS,oBAAbipB,GACTA,EAAS,SAAD,OACGuG,EAAiB7R,GAAGC,cADvB,eAC2C8R,EAAe/R,GAAGC,cAD7D,OAqCN,8CAIF,cAACpK,GAAA,EAAD,CAASlU,MAAO,CAAEmE,MAAO,c,0CCjCzBwf,GAAY,CAChB,CACElT,GAAI,OACJvb,MAAO,kCAGT,CAAEub,GAAI,aAAcvb,MAAO,+CAC3B,CACEub,GAAI,YACJvb,MAAO,+CAET,CAAEub,GAAI,cAAevb,MAAO,+CAC5B,CACEub,GAAI,aACJvb,MAAO,+CAET,CAAEub,GAAI,eAAgBvb,MAAO,yCAC7B,CACEub,GAAI,WACJvb,MAAO,qDAET,CACEub,GAAI,QACJvb,MAAO,wEAII,SAASmzC,KACtB,IAAMlpC,EAAUd,KACVoS,EAAKxC,GAAe,MACpBjR,EAAOiR,GAAe,QAC5B,EAA0BX,mBAAS,OAAnC,oBAAOsM,EAAP,KAAc6L,EAAd,KACA,EAA8BnY,mBAAS,QAAvC,oBAAOmW,EAAP,KAAgBiC,EAAhB,KACA,EAAwBpY,mBAAS,GAAjC,oBAAOmX,EAAP,KAAakB,EAAb,KACA,EAAgCrY,mBAASzY,EAASE,iBAAlD,oBAAO6wB,EAAP,KAAiBC,EAAjB,KACA,EAAwBvY,mBAAS,IAAjC,oBAAOwY,EAAP,KAAaC,EAAb,KACA,EAA0BzY,mBAAS,GAAnC,oBAAO0Y,EAAP,KAAcC,EAAd,KACA,EAAsB3Y,qBAAtB,oBAAOg7B,EAAP,KAAYC,EAAZ,KAEA,GADgBx2B,cACYzE,mBAAS,SAAD,OACzBk7B,KAAQ7qB,OAAU,cACxB8qB,OAAO,MACPC,QAAQ,SACRpqB,cAJ+B,eAIXX,OAASW,cAJE,OAApC,oBAAOxhB,EAAP,KAAeotB,EAAf,KAmCMwE,EAAqBthB,GAAO,CAChCZ,OAAQ,MACRC,IAAK2d,mBAAmB,uBAAD,OACEzc,GAA2B,CAChD8W,OACA7K,QACA6J,UACAmC,WACA9oB,eA0BA2pB,EAAO,yCAAG,6BAAAhb,EAAA,sEACaijB,EAAmBhjB,QAAQ,KAAM+E,GAD9C,OACRme,EADQ,OAEd7I,EAAQ6I,EAAa/yB,MACrBoqB,EAAS2I,EAAa5I,OACtBuiB,EAAO3Z,EAAa+Z,SAJN,2CAAH,qDAqBb,OAJA71B,qBAAU,WACR2T,MACC,CAAChC,EAAM7K,EAAOgM,EAAU9oB,IAGzB,mCACGyS,GAAc1a,EAAS0D,gBAAgBglC,YACtC,cAAC5W,GAAA,EAAD,CAAOtlB,UAAU,OAAO1B,IAAI,EAA5B,SACE,8BACG+uB,EAAmBnhB,QAClB,cAAC,GAAD,CAAe+X,UAAW3B,KAE1B,mCACE,eAAC/jB,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAG3E,UAAWJ,EAAQ6uB,OAA/C,UAgFE,cAACpuB,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,eAACub,GAAA,EAAD,CAAO7b,UAAWJ,EAAQ8uB,gBAA1B,UACE,cAAC,GAAD,CACE7yB,MAzGd,qDAAN,OAAoB4B,GA0GAylB,gBACE,cAAC,GAAD,CAAiBkH,SAxIxB,SAAC9tB,GAChBquB,EAAUruB,QA0IQ,cAAC+qB,GAAA,EAAD,CAAgB5mB,MAAO,CAAEvB,QAAS,UAAlC,SACE,eAACooB,GAAA,EAAD,CACEtnB,UAAWJ,EAAQimB,MACnB/pB,KAAM,SACN2E,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CACEvG,QAASA,EACTya,MAAOA,EACP6J,QAASA,EACTC,cArLA,SAAC/lB,EAAOymB,GAEhCqB,EADchC,IAAYW,GAAsB,QAAVxK,EACrB,OAAS,OAC1B8L,EAAWtB,IAmLa0C,SAAUhB,EAAK3Y,OACfwW,UAAWA,KAGb,eAACoD,GAAA,EAAD,WACGjB,EAAKrmB,KAAI,SAACunB,GAAS,IAAD,QACjB,OACE,eAACnD,GAAA,EAAD,CACEqD,OAAK,EACLC,UAAW,EAEXnnB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACqe,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGyQ,GACC,IAAIkE,KAAK4T,EAAIlV,MAAMwB,mBACjB,YAIN,cAACyQ,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGyQ,GAAa,UAAC8X,EAAI+gB,MAAM,UAAX,aAAC,EAAcJ,QAE/B,cAAC5jB,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGyQ,GAAa,UAAC8X,EAAI+gB,MAAM,UAAX,aAAC,EAAcJ,QAE/B,cAAC5jB,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGyQ,GAAa,UAAC8X,EAAI+gB,MAAM,UAAX,aAAC,EAAcJ,QAE/B,cAAC5jB,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGyQ,GAAa,UAAC8X,EAAI+gB,MAAM,UAAX,aAAC,EAAcJ,QAE/B,cAAC5jB,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGyQ,GAAc8X,EAAI4hB,gBAErB,cAAC7kB,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGyQ,GAAc8X,EAAI6hB,YAErB,cAAC9kB,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGyQ,GAAc8X,EAAIhB,WA7BhBgB,EAAIvW,QAkCbqV,EAAK3Y,SAAWuhB,EAAmBnhB,SACnC,cAACsW,GAAA,EAAD,CAAU7jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACkhB,GAAA,EAAD,CACE2D,QAAS/D,GAAUxW,OACnBnN,MAAO,CAAEgkB,UAAW,UAFtB,SAIE,cAACvjB,EAAA,EAAD,CAAYtC,QAAQ,KAApB,+KASZ,cAAC,GAAD,CACEomB,MAAOyB,EACP1B,iBA7OG,SAAC3mB,EAAOgqB,GAC/BhC,EAAQgC,IA6OYnD,wBA1OU,SAAC7mB,GAC/BkoB,EAAYloB,EAAM0lB,OAAOpuB,OACzB0wB,EAAQ,IAyOYlB,KAAMA,EACNC,YAAakB,SAKnB,cAAChmB,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAACub,GAAA,EAAD,CAAO7b,UAAWJ,EAAQ+uB,iBAA1B,SACE,eAACtuB,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAzB,UACE,cAACtE,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAIC,GAAI,EAAvB,SACE,cAACiR,GAAA,EAAD,CACE2jB,UAAQ,EACRv2B,QAAQ,WACRjJ,MAAM,sEACN8H,KAAK,WACL/H,MAAOia,GAAa,OAACo5B,QAAD,IAACA,OAAD,EAACA,EAAKQ,WAC1B73B,WAAS,EACT5V,KAAK,YAGT,cAACuE,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAIC,GAAI,EAAvB,SACE,cAACiR,GAAA,EAAD,CACE2jB,UAAQ,EACRv2B,QAAQ,WACRjJ,MAAM,mFACN8H,KAAK,WACL/H,MAAOia,GAAa,OAACo5B,QAAD,IAACA,OAAD,EAACA,EAAKS,eAC1B93B,WAAS,EACT5V,KAAK,YAGT,cAACuE,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAIC,GAAI,EAAvB,SACE,cAACiR,GAAA,EAAD,CACE2jB,UAAQ,EACRv2B,QAAQ,WACRjJ,MAAM,uEACN8H,KAAK,WACL/H,MAAOia,GAAa,OAACo5B,QAAD,IAACA,OAAD,EAACA,EAAKU,mBAC1B/3B,WAAS,EACT5V,KAAK,8BCrXlBiD,oBAAW,SAACC,GAAD,MAAY,CACpC4D,KAAM,CACJgC,MAAO,QAET9B,MAAO,CACL8B,MAAO,OACP4D,aAAcxJ,EAAM2F,QAAQ,IAE9BkhB,MAAO,CACLhe,SAAU,S,UCLRkB,GAAYhK,aAAW,SAACC,GAAD,MAAY,CACvC0qC,IAAK,CACH9kC,MAAO,GACPtB,OAAQ,GACR3C,aAAc,GACdkD,WAAY,IAEdb,KAAM,CACJ4B,MAAO,GACPtB,OAAQ,GACR3C,aAAc,GACdS,OAAQ,WAEVuoC,KAAM,CACJvqC,QAAS,OACTE,WAAY,cAID,SAAS8Q,GAAT,GAA4C,IAAtBgZ,EAAqB,EAArBA,OAAQ9Y,EAAa,EAAbA,UACrC1Q,EAAUmJ,KAChB,EAAkCgF,qBAAlC,oBAAO67B,EAAP,KAAkBC,EAAlB,KAEMC,EAAS,SAACC,GACdF,EAAaE,IAKf,OAFAx2B,qBAAU,cAAU,IAGlB,eAAClT,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAzB,UACE,eAACtE,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAIN,UAAWJ,EAAQ+pC,KAAtC,UACE,cAACn4B,GAAA,EAAD,CACE2jB,UAAQ,EACRx/B,MAAM,2BACND,MAAO0zB,EAAOyC,KAAKpuB,MAAQ,IAC3BmB,QAAQ,WACR8S,WAAS,EACT5V,KAAK,UAEP,qBACEqwB,IAAG,UAAK72B,EAASC,YAAd,YAA6B6zB,EAAOyC,KAAKO,MAC5CC,IAAKjD,EAAOyC,KAAKO,KACjBpsB,UAAWJ,EAAQ8pC,SAGvB,eAACrpC,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAIN,UAAWJ,EAAQ+pC,KAAtC,UACE,cAACn4B,GAAA,EAAD,CACE2jB,UAAQ,EACRx/B,MAAM,0DACND,MAAO0zB,EAAOiC,mBAAqB,IACnCzsB,QAAQ,WACR8S,WAAS,EACT5V,KAAK,UAEP,cAAC,mBAAD,CACEguC,OAAQ,kBAAMA,EAAO,sBACrBnuC,KAAMytB,EAAOiC,kBAFf,SAIE,mBACErrB,UAAU,uBACVS,MAAO,CAAEkF,YAAa,GAAIvE,OAAQ,WAFpC,SAIiB,sBAAdwoC,EAAoC,OAAS,cAIpD,eAACvpC,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAIN,UAAWJ,EAAQ+pC,KAAtC,UACE,cAACn4B,GAAA,EAAD,CACE2jB,UAAQ,EACRx/B,MAAM,0DACND,MAAO0zB,EAAOkD,eAAiB,IAC/B1tB,QAAQ,WACR8S,WAAS,EACT5V,KAAK,UAEP,cAAC,mBAAD,CACEguC,OAAQ,kBAAMA,EAAO,kBACrBnuC,KAAMytB,EAAOkD,cAFf,SAIE,mBACEtsB,UAAU,uBACVS,MAAO,CAAEkF,YAAa,GAAIvE,OAAQ,WAFpC,SAIiB,kBAAdwoC,EAAgC,OAAS,cAIhD,eAACvpC,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAIN,UAAWJ,EAAQ+pC,KAAtC,UACE,cAACn4B,GAAA,EAAD,CACE2jB,UAAQ,EACRx/B,MAAM,oDACND,MAAO0zB,EAAOmD,cAAgB,IAC9B3tB,QAAQ,WACR8S,WAAS,EACT5V,KAAK,UAEP,cAAC,mBAAD,CACEguC,OAAQ,kBAAMA,EAAO,iBACrBnuC,KAAMytB,EAAOmD,aAFf,SAIE,mBACEvsB,UAAU,uBACVS,MAAO,CAAEkF,YAAa,GAAIvE,OAAQ,WAFpC,SAIiB,iBAAdwoC,EAA+B,OAAS,cAK/C,cAACvpC,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAACkR,GAAA,EAAD,CACE2jB,UAAQ,EACRx/B,MAAM,6CACND,MAAO0zB,EAAOsD,aAAe,IAC7B9tB,QAAQ,WACR8S,WAAS,EACT5V,KAAK,YAIT,cAACuE,EAAA,EAAD,CACE7C,MAAI,EACJ8C,GAAI,GACJG,MAAO,CAAErB,QAAS,OAAQC,eAAgB,iBAH5C,SAKE,cAACgC,EAAA,EAAD,CAAQzC,QAAQ,YAAY0C,MAAM,YAAYH,QAASmP,EAAvD,uDC1GR,IAAM8T,GAAY,CAChB,CACElT,GAAI,OACJvb,MAAO,yCAET,CACEub,GAAI,OACJvb,MAAO,sBAET,CACEub,GAAI,OACJvb,MAAO,4BAET,CAAEub,GAAI,aAAcvb,MAAO,2DAC3B,CAAEub,GAAI,WAEFna,GAAc,CAClBC,SAAU,iCACVC,SAAU,iCACVE,OAAQ,wCAuMK6yC,GApMQ,WACrB,IAAMpqC,EAAUd,KAChB,EAA0BiP,mBAAS,OAAnC,oBAAOsM,EAAP,KAAc6L,EAAd,KACA,EAA8BnY,mBAAS,QAAvC,oBAAOmW,EAAP,KAAgBiC,EAAhB,KACA,EAA4BpY,qBAA5B,oBAAOzH,EAAP,KACA,GADA,KACwByH,mBAAS,IAAjC,oBAAOmX,EAAP,KAAakB,EAAb,KACA,EAAgCrY,mBAASzY,EAASE,iBAAlD,oBAAO6wB,EAAP,KAAiBC,EAAjB,KACA,EAAwBvY,mBAAS,IAAjC,oBAAOwY,EAAP,KAAaC,EAAb,KACA,EAA0BzY,mBAAS,GAAnC,oBAAO0Y,EAAP,KAAcC,EAAd,KACA,EAA4B3Y,mBAAS,OAArC,oBAAO+G,EAAP,KAAem1B,EAAf,KAsBMC,EAAiBr8B,GAAO,CAC5BZ,OAAQ,MACRC,IAAI,WAAD,OAAakB,GAA2B,CACzC8W,OACA7K,QACA6J,UACAmC,WACA/f,SACA2jB,WAAYnV,OAIVq1B,EAAkB,WACtBljB,EAAmB,CAAExpB,KAAM,mBAGvB2sC,EAAe,SAAC3iB,GACpBR,EAAmB,CACjBprB,MAAM,+CAAD,OAAc4rB,EAAI4iB,YACvBzuC,UAAW,cAAC,GAAD,CAAQ0U,UAAW65B,EAAiB/gB,OAAQ3B,IACvDhqB,KAAM,gBACN3B,KAAM,IACNE,SAAS,EACTD,oBAAoB,KAUlBmrB,EAAO,yCAAG,6BAAAhb,EAAA,sEACSg+B,EAAe/9B,UADxB,OACRm+B,EADQ,OAEd9jB,EAAQ8jB,EAAShuC,MACjBoqB,EAAS4jB,EAAS7jB,OAHJ,2CAAH,qDAcb,OAJAlT,qBAAU,WACR2T,MACC,CAAChC,EAAM7K,EAAO/T,EAAQ+f,EAAUvR,IAGjC,mCACG9E,GAAc1a,EAAS0D,gBAAgBglC,YACtC,cAAC5W,GAAA,EAAD,CAAOtlB,UAAU,OAAO1B,IAAI,EAA5B,SACE,8BACG8pC,EAAel8B,QACd,cAAC,GAAD,CAAe+X,UAAW3B,KAE1B,qBAAKpkB,UAAWJ,EAAQgD,KAAxB,SACE,eAACiZ,GAAA,EAAD,CAAO7b,UAAWJ,EAAQkD,MAA1B,UACE,cAAC,GAAD,CACEjH,MAAM,sGAEN0nB,cAAejd,IAEjB,qBAAKtG,UAAWJ,EAAQgvB,IAAxB,SACE,eAACU,GAAA,EAAD,CACE55B,MAAOof,EACPvD,SA1BA,SAAC4C,EAAGze,GACtBu0C,EAAUv0C,IA0BQ65B,eAAe,UACfC,UAAU,UACVC,UAAQ,EACR7wB,QAAQ,YANV,UAQE,cAAC8wB,GAAA,EAAD,CAAK/5B,MAAM,+CAAYD,MAAM,QAC7B,cAACg6B,GAAA,EAAD,CAAK/5B,MAAM,6CAAUD,MAAM,aAC3B,cAACg6B,GAAA,EAAD,CAAK/5B,MAAM,iCAAQD,MAAM,aACzB,cAACg6B,GAAA,EAAD,CAAK/5B,MAAM,mDAAWD,MAAM,gBAIhC,cAAC2xB,GAAA,EAAD,CAAgB5mB,MAAO,CAAEvB,QAAS,UAAlC,SACE,eAACooB,GAAA,EAAD,CACEtnB,UAAWJ,EAAQimB,MACnB/pB,KAAM,SACN2E,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CACEvG,QAASA,EACTya,MAAOA,EACP6J,QAASA,EACTC,cA5GI,SAAC/lB,EAAOymB,GAEhCqB,EADchC,IAAYW,GAAsB,QAAVxK,EACrB,OAAS,OAC1B8L,EAAWtB,IA0GS0C,SAAUhB,EAAK3Y,OACfwW,UAAWA,KAEb,eAACoD,GAAA,EAAD,WACGjB,EAAKrmB,KAAI,SAACunB,GACT,OACE,eAACnD,GAAA,EAAD,CACEqD,OAAK,EACLC,UAAW,EAEXnnB,MAAO,CAAE0F,aAAc,IACvBhF,QAAS,SAACgT,GAAD,OAzElB,SAACA,EAAGsT,GACI,OAArBtT,EAAE2P,OAAO+D,SACXuiB,EAAa3iB,GAuE2BK,CAAW3T,EAAGsT,IALhC,UAOE,cAACjD,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAI4iB,aAEP,cAAC7lB,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGnI,GAAY0wB,EAAIwC,cAEnB,cAACzF,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAIoE,MACH,qBACEprB,MAAO,CAAEmE,MAAO,GAAItB,OAAQ,IAC5B+oB,IAAK5E,EAAIoE,KAAKpuB,KACd0uB,IAAG,UAAK72B,EAASC,YAAd,YAA6BkyB,EAAIoE,KAAKO,UAI/C,cAAC5H,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAI4D,oBAGP,cAAC7G,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACE,mBACEc,UAAU,uBACVS,MAAO,CAAEW,OAAQ,WACjBD,QAAS,kBAAMipC,EAAa3iB,IAH9B,sBAxBGA,EAAIvW,QAmCbqV,EAAK3Y,SAAWs8B,EAAel8B,SAC/B,cAACsW,GAAA,EAAD,CAAU7jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACkhB,GAAA,EAAD,CACE2D,QAAS,EACT1nB,MAAO,CAAEgkB,UAAW,UAFtB,SAIE,cAACvjB,EAAA,EAAD,CAAYtC,QAAQ,KAApB,+KASZ,cAAC,GAAD,CACEomB,MAAOyB,EACP1B,iBApKO,SAAC3mB,EAAOgqB,GAC/BhC,EAAQgC,IAoKQnD,wBAjKc,SAAC7mB,GAC/BkoB,EAAYloB,EAAM0lB,OAAOpuB,OACzB0wB,EAAQ,IAgKQlB,KAAMA,EACNC,YAAakB,gBCnO3Btd,GAAYhK,aAAW,SAACC,GAAD,MAAY,CACvC0qC,IAAK,CACH9kC,MAAO,GACPtB,OAAQ,GACR3C,aAAc,GACdkD,WAAY,IAEdb,KAAM,CACJ4B,MAAO,GACPtB,OAAQ,GACR3C,aAAc,GACdS,OAAQ,WAEVuoC,KAAM,CACJvqC,QAAS,OACTE,WAAY,cAID,SAAS8Q,GAAT,GAAgD,IAAD,IAAzB9T,EAAyB,EAAzBA,KAAMU,EAAmB,EAAnBA,KAAMsT,EAAa,EAAbA,UACzC1Q,EAAUmJ,KAEhB,OACE,eAAC1I,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAzB,UACE,cAACtE,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAACkR,GAAA,EAAD,CACE2jB,UAAQ,EACRx/B,MAAK,UAA0B,UAArB2G,EAAK21B,YAA0B,oDAAc,qDACvDv8B,MAAO4G,EAAKmB,MAAQ,IACpBmB,QAAQ,WACR8S,WAAS,EACT5V,KAAK,YAGT,cAACuE,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAACkR,GAAA,EAAD,CACE2jB,UAAQ,EACRx/B,MAAM,iCACND,MACEia,GAAc,IAAIkE,KAAKvX,EAAKiW,MAAMwB,mBAAmB,WACrD,IAEFnV,QAAQ,WACR8S,WAAS,EACT5V,KAAK,YAGT,cAACuE,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAACkR,GAAA,EAAD,CACE2jB,UAAQ,EACRx/B,MAAM,2BACND,MAAOia,GAAcrT,EAAKyY,QAAU,IACpCnW,QAAQ,WACR8S,WAAS,EACT5V,KAAK,aAGE,SAATkB,GAA4B,WAATA,IACnB,eAACqD,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAIG,MAAO,CAAErB,QAAS,QAArC,UACE,cAACoS,GAAA,EAAD,CACE2jB,UAAQ,EACRx/B,MAAM,2BACND,OAAO,UAAA4G,EAAK8sB,OAAOyC,YAAZ,eAAkBpuB,OAAQ,IACjCmB,QAAQ,WACR8S,WAAS,EACT5V,KAAK,UAEP,qBACEqwB,IAAG,UAAK72B,EAASC,YAAd,YAA6B+G,EAAK8sB,OAAOyC,KAAKO,MACjDC,IAAG,UAAE/vB,EAAK8sB,OAAOyC,YAAd,aAAE,EAAkBO,KACvBpsB,UAAWJ,EAAQ8pC,SAIf,SAAT1sC,GACC,cAACqD,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAACkR,GAAA,EAAD,CACE2jB,UAAQ,EACRx/B,MAAM,0DACND,MAAO4G,EAAK8sB,OAAO+I,iBAAmB,IACtCvzB,QAAQ,WACR8S,WAAS,EACT5V,KAAK,YAID,SAATkB,GACC,cAACqD,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAACkR,GAAA,EAAD,CACE2jB,UAAQ,EACRx/B,MAAM,sEACND,MAAOia,GAAcrT,EAAK8sB,OAAO+J,eAAiB,IAClDv0B,QAAQ,WACR8S,WAAS,EACT5V,KAAK,YAID,WAATkB,GACC,cAACqD,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAACkR,GAAA,EAAD,CACE2jB,UAAQ,EACRx/B,MAAM,8CACND,MAAOia,GAAcrT,EAAK8sB,OAAOgK,eAAiB,IAClDx0B,QAAQ,WACR8S,WAAS,EACT5V,KAAK,YAID,WAATkB,GACC,cAACqD,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAACkR,GAAA,EAAD,CACE2jB,UAAQ,EACRx/B,MAAM,sEACND,MACEia,GACE,IAAIkE,KAAKvX,EAAK8sB,OAAOvU,eAAed,mBAAmB,WACpD,IAEPnV,QAAQ,WACR8S,WAAS,EACT5V,KAAK,YAKD,WAATkB,GACC,cAACqD,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAACkR,GAAA,EAAD,CACE2jB,UAAQ,EACRx/B,MAAM,kCACND,MAAO4G,EAAK8sB,OAAOkK,aAAe,IAClC10B,QAAQ,WACR8S,WAAS,EACT5V,KAAK,YAKX,cAACuE,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAACkR,GAAA,EAAD,CACE2jB,UAAQ,EACRx/B,MAAM,6CACND,MAAO4G,EAAKowB,aAAe,IAC3B9tB,QAAQ,WACR8S,WAAS,EACT5V,KAAK,YAIT,cAACuE,EAAA,EAAD,CACE7C,MAAI,EACJ8C,GAAI,GACJG,MAAO,CAAErB,QAAS,OAAQC,eAAgB,iBAH5C,SAKE,cAACgC,EAAA,EAAD,CAAQzC,QAAQ,YAAY0C,MAAM,YAAYH,QAASmP,EAAvD,uDCnIR,IAAM8T,GAAY,CAChB,CACElT,GAAI,OACJvb,MAAO,kCAET,CACEub,GAAI,OACJvb,MAAO,yCAET,CACEub,GAAI,OACJvb,MAAO,sBAET,CACEub,GAAI,QACJvb,MAAO,4BAGT,CAAEub,GAAI,WAGF4V,GAAQ,CACZyjB,KAAM,qBACNC,OAAQ,eACRC,KAAM,4BAyMOC,GAtMO,WACpB,IAAM9qC,EAAUd,KAChB,EAA0BiP,mBAAS,OAAnC,oBAAOsM,EAAP,KAAc6L,EAAd,KACA,EAA8BnY,mBAAS,SAAvC,oBAAOmW,EAAP,KAAgBiC,EAAhB,KACA,EAA4BpY,qBAA5B,oBAAOzH,EAAP,KACA,GADA,KACwByH,mBAAS,IAAjC,oBAAOmX,EAAP,KAAakB,EAAb,KACMukB,EAASj8B,GAAe,UAC9B,EAAgCX,mBAASzY,EAASE,iBAAlD,oBAAO6wB,EAAP,KAAiBC,EAAjB,KACA,EAAwBvY,mBAAS,IAAjC,oBAAOwY,EAAP,KAAaC,EAAb,KACA,EAA0BzY,mBAAS,GAAnC,oBAAO0Y,EAAP,KAAcC,EAAd,KAEA,GADgBlU,cACUzE,mBAAS,SAAnC,oBAAO/Q,EAAP,KAAaitC,EAAb,KAqBMW,EAA0B/8B,GAAO,CACrCZ,OAAQ,MACRC,IAAI,oBAAD,OAAsBkB,GAA2B,CAClD8W,OACA7K,QACA6J,UACAmC,WACA/f,SACAtJ,YAIEmtC,EAAkB,WACtBljB,EAAmB,CAAExpB,KAAM,YAGvB2sC,EAAe,SAAC3iB,GACpBR,EAAmB,CACjBprB,MAAM,GAAD,OACiB,WAApB4rB,EAAIwK,YAA2B,4EAAkB,4EAD9C,KAGLr2B,UACE,cAAC,GAAD,CAAe0U,UAAW65B,EAAiB7tC,KAAMmrB,EAAKzqB,KAAMyqB,EAAIzqB,OAElES,KAAM,SACN3B,KAAM,IACNE,SAAS,EACTD,oBAAoB,KAUlBmrB,EAAO,yCAAG,6BAAAhb,EAAA,sEACY0+B,EAAwBz+B,QAAQ,KAAMw+B,GADlD,OACRpM,EADQ,OAEd/X,EAAQ+X,EAAYjiC,MACpBoqB,EAAS6X,EAAY9X,OAHP,2CAAH,qDAcb,OAJAlT,qBAAU,WACR2T,MACC,CAAChC,EAAM7K,EAAO/T,EAAQ+f,EAAUrpB,IAGjC,mCACGgT,GAAc1a,EAAS0D,gBAAgBglC,YACtC,cAAC5W,GAAA,EAAD,CAAOtlB,UAAU,OAAO1B,IAAI,EAA5B,SACE,8BACGwqC,EAAwB58B,QACvB,cAAC,GAAD,CAAe+X,UAAW3B,KAE1B,qBAAKpkB,UAAWJ,EAAQgD,KAAxB,SACE,eAACiZ,GAAA,EAAD,CAAO7b,UAAWJ,EAAQkD,MAA1B,UACE,cAAC,GAAD,CACEjH,MAAM,mHAEN0nB,cAAejd,IAEjB,qBAAKtG,UAAWJ,EAAQgvB,IAAxB,SACE,eAACU,GAAA,EAAD,CACE55B,MAAOsH,EACPuU,SA1BA,SAAC4C,EAAGze,GACtBu0C,EAAUv0C,IA0BQ65B,eAAe,UACfC,UAAU,UACVC,UAAQ,EACR7wB,QAAQ,YANV,UAQE,cAAC8wB,GAAA,EAAD,CAAK/5B,MAAM,2BAAOD,MAAM,SACxB,cAACg6B,GAAA,EAAD,CAAK/5B,MAAM,iCAAQD,MAAM,SACzB,cAACg6B,GAAA,EAAD,CAAK/5B,MAAM,eAAKD,MAAM,gBAI1B,cAAC2xB,GAAA,EAAD,CAAgB5mB,MAAO,CAAEvB,QAAS,UAAlC,SACE,eAACooB,GAAA,EAAD,CACEtnB,UAAWJ,EAAQimB,MACnB/pB,KAAM,SACN2E,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CACEvG,QAASA,EACTya,MAAOA,EACP6J,QAASA,EACTC,cA9GI,SAAC/lB,EAAOymB,GAEhCqB,EADchC,IAAYW,GAAsB,QAAVxK,EACrB,OAAS,OAC1B8L,EAAWtB,IA4GS0C,SAAUhB,EAAK3Y,OACfwW,UAAWA,KAEb,eAACoD,GAAA,EAAD,WACGjB,EAAKrmB,KAAI,SAACunB,GACT,OACE,eAACnD,GAAA,EAAD,CACEqD,OAAK,EACLC,UAAW,EAEXnnB,MAAO,CAAE0F,aAAc,IACvBhF,QAAS,SAACgT,GAAD,OAxElB,SAACA,EAAGsT,GACI,OAArBtT,EAAE2P,OAAO+D,SACXuiB,EAAa3iB,GAsE2BK,CAAW3T,EAAGsT,IALhC,UAOE,cAACjD,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGyQ,GACC,IAAIkE,KAAK4T,EAAIlV,MAAMwB,mBACjB,YAIN,eAACyQ,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,cAA4BuoB,EAAIhqB,QAChC,cAAC+mB,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACG4nB,GAAMW,EAAIzqB,QAEb,cAACwnB,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGyQ,GACCnP,OAAOinB,EAAI1S,OAAOyZ,oBAItB,cAAChK,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACE,mBACEc,UAAU,uBACVS,MAAO,CAAEW,OAAQ,WACjBD,QAAS,kBAAMipC,EAAa3iB,IAH9B,sBAtBGA,EAAIvW,QAiCbqV,EAAK3Y,SAAWg9B,EAAwB58B,SACxC,cAACsW,GAAA,EAAD,CAAU7jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACkhB,GAAA,EAAD,CACE2D,QAAS,EACT1nB,MAAO,CAAEgkB,UAAW,UAFtB,SAIE,cAACvjB,EAAA,EAAD,CAAYtC,QAAQ,KAApB,+KASZ,cAAC,GAAD,CACEomB,MAAOyB,EACP1B,iBApKO,SAAC3mB,EAAOgqB,GAC/BhC,EAAQgC,IAoKQnD,wBAjKc,SAAC7mB,GAC/BkoB,EAAYloB,EAAM0lB,OAAOpuB,OACzB0wB,EAAQ,IAgKQlB,KAAMA,EACNC,YAAakB,gBCjPlBtnB,gBAAW,SAACC,GAAD,MAAY,CACpC4D,KAAM,CACJgC,MAAO,QAET9B,MAAO,CACL8B,MAAO,OACP4D,aAAcxJ,EAAM2F,QAAQ,IAE9BkhB,MAAO,CACLhe,SAAU,SCLRkB,GAAYhK,aAAW,SAACC,GAAD,MAAY,CACvC0qC,IAAK,CACH9kC,MAAO,GACPtB,OAAQ,GACR3C,aAAc,GACdkD,WAAY,IAEdb,KAAM,CACJ4B,MAAO,GACPtB,OAAQ,GACR3C,aAAc,GACdS,OAAQ,WAEVuoC,KAAM,CACJvqC,QAAS,OACTE,WAAY,cAID,SAAS8Q,GAAT,GAA4C,IAAtBgZ,EAAqB,EAArBA,OAAQ9Y,EAAa,EAAbA,UACrC1Q,EAAUmJ,KAChB,EAAkCgF,qBAAlC,oBAAO67B,EAAP,KAAkBC,EAAlB,KAEMC,EAAS,SAACC,GACdF,EAAaE,IAKf,OAFAx2B,qBAAU,cAAU,IAGlB,eAAClT,EAAA,EAAD,CAAMpB,WAAS,EAAC0F,QAAS,EAAzB,UACE,eAACtE,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAIN,UAAWJ,EAAQ+pC,KAAtC,UACE,cAACn4B,GAAA,EAAD,CACE2jB,UAAQ,EACRx/B,MAAM,2BACND,MAAO0zB,EAAOyC,KAAKpuB,MAAQ,IAC3BmB,QAAQ,WACR8S,WAAS,EACT5V,KAAK,UAEP,qBACEqwB,IAAG,UAAK72B,EAASC,YAAd,YAA6B6zB,EAAOyC,KAAKO,MAC5CC,IAAKjD,EAAOyC,KAAKO,KACjBpsB,UAAWJ,EAAQ8pC,SAGvB,eAACrpC,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAIN,UAAWJ,EAAQ+pC,KAAtC,UACE,cAACn4B,GAAA,EAAD,CACE2jB,UAAQ,EACRx/B,MAAM,0DACND,MAAO0zB,EAAOiC,mBAAqB,IACnCzsB,QAAQ,WACR8S,WAAS,EACT5V,KAAK,UAEP,cAAC,mBAAD,CACEguC,OAAQ,kBAAMA,EAAO,sBACrBnuC,KAAMytB,EAAOiC,kBAFf,SAIE,mBACErrB,UAAU,uBACVS,MAAO,CAAEkF,YAAa,GAAIvE,OAAQ,WAFpC,SAIiB,sBAAdwoC,EAAoC,OAAS,cAIpD,eAACvpC,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAIN,UAAWJ,EAAQ+pC,KAAtC,UACE,cAACn4B,GAAA,EAAD,CACE2jB,UAAQ,EACRx/B,MAAM,0DACND,MAAO0zB,EAAOkD,eAAiB,IAC/B1tB,QAAQ,WACR8S,WAAS,EACT5V,KAAK,UAEP,cAAC,mBAAD,CACEguC,OAAQ,kBAAMA,EAAO,kBACrBnuC,KAAMytB,EAAOkD,cAFf,SAIE,mBACEtsB,UAAU,uBACVS,MAAO,CAAEkF,YAAa,GAAIvE,OAAQ,WAFpC,SAIiB,kBAAdwoC,EAAgC,OAAS,cAIhD,eAACvpC,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAIN,UAAWJ,EAAQ+pC,KAAtC,UACE,cAACn4B,GAAA,EAAD,CACE2jB,UAAQ,EACRx/B,MAAM,oDACND,MAAO0zB,EAAOmD,cAAgB,IAC9B3tB,QAAQ,WACR8S,WAAS,EACT5V,KAAK,UAEP,cAAC,mBAAD,CACEguC,OAAQ,kBAAMA,EAAO,iBACrBnuC,KAAMytB,EAAOmD,aAFf,SAIE,mBACEvsB,UAAU,uBACVS,MAAO,CAAEkF,YAAa,GAAIvE,OAAQ,WAFpC,SAIiB,iBAAdwoC,EAA+B,OAAS,cAK/C,cAACvpC,EAAA,EAAD,CAAM7C,MAAI,EAAC8C,GAAI,GAAf,SACE,cAACkR,GAAA,EAAD,CACE2jB,UAAQ,EACRx/B,MAAM,6CACND,MAAO0zB,EAAOsD,aAAe,IAC7B9tB,QAAQ,WACR8S,WAAS,EACT5V,KAAK,YAIT,cAACuE,EAAA,EAAD,CACE7C,MAAI,EACJ8C,GAAI,GACJG,MAAO,CAAErB,QAAS,OAAQC,eAAgB,iBAH5C,SAKE,cAACgC,EAAA,EAAD,CAAQzC,QAAQ,YAAY0C,MAAM,YAAYH,QAASmP,EAAvD,uDCzGR,IAAM8T,GAAY,CAChB,CACElT,GAAI,OACJvb,MAAO,yCAET,CACEub,GAAI,OACJvb,MAAO,kCAET,CACEub,GAAI,QACJvb,MAAO,qDAET,CAAEub,GAAI,aAAcvb,MAAO,0CAGvBoB,GAAc,CAClBC,SAAU,iCACVC,SAAU,iCACVE,OAAQ,wCAiLK8uB,GA9KE,WACf,IAAMrmB,EAAUd,KAChB,EAA0BiP,mBAAS,OAAnC,oBAAOsM,EAAP,KAAc6L,EAAd,KACA,EAA8BnY,mBAAS,QAAvC,oBAAOmW,EAAP,KAAgBiC,EAAhB,KACA,EAA4BpY,qBAA5B,oBAAOzH,EAAP,KACA,GADA,KACwByH,mBAAS,IAAjC,oBAAOmX,EAAP,KAAakB,EAAb,KACA,EAAgCrY,mBAASzY,EAASE,iBAAlD,oBAAO6wB,EAAP,KAAiBC,EAAjB,KACA,EAAwBvY,mBAAS,IAAjC,oBAAOwY,EAAP,KAAaC,EAAb,KACA,EAA0BzY,mBAAS,GAAnC,oBAAO0Y,EAAP,KAAcC,EAAd,KACM3a,EAAUyG,cA0BVq4B,EAAiBh9B,GAAO,CAC5BZ,OAAQ,MACRC,IAAI,QAAD,OAAUkB,GAA2B,CACtC8W,OACA7K,QACA6J,UACAmC,WACA/f,cAmBE4gB,EAAO,yCAAG,6BAAAhb,EAAA,sEACS2+B,EAAe1+B,UADxB,OACRm+B,EADQ,OAEd9jB,EAAQ8jB,EAAShuC,MACjBoqB,EAAS4jB,EAAS7jB,OAHJ,2CAAH,qDAUb,OAJAlT,qBAAU,WACR2T,MACC,CAAChC,EAAM7K,EAAO/T,EAAQ+f,IAGvB,mCACGrW,GAAc1a,EAAS0D,gBAAgBglC,YACtC,cAAC5W,GAAA,EAAD,CAAOtlB,UAAU,OAAO1B,IAAI,EAA5B,SACE,8BACGyqC,EAAe78B,QACd,cAAC,GAAD,CAAe+X,UAAW3B,KAE1B,qBAAKpkB,UAAWJ,EAAQgD,KAAxB,SACE,eAACiZ,GAAA,EAAD,CAAO7b,UAAWJ,EAAQkD,MAA1B,UACE,cAAC,GAAD,CACEjH,MAAM,2DACNonB,MApDJ,WACZlX,EAAQQ,KAAR,+CAqDgBgX,cAAejd,IAGjB,cAAC+gB,GAAA,EAAD,CAAgB5mB,MAAO,CAAEvB,QAAS,UAAlC,SACE,eAACooB,GAAA,EAAD,CACEtnB,UAAWJ,EAAQimB,MACnB/pB,KAAM,SACN2E,MAAO,CAAE0F,aAAc,IAHzB,UAKE,cAAC,GAAD,CACEvG,QAASA,EACTya,MAAOA,EACP6J,QAASA,EACTC,cAvFI,SAAC/lB,EAAOymB,GAEhCqB,EADchC,IAAYW,GAAsB,QAAVxK,EACrB,OAAS,OAC1B8L,EAAWtB,IAqFS0C,SAAUhB,EAAK3Y,OACfwW,UAAWA,KAEb,eAACoD,GAAA,EAAD,WACGjB,EAAKrmB,KAAI,SAACunB,GACT,OACE,eAACnD,GAAA,EAAD,CACEqD,OAAK,EACLC,UAAW,EAEXnnB,MAAO,CAAE0F,aAAc,IAJzB,UAME,cAACqe,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGuoB,EAAI4iB,aAEP,cAAC7lB,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGyQ,GACC,IAAIkE,KAAK4T,EAAIlV,MAAMwB,mBACjB,YAIN,cAACyQ,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGyQ,GACCnP,OAAOinB,EAAI1S,OAAOyZ,oBAGtB,cAAChK,GAAA,EAAD,CAAWtlB,QAAQ,OAAnB,SACGnI,GAAY0wB,EAAIwC,gBAnBdxC,EAAIvW,QAkCbqV,EAAK3Y,SAAWi9B,EAAe78B,SAC/B,cAACsW,GAAA,EAAD,CAAU7jB,MAAO,CAAE6C,OAAQ,IAA3B,SACE,cAACkhB,GAAA,EAAD,CACE2D,QAAS,EACT1nB,MAAO,CAAEgkB,UAAW,UAFtB,SAIE,cAACvjB,EAAA,EAAD,CAAYtC,QAAQ,KAApB,+KASZ,cAAC,GAAD,CACEomB,MAAOyB,EACP1B,iBA9IO,SAAC3mB,EAAOgqB,GAC/BhC,EAAQgC,IA8IQnD,wBA3Ic,SAAC7mB,GAC/BkoB,EAAYloB,EAAM0lB,OAAOpuB,OACzB0wB,EAAQ,IA0IQlB,KAAMA,EACNC,YAAakB,gBC7FlBykB,OA5Ef,SAAgB1hC,GACd,IAAIxJ,EAAUmJ,KAEV0J,EAAc5H,KAElB,OACE,qBAAK7K,UAAWJ,EAAQgD,KAAxB,SACE,qCACE,cAAC0P,GAAD,CAAQvG,QAAS3C,EAAM2C,UACvB,cAAC,GAAD,IACA,sBACE/L,UAAW0J,IAAW9J,EAAQ6E,QAAT,eAClB7E,EAAQkF,aAAe2N,EAAYjI,kBAFxC,UAKE,qBAAKxK,UAAWJ,EAAQ0F,cACxB,eAAC,IAAD,WACE,cAAC,IAAD,CAAOylC,KAAK,iBAAiBnvC,UAAW6hB,KAExC,cAAC,IAAD,CAAOstB,KAAK,iBAAiBnvC,UAAWovC,KACxC,cAAC,IAAD,CAAOD,KAAK,mBAAmBnvC,UAAWqvC,KAE1C,cAAC,IAAD,CAAOF,KAAK,qBAAqBnvC,UAAWsvC,KAC5C,cAAC,IAAD,CAAOH,KAAK,uBAAuBnvC,UAAWuvC,KAC9C,cAAC,IAAD,CACEJ,KAAK,0BACLnvC,UAAWwvC,KAGb,cAAC,IAAD,CAAOL,KAAK,qBAAqBnvC,UAAWyvC,KAC5C,cAAC,IAAD,CAAON,KAAK,uBAAuBnvC,UAAW0vC,KAC9C,cAAC,IAAD,CAAOP,KAAK,oBAAoBnvC,UAAWktC,KAE3C,cAAC,IAAD,CAAOiC,KAAK,mBAAmBnvC,UAAW2vC,KAC1C,cAAC,IAAD,CAAOR,KAAK,qBAAqBnvC,UAAW4vC,KAE5C,cAAC,IAAD,CAAOT,KAAK,iBAAiBnvC,UAAW6vC,KACxC,cAAC,IAAD,CAAOV,KAAK,mBAAmBnvC,UAAW8vC,KAC1C,cAAC,IAAD,CAAOX,KAAK,wBAAwBnvC,UAAW+vC,KAE/C,cAAC,IAAD,CAAOZ,KAAK,mBAAmBnvC,UAAWgwC,KAC1C,cAAC,IAAD,CAAOb,KAAK,qBAAqBnvC,UAAWiwC,KAE5C,cAAC,IAAD,CAAOd,KAAK,mBAAmBnvC,UAAWgwC,KAC1C,cAAC,IAAD,CAAOb,KAAK,qBAAqBnvC,UAAWiwC,KAE5C,cAAC,IAAD,CAAOd,KAAK,iBAAiBnvC,UAAWkwC,KACxC,cAAC,IAAD,CAAOf,KAAK,mBAAmBnvC,UAAWmwC,KAE1C,cAAC,IAAD,CAAOhB,KAAK,oBAAoBnvC,UAAWowC,KAC3C,cAAC,IAAD,CAAOjB,KAAK,sBAAsBnvC,UAAWqwC,KAC7C,cAAC,IAAD,CAAOlB,KAAK,oBAAoBnvC,UAAWswC,KAE3C,cAAC,IAAD,CAAOnB,KAAK,oBAAoBnvC,UAAWuwC,KAC3C,cAAC,IAAD,CAAOpB,KAAK,sBAAsBnvC,UAAWwwC,KAE7C,cAAC,IAAD,CAAOrB,KAAK,oBAAoBnvC,UAAW65B,KAC3C,cAAC,IAAD,CAAOsV,KAAK,sBAAsBnvC,UAAWywC,KAC7C,cAAC,IAAD,CAAOtB,KAAK,wBAAwBnvC,UAAW0wC,KAE/C,cAAC,IAAD,CAAOvB,KAAK,kBAAkBnvC,UAAW2wC,KACzC,cAAC,IAAD,CAAOxB,KAAK,oBAAoBnvC,UAAW4wC,KAE3C,cAAC,IAAD,CAAOzB,KAAK,eAAenvC,UAAW6wC,KACtC,cAAC,IAAD,CAAO1B,KAAK,gBAAgBnvC,UAAW8wC,KAEvC,cAAC,IAAD,CAAO3B,KAAK,eAAenvC,UAAW+wC,KACtC,cAAC,IAAD,CAAO5B,KAAK,sBAAsBnvC,UAAWgxC,KAC7C,cAAC,IAAD,CAAO7B,KAAK,qBAAqBnvC,UAAWouC,iBC5GzCjrC,gBAAW,SAAAC,GAAK,MAAK,CAClCC,UAAW,CACTqE,OAAQ,QACRsB,MAAO,QACPxF,QAAS,OACT8H,cAAe,SACf7H,eAAgB,SAChBC,WAAY,SACZyB,gBAAiB/B,EAAMQ,QAAQ+B,QAAQQ,KACvCnB,SAAU,WACVE,IAAK,EACLE,KAAM,GAER0E,SAAS,aACPtG,QAAS,OACTE,WAAY,SACZkJ,aAAcxJ,EAAM2F,QAAQ,KAC3B3F,EAAM8G,YAAYC,KAAK,MAAQ,CAC9B3G,QAAS,SAGbytC,aAAc,CACZjnC,WAAY,IACZtE,MAAO,QACPuC,WAAY7E,EAAM2F,QAAQ,IAE5BmoC,aAAc,CACZloC,MAAO,GACPe,YAAa3G,EAAM2F,QAAQ,IAE7BooC,UAAW,CACTrsC,UAAW1B,EAAMsD,cAAcE,WAC/BpD,QAAS,OACT8H,cAAe,SACf5H,WAAY,SACZswB,WAAY5wB,EAAM2F,QAAQ,GAC1BsU,cAAeja,EAAM2F,QAAQ,GAC7BnB,YAAaxE,EAAM2F,QAAQ,GAC3BwB,aAAcnH,EAAM2F,QAAQ,GAC5BH,SAAU,KAEZwoC,QAAS,CACPxkC,aAAcxJ,EAAM2F,QAAQ,IAC5B8f,UAAW,UAEbwoB,UAAW,CACTvpC,SAAU,IACVkC,WAAY,KAEdsnC,WAAY,CACVtnC,WAAY,IACZtE,MAAOtC,EAAMQ,QAAQ7D,KAAKwG,MAE5BgrC,WAAY,CACVzsC,UAAW1B,EAAMsD,cAAcC,OAC/BkG,cAAe,OACf/E,SAAU,QC1DC,OAA0B,iCCW1B,SAAS+G,KACtB,IAAI7K,EAAUmJ,KAEd,OACE,eAAC1I,EAAA,EAAD,CAAMpB,WAAS,EAACe,UAAWJ,EAAQX,UAAnC,UACE,sBAAKe,UAAWJ,EAAQ8F,SAAxB,UACE,qBAAK1F,UAAWJ,EAAQktC,aAAc3gB,IAAKC,GAAMC,IAAI,SACrD,cAACnrB,EAAA,EAAD,CAAYtC,QAAQ,KAAK0C,MAAM,QAAQtB,UAAWJ,EAAQitC,aAA1D,+BAIF,eAAChxB,GAAA,EAAD,CAAOjc,QAAS,CAAEgD,KAAMhD,EAAQmtC,WAAhC,UACE,cAAC7rC,EAAA,EAAD,CACEtC,QAAQ,KACR0C,MAAM,UACNtB,UAAW0J,IAAW9J,EAAQotC,QAASptC,EAAQqtC,WAHjD,iBAOA,cAAC/rC,EAAA,EAAD,CAAYtC,QAAQ,KAAK0C,MAAM,UAAUtB,UAAWJ,EAAQotC,QAA5D,2EAGA,cAAC9rC,EAAA,EAAD,CACEtC,QAAQ,KACR0C,MAAM,OACN6H,gBAAgB,YAChBnJ,UAAW0J,IAAW9J,EAAQotC,QAASptC,EAAQstC,YAJjD,wDAQA,cAAC7rC,EAAA,EAAD,CACEzC,QAAQ,YACR0C,MAAM,UACN1F,UAAWyb,IACXE,GAAG,IACHzb,KAAK,QACLkE,UAAWJ,EAAQutC,WANrB,gCCvCOpuC,oBAAW,SAACC,GAAD,YAAY,CACpCC,UAAW,CACTqE,OAAQ,QACRsB,MAAO,QACPxF,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZsB,SAAU,WACVE,IAAK,EACLE,KAAM,EACNga,SAAU,UAEZnf,MAAO,CACLuD,QAAS,OACTE,WAAY,WACZkJ,aAAc,GACd,OAAQ,CACND,OAAQ,UAEV,OAAQ,CACN+f,KAAM,IAGV8kB,gBAAiB,CACfxsC,SAAU,WACVgE,MAAO,OACPtB,OAAQ,OACR/F,OAAQ,mBAEV8vC,mBAAiB,GACfzsC,SAAU,WACVgE,MAAO,MACPtB,OAAQ,OACRlE,QAAS,OACT8H,cAAe,SACf7H,eAAgB,SAChBC,WAAY,UAPG,cAQdN,EAAM8G,YAAYC,KAAK,MAAQ,CAC9BnB,MAAO,QATM,cAWd5F,EAAM8G,YAAYC,KAAK,MAAQ,CAC9B3G,QAAS,SAZI,GAejBkuC,cAAe,CACb1oC,MAAO,IACP4D,aAAcxJ,EAAM2F,QAAQ,GAC5B/D,SAAU,YAEZisC,aAAa,aACXjsC,SAAU,WACVU,MAAO,QACPsE,WAAY,IACZlC,SAAU,IACT1E,EAAM8G,YAAYC,KAAK,MAAQ,CAC9BrC,SAAU,KAGd6pC,cAAc,aACZ3oC,MAAO,MACPtB,OAAQ,OACRlE,QAAS,OACT8H,cAAe,SACf7H,eAAgB,SAChBC,WAAY,UACXN,EAAM8G,YAAYC,KAAK,MAAQ,CAC9BnB,MAAO,QAGX4oC,KAAM,CACJ5oC,MAAO,KAETgqB,IAAK,CACHhpB,WAAY,IACZlC,SAAU,IAEZ+pC,SAAU,CACR7nC,WAAY,IACZ6e,UAAW,SACXrd,UAAWpI,EAAM2F,QAAQ,IAE3B+oC,YAAa,CACX9nC,WAAY,IACZ6e,UAAW,SACXrd,UAAWpI,EAAM2F,QAAQ,IAE3BgpC,aAAc,CACZvmC,UAAWpI,EAAM2F,QAAQ,GACzBjE,UAAW1B,EAAMsD,cAAcC,OAC/BxB,gBAAiB,QACjB6D,MAAO,OACP6D,cAAe,QAEjBmlC,qBAAsB,CACpBxmC,UAAW,GAEbymC,WAAY,CACVjpC,MAAO,GACPe,YAAa3G,EAAM2F,QAAQ,IAE7BmpC,wBAAyB,CACvB1mC,UAAWpI,EAAM2F,QAAQ,KACzBrB,OAAQ,GACRlE,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAEdyuC,oBAAqB,CACnBzqC,OAAQ,GACRmF,cAAe,QAEjBulC,qBAAsB,CACpB5mC,UAAWpI,EAAM2F,QAAQ,GACzB6D,aAAcxJ,EAAM2F,QAAQ,GAC5BvF,QAAS,OACTE,WAAY,UAEd2uC,gBAAiB,CACfzqC,YAAaxE,EAAM2F,QAAQ,GAC3BwB,aAAcnH,EAAM2F,QAAQ,IAE9BupC,YAAa,CACXxpC,SAAU,EACVpB,OAAQ,EACRvC,gBAAiB/B,EAAMQ,QAAQ7D,KAAKwG,KAAO,MAE7CgsC,aAAc,CACZ1pB,UAAW,UAEb2pB,mBAAoB,CAClB,WAAY,CACVC,kBAAmBrvC,EAAMQ,QAAQ+B,QAAQ7B,OAE3C,UAAW,CACT2uC,kBAAmBrvC,EAAMQ,QAAQ+B,QAAQQ,MAE3C,iBAAkB,CAChBssC,kBAAkB,GAAD,OAAKrvC,EAAMQ,QAAQ+B,QAAQ7B,MAA3B,iBAGrB4uC,UAAW,CACTD,kBAAmBrvC,EAAMQ,QAAQ4C,WAAW1C,OAE9C6uC,YAAa,CACX3pC,MAAO,OACPwC,UAAWpI,EAAM2F,QAAQ,GACzBvF,QAAS,OACTC,eAAgB,gBAChBC,WAAY,UAEdkvC,aAAc,CACZ/lC,cAAe,OACf7C,WAAY,KAEd6oC,YAAa,CACX5qC,WAAY7E,EAAM2F,QAAQ,IAE5B+pC,UAAU,aACRtnC,UAAWpI,EAAM2F,QAAQ,GACzBkB,WAAY,UACX7G,EAAM8G,YAAYa,GAAG,MAAQ,CAC5B/F,SAAU,WACVob,OAAQhd,EAAM2F,QAAQ,SCpKb,OAA0B,iCCA1B,OAA0B,gCCmJ1ByT,oBAlIf,SAAehP,GACb,IAAMxJ,EAAUmJ,KACV4J,EAAejH,KACfE,EAAeiC,GAAO,CAC1BZ,OAAQ,OACRC,IAAK,eAEP,EAAkCa,oBAAS,GAA3C,oBAAO4gC,EAAP,KAAkB3iC,EAAlB,KACA,EAA0B+B,mBAAS,MAAnC,oBAAc9B,GAAd,WAEA,EAA0C8B,mBAAS,IAAnD,oBAAO6gC,EAAP,KAAsBC,EAAtB,KACA,EAA0C9gC,mBAAS,IAAnD,oBAAO+gC,EAAP,KAAsBC,EAAtB,KAoBA,OAJAx7B,qBAAU,WACRy7B,OACC,IAGD,eAAC3uC,EAAA,EAAD,CAAMpB,WAAS,EAACe,UAAWJ,EAAQX,UAAnC,UACE,sBAAKe,UAAWJ,EAAQytC,kBAAxB,UACE,qBAAKlhB,IAAK8iB,GAAM5iB,IAAI,OAAOrsB,UAAWJ,EAAQwtC,kBAC9C,qBAAKjhB,IAAKC,GAAMC,IAAI,OAAOrsB,UAAWJ,EAAQ0tC,gBAC9C,cAACpsC,EAAA,EAAD,CAAYlB,UAAWJ,EAAQitC,aAA/B,+HAIF,sBAAK7sC,UAAWJ,EAAQ2tC,cAAxB,UACE,qBAAKvtC,UAAWJ,EAAQ4tC,KAAxB,SACE,eAAC,IAAM1xB,SAAP,WACE,sBAAK9b,UAAWJ,EAAQ/D,MAAxB,UACE,cAAC8Y,GAAA,EAAD,IACA,cAACzT,EAAA,EAAD,CAAYtC,QAAQ,KAAKoB,UAAWJ,EAAQ6tC,SAA5C,kFAGA,cAAC94B,GAAA,EAAD,OAGF,cAACnD,GAAA,EAAD,CACE7b,MAAM,0DACNiJ,QAAQ,WACRsS,GAAG,WACHa,WAAY,CACVnS,QAAS,CACPsvC,MAAOtvC,EAAQ0uC,YAGnB54C,MAAOk5C,EACPr9B,SAAU,SAAC4C,GAAD,OAAO06B,EAAiB16B,EAAE2P,OAAOpuB,QAC3C6S,OAAO,SACPmJ,WAAS,IAEX,cAACF,GAAA,EAAD,CACE7b,MAAM,+CACNiJ,QAAQ,WACRsS,GAAG,WACHa,WAAY,CACVnS,QAAS,CACPsvC,MAAOtvC,EAAQ0uC,YAGnB54C,MAAOo5C,EACPv9B,SAAU,SAAC4C,GAAD,OAAO46B,EAAiB56B,EAAE2P,OAAOpuB,QAC3C6S,OAAO,SACPvL,KAAK,WACL0U,WAAS,EACTy9B,WAlES,SAAU/wC,GACT,KAAhBA,EAAMgxC,OAAgBN,GAAiBF,GACzCjjC,GACEC,EACA+G,EACAi8B,EACAE,EACA1lC,EAAM2C,QACNC,EACAC,MA2DI,qBAAKjM,UAAWJ,EAAQ2uC,YAAxB,SACGI,EACC,cAACnmB,GAAA,EAAD,CAAkB1sB,KAAM,GAAIkE,UAAWJ,EAAQ6uC,cAE/C,cAACptC,EAAA,EAAD,CACEqQ,WAAS,EACTyjB,SAC2B,IAAzByZ,EAAchhC,QAAyC,IAAzBkhC,EAAclhC,OAE9CzM,QAAS,kBACPwK,GACEC,EACA+G,EACAi8B,EACAE,EACA1lC,EAAM2C,QACNC,EACAC,IAGJrN,QAAQ,YACR0C,MAAM,UACNxF,KAAK,QAlBP,yFAiCR,cAACoF,EAAA,EAAD,CACEI,MAAM,UACNtB,UAAWJ,EAAQ8uC,UACnB9vC,QAAQ,UAHV,6T,kCC1HO,SAASywC,KACtB,IAAM/jC,EAAoBG,KAApBH,gBAEN,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgkC,OAAK,EAACvE,KAAK,IAAIz5B,OAAQ,kBAAM,cAAC,IAAD,CAAUiG,GAAG,sBACjD,cAAC,IAAD,CACE+3B,OAAK,EACLvE,KAAK,OACLz5B,OAAQ,kBAAM,cAAC,IAAD,CAAUiG,GAAG,sBAG7B,cAACg4B,EAAD,CAAcxE,KAAK,OAAOnvC,UAAWkvC,KACrC,cAAC0E,EAAD,CAAazE,KAAK,SAASnvC,UAAW6zC,KACtC,cAAC,IAAD,CAAO7zC,UAAW6O,UAOxB,SAAS8kC,EAAT,GAA+C,IAAvB3zC,EAAsB,EAAtBA,UAAc8zC,EAAQ,kBAC5C,OACE,cAAC,IAAD,2BACMA,GADN,IAEEp+B,OAAQ,SAAClI,GAAD,OACNkC,EACElB,IAAMulC,cAAc/zC,EAAWwN,GAE/B,cAAC,IAAD,CACEmO,GAAI,CACFR,SAAU,SACVja,MAAO,CACL8oB,KAAMxc,EAAM0F,iBAU5B,SAAS0gC,EAAT,GAA8C,IAAvB5zC,EAAsB,EAAtBA,UAAc8zC,EAAQ,kBAC3C,OACE,cAAC,IAAD,2BACMA,GADN,IAEEp+B,OAAQ,SAAClI,GAAD,OACNkC,EACE,cAAC,IAAD,CACEiM,GAAI,CACFR,SAAU,OAId3M,IAAMulC,cAAc/zC,EAAWwN,QCzDvBmL,QACW,cAA7B1F,OAAOC,SAAS8gC,UAEe,UAA7B/gC,OAAOC,SAAS8gC,UAEhB/gC,OAAOC,SAAS8gC,SAASC,MACvB,2D,sDCbAC,GAAM7qC,aAAO,CAAE8qC,QAAQ,GAAD,mBAAMC,eAAYD,SAAlB,CAA2BE,WAMxCC,OAJf,SAAa9mC,GACX,OAAO,cAAC+mC,GAAA,EAAD,CAAgBL,IAAKA,GAArB,SAA2B1mC,EAAMF,Y,wCCW1C+/B,KAAQmH,YAAY,CAAEC,QAAS,iBAAkBC,kBAAkB,IAEnEC,IAASj/B,OACP,cAAC,KAAD,CAAyBk/B,MAAOC,KAAavH,OAAO,KAApD,SACE,cAAC,IAAD,CAAUtrC,MAAOA,EAAjB,SACE,cAAC8M,GAAD,UACE,cAACc,GAAD,UACE,cAACklC,EAAA,EAAD,CAAe1xC,MAAO2xC,EAAOtuC,QAA7B,SACE,eAAC,GAAD,WACE,cAACuuC,EAAA,EAAD,IACA,cAACvB,GAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,iBAOZwB,SAASC,eAAe,SF2FpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.973ceb3b.chunk.js","sourcesContent":["const Constant = {\r\n  // API_ADDRESS: \"http://185.204.197.95:5000/\",\r\n  API_ADDRESS: \"http://account.toosbloor.ir\",\r\n  TABLE_PAGE_SIZE: 100,\r\n  EMPLOYEE_CONTACRT: [\r\n    { value: \"FACTORY1\", label: \"کارخانه یک\" },\r\n    { value: \"FACTORY2\", label: \"کارخانه دو\" },\r\n    { value: \"DEPOT\", label: \"انبار\" },\r\n  ],\r\n  TRAFFIC_STATUS: {\r\n    PRESENT: \"حاضر\",\r\n    APSET: \"غایب\",\r\n  },\r\n  UNITS_MAP: {\r\n    KILOGRAM: \"کیلوگرم\",\r\n    GRAM: \"گرم\",\r\n    TON: \"تن\",\r\n    BOX: \"کارتن\",\r\n    SHEL: \"شل\",\r\n    CUBICMETERS: \"مترمکعب\",\r\n    PALLET: \"پالت\",\r\n  },\r\n  ACTION_TYPES: {\r\n    SHOW_ALERT: \"SHOW_ALERT\",\r\n    HIDE_ALERT: \"HIDE_ALERT\",\r\n    SHOW_DIALOG: \"SHOW_DIALOG\",\r\n    HIDE_DIALOG: \"HIDE_DIALOG\",\r\n    LOG_IN_USER: \"LOG_IN_USER\",\r\n    LOG_OUT_USER: \"LOG_OUT_USER\",\r\n    GET_UNITS: \"GET_UNITS\",\r\n  },\r\n  PERSON_TYPE: {\r\n    EMPLOYEE: \"employee\",\r\n    CUSTOMER: \"customer\",\r\n    USER: \"user\",\r\n    DRIVER: \"driver\",\r\n    PERSON: \"person\",\r\n  },\r\n  STORAGE: {\r\n    CURRENT_USER: \"CURRENT_USER\",\r\n    TOKEN: \"TOKEN\",\r\n    MODE: \"MODE\",\r\n    CURRENT_LINK: \"CURRENT_LINK\",\r\n    PRODUCT_UNITS: \"PRODUCT_UNITS\",\r\n  },\r\n  VALIDATION: {\r\n    REQUIRED: \"این فیلد الزامی است\",\r\n    MOBILE_NUMBER: \"موبایل باید 11 عدد داشته باشد\",\r\n    PASSWORD: \"رمز عبور باید حداقل 5 حرف یا رقم باشد\",\r\n    CARD_NUMBER: \"شماره کارت باید 16 رقم باشد\",\r\n    POSITIVE_NUMBER: \"این عدد باید مثبت باشد\",\r\n  },\r\n  MESSAGES: {},\r\n  ERROR_MESSAGE: {\r\n    BAD_CREDENTIAL: \"نام کاربری یا رمز عبور اشتباه است\",\r\n    ACCESS_DENIED: \"شما دسترسی لازم برای تغییر با نمایش این قسمت را ندارید\",\r\n  },\r\n  PERSON_STATUS: {\r\n    DEBTOR: \"بدهکار\",\r\n    NODEBT: \"بی حساب\",\r\n    CREDITOR: \"طلبکار\",\r\n  },\r\n  PAYMENT_TYPE: {\r\n    INCOME: \"دریافتی\",\r\n    OUTCOME: \"پرداختی\",\r\n    ALL: \"دریافتی و پرداختی\",\r\n  },\r\n  INVOICE_TYPE: {\r\n    SELL: \"فروش\",\r\n    BUY: \"خرید\",\r\n  },\r\n  ALL_PERMISSIONS: {\r\n    ATTENDANCE_DEPOT_SHOW: \"ATTENDANCE_DEPOT_SHOW\",\r\n    ATTENDANCE_FACTORY1_SHOW: \"ATTENDANCE_FACTORY1_SHOW\",\r\n    ATTENDANCE_FACTORY2_SHOW: \"ATTENDANCE_FACTORY2_SHOW\",\r\n\r\n    ATTENDANCE_DEPOT_EDIT: \"ATTENDANCE_DEPOT_EDIT\",\r\n    ATTENDANCE_FACTORY1_EDIT: \"ATTENDANCE_FACTORY1_EDIT\",\r\n    ATTENDANCE_FACTORY2_EDIT: \"ATTENDANCE_FACTORY2_EDIT\",\r\n\r\n    ATTENDANCE_ADMIN: \"ATTENDANCE_ADMIN\",\r\n    USER_SHOW: \"USER_SHOW\",\r\n    USER_EDIT: \"USER_EDIT\",\r\n    USER_DELETE: \"USER_DELETE\",\r\n    CUSTOMER_SHOW: \"CUSTOMER_SHOW\",\r\n    CUSTOMER_EDIT: \"CUSTOMER_EDIT\",\r\n    CUSTOMER_DELETE: \"CUSTOMER_DELETE\",\r\n    DRIVER_SHOW: \"DRIVER_SHOW\",\r\n    DRIVER_EDIT: \"DRIVER_EDIT\",\r\n    DRIVER_DELETE: \"DRIVER_DELETE\",\r\n    EMPLOYEE_SHOW: \"EMPLOYEE_SHOW\",\r\n    EMPLOYEE_EDIT: \"EMPLOYEE_EDIT\",\r\n    EMPLOYEE_DELETE: \"EMPLOYEE_DELETE\",\r\n    PRODUCT_SHOW: \"PRODUCT_SHOW\",\r\n    PRODUCT_EDIT: \"PRODUCT_EDIT\",\r\n    PRODUCT_DELETE: \"PRODUCT_DELETE\",\r\n    DEPOT_SHOW: \"DEPOT_SHOW\",\r\n    DEPOT_EDIT: \"DEPOT_EDIT\",\r\n    DEPOT_DELETE: \"DEPOT_DELETE\",\r\n    ACCOUNT_SHOW: \"ACCOUNT_SHOW\",\r\n    ACCOUNT_EDIT: \"ACCOUNT_EDIT\",\r\n    ACCOUNT_DELETE: \"ACCOUNT_DELETE\",\r\n    PAYMENT_SHOW: \"PAYMENT_SHOW\",\r\n    PAYMENT_EDIT: \"PAYMENT_EDIT\",\r\n    INVOICE_SHOW: \"INVOICE_SHOW\",\r\n    INVOICE_EDIT: \"INVOICE_EDIT\",\r\n    CASH_DESK_SHOW: \"CASH_DESK_SHOW\",\r\n    CASH_DESK_EDIT: \"CASH_DESK_EDIT\",\r\n    CASH_DESK_DELETE: \"CASH_DESK_DELETE\",\r\n    CHEQUE_SHOW: \"CHEQUE_SHOW:\",\r\n    CHEQUE_EDIT: \"CHEQUE_EDIT\",\r\n    CHEQUE_DELETE: \"CHEQUE_DELETE\",\r\n  },\r\n  PERMISSIONS: [\r\n    { value: \"ATTENDANCE_ADMIN\", label: \"ویرایش حضور و غیاب\" },\r\n\r\n    { value: \"ATTENDANCE_FACTORY1_EDIT\", label: \"1 ثبت حضور و غیاب کارخانه \" },\r\n    {\r\n      value: \"ATTENDANCE_FACTORY1_SHOW\",\r\n      label: \"1 لیست حضور و غیاب کارخانه  \",\r\n    },\r\n    { value: \"ATTENDANCE_FACTORY2_EDIT\", label: \"2 ثبت حضور و غیاب کارخانه \" },\r\n    { value: \"ATTENDANCE_FACTORY2_SHOW\", label: \"2لیست حضور و غیاب کارخانه  \" },\r\n    { value: \"ATTENDANCE_DEPOT_SHOW\", label: \"لیست حضور و غیاب  انبار\" },\r\n    { value: \"ATTENDANCE_DEPOT_EDIT\", label: \"ثبت حضور و غیاب انبار \" },\r\n    { value: \"PAYMENT_SHOW\", label: \"لیست پرداختی و دریافتی\" },\r\n    { value: \"PAYMENT_EDIT\", label: \"ویرایش پرداختی و دریافتی \" },\r\n    { value: \"INVOICE_SHOW\", label: \"لیست فاکتور ها\" },\r\n    { value: \"INVOICE_EDIT\", label: \"ویرایش فاکتور ها\" },\r\n    { value: \"CASH_DESK_SHOW\", label: \"لیست صندوق ها\" },\r\n    { value: \"CASH_DESK_EDIT\", label: \"ویرایش صندوق ها\" },\r\n    { value: \"CASH_DESK_DELETE\", label: \"حذف صندوق ها\" },\r\n    { value: \"CHEQUE_SHOW\", label: \"لیست چک ها\" },\r\n    { value: \"CHEQUE_EDIT\", label: \"ویرایش چک ها\" },\r\n    { value: \"CHEQUE_DELETE\", label: \"حذف چک ها\" },\r\n    { value: \"USER_SHOW\", label: \"لیست کاربران\" },\r\n    { value: \"USER_EDIT\", label: \"ویرایش کاربران\" },\r\n    { value: \"USER_DELETE\", label: \"حذف کاربران\" },\r\n    { value: \"EMPLOYEE_SHOW\", label: \"لیست پرسنل\" },\r\n    { value: \"EMPLOYEE_EDIT\", label: \"ویرایش پرسنل\" },\r\n    { value: \"EMPLOYEE_DELETE\", label: \"حذف پرسنل\" },\r\n    { value: \"PRODUCT_SHOW\", label: \"لیست محصولات\" },\r\n    { value: \"PRODUCT_EDIT\", label: \"ویرایش محصولات\" },\r\n    { value: \"PRODUCT_DELETE\", label: \"حذف محصولات\" },\r\n    { value: \"CUSTOMER_SHOW\", label: \"لیست مشتریان\" },\r\n    { value: \"CUSTOMER_EDIT\", label: \"ویرایش مشتریان\" },\r\n    { value: \"CUSTOMER_DELETE\", label: \"حذف مشتریان\" },\r\n    { value: \"DRIVER_SHOW\", label: \"لیست رانندگان\" },\r\n    { value: \"DRIVER_EDIT\", label: \"ویرایش رانندگان\" },\r\n    { value: \"DRIVER_DELETE\", label: \"حذف رانندگان\" },\r\n    { value: \"DEPOT_SHOW\", label: \"لیست انبارها\" },\r\n    { value: \"DEPOT_EDIT\", label: \"ویرایش انبارها\" },\r\n    { value: \"DEPOT_DELETE\", label: \"حذف انبارها\" },\r\n    { value: \"ACCOUNT_SHOW\", label: \"لیست حساب ها\" },\r\n    { value: \"ACCOUNT_EDIT\", label: \"ویرایش حساب ها\" },\r\n  ],\r\n  BANK_TRANSACTION_TYPE: [\r\n    { value: \"کارت به کارت\", label: \"کارت به کارت\" },\r\n    { value: \"دستگاه پوز\", label: \"دستگاه پوز\" },\r\n    { value: \"پایا/ساتنا\", label: \"پایا/ساتنا\" },\r\n    { value: \"واریز به/از حساب\", label: \"واریز به/از حساب\" },\r\n  ],\r\n};\r\nexport default Constant;\r\n","import Constant from \"../../helpers/constant\";\r\n\r\nconst initialState = {\r\n  show: false,\r\n  text: \"\",\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case Constant.ACTION_TYPES.SHOW_ALERT: {\r\n      return {\r\n        ...state,\r\n        ...action.option,\r\n        show: true,\r\n      };\r\n    }\r\n    case Constant.ACTION_TYPES.HIDE_ALERT: {\r\n      return {\r\n        ...state,\r\n        show: false,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import Constant from \"../../helpers/constant\";\r\nconst initialState = {\r\n  show: false,\r\n  component: null,\r\n  title: \"\",\r\n  size: \"8\",\r\n  disableCloseButton: false,\r\n  confirm: false,\r\n  names: [],\r\n  onAction: () => {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case Constant.ACTION_TYPES.SHOW_DIALOG: {\r\n      return {\r\n        ...state,\r\n        ...action.option,\r\n        names: [...state.names, action.option],\r\n      };\r\n    }\r\n    case Constant.ACTION_TYPES.HIDE_DIALOG: {\r\n      return {\r\n        names: state.names.filter((item) => item.name !== action.option.name),\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const Storage = {\r\n  setItem(key, data) {\r\n    if (typeof data === \"object\") {\r\n      data = JSON.stringify(data);\r\n    }\r\n    localStorage.setItem(key, data);\r\n  },\r\n\r\n  getItem(key) {\r\n    let obj = null;\r\n    const value = localStorage.getItem(key);\r\n    if (typeof value === \"object\") {\r\n      obj = JSON.parse(value);\r\n    } else {\r\n      obj = value;\r\n    }\r\n\r\n    return obj;\r\n  },\r\n\r\n  removeItem(key) {\r\n    localStorage.removeItem(key);\r\n  },\r\n};\r\n\r\nexport default Storage;\r\n","import Constant from \"../../helpers/constant\";\r\nimport Storage from \"../../services/storage\";\r\n\r\nconst initialState = JSON.parse(\r\n  Storage.getItem(Constant.STORAGE.PRODUCT_UNITS),\r\n);\r\n\r\nfunction unitReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case Constant.ACTION_TYPES.GET_UNITS: {\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default unitReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport alert from \"./AlertReducer\";\r\nimport dialog from \"./dialogReducer\";\r\nimport unit from \"./unitReducer\";\r\n\r\nconst appReducer = combineReducers({\r\n  alert,\r\n  dialog,\r\n  unit,\r\n});\r\n\r\nconst rootReducer = (state, action) => {\r\n  return appReducer(state, action);\r\n};\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\n\r\nimport rootReducer from \"../reducers\"\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport default store\r\n","import Constant from \"../../helpers/constant\";\r\nimport store from \"../store\";\r\n\r\nexport default {\r\n  show(option) {\r\n    store.dispatch({ type: Constant.ACTION_TYPES.SHOW_ALERT, option });\r\n  },\r\n\r\n  hide() {\r\n    store.dispatch({ type: Constant.ACTION_TYPES.HIDE_ALERT });\r\n  },\r\n};\r\n","import React from \"react\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nimport AlertAction from \"../../redux/actions/AlertAction\";\r\n\r\nconst Alert = function () {\r\n  const { show, text, type } = useSelector((state) => state.alert);\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    AlertAction.hide();\r\n  };\r\n\r\n  return (\r\n    <Snackbar open={show} autoHideDuration={6000} onClose={handleClose}>\r\n      <MuiAlert\r\n        elevation={6}\r\n        variant=\"filled\"\r\n        onClose={handleClose}\r\n        severity={type}\r\n      >\r\n        {text}\r\n      </MuiAlert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import Constant from \"../../helpers/constant\";\r\nimport store from \"../store\";\r\n\r\nexport default {\r\n  show(option) {\r\n    store.dispatch({ type: Constant.ACTION_TYPES.SHOW_DIALOG, option });\r\n  },\r\n\r\n  hide(option) {\r\n    store.dispatch({ type: Constant.ACTION_TYPES.HIDE_DIALOG, option });\r\n  },\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const styles = makeStyles((theme) => ({\r\n  container: {\r\n    padding: \"20px\",\r\n    overflowX: \"hidden\",\r\n  },\r\n  title: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    borderBottom: `1px solid ${theme.palette.grey.light}`,\r\n    padding: \"20px\",\r\n  },\r\n  confirm: {\r\n    padding: \"0px 20px 20px\",\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  // overlay: {\r\n  //   position: \"fixed\",\r\n  //   display: \"none\",\r\n  //   width: \"100%\",\r\n  //   height: \"100%\",\r\n  //   top: 0,\r\n  //   left: 0,\r\n  //   right: 0,\r\n  //   bottom: 0,\r\n  //   backgroundColor: \"rgba(0,0,0,0.5)\",\r\n  //   zIndex: 2,\r\n  //   cursor: \"pointer\",\r\n  // },\r\n}));\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport dialogAction from \"../../redux/actions/dialogAction\";\r\nimport { Grid, Grow, Typography, Button } from \"@material-ui/core\";\r\nimport { styles } from \"./Modal.Style\";\r\n\r\nconst Modal = function () {\r\n  const classes = styles();\r\n  const { names } = useSelector((state) => state.dialog);\r\n\r\n  const onClose = function (item) {\r\n    console.log(item);\r\n    if (item) {\r\n      dialogAction.hide({ name: item.name });\r\n    } else {\r\n      dialogAction.hide({ name: \"delete\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    // <Dialog\r\n    //   fullWidth\r\n    //   maxWidth={size}\r\n    //   onClose={onClose}\r\n    //   aria-labelledby=\"simple-dialog-title\"\r\n    //   open={x()}\r\n    //   disableBackdropClick\r\n    // >\r\n    <div className={classes.overlay}>\r\n      {names.map((item) => (\r\n        <Grow in={true}>\r\n          <Grid\r\n            xs={12}\r\n            sm={Number(item.size)}\r\n            container\r\n            style={{\r\n              boxShadow: \"0 3px 10px rgb(0 0 0 / 0.2)\",\r\n              borderRadius: 5,\r\n              padding: 20,\r\n              position: \"fixed\",\r\n              zIndex: 1000,\r\n              top: \"50%\",\r\n              backgroundColor: \"#fff\",\r\n              left: \"50%\",\r\n              transform: \"translate(-50%,-50%)\",\r\n            }}\r\n          >\r\n            <Grid item xs={12} className={classes.title}>\r\n              <Typography variant=\"h6\">{item.title}</Typography>\r\n              {!item.disableCloseButton && (\r\n                <i\r\n                  className=\"material-icons\"\r\n                  onClick={() => onClose(item)}\r\n                  style={{ cursor: \"pointer\" }}\r\n                >\r\n                  clear\r\n                </i>\r\n              )}\r\n            </Grid>\r\n            {!item.confirm && (\r\n              <Grid item xs={12} className={classes.container}>\r\n                {item.component}\r\n              </Grid>\r\n            )}\r\n            {item.confirm && (\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                className={classes.confirm}\r\n                style={{ justifyContent: \"space-between\" }}\r\n              >\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  onClick={() => onClose(item)}\r\n                >\r\n                  انصراف\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={item.onAction}\r\n                >\r\n                  تایید\r\n                </Button>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </Grow>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","export const primary = \"#00989D\";\r\nexport const secondary = \"#FF5C93\";\r\nexport const warning = \"#FFC260\";\r\nexport const success = \"#3CD4A0\";\r\nexport const info = \"#9013FE\";\r\nexport const gray = \"#B9B9B9\";\r\nexport const orange = \"#F95700FF\";\r\nexport const purple = \"#E69A8DFF\";\r\n\r\nconst defaultTheme = {\r\n  direction: \"rtl\",\r\n\r\n  palette: {\r\n    primary: {\r\n      main: primary,\r\n      light: \"#dcf0fa\",\r\n      dark: primary,\r\n    },\r\n    secondary: {\r\n      main: secondary,\r\n      light: secondary,\r\n      dark: secondary,\r\n      contrastText: \"#FFFFFF\",\r\n    },\r\n    danger: {\r\n      main: secondary,\r\n      light: secondary,\r\n      dark: secondary,\r\n      contrastText: \"#FFFFFF\",\r\n    },\r\n    warning: {\r\n      main: warning,\r\n      light: warning,\r\n      dark: warning,\r\n    },\r\n    success: {\r\n      main: success,\r\n      light: success,\r\n      dark: \"#388e3c\",\r\n    },\r\n    info: {\r\n      main: info,\r\n      light: info,\r\n      dark: info,\r\n    },\r\n    gray: {\r\n      main: gray,\r\n      light: gray,\r\n      dark: gray,\r\n    },\r\n    text: {\r\n      primary: \"#6E6E6E\",\r\n      secondary: \"#6E6E6E\",\r\n      hint: \"#B9B9B9\",\r\n    },\r\n    background: {\r\n      default: \"#F6F7FF\",\r\n      light: \"#F3F5FF\",\r\n    },\r\n  },\r\n  customShadows: {\r\n    widget:\r\n      \"0px 3px 11px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\r\n    widgetDark:\r\n      \"0px 3px 18px 0px #4558A3B3, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\r\n    widgetWide:\r\n      \"0px 12px 33px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\r\n  },\r\n  overrides: {\r\n    MuiBackdrop: {\r\n      root: {\r\n        backgroundColor: \"#4A4A4A1A\",\r\n      },\r\n    },\r\n    MuiMenu: {\r\n      paper: {\r\n        boxShadow:\r\n          \"0px 3px 11px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\r\n      },\r\n    },\r\n    MuiSelect: {\r\n      icon: {\r\n        color: \"#B9B9B9\",\r\n      },\r\n    },\r\n    MuiListItem: {\r\n      root: {\r\n        \"&$selected\": {\r\n          backgroundColor: \"#F3F5FF !important\",\r\n          \"&:focus\": {\r\n            backgroundColor: \"#F3F5FF\",\r\n          },\r\n        },\r\n      },\r\n      button: {\r\n        \"&:hover, &:focus\": {\r\n          backgroundColor: \"#F3F5FF\",\r\n        },\r\n      },\r\n    },\r\n    MuiTouchRipple: {\r\n      child: {\r\n        backgroundColor: \"white\",\r\n      },\r\n    },\r\n    MuiTableRow: {\r\n      root: {\r\n        height: 45,\r\n      },\r\n    },\r\n    MuiTableCell: {\r\n      root: {\r\n        borderBottom: \"1px solid rgba(224, 224, 224, .5)\",\r\n        paddingLeft: 24,\r\n      },\r\n      head: {\r\n        fontSize: \"0.95rem\",\r\n      },\r\n      body: {\r\n        fontSize: \"0.95rem\",\r\n      },\r\n    },\r\n    PrivateSwitchBase: {\r\n      root: {\r\n        marginLeft: 10,\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nexport default defaultTheme;\r\n","import defaultTheme from \"./default\";\r\n\r\nimport { createMuiTheme } from \"@material-ui/core\";\r\n\r\nconst overrides = {\r\n  typography: {\r\n    fontFamily: \"IRANSans\",\r\n    h1: {\r\n      fontSize: \"3rem\",\r\n    },\r\n    h2: {\r\n      fontSize: \"2rem\",\r\n    },\r\n    h3: {\r\n      fontSize: \"1.64rem\",\r\n    },\r\n    h4: {\r\n      fontSize: \"1.5rem\",\r\n    },\r\n    h5: {\r\n      fontSize: \"1.285rem\",\r\n    },\r\n    h6: {\r\n      fontSize: \"1.142rem\",\r\n    },\r\n  },\r\n};\r\n\r\nconst themes = {\r\n  default: createMuiTheme({ ...defaultTheme, ...overrides }),\r\n};\r\n\r\nexport default themes;\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    maxWidth: \"100vw\",\r\n    overflowX: \"hidden\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    width: `calc(100vw - 240px)`,\r\n    minHeight: \"100vh\",\r\n  },\r\n  contentShift: {\r\n    width: `calc(100vw - ${240 + theme.spacing(6)}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  fakeToolbar: {\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  link: {\r\n    '&:not(:first-child)': {\r\n      paddingLeft: 15\r\n    }\r\n  }\r\n}));\r\n","import { makeStyles } from \"@material-ui/styles\";\r\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  logotype: {\r\n    color: \"white\",\r\n    marginLeft: theme.spacing(2.5),\r\n    marginRight: theme.spacing(2.5),\r\n    fontWeight: 500,\r\n    fontSize: 18,\r\n    whiteSpace: \"nowrap\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  appBar: {\r\n    width: \"100vw\",\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  toolbar: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: 25,\r\n    paddingLeft: theme.spacing(2.5),\r\n    width: 36,\r\n    backgroundColor: fade(theme.palette.common.black, 0),\r\n    transition: theme.transitions.create([\"background-color\", \"width\"]),\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n      backgroundColor: fade(theme.palette.common.black, 0.08),\r\n    },\r\n  },\r\n  searchFocused: {\r\n    backgroundColor: fade(theme.palette.common.black, 0.08),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: 250,\r\n    },\r\n  },\r\n  searchIcon: {\r\n    width: 36,\r\n    right: 0,\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    transition: theme.transitions.create(\"right\"),\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n  searchIconOpened: {\r\n    right: theme.spacing(1.25),\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n  },\r\n  inputInput: {\r\n    height: 36,\r\n    padding: 0,\r\n    paddingRight: 36 + theme.spacing(1.25),\r\n    width: \"100%\",\r\n  },\r\n  messageContent: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  headerMenu: {\r\n    marginTop: theme.spacing(7),\r\n  },\r\n  headerMenuList: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  headerMenuItem: {\r\n    \"&:hover, &:focus\": {\r\n      backgroundColor: theme.palette.background.light,\r\n      // color: \"white\",\r\n    },\r\n  },\r\n  headerMenuButton: {\r\n    marginLeft: theme.spacing(2),\r\n    padding: theme.spacing(0.5),\r\n  },\r\n  headerMenuButtonSandwich: {\r\n    marginLeft: 9,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginLeft: 0,\r\n    },\r\n    padding: theme.spacing(0.5),\r\n  },\r\n  headerMenuButtonCollapse: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  headerIcon: {\r\n    fontSize: 28,\r\n    color: \"rgba(255, 255, 255, 0.35)\",\r\n  },\r\n  headerIconCollapse: {\r\n    color: \"white\",\r\n  },\r\n  profileMenu: {\r\n    minWidth: 165,\r\n  },\r\n  profileMenuUser: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    padding: theme.spacing(2),\r\n  },\r\n  profileMenuItem: {\r\n    color: theme.palette.text.hint,\r\n  },\r\n  profileMenuIcon: {\r\n    marginRight: theme.spacing(2),\r\n    color: theme.palette.text.hint,\r\n    \"&:hover\": {\r\n      color: theme.palette.primary.main,\r\n    },\r\n  },\r\n  profileMenuLink: {\r\n    fontSize: 16,\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n  messageNotification: {\r\n    width: \"500px\",\r\n    justifyContent: \"space-between\",\r\n    height: \"auto\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    \"&:hover, &:focus\": {\r\n      backgroundColor: theme.palette.background.light,\r\n    },\r\n  },\r\n  messageNotificationSide: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  messageNotificationBodySide: {\r\n    alignItems: \"flex-start\",\r\n    marginRight: 0,\r\n  },\r\n  sendMessageButton: {\r\n    margin: theme.spacing(4),\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n    textTransform: \"none\",\r\n  },\r\n  sendButtonIcon: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  purchaseBtn: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n    marginRight: theme.spacing(3),\r\n  },\r\n\r\n  chip: {\r\n    color: \"#fff\",\r\n  },\r\n  allIcon: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  INCOME: {\r\n    backgroundColor: theme.palette.success.main,\r\n  },\r\n  incomeIcon: {\r\n    color: theme.palette.success.main,\r\n  },\r\n  OUTCOME: {\r\n    backgroundColor: theme.palette.danger.main,\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport {\r\n  withStyles,\r\n  Badge as BadgeBase,\r\n  Typography as TypographyBase,\r\n  Button as ButtonBase,\r\n} from \"@material-ui/core\";\r\nimport { useTheme, makeStyles } from \"@material-ui/styles\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nvar useStyles = makeStyles(theme => ({\r\n  badge: {\r\n    fontWeight: 600,\r\n    height: 16,\r\n    minWidth: 16,\r\n  },\r\n}));\r\n\r\nfunction Badge({ children, colorBrightness, color, ...props }) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n  var Styled = createStyled({\r\n    badge: {\r\n      backgroundColor: getColor(color, theme, colorBrightness),\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Styled>\r\n      {styledProps => (\r\n        <BadgeBase\r\n          classes={{\r\n            badge: classnames(classes.badge, styledProps.classes.badge),\r\n          }}\r\n          {...props}\r\n        >\r\n          {children}\r\n        </BadgeBase>\r\n      )}\r\n    </Styled>\r\n  );\r\n}\r\n\r\nfunction Typography({\r\n  children,\r\n  weight,\r\n  size,\r\n  colorBrightness,\r\n  color,\r\n  ...props\r\n}) {\r\n  var theme = useTheme();\r\n\r\n  return (\r\n    <TypographyBase\r\n      style={{\r\n        color: getColor(color, theme, colorBrightness),\r\n        fontWeight: getFontWeight(weight),\r\n        fontSize: getFontSize(size, props.variant, theme),\r\n      }}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </TypographyBase>\r\n  );\r\n}\r\n\r\nfunction Button({ children, color, className, ...props }) {\r\n  var theme = useTheme();\r\n\r\n  var Styled = createStyled({\r\n    root: {\r\n      color: getColor(color, theme),\r\n    },\r\n    contained: {\r\n      backgroundColor: getColor(color, theme),\r\n      boxShadow: theme.customShadows.widget,\r\n      color: `${color ? \"white\" : theme.palette.text.primary} !important`,\r\n      \"&:hover\": {\r\n        backgroundColor: getColor(color, theme, \"light\"),\r\n        boxShadow: theme.customShadows.widgetWide,\r\n      },\r\n      \"&:active\": {\r\n        boxShadow: theme.customShadows.widgetWide,\r\n      },\r\n    },\r\n    outlined: {\r\n      color: getColor(color, theme),\r\n      borderColor: getColor(color, theme),\r\n    },\r\n    select: {\r\n      backgroundColor: theme.palette.primary.main,\r\n      color: \"#fff\",\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Styled>\r\n      {({ classes }) => (\r\n        <ButtonBase\r\n          classes={{\r\n            contained: classes.contained,\r\n            root: classes.root,\r\n            outlined: classes.outlined,\r\n          }}\r\n          {...props}\r\n          className={classnames(\r\n            {\r\n              [classes.select]: props.select,\r\n            },\r\n            className,\r\n          )}\r\n        >\r\n          {children}\r\n        </ButtonBase>\r\n      )}\r\n    </Styled>\r\n  );\r\n}\r\n\r\nexport { Badge, Typography, Button };\r\n\r\n// ########################################################################\r\n\r\nfunction getColor(color, theme, brigtness = \"main\") {\r\n  if (color && theme.palette[color] && theme.palette[color][brigtness]) {\r\n    return theme.palette[color][brigtness];\r\n  }\r\n}\r\n\r\nfunction getFontWeight(style) {\r\n  switch (style) {\r\n    case \"light\":\r\n      return 300;\r\n    case \"medium\":\r\n      return 500;\r\n    case \"bold\":\r\n      return 600;\r\n    default:\r\n      return 400;\r\n  }\r\n}\r\n\r\nfunction getFontSize(size, variant = \"\", theme) {\r\n  var multiplier;\r\n\r\n  switch (size) {\r\n    case \"sm\":\r\n      multiplier = 0.8;\r\n      break;\r\n    case \"md\":\r\n      multiplier = 1.5;\r\n      break;\r\n    case \"xl\":\r\n      multiplier = 2;\r\n      break;\r\n    case \"xxl\":\r\n      multiplier = 3;\r\n      break;\r\n    default:\r\n      multiplier = 1;\r\n      break;\r\n  }\r\n\r\n  var defaultSize =\r\n    variant && theme.typography[variant]\r\n      ? theme.typography[variant].fontSize\r\n      : theme.typography.fontSize + \"px\";\r\n\r\n  return `calc(${defaultSize} * ${multiplier})`;\r\n}\r\n\r\nfunction createStyled(styles, options) {\r\n  var Styled = function(props) {\r\n    const { children, ...other } = props;\r\n    return children(other);\r\n  };\r\n\r\n  return withStyles(styles, options)(Styled);\r\n}\r\n","import React from \"react\";\r\n\r\nvar LayoutStateContext = React.createContext();\r\nvar LayoutDispatchContext = React.createContext();\r\n\r\nfunction layoutReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"TOGGLE_SIDEBAR\":\r\n      return { ...state, isSidebarOpened: !state.isSidebarOpened };\r\n    default: {\r\n      throw new Error(`Unhandled action type: ${action.type}`);\r\n    }\r\n  }\r\n}\r\n\r\nfunction LayoutProvider({ children }) {\r\n  var [state, dispatch] = React.useReducer(layoutReducer, {\r\n    isSidebarOpened: true,\r\n  });\r\n  return (\r\n    <LayoutStateContext.Provider value={state}>\r\n      <LayoutDispatchContext.Provider value={dispatch}>\r\n        {children}\r\n      </LayoutDispatchContext.Provider>\r\n    </LayoutStateContext.Provider>\r\n  );\r\n}\r\n\r\nfunction useLayoutState() {\r\n  var context = React.useContext(LayoutStateContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useLayoutState must be used within a LayoutProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\nfunction useLayoutDispatch() {\r\n  var context = React.useContext(LayoutDispatchContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useLayoutDispatch must be used within a LayoutProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\nexport { LayoutProvider, useLayoutState, useLayoutDispatch, toggleSidebar };\r\n\r\n// ###########################################################\r\nfunction toggleSidebar(dispatch) {\r\n  dispatch({\r\n    type: \"TOGGLE_SIDEBAR\",\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport Constant from \"../helpers/constant\";\r\nimport storageService from \"../services/storage\";\r\n\r\nvar UserStateContext = React.createContext();\r\nvar UserDispatchContext = React.createContext();\r\n\r\nfunction userReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"LOGIN_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        currentUser: action.payload,\r\n      };\r\n    case \"SIGN_OUT_SUCCESS\":\r\n      return { ...state, isAuthenticated: false, currentUser: {} };\r\n    default: {\r\n      throw new Error(`Unhandled action type: ${action.type}`);\r\n    }\r\n  }\r\n}\r\n\r\nfunction UserProvider({ children }) {\r\n  var [state, dispatch] = React.useReducer(userReducer, {\r\n    isAuthenticated: !!localStorage.getItem(Constant.STORAGE.TOKEN),\r\n    currentUser: JSON.parse(\r\n      localStorage.getItem(Constant.STORAGE.CURRENT_USER),\r\n    ),\r\n  });\r\n\r\n  return (\r\n    <UserStateContext.Provider value={state}>\r\n      <UserDispatchContext.Provider value={dispatch}>\r\n        {children}\r\n      </UserDispatchContext.Provider>\r\n    </UserStateContext.Provider>\r\n  );\r\n}\r\n\r\nfunction useUserState() {\r\n  var context = React.useContext(UserStateContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useUserState must be used within a UserProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\nfunction useUserDispatch() {\r\n  var context = React.useContext(UserDispatchContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useUserDispatch must be used within a UserProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\nexport { UserProvider, useUserState, useUserDispatch, loginUser, signOut };\r\n\r\n// ###########################################################\r\n\r\nasync function loginUser(\r\n  loginRequest,\r\n  dispatch,\r\n  username,\r\n  password,\r\n  history,\r\n  setIsLoading,\r\n  setError,\r\n) {\r\n  setError(false);\r\n  setIsLoading(true);\r\n  const result = await loginRequest.execute({ username, password });\r\n\r\n  if (result) {\r\n    storageService.setItem(Constant.STORAGE.TOKEN, result.data.token);\r\n    storageService.setItem(Constant.STORAGE.CURRENT_USER, result.data);\r\n    setError(null);\r\n    setIsLoading(false);\r\n    dispatch({ type: \"LOGIN_SUCCESS\", payload: result.data });\r\n\r\n    history.push(\"/app/dashboard\");\r\n  } else {\r\n    setError(true);\r\n    setIsLoading(false);\r\n  }\r\n}\r\n\r\nfunction signOut(dispatch, history) {\r\n  localStorage.removeItem(Constant.STORAGE.TOKEN);\r\n  localStorage.removeItem(Constant.STORAGE.CURRENT_USER);\r\n  dispatch({ type: \"SIGN_OUT_SUCCESS\" });\r\n  history.push(\"/login\");\r\n}\r\n","import axios from \"axios\";\r\nimport { cacheAdapterEnhancer } from \"axios-extensions\";\r\nimport constants from \"../helpers/constant\";\r\nimport storageService from \"../services/storage\";\r\nimport AlertAction from \"../redux/actions/AlertAction\";\r\n\r\nconst http = axios.create({\r\n  baseURL: constants.API_ADDRESS,\r\n  headers: {\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n    \"Access-Control-Allow-Credentials\": \"true\",\r\n  },\r\n  // adapter: cacheAdapterEnhancer(axios.defaults.adapter),\r\n});\r\n\r\n// http.interceptors.request.use(\r\n//   async (config) => {\r\n//     // const accessToken = storageService.getItem(constants.ACCESS_TOKEN);\r\n//     // config.headers = {\r\n//     //   Authorization: `Bearer ${accessToken}`,\r\n//     //   \"Cache-Control\": \"no-cache\",\r\n//     //   Accept: \"application/json\",\r\n//     // };\r\n//     // return config;\r\n//   },\r\n//   (error) => {\r\n//     Promise.reject(error);\r\n//   },\r\n// );\r\n\r\nhttp.interceptors.response.use(\r\n  (result) => {\r\n    // Do something before request is sent\r\n    const { method, url } = result.config;\r\n    // if ((method === \"post\" || method === \"put\") && url !== \"auth/login\") {\r\n    //   return AlertAction.show({\r\n    //     type: \"success\",\r\n    //     text: \"اطلاعات با موفقیت ثبت شد\",\r\n    //   });\r\n    // }\r\n    // if (method === \"delete\") {\r\n    //   return AlertAction.show({\r\n    //     type: \"success\",\r\n    //     text: \"اطلاعات با موفقیت حذف شد\",\r\n    //   });\r\n    // }\r\n    if (method !== \"get\") {\r\n      if (url !== \"auth/login\") {\r\n        AlertAction.show({\r\n          type: \"success\",\r\n          text:\r\n            method === \"delete\"\r\n              ? \"اطلاعات با موفقیت حذف شد\"\r\n              : \"اطلاعات با موفقیت ثبت شد\",\r\n        });\r\n      }\r\n    }\r\n    return result;\r\n  },\r\n  async (error) => {\r\n    const { code, message } = error.response.data.error;\r\n    if (code === \"UNHANDLED_DATABASE_EXCEPTION\") {\r\n      AlertAction.show({\r\n        type: \"error\",\r\n        text: \"خطایی رخ داده است\",\r\n      });\r\n    } else {\r\n      AlertAction.show({\r\n        type: \"error\",\r\n        text: message,\r\n      });\r\n    }\r\n\r\n    // TODO : handle 4xx error here and calling refresh token\r\n    // const originalRequest = error.config;\r\n    // if (error.response.status === 403 && !originalRequest._retry) {\r\n    // const access_token = await refreshAccessToken();\r\n    // axios.defaults.headers.common['Authorization'] = 'Bearer ' + access_token;\r\n    // return axiosApiInstance(originalRequest);\r\n    // }\r\n\r\n    return Promise.reject(error);\r\n  },\r\n);\r\n\r\nexport default http;\r\n","/* eslint-disable */\r\nimport { useState } from \"react\";\r\n\r\nimport http from \"../configs/axios\";\r\n\r\nconst getProperUrl = (url, urlParams) => {\r\n  return `${url.substring(0, url.indexOf(\"?\"))}/${urlParams}?${url.substring(\r\n    url.indexOf(\"?\") + 1,\r\n    url.length,\r\n  )}`;\r\n};\r\n\r\nexport const useApi = (args) => {\r\n  const [pending, setPending] = useState(false);\r\n  const [result, setResult] = useState();\r\n  const [error, setError] = useState();\r\n\r\n  const execute = async function (data, urlParams) {\r\n    setPending(true);\r\n    try {\r\n      let response;\r\n\r\n      if (urlParams) {\r\n        if (args.url.includes(\"?\")) {\r\n          const url = getProperUrl(args.url, urlParams);\r\n          response = await http({ ...args, url, data });\r\n        } else {\r\n          const url = `${args.url}/${urlParams}`;\r\n          response = await http({ ...args, url, data });\r\n        }\r\n      } else {\r\n        response = await http({ ...args, data });\r\n      }\r\n      setResult(response);\r\n      return response?.data;\r\n    } catch (e) {\r\n      setResult(null);\r\n      setError(e);\r\n      throw new Error(e);\r\n    } finally {\r\n      setPending(false);\r\n    }\r\n  };\r\n\r\n  return {\r\n    pending,\r\n    result,\r\n    error,\r\n    execute,\r\n  };\r\n};\r\n","import pickBy from \"lodash/pickBy\";\r\nimport identity from \"lodash/identity\";\r\nimport queryString from \"query-string\";\r\nimport storageService from \"../services/storage\";\r\nimport Constant from \"./constant\";\r\nimport {\r\n  primary,\r\n  secondary,\r\n  success,\r\n  warning,\r\n  info,\r\n  gray,\r\n  purple,\r\n  orange,\r\n} from \"../themes/default\";\r\nimport { number } from \"yup\";\r\n\r\nexport const convertParamsToQueryString = (params) => {\r\n  return new URLSearchParams(pickBy(params, identity)).toString();\r\n};\r\n\r\nexport const getQueryString = (param) => {\r\n  var myUrl = new URL(window.location.href.replace(/#/g, \"\"));\r\n  var param_value = myUrl.searchParams.get(param);\r\n  return param_value;\r\n  // return queryString.parse(window.location.search)[param];\r\n};\r\n\r\nexport const getRandomColor = () => {\r\n  return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\r\n};\r\n\r\nexport const getRandomColorFromTheme = () => {\r\n  const colors = [\r\n    primary,\r\n    secondary,\r\n    success,\r\n    warning,\r\n    orange,\r\n    purple,\r\n    info,\r\n    gray,\r\n  ];\r\n  var color = colors[Math.floor(Math.random() * colors.length)];\r\n\r\n  return color;\r\n};\r\n\r\nexport const getRandomNumber = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nexport const persianNumber = (en) => {\r\n  if ((en || en === 0) && typeof en !== number) {\r\n    return (\"\" + en).replace(/[0-9]/g, function (t) {\r\n      return \"۰۱۲۳۴۵۶۷۸۹\".substr(+t, 1);\r\n    });\r\n  }\r\n};\r\n\r\nexport const getDayOfWeek = (date) => {\r\n  const days = [\r\n    \"یکشنبه\",\r\n    \"دوشنبه\",\r\n    \"سه شنبه\",\r\n    \"چهارشنبه\",\r\n    \"پنج شنبه\",\r\n    \"جمعه\",\r\n    \"شنبه\",\r\n  ];\r\n  return days[date.getDay()];\r\n};\r\n\r\nexport const hasPermission = (permit) => {\r\n  if (permit === Constant.ALL_PERMISSIONS.FREE) {\r\n    return true;\r\n  }\r\n  const { permissions } = JSON.parse(\r\n    storageService.getItem(Constant.STORAGE.CURRENT_USER),\r\n  );\r\n  return permissions.includes(permit);\r\n};\r\n","import React, { useState, useRef } from \"react\";\r\nimport { Grid, TextField, Button, InputAdornment } from \"@material-ui/core\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport clsx from \"clsx\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport storageService from \"../../services/storage\";\r\n\r\nconst MainDetail = ({ onSubmit, onDismiss }) => {\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n  const [isPassword, setIsPassword] = useState(true);\r\n  const passwordRef = useRef(null);\r\n\r\n  const changePasswordRequest = useApi({\r\n    method: \"put\",\r\n    url: `user/password/change`,\r\n  });\r\n\r\n  const onChangeViewClick = function () {\r\n    setIsPassword(!isPassword);\r\n  };\r\n\r\n  const onDone = (data) => {\r\n    const { id } = JSON.parse(\r\n      storageService.getItem(Constant.STORAGE.CURRENT_USER),\r\n    );\r\n    changePasswordRequest.execute({\r\n      id,\r\n      oldPassword: data.prePassword,\r\n      newPassword: data.password,\r\n    });\r\n    onSubmit(data);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onDone)}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Controller\r\n            control={control}\r\n            render={({ onChange, value, name }) => {\r\n              return (\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\" رمز عبور قبلی\"\r\n                  name={name}\r\n                  onChange={onChange}\r\n                  value={value}\r\n                  error={!!errors.prePassword}\r\n                  helperText={\r\n                    errors.prePassword ? errors.prePassword.message : \"\"\r\n                  }\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  type={\"password\"}\r\n                />\r\n              );\r\n            }}\r\n            rules={{\r\n              required: Constant.VALIDATION.REQUIRED,\r\n              minLength: {\r\n                value: 5,\r\n                message: Constant.VALIDATION.PASSWORD,\r\n              },\r\n            }}\r\n            name=\"prePassword\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Controller\r\n            control={control}\r\n            render={({ onChange, value, name }) => {\r\n              return (\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"رمز عبور\"\r\n                  name={name}\r\n                  onChange={onChange}\r\n                  value={value}\r\n                  error={!!errors.password}\r\n                  helperText={errors.password ? errors.password.message : \"\"}\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  type={isPassword ? \"password\" : \"text\"}\r\n                  inputRef={passwordRef}\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <i\r\n                          style={{ cursor: \"pointer\" }}\r\n                          className={clsx(\"material-icons-round\")}\r\n                          onClick={onChangeViewClick}\r\n                        >\r\n                          {isPassword ? \"visibility_off\" : \"visibility\"}\r\n                        </i>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n              );\r\n            }}\r\n            rules={{\r\n              required: Constant.VALIDATION.REQUIRED,\r\n              minLength: {\r\n                value: 5,\r\n                message: Constant.VALIDATION.PASSWORD,\r\n              },\r\n            }}\r\n            name=\"password\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Controller\r\n            control={control}\r\n            render={({ onChange, value, name }) => {\r\n              return (\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"تکرار رمز عبور \"\r\n                  name={name}\r\n                  onChange={onChange}\r\n                  value={value}\r\n                  error={!!errors.repassword}\r\n                  helperText={\r\n                    errors.repassword && \"تکرار رمز عبور با رمز عبور برابر نیست\"\r\n                  }\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  type={\"password\"}\r\n                />\r\n              );\r\n            }}\r\n            rules={{\r\n              validate: (value) => value === passwordRef.current.value,\r\n            }}\r\n            name=\"repassword\"\r\n          />\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n        >\r\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n            تایید\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={onDismiss}>\r\n            انصراف\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MainDetail;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  Chip,\r\n  Divider,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nimport {\r\n  Menu as MenuIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  Person as AccountIcon,\r\n  ArrowForward as ArrowForwardIcon,\r\n} from \"@material-ui/icons\";\r\nimport classNames from \"classnames\";\r\nimport useStyles from \"./styles\";\r\nimport { Badge, Typography } from \"../Wrappers\";\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\nimport { useUserState } from \"../../context/UserContext\";\r\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { persianNumber, getDayOfWeek } from \"../../helpers/utils\";\r\nimport clsx from \"clsx\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport dialogAction from \"../../redux/actions/dialogAction\";\r\nimport ChangePassword from \"./ChangePassword\";\r\nimport Clock from \"react-live-clock\";\r\n\r\nexport default function Header(props) {\r\n  var classes = useStyles();\r\n  const history = useHistory();\r\n  var layoutState = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n  var userDispatch = useUserDispatch();\r\n  const location = useLocation();\r\n  var [mailMenu, setMailMenu] = useState(null);\r\n  var [profileMenu, setProfileMenu] = useState(null);\r\n  var { currentUser } = useUserState();\r\n  const [cheques, setCheques] = useState([]);\r\n\r\n  const getDashboardRequest = useApi({\r\n    method: \"get\",\r\n    url: `notify/cheque`,\r\n  });\r\n\r\n  const getChequeNotify = async () => {\r\n    const notify = await getDashboardRequest.execute();\r\n\r\n    setCheques(notify.data);\r\n  };\r\n\r\n  const onShowAllCheque = () => {\r\n    history.push(\"/app/cheque-list\");\r\n  };\r\n\r\n  const onSubmitChangePassword = () => {\r\n    onDismissChangePassword();\r\n  };\r\n\r\n  const onDismissChangePassword = () => {\r\n    dialogAction.hide({ name: \"password\" });\r\n  };\r\n\r\n  const onChangePassword = () => {\r\n    dialogAction.show({\r\n      title: \"تغییر پسورد\",\r\n      component: (\r\n        <ChangePassword\r\n          onSubmit={onSubmitChangePassword}\r\n          onDismiss={onDismissChangePassword}\r\n        />\r\n      ),\r\n      name: \"password\",\r\n      size: \"4\",\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getChequeNotify();\r\n  }, [location]);\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          onClick={() => toggleSidebar(layoutDispatch)}\r\n          className={classNames(\r\n            classes.headerMenuButtonSandwich,\r\n            classes.headerMenuButtonCollapse,\r\n          )}\r\n        >\r\n          {layoutState.isSidebarOpened ? (\r\n            <ArrowForwardIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          ) : (\r\n            <MenuIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n        </IconButton>\r\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\r\n          سیستم یکپارچه مدیریت\r\n        </Typography>\r\n\r\n        <div className={classes.grow} />\r\n        <div style={{ display: \"flex\" }}>\r\n          <Typography variant=\"h6\" style={{ margin: \"0 10px\" }}>\r\n            {getDayOfWeek(new Date())}\r\n          </Typography>\r\n          <Typography variant=\"h6\">\r\n            {persianNumber(new Date().toLocaleDateString(\"fa-IR\"))}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"h6\"\r\n            style={{\r\n              margin: \"0 10px\",\r\n              width: 70,\r\n              display: \"flex\",\r\n              justifyContent: \"flex-end\",\r\n            }}\r\n          >\r\n            <Clock\r\n              format={\"HH:mm:ss\"}\r\n              ticking={true}\r\n              timezone={\"Asia/Tehran\"}\r\n            />\r\n          </Typography>\r\n        </div>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={(e) => {\r\n            setMailMenu(e.currentTarget);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge badgeContent={cheques?.length} color=\"secondary\">\r\n            <NotificationsIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className={classes.headerMenuButton}\r\n          aria-controls=\"profile-menu\"\r\n          onClick={(e) => setProfileMenu(e.currentTarget)}\r\n        >\r\n          <AccountIcon classes={{ root: classes.headerIcon }} />\r\n        </IconButton>\r\n        <Menu\r\n          id=\"mail-menu\"\r\n          open={Boolean(mailMenu)}\r\n          anchorEl={mailMenu}\r\n          onClose={() => setMailMenu(null)}\r\n          MenuListProps={{ className: classes.headerMenuList }}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h6\" weight=\"medium\">\r\n              یادآوری چک ها\r\n            </Typography>\r\n            <Button color=\"primary\" onClick={onShowAllCheque}>\r\n              نمایش همه چک ها\r\n            </Button>\r\n          </div>\r\n          <Divider />\r\n          {cheques?.map((message) => (\r\n            <MenuItem key={message.id} className={classes.messageNotification}>\r\n              <Typography variant=\"h6\">\r\n                {persianNumber(\r\n                  new Date(message.chequeDueDate).toLocaleDateString(\"fa-IR\"),\r\n                )}\r\n              </Typography>\r\n              <Typography variant=\"h6\">{message.person}</Typography>\r\n              <Typography variant=\"h6\">\r\n                {persianNumber(message.price)}\r\n              </Typography>\r\n              <Typography variant=\"h6\">\r\n                <Chip\r\n                  label={Constant.PAYMENT_TYPE[message.type]}\r\n                  className={clsx(classes.chip, classes[message.type])}\r\n                />\r\n              </Typography>\r\n            </MenuItem>\r\n          ))}\r\n        </Menu>\r\n        <Menu\r\n          id=\"profile-menu\"\r\n          open={Boolean(profileMenu)}\r\n          anchorEl={profileMenu}\r\n          onClose={() => setProfileMenu(null)}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              {currentUser.username}\r\n            </Typography>\r\n          </div>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              color=\"primary\"\r\n              onClick={onChangePassword}\r\n            >\r\n              تغییر پسورد\r\n            </Typography>\r\n          </MenuItem>\r\n\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              color=\"primary\"\r\n              onClick={() => signOut(userDispatch, props.history)}\r\n            >\r\n              خروج از سیستم\r\n            </Typography>\r\n          </MenuItem>\r\n        </Menu>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport default makeStyles(theme => ({\r\n  menuButton: {\r\n    marginLeft: 12,\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 40,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: drawerWidth,\r\n    },\r\n  },\r\n  toolbar: {\r\n    ...theme.mixins.toolbar,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  /* sidebarList: {\r\n    marginTop: theme.spacing(6),\r\n  }, */\r\n  mobileBackButton: {\r\n    marginTop: theme.spacing(0.5),\r\n    marginLeft: 18,\r\n    [theme.breakpoints.only(\"sm\")]: {\r\n      marginTop: theme.spacing(0.625),\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n}));\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  link: {\r\n    textDecoration: \"none\",\r\n    \"&:hover, &:focus\": {\r\n      backgroundColor: theme.palette.background.light,\r\n    },\r\n  },\r\n  externalLink: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    textDecoration: \"none\",\r\n  },\r\n  linkActive: {\r\n    backgroundColor: theme.palette.background.light,\r\n  },\r\n  linkNested: {\r\n    paddingLeft: 0,\r\n    \"&:hover, &:focus\": {\r\n      backgroundColor: \"#FFFFFF\",\r\n    },\r\n  },\r\n  linkIcon: {\r\n    marginRight: theme.spacing(1),\r\n    color: theme.palette.text.secondary + \"99\",\r\n    transition: theme.transitions.create(\"color\"),\r\n    width: 24,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  linkIconActive: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  linkText: {\r\n    padding: 0,\r\n    color: theme.palette.text.secondary + \"CC\",\r\n    transition: theme.transitions.create([\"opacity\", \"color\"]),\r\n    fontSize: 16,\r\n  },\r\n  linkTextActive: {\r\n    color: theme.palette.text.primary,\r\n  },\r\n  linkTextHidden: {\r\n    opacity: 0,\r\n  },\r\n  nestedList: {\r\n    paddingLeft: theme.spacing(2) + 10,\r\n  },\r\n  sectionTitle: {\r\n    marginLeft: theme.spacing(4.5),\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  divider: {\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n    height: 1,\r\n    backgroundColor: \"#D8D8D880\",\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nvar useStyles = makeStyles((theme) => ({\r\n  dotBase: {\r\n    width: 8,\r\n    height: 8,\r\n    backgroundColor: theme.palette.text.hint,\r\n    borderRadius: \"50%\",\r\n    transition: theme.transitions.create(\"background-color\"),\r\n  },\r\n  dotSmall: {\r\n    width: 5,\r\n    height: 5,\r\n  },\r\n  dotLarge: {\r\n    width: 11,\r\n    height: 11,\r\n  },\r\n}));\r\n\r\nexport default function Dot({ size, color }) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  return (\r\n    <div\r\n      className={classnames(classes.dotBase, {\r\n        [classes.dotLarge]: size === \"large\",\r\n        [classes.dotSmall]: size === \"small\",\r\n      })}\r\n      style={{\r\n        backgroundColor:\r\n          color && theme.palette[color] ? theme.palette[color].main : color,\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Inbox as InboxIcon } from \"@material-ui/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useStyles from \"./styles\";\r\nimport Dot from \"../Dot\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport {\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../../../context/LayoutContext\";\r\nimport { hasPermission } from \"../../../../helpers/utils\";\r\n\r\nexport default function SidebarLink({\r\n  link,\r\n  icon,\r\n  label,\r\n  children,\r\n  location,\r\n  isSidebarOpened,\r\n  nested,\r\n  type,\r\n  permission,\r\n}) {\r\n  var classes = useStyles();\r\n  const history = useHistory();\r\n  var layoutDispatch = useLayoutDispatch();\r\n  var theme = useTheme();\r\n\r\n  const onClick = (link) => {\r\n    history.push(link);\r\n    var windowWidth = window.innerWidth;\r\n    var breakpointWidth = theme.breakpoints.values.md;\r\n    var isSmallScreen = windowWidth < breakpointWidth;\r\n\r\n    if (isSmallScreen) {\r\n      toggleSidebar(layoutDispatch);\r\n    }\r\n  };\r\n\r\n  var [isOpen, setIsOpen] = useState(false);\r\n  var isLinkActive =\r\n    link &&\r\n    (location.pathname === link || location.pathname.indexOf(link) !== -1);\r\n\r\n  if (type === \"title\")\r\n    return (\r\n      <Typography\r\n        className={classnames(classes.linkText, classes.sectionTitle, {\r\n          [classes.linkTextHidden]: !isSidebarOpened,\r\n        })}\r\n      >\r\n        {label}\r\n      </Typography>\r\n    );\r\n\r\n  if (type === \"divider\")\r\n    return (\r\n      <>\r\n        {hasPermission(permission) && <Divider className={classes.divider} />}\r\n      </>\r\n    );\r\n  if (link && link.includes(\"http\")) {\r\n    return (\r\n      <ListItem\r\n        button\r\n        className={classes.link}\r\n        classes={{\r\n          root: classnames(classes.linkRoot, {\r\n            [classes.linkActive]: isLinkActive && !nested,\r\n            [classes.linkNested]: nested,\r\n          }),\r\n        }}\r\n        disableRipple\r\n      >\r\n        <div className={classes.externalLink} href={link}>\r\n          <ListItemIcon\r\n            className={classnames(classes.linkIcon, {\r\n              [classes.linkIconActive]: isLinkActive,\r\n            })}\r\n          >\r\n            {nested ? <Dot color={isLinkActive && \"primary\"} /> : icon}\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            classes={{\r\n              primary: classnames(classes.linkText, {\r\n                [classes.linkTextActive]: isLinkActive,\r\n                [classes.linkTextHidden]: !isSidebarOpened,\r\n              }),\r\n            }}\r\n            primary={label}\r\n          />\r\n        </div>\r\n      </ListItem>\r\n    );\r\n  }\r\n  if (!children)\r\n    return (\r\n      <>\r\n        {hasPermission(permission) && (\r\n          <ListItem\r\n            button\r\n            className={classes.link}\r\n            classes={{\r\n              root: classnames(classes.linkRoot, {\r\n                [classes.linkActive]: isLinkActive && !nested,\r\n                [classes.linkNested]: nested,\r\n              }),\r\n            }}\r\n            disableRipple\r\n            onClick={() => {\r\n              onClick(link);\r\n            }}\r\n          >\r\n            <span className={classes.externalLink}>\r\n              <ListItemIcon\r\n                className={classnames(classes.linkIcon, {\r\n                  [classes.linkIconActive]: isLinkActive,\r\n                })}\r\n              >\r\n                {nested ? <Dot color={isLinkActive && \"primary\"} /> : icon}\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                classes={{\r\n                  primary: classnames(classes.linkText, {\r\n                    [classes.linkTextActive]: isLinkActive,\r\n                    [classes.linkTextHidden]: !isSidebarOpened,\r\n                  }),\r\n                }}\r\n                primary={label}\r\n              />\r\n            </span>\r\n          </ListItem>\r\n        )}\r\n      </>\r\n    );\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(permission) && (\r\n        <>\r\n          <ListItem\r\n            button\r\n            component={link && Link}\r\n            onClick={toggleCollapse}\r\n            className={classes.link}\r\n            to={link}\r\n            disableRipple\r\n          >\r\n            <span className={classes.externalLink}>\r\n              <ListItemIcon\r\n                className={classnames(classes.linkIcon, {\r\n                  [classes.linkIconActive]: isLinkActive,\r\n                })}\r\n              >\r\n                {icon ? icon : <InboxIcon />}\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                classes={{\r\n                  primary: classnames(classes.linkText, {\r\n                    [classes.linkTextActive]: isLinkActive,\r\n                    [classes.linkTextHidden]: !isSidebarOpened,\r\n                  }),\r\n                }}\r\n                primary={label}\r\n              />\r\n            </span>\r\n          </ListItem>\r\n          {children && (\r\n            <Collapse\r\n              in={isOpen && isSidebarOpened}\r\n              timeout=\"auto\"\r\n              unmountOnExit\r\n              className={classes.nestedList}\r\n            >\r\n              <List component=\"div\" disablePadding>\r\n                {children.map((childrenLink) => (\r\n                  <SidebarLink\r\n                    key={childrenLink && childrenLink.link}\r\n                    location={location}\r\n                    isSidebarOpened={isSidebarOpened}\r\n                    nested\r\n                    {...childrenLink}\r\n                  />\r\n                ))}\r\n              </List>\r\n            </Collapse>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  // ###########################################################\r\n\r\n  function toggleCollapse(e) {\r\n    if (isSidebarOpened) {\r\n      e.preventDefault();\r\n      setIsOpen(!isOpen);\r\n    }\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\r\nimport { ArrowForward as ArrowForwardIcon } from \"@material-ui/icons\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\nimport useStyles from \"./styles\";\r\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\r\nimport Constants from \"../../helpers/constant\";\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\n\r\nconst structure = [\r\n  {\r\n    id: 0,\r\n    label: \"داشبورد\",\r\n    link: \"/app/dashboard\",\r\n    icon: <i className=\"material-icons-round\">home</i>,\r\n    permission: Constants.ALL_PERMISSIONS.FREE,\r\n  },\r\n  {\r\n    id: 1,\r\n    label: \"کالاها\",\r\n    link: \"/app/product-list\",\r\n    icon: <i className=\"material-icons-round\">inventory_2</i>,\r\n    permission: Constants.ALL_PERMISSIONS.PRODUCT_SHOW,\r\n  },\r\n  {\r\n    id: 2,\r\n    label: \"انبار ها\",\r\n    link: \"/app/depot-list\",\r\n    icon: <i className=\"material-icons-round\">storefront</i>,\r\n    permission: Constants.ALL_PERMISSIONS.DEPOT_SHOW,\r\n  },\r\n  {\r\n    id: 3,\r\n    label: \"صندوق ها\",\r\n    link: \"/app/cash-list\",\r\n    icon: <i className=\"material-icons-round\">account_balance_wallet</i>,\r\n    permission: Constants.ALL_PERMISSIONS.CASH_DESK_SHOW,\r\n  },\r\n  {\r\n    id: 4,\r\n    type: \"divider\",\r\n    permission: Constants.ALL_PERMISSIONS.INVOICE_SHOW,\r\n  },\r\n  {\r\n    id: 5,\r\n    label: \"فاکتور ها\",\r\n    icon: <i className=\"material-icons-round\">receipt</i>,\r\n    permission: Constants.ALL_PERMISSIONS.INVOICE_SHOW,\r\n    children: [\r\n      { label: \"کل فاکتور ها\", link: \"/app/invoice-list?type=ALL\" },\r\n      { label: \"فاکتور خرید\", link: \"/app/invoice-list?type=BUY\" },\r\n      { label: \"فاکتور فروش\", link: \"/app/invoice-list?type=SELL\" },\r\n    ],\r\n  },\r\n  {\r\n    id: 6,\r\n    type: \"divider\",\r\n    permission:\r\n      Constants.ALL_PERMISSIONS.PAYMENT_SHOW ||\r\n      Constants.ALL_PERMISSIONS.CHEQUE_SHOW,\r\n  },\r\n  {\r\n    id: 7,\r\n    label: \"گزارشات مالی\",\r\n    icon: <i className=\"material-icons-round\">monetization_on</i>,\r\n    permission:\r\n      Constants.ALL_PERMISSIONS.PAYMENT_SHOW ||\r\n      Constants.ALL_PERMISSIONS.CHEQUE_SHOW,\r\n    children: [\r\n      { label: \"گردش کل\", link: \"/app/payment-list?type=ALL\" },\r\n      { label: \"لیست دریافتی ها\", link: \"/app/payment-list?type=INCOME\" },\r\n      { label: \"لیست پرداختی ها\", link: \"/app/payment-list?type=OUTCOME\" },\r\n      {\r\n        label: \"لیست چک ها\",\r\n        link: \"/app/cheque-list\",\r\n        permission: Constants.ALL_PERMISSIONS.PAYMENT_SHOW,\r\n      },\r\n      {\r\n        label: \"لیست شماره حساب ها\",\r\n        link: \"/app/accountNumber\",\r\n        permission: Constants.ALL_PERMISSIONS.FREE,\r\n      },\r\n      {\r\n        label: \"لیست وام ها\",\r\n        link: \"/app/loan-list\",\r\n        permission: Constants.ALL_PERMISSIONS.FREE,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 8,\r\n    type: \"divider\",\r\n    permission:\r\n      Constants.ALL_PERMISSIONS.CUSTOMER_SHOW ||\r\n      Constants.ALL_PERMISSIONS.USER_SHOW ||\r\n      Constants.ALL_PERMISSIONS.EMPLOYEE_SHOW ||\r\n      Constants.ALL_PERMISSIONS.DRIVER_EDIT,\r\n  },\r\n  {\r\n    id: 9,\r\n    label: \"اشخاص\",\r\n    icon: <i className=\"material-icons-round\">account_circle</i>,\r\n    // permission:\r\n    //   Constants.ALL_PERMISSIONS.CUSTOMER_SHOW ||\r\n    //   Constants.ALL_PERMISSIONS.USER_SHOW ||\r\n    //   Constants.ALL_PERMISSIONS.EMPLOYEE_SHOW ||\r\n    //   Constants.ALL_PERMISSIONS.DRIVER_EDIT,\r\n    children: [\r\n      {\r\n        label: \"کاربران\",\r\n        link: \"/app/user-list\",\r\n        permission: Constants.ALL_PERMISSIONS.USER_SHOW,\r\n      },\r\n      {\r\n        label: \"مشتریان\",\r\n        link: \"/app/customer-list\",\r\n        permission: Constants.ALL_PERMISSIONS.CUSTOMER_SHOW,\r\n      },\r\n      {\r\n        label: \"پرسنل\",\r\n        link: \"/app/employee-list\",\r\n        permission: Constants.ALL_PERMISSIONS.EMPLOYEE_SHOW,\r\n      },\r\n      {\r\n        label: \"رانندگان\",\r\n        link: \"/app/driver-list\",\r\n        permission: Constants.ALL_PERMISSIONS.DRIVER_SHOW,\r\n      },\r\n    ],\r\n  },\r\n\r\n  { id: 13, type: \"divider\", permission: Constants.ALL_PERMISSIONS.FREE },\r\n  {\r\n    id: 14,\r\n    label: \" حضور و غیاب\",\r\n    icon: <i className=\"material-icons-round\">transfer_within_a_station</i>,\r\n    permission:\r\n      Constants.ALL_PERMISSIONS.ATTENDANCE_FACTORY1_SHOW ||\r\n      Constants.ALL_PERMISSIONS.ATTENDANCE_FACTORY2_SHOW ||\r\n      Constants.ALL_PERMISSIONS.ATTENDANCE_DEPOT_SHOW,\r\n    children: [\r\n      {\r\n        label: \"کارخانه یک\",\r\n        link: \"/app/traffic?type=FACTORY1\",\r\n        permission: Constants.ALL_PERMISSIONS.ATTENDANCE_FACTORY1_SHOW,\r\n      },\r\n      {\r\n        label: \"کارخانه دو\",\r\n        link: \"/app/traffic?type=FACTORY2\",\r\n        permission: Constants.ALL_PERMISSIONS.ATTENDANCE_FACTORY2_SHOW,\r\n      },\r\n      {\r\n        label: \"انبار\",\r\n        link: \"/app/traffic?type=DEPOT\",\r\n        permission: Constants.ALL_PERMISSIONS.ATTENDANCE_DEPOT_SHOW,\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    id: 14,\r\n    label: \"دسته بندی ها \",\r\n    link: \"/app/Category\",\r\n    icon: <i className=\"material-icons-round\">category</i>,\r\n    permission: Constants.ALL_PERMISSIONS.FREE,\r\n  },\r\n  // {\r\n  //   id: 15,\r\n  //   label: \"تنظیمات \",\r\n  //   link: \"/app/Settings\",\r\n  //   icon: <i className=\"material-icons-round\">settings</i>,\r\n  //   permission: Constants.ALL_PERMISSIONS.FREE,\r\n  // },\r\n];\r\n\r\nfunction Sidebar({ location }) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // global\r\n  var { isSidebarOpened } = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n\r\n  // local\r\n  var [isPermanent, setPermanent] = useState(true);\r\n\r\n  useEffect(function () {\r\n    window.addEventListener(\"resize\", handleWindowWidthChange);\r\n    handleWindowWidthChange();\r\n    return function cleanup() {\r\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Drawer\r\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\r\n      className={classNames(classes.drawer, {\r\n        [classes.drawerOpen]: isSidebarOpened,\r\n        [classes.drawerClose]: !isSidebarOpened,\r\n      })}\r\n      classes={{\r\n        paper: classNames({\r\n          [classes.drawerOpen]: isSidebarOpened,\r\n          [classes.drawerClose]: !isSidebarOpened,\r\n        }),\r\n      }}\r\n      open={isSidebarOpened}\r\n    >\r\n      <div className={classes.toolbar} />\r\n      <div className={classes.mobileBackButton}>\r\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\r\n          <ArrowForwardIcon\r\n            classes={{\r\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\r\n            }}\r\n          />\r\n        </IconButton>\r\n      </div>\r\n      <List className={classes.sidebarList}>\r\n        {structure.map((link) => (\r\n          <SidebarLink\r\n            key={link.id}\r\n            location={location}\r\n            isSidebarOpened={isSidebarOpened}\r\n            {...link}\r\n          />\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n\r\n  // ##################################################################\r\n  function handleWindowWidthChange() {\r\n    var windowWidth = window.innerWidth;\r\n    var breakpointWidth = theme.breakpoints.values.md;\r\n    var isSmallScreen = windowWidth < breakpointWidth;\r\n\r\n    if (isSmallScreen && isPermanent) {\r\n      setPermanent(false);\r\n      toggleSidebar(layoutDispatch);\r\n    } else if (!isSmallScreen && !isPermanent) {\r\n      setPermanent(true);\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(Sidebar);\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  datePicker: {\r\n    [theme.breakpoints.only(\"xs\")]: {\r\n      margin: \"10px 0\",\r\n    },\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n  paperTitle: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    position: \"relative\",\r\n  },\r\n  card: {\r\n    minHeight: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  visitsNumberContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexGrow: 1,\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n  progressSection: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  progressTitle: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  progress: {\r\n    marginBottom: theme.spacing(1),\r\n    backgroundColor: \"rgb(236, 236, 236)\",\r\n  },\r\n  pieChartLegendWrapper: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"flex-end\",\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  legendItemContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  fullHeightBody: {\r\n    display: \"flex\",\r\n    flexGrow: 1,\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  tableWidget: {\r\n    overflowX: \"auto\",\r\n  },\r\n  progressBarPrimary: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  progressBarSecondary: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  performanceLegendWrapper: {\r\n    display: \"flex\",\r\n    flexGrow: 1,\r\n    alignItems: \"center\",\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  legendElement: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  legendElementText: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  serverOverviewElement: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    maxWidth: \"100%\",\r\n  },\r\n  serverOverviewElementText: {\r\n    minWidth: 145,\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  serverOverviewElementChartWrapper: {\r\n    width: \"100%\",\r\n  },\r\n  mainChartBody: {\r\n    overflowX: \"auto\",\r\n  },\r\n  mainChartHeader: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    [theme.breakpoints.only(\"xs\")]: {\r\n      flexWrap: \"wrap\",\r\n    },\r\n  },\r\n  mainChartHeaderLabels: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    [theme.breakpoints.only(\"xs\")]: {\r\n      order: 3,\r\n      width: \"100%\",\r\n      justifyContent: \"center\",\r\n      marginTop: theme.spacing(3),\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n  },\r\n  mainChartHeaderLabel: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginLeft: theme.spacing(3),\r\n  },\r\n  mainChartSelectRoot: {\r\n    borderColor: theme.palette.text.hint + \"80 !important\",\r\n  },\r\n  mainChartSelect: {\r\n    padding: 10,\r\n    paddingRight: 25,\r\n  },\r\n  mainChartLegentElement: {\r\n    fontSize: \"18px !important\",\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  success: {\r\n    backgroundColor: theme.palette.success.main,\r\n    color: \"#fff\",\r\n  },\r\n  warning: {\r\n    backgroundColor: theme.palette.warning.main,\r\n    color: \"#fff\",\r\n  },\r\n  secondary: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles(theme => ({\r\n  widgetWrapper: {\r\n    display: \"flex\",\r\n    minHeight: \"100%\",\r\n  },\r\n  widgetHeader: {\r\n    padding: theme.spacing(3),\r\n    paddingBottom: theme.spacing(1),\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  widgetRoot: {\r\n    boxShadow: theme.customShadows.widget,\r\n  },\r\n  widgetBody: {\r\n    paddingBottom: theme.spacing(3),\r\n    paddingRight: theme.spacing(3),\r\n    paddingLeft: theme.spacing(3),\r\n  },\r\n  noPadding: {\r\n    padding: 0,\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    flexGrow: 1,\r\n    overflow: \"auto\",\r\n  },\r\n  moreButton: {\r\n    margin: -theme.spacing(1),\r\n    padding: 0,\r\n    width: 40,\r\n    height: 40,\r\n    color: theme.palette.text.hint,\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.primary.main,\r\n      color: \"rgba(255, 255, 255, 0.35)\",\r\n    },\r\n  },\r\n  noWidgetShadow: {\r\n    boxShadow: 'none'\r\n  }\r\n}));\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Paper,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert as MoreIcon } from \"@material-ui/icons\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\nexport default function Widget({\r\n  children,\r\n  title,\r\n  noBodyPadding,\r\n  bodyClass,\r\n  disableWidgetMenu,\r\n  header,\r\n  noHeaderPadding,\r\n  headerClass,\r\n  style,\r\n  noWidgetShadow,\r\n  ...props\r\n}) {\r\n  var classes = useStyles();\r\n\r\n  // local\r\n  var [moreButtonRef, setMoreButtonRef] = useState(null);\r\n  var [isMoreMenuOpen, setMoreMenuOpen] = useState(false);\r\n\r\n  return (\r\n    <div className={classes.widgetWrapper} style={style && { ...style }}>\r\n      <Paper\r\n        className={classes.paper}\r\n        classes={{\r\n          root: classnames(classes.widgetRoot, {\r\n            [classes.noWidgetShadow]: noWidgetShadow,\r\n          }),\r\n        }}\r\n      >\r\n        <div\r\n          className={classnames(classes.widgetHeader, {\r\n            [classes.noPadding]: noHeaderPadding,\r\n            [headerClass]: headerClass,\r\n          })}\r\n        >\r\n          {header ? (\r\n            header\r\n          ) : (\r\n            <React.Fragment>\r\n              <Typography variant=\"h5\" color=\"textSecondary\" noWrap>\r\n                {title}\r\n              </Typography>\r\n              {!true && (\r\n                <IconButton\r\n                  color=\"primary\"\r\n                  classes={{ root: classes.moreButton }}\r\n                  aria-owns=\"widget-menu\"\r\n                  aria-haspopup=\"true\"\r\n                  onClick={() => setMoreMenuOpen(true)}\r\n                  buttonRef={setMoreButtonRef}\r\n                >\r\n                  <MoreIcon />\r\n                </IconButton>\r\n              )}\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n        <div\r\n          className={classnames(classes.widgetBody, {\r\n            [classes.noPadding]: noBodyPadding,\r\n            [bodyClass]: bodyClass,\r\n          })}\r\n        >\r\n          {children}\r\n        </div>\r\n      </Paper>\r\n      <Menu\r\n        id=\"widget-menu\"\r\n        open={isMoreMenuOpen}\r\n        anchorEl={moreButtonRef}\r\n        onClose={() => setMoreMenuOpen(false)}\r\n        disableAutoFocusItem\r\n      >\r\n        <MenuItem>\r\n          <Typography>Edit</Typography>\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <Typography>Copy</Typography>\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <Typography>Delete</Typography>\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <Typography>Print</Typography>\r\n        </MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport classNames from \"classnames\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"relative\",\r\n    overflow: \"hidden\",\r\n    height: \"100%\",\r\n    padding: 20,\r\n    minHeight: 150,\r\n    cursor: \"pointer\",\r\n    transition: \"all 0.5s\",\r\n    backgroundColor: (props) => props.color,\r\n  },\r\n  icon: {\r\n    position: \"absolute\",\r\n    bottom: -20,\r\n    left: -20,\r\n    fontSize: 180,\r\n    color: theme.palette.grey[100],\r\n  },\r\n}));\r\n\r\nexport default function SimplePaper(props) {\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <Paper className={classes.root} onClick={props.onClick} style={props.style}>\r\n      <i className={classNames(\"material-icons-round\", classes.icon)}>\r\n        {props.icon}\r\n      </i>\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Grid, IconButton } from \"@material-ui/core\";\r\nimport MUIToolTip from \"@material-ui/core/Tooltip\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport {\r\n  ResponsiveContainer,\r\n  AreaChart,\r\n  LineChart,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Line,\r\n  Area,\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  YAxis,\r\n  XAxis,\r\n  Bar,\r\n  BarChart,\r\n  PolarRadiusAxis,\r\n  Radar,\r\n  PolarGrid,\r\n  PolarAngleAxis,\r\n  RadarChart,\r\n} from \"recharts\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport useStyles from \"./styles\";\r\nimport Widget from \"../../components/Widget\";\r\nimport { Typography } from \"../../components/Wrappers\";\r\nimport Dot from \"../../components/Sidebar/components/Dot\";\r\n\r\nimport Paper from \"../../components/Paper\";\r\nimport {\r\n  persianNumber,\r\n  getRandomColorFromTheme,\r\n  hasPermission,\r\n} from \"../../helpers/utils\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { useEffect } from \"react\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\n\r\nconst RADIAN = Math.PI / 180;\r\nconst renderCustomizedLabel = ({\r\n  cx,\r\n  cy,\r\n  midAngle,\r\n  innerRadius,\r\n  outerRadius,\r\n  percent,\r\n  index,\r\n}) => {\r\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n  return (\r\n    <text\r\n      x={x}\r\n      y={y}\r\n      fill=\"white\"\r\n      textAnchor={x > cx ? \"start\" : \"end\"}\r\n      dominantBaseline=\"central\"\r\n    >\r\n      {`${persianNumber((percent * 100).toFixed(0))}%`}\r\n    </text>\r\n  );\r\n};\r\n\r\nconst empoyeeTrafficChart = [\r\n  {\r\n    subject: \"فروردین\",\r\n    A: 100,\r\n  },\r\n  {\r\n    subject: \"ادریبهشت\",\r\n    A: 60,\r\n  },\r\n  {\r\n    subject: \"خرداد\",\r\n    A: 69,\r\n  },\r\n  {\r\n    subject: \"تیر\",\r\n    A: 75,\r\n  },\r\n  {\r\n    subject: \"مرداد\",\r\n    A: 95,\r\n  },\r\n  {\r\n    subject: \"شهریور\",\r\n    A: 90,\r\n  },\r\n  {\r\n    subject: \"مهر\",\r\n    A: 62,\r\n  },\r\n  {\r\n    subject: \"آبان\",\r\n    A: 100,\r\n  },\r\n  {\r\n    subject: \"آذر\",\r\n    A: 85,\r\n  },\r\n  {\r\n    subject: \"دی\",\r\n    A: 43,\r\n  },\r\n  {\r\n    subject: \"بهمن\",\r\n    A: 72,\r\n  },\r\n  {\r\n    subject: \"اسفند\",\r\n    A: 86,\r\n  },\r\n];\r\n\r\nconst trafficDayliChart = [\r\n  { name: \"حاضرین\", value: 15, color: \"#00989D\" },\r\n  { name: \"غائبین\", value: 5, color: \"#FF5C93\" },\r\n];\r\n\r\nexport default function Dashboard(props) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n  const history = useHistory();\r\n  const [pieChart, setPieChart] = useState([]);\r\n  const [paymentChart, setPaymentChart] = useState([]);\r\n  const [factorChart, setFactorChart] = useState([]);\r\n  const [showFilterBoxPayment, setShowFilterBoxPayment] = useState(false);\r\n  const [showFilterBoxFactor, setShowFilterBoxFactor] = useState(false);\r\n  const [selectedFromDateFactor, handleFromDateChangeFactor] = useState(\r\n    moment(),\r\n  );\r\n  const [selectedToDateFactor, handleToDateChangeFactor] = useState(moment());\r\n  const [selectedFromDatePayment, handleFromDateChangePayment] = useState(\r\n    moment(),\r\n  );\r\n  const [selectedToDatePayment, handleToDateChangePayment] = useState(moment());\r\n\r\n  const getDashboardRequest = useApi({\r\n    method: \"get\",\r\n    url: `dashboard/cashes`,\r\n  });\r\n\r\n  const getPaymentRequest = useApi({\r\n    method: \"get\",\r\n    url: showFilterBoxPayment\r\n      ? `dashboard/payments?{from:${selectedFromDatePayment._d.toISOString()},to:${selectedToDatePayment._d.toISOString()}}`\r\n      : \"dashboard/payments\",\r\n  });\r\n\r\n  const getFactorRequest = useApi({\r\n    method: \"get\",\r\n    url: showFilterBoxFactor\r\n      ? `dashboard/invoices?{from:${selectedFromDateFactor._d.toISOString()},to:${selectedToDateFactor._d.toISOString()}}`\r\n      : \"dashboard/invoices\",\r\n  });\r\n\r\n  const onClickPaper = (type) => {\r\n    history.push(`/app/${type}`);\r\n  };\r\n\r\n  const onChnageDateFactor = (e, type) => {\r\n    if (type === \"from\") {\r\n      handleFromDateChangeFactor(e);\r\n    } else {\r\n      handleToDateChangeFactor(e);\r\n    }\r\n  };\r\n\r\n  const onChnageDatePayment = (e, type) => {\r\n    if (type === \"from\") {\r\n      handleFromDateChangePayment(e);\r\n    } else {\r\n      handleToDateChangePayment(e);\r\n    }\r\n  };\r\n\r\n  const getPieChartData = async () => {\r\n    const dashboardChart = await getDashboardRequest.execute();\r\n    const { cashDesks } = dashboardChart;\r\n    const newCashDesks = [];\r\n    cashDesks?.map((item) => {\r\n      newCashDesks.push({ ...item, color: getRandomColorFromTheme() });\r\n    });\r\n    setPieChart(newCashDesks);\r\n  };\r\n\r\n  const getPaymentChart = async () => {\r\n    const chart = await getPaymentRequest.execute();\r\n    const { payments } = chart;\r\n    setPaymentChart(payments);\r\n  };\r\n\r\n  const getFactorChart = async () => {\r\n    const chart = await getFactorRequest.execute();\r\n    const { invoices } = chart;\r\n    setFactorChart(invoices);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPieChartData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getPaymentChart();\r\n  }, [selectedFromDatePayment, selectedToDatePayment]);\r\n\r\n  useEffect(() => {\r\n    getFactorChart();\r\n  }, [selectedFromDateFactor, selectedToDateFactor]);\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={4} style={{ marginBottom: 20 }}>\r\n        {hasPermission(Constant.ALL_PERMISSIONS.INVOICE_EDIT) && (\r\n          <Grid item lg={3} md={4} sm={6} xs={12}>\r\n            <Paper\r\n              icon=\"shopping_basket\"\r\n              onClick={() => {\r\n                onClickPaper(\"invoice-detail?type=BUY\");\r\n              }}\r\n            >\r\n              <div className={classes.paperTitle}>\r\n                <Typography variant=\"h3\">ثبت خرید</Typography>\r\n              </div>\r\n            </Paper>\r\n          </Grid>\r\n        )}\r\n        {hasPermission(Constant.ALL_PERMISSIONS.INVOICE_EDIT) && (\r\n          <Grid item lg={3} md={4} sm={6} xs={12}>\r\n            <Paper\r\n              icon=\"sell\"\r\n              onClick={() => {\r\n                onClickPaper(\"invoice-detail?type=SELL\");\r\n              }}\r\n            >\r\n              <div className={classes.paperTitle}>\r\n                <Typography variant=\"h3\">ثبت فروش</Typography>\r\n              </div>\r\n            </Paper>\r\n          </Grid>\r\n        )}\r\n        {hasPermission(Constant.ALL_PERMISSIONS.INVOICE_EDIT) && (\r\n          <Grid item lg={3} md={4} sm={6} xs={12}>\r\n            <Paper\r\n              icon=\"move_to_inbox\"\r\n              onClick={() => {\r\n                onClickPaper(\"payment-detail?type=INCOME\");\r\n              }}\r\n            >\r\n              <div className={classes.paperTitle}>\r\n                <Typography variant=\"h3\">ثبت دریافت</Typography>\r\n              </div>\r\n            </Paper>\r\n          </Grid>\r\n        )}\r\n        {hasPermission(Constant.ALL_PERMISSIONS.PAYMENT_EDIT) && (\r\n          <Grid item lg={3} md={4} sm={6} xs={12}>\r\n            <Paper\r\n              icon=\"unarchive\"\r\n              onClick={() => {\r\n                onClickPaper(\"payment-detail?type=OUTCOME\");\r\n              }}\r\n            >\r\n              <div className={classes.paperTitle}>\r\n                <Typography variant=\"h3\">ثبت پرداخت</Typography>\r\n              </div>\r\n            </Paper>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n      <Grid container spacing={4} style={{ marginBottom: 20 }}>\r\n        {hasPermission(Constant.ALL_PERMISSIONS.INVOICE_EDIT) && (\r\n          <Grid item md={3} xs={6}>\r\n            <Paper\r\n              style={{ backgroundColor: \"#f9d5d1\" }}\r\n              icon=\"bolt\"\r\n              onClick={() => {\r\n                onClickPaper(\"fast_invoice?type=BUY\");\r\n              }}\r\n            >\r\n              <div className={classes.paperTitle}>\r\n                <Typography variant=\"h3\" style={{ color: \"#c5221f\" }}>\r\n                  فاکتور خرید سریع\r\n                </Typography>\r\n              </div>\r\n            </Paper>\r\n          </Grid>\r\n        )}\r\n        {hasPermission(Constant.ALL_PERMISSIONS.ATTENDANCE_EDIT) && (\r\n          <Grid item lg={6} xs={12}>\r\n            <Paper\r\n              icon=\"transfer_within_a_station\"\r\n              onClick={() => {\r\n                onClickPaper(\"traffic\");\r\n              }}\r\n            >\r\n              <div\r\n                className={classes.paperTitle}\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <div>\r\n                  <Typography color=\"text-s\" variant=\"h3\">\r\n                    حضور و غیاب\r\n                  </Typography>\r\n                  <div\r\n                    className={classes.performanceLegendWrapper}\r\n                    style={{ marginTop: 20 }}\r\n                  >\r\n                    <div className={classes.legendElement}>\r\n                      <Dot color=\"secondary\" />\r\n                      <Typography\r\n                        color=\"text\"\r\n                        colorBrightness=\"secondary\"\r\n                        className={classes.legendElementText}\r\n                      >\r\n                        غائبین\r\n                      </Typography>\r\n                    </div>\r\n                    <div className={classes.legendElement}>\r\n                      <Dot color=\"primary\" />\r\n                      <Typography\r\n                        color=\"text\"\r\n                        colorBrightness=\"secondary\"\r\n                        className={classes.legendElementText}\r\n                      >\r\n                        حاضرین\r\n                      </Typography>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <PieChart width={250} height={100}>\r\n                  <Pie\r\n                    data={trafficDayliChart}\r\n                    cx={120}\r\n                    cy={100}\r\n                    startAngle={180}\r\n                    endAngle={0}\r\n                    innerRadius={60}\r\n                    outerRadius={80}\r\n                    fill=\"#8884d8\"\r\n                    paddingAngle={5}\r\n                    dataKey=\"value\"\r\n                  >\r\n                    {trafficDayliChart.map((entry, index) => (\r\n                      <Cell key={`cell-${index}`} fill={entry.color} />\r\n                    ))}\r\n                  </Pie>\r\n                  <Tooltip />\r\n                </PieChart>\r\n              </div>\r\n            </Paper>\r\n          </Grid>\r\n        )}{\" \"}\r\n      </Grid>\r\n      <Grid container spacing={4} style={{ marginBottom: 20 }}>\r\n        {hasPermission(Constant.ALL_PERMISSIONS.ATTENDANCE_SHOW) && (\r\n          <Grid style={{ height: 500 }} item lg={6} xs={12}>\r\n            <Widget\r\n              title=\"میزان حضور پرسنل\"\r\n              upperTitle\r\n              bodyClass={classes.fullHeightBody}\r\n              className={classes.card}\r\n            >\r\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                <RadarChart\r\n                  cx=\"50%\"\r\n                  cy=\"50%\"\r\n                  outerRadius=\"80%\"\r\n                  data={empoyeeTrafficChart}\r\n                >\r\n                  <PolarGrid />\r\n                  <PolarAngleAxis dataKey=\"subject\" />\r\n                  <PolarRadiusAxis />\r\n                  <Radar\r\n                    name=\"Mike\"\r\n                    dataKey=\"A\"\r\n                    stroke=\"#8884d8\"\r\n                    fill=\"#8884d8\"\r\n                    fillOpacity={0.6}\r\n                  />\r\n                </RadarChart>\r\n              </ResponsiveContainer>\r\n            </Widget>\r\n          </Grid>\r\n        )}\r\n        {hasPermission(Constant.ALL_PERMISSIONS.CASH_DESK_SHOW) && (\r\n          <Grid item lg={6} xs={12}>\r\n            <Widget title=\"موجودی صندوق ها\" upperTitle className={classes.card}>\r\n              <Grid container spacing={2}>\r\n                {pieChart.length && (\r\n                  <Grid item sm={6} xs={12}>\r\n                    <div style={{ width: \"100%\", height: \"330px\" }}>\r\n                      <div style={{ width: \"100%\", height: \"100%\" }}>\r\n                        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                          <PieChart width=\"300\" height=\"400\">\r\n                            <Pie\r\n                              data={pieChart}\r\n                              cx=\"50%\"\r\n                              cy=\"50%\"\r\n                              labelLine={false}\r\n                              label={renderCustomizedLabel}\r\n                              outerRadius={120}\r\n                              fill=\"#8884d8\"\r\n                              dataKey=\"amount\"\r\n                            >\r\n                              {pieChart.map((entry, index) => (\r\n                                <Cell\r\n                                  key={`cell-${index}`}\r\n                                  fill={entry.color}\r\n                                />\r\n                              ))}\r\n                            </Pie>\r\n                          </PieChart>\r\n                        </ResponsiveContainer>\r\n                      </div>\r\n                    </div>\r\n                  </Grid>\r\n                )}\r\n                <Grid item sm={6} xs={12}>\r\n                  <div className={classes.pieChartLegendWrapper}>\r\n                    {pieChart.map(({ name, amount, color }, index) => (\r\n                      <div key={color} className={classes.legendItemContainer}>\r\n                        <Dot color={color} />\r\n                        <Typography\r\n                          variant=\"h6\"\r\n                          style={{ whiteSpace: \"nowrap\" }}\r\n                        >\r\n                          &nbsp;{name}&nbsp;\r\n                        </Typography>\r\n                        <Typography\r\n                          color=\"text\"\r\n                          variant=\"h4\"\r\n                          colorBrightness=\"secondary\"\r\n                        >\r\n                          &nbsp;{persianNumber(amount)}\r\n                        </Typography>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n            </Widget>\r\n          </Grid>\r\n        )}\r\n\r\n        {hasPermission(Constant.ALL_PERMISSIONS.PAYMENT_SHOW) && (\r\n          <Grid item xs={12}>\r\n            <Widget\r\n              bodyClass={classes.mainChartBody}\r\n              header={\r\n                <div className={classes.mainChartHeader}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"text\"\r\n                    colorBrightness=\"secondary\"\r\n                  >\r\n                    دریافتی و پرداختی ها\r\n                  </Typography>\r\n\r\n                  {showFilterBoxPayment && (\r\n                    <>\r\n                      <Grid item lg={3} xs={12} className={classes.datePicker}>\r\n                        <DatePicker\r\n                          autoOk\r\n                          name=\"date\"\r\n                          label=\"از تاریخ\"\r\n                          inputVariant=\"outlined\"\r\n                          okLabel=\"تأیید\"\r\n                          cancelLabel=\"لغو\"\r\n                          labelFunc={(date) =>\r\n                            date ? date.format(\"jYYYY/jMM/jDD\") : \"\"\r\n                          }\r\n                          value={selectedFromDatePayment}\r\n                          onChange={(e) => onChnageDatePayment(e, \"from\")}\r\n                          style={{ width: \"100%\" }}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item lg={3} xs={12} className={classes.datePicker}>\r\n                        <DatePicker\r\n                          autoOk\r\n                          name=\"date\"\r\n                          label=\"تا تاریخ\"\r\n                          inputVariant=\"outlined\"\r\n                          okLabel=\"تأیید\"\r\n                          cancelLabel=\"لغو\"\r\n                          labelFunc={(date) =>\r\n                            date ? date.format(\"jYYYY/jMM/jDD\") : \"\"\r\n                          }\r\n                          value={selectedToDatePayment}\r\n                          onChange={(e) => onChnageDatePayment(e, \"to\")}\r\n                          style={{ width: \"100%\" }}\r\n                        />\r\n                      </Grid>\r\n                    </>\r\n                  )}\r\n                  <div className={classes.mainChartHeaderLabels}>\r\n                    <div className={classes.mainChartHeaderLabel}>\r\n                      <Dot color=\"primary\" />\r\n                      <Typography className={classes.mainChartLegentElement}>\r\n                        دریافتی\r\n                      </Typography>\r\n                    </div>\r\n                    <div className={classes.mainChartHeaderLabel}>\r\n                      <Dot color=\"secondary\" />\r\n                      <Typography className={classes.mainChartLegentElement}>\r\n                        پرداختی\r\n                      </Typography>\r\n                    </div>\r\n                    <MUIToolTip title=\"فیلتر\">\r\n                      <IconButton\r\n                        onClick={() =>\r\n                          setShowFilterBoxPayment(!showFilterBoxPayment)\r\n                        }\r\n                      >\r\n                        <i class=\"material-icons-round\">filter_alt</i>\r\n                      </IconButton>\r\n                    </MUIToolTip>\r\n                  </div>\r\n                </div>\r\n              }\r\n            >\r\n              <ResponsiveContainer width=\"100%\" height={350}>\r\n                <LineChart\r\n                  width={500}\r\n                  height={300}\r\n                  data={paymentChart}\r\n                  margin={{\r\n                    top: 5,\r\n                    right: 30,\r\n                    left: 20,\r\n                    bottom: 5,\r\n                  }}\r\n                >\r\n                  <CartesianGrid strokeDasharray=\"3 3\" />\r\n                  <XAxis dataKey=\"date\" />\r\n                  <YAxis />\r\n                  <Tooltip />\r\n                  <Line\r\n                    type=\"monotone\"\r\n                    dataKey=\"income\"\r\n                    stroke={theme.palette.primary.main}\r\n                    activeDot={{ r: 8 }}\r\n                  />\r\n                  <Line\r\n                    type=\"monotone\"\r\n                    dataKey=\"outcome\"\r\n                    stroke={theme.palette.secondary.main}\r\n                  />\r\n                </LineChart>\r\n              </ResponsiveContainer>\r\n            </Widget>\r\n          </Grid>\r\n        )}\r\n        {hasPermission(Constant.ALL_PERMISSIONS.INVOICE_SHOW) && (\r\n          <Grid item xs={12}>\r\n            <Widget\r\n              bodyClass={classes.mainChartBody}\r\n              header={\r\n                <div className={classes.mainChartHeader}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"text\"\r\n                    colorBrightness=\"secondary\"\r\n                  >\r\n                    مبلغ فاکتور ها\r\n                  </Typography>\r\n                  {showFilterBoxFactor && (\r\n                    <>\r\n                      <Grid item lg={3} xs={12} className={classes.datePicker}>\r\n                        <DatePicker\r\n                          autoOk\r\n                          name=\"date\"\r\n                          label=\"از تاریخ\"\r\n                          inputVariant=\"outlined\"\r\n                          okLabel=\"تأیید\"\r\n                          cancelLabel=\"لغو\"\r\n                          labelFunc={(date) =>\r\n                            date ? date.format(\"jYYYY/jMM/jDD\") : \"\"\r\n                          }\r\n                          value={selectedFromDateFactor}\r\n                          onChange={(e) => onChnageDateFactor(e, \"from\")}\r\n                          style={{ width: \"100%\" }}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item lg={3} xs={12} className={classes.datePicker}>\r\n                        <DatePicker\r\n                          autoOk\r\n                          name=\"date\"\r\n                          label=\"تا تاریخ\"\r\n                          inputVariant=\"outlined\"\r\n                          okLabel=\"تأیید\"\r\n                          cancelLabel=\"لغو\"\r\n                          labelFunc={(date) =>\r\n                            date ? date.format(\"jYYYY/jMM/jDD\") : \"\"\r\n                          }\r\n                          value={selectedToDateFactor}\r\n                          onChange={(e) => onChnageDateFactor(e, \"to\")}\r\n                          style={{ width: \"100%\" }}\r\n                        />\r\n                      </Grid>\r\n                    </>\r\n                  )}\r\n                  <div className={classes.mainChartHeaderLabels}>\r\n                    <div className={classes.mainChartHeaderLabel}>\r\n                      <Dot color=\"primary\" />\r\n                      <Typography className={classes.mainChartLegentElement}>\r\n                        فاکتور فروش\r\n                      </Typography>\r\n                    </div>\r\n                    <div className={classes.mainChartHeaderLabel}>\r\n                      <Dot color=\"secondary\" />\r\n                      <Typography className={classes.mainChartLegentElement}>\r\n                        فاکتور خرید\r\n                      </Typography>\r\n                    </div>\r\n                    <MUIToolTip title=\"فیلتر\">\r\n                      <IconButton\r\n                        onClick={() =>\r\n                          setShowFilterBoxFactor(!showFilterBoxFactor)\r\n                        }\r\n                      >\r\n                        <i class=\"material-icons-round\">filter_alt</i>\r\n                      </IconButton>\r\n                    </MUIToolTip>\r\n                  </div>\r\n                </div>\r\n              }\r\n            >\r\n              {factorChart.length && (\r\n                <div style={{ width: \"100%\", height: \"450px\" }}>\r\n                  <div style={{ width: \"100%\", height: \"100%\" }}>\r\n                    <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                      <BarChart\r\n                        width={100}\r\n                        height={300}\r\n                        data={factorChart}\r\n                        margin={{\r\n                          top: 5,\r\n                          right: 30,\r\n                          left: 20,\r\n                          bottom: 5,\r\n                        }}\r\n                      >\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"date\" />\r\n                        <YAxis />\r\n                        <Tooltip />\r\n                        <Bar dataKey=\"buy\" fill=\"#3CD4A0\" />\r\n                        <Bar dataKey=\"sell\" fill=\"#FF5C93\" />\r\n                      </BarChart>\r\n                    </ResponsiveContainer>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </Widget>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\n// #######################################################################\r\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\r\n  var array = new Array(length).fill();\r\n  let lastValue;\r\n\r\n  return array.map((item, index) => {\r\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\r\n\r\n    while (\r\n      randomValue <= min ||\r\n      randomValue >= max ||\r\n      (lastValue && randomValue - lastValue > maxDiff)\r\n    ) {\r\n      randomValue = Math.floor(Math.random() * multiplier + 1);\r\n    }\r\n\r\n    lastValue = randomValue;\r\n\r\n    return { value: randomValue };\r\n  });\r\n}\r\n\r\nfunction getMainChartData() {\r\n  var resultArray = [];\r\n  var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\r\n  var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\r\n  var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\r\n\r\n  for (let i = 0; i < tablet.length; i++) {\r\n    resultArray.push({\r\n      tablet: tablet[i].value,\r\n      desktop: desktop[i].value,\r\n      mobile: mobile[i].value,\r\n    });\r\n  }\r\n\r\n  return resultArray;\r\n}\r\n","import React from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\n\r\nconst ITEM_HEIGHT = 48;\r\n\r\nexport default function TableRowMenu(props) {\r\n  const { options, hadleAction } = props;\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleSelect = (type) => {\r\n    hadleAction(type);\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <IconButton\r\n        aria-label=\"more\"\r\n        aria-controls=\"long-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n      >\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5,\r\n          },\r\n        }}\r\n      >\r\n        {options.map(\r\n          (option) =>\r\n            !option.hidden && (\r\n              <MenuItem key={option.id} onClick={() => handleSelect(option.id)}>\r\n                {option.title}\r\n              </MenuItem>\r\n            ),\r\n        )}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Toolbar,\r\n  Typography,\r\n  IconButton,\r\n  Tooltip,\r\n  TextField,\r\n  Button,\r\n  Collapse,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/SearchRounded\";\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  box: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst TableTop = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const {\r\n    title,\r\n    onAdd,\r\n    FilterComponent,\r\n    handleSearch,\r\n    toolbarClass,\r\n    addButtonClass,\r\n    minimal,\r\n    defaultSearch,\r\n  } = props;\r\n  const [showSearchText, setShowSearchText] = useState(!!defaultSearch);\r\n  const [showFilterBox, setShowFilterBox] = useState(true);\r\n  const [searchText, setSearchText] = useState(defaultSearch);\r\n\r\n  const onChangeSearch = (event) => {\r\n    const { value } = event.target;\r\n    setSearchText(value);\r\n  };\r\n\r\n  const OnSearchKeyPress = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      handleSearch(searchText);\r\n    }\r\n  };\r\n\r\n  const onRemoveSearch = () => {\r\n    setSearchText(\"\");\r\n    handleSearch(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Toolbar className={clsx(classes.root, toolbarClass)}>\r\n        <Typography variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          {title}\r\n        </Typography>\r\n        <div className={classes.box}>\r\n          {showSearchText && (\r\n            <TextField\r\n              value={searchText}\r\n              size=\"small\"\r\n              label=\"جستجو\"\r\n              variant=\"outlined\"\r\n              onChange={onChangeSearch}\r\n              onKeyDown={OnSearchKeyPress}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <i\r\n                      className=\"material-icons-round\"\r\n                      style={{ cursor: \"pointer\" }}\r\n                      onClick={onRemoveSearch}\r\n                    >\r\n                      clear\r\n                    </i>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n          {handleSearch && (\r\n            <Tooltip title=\"جستجو در جدول\">\r\n              <IconButton\r\n                aria-label=\"filter list\"\r\n                onClick={() => setShowSearchText(!showSearchText)}\r\n              >\r\n                <SearchIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          )}\r\n          {FilterComponent && (\r\n            <Tooltip title=\"فیلتر\">\r\n              <IconButton onClick={() => setShowFilterBox(!showFilterBox)}>\r\n                <i class=\"material-icons-round\">filter_alt</i>\r\n              </IconButton>\r\n            </Tooltip>\r\n          )}\r\n\r\n          {typeof onAdd === \"function\" && (\r\n            <Button\r\n              variant={minimal ? \"\" : \"contained\"}\r\n              color={minimal ? \"\" : \"primary\"}\r\n              className={addButtonClass}\r\n              onClick={onAdd}\r\n            >\r\n              {minimal ? \"\" : \"افزودن\"}\r\n              <span class=\"material-icons-round\" style={{ color: \"white\" }}>\r\n                add\r\n              </span>\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </Toolbar>\r\n      <Collapse in={showFilterBox}>{FilterComponent}</Collapse>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TableTop;\r\n","import React from \"react\";\r\n\r\nimport {\r\n  Typography,\r\n  TableSortLabel,\r\n  TableRow,\r\n  TableCell,\r\n  TableHead,\r\n} from \"@material-ui/core\";\r\n\r\nfunction TableHeader(props) {\r\n  const { order, orderBy, onRequestSort, headCells } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            style={{ textAlign: \"right\" }}\r\n            key={headCell.id}\r\n            padding={\"none\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              className={{ display: \"flex\" }}\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              <Typography variant=\"h6\">{headCell.label}</Typography>\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nexport default TableHeader;\r\n","import React from \"react\";\r\n\r\nimport { TablePagination } from \"@material-ui/core\";\r\n\r\nfunction TablePaging(props) {\r\n  const {\r\n    handleChangePage,\r\n    count,\r\n    handleChangeRowsPerPage,\r\n    page,\r\n    rowsPerPage,\r\n  } = props;\r\n  return (\r\n    <TablePagination\r\n      style={{ display: \"flex\" }}\r\n      rowsPerPageOptions={[100, 200, 300]}\r\n      component=\"div\"\r\n      count={count}\r\n      rowsPerPage={rowsPerPage}\r\n      page={page}\r\n      onChangePage={handleChangePage}\r\n      onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      labelRowsPerPage=\"تعداد ردیف \"\r\n      backIconButtonText=\"صفحه قبل\"\r\n      nextIconButtonText=\"صفحه بعد\"\r\n      labelDisplayedRows={({ from, to, count }) =>\r\n        `${from}-${to} از ${count !== -1 ? count : 0}`\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default TablePaging;\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Grid,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport { getRandomNumber } from \"../../helpers/utils\";\r\n\r\nexport default function CustomSkeleton({ headCount }) {\r\n  return (\r\n    <Paper style={{ padding: 10 }}>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        style={{\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          padding: \"20px 0\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <Grid item style={{ width: `20%` }}>\r\n          <Skeleton variant=\"rect\" />\r\n        </Grid>\r\n        <Grid item style={{ width: `15%` }}>\r\n          <Skeleton variant=\"rect\" />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        style={{ width: \"100%\", display: \"flex\", padding: \"20px 0\" }}\r\n      >\r\n        {headCount.map((item) => {\r\n          return (\r\n            <Grid item style={{ width: `${100 / headCount.length}%` }}>\r\n              <Skeleton variant=\"text\" />\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n      <Divider />\r\n      <div>\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n          style={{ width: \"100%\", display: \"flex\", padding: \"10px 0\" }}\r\n        >\r\n          {headCount.map((item) => {\r\n            return (\r\n              <Grid item style={{ width: `${100 / headCount.length}%` }}>\r\n                <Skeleton\r\n                  variant=\"text\"\r\n                  width={`${getRandomNumber(60, 100)}%`}\r\n                />\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n        <Divider />\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n          style={{ width: \"100%\", display: \"flex\", padding: \"10px 0\" }}\r\n        >\r\n          {headCount.map((item) => {\r\n            return (\r\n              <Grid item style={{ width: `${100 / headCount.length}%` }}>\r\n                <Skeleton\r\n                  variant=\"text\"\r\n                  width={`${getRandomNumber(60, 100)}%`}\r\n                />\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n        <Divider />\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n          style={{ width: \"100%\", display: \"flex\", padding: \"10px 0\" }}\r\n        >\r\n          {headCount.map((item) => {\r\n            return (\r\n              <Grid item style={{ width: `${100 / headCount.length}%` }}>\r\n                <Skeleton\r\n                  variant=\"text\"\r\n                  width={`${getRandomNumber(60, 100)}%`}\r\n                />\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n        <Divider />\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n          style={{ width: \"100%\", display: \"flex\", padding: \"10px 0\" }}\r\n        >\r\n          {headCount.map((item) => {\r\n            return (\r\n              <Grid item style={{ width: `${100 / headCount.length}%` }}>\r\n                <Skeleton\r\n                  variant=\"text\"\r\n                  width={`${getRandomNumber(60, 100)}%`}\r\n                />\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n      </div>\r\n      <Divider />\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        style={{ width: \"100%\", display: \"flex\", padding: \"20px 0\" }}\r\n      >\r\n        <Grid item style={{ width: `10%` }}>\r\n          <Skeleton variant=\"rect\" />\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { convertParamsToQueryString, hasPermission } from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"username\",\r\n    label: \"نام کاربری\",\r\n  },\r\n  {\r\n    id: \"firstName\",\r\n    label: \"نام\",\r\n  },\r\n  { id: \"lastName\", label: \"نام خانوادگی\" },\r\n  {\r\n    id: \"mobile\",\r\n    label: \"موبایل\",\r\n  },\r\n  { id: \"phone\", label: \"تلفن\" },\r\n  { id: \"action\" },\r\n];\r\n\r\nconst MainList = () => {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"username\");\r\n  const [search, setSearch] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const history = useHistory();\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onAdd = () => {\r\n    history.push(\"/app/user-detail?action=add\");\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const getUserRequest = useApi({\r\n    method: \"get\",\r\n    url: `user?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n    })}`,\r\n  });\r\n\r\n  const deleteUseRequest = useApi({\r\n    method: \"delete\",\r\n    url: `user`,\r\n  });\r\n\r\n  const handleAction = (id, type) => {\r\n    const types = {\r\n      edit: () => {\r\n        history.push(`/app/user-detail?action=edit&id=${id}`);\r\n      },\r\n      delete: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            await deleteUseRequest.execute(null, id);\r\n            setList(list.filter((item) => item.id !== id));\r\n            DialogActions.hide({ name: \"delete\" });\r\n          },\r\n          name: \"delete\",\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const getData = async () => {\r\n    const userList = await getUserRequest.execute();\r\n    setList(userList.data);\r\n    setTotal(userList.total);\r\n  };\r\n\r\n  const onClicKRow = (e, row) => {\r\n    if (e.target.tagName === \"TD\") {\r\n      handleAction(row.id, \"edit\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.USER_SHOW) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getUserRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title=\"لیست کاربران\"\r\n                    onAdd={\r\n                      hasPermission(Constant.ALL_PERMISSIONS.USER_EDIT) && onAdd\r\n                    }\r\n                    // handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                  />\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          if (!row.isAdmin) {\r\n                            return (\r\n                              <TableRow\r\n                                hover\r\n                                tabIndex={-1}\r\n                                key={row.id}\r\n                                style={{ paddingRight: 10 }}\r\n                                onClick={(e) => onClicKRow(e, row)}\r\n                              >\r\n                                <TableCell padding=\"none\">\r\n                                  {row.username}\r\n                                </TableCell>\r\n                                <TableCell padding=\"none\">\r\n                                  {row.firstName}\r\n                                </TableCell>\r\n                                <TableCell padding=\"none\">\r\n                                  {row.lastName}\r\n                                </TableCell>\r\n                                <TableCell padding=\"none\">\r\n                                  {row.mobile}\r\n                                </TableCell>\r\n                                <TableCell padding=\"none\">\r\n                                  {row.phone}\r\n                                </TableCell>\r\n\r\n                                <TableCell padding=\"none\">\r\n                                  <TableRowMenu\r\n                                    options={[\r\n                                      {\r\n                                        id: \"edit\",\r\n                                        title: \"ویرایش\",\r\n                                        hidden: !hasPermission(\r\n                                          Constant.ALL_PERMISSIONS.USER_EDIT,\r\n                                        ),\r\n                                      },\r\n                                      {\r\n                                        id: \"delete\",\r\n                                        title: \"حذف\",\r\n                                        hidden: !hasPermission(\r\n                                          Constant.ALL_PERMISSIONS.USER_DELETE,\r\n                                        ),\r\n                                      },\r\n                                    ]}\r\n                                    hadleAction={(type) =>\r\n                                      handleAction(row.id, type)\r\n                                    }\r\n                                  />\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            );\r\n                          }\r\n                        })}\r\n                        {!list.length && !getUserRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default MainList;\r\n","import { CircularProgress } from \"@material-ui/core\";\r\n\r\nconst Circular = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flex: 1,\r\n        heght: \"100vh\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <CircularProgress />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Circular;\r\n","import React, { useState } from \"react\";\r\nimport { Grid, Button, FormControlLabel, Checkbox } from \"@material-ui/core\";\r\n\r\nimport Constant from \"../../helpers/constant\";\r\n\r\nexport default function Permission({ onSubmit, defaultPermissions }) {\r\n  const permissions = Constant.PERMISSIONS;\r\n  const [userAccess, setUserAccess] = useState(defaultPermissions || []);\r\n\r\n  const handleChange = (item) => {\r\n    if (userAccess.includes(item)) {\r\n      return setUserAccess(userAccess.filter((i) => i !== item));\r\n    }\r\n    setUserAccess([...userAccess, item]);\r\n  };\r\n\r\n  const onSelectAll = () => {\r\n    const array = [];\r\n    permissions.map((item) => {\r\n      array.push(item.value);\r\n    });\r\n    setUserAccess(array);\r\n  };\r\n\r\n  const onDeSelectAll = () => {\r\n    setUserAccess([]);\r\n  };\r\n\r\n  return (\r\n    <Grid item sm={12}>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        style={{\r\n          maxHeight: 200,\r\n          overflowY: \"auto\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          flexWrap: \"wrap\",\r\n          marginBottom: 20,\r\n        }}\r\n      >\r\n        {permissions.map((item) => {\r\n          return (\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={userAccess.includes(item.value)}\r\n                  onChange={() => handleChange(item.value)}\r\n                  name={item.value}\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label={item.label}\r\n            />\r\n          );\r\n        })}\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          onClick={() => onSubmit(userAccess)}\r\n        >\r\n          تایید\r\n        </Button>\r\n        <Grid>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={onSelectAll}\r\n            style={{ margin: \"0 10px\" }}\r\n          >\r\n            انتخاب همه\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={onDeSelectAll}>\r\n            حذف همه\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport clsx from \"clsx\";\r\nimport { getQueryString } from \"../../helpers/utils\";\r\nimport CircularProgress from \"../../components/CircularProgress\";\r\nimport Permission from \"./permission\";\r\nimport dialogAction from \"../../redux/actions/dialogAction\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n}));\r\n\r\nexport default function MainDetail() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const id = getQueryString(\"id\");\r\n  const action = getQueryString(\"action\");\r\n  const [detail, setDetail] = useState({});\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n  const [isPassword, setIsPassword] = useState(true);\r\n  const addUserRequest = useApi({\r\n    method: \"post\",\r\n    url: `user`,\r\n  });\r\n  const editUserRequest = useApi({\r\n    method: \"put\",\r\n    url: `user/${id}`,\r\n  });\r\n  const detailUserRequest = useApi({\r\n    method: \"get\",\r\n    url: `user/${id}`,\r\n  });\r\n\r\n  const onChangeViewClick = function () {\r\n    setIsPassword(!isPassword);\r\n  };\r\n\r\n  const onSubmitPermission = async (data, permissions) => {\r\n    const value = { ...data, permissions };\r\n    if (id) {\r\n      await editUserRequest.execute(value);\r\n    } else {\r\n      await addUserRequest.execute(value);\r\n    }\r\n    onDismissPermission();\r\n  };\r\n\r\n  const onDismissPermission = () => {\r\n    dialogAction.hide({ name: \"permission\" });\r\n  };\r\n\r\n  const onShowPermissionDialog = (data) => {\r\n    dialogAction.show({\r\n      title: \"دسترسی ها\",\r\n      component: (\r\n        <Permission\r\n          defaultPermissions={detail?.permissions}\r\n          onSubmit={(value) => onSubmitPermission(data, value)}\r\n          onDismiss={onDismissPermission}\r\n        />\r\n      ),\r\n      name: \"permission\",\r\n      size: \"8\",\r\n      confirm: false,\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    onShowPermissionDialog(data);\r\n  };\r\n\r\n  const onReject = () => {\r\n    history.push(\"/app/user-list\");\r\n  };\r\n\r\n  const getDetail = async () => {\r\n    const detail = await detailUserRequest.execute();\r\n    setDetail(detail.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      getDetail();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(detail);\r\n  }, [reset, detail]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      {!detailUserRequest.pending ? (\r\n        <Grid item lg={6} sm={12} className={classes.root}>\r\n          <Paper className={classes.paper}>\r\n            <Typography\r\n              className={classes.title}\r\n              variant=\"h6\"\r\n              id=\"tableTitle\"\r\n              component=\"div\"\r\n            >\r\n              {id ? \"ویرایش کاربر\" : \"افزودن کاربر\"}\r\n            </Typography>\r\n\r\n            <Grid container spacing={3}>\r\n              <Fragment>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"نام\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.firstName}\r\n                          helperText={\r\n                            errors.firstName ? errors.firstName.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                    name=\"firstName\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"نام خانوادگی\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.lastName}\r\n                          helperText={\r\n                            errors.lastName ? errors.lastName.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                    name=\"lastName\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"نام کاربری\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.username}\r\n                          helperText={\r\n                            errors.username ? errors.username.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                    name=\"username\"\r\n                  />\r\n                </Grid>\r\n                {action === \"add\" && (\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"رمز عبور\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.password}\r\n                            helperText={\r\n                              errors.password ? errors.password.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            type={isPassword ? \"password\" : \"text\"}\r\n                            InputProps={{\r\n                              endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                  <i\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    className={clsx(\r\n                                      \"material-icons-round\",\r\n                                      classes.icon,\r\n                                    )}\r\n                                    onClick={onChangeViewClick}\r\n                                  >\r\n                                    {isPassword\r\n                                      ? \"visibility_off\"\r\n                                      : \"visibility\"}\r\n                                  </i>\r\n                                </InputAdornment>\r\n                              ),\r\n                            }}\r\n                          />\r\n                        );\r\n                      }}\r\n                      rules={{\r\n                        required: Constant.VALIDATION.REQUIRED,\r\n                        minLength: {\r\n                          value: 5,\r\n                          message: Constant.VALIDATION.PASSWORD,\r\n                        },\r\n                      }}\r\n                      name=\"password\"\r\n                    />\r\n                  </Grid>\r\n                )}\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"موبایل\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.mobile}\r\n                          helperText={\r\n                            errors.mobile ? errors.mobile.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    rules={{\r\n                      minLength: {\r\n                        value: 11,\r\n                        message: Constant.VALIDATION.MOBILE_NUMBER,\r\n                      },\r\n                      maxLength: {\r\n                        value: 11,\r\n                        message: Constant.VALIDATION.MOBILE_NUMBER,\r\n                      },\r\n                    }}\r\n                    name=\"mobile\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"تلفن\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.phone}\r\n                          helperText={errors.phone ? errors.phone.message : \"\"}\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    name=\"phone\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"آدرس\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.address}\r\n                          helperText={\r\n                            errors.address ? errors.address.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    name=\"address\"\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                    تایید\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={onReject}\r\n                  >\r\n                    بازگشت\r\n                  </Button>\r\n                </Grid>\r\n              </Fragment>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      ) : (\r\n        <CircularProgress />\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  status: {\r\n    color: \"#fff\",\r\n  },\r\n  CREDITOR: {\r\n    backgroundColor: theme.palette.success.main,\r\n  },\r\n  NODEBT: {\r\n    backgroundColor: theme.palette.gray.main,\r\n  },\r\n  DEBTOR: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: 7,\r\n  },\r\n}));\r\n","import React, { useState } from \"react\";\r\nimport { Grid, TextField, MenuItem, Button, Divider } from \"@material-ui/core\";\r\nimport Constant from \"../../helpers/constant\";\r\n\r\nconst personType = [\r\n  {\r\n    label: \"بدهکار\",\r\n    value: Constant.PERSON_STATUS.DEBTIOR,\r\n  },\r\n  { label: \"بی حساب\", value: Constant.PERSON_STATUS.NODEBT },\r\n  { label: \"طلبکار\", value: Constant.PERSON_STATUS.CREDITOR },\r\n];\r\n\r\nconst Filter = ({ onFilter, category }) => {\r\n  const [filterData, setFilterData] = useState({\r\n    name: \"\",\r\n    status: \"\",\r\n    category: \"\",\r\n  });\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setFilterData({ ...filterData, [prop]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (typeof onFilter === \"function\") {\r\n      onFilter(filterData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3} alignItems=\"center\" style={{ padding: 10 }}>\r\n      <Grid item lg={3} xs={12}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          label=\"نام\"\r\n          onChange={handleChange(\"name\")}\r\n          value={filterData.name}\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n      </Grid>\r\n      <Grid item lg={3} xs={12}>\r\n        <TextField\r\n          select\r\n          label=\"وضعیت\"\r\n          onChange={handleChange(\"status\")}\r\n          value={filterData.status}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        >\r\n          {personType.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n          <MenuItem key={\"ALL\"} value={\"ALL\"}>\r\n            همه وضعیت ها\r\n          </MenuItem>\r\n        </TextField>\r\n      </Grid>\r\n      <Grid item lg={3} xs={12}>\r\n        <TextField\r\n          select\r\n          label=\"دسته بندی\"\r\n          onChange={handleChange(\"category\")}\r\n          value={filterData.category}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        >\r\n          {category.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n          <MenuItem key={\"ALL\"} value={\"ALL\"}>\r\n            همه دسته بندی ها\r\n          </MenuItem>\r\n        </TextField>\r\n      </Grid>\r\n      <Grid item lg={3} xs={12}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n          تایید\r\n        </Button>\r\n      </Grid>\r\n      <Divider style={{ width: \"100%\" }} />\r\n    </Grid>\r\n  );\r\n};\r\nexport default Filter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Chip,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport {\r\n  convertParamsToQueryString,\r\n  hasPermission,\r\n  persianNumber,\r\n} from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport FilterComponent from \"./filter\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"firstName\",\r\n    label: \"نام\",\r\n  },\r\n  { id: \"lastName\", label: \"نام خانوادگی\" },\r\n  {\r\n    id: \"mobile\",\r\n    label: \"موبایل\",\r\n  },\r\n  { id: \"cardNumber\", label: \"شماره کارت\" },\r\n  { id: \"remaining\", label: \"مانده حساب\" },\r\n  { id: \"status\", label: \"وضعیت\" },\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function MainList() {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [search, setSearch] = useState();\r\n  const [orderBy, setOrderBy] = useState(\"firstName\");\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [category, setCategory] = useState([]);\r\n  const [filter, setFilter] = useState();\r\n  const history = useHistory();\r\n  const [total, setTotal] = useState(0);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onAdd = () => {\r\n    history.push(\"/app/customer-detail\");\r\n  };\r\n\r\n  const getCustomerRequest = useApi({\r\n    method: \"get\",\r\n    url: decodeURIComponent(\r\n      `customer?${convertParamsToQueryString({\r\n        page,\r\n        order,\r\n        orderBy,\r\n        pageSize,\r\n        search,\r\n        filter,\r\n      })}`,\r\n    ),\r\n  });\r\n\r\n  const deleteUseRequest = useApi({\r\n    method: \"delete\",\r\n    url: `customer`,\r\n  });\r\n\r\n  const GetCustomerCategoryRequest = useApi({\r\n    method: \"get\",\r\n    url: \"customer/category\",\r\n  });\r\n\r\n  const handleAction = (row, type) => {\r\n    const types = {\r\n      edit: () => {\r\n        history.push(`/app/customer-detail?id=${row.id}`);\r\n      },\r\n      delete: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            await deleteUseRequest.execute(null, row.id);\r\n            setList(list.filter((item) => item.id !== row.id));\r\n            DialogActions.hide({ name: \"delete\" });\r\n          },\r\n          name: \"delete\",\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n      transaction: () => {\r\n        history.push(`/app/person-transaction?id=${row.id}&type=employee`);\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const onClicKRow = (e, row) => {\r\n    if (e.target.tagName === \"TD\") {\r\n      handleAction(row, \"edit\");\r\n    }\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onFilter = (data) => {\r\n    const properData = `{name:${data.name},status:${data.status},category:${data.category}}`;\r\n    setFilter(properData);\r\n    setPage(0);\r\n  };\r\n\r\n  const getData = async () => {\r\n    const customerList = await getCustomerRequest.execute();\r\n    setList(customerList.data);\r\n    setTotal(customerList.total);\r\n  };\r\n\r\n  const getCategory = async () => {\r\n    const categories = await GetCustomerCategoryRequest.execute();\r\n    setCategory(categories.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize, filter]);\r\n\r\n  useEffect(() => {\r\n    getCategory();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.CUSTOMER_SHOW) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getCustomerRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title=\"لیست مشتریان\"\r\n                    onAdd={\r\n                      hasPermission(Constant.ALL_PERMISSIONS.CUSTOMER_EDIT) &&\r\n                      onAdd\r\n                    }\r\n                    FilterComponent={\r\n                      <FilterComponent\r\n                        onFilter={onFilter}\r\n                        category={category}\r\n                      />\r\n                    }\r\n                    // handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                    addPermission={hasPermission(\r\n                      Constant.ALL_PERMISSIONS.CUSTOMER_EDIT,\r\n                    )}\r\n                  />\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                              onClick={(e) => onClicKRow(e, row)}\r\n                            >\r\n                              <TableCell padding=\"none\">\r\n                                {row.firstName}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.lastName}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(row.mobile)}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(row.accountCardNumber)}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(row.accountRemaining)?.replace(\r\n                                  \"-\",\r\n                                  \"\",\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                <Chip\r\n                                  label={Constant.PERSON_STATUS[row.status]}\r\n                                  className={clsx(\r\n                                    classes.status,\r\n                                    classes[row.status],\r\n                                  )}\r\n                                />\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                <TableRowMenu\r\n                                  options={[\r\n                                    { id: \"transaction\", title: \"تراکنش ها\" },\r\n                                    {\r\n                                      id: \"edit\",\r\n                                      title: \"ویرایش\",\r\n                                      hidden: !hasPermission(\r\n                                        Constant.ALL_PERMISSIONS.CUSTOMER_EDIT,\r\n                                      ),\r\n                                    },\r\n                                    {\r\n                                      id: \"delete\",\r\n                                      title: \"حذف\",\r\n                                      hidden: !hasPermission(\r\n                                        Constant.ALL_PERMISSIONS\r\n                                          .CUSTOMER_DELETE,\r\n                                      ),\r\n                                    },\r\n                                  ]}\r\n                                  hadleAction={(type) =>\r\n                                    handleAction(row, type)\r\n                                  }\r\n                                />\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getCustomerRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import clsx from \"clsx\";\r\nimport theme from \"../../themes/default\";\r\n\r\nexport const DeleteIcon = () => {\r\n  return (\r\n    <i\r\n      className={clsx(\"material-icons-round\")}\r\n      style={{ color: theme.palette.danger.main }}\r\n    >\r\n      clear\r\n    </i>\r\n  );\r\n};\r\n\r\nexport const EditIcon = () => {\r\n  return (\r\n    <i\r\n      className={clsx(\"material-icons-round\")}\r\n      style={{ color: theme.palette.primary.main }}\r\n    >\r\n      edit\r\n    </i>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Grid, MenuItem } from \"@material-ui/core\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport styles from \"./style\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nconst Account = ({ onSubmit, onDismiss, defaultValues }) => {\r\n  const [banks, setBanks] = useState([]);\r\n  const [selectedBank, setSelectedBank] = useState(\r\n    defaultValues?.bank.value || 1,\r\n  );\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n  const classes = styles();\r\n\r\n  const getBankRequest = useApi({\r\n    method: \"get\",\r\n    url: `bank`,\r\n  });\r\n\r\n  const getBanks = async () => {\r\n    const result = await getBankRequest.execute();\r\n    setBanks(result.data);\r\n  };\r\n\r\n  const getSelectedBank = () => {\r\n    return banks.find((item) => item.value === selectedBank);\r\n  };\r\n\r\n  const onDone = (data) => {\r\n    const newId = uuid();\r\n    const value = {\r\n      ...data,\r\n      bank: getSelectedBank(),\r\n      id: defaultValues ? defaultValues.id : newId,\r\n      isUpdate: !!defaultValues,\r\n    };\r\n    onSubmit(value);\r\n  };\r\n\r\n  const onChangeBank = (e) => {\r\n    setSelectedBank(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBanks();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(defaultValues);\r\n  }, [reset, defaultValues]);\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          select\r\n          label=\"بانک\"\r\n          onChange={onChangeBank}\r\n          value={selectedBank}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n          name=\"bank\"\r\n          SelectProps={{\r\n            classes: {\r\n              select: classes.rootSelect,\r\n            },\r\n          }}\r\n        >\r\n          {banks.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              <img\r\n                src={`${Constant.API_ADDRESS}/${option.logo}`}\r\n                alt={option.label}\r\n                style={{\r\n                  width: 25,\r\n                  height: 25,\r\n                  borderRadius: \"50%\",\r\n                  marginLeft: 10,\r\n                }}\r\n              />\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                fullWidth\r\n                value={value}\r\n                size=\"small\"\r\n                name={name}\r\n                label=\"شماره کارت\"\r\n                variant=\"outlined\"\r\n                onChange={onChange}\r\n                error={!!errors.accountCardNumber}\r\n                helperText={\r\n                  errors.accountCardNumber\r\n                    ? errors.accountCardNumber.message\r\n                    : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          rules={{\r\n            minLength: {\r\n              value: 16,\r\n              message: Constant.VALIDATION.CARD_NUMBER,\r\n            },\r\n            maxLength: {\r\n              value: 16,\r\n              message: Constant.VALIDATION.CARD_NUMBER,\r\n            },\r\n          }}\r\n          name=\"accountCardNumber\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                fullWidth\r\n                value={value}\r\n                size=\"small\"\r\n                name={name}\r\n                label=\"شماره حساب\"\r\n                variant=\"outlined\"\r\n                onChange={onChange}\r\n                error={!!errors.accountNumber}\r\n                helperText={\r\n                  errors.accountNumber ? errors.accountNumber.message : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          name=\"accountNumber\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                fullWidth\r\n                value={value}\r\n                size=\"small\"\r\n                name={name}\r\n                label=\"شماره شبا\"\r\n                variant=\"outlined\"\r\n                onChange={onChange}\r\n                error={!!errors.accountShaba}\r\n                helperText={\r\n                  errors.accountShaba ? errors.accountShaba.message : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          name=\"accountShaba\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                label=\"توضیحات\"\r\n                multiline\r\n                rows={4}\r\n                variant=\"outlined\"\r\n                name={name}\r\n                onChange={onChange}\r\n                value={value}\r\n                fullWidth\r\n                error={!!errors.description}\r\n                helperText={\r\n                  errors.description ? errors.description.message : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          name=\"description\"\r\n        />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          onClick={handleSubmit(onDone)}\r\n        >\r\n          تایید\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onDismiss}>\r\n          انصراف\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport { DeleteIcon, EditIcon } from \"../../components/icons\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { getQueryString } from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport Account from \"./account\";\r\nimport CircularProgress from \"../../components/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n}));\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"Name\",\r\n    label: \"نام بانک\",\r\n  },\r\n  { id: \"accountNumber\", label: \"شماره حساب \" },\r\n  {\r\n    id: \"CardNumber\",\r\n    label: \"شماره کارت\",\r\n  },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function MainDetail() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const id = getQueryString(\"id\");\r\n  const [detail, setDetail] = useState({});\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [category, setCategory] = useState([]);\r\n  const [customerCategory, setCustomerCategory] = useState(1);\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n\r\n  const addCustomerRequest = useApi({\r\n    method: \"post\",\r\n    url: `customer`,\r\n  });\r\n  const editCustomerRequest = useApi({\r\n    method: \"put\",\r\n    url: `customer/${id}`,\r\n  });\r\n  const detailCustomerRequest = useApi({\r\n    method: \"get\",\r\n    url: `customer/${id}`,\r\n  });\r\n\r\n  const customerCategoryRequest = useApi({\r\n    method: \"get\",\r\n    url: `customer/category`,\r\n  });\r\n\r\n  const deleteAccountRequest = useApi({\r\n    method: \"delete\",\r\n    url: `account`,\r\n  });\r\n\r\n  const onSubmit = async (data) => {\r\n    const newAccounts = [];\r\n    accounts.map((item) => {\r\n      const newData = {\r\n        bankId: item.bank.value || item.bank.id,\r\n        accountCardNumber: item.accountCardNumber,\r\n        accountNumber: item.accountNumber,\r\n        accountShaba: item.accountShaba,\r\n        description: item.description,\r\n        id: item.id.toString().includes(\"-\") ? null : item.id,\r\n      };\r\n      newAccounts.push(newData);\r\n    });\r\n\r\n    const allData = { ...data, accounts: newAccounts, customerCategory };\r\n    if (id) {\r\n      return await editCustomerRequest.execute(allData);\r\n    }\r\n    await addCustomerRequest.execute(allData);\r\n    setTimeout(() => {\r\n      onReject();\r\n    }, 1000);\r\n  };\r\n\r\n  const onReject = () => {\r\n    history.push(\"/app/customer-list\");\r\n  };\r\n\r\n  const getDetail = async () => {\r\n    const detail = await detailCustomerRequest.execute();\r\n    setDetail(detail.data);\r\n    setCustomerCategory(detail.data.customerCategory);\r\n    setAccounts(detail.data.accounts);\r\n  };\r\n\r\n  const getCustomerCategory = async () => {\r\n    const detail = await customerCategoryRequest.execute();\r\n    setCategory(detail.data);\r\n  };\r\n\r\n  const onSubmitAccount = (data) => {\r\n    if (data.isUpdate) {\r\n      const index = accounts.findIndex((item) => item.id === data.id);\r\n      const accounstTmp = [...accounts];\r\n      accounstTmp[index] = data;\r\n      setAccounts(accounstTmp);\r\n    } else {\r\n      setAccounts([...accounts, data]);\r\n    }\r\n    onDismissAccount();\r\n  };\r\n\r\n  const onDismissAccount = () => {\r\n    DialogActions.hide({ name: \"account\" });\r\n  };\r\n\r\n  const onShowDialog = (data) => {\r\n    DialogActions.show({\r\n      title: \" حساب بانکی\",\r\n      component: (\r\n        <Account\r\n          onSubmit={onSubmitAccount}\r\n          onDismiss={onDismissAccount}\r\n          defaultValues={data}\r\n        />\r\n      ),\r\n      name: \"account\",\r\n      size: \"4\",\r\n      confirm: false,\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  const onAddAccount = () => {\r\n    onShowDialog();\r\n  };\r\n\r\n  const handleEditAccount = (data) => {\r\n    onShowDialog(data);\r\n  };\r\n\r\n  const handleDeleteAccount = (row) => {\r\n    debugger;\r\n    DialogActions.show({\r\n      confirm: true,\r\n      title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n      onAction: async () => {\r\n        if (id) {\r\n          await deleteAccountRequest.execute(null, row.id);\r\n        }\r\n        setAccounts(accounts.filter((item) => item.id !== row.id));\r\n        DialogActions.hide({ name: \"delete\" });\r\n      },\r\n      name: \"delete\",\r\n      size: \"6\",\r\n      disableCloseButton: false,\r\n    });\r\n  };\r\n\r\n  const onChangeCategory = (e) => {\r\n    setCustomerCategory(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCustomerCategory();\r\n    if (id) {\r\n      getDetail();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(detail);\r\n  }, [reset, detail]);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        {!detailCustomerRequest.pending ? (\r\n          <Grid item lg={6} sm={12} className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n              <Typography\r\n                className={classes.title}\r\n                variant=\"h6\"\r\n                id=\"tableTitle\"\r\n                component=\"div\"\r\n              >\r\n                {id ? \"ویرایش مشتری\" : \"افزودن مشتری\"}\r\n              </Typography>\r\n\r\n              <Grid container spacing={3}>\r\n                <Fragment>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"نام\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.firstName}\r\n                            helperText={\r\n                              errors.firstName ? errors.firstName.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                      name=\"firstName\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"نام خانوادگی\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.lastName}\r\n                            helperText={\r\n                              errors.lastName ? errors.lastName.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                      name=\"lastName\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"تلفن\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.phone}\r\n                            helperText={\r\n                              errors.phone ? errors.phone.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"phone\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"موبایل\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.mobile}\r\n                            helperText={\r\n                              errors.mobile ? errors.mobile.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      rules={{\r\n                        minLength: {\r\n                          value: 11,\r\n                          message: Constant.VALIDATION.MOBILE_NUMBER,\r\n                        },\r\n                        maxLength: {\r\n                          value: 11,\r\n                          message: Constant.VALIDATION.MOBILE_NUMBER,\r\n                        },\r\n                      }}\r\n                      name=\"mobile\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            type=\"number\"\r\n                            variant=\"outlined\"\r\n                            label=\"مانده از قبل\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.accountRemaining}\r\n                            helperText={\r\n                              errors.accountRemaining\r\n                                ? errors.accountRemaining.message\r\n                                : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"accountRemaining\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    {!!category.length && customerCategory && (\r\n                      <TextField\r\n                        select\r\n                        label=\"دسته بندی\"\r\n                        value={customerCategory}\r\n                        onChange={onChangeCategory}\r\n                        variant=\"outlined\"\r\n                        error={!!errors.customerCategory}\r\n                        helperText={\r\n                          errors.customerCategory\r\n                            ? errors.customerCategory.message\r\n                            : \"\"\r\n                        }\r\n                        fullWidth\r\n                        size=\"small\"\r\n                      >\r\n                        {category.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </TextField>\r\n                    )}\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={onAddAccount}\r\n                    >\r\n                      افزودن حساب بانکی\r\n                    </Button>\r\n                  </Grid>\r\n                  {!!accounts.length && (\r\n                    <Grid item xs={12}>\r\n                      <Paper>\r\n                        <TableContainer style={{ padding: \"0 10px\" }}>\r\n                          <Table\r\n                            className={classes.table}\r\n                            size={\"medium\"}\r\n                            style={{ paddingRight: 10 }}\r\n                          >\r\n                            <TableHeader headCells={headCells} />\r\n\r\n                            <TableBody>\r\n                              {accounts.map((row) => {\r\n                                return (\r\n                                  <TableRow\r\n                                    hover\r\n                                    tabIndex={-1}\r\n                                    key={row.id}\r\n                                    style={{ paddingRight: 10 }}\r\n                                  >\r\n                                    <TableCell padding=\"none\">\r\n                                      <div\r\n                                        style={{\r\n                                          display: \"flex\",\r\n                                          alignItems: \"center\",\r\n                                        }}\r\n                                      >\r\n                                        <img\r\n                                          src={`${Constant.API_ADDRESS}/${row.bank.logo}`}\r\n                                          alt={row.bank.label}\r\n                                          style={{\r\n                                            width: 25,\r\n                                            height: 25,\r\n                                            borderRadius: \"50%\",\r\n                                            marginLeft: 5,\r\n                                          }}\r\n                                        />\r\n                                        {row.bank.name || row.bank.label}\r\n                                      </div>\r\n                                    </TableCell>\r\n                                    <TableCell padding=\"none\">\r\n                                      {row.accountNumber}\r\n                                    </TableCell>\r\n                                    <TableCell padding=\"none\">\r\n                                      {row.accountCardNumber}\r\n                                    </TableCell>\r\n\r\n                                    <TableCell\r\n                                      padding=\"none\"\r\n                                      style={{ textAlign: \"left\" }}\r\n                                    >\r\n                                      <IconButton\r\n                                        onClick={() => handleEditAccount(row)}\r\n                                      >\r\n                                        <EditIcon />\r\n                                      </IconButton>\r\n\r\n                                      <IconButton\r\n                                        onClick={() => handleDeleteAccount(row)}\r\n                                      >\r\n                                        <DeleteIcon />\r\n                                      </IconButton>\r\n                                    </TableCell>\r\n                                  </TableRow>\r\n                                );\r\n                              })}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                      </Paper>\r\n                    </Grid>\r\n                  )}\r\n\r\n                  <Grid item xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"آدرس\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.address}\r\n                            helperText={\r\n                              errors.address ? errors.address.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"address\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            label=\"توضیحات\"\r\n                            multiline\r\n                            rows={4}\r\n                            variant=\"outlined\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            fullWidth\r\n                            error={!!errors.description}\r\n                            helperText={\r\n                              errors.description\r\n                                ? errors.description.message\r\n                                : \"\"\r\n                            }\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"description\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                  >\r\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                      تایید\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      onClick={onReject}\r\n                    >\r\n                      بازگشت\r\n                    </Button>\r\n                  </Grid>\r\n                </Fragment>\r\n              </Grid>\r\n            </Paper>\r\n          </Grid>\r\n        ) : (\r\n          <CircularProgress />\r\n        )}\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Tabs,\r\n  Tab,\r\n  Chip,\r\n} from \"@material-ui/core\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport {\r\n  convertParamsToQueryString,\r\n  persianNumber,\r\n  hasPermission,\r\n} from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport clsx from \"clsx\";\r\nimport { getQueryString } from \"../../helpers/utils\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"date\",\r\n    label: \"تاریخ\",\r\n  },\r\n  { id: \"price\", label: \"مبلغ\" },\r\n  {\r\n    id: \"type\",\r\n    label: \"نوع\",\r\n  },\r\n  {\r\n    id: \"Desc\",\r\n    label: \"بابت\",\r\n  },\r\n  { id: \"action\" },\r\n];\r\n\r\nconst MainList = () => {\r\n  const customerId = getQueryString(\"id\");\r\n  const type = getQueryString(\"type\");\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"date\");\r\n  const [search, setSearch] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const history = useHistory();\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n  };\r\n\r\n  const getPaymentRequest = useApi({\r\n    method: \"get\",\r\n    url: `payment/person/${type}?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n    })}`,\r\n  });\r\n\r\n  const deleteUseRequest = useApi({\r\n    method: \"delete\",\r\n    url: `payment`,\r\n  });\r\n\r\n  const handleAction = (row, type) => {\r\n    const types = {\r\n      edit: () => {\r\n        history.push(\r\n          `/app/payment-detail?type=${row.type}&id=${row.id}&customerId=${customerId}`,\r\n        );\r\n      },\r\n      delete: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            await deleteUseRequest.execute(null, row.id);\r\n            setList(list.filter((item) => item.id !== row.id));\r\n            DialogActions.hide({ name: \"delete\" });\r\n          },\r\n          name: \"delete\",\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const onClicKRow = (e, row) => {\r\n    if (e.target.tagName === \"TD\") {\r\n      handleAction(row, \"edit\");\r\n    }\r\n  };\r\n\r\n  const getTableTitle = () => {\r\n    if (list.length)\r\n      return (\r\n        <div>\r\n          لیست تراکنش های{\" \"}\r\n          <b style={{ fontWeight: \"bolder\" }}>{list[0].person}</b>\r\n        </div>\r\n      );\r\n  };\r\n\r\n  const getData = async () => {\r\n    const list = await getPaymentRequest.execute(null, customerId);\r\n    setList(list.data);\r\n    setTotal(list.total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.PAYMENT_LIST) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getPaymentRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title={getTableTitle()}\r\n                    // handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                  />\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{\r\n                                paddingRight: 10,\r\n                                backgroundColor:\r\n                                  row.type === \"OUTCOME\"\r\n                                    ? \"#ffe8e8\"\r\n                                    : \"#b1eed9\",\r\n                              }}\r\n                              onClick={(e) => onClicKRow(e, row)}\r\n                            >\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  new Date(row.date).toLocaleDateString(\r\n                                    \"fa-IR\",\r\n                                  ),\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  Number(row.price).toLocaleString(),\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {Constant.PAYMENT_TYPE[row.type]}\r\n                              </TableCell>\r\n\r\n                              <TableCell padding=\"none\">\r\n                                {row.description}\r\n                              </TableCell>\r\n\r\n                              <TableCell padding=\"none\">\r\n                                <TableRowMenu\r\n                                  options={[\r\n                                    { id: \"edit\", title: \"ویرایش\" },\r\n                                    { id: \"delete\", title: \"حذف\" },\r\n                                  ]}\r\n                                  hadleAction={(type) =>\r\n                                    handleAction(row, type)\r\n                                  }\r\n                                />\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getPaymentRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default MainList;\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  salary: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  salaryPaperLeft: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  salaryPaperRight: {\r\n    marginBottom: theme.spacing(2),\r\n    padding: 20,\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  tab: {\r\n    borderBottom: `1px solid ${theme.palette.gray.main}`,\r\n  },\r\n  status: {\r\n    color: \"#fff\",\r\n  },\r\n  CREDITOR: {\r\n    backgroundColor: theme.palette.success.main,\r\n  },\r\n  NODEBT: {\r\n    backgroundColor: theme.palette.gray.main,\r\n  },\r\n  DEBTIOR: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  PRESENT: {\r\n    backgroundColor: theme.palette.success.main,\r\n  },\r\n  ABSET: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: 7,\r\n  },\r\n}));\r\n","import React, { useState } from \"react\";\r\nimport { Grid, TextField, MenuItem, Button, Divider } from \"@material-ui/core\";\r\nimport Constant from \"../../helpers/constant\";\r\n\r\nconst personType = [\r\n  {\r\n    label: \"بدهکار\",\r\n    value: Constant.PERSON_STATUS.DEBTIOR,\r\n  },\r\n  { label: \"بی حساب\", value: Constant.PERSON_STATUS.NODEBT },\r\n  { label: \"طلبکار\", value: Constant.PERSON_STATUS.CREDITOR },\r\n];\r\n\r\nconst Filter = ({ onFilter }) => {\r\n  const [filterData, setFilterData] = useState({ name: \"\", status: \"\" });\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setFilterData({ ...filterData, [prop]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (typeof onFilter === \"function\") {\r\n      onFilter(filterData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3} alignItems=\"center\" style={{ padding: 10 }}>\r\n      <Grid item lg={3} xs={12}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          label=\"نام\"\r\n          onChange={handleChange(\"name\")}\r\n          value={filterData.name}\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n      </Grid>\r\n      <Grid item lg={3} xs={12}>\r\n        <TextField\r\n          select\r\n          label=\"وضعیت\"\r\n          onChange={handleChange(\"status\")}\r\n          value={filterData.status}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        >\r\n          {personType.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n          <MenuItem key={\"ALL\"} value={\"ALL\"}>\r\n            همه وضعیت ها\r\n          </MenuItem>\r\n        </TextField>\r\n      </Grid>\r\n      <Grid item lg={3} xs={12}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n          تایید\r\n        </Button>\r\n      </Grid>\r\n      <Divider style={{ width: \"100%\" }} />\r\n    </Grid>\r\n  );\r\n};\r\nexport default Filter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Chip,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { convertParamsToQueryString, hasPermission } from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport FilterComponent from \"./filter\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"firstName\",\r\n    label: \"نام\",\r\n  },\r\n  { id: \"lastName\", label: \"نام خانوادگی\" },\r\n  {\r\n    id: \"محل خدمت\",\r\n    label: \"محل خدمت\",\r\n  },\r\n  {\r\n    id: \"mobile\",\r\n    label: \"موبایل\",\r\n  },\r\n  { id: \"status\", label: \"وضعیت\" },\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function MainList() {\r\n  const CONTERACT_TYPE = {\r\n    DEPOT: \"انبار\",\r\n    FACTORY1: \"کارخانه یک\",\r\n    FACTORY2: \"کارخانه دو\",\r\n  };\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [search, setSearch] = useState();\r\n  const [orderBy, setOrderBy] = useState(\"firstName\");\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [type, setType] = useState(\"ALL\");\r\n  const [filter, setFilter] = useState();\r\n  const [total, setTotal] = useState(0);\r\n  const history = useHistory();\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onAdd = () => {\r\n    history.push(\"/app/employee-detail\");\r\n  };\r\n\r\n  const getEmployeeRequest = useApi({\r\n    method: \"get\",\r\n    url: decodeURIComponent(\r\n      `employee?${convertParamsToQueryString({\r\n        page,\r\n        order,\r\n        orderBy,\r\n        pageSize,\r\n        search,\r\n        filter,\r\n        type,\r\n      })}`,\r\n    ),\r\n  });\r\n\r\n  const deleteUseRequest = useApi({\r\n    method: \"delete\",\r\n    url: `employee`,\r\n  });\r\n\r\n  const handleAction = (row, type) => {\r\n    const { id, firstName, lastName } = row;\r\n    const types = {\r\n      edit: () => {\r\n        history.push(`/app/employee-detail?id=${id}`);\r\n      },\r\n      delete: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            await deleteUseRequest.execute(null, id);\r\n            setList(list.filter((item) => item.id !== id));\r\n            DialogActions.hide({ name: \"delete\" });\r\n          },\r\n          name: \"delete\",\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n      traffic: () => {\r\n        history.push(\r\n          `/app/employee-log?id=${id}&name=${firstName} ${lastName}`,\r\n        );\r\n      },\r\n      transaction: () => {\r\n        history.push(`/app/person-transaction?id=${id}&type=employee`);\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const onClicKRow = (e, row) => {\r\n    if (e.target.tagName === \"TD\") {\r\n      handleAction(row, \"edit\");\r\n    }\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onFilter = (data) => {\r\n    const properData = `{name:${data.name},status:${data.status}}`;\r\n    setFilter(properData);\r\n    setPage(0);\r\n  };\r\n\r\n  const onChangeType = (e, value) => {\r\n    setType(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const getData = async () => {\r\n    const employeeList = await getEmployeeRequest.execute();\r\n    setList(employeeList.data);\r\n    setTotal(employeeList.total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize, type, filter]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.EMPLOYEE_SHOW) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getEmployeeRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title=\"لیست پرسنل\"\r\n                    onAdd={\r\n                      hasPermission(Constant.ALL_PERMISSIONS.EMPLOYEE_EDIT) &&\r\n                      onAdd\r\n                    }\r\n                    FilterComponent={<FilterComponent onFilter={onFilter} />}\r\n                    // handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                  />\r\n                  <div className={classes.tab}>\r\n                    <Tabs\r\n                      value={type}\r\n                      onChange={onChangeType}\r\n                      indicatorColor=\"primary\"\r\n                      textColor=\"primary\"\r\n                      centered\r\n                      variant=\"fullWidth\"\r\n                    >\r\n                      <Tab label=\"کل پرسنل\" value=\"ALL\" />\r\n\r\n                      <Tab label=\"پرسنل کارخانه یک\" value=\"FACTORY1\" />\r\n                      <Tab label=\"پرسنل کارخانه دو\" value=\"FACTORY2\" />\r\n                      <Tab label=\"پرسنل انبار\" value=\"DEPOT\" />\r\n                    </Tabs>\r\n                  </div>\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                              onClick={(e) => onClicKRow(e, row)}\r\n                            >\r\n                              <TableCell padding=\"none\">\r\n                                {row.firstName}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.lastName}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {CONTERACT_TYPE[row.contractType]}\r\n                              </TableCell>\r\n\r\n                              <TableCell padding=\"none\">{row.mobile}</TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                <Chip\r\n                                  label={Constant.PERSON_STATUS[row.status]}\r\n                                  className={clsx(\r\n                                    classes.status,\r\n                                    classes[row.status],\r\n                                  )}\r\n                                />\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                <TableRowMenu\r\n                                  options={[\r\n                                    { id: \"transaction\", title: \"تراکنش ها\" },\r\n                                    { id: \"traffic\", title: \"گزارش تردد\" },\r\n                                    {\r\n                                      id: \"edit\",\r\n                                      title: \"ویرایش\",\r\n                                      hidden: !hasPermission(\r\n                                        Constant.ALL_PERMISSIONS.EMPLOYEE_EDIT,\r\n                                      ),\r\n                                    },\r\n                                    {\r\n                                      id: \"delete\",\r\n                                      title: \"حذف\",\r\n                                      hidden: !hasPermission(\r\n                                        Constant.ALL_PERMISSIONS\r\n                                          .EMPLOYEE_DELETE,\r\n                                      ),\r\n                                    },\r\n                                  ]}\r\n                                  hadleAction={(type) =>\r\n                                    handleAction(row, type)\r\n                                  }\r\n                                />\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getEmployeeRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Grid, MenuItem } from \"@material-ui/core\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport styles from \"./style\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nconst Account = ({ onSubmit, onDismiss, defaultValues }) => {\r\n  const [banks, setBanks] = useState([]);\r\n  const [selectedBank, setSelectedBank] = useState(\r\n    defaultValues?.bank.value || 1,\r\n  );\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n  const classes = styles();\r\n\r\n  const getBankRequest = useApi({\r\n    method: \"get\",\r\n    url: `bank`,\r\n  });\r\n\r\n  const getBanks = async () => {\r\n    const result = await getBankRequest.execute();\r\n    setBanks(result.data);\r\n  };\r\n\r\n  const getSelectedBank = () => {\r\n    return banks.find((item) => item.value === selectedBank);\r\n  };\r\n\r\n  const onDone = (data) => {\r\n    const newId = uuid();\r\n    const value = {\r\n      ...data,\r\n      bank: getSelectedBank(),\r\n      id: defaultValues ? defaultValues.id : newId,\r\n      isUpdate: !!defaultValues,\r\n    };\r\n    onSubmit(value);\r\n  };\r\n\r\n  const onChangeBank = (e) => {\r\n    setSelectedBank(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBanks();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(defaultValues);\r\n  }, [reset, defaultValues]);\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          select\r\n          label=\"بانک\"\r\n          onChange={onChangeBank}\r\n          value={selectedBank}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n          name=\"bank\"\r\n          SelectProps={{\r\n            classes: {\r\n              select: classes.rootSelect,\r\n            },\r\n          }}\r\n        >\r\n          {banks.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              <img\r\n                src={`${Constant.API_ADDRESS}/${option.logo}`}\r\n                alt={option.label}\r\n                style={{\r\n                  width: 25,\r\n                  height: 25,\r\n                  borderRadius: \"50%\",\r\n                  marginLeft: 10,\r\n                }}\r\n              />\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                fullWidth\r\n                value={value}\r\n                size=\"small\"\r\n                name={name}\r\n                label=\"شماره کارت\"\r\n                variant=\"outlined\"\r\n                onChange={onChange}\r\n                error={!!errors.accountCardNumber}\r\n                helperText={\r\n                  errors.accountCardNumber\r\n                    ? errors.accountCardNumber.message\r\n                    : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          rules={{\r\n            minLength: {\r\n              value: 16,\r\n              message: Constant.VALIDATION.CARD_NUMBER,\r\n            },\r\n            maxLength: {\r\n              value: 16,\r\n              message: Constant.VALIDATION.CARD_NUMBER,\r\n            },\r\n          }}\r\n          name=\"accountCardNumber\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                fullWidth\r\n                value={value}\r\n                size=\"small\"\r\n                name={name}\r\n                label=\"شماره حساب\"\r\n                variant=\"outlined\"\r\n                onChange={onChange}\r\n                error={!!errors.accountNumber}\r\n                helperText={\r\n                  errors.accountNumber ? errors.accountNumber.message : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          name=\"accountNumber\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                fullWidth\r\n                value={value}\r\n                size=\"small\"\r\n                name={name}\r\n                label=\"شماره شبا\"\r\n                variant=\"outlined\"\r\n                onChange={onChange}\r\n                error={!!errors.accountShaba}\r\n                helperText={\r\n                  errors.accountShaba ? errors.accountShaba.message : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          name=\"accountShaba\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                label=\"توضیحات\"\r\n                multiline\r\n                rows={4}\r\n                variant=\"outlined\"\r\n                name={name}\r\n                onChange={onChange}\r\n                value={value}\r\n                fullWidth\r\n                error={!!errors.description}\r\n                helperText={\r\n                  errors.description ? errors.description.message : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          name=\"description\"\r\n        />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          onClick={handleSubmit(onDone)}\r\n        >\r\n          تایید\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onDismiss}>\r\n          انصراف\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  IconButton,\r\n  RadioGroup,\r\n  Radio,\r\n  FormControlLabel,\r\n} from \"@material-ui/core\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport { DeleteIcon, EditIcon } from \"../../components/icons\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { getQueryString } from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport Account from \"./account\";\r\nimport CircularProgress from \"../../components/CircularProgress\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingBottom: 7,\r\n    paddingTop: 7,\r\n  },\r\n}));\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"Name\",\r\n    label: \"نام بانک\",\r\n  },\r\n  { id: \"accountNumber\", label: \"شماره حساب \" },\r\n  {\r\n    id: \"CardNumber\",\r\n    label: \"شماره کارت\",\r\n  },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function MainDetail() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const id = getQueryString(\"id\");\r\n  const [detail, setDetail] = useState({});\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [selectedGender, setSelectedGender] = useState(\"M\");\r\n  const [selectedContract, setSelectedContract] = useState(\"FACTORY1\");\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n\r\n  const addEmployeeRequest = useApi({\r\n    method: \"post\",\r\n    url: `employee`,\r\n  });\r\n\r\n  const editEmployeeRequest = useApi({\r\n    method: \"put\",\r\n    url: `employee/${id}`,\r\n  });\r\n\r\n  const detailEmployeeRequest = useApi({\r\n    method: \"get\",\r\n    url: `employee/${id}`,\r\n  });\r\n\r\n  const deleteAccountRequest = useApi({\r\n    method: \"delete\",\r\n    url: `account`,\r\n  });\r\n\r\n  const onSubmit = async (data) => {\r\n    const newAccounts = [];\r\n    accounts.map((item) => {\r\n      const newData = {\r\n        bankId: item.bank.value || item.bank.id,\r\n        accountCardNumber: item.accountCardNumber,\r\n        accountNumber: item.accountNumber,\r\n        accountShaba: item.accountShaba,\r\n        description: item.description,\r\n        id: item.id.toString().includes(\"-\") ? null : item.id,\r\n      };\r\n      newAccounts.push(newData);\r\n    });\r\n\r\n    const allData = {\r\n      ...data,\r\n      accounts: newAccounts,\r\n      contractType: selectedContract,\r\n      gender: selectedGender,\r\n    };\r\n    if (id) {\r\n      return await editEmployeeRequest.execute(allData);\r\n    }\r\n    await addEmployeeRequest.execute(allData);\r\n    setTimeout(() => {\r\n      onReject();\r\n    }, 1000);\r\n  };\r\n\r\n  const onReject = () => {\r\n    history.push(\"/app/employee-list\");\r\n  };\r\n\r\n  const getDetail = async () => {\r\n    const detail = await detailEmployeeRequest.execute();\r\n    setDetail(detail.data);\r\n    setAccounts(detail.data.accounts);\r\n    setSelectedGender(detail.data.gender);\r\n    setSelectedContract(detail.data.contractType);\r\n  };\r\n\r\n  const onSubmitAccount = (data) => {\r\n    if (data.isUpdate) {\r\n      const index = accounts.findIndex((item) => item.id === data.id);\r\n      const accounstTmp = [...accounts];\r\n      accounstTmp[index] = data;\r\n      setAccounts(accounstTmp);\r\n    } else {\r\n      setAccounts([...accounts, data]);\r\n    }\r\n    onDismissAccount();\r\n  };\r\n\r\n  const onDismissAccount = () => {\r\n    DialogActions.hide({ name: \"account\" });\r\n  };\r\n\r\n  const onShowDialog = (data) => {\r\n    DialogActions.show({\r\n      title: \" حساب بانکی\",\r\n      component: (\r\n        <Account\r\n          onSubmit={onSubmitAccount}\r\n          onDismiss={onDismissAccount}\r\n          defaultValues={data}\r\n        />\r\n      ),\r\n      name: \"account\",\r\n      size: \"4\",\r\n      confirm: false,\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  const onAddAccount = () => {\r\n    onShowDialog();\r\n  };\r\n\r\n  const handleEditAccount = (data) => {\r\n    onShowDialog(data);\r\n  };\r\n\r\n  const handleDeleteAccount = (row) => {\r\n    DialogActions.show({\r\n      confirm: true,\r\n      title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n      onAction: async () => {\r\n        if (id) {\r\n          await deleteAccountRequest.execute(null, row.id);\r\n        }\r\n        setAccounts(accounts.filter((item) => item.id !== row.id));\r\n        DialogActions.hide({ name: \"delete\" });\r\n      },\r\n      name: \"delete\",\r\n      size: \"6\",\r\n      disableCloseButton: false,\r\n    });\r\n  };\r\n\r\n  const handleChangeGender = (e) => {\r\n    setSelectedGender(e.target.value);\r\n  };\r\n\r\n  const onChangeContract = (e) => {\r\n    setSelectedContract(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      getDetail();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(detail);\r\n  }, [reset, detail]);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        {!detailEmployeeRequest.pending ? (\r\n          <Grid item lg={6} sm={12} className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n              <Typography\r\n                className={classes.title}\r\n                variant=\"h6\"\r\n                id=\"tableTitle\"\r\n                component=\"div\"\r\n              >\r\n                {id ? \"ویرایش پرسنل\" : \"افزودن پرسنل\"}\r\n              </Typography>\r\n\r\n              <Grid container spacing={3}>\r\n                <Fragment>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"نام\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.firstName}\r\n                            helperText={\r\n                              errors.firstName ? errors.firstName.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                      name=\"firstName\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"نام خانوادگی\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.lastName}\r\n                            helperText={\r\n                              errors.lastName ? errors.lastName.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                      name=\"lastName\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"موبایل\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.mobile}\r\n                            helperText={\r\n                              errors.mobile ? errors.mobile.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      rules={{\r\n                        minLength: {\r\n                          value: 11,\r\n                          message: Constant.VALIDATION.MOBILE_NUMBER,\r\n                        },\r\n                        maxLength: {\r\n                          value: 11,\r\n                          message: Constant.VALIDATION.MOBILE_NUMBER,\r\n                        },\r\n                      }}\r\n                      name=\"mobile\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <RadioGroup\r\n                      aria-label=\"gender\"\r\n                      name=\"gender1\"\r\n                      value={selectedGender}\r\n                      onChange={handleChangeGender}\r\n                      style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"row\",\r\n                        justifyContent: \"space-around\",\r\n                      }}\r\n                    >\r\n                      <FormControlLabel\r\n                        color=\"primary\"\r\n                        value=\"M\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"مرد\"\r\n                      />\r\n                      <FormControlLabel\r\n                        color=\"primary\"\r\n                        value=\"F\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"زن\"\r\n                      />\r\n                    </RadioGroup>\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            type=\"number\"\r\n                            variant=\"outlined\"\r\n                            label=\"مانده از قبل\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.accountRemaining}\r\n                            helperText={\r\n                              errors.accountRemaining\r\n                                ? errors.accountRemaining.message\r\n                                : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"accountRemaining\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item lg={6} xs={12}>\r\n                    <TextField\r\n                      select\r\n                      label=\"نوع قرارداد\"\r\n                      value={selectedContract}\r\n                      onChange={onChangeContract}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      size=\"small\"\r\n                    >\r\n                      {Constant.EMPLOYEE_CONTACRT.map((option) => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </TextField>\r\n                  </Grid>\r\n\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={onAddAccount}\r\n                    >\r\n                      افزودن حساب بانکی\r\n                    </Button>\r\n                  </Grid>\r\n                  {!!accounts.length && (\r\n                    <Grid item xs={12}>\r\n                      <Paper>\r\n                        <TableContainer style={{ padding: \"0 10px\" }}>\r\n                          <Table\r\n                            className={classes.table}\r\n                            size={\"medium\"}\r\n                            style={{ paddingRight: 10 }}\r\n                          >\r\n                            <TableHeader headCells={headCells} />\r\n\r\n                            <TableBody>\r\n                              {accounts.map((row) => {\r\n                                return (\r\n                                  <TableRow\r\n                                    hover\r\n                                    tabIndex={-1}\r\n                                    key={row.id}\r\n                                    style={{ paddingRight: 10 }}\r\n                                  >\r\n                                    <TableCell padding=\"none\">\r\n                                      <div\r\n                                        style={{\r\n                                          display: \"flex\",\r\n                                          alignItems: \"center\",\r\n                                        }}\r\n                                      >\r\n                                        <img\r\n                                          src={`${Constant.API_ADDRESS}/${row.bank.logo}`}\r\n                                          alt={row.bank.label}\r\n                                          style={{\r\n                                            width: 25,\r\n                                            height: 25,\r\n                                            borderRadius: \"50%\",\r\n                                            marginLeft: 5,\r\n                                          }}\r\n                                        />\r\n                                        {row.bank.label || row.bank.name}\r\n                                      </div>\r\n                                    </TableCell>\r\n                                    <TableCell padding=\"none\">\r\n                                      {row.accountNumber}\r\n                                    </TableCell>\r\n                                    <TableCell padding=\"none\">\r\n                                      {row.accountCardNumber}\r\n                                    </TableCell>\r\n\r\n                                    <TableCell\r\n                                      padding=\"none\"\r\n                                      style={{ textAlign: \"left\" }}\r\n                                    >\r\n                                      <IconButton\r\n                                        onClick={() => handleEditAccount(row)}\r\n                                      >\r\n                                        <EditIcon />\r\n                                      </IconButton>\r\n\r\n                                      <IconButton\r\n                                        onClick={() => handleDeleteAccount(row)}\r\n                                      >\r\n                                        <DeleteIcon />\r\n                                      </IconButton>\r\n                                    </TableCell>\r\n                                  </TableRow>\r\n                                );\r\n                              })}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                      </Paper>\r\n                    </Grid>\r\n                  )}\r\n\r\n                  <Grid item xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"آدرس\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.address}\r\n                            helperText={\r\n                              errors.address ? errors.address.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"address\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            label=\"توضیحات\"\r\n                            multiline\r\n                            rows={4}\r\n                            variant=\"outlined\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            fullWidth\r\n                            error={!!errors.description}\r\n                            helperText={\r\n                              errors.description\r\n                                ? errors.description.message\r\n                                : \"\"\r\n                            }\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"description\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                  >\r\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                      تایید\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      onClick={onReject}\r\n                    >\r\n                      بازگشت\r\n                    </Button>\r\n                  </Grid>\r\n                </Fragment>\r\n              </Grid>\r\n            </Paper>\r\n          </Grid>\r\n        ) : (\r\n          <CircularProgress />\r\n        )}\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  tab: {\r\n    borderBottom: `1px solid ${theme.palette.gray.main}`,\r\n  },\r\n  type: {\r\n    color: \"#fff\",\r\n  },\r\n  allIcon: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  SELL: {\r\n    backgroundColor: theme.palette.success.main,\r\n  },\r\n  incomeIcon: {\r\n    color: theme.palette.success.main,\r\n  },\r\n  BUY: {\r\n    backgroundColor: theme.palette.danger.main,\r\n  },\r\n  outgoIcon: {\r\n    color: theme.palette.danger.main,\r\n  },\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingBottom: 7,\r\n    paddingTop: 7,\r\n  },\r\n  selectedButton: {\r\n    backgroundColor: theme.palette.success.main,\r\n    color: \"#fff\",\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.success.main,\r\n    },\r\n  },\r\n}));\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, TextField, MenuItem, Button, Divider } from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n}));\r\nconst Filter = ({ onFilter }) => {\r\n  const classes = useStyles();\r\n  const [selectedPerson, setSelectedPerson] = useState();\r\n  const [selectedFromDate, handleFromDateChange] = useState(moment());\r\n  const [selectedToDate, handleToDateChange] = useState(moment());\r\n  const [customers, setCustomers] = useState([]);\r\n\r\n  const getCustomersRequest = useApi({\r\n    method: \"get\",\r\n    url: \"customer\",\r\n  });\r\n\r\n  const onChangePerson = (e, value) => {\r\n    setSelectedPerson(value);\r\n  };\r\n\r\n  const onChnageDate = (e, type) => {\r\n    if (type === \"from\") {\r\n      handleFromDateChange(e);\r\n    } else {\r\n      handleToDateChange(e);\r\n    }\r\n  };\r\n\r\n  const getCustomers = async () => {\r\n    const customerList = await getCustomersRequest.execute();\r\n    setCustomers(customerList.data);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (typeof onFilter === \"function\") {\r\n      onFilter(\r\n        `{customerId:${\r\n          selectedPerson ? selectedPerson.id : null\r\n        },from:${selectedFromDate._d.toISOString()},to:${selectedToDate._d.toISOString()}}`,\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCustomers();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container spacing={3} alignItems=\"center\" style={{ padding: 10 }}>\r\n      <Grid item lg={3} xs={12} style={{ display: \"flex\" }}>\r\n        <Autocomplete\r\n          id=\"combo-box-demo\"\r\n          onChange={onChangePerson}\r\n          options={customers}\r\n          getOptionLabel={(option) => `${option.firstName} ${option.lastName}`}\r\n          fullWidth\r\n          size=\"small\"\r\n          renderInput={(params) => (\r\n            <TextField {...params} label=\"انتخاب شخص\" variant=\"outlined\" />\r\n          )}\r\n        />\r\n      </Grid>\r\n      <Grid item lg={3} xs={12} className={classes.datePicker}>\r\n        <DatePicker\r\n          autoOk\r\n          name=\"date\"\r\n          label=\"از تاریخ\"\r\n          inputVariant=\"outlined\"\r\n          okLabel=\"تأیید\"\r\n          cancelLabel=\"لغو\"\r\n          labelFunc={(date) => (date ? date.format(\"jYYYY/jMM/jDD\") : \"\")}\r\n          value={selectedFromDate}\r\n          onChange={(e) => onChnageDate(e, \"from\")}\r\n          style={{ width: \"100%\" }}\r\n        />\r\n      </Grid>\r\n      <Grid item lg={3} xs={12} className={classes.datePicker}>\r\n        <DatePicker\r\n          autoOk\r\n          name=\"date\"\r\n          label=\"تا تاریخ\"\r\n          inputVariant=\"outlined\"\r\n          okLabel=\"تأیید\"\r\n          cancelLabel=\"لغو\"\r\n          labelFunc={(date) => (date ? date.format(\"jYYYY/jMM/jDD\") : \"\")}\r\n          value={selectedToDate}\r\n          onChange={(e) => onChnageDate(e, \"to\")}\r\n          style={{ width: \"100%\" }}\r\n        />\r\n      </Grid>\r\n      <Grid item lg={3} xs={12}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n          تایید\r\n        </Button>\r\n      </Grid>\r\n      <Divider style={{ width: \"100%\" }} />\r\n    </Grid>\r\n  );\r\n};\r\nexport default Filter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Tabs,\r\n  Tab,\r\n  Chip,\r\n} from \"@material-ui/core\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport {\r\n  convertParamsToQueryString,\r\n  persianNumber,\r\n  hasPermission,\r\n} from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport clsx from \"clsx\";\r\nimport { getQueryString } from \"../../helpers/utils\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\nimport FilterComponent from \"./filter\";\r\n\r\nconst headCells = [\r\n  { id: \"id\", label: \"شماره فاکتور\" },\r\n  {\r\n    id: \"person\",\r\n    label: \"مشتری\",\r\n  },\r\n  {\r\n    id: \"date\",\r\n    label: \"تاریخ\",\r\n  },\r\n  { id: \"price\", label: \"مبلغ\" },\r\n  {\r\n    id: \"category\",\r\n    label: \"دسته بندی\",\r\n  },\r\n  {\r\n    id: \"type\",\r\n    label: \"نوع\",\r\n  },\r\n\r\n  // { id: \"action\" },\r\n];\r\n\r\nconst MainList = () => {\r\n  const invoiceType = getQueryString(\"type\");\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"date\");\r\n  const [search, setSearch] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [filter, setFilter] = useState();\r\n  const [total, setTotal] = useState(0);\r\n  const [type, setType] = useState(invoiceType);\r\n  const history = useHistory();\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onAdd = () => {\r\n    history.push(`/app/invoice-detail?type=${type}`);\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const getInvoiceRequest = useApi({\r\n    method: \"get\",\r\n    url: decodeURIComponent(\r\n      `invoice?${convertParamsToQueryString({\r\n        page,\r\n        order,\r\n        orderBy,\r\n        pageSize,\r\n        search,\r\n        type,\r\n        filter,\r\n      })}`,\r\n    ),\r\n  });\r\n\r\n  const deleteUseRequest = useApi({\r\n    method: \"delete\",\r\n    url: `invoice`,\r\n  });\r\n\r\n  const handleAction = (id, type) => {\r\n    const types = {\r\n      edit: () => {\r\n        history.push(`/app/invoice-detail?type=${type}&id=${id}`);\r\n      },\r\n      delete: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            await deleteUseRequest.execute(null, id);\r\n            setList(list.filter((item) => item.id !== id));\r\n            DialogActions.hide({ name: \"delete\" });\r\n          },\r\n          name: \"delete\",\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const onChangeType = (e, value) => {\r\n    setType(value);\r\n  };\r\n\r\n  const getTableTitle = () => {\r\n    if (type === \"SELL\") {\r\n      return \"لیست فاکتورهای فروش \";\r\n    } else if (type === \"BUY\") {\r\n      return \"لیست فاکتورهای خرید\";\r\n    }\r\n    return \"لیست تمامی فاکتور ها\";\r\n  };\r\n\r\n  const getData = async () => {\r\n    const invoiceList = await getInvoiceRequest.execute();\r\n    setList(invoiceList.data);\r\n    setTotal(invoiceList.total);\r\n  };\r\n\r\n  const onFilter = (data) => {\r\n    setFilter(data);\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize, type, filter]);\r\n\r\n  useEffect(() => {\r\n    setType(invoiceType);\r\n  }, [invoiceType]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.INVOICE_SHOW) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getInvoiceRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title={getTableTitle()}\r\n                    onAdd={type !== \"ALL\" && onAdd}\r\n                    // handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                    FilterComponent={<FilterComponent onFilter={onFilter} />}\r\n                  />\r\n                  <div className={classes.tab}>\r\n                    <Tabs\r\n                      variant=\"fullWidth\"\r\n                      value={type}\r\n                      onChange={onChangeType}\r\n                      indicatorColor=\"primary\"\r\n                      textColor=\"primary\"\r\n                      centered\r\n                    >\r\n                      <Tab\r\n                        icon={\r\n                          <i\r\n                            className={clsx(\r\n                              \"material-icons-round\",\r\n                              classes.allIcon,\r\n                            )}\r\n                          >\r\n                            sync\r\n                          </i>\r\n                        }\r\n                        label=\"کل تراکنش ها\"\r\n                        value=\"ALL\"\r\n                      />\r\n                      <Tab\r\n                        icon={\r\n                          <i\r\n                            className={clsx(\r\n                              \"material-icons-round\",\r\n                              classes.incomeIcon,\r\n                            )}\r\n                          >\r\n                            sell\r\n                          </i>\r\n                        }\r\n                        label=\"فاکتور های فروش\"\r\n                        value=\"SELL\"\r\n                      />\r\n                      <Tab\r\n                        icon={\r\n                          <i\r\n                            className={clsx(\r\n                              \"material-icons-round\",\r\n                              classes.outgoIcon,\r\n                            )}\r\n                          >\r\n                            shopping_basket\r\n                          </i>\r\n                        }\r\n                        label=\"فاکتور های خرید\"\r\n                        value=\"BUY\"\r\n                      />\r\n                    </Tabs>\r\n                  </div>\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                            >\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(row.id)}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.globalCustomer\r\n                                  ? `${row.globalCustomer}(${row.customer})`\r\n                                  : row.customer}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  new Date(row.date).toLocaleDateString(\r\n                                    \"fa-IR\",\r\n                                  ),\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  Number(row.price).toLocaleString(),\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.category}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                <Chip\r\n                                  label={Constant.INVOICE_TYPE[row.type]}\r\n                                  className={clsx(\r\n                                    classes.type,\r\n                                    classes[row.type],\r\n                                  )}\r\n                                />\r\n                              </TableCell>\r\n\r\n                              {/* <TableCell padding=\"none\">\r\n                                <TableRowMenu\r\n                                  options={\r\n                                    [\r\n                                      // { id: \"edit\", title: \"ویرایش\" },\r\n                                      // { id: \"delete\", title: \"حذف\" },\r\n                                    ]\r\n                                  }\r\n                                  hadleAction={(type) =>\r\n                                    handleAction(row.id, type)\r\n                                  }\r\n                                />\r\n                              </TableCell> */}\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getInvoiceRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default MainList;\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  tab: {\r\n    borderBottom: `1px solid ${theme.palette.gray.main}`,\r\n  },\r\n  type: {\r\n    color: \"#fff\",\r\n  },\r\n  allIcon: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  INCOME: {\r\n    backgroundColor: theme.palette.success.main,\r\n  },\r\n  incomeIcon: {\r\n    color: theme.palette.success.main,\r\n  },\r\n  OUTCOME: {\r\n    backgroundColor: theme.palette.danger.main,\r\n  },\r\n  outgoIcon: {\r\n    color: theme.palette.danger.main,\r\n  },\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingBottom: 7,\r\n    paddingTop: 7,\r\n  },\r\n}));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Typography,\r\n  Chip,\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { convertParamsToQueryString } from \"../../helpers/utils\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\n\r\nconst headCellsCustomer = [\r\n  {\r\n    id: \"firstName\",\r\n    label: \"نام\",\r\n  },\r\n  { id: \"lastName\", label: \"نام خانوادگی\" },\r\n\r\n  { id: \"status\", label: \"وضعیت\" },\r\n];\r\nconst headCellsPerson = [\r\n  { id: \"lastName\", label: \"نام و نام خانوادگی\" },\r\n  { id: \"type\", label: \"نوع شخص\" },\r\n];\r\n\r\nconst PERSON_TYPE = {\r\n  EMPLOYEE: \"پرسنل\",\r\n  CUSTOMER: \"مشتری\",\r\n  DRIVER: \"راننده\",\r\n};\r\n\r\nexport default function MainList({ onSelect, onDismiss, filter }) {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [search, setSearch] = useState();\r\n  const [orderBy, setOrderBy] = useState(\"firstName\");\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const getCustomerRequest = useApi({\r\n    method: \"get\",\r\n    url: `${filter}?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n    })}`,\r\n  });\r\n\r\n  const onChangeSearch = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  const getData = async () => {\r\n    const customerList = await getCustomerRequest.execute();\r\n    setList(customerList.data);\r\n  };\r\n\r\n  const onClicKRow = (e, row) => {\r\n    if (e.target.tagName === \"TD\") {\r\n      onSelect(row);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize]);\r\n\r\n  return (\r\n    <div style={{ marginTop: -20, maxHeight: 300 }}>\r\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          لیست افراد\r\n        </Typography>\r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          label=\" جستجو\"\r\n          onChange={onChangeSearch}\r\n          value={search}\r\n          size=\"small\"\r\n        />\r\n      </div>\r\n      <TableContainer>\r\n        <Table className={classes.table} size={\"medium\"}>\r\n          <TableHeader\r\n            classes={classes}\r\n            order={order}\r\n            orderBy={orderBy}\r\n            onRequestSort={handleRequestSort}\r\n            rowCount={list.length}\r\n            headCells={\r\n              filter === \"person\" ? headCellsPerson : headCellsCustomer\r\n            }\r\n          />\r\n\r\n          <TableBody>\r\n            {list.map((row) => {\r\n              return (\r\n                <TableRow\r\n                  hover\r\n                  tabIndex={-1}\r\n                  key={filter === \"customer\" ? row.id : row.value}\r\n                  style={{ paddingRight: 10 }}\r\n                  onClick={(e) => onClicKRow(e, row)}\r\n                >\r\n                  {filter === \"person\" && (\r\n                    <TableCell padding=\"none\">{row.label}</TableCell>\r\n                  )}\r\n                  {filter === \"person\" && (\r\n                    <TableCell padding=\"none\">\r\n                      {PERSON_TYPE[row.personType]}\r\n                    </TableCell>\r\n                  )}\r\n\r\n                  {filter === \"customer\" && (\r\n                    <TableCell padding=\"none\">{row.firstName}</TableCell>\r\n                  )}\r\n                  {filter === \"customer\" && (\r\n                    <TableCell padding=\"none\">{row.lastName}</TableCell>\r\n                  )}\r\n\r\n                  {filter === \"customer\" && (\r\n                    <TableCell padding=\"none\">\r\n                      <Chip\r\n                        label={Constant.PERSON_STATUS[row.status]}\r\n                        className={clsx(classes.status, classes[row.status])}\r\n                      />\r\n                    </TableCell>\r\n                  )}\r\n                </TableRow>\r\n              );\r\n            })}\r\n            {!list.length && !getCustomerRequest.pending && (\r\n              <TableRow style={{ height: 53 }}>\r\n                <TableCell colSpan={6} style={{ textAlign: \"center\" }}>\r\n                  <Typography variant=\"h6\">\r\n                    داده ای برای نمایش وجود ندارد\r\n                  </Typography>\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePaging\r\n        count={list.length}\r\n        handleChangePage={handleChangePage}\r\n        handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n        page={page}\r\n        rowsPerPage={pageSize}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Grid, MenuItem } from \"@material-ui/core\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport moment from \"moment\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport styles from \"./style\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nconst Payment = ({ onSubmit, onDismiss, defaultValues, paymentType, type }) => {\r\n  const [banks, setBanks] = useState([]);\r\n  const [chequeDueDate, handleChequeDueDateChange] = useState(moment());\r\n  const [selectedTransaction, setSelectedTransaction] = useState(\r\n    defaultValues?.transactionType,\r\n  );\r\n  const [selectedBank, setSelectedBank] = useState(defaultValues?.bankId || 1);\r\n  const [cashes, setCashes] = useState([]);\r\n  const [selectedCash, setSelectedCash] = useState(\r\n    defaultValues?.cashDeskId || 5,\r\n  );\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n  const classes = styles();\r\n\r\n  const getBankRequest = useApi({\r\n    method: \"get\",\r\n    url: `bank`,\r\n  });\r\n\r\n  const getCashRequest = useApi({\r\n    method: \"get\",\r\n    url: `cashdesk/picker`,\r\n  });\r\n\r\n  const getBanks = async () => {\r\n    const result = await getBankRequest.execute();\r\n    setBanks(result.data);\r\n  };\r\n\r\n  const getCashes = async () => {\r\n    const result = await getCashRequest.execute();\r\n    setCashes(result.data);\r\n  };\r\n\r\n  const getSelectedBank = () => {\r\n    return banks.find((item) => item.value === selectedBank);\r\n  };\r\n\r\n  const getSelectedCash = () => {\r\n    return cashes.find((item) => item.value === selectedCash);\r\n  };\r\n\r\n  const onDone = (data) => {\r\n    const newId = uuid();\r\n    let value;\r\n    if (type === \"NAGHD\") {\r\n      value = {\r\n        ...data,\r\n        id: defaultValues ? defaultValues.id : newId,\r\n        cashDeskId: selectedCash,\r\n        cashDesk: getSelectedCash(),\r\n        isUpdate: !!defaultValues,\r\n      };\r\n    } else if (type === \"CARD\") {\r\n      value = {\r\n        ...data,\r\n        id: defaultValues ? defaultValues.id : newId,\r\n        cashDeskId: selectedCash,\r\n        bankId: selectedBank,\r\n        cashDesk: getSelectedCash(),\r\n        bank: getSelectedBank(),\r\n        transactionType: selectedTransaction,\r\n        isUpdate: !!defaultValues,\r\n      };\r\n    } else {\r\n      value = {\r\n        ...data,\r\n        id: defaultValues ? defaultValues.id : newId,\r\n        cashDeskId: selectedCash,\r\n        bankId: selectedBank,\r\n        cashDesk: getSelectedCash(),\r\n        bank: getSelectedBank(),\r\n        chequeDueDate: chequeDueDate._d,\r\n        isUpdate: !!defaultValues,\r\n      };\r\n    }\r\n    return onSubmit(value, type, !!defaultValues);\r\n  };\r\n\r\n  const onChangeBank = (e) => {\r\n    setSelectedBank(e.target.value);\r\n  };\r\n\r\n  const onChangeTransaction = (e) => {\r\n    setSelectedTransaction(e.target.value);\r\n  };\r\n\r\n  const onChangeCash = (e) => {\r\n    setSelectedCash(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBanks();\r\n    getCashes();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(defaultValues);\r\n  }, [reset, defaultValues]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onDone)}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          {type === \"NAGHD\" && (\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  select\r\n                  label=\"صندوق\"\r\n                  onChange={onChangeCash}\r\n                  value={selectedCash}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  name=\"cash\"\r\n                >\r\n                  {cashes.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Controller\r\n                  control={control}\r\n                  render={({ onChange, value, name }) => {\r\n                    return (\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        label=\"مبلغ نقدی\"\r\n                        type=\"number\"\r\n                        name={name}\r\n                        onChange={onChange}\r\n                        value={value}\r\n                        error={!!errors.price}\r\n                        helperText={errors.price ? errors.price.message : \"\"}\r\n                        fullWidth\r\n                        size=\"small\"\r\n                      />\r\n                    );\r\n                  }}\r\n                  name=\"price\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n          {type === \"CARD\" && (\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  select\r\n                  label=\"صندوق\"\r\n                  onChange={onChangeCash}\r\n                  value={selectedCash}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  name=\"cash\"\r\n                >\r\n                  {cashes.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  select\r\n                  label=\"نوع تراکنش\"\r\n                  onChange={onChangeTransaction}\r\n                  value={selectedTransaction}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  name=\"cash\"\r\n                >\r\n                  {Constant.BANK_TRANSACTION_TYPE.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Controller\r\n                  control={control}\r\n                  render={({ onChange, value, name }) => {\r\n                    return (\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        label=\"مبلغ \"\r\n                        type=\"number\"\r\n                        name={name}\r\n                        onChange={onChange}\r\n                        value={value}\r\n                        error={!!errors.price}\r\n                        helperText={errors.price ? errors.price.message : \"\"}\r\n                        fullWidth\r\n                        size=\"small\"\r\n                      />\r\n                    );\r\n                  }}\r\n                  rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                  name=\"price\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Controller\r\n                  control={control}\r\n                  render={({ onChange, value, name }) => {\r\n                    return (\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        label=\"شماره رهگیری\"\r\n                        number\r\n                        name={name}\r\n                        onChange={onChange}\r\n                        value={value}\r\n                        error={!!errors.trackingCode}\r\n                        helperText={\r\n                          errors.trackingCode ? errors.trackingCode.message : \"\"\r\n                        }\r\n                        fullWidth\r\n                        size=\"small\"\r\n                      />\r\n                    );\r\n                  }}\r\n                  name=\"trackingCode\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  select\r\n                  label=\"بانک\"\r\n                  onChange={onChangeBank}\r\n                  value={selectedBank}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  name=\"bank\"\r\n                  SelectProps={{\r\n                    classes: {\r\n                      select: classes.rootSelect,\r\n                    },\r\n                  }}\r\n                >\r\n                  {banks.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      <img\r\n                        src={`${Constant.API_ADDRESS}/${option.logo}`}\r\n                        alt={option.label}\r\n                        style={{\r\n                          width: 25,\r\n                          height: 25,\r\n                          borderRadius: \"50%\",\r\n                          marginLeft: 10,\r\n                        }}\r\n                      />\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n          {type === \"CHECK\" && (\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  select\r\n                  label=\"صندوق\"\r\n                  onChange={onChangeCash}\r\n                  value={selectedCash}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  name=\"cash\"\r\n                >\r\n                  {cashes.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Controller\r\n                  control={control}\r\n                  render={({ onChange, value, name }) => {\r\n                    return (\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        label=\"مبلغ چک\"\r\n                        type=\"number\"\r\n                        name={name}\r\n                        onChange={onChange}\r\n                        value={value}\r\n                        error={!!errors.price}\r\n                        helperText={errors.price ? errors.price.message : \"\"}\r\n                        fullWidth\r\n                        size=\"small\"\r\n                      />\r\n                    );\r\n                  }}\r\n                  rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                  name=\"price\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Controller\r\n                  control={control}\r\n                  render={({ onChange, value, name }) => {\r\n                    return (\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        label=\"شماره چک\"\r\n                        number\r\n                        name={name}\r\n                        onChange={onChange}\r\n                        value={value}\r\n                        error={!!errors.chequeNumber}\r\n                        helperText={\r\n                          errors.chequeNumber ? errors.chequeNumber.message : \"\"\r\n                        }\r\n                        fullWidth\r\n                        size=\"small\"\r\n                      />\r\n                    );\r\n                  }}\r\n                  name=\"chequeNumber\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  select\r\n                  label=\"بانک\"\r\n                  onChange={onChangeBank}\r\n                  value={selectedBank}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  name=\"bank\"\r\n                  SelectProps={{\r\n                    classes: {\r\n                      select: classes.rootSelect,\r\n                    },\r\n                  }}\r\n                >\r\n                  {banks.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      <img\r\n                        src={`${Constant.API_ADDRESS}/${option.logo}`}\r\n                        alt={option.label}\r\n                        style={{\r\n                          width: 25,\r\n                          height: 25,\r\n                          borderRadius: \"50%\",\r\n                          marginLeft: 10,\r\n                        }}\r\n                      />\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Controller\r\n                  control={control}\r\n                  render={({ onChange, value, name }) => {\r\n                    return (\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        label=\"شعبه\"\r\n                        number\r\n                        name={name}\r\n                        onChange={onChange}\r\n                        value={value}\r\n                        error={!!errors.bankBranch}\r\n                        helperText={\r\n                          errors.bankBranch ? errors.bankBranch.message : \"\"\r\n                        }\r\n                        fullWidth\r\n                        size=\"small\"\r\n                      />\r\n                    );\r\n                  }}\r\n                  name=\"bankBranch\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} className={classes.datePicker}>\r\n                <DatePicker\r\n                  name=\"date\"\r\n                  label=\"تاریخ سررسید\"\r\n                  inputVariant=\"outlined\"\r\n                  okLabel=\"تأیید\"\r\n                  cancelLabel=\"لغو\"\r\n                  labelFunc={(date) =>\r\n                    date ? date.format(\"jYYYY/jMM/jDD\") : \"\"\r\n                  }\r\n                  value={chequeDueDate}\r\n                  onChange={handleChequeDueDateChange}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Controller\r\n                  control={control}\r\n                  render={({ onChange, value, name }) => {\r\n                    return (\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        label=\"در وجه\"\r\n                        number\r\n                        name={name}\r\n                        onChange={onChange}\r\n                        value={value}\r\n                        error={!!errors.chequePayTo}\r\n                        helperText={\r\n                          errors.chequePayTo ? errors.chequePayTo.message : \"\"\r\n                        }\r\n                        fullWidth\r\n                        size=\"small\"\r\n                      />\r\n                    );\r\n                  }}\r\n                  name=\"chequePayTo\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            onClick={handleSubmit(onDone)}\r\n          >\r\n            تایید\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n            انصراف\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Payment;\r\n","import React, { useEffect, useState, useImperativeHandle } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  Button,\r\n  ButtonGroup,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Accordion,\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport { DeleteIcon, EditIcon } from \"../../components/icons\";\r\nimport { getQueryString, persianNumber } from \"../../helpers/utils\";\r\nimport dialogAction from \"../../redux/actions/dialogAction\";\r\nimport Payment from \"./paymnet\";\r\nimport update from \"immutability-helper\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingBottom: 7,\r\n    paddingTop: 7,\r\n  },\r\n}));\r\n\r\nconst naghdPayHeadCells = [\r\n  { id: \"cash\", label: \"صندوق\" },\r\n  {\r\n    id: \"amount\",\r\n    label: \"مبلغ \",\r\n  },\r\n  { id: \"action\" },\r\n];\r\nconst cardPayHeadCells = [\r\n  { id: \"cash\", label: \"صندوق\" },\r\n  {\r\n    id: \"amount\",\r\n    label: \"مبلغ \",\r\n  },\r\n  {\r\n    id: \"type\",\r\n    label: \"نوع تراکنش \",\r\n  },\r\n  {\r\n    id: \"bank\",\r\n    label: \"بانک \",\r\n  },\r\n  {\r\n    id: \"code\",\r\n    label: \"شماره رهگیری \",\r\n  },\r\n  { id: \"action\" },\r\n];\r\nconst checkPayHeadCells = [\r\n  { id: \"cash\", label: \"صندوق\" },\r\n  {\r\n    id: \"amount\",\r\n    label: \"مبلغ \",\r\n  },\r\n  { id: \"dueDate\", label: \"تاریخ سررسید\" },\r\n  {\r\n    id: \"bank\",\r\n    label: \"بانک \",\r\n  },\r\n  { id: \"action\" },\r\n];\r\n\r\nconst PrePayment = React.forwardRef((props, ref) => {\r\n  const { defaultValues } = props;\r\n  const classes = useStyles();\r\n  const paymentType = getQueryString(\"type\");\r\n  const [payments, setPayments] = useState();\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return payments;\r\n  });\r\n\r\n  const onSubmitPaymentActions = (value, type, isEdit) => {\r\n    if (isEdit) {\r\n      return handleSubmitEditPayment(value, type);\r\n    }\r\n    return handleSubmitAddPayment(value, type);\r\n  };\r\n\r\n  const handleSubmitAddPayment = (value, type) => {\r\n    let newPayments;\r\n    const types = {\r\n      NAGHD: () => {\r\n        newPayments = update(payments, {\r\n          cashes: { $push: [value] },\r\n        });\r\n      },\r\n      CARD: () => {\r\n        newPayments = update(payments, {\r\n          banks: { $push: [value] },\r\n        });\r\n      },\r\n      CHECK: () => {\r\n        newPayments = update(payments, {\r\n          cheques: { $push: [value] },\r\n        });\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n      setPayments(newPayments);\r\n      dialogAction.hide({ name: \"prePayment\" });\r\n    }\r\n  };\r\n\r\n  const handleSubmitEditPayment = (value, type) => {\r\n    let newPayments;\r\n    const types = {\r\n      NAGHD: () => {\r\n        const index = payments.cashes.findIndex((item) => item.id === value.id);\r\n        newPayments = update(payments, {\r\n          cashes: {\r\n            [index]: { $set: value },\r\n          },\r\n        });\r\n      },\r\n      CARD: () => {\r\n        const index = payments.banks.findIndex((item) => item.id === value.id);\r\n        newPayments = update(payments, {\r\n          banks: {\r\n            [index]: { $set: value },\r\n          },\r\n        });\r\n      },\r\n      CHECK: () => {\r\n        const index = payments.cheques.findIndex(\r\n          (item) => item.id === value.id,\r\n        );\r\n        newPayments = update(payments, {\r\n          cheques: {\r\n            [index]: { $set: value },\r\n          },\r\n        });\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n      setPayments(newPayments);\r\n      dialogAction.hide({ name: \"prePayment\" });\r\n    }\r\n  };\r\n\r\n  const handleDeletePayment = (value, type) => {\r\n    dialogAction.show({\r\n      confirm: true,\r\n      title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n      onAction: () => {\r\n        let newPayments;\r\n        const types = {\r\n          NAGHD: () => {\r\n            const index = payments.cashes.findIndex(\r\n              (item) => item.id === value.id,\r\n            );\r\n            newPayments = update(payments, {\r\n              cashes: { $splice: [[index, 1]] },\r\n            });\r\n          },\r\n          CARD: () => {\r\n            const index = payments.banks.findIndex(\r\n              (item) => item.id === value.id,\r\n            );\r\n            newPayments = update(payments, {\r\n              banks: { $splice: [[index, 1]] },\r\n            });\r\n          },\r\n          CHECK: () => {\r\n            const index = payments.cheques.findIndex(\r\n              (item) => item.id === value.id,\r\n            );\r\n            newPayments = update(payments, {\r\n              cheques: { $splice: [[index, 1]] },\r\n            });\r\n          },\r\n        };\r\n        if (types[type]) {\r\n          types[type]();\r\n          setPayments(newPayments);\r\n          dialogAction.hide({ name: \"delete\" });\r\n        }\r\n      },\r\n      name: \"delete\",\r\n      size: \"6\",\r\n      disableCloseButton: false,\r\n    });\r\n  };\r\n\r\n  const onDismissPayment = () => {\r\n    dialogAction.hide({ name: \"prePayment\" });\r\n  };\r\n\r\n  const onClickPayment = (type, data) => {\r\n    dialogAction.show({\r\n      title: `${paymentType === \"INCOME\" ? \"دریافت\" : \"پرداخت\"} ${\r\n        type === \"NAGHD\" ? \"نقدی\" : type === \"CARD\" ? \"کارتی\" : \"چکی\"\r\n      }`,\r\n      component: (\r\n        <Payment\r\n          onSubmit={onSubmitPaymentActions}\r\n          onDismiss={onDismissPayment}\r\n          defaultValues={data}\r\n          paymentType={paymentType}\r\n          type={type}\r\n        />\r\n      ),\r\n      name: \"prePayment\",\r\n      size: \"4\",\r\n      confirm: false,\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  const getButtonTitle = (type) => {\r\n    const types = {\r\n      NAGHD: () => {\r\n        return (\r\n          <Typography variant=\"button\">\r\n            {paymentType === \"INCOME\" ? \"دریافت نقدی\" : \"پرداخت نقدی\"}(\r\n            {payments?.cashes.length})\r\n          </Typography>\r\n        );\r\n      },\r\n      CARD: () => {\r\n        return (\r\n          <Typography variant=\"button\">\r\n            {paymentType === \"INCOME\" ? \"دریافت کارتی\" : \"پرداخت کارتی\"}(\r\n            {payments?.banks.length})\r\n          </Typography>\r\n        );\r\n      },\r\n      CHECK: () => {\r\n        return (\r\n          <Typography variant=\"button\">\r\n            {paymentType === \"INCOME\" ? \"دریافت چکی\" : \"پرداخت چکی\"}(\r\n            {payments?.cheques.length})\r\n          </Typography>\r\n        );\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      return types[type]();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setPayments(defaultValues);\r\n  }, [defaultValues]);\r\n\r\n  useEffect(() => {\r\n    if (typeof props.onSubmit === \"function\") {\r\n      props.onSubmit(payments);\r\n    }\r\n  }, [payments]);\r\n\r\n  return (\r\n    <>\r\n      <Grid item xs={12} style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <ButtonGroup color=\"primary\">\r\n          <Button\r\n            startIcon={<i className=\"material-icons-round\">local_atm</i>}\r\n            onClick={() => onClickPayment(\"NAGHD\")}\r\n          >\r\n            {getButtonTitle(\"NAGHD\")}\r\n          </Button>\r\n          <Button\r\n            startIcon={<i className=\"material-icons-round\">payment</i>}\r\n            onClick={() => onClickPayment(\"CARD\")}\r\n          >\r\n            {getButtonTitle(\"CARD\")}\r\n          </Button>\r\n          <Button\r\n            startIcon={<i className=\"material-icons-round\">payments</i>}\r\n            onClick={() => onClickPayment(\"CHECK\")}\r\n          >\r\n            {getButtonTitle(\"CHECK\")}\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Grid>\r\n\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Accordion\r\n            expanded={payments?.cashes.length}\r\n            disabled={!payments?.cashes.length}\r\n          >\r\n            <AccordionSummary\r\n              className={classes.accordionSummary}\r\n              expandIcon={<i className=\"material-icons-round\">expand_more</i>}\r\n              aria-controls=\"panel1a-content\"\r\n              id=\"panel1a-header\"\r\n            >\r\n              <Typography className={classes.heading}>نقدی ها</Typography>\r\n            </AccordionSummary>\r\n            {!!payments?.cashes.length && (\r\n              <AccordionDetails>\r\n                <Grid item xs={12}>\r\n                  <Paper>\r\n                    <TableContainer style={{ padding: \"0 10px\" }}>\r\n                      <Table\r\n                        className={classes.table}\r\n                        size={\"medium\"}\r\n                        style={{ paddingRight: 10 }}\r\n                      >\r\n                        <TableHeader headCells={naghdPayHeadCells} />\r\n\r\n                        <TableBody>\r\n                          {payments?.cashes.map((row) => {\r\n                            return (\r\n                              <TableRow\r\n                                hover\r\n                                tabIndex={-1}\r\n                                key={row.id}\r\n                                style={{ paddingRight: 10 }}\r\n                              >\r\n                                <TableCell padding=\"none\">\r\n                                  <div\r\n                                    style={{\r\n                                      display: \"flex\",\r\n                                      alignItems: \"center\",\r\n                                    }}\r\n                                  >\r\n                                    {row.cashDesk?.label}\r\n                                  </div>\r\n                                </TableCell>\r\n                                <TableCell padding=\"none\">\r\n                                  {persianNumber(\r\n                                    Number(row.price).toLocaleString(),\r\n                                  )}\r\n                                </TableCell>\r\n\r\n                                <TableCell\r\n                                  padding=\"none\"\r\n                                  style={{ textAlign: \"left\" }}\r\n                                >\r\n                                  <IconButton\r\n                                    onClick={() => onClickPayment(\"NAGHD\", row)}\r\n                                  >\r\n                                    <EditIcon />\r\n                                  </IconButton>\r\n\r\n                                  <IconButton\r\n                                    onClick={() =>\r\n                                      handleDeletePayment(row, \"NAGHD\")\r\n                                    }\r\n                                  >\r\n                                    <DeleteIcon />\r\n                                  </IconButton>\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            );\r\n                          })}\r\n                        </TableBody>\r\n                      </Table>\r\n                    </TableContainer>\r\n                  </Paper>\r\n                </Grid>\r\n              </AccordionDetails>\r\n            )}\r\n          </Accordion>\r\n          <Accordion\r\n            expanded={payments?.banks.length}\r\n            disabled={!payments?.banks.length}\r\n          >\r\n            <AccordionSummary\r\n              className={classes.accordionSummary}\r\n              expandIcon={<i className=\"material-icons-round\">expand_more</i>}\r\n              aria-controls=\"panel2a-content\"\r\n              id=\"panel2a-header\"\r\n            >\r\n              <Typography className={classes.heading}>کارتی ها</Typography>\r\n            </AccordionSummary>\r\n            {!!payments?.banks.length && (\r\n              <AccordionDetails>\r\n                <Grid item xs={12}>\r\n                  <Paper>\r\n                    <TableContainer style={{ padding: \"0 10px\" }}>\r\n                      <Table\r\n                        className={classes.table}\r\n                        size={\"medium\"}\r\n                        style={{ paddingRight: 10 }}\r\n                      >\r\n                        <TableHeader headCells={cardPayHeadCells} />\r\n\r\n                        <TableBody>\r\n                          {payments?.banks.map((row) => {\r\n                            return (\r\n                              <TableRow\r\n                                hover\r\n                                tabIndex={-1}\r\n                                key={row.id}\r\n                                style={{ paddingRight: 10 }}\r\n                              >\r\n                                <TableCell padding=\"none\">\r\n                                  <div\r\n                                    style={{\r\n                                      display: \"flex\",\r\n                                      alignItems: \"center\",\r\n                                    }}\r\n                                  >\r\n                                    {row.cashDesk?.label}\r\n                                  </div>\r\n                                </TableCell>\r\n                                <TableCell padding=\"none\">\r\n                                  {persianNumber(\r\n                                    Number(row.price).toLocaleString(),\r\n                                  )}\r\n                                </TableCell>\r\n                                <TableCell padding=\"none\">\r\n                                  {row.transactionType}\r\n                                </TableCell>\r\n                                <TableCell padding=\"none\">\r\n                                  {row.bank?.label}\r\n                                </TableCell>\r\n                                <TableCell padding=\"none\">\r\n                                  {row.trackingCode}\r\n                                </TableCell>\r\n\r\n                                <TableCell\r\n                                  padding=\"none\"\r\n                                  style={{ textAlign: \"left\" }}\r\n                                >\r\n                                  <IconButton\r\n                                    onClick={() => onClickPayment(\"CARD\", row)}\r\n                                  >\r\n                                    <EditIcon />\r\n                                  </IconButton>\r\n\r\n                                  <IconButton\r\n                                    onClick={() =>\r\n                                      handleDeletePayment(row, \"CARD\")\r\n                                    }\r\n                                  >\r\n                                    <DeleteIcon />\r\n                                  </IconButton>\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            );\r\n                          })}\r\n                        </TableBody>\r\n                      </Table>\r\n                    </TableContainer>\r\n                  </Paper>\r\n                </Grid>\r\n              </AccordionDetails>\r\n            )}\r\n          </Accordion>\r\n          <Accordion\r\n            expanded={payments?.cheques.length}\r\n            disabled={!payments?.cheques.length}\r\n          >\r\n            <AccordionSummary\r\n              className={classes.accordionSummary}\r\n              expandIcon={<i className=\"material-icons-round\">expand_more</i>}\r\n              aria-controls=\"panel3a-content\"\r\n              id=\"panel3a-header\"\r\n            >\r\n              <Typography className={classes.heading}>چک ها</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              {!!payments?.cheques.length && (\r\n                <Grid item xs={12}>\r\n                  <Paper>\r\n                    <TableContainer style={{ padding: \"0 10px\" }}>\r\n                      <Table\r\n                        className={classes.table}\r\n                        size={\"medium\"}\r\n                        style={{ paddingRight: 10 }}\r\n                      >\r\n                        <TableHeader headCells={checkPayHeadCells} />\r\n\r\n                        <TableBody>\r\n                          {payments?.cheques.map((row) => {\r\n                            return (\r\n                              <TableRow\r\n                                hover\r\n                                tabIndex={-1}\r\n                                key={row.id}\r\n                                style={{ paddingRight: 10 }}\r\n                              >\r\n                                <TableCell padding=\"none\">\r\n                                  <div\r\n                                    style={{\r\n                                      display: \"flex\",\r\n                                      alignItems: \"center\",\r\n                                    }}\r\n                                  >\r\n                                    {row.cashDesk?.label}\r\n                                  </div>\r\n                                </TableCell>\r\n                                <TableCell padding=\"none\">\r\n                                  {persianNumber(\r\n                                    Number(row.price).toLocaleString(),\r\n                                  )}\r\n                                </TableCell>\r\n\r\n                                <TableCell padding=\"none\">\r\n                                  {row.chequeDueDate.toLocaleDateString(\r\n                                    \"fa-IR\",\r\n                                  )}\r\n                                </TableCell>\r\n                                <TableCell padding=\"none\">\r\n                                  {row.bank?.label}\r\n                                </TableCell>\r\n                                <TableCell\r\n                                  padding=\"none\"\r\n                                  style={{ textAlign: \"left\" }}\r\n                                >\r\n                                  <IconButton\r\n                                    onClick={() => onClickPayment(\"CHECK\", row)}\r\n                                  >\r\n                                    <EditIcon />\r\n                                  </IconButton>\r\n\r\n                                  <IconButton\r\n                                    onClick={() =>\r\n                                      handleDeletePayment(row, \"CHECK\")\r\n                                    }\r\n                                  >\r\n                                    <DeleteIcon />\r\n                                  </IconButton>\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            );\r\n                          })}\r\n                        </TableBody>\r\n                      </Table>\r\n                    </TableContainer>\r\n                  </Paper>\r\n                </Grid>\r\n              )}\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n});\r\nexport default PrePayment;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Typography,\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  MenuItem,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\n\r\nimport PrePayment from \"../payment/prePayment\";\r\n\r\nexport default function ProductList({ onDismiss, onSubmit, driverId }) {\r\n  const paymentRef = useRef(null);\r\n  const [payments, setPayments] = useState({\r\n    cashes: [],\r\n    banks: [],\r\n    cheques: [],\r\n  });\r\n\r\n  const onDone = () => {\r\n    onSubmit({ ...paymentRef.current }, driverId);\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: -20, maxHeight: 300 }}>\r\n      <form>\r\n        <Grid container spacing={3}>\r\n          <PrePayment\r\n            defaultValues={payments}\r\n            type={\"OUTCOME\"}\r\n            ref={paymentRef}\r\n          />\r\n        </Grid>\r\n      </form>\r\n\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          marginTop: 20,\r\n        }}\r\n      >\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onDone}>\r\n          تایید\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n          انصراف\r\n        </Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Typography,\r\n  Chip,\r\n  Button,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { convertParamsToQueryString } from \"../../helpers/utils\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { Reorder } from \"@material-ui/icons\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"firstName\",\r\n    label: \"نام\",\r\n  },\r\n  { id: \"lastName\", label: \"نام خانوادگی\" },\r\n  {\r\n    id: \"category\",\r\n    label: \"دسته بندی\",\r\n  },\r\n  { id: \"mobile\", label: \"موبایل\" },\r\n  { id: \"carName\", label: \"ماشین\" },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function MainList({ onSelect, onDismiss }) {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [search, setSearch] = useState();\r\n  const [orderBy, setOrderBy] = useState(\"firstName\");\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [selectedDrivers, setSelectedDrivers] = useState([]);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const getDriverRequest = useApi({\r\n    method: \"get\",\r\n    url: `driver?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n    })}`,\r\n  });\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n  };\r\n\r\n  const onSelectDriver = (item) => {\r\n    setSelectedDrivers([...selectedDrivers, item]);\r\n  };\r\n\r\n  const onDeselectDriver = (data) => {\r\n    setSelectedDrivers(selectedDrivers.filter((item) => item.id !== data.id));\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    onSelect(selectedDrivers);\r\n  };\r\n\r\n  const getData = async () => {\r\n    const driverList = await getDriverRequest.execute();\r\n    setList(driverList.data);\r\n  };\r\n\r\n  const onClicKRow = (e, row) => {\r\n    if (e.target.tagName === \"TD\") {\r\n      const index = selectedDrivers.findIndex((item) => item.id === row.id);\r\n      if (index >= 0) {\r\n        onDeselectDriver(row);\r\n      } else {\r\n        onSelectDriver(row);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize]);\r\n\r\n  return (\r\n    <div style={{ marginTop: -20, maxHeight: 300 }}>\r\n      <TableTop\r\n      // handleSearch={onSearch}\r\n      />\r\n      <TableContainer>\r\n        <Table className={classes.table} size={\"medium\"}>\r\n          <TableHeader\r\n            classes={classes}\r\n            order={order}\r\n            orderBy={orderBy}\r\n            onRequestSort={handleRequestSort}\r\n            rowCount={list.length}\r\n            headCells={headCells}\r\n          />\r\n\r\n          <TableBody>\r\n            {list.map((row) => {\r\n              return (\r\n                <TableRow\r\n                  hover\r\n                  tabIndex={-1}\r\n                  key={row.id}\r\n                  style={{ paddingRight: 10 }}\r\n                  onClick={(e) => onClicKRow(e, row)}\r\n                >\r\n                  <TableCell padding=\"none\">{row.firstName}</TableCell>\r\n                  <TableCell padding=\"none\">{row.lastName}</TableCell>\r\n                  <TableCell padding=\"none\">{row.category.name}</TableCell>\r\n                  <TableCell padding=\"none\">{row.mobile}</TableCell>\r\n                  <TableCell padding=\"none\">{row.carName}</TableCell>\r\n                  <TableCell padding=\"none\">\r\n                    {selectedDrivers.includes(row) ? (\r\n                      <Button\r\n                        disabled\r\n                        variant=\"contained\"\r\n                        className={classes.selectedButton}\r\n                        endIcon={<i className=\"material-icons-round\">done</i>}\r\n                      >\r\n                        انتخاب شده\r\n                      </Button>\r\n                    ) : (\r\n                      <div></div>\r\n                    )}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n            {!list.length && !getDriverRequest.pending && (\r\n              <TableRow style={{ height: 53 }}>\r\n                <TableCell colSpan={6} style={{ textAlign: \"center\" }}>\r\n                  <Typography variant=\"h6\">\r\n                    داده ای برای نمایش وجود ندارد\r\n                  </Typography>\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePaging\r\n        count={list.length}\r\n        handleChangePage={handleChangePage}\r\n        handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n        page={page}\r\n        rowsPerPage={pageSize}\r\n      />\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n          تایید\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n          بازگشت\r\n        </Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import http from \"../../configs/axios\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport store from \"../store\";\r\nimport Storage from \"../../services/storage\";\r\n\r\nexport default {\r\n  async setProdcutUnit() {\r\n    const result = await http.get(\"/product/unit\");\r\n    if (result) {\r\n      Storage.setItem(\r\n        Constant.STORAGE.PRODUCT_UNITS,\r\n        JSON.stringify(result.data),\r\n      );\r\n      store.dispatch({\r\n        type: Constant.ACTION_TYPES.GET_UNITS,\r\n        payload: result.data,\r\n      });\r\n    }\r\n  },\r\n\r\n  getProductUnit() {\r\n    return JSON.parse(Storage.getItem(Constant.STORAGE.PRODUCT_UNITS));\r\n  },\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Typography,\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  MenuItem,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { convertParamsToQueryString } from \"../../helpers/utils\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport unitAction from \"../../redux/actions/unitAction\";\r\nimport isEmpty from \"lodash.isempty\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    label: \"نام کالا\",\r\n  },\r\n  {\r\n    id: \"category\",\r\n    label: \"دسته بندی\",\r\n  },\r\n  {\r\n    id: \"amount\",\r\n    label: \"موجودی کل\",\r\n  },\r\n  { id: \"unit\", label: \" واحد شمارشی\" },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function ProductList({\r\n  onSubmit,\r\n  onDismiss,\r\n  customerId,\r\n  defaultValues,\r\n  action,\r\n}) {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [search, setSearch] = useState();\r\n  const [orderBy, setOrderBy] = useState(\"name\");\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [showPerUnit, setShowPerUnit] = useState(\r\n    defaultValues ? !!defaultValues.perUnit : false,\r\n  );\r\n  const units = unitAction.getProductUnit();\r\n  const [selectedProduct, setSelectedProduct] = useState(defaultValues);\r\n  const [depotPicker, setDepotPicker] = useState([]);\r\n  const [selectedDepot, setSelectedDepot] = useState(1);\r\n  const [productFee, setProductFee] = useState(\r\n    defaultValues || {\r\n      name: \" \",\r\n      fee: \"\",\r\n      amount: \"\",\r\n    },\r\n  );\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const getDepotProductRequest = useApi({\r\n    method: \"get\",\r\n    url: `product/depot?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n    })}`,\r\n  });\r\n\r\n  const getProductFeeRequest = useApi({\r\n    method: \"get\",\r\n    url: \"invoice/fee\",\r\n  });\r\n\r\n  const getDepotRequest = useApi({\r\n    method: \"get\",\r\n    url: `depot/picker`,\r\n  });\r\n\r\n  const onChangeSelectedProduct = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name === \"unit\") {\r\n      const allUnits = units.filter(\r\n        (item) => item.value === selectedProduct?.unitBaseId,\r\n      )[0].children;\r\n      const targetUnit = allUnits.filter((item) => item.value === value)[0];\r\n      setShowPerUnit(targetUnit.perUnit);\r\n    }\r\n    setProductFee({\r\n      ...productFee,\r\n      [name]: value,\r\n      unitBaseId: selectedProduct?.unitBaseId,\r\n    });\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n  };\r\n\r\n  const getData = async () => {\r\n    const productList = await getDepotProductRequest.execute(\r\n      null,\r\n      selectedDepot,\r\n    );\r\n    setList(productList.data);\r\n  };\r\n\r\n  const getProductUnitPicker = () => {\r\n    if (!isEmpty(selectedProduct)) {\r\n      const allUnits = units.filter(\r\n        (item) => item.value === selectedProduct.unitBaseId,\r\n      )[0];\r\n\r\n      if (allUnits) {\r\n        return allUnits.children;\r\n      }\r\n      return [];\r\n    }\r\n    return [];\r\n  };\r\n\r\n  const onClicKRow = (e, row) => {\r\n    if (e.target.tagName === \"TD\") {\r\n      onSelectProduct(row);\r\n    }\r\n  };\r\n\r\n  const onSelectProduct = async (data) => {\r\n    setSelectedProduct(data);\r\n    if (customerId === 1) {\r\n      setProductFee({\r\n        productId: data.id,\r\n        name: data.name,\r\n        fee: \"\",\r\n        amount: \"\",\r\n      });\r\n    } else {\r\n      const fee = await getProductFeeRequest.execute(\r\n        null,\r\n        `${customerId}/${data.id}`,\r\n      );\r\n\r\n      const feeProduct = fee.data;\r\n      if (isEmpty(feeProduct)) {\r\n        setProductFee({\r\n          productId: data.id,\r\n          name: data.name,\r\n          fee: \"\",\r\n          amount: \"\",\r\n        });\r\n      } else {\r\n        setProductFee({ ...feeProduct, productId: data.id, name: data.name });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onDeselectProduct = () => {\r\n    setSelectedProduct();\r\n  };\r\n\r\n  const onDone = () => {\r\n    const newId = uuid();\r\n    const data = {\r\n      id: defaultValues ? defaultValues.id : newId,\r\n      ...productFee,\r\n      depotId: selectedDepot,\r\n      totalFee: Number(productFee.fee) * Number(productFee.amount),\r\n    };\r\n\r\n    onSubmit(data, action);\r\n  };\r\n\r\n  const getDepotPicker = async () => {\r\n    const result = await getDepotRequest.execute();\r\n    setDepotPicker(result.data);\r\n  };\r\n\r\n  const onChangeDepot = (e) => {\r\n    setSelectedDepot(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize, selectedDepot]);\r\n\r\n  useEffect(() => {\r\n    getDepotPicker();\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ marginTop: -20, maxHeight: 500 }}>\r\n      <form>\r\n        <Grid container spacing={3}>\r\n          <Grid item lg={6} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"نام کالا\"\r\n              name={\"name\"}\r\n              onChange={onChangeSelectedProduct}\r\n              value={productFee.name}\r\n              fullWidth\r\n              size=\"small\"\r\n              disabled\r\n            />\r\n          </Grid>\r\n          <Grid item lg={6} xs={12}>\r\n            <TextField\r\n              select\r\n              label=\"واحد شمارش\"\r\n              value={productFee?.unit}\r\n              onChange={onChangeSelectedProduct}\r\n              variant=\"outlined\"\r\n              name=\"unit\"\r\n              fullWidth\r\n              size=\"small\"\r\n            >\r\n              {getProductUnitPicker().map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n          {showPerUnit && (\r\n            <Grid item lg={6} xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                label=\"مقدار در واحد\"\r\n                name={\"perUnit\"}\r\n                onChange={onChangeSelectedProduct}\r\n                value={productFee?.perUnit}\r\n                fullWidth\r\n                size=\"small\"\r\n                type=\"number\"\r\n              />\r\n            </Grid>\r\n          )}\r\n          <Grid item lg={6} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"مقدار\"\r\n              name={\"amount\"}\r\n              onChange={onChangeSelectedProduct}\r\n              value={productFee?.amount}\r\n              fullWidth\r\n              size=\"small\"\r\n              type=\"number\"\r\n            />\r\n          </Grid>\r\n          <Grid item lg={6} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"قیمت\"\r\n              name={\"fee\"}\r\n              onChange={onChangeSelectedProduct}\r\n              value={productFee?.fee}\r\n              fullWidth\r\n              size=\"small\"\r\n              type=\"number\"\r\n            />\r\n          </Grid>\r\n\r\n          {!!selectedProduct && (\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n            >\r\n              <Button variant=\"contained\" color=\"primary\" onClick={onDone}>\r\n                تایید\r\n              </Button>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </form>\r\n      <Divider style={{ margin: \"20px 10px\" }} />\r\n      <Grid container spacing={3}>\r\n        <Grid item lg={12} xs={12}>\r\n          <TextField\r\n            select\r\n            label=\"انبار\"\r\n            value={selectedDepot}\r\n            onChange={onChangeDepot}\r\n            variant=\"outlined\"\r\n            name=\"depot\"\r\n            fullWidth\r\n            size=\"small\"\r\n          >\r\n            {depotPicker.map((option) => (\r\n              <MenuItem key={option.value} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n      </Grid>\r\n      <TableContainer>\r\n        <TableTop\r\n          // handleSearch={onSearch}\r\n          defaultSearch={search}\r\n        />\r\n\r\n        <Table className={classes.table} size={\"medium\"}>\r\n          <TableHeader\r\n            classes={classes}\r\n            order={order}\r\n            orderBy={orderBy}\r\n            onRequestSort={handleRequestSort}\r\n            rowCount={list.length}\r\n            headCells={headCells}\r\n          />\r\n\r\n          <TableBody>\r\n            {list.map((row) => {\r\n              return (\r\n                <TableRow\r\n                  hover\r\n                  tabIndex={-1}\r\n                  key={row.id}\r\n                  style={{ paddingRight: 10 }}\r\n                  onClick={(e) => onClicKRow(e, row)}\r\n                >\r\n                  <TableCell padding=\"none\">{row.name}</TableCell>\r\n                  <TableCell padding=\"none\">\r\n                    {row.categories.join(\",\")}\r\n                  </TableCell>\r\n                  <TableCell padding=\"none\">{row.totalStock}</TableCell>\r\n                  <TableCell padding=\"none\">{row.unitBase}</TableCell>\r\n                  <TableCell padding=\"none\">\r\n                    {selectedProduct?.id === row.id ? (\r\n                      <Button\r\n                        disabled={!!defaultValues}\r\n                        variant=\"contained\"\r\n                        className={classes.selectedButton}\r\n                        onClick={() => onDeselectProduct(row)}\r\n                        endIcon={<i className=\"material-icons-round\">done</i>}\r\n                      >\r\n                        انتخاب شده\r\n                      </Button>\r\n                    ) : (\r\n                      <Button\r\n                        disabled={!!defaultValues}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => onSelectProduct(row)}\r\n                      >\r\n                        انتخاب کالا\r\n                      </Button>\r\n                    )}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n            {!list.length && !getDepotProductRequest.pending && (\r\n              <TableRow style={{ height: 53 }}>\r\n                <TableCell colSpan={6} style={{ textAlign: \"center\" }}>\r\n                  <Typography variant=\"h6\">\r\n                    داده ای برای نمایش وجود ندارد\r\n                  </Typography>\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePaging\r\n        count={list.length}\r\n        handleChangePage={handleChangePage}\r\n        handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n        page={page}\r\n        rowsPerPage={pageSize}\r\n      />\r\n\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n      >\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n          انصراف\r\n        </Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Fragment, useEffect, useState, useRef } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  IconButton,\r\n  Chip,\r\n  MenuItem,\r\n  Hidden,\r\n} from \"@material-ui/core\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport { DeleteIcon, EditIcon } from \"../../components/icons\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { getQueryString, persianNumber } from \"../../helpers/utils\";\r\nimport CircularProgress from \"../../components/CircularProgress\";\r\nimport PersonSelector from \"../payment/personSelector\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport dialogAction from \"../../redux/actions/dialogAction\";\r\nimport DriverPayment from \"./driverPayment\";\r\nimport PrePayment from \"../payment/prePayment\";\r\nimport Drivers from \"./driver\";\r\nimport Product from \"./product\";\r\nimport Constant from \"../../helpers/constant\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingBottom: 7,\r\n    paddingTop: 7,\r\n  },\r\n}));\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    label: \"نام کالا\",\r\n  },\r\n  { id: \"unit\", label: \"واحد\" },\r\n  {\r\n    id: \"amount\",\r\n    label: \"مقدار\",\r\n  },\r\n  {\r\n    id: \"fee\",\r\n    label: \"قیمت\",\r\n  },\r\n  {\r\n    id: \"total\",\r\n    label: \"مجموع\",\r\n  },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nconst driverHeadCell = [\r\n  {\r\n    id: \"first\",\r\n    label: \"نام راننده\",\r\n  },\r\n  { id: \"last\", label: \"نام خانوادگی راننده\" },\r\n  {\r\n    id: \"car\",\r\n    label: \"نام ماشین\",\r\n  },\r\n  {\r\n    id: \"pelak\",\r\n    label: \"پلاک\",\r\n  },\r\n  {\r\n    id: \"pay\",\r\n    label: \"پرداختی\",\r\n  },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function MainDetail({ defaultValues }) {\r\n  const paymentRef = useRef(null);\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const id = getQueryString(\"id\");\r\n  const invoiceType = getQueryString(\"type\");\r\n  const [detail, setDetail] = useState({});\r\n  const [selectedPerson, setSelectedPerson] = useState();\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n  const [selectedDate, handleDateChange] = useState(moment());\r\n  const [invoiceCategory, setInvoiceCategory] = useState(3);\r\n  const [category, setCategory] = useState([]);\r\n  const [drivers, setDrivers] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n  const [invoicePerson, setInvoicePerson] = useState(\" \");\r\n  const [payments, setPayments] = useState({\r\n    cashes: [],\r\n    banks: [],\r\n    cheques: [],\r\n  });\r\n  const [totalFee, setTotalFee] = useState(0);\r\n  const [totalPayment, setTotalPayment] = useState(0);\r\n  const [discount, setDiscount] = useState(0);\r\n  const [pureFee, setPureFee] = useState(0);\r\n  const [totalRemaining, setTotalRemaining] = useState(0);\r\n\r\n  const addInvoiceRequest = useApi({\r\n    method: \"post\",\r\n    url: `invoice`,\r\n  });\r\n  const editInvoiceRequest = useApi({\r\n    method: \"put\",\r\n    url: `invoice/${id}`,\r\n  });\r\n  const detailInvoiceRequest = useApi({\r\n    method: \"get\",\r\n    url: `invoice/${id}`,\r\n  });\r\n  const invoiceCategoryRequest = useApi({\r\n    method: \"get\",\r\n    url: `invoice/category`,\r\n  });\r\n  const addInvoicePaymentRequest = useApi({\r\n    method: \"post\",\r\n    url: `payment`,\r\n  });\r\n  const getPaymentInvoiceRequest = useApi({\r\n    method: \"get\",\r\n    url: `payment/invoice/${id}`,\r\n  });\r\n\r\n  const addPaymentDriverRequest = useApi({\r\n    method: \"post\",\r\n    url: `payment`,\r\n  });\r\n\r\n  const onChnageDate = (e) => {\r\n    handleDateChange(e);\r\n  };\r\n\r\n  const getInvoiceCategory = async () => {\r\n    const detail = await invoiceCategoryRequest.execute();\r\n    setCategory(detail.data);\r\n  };\r\n\r\n  const onSelectPerson = (person) => {\r\n    setSelectedPerson(person);\r\n    setInvoicePerson(true ? `${person.firstName} ${person.lastName}` : \"\");\r\n    onDismissPerson();\r\n  };\r\n\r\n  const onDismissPerson = () => {\r\n    dialogAction.hide({ name: \"person\" });\r\n  };\r\n\r\n  const onShowDialog = () => {\r\n    dialogAction.show({\r\n      component: (\r\n        <PersonSelector\r\n          onSelect={onSelectPerson}\r\n          onDismiss={onDismissPerson}\r\n          filter={Constant.PERSON_TYPE.CUSTOMER}\r\n        />\r\n      ),\r\n      name: \"person\",\r\n      size: \"8\",\r\n      confirm: false,\r\n      disableCloseButton: false,\r\n    });\r\n  };\r\n\r\n  const getProperProducts = () => {\r\n    const newProducts = [];\r\n    products.map((item) => {\r\n      delete item.id;\r\n      return newProducts.push(item);\r\n    });\r\n    return newProducts;\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    const value = {\r\n      ...data,\r\n      products: getProperProducts(),\r\n      drivers,\r\n      date: selectedDate._d,\r\n      customerId: selectedPerson ? selectedPerson.id : 1,\r\n      type: invoiceType,\r\n      categoryId: invoiceCategory,\r\n      globalCustomer: invoicePerson,\r\n    };\r\n    if (id) {\r\n      await editInvoiceRequest.execute(value);\r\n    } else {\r\n      const response = await addInvoiceRequest.execute(value);\r\n      const invoicePayment = {\r\n        ...paymentRef.current,\r\n        invoiceId: response.id,\r\n        date: selectedDate._d,\r\n        personId: selectedPerson ? selectedPerson.id : 1,\r\n        personType: \"CUSTOMER\",\r\n        type: invoiceType === \"SELL\" ? \"INCOME\" : \"OUTCOME\",\r\n        description: `بابت فاکتور به شماره  ${response.id}`,\r\n      };\r\n      if (\r\n        invoicePayment.cashes.length > 0 ||\r\n        invoicePayment.cheques.length > 0 ||\r\n        invoicePayment.banks.length > 0\r\n      ) {\r\n        await addInvoicePaymentRequest.execute(invoicePayment);\r\n      }\r\n\r\n      drivers.map(async (item) => {\r\n        const value = {\r\n          type: \"OUTCOME\",\r\n          personType: \"DRIVER\",\r\n          personId: item.id,\r\n          description: `بابت فاکتور به شماره  ${response.id}`,\r\n          date: selectedDate._d,\r\n          ...item.payments,\r\n        };\r\n        if (\r\n          value.cashes.length > 0 ||\r\n          value.cheques.length > 0 ||\r\n          value.banks.length > 0\r\n        ) {\r\n          await addPaymentDriverRequest.execute(value);\r\n        }\r\n      });\r\n\r\n      setTimeout(() => {\r\n        onReject();\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  const onReject = () => {\r\n    history.push(\"/app/invoice-list?type=ALL\");\r\n  };\r\n\r\n  const getDetail = async () => {\r\n    const detail = await detailInvoiceRequest.execute();\r\n    const payments = await getPaymentInvoiceRequest.execute();\r\n    const paymentsArray = {\r\n      cashes: payments.data.cashes,\r\n      banks: payments.data.banks,\r\n      cheques: payments.data.cheques,\r\n    };\r\n\r\n    setDetail(detail.data);\r\n    setSelectedPerson(payments.data.person);\r\n    setPayments(paymentsArray);\r\n    setDrivers(detail.data.drivers);\r\n    setProducts(detail.data.products);\r\n    handleDateChange(detail.data.date);\r\n    setTotalFee(detail.data.totalPrice);\r\n    setDiscount(detail.data.discount);\r\n    setTotalPayment(payments.data.price);\r\n    setTotalRemaining(\r\n      detail.data.totalPrice -\r\n        (detail.data.discount + payments.data.price) +\r\n        Number(payments.data.person.accountRemaining),\r\n    );\r\n    if (detail.data.customerId === 1) {\r\n      setInvoicePerson(detail.data.globalCustomer);\r\n    }\r\n  };\r\n\r\n  const onSubmitDrivers = (drivers) => {\r\n    setDrivers(drivers);\r\n    onDismissDrivers();\r\n  };\r\n\r\n  const onDismissDrivers = () => {\r\n    dialogAction.hide({ name: \"driver\" });\r\n  };\r\n\r\n  const handleDeleteDriver = (id) => {\r\n    setDrivers(drivers.filter((item) => item.id !== id));\r\n  };\r\n\r\n  const onDismissDriverPayments = () => {\r\n    dialogAction.hide({ name: \"pay\" });\r\n  };\r\n\r\n  const onSubmitDriverPayments = (driverPayments, id) => {\r\n    const newDriver = [...drivers];\r\n    const selected = newDriver.find((item) => item.id === id);\r\n    const index = newDriver.findIndex((item) => item.id === id);\r\n    selected.payments = driverPayments;\r\n    newDriver[index] = selected;\r\n    setDrivers(newDriver);\r\n    // setDrivers({ ...drivers, drivers: { payments: driverPayments } });\r\n    onDismissDriverPayments();\r\n\r\n    // if (data.isUpdate) {\r\n    //   const index = accounts.findIndex((item) => item.id === data.id);\r\n    //   const accounstTmp = [...accounts];\r\n    //   accounstTmp[index] = data;\r\n    //   setAccounts(accounstTmp);\r\n    // } else {\r\n    //   setAccounts([...accounts, data]);\r\n    // }\r\n  };\r\n\r\n  const handlePaymentDriver = (row) => {\r\n    dialogAction.show({\r\n      title: \"پرداخت به راننده\",\r\n      component: (\r\n        <DriverPayment\r\n          onSubmit={onSubmitDriverPayments}\r\n          onDismiss={onDismissDriverPayments}\r\n          driverId={row.id}\r\n        />\r\n      ),\r\n      name: \"pay\",\r\n      size: \"6\",\r\n      confirm: false,\r\n      disableCloseButton: false,\r\n    });\r\n  };\r\n\r\n  const onShowDriverDialog = () => {\r\n    dialogAction.show({\r\n      title: \"انتخاب راننده\",\r\n      component: (\r\n        <Drivers\r\n          onSelect={onSubmitDrivers}\r\n          onDismiss={onDismissDrivers}\r\n          defaultValues={drivers}\r\n        />\r\n      ),\r\n      name: \"driver\",\r\n      size: \"8\",\r\n      confirm: false,\r\n      disableCloseButton: false,\r\n    });\r\n  };\r\n\r\n  const onSubmitProduct = (product, type) => {\r\n    if (type === \"edit\") {\r\n      const index = products.findIndex((item) => item.id === product.id);\r\n      const ProductsTmp = [...products];\r\n      ProductsTmp[index] = product;\r\n      setProducts(ProductsTmp);\r\n    } else {\r\n      setProducts([...products, product]);\r\n    }\r\n    onDismissProduct();\r\n  };\r\n\r\n  const onDismissProduct = () => {\r\n    dialogAction.hide({ name: \"product\" });\r\n  };\r\n\r\n  const handleDeleteProduct = (id) => {\r\n    setProducts(products.filter((item) => item.id !== id));\r\n  };\r\n\r\n  const handleEditProduct = (item) => {\r\n    onShowProductDialog(\"edit\", item);\r\n  };\r\n\r\n  const onShowProductDialog = (type, data) => {\r\n    dialogAction.show({\r\n      title: \"انتخاب کالا\",\r\n      component: (\r\n        <Product\r\n          onSubmit={onSubmitProduct}\r\n          onDismiss={onDismissProduct}\r\n          customerId={selectedPerson ? selectedPerson.id : 1}\r\n          defaultValues={data}\r\n          action={type}\r\n        />\r\n      ),\r\n      name: \"product\",\r\n      size: \"6\",\r\n      confirm: false,\r\n      disableCloseButton: false,\r\n    });\r\n  };\r\n\r\n  const getDetailTitle = () => {\r\n    if (id) {\r\n      if (invoiceType === \"BUY\") {\r\n        return \"ویرایش فاکتور خرید\";\r\n      }\r\n      return \"ویرایش فاکتور فروش\";\r\n    } else {\r\n      if (invoiceType === \"SELL\") {\r\n        return \"افزودن فاکتور فروش\";\r\n      }\r\n      return \"افزودن فاکتور خرید\";\r\n    }\r\n  };\r\n\r\n  const onTotalDriverPayments = (data) => {\r\n    if (data) {\r\n      const cashesPrice = data.cashes.reduce(\r\n        (n, { price }) => n + Number(price),\r\n        0,\r\n      );\r\n      const chequesPrice = data.cheques.reduce(\r\n        (n, { price }) => n + Number(price),\r\n        0,\r\n      );\r\n      const banksPrice = data.banks.reduce(\r\n        (n, { price }) => n + Number(price),\r\n        0,\r\n      );\r\n      return cashesPrice + chequesPrice + banksPrice;\r\n    }\r\n  };\r\n\r\n  const onSubmitPayment = (data) => {\r\n    if (data) {\r\n      const cashesPrice = data.cashes.reduce(\r\n        (n, { price }) => n + Number(price),\r\n        0,\r\n      );\r\n      const chequesPrice = data.cheques.reduce(\r\n        (n, { price }) => n + Number(price),\r\n        0,\r\n      );\r\n      const banksPrice = data.banks.reduce(\r\n        (n, { price }) => n + Number(price),\r\n        0,\r\n      );\r\n      setTotalPayment(cashesPrice + chequesPrice + banksPrice);\r\n    }\r\n  };\r\n\r\n  const onDiscountChange = (e) => {\r\n    setDiscount(e.target.value);\r\n  };\r\n\r\n  const onChangeCategory = (e) => {\r\n    setInvoiceCategory(e.target.value);\r\n  };\r\n\r\n  const onChangeInvoicePerson = (e) => {\r\n    setInvoicePerson(e.target.value);\r\n    setSelectedPerson();\r\n  };\r\n\r\n  useEffect(() => {\r\n    getInvoiceCategory();\r\n    if (id) {\r\n      getDetail();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setTotalFee(products.reduce((n, { totalFee }) => n + totalFee, 0));\r\n  }, [products]);\r\n\r\n  useEffect(() => {\r\n    const factorPay = totalFee - (Number(discount) + totalPayment);\r\n\r\n    setPureFee(factorPay);\r\n    if (selectedPerson) {\r\n      setTotalRemaining(factorPay + Number(selectedPerson?.accountRemaining));\r\n    }\r\n  }, [totalFee, discount, totalPayment]);\r\n\r\n  useEffect(() => {\r\n    reset(detail);\r\n  }, [reset, detail]);\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      {!detailInvoiceRequest.pending ? (\r\n        <Grid item lg={10} sm={12} className={classes.root}>\r\n          <Paper className={classes.paper}>\r\n            <Typography\r\n              className={classes.title}\r\n              variant=\"h6\"\r\n              id=\"tableTitle\"\r\n              component=\"div\"\r\n            >\r\n              {getDetailTitle()}\r\n            </Typography>\r\n\r\n            <Grid container spacing={3}>\r\n              <Fragment>\r\n                <Grid item lg={6} xs={12} style={{ display: \"flex\" }}>\r\n                  <Button\r\n                    style={{ marginLeft: 10, width: \"30%\" }}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={onShowDialog}\r\n                  >\r\n                    انتخاب مشتری\r\n                  </Button>\r\n\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    name={\"personName\"}\r\n                    onChange={onChangeInvoicePerson}\r\n                    value={invoicePerson}\r\n                    style={{ width: \"70%\" }}\r\n                    size=\"small\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12} className={classes.datePicker}>\r\n                  <DatePicker\r\n                    autoOk\r\n                    name=\"date\"\r\n                    label=\"تاریخ ثبت\"\r\n                    inputVariant=\"outlined\"\r\n                    okLabel=\"تأیید\"\r\n                    cancelLabel=\"لغو\"\r\n                    labelFunc={(date) =>\r\n                      date ? date.format(\"jYYYY/jMM/jDD\") : \"\"\r\n                    }\r\n                    value={selectedDate}\r\n                    onChange={onChnageDate}\r\n                    style={{ width: \"100%\" }}\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  {!!category.length && invoiceCategory && (\r\n                    <TextField\r\n                      select\r\n                      label=\"دسته بندی\"\r\n                      value={invoiceCategory}\r\n                      onChange={onChangeCategory}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      size=\"small\"\r\n                    >\r\n                      {category.map((option) => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </TextField>\r\n                  )}\r\n                </Grid>\r\n                <Hidden smDown>\r\n                  <Grid item lg={6} xs={12} />\r\n                </Hidden>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"مبدا\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value || \" \"}\r\n                          error={!!errors.origin}\r\n                          helperText={\r\n                            errors.origin ? errors.origin.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    name=\"origin\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"مقصد\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value || \" \"}\r\n                          error={!!errors.destination}\r\n                          helperText={\r\n                            errors.destination ? errors.destination.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    name=\"destination\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12} style={{ display: \"flex\" }}>\r\n                  <Button\r\n                    style={{ marginLeft: 10, width: \"30%\" }}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={onShowDriverDialog}\r\n                    endIcon={\r\n                      <i className=\"material-icons-round\">local_shipping</i>\r\n                    }\r\n                    inventory_2\r\n                  >\r\n                    انتخاب راننده\r\n                  </Button>\r\n                </Grid>\r\n                {!!drivers.length && (\r\n                  <Grid item xs={12}>\r\n                    <Paper>\r\n                      <TableContainer style={{ padding: \"0 10px\" }}>\r\n                        <Table\r\n                          className={classes.table}\r\n                          size={\"medium\"}\r\n                          style={{ paddingRight: 10 }}\r\n                        >\r\n                          <TableHeader headCells={driverHeadCell} />\r\n\r\n                          <TableBody>\r\n                            {drivers.map((row) => {\r\n                              console.log(row);\r\n                              return (\r\n                                <TableRow\r\n                                  hover\r\n                                  tabIndex={-1}\r\n                                  key={row.id}\r\n                                  style={{ paddingRight: 10 }}\r\n                                >\r\n                                  <TableCell padding=\"none\">\r\n                                    {row.firstName}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {row.lastName}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {row.carName}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {row.carPlaque}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {onTotalDriverPayments(row.payments)}\r\n                                  </TableCell>\r\n                                  <TableCell\r\n                                    padding=\"none\"\r\n                                    style={{ textAlign: \"left\" }}\r\n                                  >\r\n                                    <IconButton\r\n                                      onClick={() => handlePaymentDriver(row)}\r\n                                    >\r\n                                      <span\r\n                                        class=\"material-icons-round\"\r\n                                        style={{ color: \"green\" }}\r\n                                      >\r\n                                        paid\r\n                                      </span>\r\n                                    </IconButton>\r\n\r\n                                    <IconButton\r\n                                      onClick={() => handleDeleteDriver(row.id)}\r\n                                    >\r\n                                      <DeleteIcon />\r\n                                    </IconButton>\r\n                                  </TableCell>\r\n                                </TableRow>\r\n                              );\r\n                            })}\r\n                          </TableBody>\r\n                        </Table>\r\n                      </TableContainer>\r\n                    </Paper>\r\n                  </Grid>\r\n                )}\r\n                <Grid item lg={6} xs={12} style={{ display: \"flex\" }}>\r\n                  <Button\r\n                    // disabled={isEmpty(selectedPerson)}\r\n                    style={{ marginLeft: 10, width: \"30%\" }}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => onShowProductDialog(\"add\")}\r\n                    endIcon={\r\n                      <i className=\"material-icons-round\">inventory_2</i>\r\n                    }\r\n                  >\r\n                    انتخاب کالا\r\n                  </Button>\r\n                </Grid>\r\n                {!!products.length && (\r\n                  <Grid item xs={12}>\r\n                    <Paper>\r\n                      <TableContainer style={{ padding: \"0 10px\" }}>\r\n                        <Table\r\n                          className={classes.table}\r\n                          size={\"medium\"}\r\n                          style={{ paddingRight: 10 }}\r\n                        >\r\n                          <TableHeader headCells={headCells} />\r\n\r\n                          <TableBody>\r\n                            {products.map((row) => {\r\n                              return (\r\n                                <TableRow\r\n                                  hover\r\n                                  tabIndex={-1}\r\n                                  key={row.id}\r\n                                  style={{ paddingRight: 10 }}\r\n                                >\r\n                                  <TableCell padding=\"none\">\r\n                                    {row.name}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {Constant.UNITS_MAP[row.unit]}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {row.perUnit\r\n                                      ? `${persianNumber(\r\n                                          row.amount,\r\n                                        )}*${persianNumber(row.perUnit)}`\r\n                                      : persianNumber(row.amount)}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {persianNumber(row.fee)}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {persianNumber(row.fee * row.amount)}\r\n                                  </TableCell>\r\n                                  <TableCell\r\n                                    padding=\"none\"\r\n                                    style={{ textAlign: \"left\" }}\r\n                                  >\r\n                                    <IconButton\r\n                                      onClick={() => handleEditProduct(row)}\r\n                                    >\r\n                                      <EditIcon />\r\n                                    </IconButton>\r\n\r\n                                    <IconButton\r\n                                      onClick={() =>\r\n                                        handleDeleteProduct(row.id)\r\n                                      }\r\n                                    >\r\n                                      <DeleteIcon />\r\n                                    </IconButton>\r\n                                  </TableCell>\r\n                                </TableRow>\r\n                              );\r\n                            })}\r\n                          </TableBody>\r\n                        </Table>\r\n                      </TableContainer>\r\n                    </Paper>\r\n                  </Grid>\r\n                )}\r\n                <Grid item xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"توضیحات\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value || \" \"}\r\n                          error={!!errors.description}\r\n                          helperText={\r\n                            errors.description ? errors.description.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          multiline\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    name=\"description\"\r\n                  />\r\n                </Grid>\r\n                <PrePayment\r\n                  type={invoiceType === \"BUY\" ? \"OUTCOME\" : \"INCOME\"}\r\n                  defaultValues={payments}\r\n                  ref={paymentRef}\r\n                  onSubmit={onSubmitPayment}\r\n                />\r\n                <Grid container spacing={3} style={{ marginTop: 20 }}>\r\n                  <Grid item lg={3} xs={6}>\r\n                    <TextField\r\n                      disabled\r\n                      variant=\"outlined\"\r\n                      label=\"مبلغ کل\"\r\n                      value={totalFee}\r\n                      fullWidth\r\n                      size=\"small\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={3} xs={6}>\r\n                    <TextField\r\n                      disabled\r\n                      variant=\"outlined\"\r\n                      label={`${\r\n                        invoiceType === \"SELL\" ? \"جمع دریافتی\" : \"جمع پرداختی\"\r\n                      }`}\r\n                      value={totalPayment}\r\n                      fullWidth\r\n                      size=\"small\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={3} xs={6}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      onChange={onDiscountChange}\r\n                      label=\"تخفیف\"\r\n                      value={discount || \" \"}\r\n                      fullWidth\r\n                      size=\"small\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={3} xs={6}>\r\n                    <TextField\r\n                      disabled\r\n                      variant=\"outlined\"\r\n                      label=\"مبلغ خالص\"\r\n                      value={pureFee}\r\n                      fullWidth\r\n                      size=\"small\"\r\n                    />\r\n                  </Grid>\r\n                  {selectedPerson && (\r\n                    <Grid item lg={3} xs={6}>\r\n                      <TextField\r\n                        disabled\r\n                        variant=\"outlined\"\r\n                        label=\"مانده قبلی\"\r\n                        value={\r\n                          selectedPerson ? selectedPerson.accountRemaining : 0\r\n                        }\r\n                        fullWidth\r\n                        size=\"small\"\r\n                      />\r\n                    </Grid>\r\n                  )}\r\n                  <Grid item lg={3} xs={6}>\r\n                    <TextField\r\n                      disabled\r\n                      variant=\"outlined\"\r\n                      label=\"مانده نهایی\"\r\n                      value={totalRemaining}\r\n                      fullWidth\r\n                      size=\"small\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                    تایید\r\n                  </Button>\r\n\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={onReject}\r\n                  >\r\n                    بازگشت\r\n                  </Button>\r\n                </Grid>\r\n              </Fragment>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      ) : (\r\n        <CircularProgress />\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useImperativeHandle } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Typography,\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  MenuItem,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { convertParamsToQueryString, persianNumber } from \"../../helpers/utils\";\r\nimport styles from \"./style\";\r\nimport unitAction from \"../../redux/actions/unitAction\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    label: \"نام کالا\",\r\n  },\r\n  {\r\n    id: \"amount\",\r\n    label: \"موجودی کل\",\r\n  },\r\n\r\n  { id: \"amount\", label: \"مقدار\" },\r\n  { id: \"unit\", label: \" واحد شمارشی\" },\r\n\r\n  { id: \"amount\", label: \"فی\" },\r\n];\r\n\r\nconst ProductList = React.forwardRef((props, ref) => {\r\n  const { defaultValues } = props;\r\n  const classes = styles();\r\n  const [list, setList] = useState([]);\r\n  const [showPerUnit, setShowPerUnit] = useState(\r\n    defaultValues ? !!defaultValues.perUnit : false,\r\n  );\r\n  const units = unitAction.getProductUnit();\r\n  const [depotPicker, setDepotPicker] = useState([]);\r\n  const [selectedDepot, setSelectedDepot] = useState(1);\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return list;\r\n  });\r\n\r\n  const getDepotProductRequest = useApi({\r\n    method: \"get\",\r\n    url: `product/depot?${convertParamsToQueryString({})}`,\r\n  });\r\n\r\n  const getDepotRequest = useApi({\r\n    method: \"get\",\r\n    url: `depot/picker`,\r\n  });\r\n\r\n  const getData = async () => {\r\n    const productList = await getDepotProductRequest.execute(\r\n      null,\r\n      selectedDepot,\r\n    );\r\n    setList(productList.data);\r\n  };\r\n\r\n  const getProductUnitPicker = (row) => {\r\n    const allUnits = units.filter((item) => item.value === row.unitBaseId)[0];\r\n\r\n    if (allUnits) {\r\n      return allUnits.children;\r\n    }\r\n    return [];\r\n  };\r\n\r\n  const getDepotPicker = async () => {\r\n    const result = await getDepotRequest.execute();\r\n    setDepotPicker(result.data);\r\n  };\r\n\r\n  const onChangeDepot = (e) => {\r\n    setSelectedDepot(e.target.value);\r\n  };\r\n\r\n  const onChangeProductValue = (e, data) => {\r\n    const newList = [...list];\r\n    const selectedCurrentProduct = list.find((item) => item.id === data.id);\r\n    const index = list.findIndex((item) => item.id === data.id);\r\n    selectedCurrentProduct[e.target.name] = e.target.value;\r\n    newList[index] = selectedCurrentProduct;\r\n    setList(newList);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [selectedDepot]);\r\n\r\n  useEffect(() => {\r\n    getDepotPicker();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={3}>\r\n        <Grid item lg={12} xs={12} style={{ marginBottom: 20 }}>\r\n          <TextField\r\n            select\r\n            label=\"انبار\"\r\n            value={selectedDepot}\r\n            onChange={onChangeDepot}\r\n            variant=\"outlined\"\r\n            name=\"depot\"\r\n            fullWidth\r\n            size=\"small\"\r\n          >\r\n            {depotPicker.map((option) => (\r\n              <MenuItem key={option.value} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <TableContainer style={{ height: 600, overflow: \"auto\" }}>\r\n        <Table className={classes.table} size={\"medium\"}>\r\n          <TableHeader classes={classes} headCells={headCells} />\r\n\r\n          <TableBody>\r\n            {list.map((row) => {\r\n              return (\r\n                <TableRow\r\n                  hover\r\n                  tabIndex={-1}\r\n                  key={row.id}\r\n                  style={{ paddingRight: 10 }}\r\n                >\r\n                  <TableCell padding=\"none\">{row.name}</TableCell>\r\n                  <TableCell padding=\"none\">\r\n                    {persianNumber(row.totalStock)}\r\n                  </TableCell>\r\n                  <TableCell padding=\"none\">\r\n                    <TextField\r\n                      type=\"number\"\r\n                      variant=\"outlined\"\r\n                      name=\"amount\"\r\n                      style={{ width: \"70%\" }}\r\n                      size=\"small\"\r\n                      value={row.amount}\r\n                      onChange={(e) => onChangeProductValue(e, row)}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell padding=\"none\">\r\n                    <TextField\r\n                      select\r\n                      value={row.unit}\r\n                      onChange={(e) => onChangeProductValue(e, row)}\r\n                      variant=\"outlined\"\r\n                      name=\"unit\"\r\n                      style={{ width: \"70%\" }}\r\n                      size=\"small\"\r\n                    >\r\n                      {getProductUnitPicker(row).map((option) => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </TextField>\r\n                  </TableCell>\r\n                  <TableCell padding=\"none\">\r\n                    <TextField\r\n                      type=\"number\"\r\n                      variant=\"outlined\"\r\n                      name=\"fee\"\r\n                      style={{ width: \"70%\" }}\r\n                      size=\"small\"\r\n                      value={row.fee}\r\n                      onChange={(e) => onChangeProductValue(e, row)}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n            {!list.length && !getDepotProductRequest.pending && (\r\n              <TableRow style={{ height: 53 }}>\r\n                <TableCell colSpan={6} style={{ textAlign: \"center\" }}>\r\n                  <Typography variant=\"h6\">\r\n                    داده ای برای نمایش وجود ندارد\r\n                  </Typography>\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n});\r\nexport default ProductList;\r\n","import React, { Fragment, useEffect, useState, useRef } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, Paper, Typography, TextField, Button } from \"@material-ui/core\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { getQueryString } from \"../../helpers/utils\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport dialogAction from \"../../redux/actions/dialogAction\";\r\nimport PrePayment from \"../payment/prePayment\";\r\nimport Product from \"./productFastInvoice\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport PersonSelector from \"../payment/personSelector\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingBottom: 7,\r\n    paddingTop: 7,\r\n  },\r\n}));\r\n\r\nexport default function MainDetail() {\r\n  const productsRef = useRef(null);\r\n  const paymentRef = useRef(null);\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const invoiceType = getQueryString(\"type\");\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n  const [selectedDate, handleDateChange] = useState(moment());\r\n  const [products, setProducts] = useState([]);\r\n  const [invoicePerson, setInvoicePerson] = useState(\" \");\r\n  const [selectedPerson, setSelectedPerson] = useState();\r\n\r\n  const [payments, setPayments] = useState({\r\n    cashes: [],\r\n    banks: [],\r\n    cheques: [],\r\n  });\r\n  const [totalFee, setTotalFee] = useState(0);\r\n  const [totalPayment, setTotalPayment] = useState(0);\r\n  const [discount, setDiscount] = useState(0);\r\n  const [pureFee, setPureFee] = useState(0);\r\n  const [totalRemaining, setTotalRemaining] = useState(0);\r\n\r\n  const addInvoiceRequest = useApi({\r\n    method: \"post\",\r\n    url: `invoice`,\r\n  });\r\n\r\n  const addInvoicePaymentRequest = useApi({\r\n    method: \"post\",\r\n    url: `payment`,\r\n  });\r\n\r\n  const onChnageDate = (e) => {\r\n    handleDateChange(e);\r\n  };\r\n\r\n  const getProperProducts = () => {\r\n    const newProducts = [];\r\n    productsRef.current.map((item) => {\r\n      item.productId = item.id;\r\n      delete item.id;\r\n      delete item.stocks;\r\n      delete item.categories;\r\n      if (item.fee && item.unit && item.amount) {\r\n        return newProducts.push(item);\r\n      }\r\n    });\r\n    return newProducts;\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    const value = {\r\n      ...data,\r\n      products: getProperProducts(),\r\n      date: selectedDate._d,\r\n      customerId: 1,\r\n      type: invoiceType,\r\n      categoryId: [1],\r\n      globalCustomer: invoicePerson.trim(),\r\n    };\r\n    const response = await addInvoiceRequest.execute(value);\r\n    console.log(response, addInvoiceRequest);\r\n    const invoicePayment = {\r\n      ...paymentRef.current,\r\n      invoiceId: response.id,\r\n      date: selectedDate._d,\r\n      personId: 1,\r\n      personType: \"CUSTOMER\",\r\n      type: invoiceType === \"SELL\" ? \"INCOME\" : \"OUTCOME\",\r\n      description: `بابت فاکتور به شماره  ${response.id}`,\r\n    };\r\n    if (\r\n      invoicePayment.cashes.length > 0 ||\r\n      invoicePayment.cheques.length > 0 ||\r\n      invoicePayment.banks.length > 0\r\n    ) {\r\n      await addInvoicePaymentRequest.execute(invoicePayment);\r\n    }\r\n\r\n    setTimeout(() => {\r\n      onReject();\r\n    }, 1000);\r\n  };\r\n\r\n  const onReject = () => {\r\n    history.push(\"/app/invoice-list?type=ALL\");\r\n  };\r\n\r\n  const onSubmitProduct = (product, type) => {\r\n    if (type === \"edit\") {\r\n      const index = products.findIndex((item) => item.id === product.id);\r\n      const ProductsTmp = [...products];\r\n      ProductsTmp[index] = product;\r\n      setProducts(ProductsTmp);\r\n    } else {\r\n      setProducts([...products, product]);\r\n    }\r\n    onDismissProduct();\r\n  };\r\n\r\n  const onDismissProduct = () => {\r\n    dialogAction.hide({ name: \"product\" });\r\n  };\r\n\r\n  const onShowProductDialog = (type, data) => {\r\n    dialogAction.show({\r\n      title: \"انتخاب کالا\",\r\n      component: (\r\n        <Product\r\n          onSubmit={onSubmitProduct}\r\n          onDismiss={onDismissProduct}\r\n          customerId={1}\r\n          defaultValues={data}\r\n          action={type}\r\n        />\r\n      ),\r\n      name: \"product\",\r\n      size: \"6\",\r\n      confirm: false,\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  const getDetailTitle = () => {\r\n    if (invoiceType === \"SELL\") {\r\n      return \"افزودن فاکتور فروش\";\r\n    }\r\n    return \"افزودن فاکتور خرید\";\r\n  };\r\n\r\n  const onSubmitPayment = (data) => {\r\n    if (data) {\r\n      const cashesPrice = data.cashes.reduce(\r\n        (n, { price }) => n + Number(price),\r\n        0,\r\n      );\r\n      const chequesPrice = data.cheques.reduce(\r\n        (n, { price }) => n + Number(price),\r\n        0,\r\n      );\r\n      const banksPrice = data.banks.reduce(\r\n        (n, { price }) => n + Number(price),\r\n        0,\r\n      );\r\n      setTotalPayment(cashesPrice + chequesPrice + banksPrice);\r\n    }\r\n  };\r\n\r\n  const onDiscountChange = (e) => {\r\n    setDiscount(e.target.value);\r\n  };\r\n\r\n  const onChangeInvoicePerson = (e) => {\r\n    setInvoicePerson(e.target.value);\r\n    setSelectedPerson();\r\n  };\r\n\r\n  const onSelectPerson = (person) => {\r\n    setSelectedPerson(person);\r\n    setInvoicePerson(true ? `${person.firstName} ${person.lastName}` : \"\");\r\n    onDismissPerson();\r\n  };\r\n\r\n  const onDismissPerson = () => {\r\n    dialogAction.hide({ name: \"person\" });\r\n  };\r\n\r\n  const onShowDialog = () => {\r\n    dialogAction.show({\r\n      component: (\r\n        <PersonSelector\r\n          onSelect={onSelectPerson}\r\n          onDismiss={onDismissPerson}\r\n          filter={Constant.PERSON_TYPE.CUSTOMER}\r\n        />\r\n      ),\r\n      name: \"person\",\r\n      size: \"8\",\r\n      confirm: false,\r\n      disableCloseButton: false,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTotalFee(products.reduce((n, { totalFee }) => n + totalFee, 0));\r\n  }, [products]);\r\n\r\n  useEffect(() => {\r\n    const factorPay = totalFee - (Number(discount) + totalPayment);\r\n\r\n    setPureFee(factorPay);\r\n  }, [totalFee, discount, totalPayment]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <Grid item lg={10} sm={12} className={classes.root}>\r\n        <Paper className={classes.paper}>\r\n          <Typography\r\n            className={classes.title}\r\n            variant=\"h6\"\r\n            id=\"tableTitle\"\r\n            component=\"div\"\r\n          >\r\n            {getDetailTitle()}\r\n          </Typography>\r\n\r\n          <Grid container spacing={3}>\r\n            <Fragment>\r\n              <Grid item lg={6} xs={12} style={{ display: \"flex\" }}>\r\n                <Button\r\n                  style={{ marginLeft: 10, width: \"30%\" }}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={onShowDialog}\r\n                >\r\n                  انتخاب مشتری\r\n                </Button>\r\n\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  name={\"personName\"}\r\n                  onChange={onChangeInvoicePerson}\r\n                  value={invoicePerson}\r\n                  style={{ width: \"70%\" }}\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n              {/* <Grid item lg={6} xs={12} style={{ display: \"flex\" }}>\r\n                <TextField\r\n                  label=\"نام مشتری\"\r\n                  variant=\"outlined\"\r\n                  name={\"personName\"}\r\n                  onChange={onChangeInvoicePerson}\r\n                  value={invoicePerson}\r\n                  fullWidth\r\n                  size=\"small\"\r\n                />\r\n              </Grid> */}\r\n              <Grid item lg={6} xs={12} className={classes.datePicker}>\r\n                <DatePicker\r\n                  autoOk\r\n                  name=\"date\"\r\n                  label=\"تاریخ ثبت\"\r\n                  inputVariant=\"outlined\"\r\n                  okLabel=\"تأیید\"\r\n                  cancelLabel=\"لغو\"\r\n                  labelFunc={(date) =>\r\n                    date ? date.format(\"jYYYY/jMM/jDD\") : \"\"\r\n                  }\r\n                  value={selectedDate}\r\n                  onChange={onChnageDate}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <Product\r\n                  onSubmit={onSubmitProduct}\r\n                  onDismiss={onDismissProduct}\r\n                  customerId={1}\r\n                  ref={productsRef}\r\n                />\r\n              </Grid>\r\n\r\n              <PrePayment\r\n                type={invoiceType === \"BUY\" ? \"OUTCOME\" : \"INCOME\"}\r\n                defaultValues={payments}\r\n                ref={paymentRef}\r\n                onSubmit={onSubmitPayment}\r\n              />\r\n              <Grid container spacing={3} style={{ marginTop: 20 }}>\r\n                <Grid item lg={3} xs={6}>\r\n                  <TextField\r\n                    disabled\r\n                    variant=\"outlined\"\r\n                    label=\"مبلغ کل\"\r\n                    value={totalFee}\r\n                    fullWidth\r\n                    size=\"small\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={3} xs={6}>\r\n                  <TextField\r\n                    disabled\r\n                    variant=\"outlined\"\r\n                    label={`${\r\n                      invoiceType === \"SELL\" ? \"جمع دریافتی\" : \"جمع پرداختی\"\r\n                    }`}\r\n                    value={totalPayment}\r\n                    fullWidth\r\n                    size=\"small\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={3} xs={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    onChange={onDiscountChange}\r\n                    label=\"تخفیف\"\r\n                    value={discount || \" \"}\r\n                    fullWidth\r\n                    size=\"small\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={3} xs={6}>\r\n                  <TextField\r\n                    disabled\r\n                    variant=\"outlined\"\r\n                    label=\"مبلغ خالص\"\r\n                    value={pureFee}\r\n                    fullWidth\r\n                    size=\"small\"\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item lg={3} xs={6}>\r\n                  <TextField\r\n                    disabled\r\n                    variant=\"outlined\"\r\n                    label=\"مانده نهایی\"\r\n                    value={totalRemaining}\r\n                    fullWidth\r\n                    size=\"small\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n              >\r\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                  تایید\r\n                </Button>\r\n\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  onClick={onReject}\r\n                >\r\n                  بازگشت\r\n                </Button>\r\n              </Grid>\r\n            </Fragment>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n    </form>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  chip: {\r\n    color: \"#fff\",\r\n  },\r\n  allIcon: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  INCOME: {\r\n    backgroundColor: theme.palette.success.main,\r\n  },\r\n  incomeIcon: {\r\n    color: theme.palette.success.main,\r\n  },\r\n  OUTCOME: {\r\n    backgroundColor: theme.palette.danger.main,\r\n  },\r\n  outgoIcon: {\r\n    color: theme.palette.danger.main,\r\n  },\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingBottom: 7,\r\n    paddingTop: 7,\r\n  },\r\n}));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Typography,\r\n  Chip,\r\n  Button,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { convertParamsToQueryString } from \"../../helpers/utils\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    label: \"نام صندوق\",\r\n  },\r\n\r\n  {\r\n    id: \"logo\",\r\n    label: \"بانک\",\r\n  },\r\n  { id: \"amount\", label: \"موجودی\" },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function CashSelector({ onSelect, onDismiss, chequeId }) {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"name\");\r\n  const [search, setSearch] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(event.target.value);\r\n    setPage(0);\r\n  };\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n  };\r\n\r\n  const getCashRequest = useApi({\r\n    method: \"get\",\r\n    url: `cashdesk?type=BANK&${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n    })}`,\r\n  });\r\n\r\n  const handleAction = (id) => {\r\n    onSelect(id, chequeId);\r\n  };\r\n\r\n  const onClicKRow = (e, row) => {\r\n    if (e.target.tagName === \"TD\") {\r\n      handleAction(row.id);\r\n    }\r\n  };\r\n\r\n  const getData = async () => {\r\n    const cashList = await getCashRequest.execute();\r\n    setList(cashList.data);\r\n    setTotal(cashList.total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize]);\r\n\r\n  return (\r\n    <div style={{ marginTop: -50 }}>\r\n      <TableTop\r\n      // handleSearch={onSearch}\r\n      />\r\n      <TableContainer style={{ padding: \"0 10px\" }}>\r\n        <Table\r\n          className={classes.table}\r\n          size={\"medium\"}\r\n          style={{ paddingRight: 10 }}\r\n        >\r\n          <TableHeader\r\n            classes={classes}\r\n            order={order}\r\n            orderBy={orderBy}\r\n            onRequestSort={handleRequestSort}\r\n            rowCount={list.length}\r\n            headCells={headCells}\r\n          />\r\n          <TableBody>\r\n            {list.map((row) => {\r\n              return (\r\n                <TableRow\r\n                  hover\r\n                  tabIndex={-1}\r\n                  key={row.id}\r\n                  style={{ paddingRight: 10 }}\r\n                  onClick={(e) => onClicKRow(e, row)}\r\n                >\r\n                  <TableCell padding=\"none\">{row.name}</TableCell>\r\n\r\n                  <TableCell padding=\"none\">\r\n                    {row.bank && (\r\n                      <img\r\n                        style={{ width: 40, height: 40 }}\r\n                        alt={row.bank.name}\r\n                        src={`${Constant.API_ADDRESS}/${row.bank.logo}`}\r\n                      />\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell padding=\"none\">{row.amount}</TableCell>\r\n\r\n                  <TableCell padding=\"none\">\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={() => handleAction(row.id)}\r\n                    >\r\n                      انتخاب حساب\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n            {!list.length && !getCashRequest.pending && (\r\n              <TableRow style={{ height: 53 }}>\r\n                <TableCell colSpan={6} style={{ textAlign: \"center\" }}>\r\n                  <Typography variant=\"h6\">\r\n                    داده ای برای نمایش وجود ندارد\r\n                  </Typography>\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePaging\r\n        count={total}\r\n        handleChangePage={handleChangePage}\r\n        handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n        page={page}\r\n        rowsPerPage={pageSize}\r\n      />\r\n\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n      >\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n          انصراف\r\n        </Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, Paper, TextField, Button } from \"@material-ui/core\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingBottom: 7,\r\n    paddingTop: 7,\r\n  },\r\n}));\r\n\r\nexport default function SpendCheque({ chequeId, onDismiss, onSubmit }) {\r\n  const classes = useStyles();\r\n  const [selectedPerson, setSelectedPerson] = useState();\r\n  const [selectedDate, handleDateChange] = useState(moment());\r\n  const [persons, setPersons] = useState([]);\r\n  const [description, setDescription] = useState();\r\n\r\n  const getPersonsRequest = useApi({\r\n    method: \"get\",\r\n    url: \"customer\",\r\n  });\r\n\r\n  const getPersons = async () => {\r\n    const personList = await getPersonsRequest.execute();\r\n    setPersons(personList.data);\r\n  };\r\n\r\n  const onDone = () => {\r\n    onSubmit({\r\n      chequeId,\r\n      personId: selectedPerson.id,\r\n      personType: selectedPerson.type,\r\n      date: selectedDate._d,\r\n      description,\r\n    });\r\n  };\r\n\r\n  const onChangePerson = (e, value) => {\r\n    setSelectedPerson(value);\r\n  };\r\n\r\n  const onChangeDescription = (e) => {\r\n    setDescription(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPersons();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Fragment>\r\n        <Grid item xs={12} style={{ display: \"flex\" }}>\r\n          <Autocomplete\r\n            id=\"combo-box-demo\"\r\n            onChange={onChangePerson}\r\n            options={persons}\r\n            getOptionLabel={(option) =>\r\n              `${option.firstName} ${option.lastName}`\r\n            }\r\n            fullWidth\r\n            size=\"small\"\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"انتخاب شخص\" variant=\"outlined\" />\r\n            )}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.datePicker}>\r\n          <DatePicker\r\n            autoOk\r\n            name=\"date\"\r\n            label=\"تاریخ ثبت\"\r\n            inputVariant=\"outlined\"\r\n            okLabel=\"تأیید\"\r\n            cancelLabel=\"لغو\"\r\n            labelFunc={(date) => (date ? date.format(\"jYYYY/jMM/jDD\") : \"\")}\r\n            value={selectedDate}\r\n            onChange={handleDateChange}\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            label=\"بابت\"\r\n            name={\"description\"}\r\n            onChange={onChangeDescription}\r\n            value={description}\r\n            fullWidth\r\n            size=\"small\"\r\n          />\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n        >\r\n          <Button variant=\"contained\" color=\"primary\" onClick={onDone}>\r\n            تایید\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n            بازگشت\r\n          </Button>\r\n        </Grid>\r\n      </Fragment>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Tabs,\r\n  Tab,\r\n  Chip,\r\n} from \"@material-ui/core\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport {\r\n  convertParamsToQueryString,\r\n  persianNumber,\r\n  hasPermission,\r\n} from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport clsx from \"clsx\";\r\nimport dialogAction from \"../../redux/actions/dialogAction\";\r\nimport CashSelector from \"./cashSelector\";\r\nimport SpendCheque from \"./spendCheque\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \" date\",\r\n    label: \"تاریخ سررسید\",\r\n  },\r\n  {\r\n    id: \"number\",\r\n    label: \"شماره چک\",\r\n  },\r\n  {\r\n    id: \"bank\",\r\n    label: \"بانک\",\r\n  },\r\n  { id: \"amount\", label: \"مبلغ\" },\r\n  { id: \"person\", label: \"طرف حساب\" },\r\n  { id: \"cashdesk\", label: \"محل چک\" },\r\n  { id: \"type\", label: \"نوع تراکنش\" },\r\n  { id: \"action\" },\r\n];\r\n\r\nconst MainList = () => {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"chequeDueDate\");\r\n  const [search, setSearch] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [paymentType, setPaymentType] = useState(\"ALL\");\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const getChequeRequest = useApi({\r\n    method: \"get\",\r\n    url: `cheque?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n      paymentType,\r\n    })}`,\r\n  });\r\n\r\n  const spendRequest = useApi({\r\n    method: \"post\",\r\n    url: `cheque/spend`,\r\n  });\r\n\r\n  const sleepRequest = useApi({\r\n    method: \"post\",\r\n    url: `cheque/sleep`,\r\n  });\r\n\r\n  const onSelectCash = async (cashdeskId, chequeId) => {\r\n    await sleepRequest.execute({ chequeId, cashdeskId });\r\n    getData();\r\n    DialogActions.hide({ name: \"cash\" });\r\n  };\r\n\r\n  const onSubmitSpend = async (data) => {\r\n    await spendRequest.execute(data);\r\n    getData();\r\n    DialogActions.hide({ name: \"spend\" });\r\n  };\r\n\r\n  const handleAction = (row, type) => {\r\n    const types = {\r\n      sleep: () => {\r\n        dialogAction.show({\r\n          title: \"انتخاب صندوق\",\r\n          component: (\r\n            <CashSelector\r\n              chequeId={row.id}\r\n              onSelect={onSelectCash}\r\n              onDismiss={() => DialogActions.hide({ name: \"cash\" })}\r\n            />\r\n          ),\r\n          name: \"cash\",\r\n          size: \"8\",\r\n          confirm: false,\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n      spend: () => {\r\n        dialogAction.show({\r\n          title: \"خرج چک\",\r\n          component: (\r\n            <SpendCheque\r\n              chequeId={row.id}\r\n              onSubmit={onSubmitSpend}\r\n              onDismiss={() => DialogActions.hide({ name: \"spend\" })}\r\n            />\r\n          ),\r\n          name: \"spend\",\r\n          size: \"6\",\r\n          confirm: false,\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n      revert: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از برداشتن این چک مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            onSelectCash({ cashdeskId: 1, chequeId: row.id });\r\n            DialogActions.hide({ name: \"revert\" });\r\n          },\r\n          name: \"revert\",\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n    };\r\n\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const onChangeType = (data, e) => {\r\n    setPaymentType(e);\r\n  };\r\n\r\n  const getActionOptions = (data) => {\r\n    if (data.type === \"INCOME\" && data.status === \"PENDING\") {\r\n      return (\r\n        <TableCell padding=\"none\">\r\n          <TableRowMenu\r\n            options={[\r\n              { id: \"sleep\", title: \"خواباندن به حساب\" },\r\n              { id: \"spend\", title: \"خرج کردن چک\" },\r\n            ]}\r\n            hadleAction={(type) => handleAction(data, type)}\r\n          />\r\n        </TableCell>\r\n      );\r\n    } else if (data.type === \"INCOME\" && data.status === \"SLEEP\") {\r\n      return (\r\n        <TableCell padding=\"none\">\r\n          <TableRowMenu\r\n            options={[{ id: \"revert\", title: \"برداشتن از حساب\" }]}\r\n            hadleAction={(type) => handleAction(data, type)}\r\n          />\r\n        </TableCell>\r\n      );\r\n    } else {\r\n      return <TableCell padding=\"none\" />;\r\n    }\r\n  };\r\n\r\n  const getData = async () => {\r\n    const chequeList = await getChequeRequest.execute();\r\n    setList(chequeList.data);\r\n    setTotal(chequeList.total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize, paymentType]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.CASH_LIST) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getChequeRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title=\"لیست چک ها\"\r\n                    // handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                  />\r\n                  <div className={classes.tab}>\r\n                    <Tabs\r\n                      variant=\"fullWidth\"\r\n                      value={paymentType}\r\n                      onChange={onChangeType}\r\n                      indicatorColor=\"primary\"\r\n                      textColor=\"primary\"\r\n                      centered\r\n                    >\r\n                      <Tab\r\n                        icon={\r\n                          <i\r\n                            className={clsx(\r\n                              \"material-icons-round\",\r\n                              classes.allIcon,\r\n                            )}\r\n                          >\r\n                            sync\r\n                          </i>\r\n                        }\r\n                        label=\"کل چک ها\"\r\n                        value=\"ALL\"\r\n                      />\r\n                      <Tab\r\n                        icon={\r\n                          <i\r\n                            className={clsx(\r\n                              \"material-icons-round\",\r\n                              classes.incomeIcon,\r\n                            )}\r\n                          >\r\n                            trending_up\r\n                          </i>\r\n                        }\r\n                        label=\"چک های دریافتی\"\r\n                        value=\"INCOME\"\r\n                      />\r\n                      <Tab\r\n                        icon={\r\n                          <i\r\n                            className={clsx(\r\n                              \"material-icons-round\",\r\n                              classes.outgoIcon,\r\n                            )}\r\n                          >\r\n                            trending_down\r\n                          </i>\r\n                        }\r\n                        label=\"چک های پرداختی\"\r\n                        value=\"OUTCOME\"\r\n                      />\r\n                    </Tabs>\r\n                  </div>\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                            >\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  new Date(\r\n                                    row.chequeDueDate,\r\n                                  ).toLocaleDateString(\"fa-IR\"),\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(row.chequeNumber)}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.bank && (\r\n                                  <img\r\n                                    style={{ width: 40, height: 40 }}\r\n                                    alt={row.bank.name}\r\n                                    src={`${Constant.API_ADDRESS}/${row.bank.logo}`}\r\n                                  />\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  Number(row.price).toLocaleString(),\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">{row.person}</TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.cashDeskName}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                <Chip\r\n                                  label={Constant.PAYMENT_TYPE[row.type]}\r\n                                  className={clsx(\r\n                                    classes.chip,\r\n                                    classes[row.type],\r\n                                  )}\r\n                                />\r\n                              </TableCell>\r\n\r\n                              {getActionOptions(row)}\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getChequeRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={10}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainList;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  RadioGroup,\r\n  Radio,\r\n  FormControlLabel,\r\n} from \"@material-ui/core\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { getQueryString } from \"../../helpers/utils\";\r\nimport CircularProgress from \"../../components/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: 7,\r\n  },\r\n}));\r\n\r\nexport default function MainDetail({ defaultValues }) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const id = getQueryString(\"id\");\r\n  const [detail, setDetail] = useState({});\r\n  const [banks, setBanks] = useState([]);\r\n  const [selectedType, setSelectedType] = React.useState(\"CASH\");\r\n  const [selectedBank, setSelectedBank] = useState(\r\n    defaultValues?.bank.value || 1,\r\n  );\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n\r\n  const addCashRequest = useApi({\r\n    method: \"post\",\r\n    url: `cashdesk`,\r\n  });\r\n  const editCashRequest = useApi({\r\n    method: \"put\",\r\n    url: `cashdesk/${id}`,\r\n  });\r\n  const detailCashRequest = useApi({\r\n    method: \"get\",\r\n    url: `cashdesk/${id}`,\r\n  });\r\n  const getBankRequest = useApi({\r\n    method: \"get\",\r\n    url: `bank`,\r\n  });\r\n\r\n  const handleChangeType = (event) => {\r\n    setSelectedType(event.target.value);\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    if (id) {\r\n      await editCashRequest.execute(data);\r\n    } else {\r\n      await addCashRequest.execute(data);\r\n    }\r\n    setTimeout(() => {\r\n      onReject();\r\n    }, 1000);\r\n  };\r\n\r\n  const onReject = () => {\r\n    history.push(\"/app/cash-list\");\r\n  };\r\n\r\n  const getDetail = async () => {\r\n    const detail = await detailCashRequest.execute();\r\n    setDetail(detail.data);\r\n    setSelectedBank(detail.data.bankId);\r\n    setSelectedType(detail.data.type);\r\n  };\r\n\r\n  const onChangeBank = (e) => {\r\n    setSelectedBank(e.target.value);\r\n  };\r\n\r\n  const getBanks = async () => {\r\n    const result = await getBankRequest.execute();\r\n    setBanks(result.data);\r\n  };\r\n\r\n  const onDone = (data) => {\r\n    const value = {\r\n      ...data,\r\n      bankId: selectedBank,\r\n      type: selectedType,\r\n      isUpdate: !!defaultValues,\r\n    };\r\n    onSubmit(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      getDetail();\r\n    }\r\n    getBanks();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(detail);\r\n  }, [reset, detail]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onDone)}>\r\n      {!detailCashRequest.pending ? (\r\n        <Grid item lg={6} sm={12} className={classes.root}>\r\n          <Paper className={classes.paper}>\r\n            <Typography\r\n              className={classes.title}\r\n              variant=\"h6\"\r\n              id=\"tableTitle\"\r\n              component=\"div\"\r\n            >\r\n              {id ? \"ویرایش صندوق\" : \"افزودن صندوق\"}\r\n            </Typography>\r\n\r\n            <Grid container spacing={3}>\r\n              <Fragment>\r\n                <Grid item lg={12} xs={12}>\r\n                  <RadioGroup\r\n                    aria-label=\"gender\"\r\n                    name=\"gender1\"\r\n                    value={selectedType}\r\n                    onChange={handleChangeType}\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-around\",\r\n                    }}\r\n                  >\r\n                    <FormControlLabel\r\n                      value=\"CASH\"\r\n                      control={<Radio />}\r\n                      label=\"نقدی\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"BANK\"\r\n                      control={<Radio />}\r\n                      label=\"بانکی\"\r\n                    />\r\n                  </RadioGroup>\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"نام\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.name}\r\n                          helperText={errors.name ? errors.name.message : \"\"}\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                    name=\"name\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"موجودی \"\r\n                          type=\"number\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.amount}\r\n                          helperText={\r\n                            errors.amount ? errors.amount.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                    name=\"amount\"\r\n                  />\r\n                </Grid>\r\n                {selectedType === \"BANK\" && (\r\n                  <>\r\n                    <Grid item lg={6} xs={12}>\r\n                      <TextField\r\n                        select\r\n                        label=\"بانک\"\r\n                        onChange={onChangeBank}\r\n                        value={selectedBank}\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        name=\"bank\"\r\n                        SelectProps={{\r\n                          classes: {\r\n                            select: classes.rootSelect,\r\n                          },\r\n                        }}\r\n                      >\r\n                        {banks.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            <img\r\n                              src={`${Constant.API_ADDRESS}/${option.logo}`}\r\n                              alt={option.label}\r\n                              style={{\r\n                                width: 25,\r\n                                height: 25,\r\n                                borderRadius: \"50%\",\r\n                                marginLeft: 10,\r\n                              }}\r\n                            />\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </TextField>\r\n                    </Grid>\r\n                    <Grid item lg={6} xs={12}>\r\n                      <Controller\r\n                        control={control}\r\n                        render={({ onChange, value, name }) => {\r\n                          return (\r\n                            <TextField\r\n                              fullWidth\r\n                              value={value}\r\n                              size=\"small\"\r\n                              name={name}\r\n                              label=\"شماره کارت\"\r\n                              variant=\"outlined\"\r\n                              onChange={onChange}\r\n                              error={!!errors.accountCardNumber}\r\n                              helperText={\r\n                                errors.accountCardNumber\r\n                                  ? errors.accountCardNumber.message\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          );\r\n                        }}\r\n                        rules={{\r\n                          minLength: {\r\n                            value: 16,\r\n                            message: Constant.VALIDATION.CARD_NUMBER,\r\n                          },\r\n                          maxLength: {\r\n                            value: 16,\r\n                            message: Constant.VALIDATION.CARD_NUMBER,\r\n                          },\r\n                        }}\r\n                        name=\"accountCardNumber\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item lg={6} xs={12}>\r\n                      <Controller\r\n                        control={control}\r\n                        render={({ onChange, value, name }) => {\r\n                          return (\r\n                            <TextField\r\n                              fullWidth\r\n                              value={value}\r\n                              size=\"small\"\r\n                              name={name}\r\n                              label=\"شماره حساب\"\r\n                              variant=\"outlined\"\r\n                              onChange={onChange}\r\n                              error={!!errors.accountNumber}\r\n                              helperText={\r\n                                errors.accountNumber\r\n                                  ? errors.accountNumber.message\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          );\r\n                        }}\r\n                        name=\"accountNumber\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item lg={6} xs={12}>\r\n                      <Controller\r\n                        control={control}\r\n                        render={({ onChange, value, name }) => {\r\n                          return (\r\n                            <TextField\r\n                              fullWidth\r\n                              value={value}\r\n                              size=\"small\"\r\n                              name={name}\r\n                              label=\"شماره شبا\"\r\n                              variant=\"outlined\"\r\n                              onChange={onChange}\r\n                              error={!!errors.accountShaba}\r\n                              helperText={\r\n                                errors.accountShaba\r\n                                  ? errors.accountShaba.message\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          );\r\n                        }}\r\n                        name=\"accountShaba\"\r\n                      />\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n                <Grid item xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          multiline\r\n                          variant=\"outlined\"\r\n                          label=\"توضیحات\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.description}\r\n                          helperText={\r\n                            errors.description ? errors.description.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    name=\"description\"\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                    تایید\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={onReject}\r\n                  >\r\n                    بازگشت\r\n                  </Button>\r\n                </Grid>\r\n              </Fragment>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      ) : (\r\n        <CircularProgress />\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, TextField, MenuItem, Button, Divider } from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n}));\r\nconst Filter = ({ onFilter }) => {\r\n  const classes = useStyles();\r\n  const [selectedPerson, setSelectedPerson] = useState();\r\n  const [selectedFromDate, handleFromDateChange] = useState(moment());\r\n  const [selectedToDate, handleToDateChange] = useState(moment());\r\n  const [customers, setCustomers] = useState([]);\r\n\r\n  const getCustomersRequest = useApi({\r\n    method: \"get\",\r\n    url: \"customer\",\r\n  });\r\n\r\n  const onChangePerson = (e, value) => {\r\n    setSelectedPerson(value);\r\n  };\r\n\r\n  const onChnageDate = (e, type) => {\r\n    if (type === \"from\") {\r\n      handleFromDateChange(e);\r\n    } else {\r\n      handleToDateChange(e);\r\n    }\r\n  };\r\n\r\n  const getCustomers = async () => {\r\n    const customerList = await getCustomersRequest.execute();\r\n    setCustomers(customerList.data);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (typeof onFilter === \"function\") {\r\n      onFilter(\r\n        `{customerId:${\r\n          selectedPerson ? selectedPerson.id : null\r\n        },from:${selectedFromDate._d.toISOString()},to:${selectedToDate._d.toISOString()}}`,\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCustomers();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container spacing={3} alignItems=\"center\" style={{ padding: 10 }}>\r\n      <Grid item lg={3} xs={12} style={{ display: \"flex\" }}>\r\n        <Autocomplete\r\n          id=\"combo-box-demo\"\r\n          onChange={onChangePerson}\r\n          options={customers}\r\n          getOptionLabel={(option) => `${option.firstName} ${option.lastName}`}\r\n          fullWidth\r\n          size=\"small\"\r\n          renderInput={(params) => (\r\n            <TextField {...params} label=\"انتخاب شخص\" variant=\"outlined\" />\r\n          )}\r\n        />\r\n      </Grid>\r\n      <Grid item lg={3} xs={12} className={classes.datePicker}>\r\n        <DatePicker\r\n          autoOk\r\n          name=\"date\"\r\n          label=\"از تاریخ\"\r\n          inputVariant=\"outlined\"\r\n          okLabel=\"تأیید\"\r\n          cancelLabel=\"لغو\"\r\n          labelFunc={(date) => (date ? date.format(\"jYYYY/jMM/jDD\") : \"\")}\r\n          value={selectedFromDate}\r\n          onChange={(e) => onChnageDate(e, \"from\")}\r\n          style={{ width: \"100%\" }}\r\n        />\r\n      </Grid>\r\n      <Grid item lg={3} xs={12} className={classes.datePicker}>\r\n        <DatePicker\r\n          autoOk\r\n          name=\"date\"\r\n          label=\"تا تاریخ\"\r\n          inputVariant=\"outlined\"\r\n          okLabel=\"تأیید\"\r\n          cancelLabel=\"لغو\"\r\n          labelFunc={(date) => (date ? date.format(\"jYYYY/jMM/jDD\") : \"\")}\r\n          value={selectedToDate}\r\n          onChange={(e) => onChnageDate(e, \"to\")}\r\n          style={{ width: \"100%\" }}\r\n        />\r\n      </Grid>\r\n      <Grid item lg={3} xs={12}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n          تایید\r\n        </Button>\r\n      </Grid>\r\n      <Divider style={{ width: \"100%\" }} />\r\n    </Grid>\r\n  );\r\n};\r\nexport default Filter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Tabs,\r\n  Tab,\r\n  Chip,\r\n} from \"@material-ui/core\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport {\r\n  convertParamsToQueryString,\r\n  persianNumber,\r\n  hasPermission,\r\n} from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport clsx from \"clsx\";\r\nimport { getQueryString } from \"../../helpers/utils\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\nimport FilterComponent from \"./filter\";\r\n\r\nconst headCells = [\r\n  { id: \"personType\" },\r\n  {\r\n    id: \"person\",\r\n    label: \"نام شخص\",\r\n  },\r\n  {\r\n    id: \"date\",\r\n    label: \"تاریخ\",\r\n  },\r\n  { id: \"price\", label: \"مبلغ\" },\r\n  {\r\n    id: \"typr\",\r\n    label: \"نوع\",\r\n  },\r\n\r\n  // { id: \"action\" },\r\n];\r\n\r\nconst MainList = () => {\r\n  const paymentType = getQueryString(\"type\");\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"date\");\r\n  const [search, setSearch] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [type, setType] = useState(paymentType);\r\n  const [filter, setFilter] = useState();\r\n  const history = useHistory();\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onAdd = () => {\r\n    history.push(`/app/payment-detail?type=${type}`);\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n  };\r\n\r\n  const getPaymentRequest = useApi({\r\n    method: \"get\",\r\n    url: decodeURIComponent(\r\n      `payment?${convertParamsToQueryString({\r\n        page,\r\n        order,\r\n        orderBy,\r\n        pageSize,\r\n        search,\r\n        type,\r\n        filter,\r\n      })}`,\r\n    ),\r\n  });\r\n\r\n  const deleteUseRequest = useApi({\r\n    method: \"delete\",\r\n    url: `payment`,\r\n  });\r\n\r\n  const handleAction = (row, type) => {\r\n    const types = {\r\n      edit: () => {\r\n        history.push(`/app/payment-detail?type=${row.type}&id=${row.id}`);\r\n      },\r\n      delete: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            await deleteUseRequest.execute(null, row.id);\r\n            setList(list.filter((item) => item.id !== row.id));\r\n            DialogActions.hide();\r\n          },\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const onChangeType = (e, value) => {\r\n    setType(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onFilter = (data) => {\r\n    setFilter(data);\r\n    setPage(0);\r\n  };\r\n\r\n  const getTableTitle = () => {\r\n    if (type === \"INCOME\") {\r\n      return \"لیست دریافتی ها\";\r\n    } else if (type === \"OUTCOME\") {\r\n      return \"لیست پرداختی ها\";\r\n    }\r\n    return \"لیست دریافتی ها و پرداختی ها\";\r\n  };\r\n\r\n  const getData = async () => {\r\n    const paymentList = await getPaymentRequest.execute();\r\n    setList(paymentList.data);\r\n    setTotal(paymentList.total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize, type, filter]);\r\n\r\n  useEffect(() => {\r\n    setType(paymentType);\r\n  }, [paymentType]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.PAYMENT_SHOW) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getPaymentRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title={getTableTitle()}\r\n                    onAdd={type !== \"ALL\" && onAdd}\r\n                    // handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                    FilterComponent={<FilterComponent onFilter={onFilter} />}\r\n                  />\r\n                  <div className={classes.tab}>\r\n                    <Tabs\r\n                      value={type}\r\n                      onChange={onChangeType}\r\n                      indicatorColor=\"primary\"\r\n                      textColor=\"primary\"\r\n                      centered\r\n                      variant=\"fullWidth\"\r\n                    >\r\n                      <Tab\r\n                        icon={\r\n                          <i\r\n                            className={clsx(\r\n                              \"material-icons-round\",\r\n                              classes.allIcon,\r\n                            )}\r\n                          >\r\n                            sync\r\n                          </i>\r\n                        }\r\n                        label=\"کل تراکنش ها\"\r\n                        value=\"ALL\"\r\n                      />\r\n                      <Tab\r\n                        icon={\r\n                          <i\r\n                            className={clsx(\r\n                              \"material-icons-round\",\r\n                              classes.incomeIcon,\r\n                            )}\r\n                          >\r\n                            trending_up\r\n                          </i>\r\n                        }\r\n                        label=\"دریافتی ها\"\r\n                        value=\"INCOME\"\r\n                      />\r\n                      <Tab\r\n                        icon={\r\n                          <i\r\n                            className={clsx(\r\n                              \"material-icons-round\",\r\n                              classes.outgoIcon,\r\n                            )}\r\n                          >\r\n                            trending_down\r\n                          </i>\r\n                        }\r\n                        label=\"پرداختی ها\"\r\n                        value=\"OUTCOME\"\r\n                      />\r\n                    </Tabs>\r\n                  </div>\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                            >\r\n                              <TableCell padding=\"none\">\r\n                                {row.paymentname}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">{row.person}</TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  new Date(row.date).toLocaleDateString(\r\n                                    \"fa-IR\",\r\n                                  ),\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  Number(row.price).toLocaleString(),\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                <Chip\r\n                                  label={Constant.PAYMENT_TYPE[row.type]}\r\n                                  className={clsx(\r\n                                    classes.type,\r\n                                    classes[row.type],\r\n                                  )}\r\n                                />\r\n                              </TableCell>\r\n\r\n                              {/* <TableCell padding=\"none\">\r\n                                <TableRowMenu\r\n                                  options={\r\n                                    [\r\n                                      // { id: \"edit\", title: \"ویرایش\" },\r\n                                      // { id: \"delete\", title: \"حذف\" },\r\n                                    ]\r\n                                  }\r\n                                  hadleAction={(type) =>\r\n                                    handleAction(row, type)\r\n                                  }\r\n                                />\r\n                              </TableCell> */}\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getPaymentRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default MainList;\r\n","import React, { Fragment, useEffect, useRef, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  FormControlLabel,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { getQueryString } from \"../../helpers/utils\";\r\nimport CircularProgress from \"../../components/CircularProgress\";\r\nimport PersonSelector from \"./personSelector\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport dialogAction from \"../../redux/actions/dialogAction\";\r\nimport PrePayment from \"./prePayment\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingBottom: 7,\r\n    paddingTop: 7,\r\n  },\r\n}));\r\n\r\nexport default function MainDetail({ defaultValues }) {\r\n  const paymentRef = useRef(null);\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const id = getQueryString(\"id\");\r\n\r\n  const paymentType = getQueryString(\"type\");\r\n  const loan = getQueryString(\"loan\");\r\n  const customerId = getQueryString(\"customerId\");\r\n  const [detail, setDetail] = useState({});\r\n  const [isLoan, setIsLoan] = useState(loan);\r\n  const [selectedPerson, setSelectedPerson] = useState();\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n  const [selectedDate, setSelectedDate] = useState(moment());\r\n  const [payments, setPayments] = useState({\r\n    cashes: [],\r\n    banks: [],\r\n    cheques: [],\r\n  });\r\n  const addPaymentRequest = useApi({\r\n    method: \"post\",\r\n    url: `payment`,\r\n  });\r\n  const editPaymentRequest = useApi({\r\n    method: \"put\",\r\n    url: `payment/${id}`,\r\n  });\r\n  const detailPaymentRequest = useApi({\r\n    method: \"get\",\r\n    url: `payment/${id}`,\r\n  });\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const onSelectPerson = (person) => {\r\n    setSelectedPerson(person);\r\n    onDismissPerson();\r\n  };\r\n\r\n  const onDismissPerson = () => {\r\n    dialogAction.hide({ name: \"person\" });\r\n  };\r\n\r\n  const onShowDialog = () => {\r\n    dialogAction.show({\r\n      title: \"انتخاب شخص\",\r\n      component: (\r\n        <PersonSelector\r\n          onSelect={onSelectPerson}\r\n          onDismiss={onDismissPerson}\r\n          filter={Constant.PERSON_TYPE.PERSON}\r\n        />\r\n      ),\r\n      name: \"person\",\r\n      size: \"8\",\r\n      confirm: false,\r\n      disableCloseButton: false,\r\n    });\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    console.log(data);\r\n    const value = {\r\n      type: paymentType,\r\n      personType: selectedPerson.personType,\r\n      personId: selectedPerson.value,\r\n      description: data.description,\r\n      date: selectedDate._d,\r\n      isLoan,\r\n      ...paymentRef.current,\r\n    };\r\n    if (id) {\r\n      await editPaymentRequest.execute(value);\r\n    } else {\r\n      await addPaymentRequest.execute(value);\r\n    }\r\n    setTimeout(() => {\r\n      onReject();\r\n    }, 1000);\r\n  };\r\n\r\n  const onReject = () => {\r\n    if (customerId) {\r\n      return history.push(\r\n        `/app/person-transaction?id=${customerId}&type=customer`,\r\n      );\r\n    }\r\n    history.push(\"/app/payment-list?type=ALL\");\r\n  };\r\n\r\n  const getDetail = async () => {\r\n    const detail = await detailPaymentRequest.execute();\r\n    setDetail(detail.data);\r\n    const { person, date, banks, cashes, cheques } = detail.data;\r\n    setSelectedPerson(person);\r\n    setSelectedDate(date);\r\n    setPayments({ banks, cashes, cheques });\r\n    setIsLoan(detail.data.isLoan);\r\n  };\r\n\r\n  const getDetailTitle = () => {\r\n    if (id) {\r\n      if (paymentType === \"INCOME\") {\r\n        return \"ویرایش دریافتی\";\r\n      }\r\n      return \"ویرایش پرداختی\";\r\n    } else {\r\n      if (paymentType === \"INCOME\") {\r\n        return \"افزودن دریافتی\";\r\n      }\r\n      return \"افزودن پرداختی\";\r\n    }\r\n  };\r\n\r\n  const getPersonName = () => {\r\n    if (selectedPerson) {\r\n      if (selectedPerson.label) {\r\n        return `${selectedPerson.label}`;\r\n      }\r\n      return `${selectedPerson.firstName} ${selectedPerson.lastName}`;\r\n    }\r\n    return \"\";\r\n  };\r\n  const handleChangeIsloan = (e) => {\r\n    setIsLoan(e.target.checked);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      getDetail();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(detail);\r\n  }, [reset, detail]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      {!detailPaymentRequest.pending ? (\r\n        <Grid item lg={8} sm={12} className={classes.root}>\r\n          <Paper className={classes.paper}>\r\n            <Typography\r\n              className={classes.title}\r\n              variant=\"h6\"\r\n              id=\"tableTitle\"\r\n              component=\"div\"\r\n            >\r\n              {getDetailTitle()}\r\n            </Typography>\r\n\r\n            <Grid container spacing={3}>\r\n              <Fragment>\r\n                <Grid item lg={6} xs={12} style={{ display: \"flex\" }}>\r\n                  <Button\r\n                    style={{ marginLeft: 10, width: \"30%\" }}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={onShowDialog}\r\n                  >\r\n                    انتخاب شخص\r\n                  </Button>\r\n\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    name={\"personName\"}\r\n                    value={getPersonName()}\r\n                    disabled\r\n                    style={{ width: \"70%\" }}\r\n                    size=\"small\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12} className={classes.datePicker}>\r\n                  <DatePicker\r\n                    autoOk\r\n                    name=\"date\"\r\n                    label=\"تاریخ ثبت\"\r\n                    inputVariant=\"outlined\"\r\n                    okLabel=\"تأیید\"\r\n                    cancelLabel=\"لغو\"\r\n                    labelFunc={(date) =>\r\n                      date ? date.format(\"jYYYY/jMM/jDD\") : \"\"\r\n                    }\r\n                    value={selectedDate}\r\n                    onChange={handleDateChange}\r\n                    style={{ width: \"100%\" }}\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        checked={isLoan}\r\n                        onChange={handleChangeIsloan}\r\n                        // name={item.value}\r\n                        color=\"primary\"\r\n                      />\r\n                    }\r\n                    label={\r\n                      paymentType === \"INCOME\" ? \"پرداخت قسط\" : \"اعطای وام\"\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"بابت\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.description}\r\n                          helperText={\r\n                            errors.description ? errors.description.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    name=\"description\"\r\n                  />\r\n                </Grid>\r\n                {((id && payments) || !id) && (\r\n                  <PrePayment\r\n                    defaultValues={payments}\r\n                    type={paymentType}\r\n                    ref={paymentRef}\r\n                  />\r\n                )}\r\n\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                    تایید\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={onReject}\r\n                  >\r\n                    بازگشت\r\n                  </Button>\r\n                </Grid>\r\n              </Fragment>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      ) : (\r\n        <CircularProgress />\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n}));\r\n","import React from \"react\";\r\n\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { persianNumber } from \"../../helpers/utils\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"amount\",\r\n    label: \"موجودی\",\r\n  },\r\n  { id: \"unit\", label: \"واحد\" },\r\n  {\r\n    id: \"depot\",\r\n    label: \"انبار\",\r\n  },\r\n];\r\n\r\nexport default function MainDetail({ data, onSubmit }) {\r\n  return (\r\n    <Grid container spacing={3} alignItems=\"center\">\r\n      {!!data.length && (\r\n        <Grid item xs={12}>\r\n          <TableContainer style={{ padding: \"0 10px\" }}>\r\n            <Table size={\"medium\"} style={{ paddingRight: 10 }}>\r\n              <TableHeader headCells={headCells} />\r\n\r\n              <TableBody>\r\n                {data.map((row) => {\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      tabIndex={-1}\r\n                      key={row.id}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableCell padding=\"none\">\r\n                        {persianNumber(row.stock)}\r\n                      </TableCell>\r\n                      <TableCell padding=\"none\">{row.unit}</TableCell>\r\n                      <TableCell padding=\"none\">{row.depot}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Grid>\r\n      )}\r\n      <Grid item xs={12}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n          بازگشت\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  IconButton,\r\n  Collapse,\r\n  Typography,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport PrePayment from \"../payment/prePayment\";\r\nimport unitAction from \"../../redux/actions/unitAction\";\r\nimport { getQueryString, persianNumber } from \"../../helpers/utils\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n  deleteIcon: {\r\n    color: theme.palette.error.main,\r\n  },\r\n  formControl: {\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nexport default function MainDetail() {\r\n  const productId = getQueryString(\"id\");\r\n  const productName = getQueryString(\"productName\");\r\n  const unitBaseId = getQueryString(\"unitBaseId\");\r\n  const paymentRef = useRef(null);\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [units, setUnits] = useState([]);\r\n  const [selectedUnit, setSelectedUnit] = useState(units[0]?.value);\r\n  const [selectedSource, setSelectedSource] = useState(5);\r\n  const [selectedDestination, setSelectedDestination] = useState(5);\r\n  const [amount, setAmount] = useState();\r\n  const [selectedDriver, setSelectedDriver] = useState();\r\n  const [description, setDescription] = useState();\r\n  const [depotPicker, setDepotPicker] = useState([]);\r\n  const [driverPicker, setDriverPicker] = useState([]);\r\n  const [isAddDriver, setIsAddDriver] = useState(false);\r\n  const [category, setCategory] = useState([]);\r\n  const [categoryId, setDriverCategory] = useState(1);\r\n  const [newDriver, setNewDriver] = useState();\r\n  const [showPerUnit, setShowPerUnit] = useState(false);\r\n  const [perUnit, setPerUnit] = useState();\r\n  const [payments, setPayments] = useState({\r\n    cashes: [],\r\n    banks: [],\r\n    cheques: [],\r\n  });\r\n\r\n  const getDepotRequest = useApi({\r\n    method: \"get\",\r\n    url: `depot/picker`,\r\n  });\r\n\r\n  const getDriversRequest = useApi({\r\n    method: \"get\",\r\n    url: \"driver\",\r\n  });\r\n\r\n  const categoryIdRequest = useApi({\r\n    method: \"get\",\r\n    url: `driver/category`,\r\n  });\r\n\r\n  const transferRequest = useApi({\r\n    method: \"post\",\r\n    url: `depot/transfer`,\r\n  });\r\n\r\n  const addDriverRequest = useApi({\r\n    method: \"post\",\r\n    url: `driver`,\r\n  });\r\n\r\n  const addTransferPaymentRequest = useApi({\r\n    method: \"post\",\r\n    url: `payment`,\r\n  });\r\n\r\n  const getDriverCategory = async () => {\r\n    const detail = await categoryIdRequest.execute();\r\n    setCategory(detail.data);\r\n  };\r\n\r\n  const onSubmitTransfer = async () => {\r\n    const data = {\r\n      sourceDepotId: selectedSource,\r\n      destinationDepotId: selectedDestination,\r\n      productId,\r\n      amount,\r\n      perUnit,\r\n      unit: selectedUnit,\r\n      description,\r\n      isAddDriver,\r\n      newDriver,\r\n    };\r\n    let newAddedDriver;\r\n    if (!selectedDriver) {\r\n      newAddedDriver = await addDriverRequest.execute(data.newDriver);\r\n      data.driverId = newAddedDriver.id;\r\n      await transferRequest.execute(data);\r\n    } else {\r\n      data.driverId = selectedDriver.id;\r\n      await transferRequest.execute(data);\r\n    }\r\n\r\n    const transferPayments = {\r\n      ...paymentRef.current,\r\n      date: new Date(),\r\n      personId: selectedDriver ? selectedDriver.id : newAddedDriver.id,\r\n      personType: \"DRIVER\",\r\n      type: \"OUTCOME\",\r\n      description: `بابت انتقال بین انبارها`,\r\n    };\r\n    await addTransferPaymentRequest.execute(transferPayments);\r\n    setTimeout(() => {\r\n      onDismiss();\r\n    }, 1000);\r\n  };\r\n\r\n  const getDrivers = async () => {\r\n    const customerList = await getDriversRequest.execute();\r\n    setDriverPicker(customerList.data);\r\n  };\r\n\r\n  const onChange = (e, type) => {\r\n    const types = {\r\n      source: () => {\r\n        setSelectedSource(e.target.value);\r\n      },\r\n      destination: () => {\r\n        setSelectedDestination(e.target.value);\r\n      },\r\n      amount: () => {\r\n        setAmount(e.target.value);\r\n      },\r\n      description: () => {\r\n        setDescription(e.target.value);\r\n      },\r\n      unit: () => {\r\n        setSelectedUnit(e.target.value);\r\n        const targetUnit = units.filter(\r\n          (item) => item.value === e.target.value,\r\n        )[0];\r\n        setShowPerUnit(targetUnit.perUnit);\r\n      },\r\n      firstName: () => {\r\n        setNewDriver({ ...newDriver, firstName: e.target.value });\r\n      },\r\n      lastName: () => {\r\n        setNewDriver({ ...newDriver, lastName: e.target.value });\r\n      },\r\n      carName: () => {\r\n        setNewDriver({ ...newDriver, carName: e.target.value });\r\n      },\r\n      carPlaque: () => {\r\n        setNewDriver({ ...newDriver, carPlaque: e.target.value });\r\n      },\r\n      categoryId: () => {\r\n        setNewDriver({ ...newDriver, categoryId: e.target.value });\r\n      },\r\n      perUnit: () => {\r\n        setPerUnit(e.target.value);\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      return types[type]();\r\n    }\r\n  };\r\n\r\n  const onDismiss = () => {\r\n    history.push(\"/app/product-list\");\r\n  };\r\n\r\n  const onChangeDriver = (e, value) => {\r\n    setSelectedDriver(value);\r\n  };\r\n\r\n  const getDepotPicker = async () => {\r\n    const result = await getDepotRequest.execute();\r\n    setDepotPicker(result.data);\r\n  };\r\n\r\n  const onAddDriver = () => {\r\n    setIsAddDriver(!isAddDriver);\r\n  };\r\n\r\n  const getUnits = () => {\r\n    const allUnits = unitAction\r\n      .getProductUnit()\r\n      .filter((item) => item.value === unitBaseId)[0];\r\n    if (allUnits) {\r\n      setUnits(allUnits.children);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUnits();\r\n    getDriverCategory();\r\n    getDrivers();\r\n    getDepotPicker();\r\n  }, []);\r\n\r\n  return (\r\n    <form>\r\n      <Grid item lg={6} sm={12} className={classes.root}>\r\n        <Paper className={classes.paper}>\r\n          <Typography\r\n            className={classes.title}\r\n            variant=\"h6\"\r\n            id=\"tableTitle\"\r\n            component=\"div\"\r\n          >\r\n            {`انتقال ${productName} بین انبار ها`}\r\n          </Typography>\r\n          <Grid container spacing={3}>\r\n            <Grid item sm={6} xs={12}>\r\n              <TextField\r\n                select\r\n                label=\"انبار مبدا\"\r\n                value={selectedSource}\r\n                onChange={(e) => onChange(e, \"source\")}\r\n                variant=\"outlined\"\r\n                name=\"depot\"\r\n                fullWidth\r\n                size=\"small\"\r\n              >\r\n                {depotPicker.map((option) => (\r\n                  <MenuItem key={option.value} value={option.value}>\r\n                    {option.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n            <Grid item sm={6} xs={12}>\r\n              <TextField\r\n                select\r\n                label=\"انبار مقصد\"\r\n                value={selectedDestination}\r\n                onChange={(e) => onChange(e, \"destination\")}\r\n                variant=\"outlined\"\r\n                name=\"depot\"\r\n                fullWidth\r\n                size=\"small\"\r\n              >\r\n                {depotPicker.map((option) => (\r\n                  <MenuItem key={option.value} value={option.value}>\r\n                    {option.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n\r\n            <Grid item sm={6} xs={12}>\r\n              <TextField\r\n                select\r\n                label=\"واحد\"\r\n                value={selectedUnit}\r\n                onChange={(e) => onChange(e, \"unit\")}\r\n                variant=\"outlined\"\r\n                name=\"unit\"\r\n                fullWidth\r\n                size=\"small\"\r\n              >\r\n                {units.map((option) => (\r\n                  <MenuItem key={option.value} value={option.value}>\r\n                    {option.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n\r\n            <Grid item sm={6} xs={12}>\r\n              <TextField\r\n                type=\"number\"\r\n                variant=\"outlined\"\r\n                label=\"مقدار\"\r\n                name={\"amount\"}\r\n                onChange={(e) => onChange(e, \"amount\")}\r\n                value={amount}\r\n                fullWidth\r\n                size=\"small\"\r\n              />\r\n            </Grid>\r\n            {showPerUnit && (\r\n              <Grid item sm={6} xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"مقدار در واحد\"\r\n                  name={\"perUnit\"}\r\n                  onChange={(e) => onChange(e, \"perUnit\")}\r\n                  value={perUnit}\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  type=\"number\"\r\n                />\r\n              </Grid>\r\n            )}\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                multiline\r\n                variant=\"outlined\"\r\n                label=\"توضیحات\"\r\n                name={\"description\"}\r\n                onChange={(e) => onChange(e, \"description\")}\r\n                value={description}\r\n                fullWidth\r\n                size=\"small\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              sm={6}\r\n              xs={12}\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                marginBottom: 20,\r\n              }}\r\n            >\r\n              <Autocomplete\r\n                id=\"combo-box-demo\"\r\n                onChange={onChangeDriver}\r\n                options={driverPicker}\r\n                getOptionLabel={(option) =>\r\n                  `${option.firstName} ${option.lastName}`\r\n                }\r\n                fullWidth\r\n                size=\"small\"\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"انتخاب راننده\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                )}\r\n              />\r\n              <IconButton\r\n                color=\"primary\"\r\n                style={{ marginRight: 10 }}\r\n                onClick={onAddDriver}\r\n              >\r\n                <i className=\"material-icons-round\">\r\n                  {isAddDriver ? \"clear\" : \"add\"}\r\n                </i>\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n          <Collapse in={isAddDriver}>\r\n            <Grid container spacing={3}>\r\n              <Grid item sm={6} xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"نام راننده\"\r\n                  onChange={(e) => onChange(e, \"firstName\")}\r\n                  value={newDriver?.firstName}\r\n                  fullWidth\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n              <Grid item sm={6} xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"نام خانوادگی راننده\"\r\n                  onChange={(e) => onChange(e, \"lastName\")}\r\n                  value={newDriver?.lastName}\r\n                  fullWidth\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item sm={6} xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"نام ماشین\"\r\n                  onChange={(e) => onChange(e, \"carName\")}\r\n                  value={newDriver?.carName}\r\n                  fullWidth\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item sm={6} xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"پلاک\"\r\n                  onChange={(e) => onChange(e, \"carPlaque\")}\r\n                  value={newDriver?.carPlaque}\r\n                  fullWidth\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item sm={6} xs={12}>\r\n                {!!category.length && categoryId && (\r\n                  <TextField\r\n                    select\r\n                    label=\"دسته بندی\"\r\n                    value={categoryId}\r\n                    onChange={(e) => onChange(e, \"categoryId\")}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    size=\"small\"\r\n                  >\r\n                    {category.map((option) => (\r\n                      <MenuItem key={option.value} value={option.value}>\r\n                        {option.label}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </TextField>\r\n                )}\r\n              </Grid>\r\n\r\n              <PrePayment\r\n                type={\"OUTCOME\"}\r\n                defaultValues={payments}\r\n                ref={paymentRef}\r\n              />\r\n            </Grid>\r\n          </Collapse>\r\n\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              marginTop: 30,\r\n            }}\r\n          >\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={onSubmitTransfer}\r\n            >\r\n              تایید\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n              بازگشت\r\n            </Button>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n    </form>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, TextField, MenuItem, Button, Divider } from \"@material-ui/core\";\r\n\r\nconst Filter = ({ onFilter, category }) => {\r\n  const [filterData, setFilterData] = useState({ category: \"\" });\r\n\r\n  const handleChange = (event) => {\r\n    // setFilterData(event.target.value);\r\n    setFilterData({ ...filterData, category: event.target.value });\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (typeof onFilter === \"function\") {\r\n      onFilter(filterData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3} alignItems=\"center\" style={{ padding: 10 }}>\r\n      <Grid item lg={3} xs={12}>\r\n        <TextField\r\n          select\r\n          label=\"دسته بندی\"\r\n          onChange={handleChange}\r\n          value={filterData.category}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        >\r\n          {category.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n          <MenuItem key={\"ALL\"} value={\"ALL\"}>\r\n            همه دسته بندی ها\r\n          </MenuItem>\r\n        </TextField>\r\n      </Grid>\r\n      <Grid item lg={3} xs={12}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n          تایید\r\n        </Button>\r\n      </Grid>\r\n      <Divider style={{ width: \"100%\" }} />\r\n    </Grid>\r\n  );\r\n};\r\nexport default Filter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { convertParamsToQueryString, hasPermission } from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport AmountBrif from \"./amountBrif\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\nimport Transform from \"./transfer\";\r\nimport unitAction from \"../../redux/actions/unitAction\";\r\nimport FilterComponent from \"./filter\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    label: \"نام کالا\",\r\n  },\r\n  {\r\n    id: \"category\",\r\n    label: \"دسته بندی\",\r\n  },\r\n\r\n  {\r\n    id: \"DefaultUnit\",\r\n    label: \"واحد پیش فرض\",\r\n  },\r\n  { id: \"unit\", label: \" واحد شمارشی\" },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function MainList() {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"name\");\r\n  const [search, setSearch] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(10000);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [category, setCategory] = useState([]);\r\n  const [filter, setFilter] = useState();\r\n  const history = useHistory();\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onAdd = () => {\r\n    history.push(\"/app/product-detail\");\r\n  };\r\n\r\n  const getProductRequest = useApi({\r\n    method: \"get\",\r\n    url: decodeURIComponent(\r\n      `product?${convertParamsToQueryString({\r\n        page,\r\n        order,\r\n        orderBy,\r\n        pageSize,\r\n        search,\r\n        filter,\r\n      })}`,\r\n    ),\r\n  });\r\n\r\n  const getCategoryRequest = useApi({\r\n    method: \"get\",\r\n    url: `product/category`,\r\n  });\r\n\r\n  const deleteUseRequest = useApi({\r\n    method: \"delete\",\r\n    url: `product`,\r\n  });\r\n\r\n  const transferRequest = useApi({\r\n    method: \"post\",\r\n    url: `depot/transfer`,\r\n  });\r\n\r\n  const addDriverRequest = useApi({\r\n    method: \"post\",\r\n    url: `driver`,\r\n  });\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onSubmitTransfer = async (data) => {\r\n    if (data.isAddDriver) {\r\n      await addDriverRequest.execute(data.newDriver);\r\n      await transferRequest.execute(data);\r\n    } else {\r\n      await transferRequest.execute(data);\r\n    }\r\n\r\n    // const transferPayments = {\r\n    //   ...paymentRef.current,\r\n    //   invoiceId: response.id,\r\n    //   date: selectedDate._d,\r\n    //   personId: selectedPerson ? selectedPerson.id : 1,\r\n    //   personType: \"CUSTOMER\",\r\n    //   type: invoiceType === \"SELL\" ? \"INCOME\" : \"OUTCOME\",\r\n    //   description: `بابت فاکتور به شماره  ${response.id}`,\r\n    // };\r\n    // addPaymentRequest.execute(transferPayments);\r\n\r\n    await getData();\r\n    // DialogActions.hide({});\r\n  };\r\n\r\n  const handleAction = (row, type) => {\r\n    const { id } = row;\r\n    const types = {\r\n      edit: () => {\r\n        history.push(`/app/product-detail?id=${id}`);\r\n      },\r\n      delete: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            await deleteUseRequest.execute(null, id);\r\n            setList(list.filter((item) => item.id !== id));\r\n            DialogActions.hide({ name: \"delete\" });\r\n          },\r\n          name: \"delete\",\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n      amount: () => {\r\n        DialogActions.show({\r\n          title: \"موجودی در انبار ها\",\r\n          component: (\r\n            <AmountBrif\r\n              onSubmit={() => {\r\n                DialogActions.hide({ name: \"amount\" });\r\n              }}\r\n              data={row.stocks}\r\n            />\r\n          ),\r\n          name: \"amount\",\r\n          size: \"4\",\r\n          confirm: false,\r\n          disableCloseButton: true,\r\n        });\r\n      },\r\n      transaction: () => {},\r\n\r\n      transfer: () => {\r\n        history.push(\r\n          `/app/product-transfer?id=${id}&productName=${row.name}&unitBaseId=${row.unitBaseId}`,\r\n        );\r\n\r\n        //   let units;\r\n        //   const allUnits = unitAction\r\n        //     .getProductUnit()\r\n        //     .filter((item) => item.value === row.unitBaseId)[0];\r\n        //   if (allUnits) {\r\n        //     units = allUnits.children;\r\n        //   }\r\n        //   DialogActions.show({\r\n        //     title: \"انتقال بین انبار ها\",\r\n        //     component: (\r\n        //       <Transform\r\n        //         onDismiss={() => {\r\n        //           DialogActions.hide();\r\n        //         }}\r\n        //         onSubmit={onSubmitTransfer}\r\n        //         productId={row.id}\r\n        //         units={units}\r\n        //       />\r\n        //     ),\r\n        //     size: \"4\",\r\n        //     confirm: false,\r\n        //     disableCloseButton: true,\r\n        //   });\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const onClicKRow = (e, row) => {\r\n    if (e.target.tagName === \"TD\") {\r\n      handleAction(row, \"edit\");\r\n    }\r\n  };\r\n\r\n  const onFilter = (data) => {\r\n    setFilter(`{category:${data.category}}`);\r\n  };\r\n\r\n  const getData = async () => {\r\n    const productList = await getProductRequest.execute();\r\n    setList(productList.data);\r\n    setTotal(productList.total);\r\n  };\r\n\r\n  const getCategory = async () => {\r\n    const categoryData = await getCategoryRequest.execute();\r\n    setCategory(categoryData.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    getCategory();\r\n  }, [page, order, pageSize, search, filter]);\r\n\r\n  useEffect(() => {\r\n    getCategory();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.PRODUCT_SHOW) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getProductRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title=\"لیست کالا ها\"\r\n                    onAdd={\r\n                      hasPermission(Constant.ALL_PERMISSIONS.PRODUCT_EDIT) &&\r\n                      onAdd\r\n                    }\r\n                    FilterComponent={\r\n                      <FilterComponent\r\n                        onFilter={onFilter}\r\n                        category={category}\r\n                      />\r\n                    }\r\n                    // handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                  />\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                              onClick={(e) => onClicKRow(e, row)}\r\n                            >\r\n                              <TableCell padding=\"none\">{row.name}</TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.categories.join(\",\")}\r\n                              </TableCell>\r\n\r\n                              <TableCell padding=\"none\">\r\n                                {row.defaultUnit}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.unitBase}\r\n                              </TableCell>\r\n\r\n                              <TableCell padding=\"none\">\r\n                                <TableRowMenu\r\n                                  options={[\r\n                                    { id: \"amount\", title: \"موجودی ها\" },\r\n                                    // { id: \"transaction\", title: \"تراکنش ها\" },\r\n                                    {\r\n                                      id: \"transfer\",\r\n                                      title: \"انتقال بین انبار\",\r\n                                    },\r\n                                    {\r\n                                      id: \"edit\",\r\n                                      title: \"ویرایش\",\r\n                                      hidden: !hasPermission(\r\n                                        Constant.ALL_PERMISSIONS.PRODUCT_EDIT,\r\n                                      ),\r\n                                    },\r\n                                    {\r\n                                      id: \"delete\",\r\n                                      title: \"حذف\",\r\n                                      hidden: !hasPermission(\r\n                                        Constant.ALL_PERMISSIONS.PRODUCT_DELETE,\r\n                                      ),\r\n                                    },\r\n                                  ]}\r\n                                  hadleAction={(type) =>\r\n                                    handleAction(row, type)\r\n                                  }\r\n                                />\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getProductRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Grid, MenuItem } from \"@material-ui/core\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport Constant from \"../../helpers/constant\";\r\n\r\nconst Account = ({ onSubmit, onDismiss, defaultValues, units }) => {\r\n  const [depotPicker, setDepotPicker] = useState([]);\r\n  const [seletedUnit, setSelectedUnit] = useState(\r\n    defaultValues ? defaultValues.unit.value : units[0].value,\r\n  );\r\n  const [seletedDepot, setSelectedDepot] = useState(1);\r\n  const [showPerUnit, setShowPerUnit] = useState(\r\n    defaultValues ? !!defaultValues.perUnit : false,\r\n  );\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n\r\n  const getDepotRequest = useApi({\r\n    method: \"get\",\r\n    url: `depot/picker`,\r\n  });\r\n\r\n  const getDepotPicker = async () => {\r\n    const result = await getDepotRequest.execute();\r\n    setDepotPicker(result.data);\r\n  };\r\n\r\n  //   const onChange = (e) => {\r\n  //     setValues({ ...values, [e.target.name]: e.target.value });\r\n  //   };\r\n\r\n  const onChangeDepot = (e) => {\r\n    setSelectedDepot(e.target.value);\r\n  };\r\n\r\n  const onChangeUnit = (e) => {\r\n    setSelectedUnit(e.target.value);\r\n\r\n    const { value } = e.target;\r\n\r\n    const targetUnit = units.filter((item) => item.value === value)[0];\r\n    setShowPerUnit(targetUnit.perUnit);\r\n\r\n    setSelectedUnit(e.target.value);\r\n  };\r\n\r\n  const getSelectedDepot = () => {\r\n    return depotPicker.find((item) => item.value === seletedDepot);\r\n  };\r\n\r\n  const getSelectedUnit = () => {\r\n    return units.find((item) => item.value === seletedUnit);\r\n  };\r\n\r\n  const onDone = (data) => {\r\n    const newId = uuid();\r\n\r\n    const value = {\r\n      ...data,\r\n      unit: getSelectedUnit(),\r\n      depot: getSelectedDepot(),\r\n      id: defaultValues ? defaultValues.id : newId,\r\n      isUpdate: !!defaultValues,\r\n    };\r\n    onSubmit(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDepotPicker();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(defaultValues);\r\n  }, [reset, defaultValues]);\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                variant=\"outlined\"\r\n                label=\"موجودی اول دوره\"\r\n                name={name}\r\n                onChange={onChange}\r\n                value={value}\r\n                error={!!errors.stock}\r\n                helperText={errors.stock ? errors.stock.message : \"\"}\r\n                fullWidth\r\n                size=\"small\"\r\n                type=\"number\"\r\n              />\r\n            );\r\n          }}\r\n          rules={{\r\n            required: Constant.VALIDATION.REQUIRED,\r\n            min: {\r\n              value: 0,\r\n              message: Constant.VALIDATION.POSITIVE_NUMBER,\r\n            },\r\n          }}\r\n          name=\"stock\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          select\r\n          label=\"واحد\"\r\n          value={seletedUnit}\r\n          onChange={onChangeUnit}\r\n          variant=\"outlined\"\r\n          name=\"unit\"\r\n          fullWidth\r\n          size=\"small\"\r\n        >\r\n          {units.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Grid>\r\n      {showPerUnit && (\r\n        <Grid item xs={12}>\r\n          <Controller\r\n            control={control}\r\n            render={({ onChange, value, name }) => {\r\n              return (\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"مقدار در واحد\"\r\n                  name={name}\r\n                  onChange={onChange}\r\n                  value={value}\r\n                  error={!!errors.perUnit}\r\n                  helperText={errors.perUnit ? errors.perUnit.message : \"\"}\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  type=\"number\"\r\n                />\r\n              );\r\n            }}\r\n            rules={{\r\n              required: Constant.VALIDATION.REQUIRED,\r\n              min: {\r\n                value: 0,\r\n                message: Constant.VALIDATION.POSITIVE_NUMBER,\r\n              },\r\n            }}\r\n            name=\"perUnit\"\r\n          />\r\n        </Grid>\r\n      )}\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          select\r\n          label=\"انبار\"\r\n          value={seletedDepot}\r\n          onChange={onChangeDepot}\r\n          variant=\"outlined\"\r\n          name=\"depot\"\r\n          fullWidth\r\n          size=\"small\"\r\n        >\r\n          {depotPicker.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Grid>\r\n\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          onClick={handleSubmit(onDone)}\r\n        >\r\n          تایید\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onDismiss}>\r\n          انصراف\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  IconButton,\r\n  Select,\r\n  FormControl,\r\n  InputLabel,\r\n} from \"@material-ui/core\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport { DeleteIcon, EditIcon } from \"../../components/icons\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { getQueryString, persianNumber } from \"../../helpers/utils\";\r\nimport CircularProgress from \"../../components/CircularProgress\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport Amount from \"./amount\";\r\nimport unitAction from \"../../redux/actions/unitAction\";\r\nimport { isEmpty } from \"lodash\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n  deleteIcon: {\r\n    color: theme.palette.error.main,\r\n  },\r\n  formControl: {\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"amount\",\r\n    label: \"موجودی\",\r\n  },\r\n  { id: \"unit\", label: \"واحد\" },\r\n  {\r\n    id: \"depot\",\r\n    label: \"انبار\",\r\n  },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function MainDetail() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const id = getQueryString(\"id\");\r\n  const [detail, setDetail] = useState({});\r\n  const [amounts, setAmounts] = useState([]);\r\n  const [category, setCategory] = useState([]);\r\n  const [selectedUnit, setSelectedUnit] = useState(\"MASS\");\r\n  const [selectedCategory, setSelectedCategory] = useState([1]);\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n  const units = unitAction.getProductUnit();\r\n\r\n  const addProductRequest = useApi({\r\n    method: \"post\",\r\n    url: `product`,\r\n  });\r\n  const editProductRequest = useApi({\r\n    method: \"put\",\r\n    url: `product/${id}`,\r\n  });\r\n  const detailProductRequest = useApi({\r\n    method: \"get\",\r\n    url: `product/${id}`,\r\n  });\r\n  const getProductCategoryRequest = useApi({\r\n    method: \"get\",\r\n    url: `product/category`,\r\n  });\r\n\r\n  const onSubmitAmount = (data) => {\r\n    if (data.isUpdate) {\r\n      const index = amounts.findIndex((item) => item.id === data.id);\r\n      const amountTmp = [...amounts];\r\n      amountTmp[index] = data;\r\n      setAmounts(amountTmp);\r\n    } else {\r\n      setAmounts([...amounts, data]);\r\n    }\r\n    onDismissAmount();\r\n  };\r\n\r\n  const onDismissAmount = () => {\r\n    DialogActions.hide({ name: \"amount\" });\r\n  };\r\n\r\n  const onShowDialog = (data) => {\r\n    let units;\r\n    const allUnits = unitAction\r\n      .getProductUnit()\r\n      .filter((item) => item.value === selectedUnit)[0];\r\n    if (allUnits) {\r\n      units = allUnits.children;\r\n    }\r\n    DialogActions.show({\r\n      title: \"موجودی اول دوره\",\r\n      component: (\r\n        <Amount\r\n          onSubmit={onSubmitAmount}\r\n          onDismiss={onDismissAmount}\r\n          defaultValues={data}\r\n          units={units}\r\n        />\r\n      ),\r\n      name: \"amount\",\r\n      size: \"4\",\r\n      confirm: false,\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  const onAddAmount = () => {\r\n    onShowDialog();\r\n  };\r\n\r\n  const filterAmounts = (amounts) => {\r\n    const filteredAmount = [];\r\n    amounts.map((item) => {\r\n      const newObject = {\r\n        stock: item.stock,\r\n        depotId: item.depot.value,\r\n        unit: item.unit.value,\r\n        perunit: item.perUnit,\r\n      };\r\n      filteredAmount.push(newObject);\r\n    });\r\n    return filteredAmount;\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    const result = {\r\n      ...data,\r\n      categories: selectedCategory,\r\n      unitBase: selectedUnit,\r\n      stocks: id ? amounts : filterAmounts(amounts),\r\n    };\r\n    if (id) {\r\n      return await editProductRequest.execute(result);\r\n    }\r\n    await addProductRequest.execute(result);\r\n    setTimeout(() => {\r\n      onReject();\r\n    }, 1000);\r\n  };\r\n\r\n  const onReject = () => {\r\n    history.push(\"/app/product-list\");\r\n  };\r\n\r\n  const getDetail = async () => {\r\n    const detail = await detailProductRequest.execute();\r\n    setDetail(detail.data);\r\n    setSelectedCategory(detail.data.categories);\r\n    setSelectedUnit(detail.data.unitBase);\r\n    setAmounts(detail.data.stocks);\r\n  };\r\n\r\n  const handleEditAmount = (data) => {\r\n    onShowDialog(data);\r\n  };\r\n\r\n  const handleDeleteAmount = (id) => {\r\n    DialogActions.show({\r\n      confirm: true,\r\n      title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n      onAction: () => {\r\n        setAmounts(amounts.filter((item) => item.id !== id));\r\n        DialogActions.hide({ name: \"delete\" });\r\n      },\r\n      name: \"delete\",\r\n      size: \"6\",\r\n      disableCloseButton: false,\r\n    });\r\n  };\r\n\r\n  const getProductCategory = async () => {\r\n    const result = await getProductCategoryRequest.execute();\r\n    setCategory(result.data);\r\n  };\r\n\r\n  const onChangeUnit = (e) => {\r\n    setSelectedUnit(e.target.value);\r\n  };\r\n\r\n  const onChangeCategory = (e) => {\r\n    setSelectedCategory(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProductCategory();\r\n    if (id) {\r\n      getDetail();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(detail);\r\n  }, [reset, detail]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      {!detailProductRequest.pending ? (\r\n        <Grid item lg={6} sm={12} className={classes.root}>\r\n          <Paper className={classes.paper}>\r\n            <Typography\r\n              className={classes.title}\r\n              variant=\"h6\"\r\n              id=\"tableTitle\"\r\n              component=\"div\"\r\n            >\r\n              {id ? \"ویرایش کالا\" : \"افزودن کالا\"}\r\n            </Typography>\r\n\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Fragment>\r\n                <Grid item lg={6} xs={12} className={classes.datePicker}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"نام \"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.name}\r\n                          helperText={errors.name ? errors.name.message : \"\"}\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                    name=\"name\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <TextField\r\n                    disabled={id}\r\n                    select\r\n                    label=\"واحد شمارش\"\r\n                    value={selectedUnit}\r\n                    onChange={onChangeUnit}\r\n                    variant=\"outlined\"\r\n                    name=\"unitBase\"\r\n                    fullWidth\r\n                    size=\"small\"\r\n                  >\r\n                    {units.map((option) => (\r\n                      <MenuItem key={option.value} value={option.value}>\r\n                        {option.label}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </TextField>\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <FormControl\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                    className={classes.formControl}\r\n                  >\r\n                    <InputLabel htmlFor=\"outlined-age-native-simple\">\r\n                      دسته بندی\r\n                    </InputLabel>\r\n                    <Select\r\n                      label=\"  دسته بندی\"\r\n                      value={selectedCategory}\r\n                      onChange={onChangeCategory}\r\n                    >\r\n                      {category.map((option) => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Button\r\n                    disabled={isEmpty(selectedUnit)}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={onAddAmount}\r\n                  >\r\n                    افزودن موجودی اول دوره\r\n                  </Button>\r\n                </Grid>\r\n                {!!amounts.length && (\r\n                  <Grid item xs={12}>\r\n                    <Paper>\r\n                      <TableContainer style={{ padding: \"0 10px\" }}>\r\n                        <Table\r\n                          className={classes.table}\r\n                          size={\"medium\"}\r\n                          style={{ paddingRight: 10 }}\r\n                        >\r\n                          <TableHeader headCells={headCells} />\r\n\r\n                          <TableBody>\r\n                            {amounts.map((row) => {\r\n                              return (\r\n                                <TableRow\r\n                                  hover\r\n                                  tabIndex={-1}\r\n                                  key={row.id}\r\n                                  style={{ paddingRight: 10 }}\r\n                                >\r\n                                  <TableCell padding=\"none\">\r\n                                    {row.perUnit\r\n                                      ? `${persianNumber(\r\n                                          row.stock,\r\n                                        )}*${persianNumber(row.perUnit)}`\r\n                                      : persianNumber(row.stock)}\r\n                                  </TableCell>\r\n\r\n                                  <TableCell padding=\"none\">\r\n                                    {row.unit.label}\r\n                                  </TableCell>\r\n\r\n                                  <TableCell padding=\"none\">\r\n                                    {row.depot.label}\r\n                                  </TableCell>\r\n                                  <TableCell\r\n                                    padding=\"none\"\r\n                                    style={{ textAlign: \"left\" }}\r\n                                  >\r\n                                    <IconButton\r\n                                      onClick={() => handleEditAmount(row)}\r\n                                    >\r\n                                      <EditIcon />\r\n                                    </IconButton>\r\n\r\n                                    <IconButton\r\n                                      onClick={() => handleDeleteAmount(row.id)}\r\n                                    >\r\n                                      <DeleteIcon />\r\n                                    </IconButton>\r\n                                  </TableCell>\r\n                                </TableRow>\r\n                              );\r\n                            })}\r\n                          </TableBody>\r\n                        </Table>\r\n                      </TableContainer>\r\n                    </Paper>\r\n                  </Grid>\r\n                )}\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                    تایید\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={onReject}\r\n                  >\r\n                    بازگشت\r\n                  </Button>\r\n                </Grid>\r\n              </Fragment>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      ) : (\r\n        <CircularProgress />\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n}));\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  Grid,\r\n  CircularProgress,\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { persianNumber } from \"../../helpers/utils\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    label: \"نام کالا\",\r\n  },\r\n  { id: \"amounts\", label: \"موجودی ها\" },\r\n];\r\n\r\nexport default function MainDetail({ depotId, onSubmit }) {\r\n  const [data, setData] = useState([]);\r\n  const getAmountRequest = useApi({\r\n    method: \"get\",\r\n    url: `product/depot/${depotId}`,\r\n  });\r\n\r\n  const getAmount = async () => {\r\n    const result = await getAmountRequest.execute();\r\n    setData(result.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAmount();\r\n  }, []);\r\n\r\n  return getAmountRequest.pending ? (\r\n    <CircularProgress style={{ position: \"absolute\", top: 20, left: 20 }} />\r\n  ) : (\r\n    <Grid container spacing={3} alignItems=\"center\">\r\n      {!!data.length && (\r\n        <Grid item xs={12}>\r\n          <TableContainer style={{ padding: \"0 10px\" }}>\r\n            <Table size={\"medium\"} style={{ paddingRight: 10 }}>\r\n              <TableHeader headCells={headCells} />\r\n\r\n              <TableBody>\r\n                {data.map((row) => {\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      tabIndex={-1}\r\n                      key={row.id}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableCell padding=\"none\">{row.name}</TableCell>\r\n                      <TableCell padding=\"none\">\r\n                        <ul>\r\n                          {row.stocks.map((item) => {\r\n                            return (\r\n                              <li>\r\n                                <span style={{ margin: \"0 -5px 0 5px\" }}>\r\n                                  {persianNumber(item.stock)}\r\n                                </span>\r\n\r\n                                <span>{item.unit}</span>\r\n                              </li>\r\n                            );\r\n                          })}\r\n                        </ul>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Grid>\r\n      )}\r\n      <Grid item xs={12}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n          بازگشت\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { convertParamsToQueryString, hasPermission } from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\nimport AmountBrif from \"./amountBrif\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    label: \"نام انبار\",\r\n  },\r\n  {\r\n    id: \"category\",\r\n    label: \"دسته بندی انبار\",\r\n  },\r\n  { id: \"phone\", label: \"تلفن\" },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nconst MainList = () => {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"name\");\r\n  const [page, setPage] = useState(0);\r\n  const [search, setSearch] = useState();\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const history = useHistory();\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(event.target.value);\r\n    setPage(0);\r\n  };\r\n  const onAdd = () => {\r\n    history.push(\"/app/depot-detail\");\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const getDepotRequest = useApi({\r\n    method: \"get\",\r\n    url: `depot?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n    })}`,\r\n  });\r\n\r\n  const deleteUseRequest = useApi({\r\n    method: \"delete\",\r\n    url: `depot`,\r\n  });\r\n\r\n  const handleAction = (row, type) => {\r\n    const types = {\r\n      amount: () => {\r\n        DialogActions.show({\r\n          title: \"موجودی در انبار ها\",\r\n          component: (\r\n            <AmountBrif\r\n              onSubmit={() => {\r\n                DialogActions.hide({ name: \"amount\" });\r\n              }}\r\n              depotId={row.id}\r\n            />\r\n          ),\r\n          name: \"amount\",\r\n          size: \"4\",\r\n          confirm: false,\r\n          disableCloseButton: true,\r\n        });\r\n      },\r\n\r\n      edit: () => {\r\n        history.push(`/app/depot-detail?id=${row.id}`);\r\n      },\r\n      delete: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            await deleteUseRequest.execute(null, row.id);\r\n            setList(list.filter((item) => item.id !== row.id));\r\n            DialogActions.hide({ name: \"delete\" });\r\n          },\r\n          name: \"delete\",\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const onClicKRow = (e, row) => {\r\n    if (e.target.tagName === \"TD\") {\r\n      handleAction(row, \"edit\");\r\n    }\r\n  };\r\n\r\n  const getData = async () => {\r\n    const depotList = await getDepotRequest.execute();\r\n    setList(depotList.data);\r\n    setTotal(depotList.total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, pageSize, search]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.DEPOT_SHOW) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getDepotRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title=\"لیست انبار ها\"\r\n                    onAdd={\r\n                      hasPermission(Constant.ALL_PERMISSIONS.DEPOT_EDIT) &&\r\n                      onAdd\r\n                    }\r\n                    // handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                  />\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                              onClick={(e) => onClicKRow(e, row)}\r\n                            >\r\n                              <TableCell padding=\"none\">{row.name}</TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.depotCategory}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">{row.phone}</TableCell>\r\n\r\n                              <TableCell padding=\"none\">\r\n                                <TableRowMenu\r\n                                  options={[\r\n                                    { id: \"amount\", title: \"موجودی\" },\r\n                                    {\r\n                                      id: \"edit\",\r\n                                      title: \"ویرایش\",\r\n                                      hidden: !hasPermission(\r\n                                        Constant.ALL_PERMISSIONS.DEPOT_EDIT,\r\n                                      ),\r\n                                    },\r\n                                    {\r\n                                      id: \"delete\",\r\n                                      title: \"حذف\",\r\n                                      hidden: !hasPermission(\r\n                                        Constant.ALL_PERMISSIONS.DEPOT_DELETE,\r\n                                      ),\r\n                                    },\r\n                                  ]}\r\n                                  hadleAction={(type) =>\r\n                                    handleAction(row, type)\r\n                                  }\r\n                                />\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getDepotRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default MainList;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { getQueryString } from \"../../helpers/utils\";\r\nimport CircularProgress from \"../../components/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n}));\r\n\r\nexport default function MainDetail() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const id = getQueryString(\"id\");\r\n  const [detail, setDetail] = useState({});\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n  const [category, setCategory] = useState([]);\r\n  const [depotCategory, setDepotCategory] = useState(1);\r\n\r\n  const addDepotRequest = useApi({\r\n    method: \"post\",\r\n    url: `depot`,\r\n  });\r\n  const editDepotRequest = useApi({\r\n    method: \"put\",\r\n    url: `depot/${id}`,\r\n  });\r\n  const detailDepotRequest = useApi({\r\n    method: \"get\",\r\n    url: `depot/${id}`,\r\n  });\r\n  const depotCategoryRequest = useApi({\r\n    method: \"get\",\r\n    url: `depot/category`,\r\n  });\r\n\r\n  const onSubmit = async (data) => {\r\n    const value = { ...data, depotCategoryId: depotCategory };\r\n\r\n    if (id) {\r\n      return await editDepotRequest.execute(value);\r\n    }\r\n    await addDepotRequest.execute(value);\r\n    setTimeout(() => {\r\n      onReject();\r\n    }, 1000);\r\n  };\r\n\r\n  const onReject = () => {\r\n    history.push(\"/app/depot-list\");\r\n  };\r\n\r\n  const getDetail = async () => {\r\n    const detail = await detailDepotRequest.execute();\r\n    setDetail(detail.data);\r\n    setDepotCategory(detail.data.depotCategory);\r\n  };\r\n\r\n  const getDepotCategory = async () => {\r\n    const detail = await depotCategoryRequest.execute();\r\n    setCategory(detail.data);\r\n  };\r\n\r\n  const onChangeCategory = (e) => {\r\n    setDepotCategory(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDepotCategory();\r\n    if (id) {\r\n      getDetail();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(detail);\r\n  }, [reset, detail]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      {!detailDepotRequest.pending ? (\r\n        <Grid item lg={6} sm={12} className={classes.root}>\r\n          <Paper className={classes.paper}>\r\n            <Typography\r\n              className={classes.title}\r\n              variant=\"h6\"\r\n              id=\"tableTitle\"\r\n              component=\"div\"\r\n            >\r\n              {id ? \"ویرایش انبار\" : \"افزودن انبار\"}\r\n            </Typography>\r\n\r\n            <Grid container spacing={3}>\r\n              <Fragment>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"نام\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.name}\r\n                          helperText={errors.name ? errors.name.message : \"\"}\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                    name=\"name\"\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item lg={6} xs={12}>\r\n                  {!!category.length && depotCategory && (\r\n                    <TextField\r\n                      select\r\n                      label=\"دسته بندی\"\r\n                      value={depotCategory}\r\n                      onChange={onChangeCategory}\r\n                      variant=\"outlined\"\r\n                      error={!!errors.depotCategory}\r\n                      helperText={\r\n                        errors.depotCategory ? errors.depotCategory.message : \"\"\r\n                      }\r\n                      fullWidth\r\n                      size=\"small\"\r\n                    >\r\n                      {category.map((option) => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </TextField>\r\n                  )}\r\n                </Grid>\r\n\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"تلفن\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.phone}\r\n                          helperText={errors.phone ? errors.phone.message : \"\"}\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    name=\"phone\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"آدرس\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.address}\r\n                          helperText={\r\n                            errors.address ? errors.address.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    name=\"address\"\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                    تایید\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={onReject}\r\n                  >\r\n                    بازگشت\r\n                  </Button>\r\n                </Grid>\r\n              </Fragment>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      ) : (\r\n        <CircularProgress />\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n}));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Grid, TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\n\r\nexport default function MainDetail({ source, onSubmit, onDismiss }) {\r\n  const [cashes, setCashes] = useState([]);\r\n  const [selectedDestination, setSelectedDestination] = useState(5);\r\n  const [amount, setAmount] = useState();\r\n\r\n  const getCashRequest = useApi({\r\n    method: \"get\",\r\n    url: `cashdesk/picker`,\r\n  });\r\n\r\n  const onDone = () => {\r\n    onSubmit({\r\n      sourceId: source,\r\n      destinationId: selectedDestination,\r\n      amount,\r\n    });\r\n  };\r\n\r\n  const onChange = (e, type) => {\r\n    if (type === \"destination\") {\r\n      setSelectedDestination(e.target.value);\r\n    } else {\r\n      setAmount(e.target.value);\r\n    }\r\n  };\r\n\r\n  const getCashes = async () => {\r\n    const result = await getCashRequest.execute();\r\n    const filterdCashes = result.data.filter((item) => item.value !== source);\r\n    setCashes(filterdCashes);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCashes();\r\n  }, []);\r\n\r\n  return (\r\n    <form>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            select\r\n            label=\"صندوق مقصد\"\r\n            onChange={(e) => onChange(e, \"destination\")}\r\n            value={selectedDestination}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            size=\"small\"\r\n            name=\"cash\"\r\n          >\r\n            {cashes.map((option) => (\r\n              <MenuItem key={option.value} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            type=\"number\"\r\n            variant=\"outlined\"\r\n            label=\"مبلغ\"\r\n            name={\"amount\"}\r\n            onChange={(e) => onChange(e, \"amount\")}\r\n            value={amount}\r\n            fullWidth\r\n            size=\"small\"\r\n          />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n        >\r\n          <Button variant=\"contained\" color=\"primary\" onClick={onDone}>\r\n            تایید\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n            بازگشت\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport {\r\n  convertParamsToQueryString,\r\n  hasPermission,\r\n  persianNumber,\r\n} from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport Transfer from \"./transfer\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    label: \"نام صندوق\",\r\n  },\r\n  {\r\n    id: \"type\",\r\n    label: \"نوع\",\r\n  },\r\n  {\r\n    id: \"logo\",\r\n    label: \"بانک\",\r\n  },\r\n  { id: \"amount\", label: \"موجودی\" },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nconst MainList = () => {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"name\");\r\n  const [search, setSearch] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const history = useHistory();\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onAdd = () => {\r\n    history.push(\"/app/cash-detail\");\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const getCashRequest = useApi({\r\n    method: \"get\",\r\n    url: `cashdesk?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n    })}`,\r\n  });\r\n\r\n  const deleteCashRequest = useApi({\r\n    method: \"delete\",\r\n    url: `cashdesk`,\r\n  });\r\n\r\n  const transferCashDesk = useApi({\r\n    method: \"post\",\r\n    url: \"cashdesk/transfer\",\r\n  });\r\n\r\n  const onDismissTransfer = () => {\r\n    DialogActions.hide({ name: \"transfer\" });\r\n  };\r\n\r\n  const onSubmitTransfer = async (data) => {\r\n    await transferCashDesk.execute(data);\r\n    getData();\r\n    onDismissTransfer();\r\n  };\r\n\r\n  const handleAction = (row, type) => {\r\n    const types = {\r\n      transaction: () => {\r\n        history.push(`/app/cash-transaction?cashId=${row.id}`);\r\n      },\r\n      edit: () => {\r\n        history.push(`/app/cash-detail?id=${row.id}`);\r\n      },\r\n      delete: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            await deleteCashRequest.execute(null, row.id);\r\n            setList(list.filter((item) => item.id !== row.id));\r\n            DialogActions.hide({ name: \"delete\" });\r\n          },\r\n          name: \"delete\",\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n      transfer: () => {\r\n        DialogActions.show({\r\n          title: \"انتقال بین صندوق ها\",\r\n          component: (\r\n            <Transfer\r\n              onSubmit={onSubmitTransfer}\r\n              onDismiss={onDismissTransfer}\r\n              source={row.id}\r\n            />\r\n          ),\r\n          name: \"transfer\",\r\n          size: \"4\",\r\n          confirm: false,\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const onClicKRow = (e, row) => {\r\n    if (e.target.tagName === \"TD\") {\r\n      handleAction(row, \"edit\");\r\n    }\r\n  };\r\n\r\n  const getData = async () => {\r\n    const cashList = await getCashRequest.execute();\r\n    setList(cashList.data);\r\n    setTotal(cashList.total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.CASH_DESK_LIST) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getCashRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title=\"لیست صندوق ها\"\r\n                    onAdd={\r\n                      hasPermission(Constant.ALL_PERMISSIONS.CASH_DESK_EDIT) &&\r\n                      onAdd\r\n                    }\r\n                    // handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                  />\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                              onClick={(e) => onClicKRow(e, row)}\r\n                            >\r\n                              <TableCell padding=\"none\">{row.name}</TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.type === \"CASH\" ? \"نقدی\" : \"بانکی\"}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.bank && (\r\n                                  <img\r\n                                    style={{ width: 40, height: 40 }}\r\n                                    alt={row.bank.name}\r\n                                    src={`${Constant.API_ADDRESS}/${row.bank.logo}`}\r\n                                  />\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  Number(row.amount).toLocaleString(),\r\n                                )}\r\n                              </TableCell>\r\n\r\n                              <TableCell padding=\"none\">\r\n                                <TableRowMenu\r\n                                  options={[\r\n                                    { id: \"transaction\", title: \"تراکنش\" },\r\n                                    { id: \"transfer\", title: \"انتقال\" },\r\n                                    {\r\n                                      id: \"edit\",\r\n                                      title: \"ویرایش\",\r\n                                      hidden: !hasPermission(\r\n                                        Constant.ALL_PERMISSIONS.CASH_DESK_EDIT,\r\n                                      ),\r\n                                    },\r\n                                    {\r\n                                      id: \"delete\",\r\n                                      title: \"حذف\",\r\n                                      hidden: !hasPermission(\r\n                                        Constant.ALL_PERMISSIONS\r\n                                          .CASH_DESK_DELETE,\r\n                                      ),\r\n                                    },\r\n                                  ]}\r\n                                  hadleAction={(type) =>\r\n                                    handleAction(row, type)\r\n                                  }\r\n                                />\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getCashRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainList;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  RadioGroup,\r\n  Radio,\r\n  FormControlLabel,\r\n} from \"@material-ui/core\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { getQueryString } from \"../../helpers/utils\";\r\nimport CircularProgress from \"../../components/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: 7,\r\n  },\r\n}));\r\n\r\nexport default function MainDetail({ defaultValues }) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const id = getQueryString(\"id\");\r\n  const [detail, setDetail] = useState({});\r\n  const [banks, setBanks] = useState([]);\r\n  const [selectedType, setSelectedType] = React.useState(\"CASH\");\r\n  const [selectedBank, setSelectedBank] = useState(\r\n    defaultValues?.bank.value || 1,\r\n  );\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n\r\n  const addCashRequest = useApi({\r\n    method: \"post\",\r\n    url: `cashdesk`,\r\n  });\r\n  const editCashRequest = useApi({\r\n    method: \"put\",\r\n    url: `cashdesk/${id}`,\r\n  });\r\n  const detailCashRequest = useApi({\r\n    method: \"get\",\r\n    url: `cashdesk/${id}`,\r\n  });\r\n  const getBankRequest = useApi({\r\n    method: \"get\",\r\n    url: `bank`,\r\n  });\r\n\r\n  const handleChangeType = (event) => {\r\n    setSelectedType(event.target.value);\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    if (id) {\r\n      await editCashRequest.execute(data);\r\n    } else {\r\n      await addCashRequest.execute(data);\r\n    }\r\n    setTimeout(() => {\r\n      onReject();\r\n    }, 1000);\r\n  };\r\n\r\n  const onReject = () => {\r\n    history.push(\"/app/cash-list\");\r\n  };\r\n\r\n  const getDetail = async () => {\r\n    const detail = await detailCashRequest.execute();\r\n    setDetail(detail.data);\r\n    setSelectedBank(detail.data.bankId);\r\n    setSelectedType(detail.data.type);\r\n  };\r\n\r\n  const onChangeBank = (e) => {\r\n    setSelectedBank(e.target.value);\r\n  };\r\n\r\n  const getBanks = async () => {\r\n    const result = await getBankRequest.execute();\r\n    setBanks(result.data);\r\n  };\r\n\r\n  const onDone = (data) => {\r\n    const value = {\r\n      ...data,\r\n      type: selectedType,\r\n      isUpdate: !!defaultValues,\r\n    };\r\n    if (selectedType === \"BANK\") {\r\n      value.bankId = selectedBank;\r\n    }\r\n    onSubmit(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      getDetail();\r\n    }\r\n    getBanks();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(detail);\r\n  }, [reset, detail]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onDone)}>\r\n      {!detailCashRequest.pending ? (\r\n        <Grid item lg={6} sm={12} className={classes.root}>\r\n          <Paper className={classes.paper}>\r\n            <Typography\r\n              className={classes.title}\r\n              variant=\"h6\"\r\n              id=\"tableTitle\"\r\n              component=\"div\"\r\n            >\r\n              {id ? \"ویرایش صندوق\" : \"افزودن صندوق\"}\r\n            </Typography>\r\n\r\n            <Grid container spacing={3}>\r\n              <Fragment>\r\n                <Grid item lg={12} xs={12}>\r\n                  <RadioGroup\r\n                    aria-label=\"gender\"\r\n                    name=\"gender1\"\r\n                    value={selectedType}\r\n                    onChange={handleChangeType}\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-around\",\r\n                    }}\r\n                  >\r\n                    <FormControlLabel\r\n                      disabled={!!id}\r\n                      value=\"CASH\"\r\n                      control={<Radio />}\r\n                      label=\"نقدی\"\r\n                    />\r\n                    <FormControlLabel\r\n                      disabled={!!id}\r\n                      value=\"BANK\"\r\n                      control={<Radio />}\r\n                      label=\"بانکی\"\r\n                    />\r\n                  </RadioGroup>\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"نام\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.name}\r\n                          helperText={errors.name ? errors.name.message : \"\"}\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                    name=\"name\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          disabled={!!id}\r\n                          variant=\"outlined\"\r\n                          label=\"موجودی \"\r\n                          type=\"number\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.amount}\r\n                          helperText={\r\n                            errors.amount ? errors.amount.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                    name=\"amount\"\r\n                  />\r\n                </Grid>\r\n                {selectedType === \"BANK\" && (\r\n                  <>\r\n                    <Grid item lg={6} xs={12}>\r\n                      <TextField\r\n                        select\r\n                        label=\"بانک\"\r\n                        onChange={onChangeBank}\r\n                        value={selectedBank}\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        name=\"bank\"\r\n                        SelectProps={{\r\n                          classes: {\r\n                            select: classes.rootSelect,\r\n                          },\r\n                        }}\r\n                      >\r\n                        {banks.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            <img\r\n                              src={`${Constant.API_ADDRESS}/${option.logo}`}\r\n                              alt={option.label}\r\n                              style={{\r\n                                width: 25,\r\n                                height: 25,\r\n                                borderRadius: \"50%\",\r\n                                marginLeft: 10,\r\n                              }}\r\n                            />\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </TextField>\r\n                    </Grid>\r\n                    <Grid item lg={6} xs={12}>\r\n                      <Controller\r\n                        control={control}\r\n                        render={({ onChange, value, name }) => {\r\n                          return (\r\n                            <TextField\r\n                              fullWidth\r\n                              value={value}\r\n                              size=\"small\"\r\n                              name={name}\r\n                              label=\"شماره کارت\"\r\n                              variant=\"outlined\"\r\n                              onChange={onChange}\r\n                              error={!!errors.accountCardNumber}\r\n                              helperText={\r\n                                errors.accountCardNumber\r\n                                  ? errors.accountCardNumber.message\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          );\r\n                        }}\r\n                        rules={{\r\n                          minLength: {\r\n                            value: 16,\r\n                            message: Constant.VALIDATION.CARD_NUMBER,\r\n                          },\r\n                          maxLength: {\r\n                            value: 16,\r\n                            message: Constant.VALIDATION.CARD_NUMBER,\r\n                          },\r\n                        }}\r\n                        name=\"accountCardNumber\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item lg={6} xs={12}>\r\n                      <Controller\r\n                        control={control}\r\n                        render={({ onChange, value, name }) => {\r\n                          return (\r\n                            <TextField\r\n                              fullWidth\r\n                              value={value}\r\n                              size=\"small\"\r\n                              name={name}\r\n                              label=\"شماره حساب\"\r\n                              variant=\"outlined\"\r\n                              onChange={onChange}\r\n                              error={!!errors.accountNumber}\r\n                              helperText={\r\n                                errors.accountNumber\r\n                                  ? errors.accountNumber.message\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          );\r\n                        }}\r\n                        name=\"accountNumber\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item lg={6} xs={12}>\r\n                      <Controller\r\n                        control={control}\r\n                        render={({ onChange, value, name }) => {\r\n                          return (\r\n                            <TextField\r\n                              fullWidth\r\n                              value={value}\r\n                              size=\"small\"\r\n                              name={name}\r\n                              label=\"شماره شبا\"\r\n                              variant=\"outlined\"\r\n                              onChange={onChange}\r\n                              error={!!errors.accountShaba}\r\n                              helperText={\r\n                                errors.accountShaba\r\n                                  ? errors.accountShaba.message\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          );\r\n                        }}\r\n                        name=\"accountShaba\"\r\n                      />\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n                <Grid item xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          multiline\r\n                          variant=\"outlined\"\r\n                          label=\"توضیحات\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.description}\r\n                          helperText={\r\n                            errors.description ? errors.description.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    name=\"description\"\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                    تایید\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={onReject}\r\n                  >\r\n                    بازگشت\r\n                  </Button>\r\n                </Grid>\r\n              </Fragment>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      ) : (\r\n        <CircularProgress />\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  status: {\r\n    color: \"#fff\",\r\n  },\r\n\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Grid, TextField, MenuItem, Button, Divider } from \"@material-ui/core\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\n\r\nconst Filter = ({ onFilter }) => {\r\n  const [filterData, setFilterData] = useState(\"\");\r\n  const [category, setCategory] = useState([]);\r\n  const [driverCategory, setDriverCategory] = useState(1);\r\n\r\n  const driverCategoryRequest = useApi({\r\n    method: \"get\",\r\n    url: `driver/category`,\r\n  });\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setFilterData(event.target.value);\r\n  };\r\n\r\n  const getDriverCategory = async () => {\r\n    const detail = await driverCategoryRequest.execute();\r\n    setCategory(detail.data);\r\n  };\r\n\r\n  const onChangeCategory = (e) => {\r\n    setDriverCategory(e.target.value);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (typeof onFilter === \"function\") {\r\n      onFilter(`{name:${filterData},category:${driverCategory}}`);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDriverCategory();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container spacing={3} alignItems=\"center\" style={{ padding: 10 }}>\r\n      <Grid item lg={3} xs={12}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          label=\"نام\"\r\n          onChange={handleChange(\"name\")}\r\n          value={filterData}\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n      </Grid>\r\n      <Grid item lg={3} xs={12}>\r\n        {!!category.length && driverCategory && (\r\n          <TextField\r\n            select\r\n            label=\"دسته بندی\"\r\n            value={driverCategory}\r\n            onChange={onChangeCategory}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            size=\"small\"\r\n          >\r\n            {category.map((option) => (\r\n              <MenuItem key={option.value} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n            <MenuItem key={\"ALL\"} value={\"ALL\"}>\r\n              همه دسته بندی ها\r\n            </MenuItem>\r\n          </TextField>\r\n        )}\r\n      </Grid>\r\n\r\n      <Grid item lg={3} xs={12}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n          تایید\r\n        </Button>\r\n      </Grid>\r\n      <Divider style={{ width: \"100%\" }} />\r\n    </Grid>\r\n  );\r\n};\r\nexport default Filter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport {\r\n  convertParamsToQueryString,\r\n  hasPermission,\r\n  persianNumber,\r\n} from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport FilterComponent from \"./filter\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"firstName\",\r\n    label: \"نام\",\r\n  },\r\n  { id: \"lastName\", label: \"نام خانوادگی\" },\r\n  {\r\n    id: \"firstName\",\r\n    label: \"نام\",\r\n  },\r\n  {\r\n    id: \"mobile\",\r\n    label: \"موبایل\",\r\n  },\r\n  { id: \"car\", label: \"خودرو\" },\r\n  { id: \"pelak\", label: \"پلاک\" },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function MainList() {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [search, setSearch] = useState();\r\n  const [filter, setFilter] = useState();\r\n  const [orderBy, setOrderBy] = useState(\"firstName\");\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const history = useHistory();\r\n  const [total, setTotal] = useState(0);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onAdd = () => {\r\n    history.push(\"/app/driver-detail\");\r\n  };\r\n\r\n  const getDriverRequest = useApi({\r\n    method: \"get\",\r\n    url: decodeURIComponent(\r\n      `driver?${convertParamsToQueryString({\r\n        page,\r\n        order,\r\n        orderBy,\r\n        pageSize,\r\n        search,\r\n        filter,\r\n      })}`,\r\n    ),\r\n  });\r\n\r\n  const deleteUseRequest = useApi({\r\n    method: \"delete\",\r\n    url: `driver`,\r\n  });\r\n\r\n  const handleAction = (id, type) => {\r\n    const types = {\r\n      edit: () => {\r\n        history.push(`/app/driver-detail?id=${id}`);\r\n      },\r\n      delete: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            await deleteUseRequest.execute(null, id);\r\n            setList(list.filter((item) => item.id !== id));\r\n            DialogActions.hide({ name: \"delete\" });\r\n          },\r\n          name: \"delete\",\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n      transaction: () => {\r\n        history.push(`/app/person-transaction?id=${id}&type=employee`);\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const onClicKRow = (e, row) => {\r\n    if (e.target.tagName === \"TD\") {\r\n      handleAction(row.id, \"edit\");\r\n    }\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onFilter = (data) => {\r\n    setFilter(data);\r\n    setPage(0);\r\n  };\r\n\r\n  const getData = async () => {\r\n    const driverList = await getDriverRequest.execute();\r\n    setList(driverList.data);\r\n    setTotal(driverList.total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize, filter]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.DRIVER_SHOW) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getDriverRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title=\"لیست رانندگان\"\r\n                    onAdd={\r\n                      hasPermission(Constant.ALL_PERMISSIONS.DRIVER_EDIT) &&\r\n                      onAdd\r\n                    }\r\n                    FilterComponent={<FilterComponent onFilter={onFilter} />}\r\n                    // handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                  />\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                              onClick={(e) => onClicKRow(e, row)}\r\n                            >\r\n                              <TableCell padding=\"none\">\r\n                                {row.firstName}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.lastName}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.category.name}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(Number(row.mobile))}\r\n                              </TableCell>\r\n\r\n                              <TableCell padding=\"none\">\r\n                                {row.carName}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.carPlaque}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                <TableRowMenu\r\n                                  options={[\r\n                                    { id: \"transaction\", title: \"تراکنش ها\" },\r\n                                    {\r\n                                      id: \"edit\",\r\n                                      title: \"ویرایش\",\r\n                                      hidden: !hasPermission(\r\n                                        Constant.ALL_PERMISSIONS.DRIVER_EDIT,\r\n                                      ),\r\n                                    },\r\n                                    {\r\n                                      id: \"delete\",\r\n                                      title: \"حذف\",\r\n                                      hidden: !hasPermission(\r\n                                        Constant.ALL_PERMISSIONS.DRIVER_DELETE,\r\n                                      ),\r\n                                    },\r\n                                  ]}\r\n                                  hadleAction={(type) =>\r\n                                    handleAction(row.id, type)\r\n                                  }\r\n                                />\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getDriverRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Grid, MenuItem } from \"@material-ui/core\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport styles from \"./style\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nconst Account = ({ onSubmit, onDismiss, defaultValues }) => {\r\n  const [banks, setBanks] = useState([]);\r\n  const [selectedBank, setSelectedBank] = useState(\r\n    defaultValues?.bank.value || 1,\r\n  );\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n  const classes = styles();\r\n\r\n  const getBankRequest = useApi({\r\n    method: \"get\",\r\n    url: `bank`,\r\n  });\r\n\r\n  const getBanks = async () => {\r\n    const result = await getBankRequest.execute();\r\n    setBanks(result.data);\r\n  };\r\n\r\n  const getSelectedBank = () => {\r\n    return banks.find((item) => item.value === selectedBank);\r\n  };\r\n\r\n  const onDone = (data) => {\r\n    const newId = uuid();\r\n    const value = {\r\n      ...data,\r\n      bank: getSelectedBank(),\r\n      id: defaultValues ? defaultValues.id : newId,\r\n      isUpdate: !!defaultValues,\r\n    };\r\n    onSubmit(value);\r\n  };\r\n\r\n  const onChangeBank = (e) => {\r\n    setSelectedBank(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBanks();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(defaultValues);\r\n  }, [reset, defaultValues]);\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          select\r\n          label=\"بانک\"\r\n          onChange={onChangeBank}\r\n          value={selectedBank}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n          name=\"bank\"\r\n          SelectProps={{\r\n            classes: {\r\n              select: classes.rootSelect,\r\n            },\r\n          }}\r\n        >\r\n          {banks.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              <img\r\n                src={`${Constant.API_ADDRESS}/${option.logo}`}\r\n                alt={option.label}\r\n                style={{\r\n                  width: 25,\r\n                  height: 25,\r\n                  borderRadius: \"50%\",\r\n                  marginLeft: 10,\r\n                }}\r\n              />\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                fullWidth\r\n                value={value}\r\n                size=\"small\"\r\n                name={name}\r\n                label=\"شماره کارت\"\r\n                variant=\"outlined\"\r\n                onChange={onChange}\r\n                error={!!errors.accountCardNumber}\r\n                helperText={\r\n                  errors.accountCardNumber\r\n                    ? errors.accountCardNumber.message\r\n                    : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          rules={{\r\n            minLength: {\r\n              value: 16,\r\n              message: Constant.VALIDATION.CARD_NUMBER,\r\n            },\r\n            maxLength: {\r\n              value: 16,\r\n              message: Constant.VALIDATION.CARD_NUMBER,\r\n            },\r\n          }}\r\n          name=\"accountCardNumber\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                fullWidth\r\n                value={value}\r\n                size=\"small\"\r\n                name={name}\r\n                label=\"شماره حساب\"\r\n                variant=\"outlined\"\r\n                onChange={onChange}\r\n                error={!!errors.accountNumber}\r\n                helperText={\r\n                  errors.accountNumber ? errors.accountNumber.message : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          name=\"accountNumber\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                fullWidth\r\n                value={value}\r\n                size=\"small\"\r\n                name={name}\r\n                label=\"شماره شبا\"\r\n                variant=\"outlined\"\r\n                onChange={onChange}\r\n                error={!!errors.accountShaba}\r\n                helperText={\r\n                  errors.accountShaba ? errors.accountShaba.message : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          name=\"accountShaba\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                label=\"توضیحات\"\r\n                multiline\r\n                rows={4}\r\n                variant=\"outlined\"\r\n                name={name}\r\n                onChange={onChange}\r\n                value={value}\r\n                fullWidth\r\n                error={!!errors.description}\r\n                helperText={\r\n                  errors.description ? errors.description.message : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          name=\"description\"\r\n        />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          onClick={handleSubmit(onDone)}\r\n        >\r\n          تایید\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onDismiss}>\r\n          انصراف\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  IconButton,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport { DeleteIcon, EditIcon } from \"../../components/icons\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { getQueryString } from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport Account from \"./account\";\r\nimport CircularProgress from \"../../components/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n}));\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"Name\",\r\n    label: \"نام بانک\",\r\n  },\r\n  { id: \"accountNumber\", label: \"شماره حساب \" },\r\n  {\r\n    id: \"CardNumber\",\r\n    label: \"شماره کارت\",\r\n  },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function MainDetail() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const id = getQueryString(\"id\");\r\n  const [detail, setDetail] = useState({});\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [category, setCategory] = useState([]);\r\n  const [driverCategory, setDriverCategory] = useState(1);\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n\r\n  const addDriverRequest = useApi({\r\n    method: \"post\",\r\n    url: `driver`,\r\n  });\r\n  const editDriverRequest = useApi({\r\n    method: \"put\",\r\n    url: `driver/${id}`,\r\n  });\r\n  const detailDriverRequest = useApi({\r\n    method: \"get\",\r\n    url: `driver/${id}`,\r\n  });\r\n\r\n  const driverCategoryRequest = useApi({\r\n    method: \"get\",\r\n    url: `driver/category`,\r\n  });\r\n\r\n  const deleteAccountRequest = useApi({\r\n    method: \"delete\",\r\n    url: `account`,\r\n  });\r\n\r\n  const onSubmit = async (data) => {\r\n    const newAccounts = [];\r\n    accounts.map((item) => {\r\n      const newData = {\r\n        bankId: item.bank.value || item.bank.id,\r\n        accountCardNumber: item.accountCardNumber,\r\n        accountNumber: item.accountNumber,\r\n        accountShaba: item.accountShaba,\r\n        description: item.description,\r\n        id: item.id.toString().includes(\"-\") ? null : item.id,\r\n      };\r\n      newAccounts.push(newData);\r\n    });\r\n\r\n    const allData = {\r\n      ...data,\r\n      accounts: newAccounts,\r\n      categoryId: driverCategory,\r\n    };\r\n    if (id) {\r\n      return await editDriverRequest.execute(allData);\r\n    }\r\n    await addDriverRequest.execute(allData);\r\n    setTimeout(() => {\r\n      onReject();\r\n    }, 1000);\r\n  };\r\n\r\n  const onReject = () => {\r\n    history.push(\"/app/driver-list\");\r\n  };\r\n\r\n  const getDetail = async () => {\r\n    const detail = await detailDriverRequest.execute();\r\n    setDetail(detail.data);\r\n    setDriverCategory(detail.data.driverCategory);\r\n    setAccounts(detail.data?.accounts || []);\r\n  };\r\n\r\n  const getDriverCategory = async () => {\r\n    const detail = await driverCategoryRequest.execute();\r\n    setCategory(detail.data);\r\n  };\r\n\r\n  const onSubmitAccount = (data) => {\r\n    if (data.isUpdate) {\r\n      const index = accounts.findIndex((item) => item.id === data.id);\r\n      const accounstTmp = [...accounts];\r\n      accounstTmp[index] = data;\r\n      setAccounts(accounstTmp);\r\n    } else {\r\n      setAccounts([...accounts, data]);\r\n    }\r\n    onDismissAccount();\r\n  };\r\n\r\n  const onDismissAccount = () => {\r\n    DialogActions.hide({ name: \"account\" });\r\n  };\r\n\r\n  const onShowDialog = (data) => {\r\n    DialogActions.show({\r\n      title: \" حساب بانکی\",\r\n      component: (\r\n        <Account\r\n          onSubmit={onSubmitAccount}\r\n          onDismiss={onDismissAccount}\r\n          defaultValues={data}\r\n        />\r\n      ),\r\n      name: \"account\",\r\n      size: \"4\",\r\n      confirm: false,\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  const onAddAccount = () => {\r\n    onShowDialog();\r\n  };\r\n\r\n  const handleEditAccount = (data) => {\r\n    onShowDialog(data);\r\n  };\r\n\r\n  const handleDeleteAccount = (row) => {\r\n    DialogActions.show({\r\n      confirm: true,\r\n      title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n      onAction: async () => {\r\n        if (id) {\r\n          await deleteAccountRequest.execute(null, row.id);\r\n        }\r\n        setAccounts(accounts.filter((item) => item.id !== row.id));\r\n        DialogActions.hide({ name: \"delete\" });\r\n      },\r\n      name: \"delete\",\r\n      size: \"6\",\r\n      disableCloseButton: false,\r\n    });\r\n  };\r\n\r\n  const onChangeCategory = (e) => {\r\n    setDriverCategory(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDriverCategory();\r\n    if (id) {\r\n      getDetail();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(detail);\r\n  }, [reset, detail]);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        {!detailDriverRequest.pending ? (\r\n          <Grid item lg={6} sm={12} className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n              <Typography\r\n                className={classes.title}\r\n                variant=\"h6\"\r\n                id=\"tableTitle\"\r\n                component=\"div\"\r\n              >\r\n                {id ? \"ویرایش راننده\" : \"افزودن راننده\"}\r\n              </Typography>\r\n\r\n              <Grid container spacing={3}>\r\n                <Fragment>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"نام\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.firstName}\r\n                            helperText={\r\n                              errors.firstName ? errors.firstName.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                      name=\"firstName\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"نام خانوادگی\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.lastName}\r\n                            helperText={\r\n                              errors.lastName ? errors.lastName.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                      name=\"lastName\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"تلفن\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.phone}\r\n                            helperText={\r\n                              errors.phone ? errors.phone.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"phone\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"موبایل\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.mobile}\r\n                            helperText={\r\n                              errors.mobile ? errors.mobile.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      rules={{\r\n                        minLength: {\r\n                          value: 11,\r\n                          message: Constant.VALIDATION.MOBILE_NUMBER,\r\n                        },\r\n                        maxLength: {\r\n                          value: 11,\r\n                          message: Constant.VALIDATION.MOBILE_NUMBER,\r\n                        },\r\n                      }}\r\n                      name=\"mobile\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            type=\"number\"\r\n                            variant=\"outlined\"\r\n                            label=\"مانده از قبل\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.accountRemaining}\r\n                            helperText={\r\n                              errors.accountRemaining\r\n                                ? errors.accountRemaining.message\r\n                                : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"accountRemaining\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    {!!category.length && driverCategory && (\r\n                      <TextField\r\n                        select\r\n                        label=\"دسته بندی\"\r\n                        value={driverCategory}\r\n                        onChange={onChangeCategory}\r\n                        variant=\"outlined\"\r\n                        error={!!errors.driverCategory}\r\n                        helperText={\r\n                          errors.driverCategory\r\n                            ? errors.driverCategory.message\r\n                            : \"\"\r\n                        }\r\n                        fullWidth\r\n                        size=\"small\"\r\n                      >\r\n                        {category.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </TextField>\r\n                    )}\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"نام خودرو\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.carName}\r\n                            helperText={\r\n                              errors.carName ? errors.carName.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"carName\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"پلاک خودرو\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.carPlaque}\r\n                            helperText={\r\n                              errors.carPlaque ? errors.carPlaque.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"carPlaque\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={onAddAccount}\r\n                    >\r\n                      افزودن حساب بانکی\r\n                    </Button>\r\n                  </Grid>\r\n                  {!!accounts.length && (\r\n                    <Grid item xs={12}>\r\n                      <Paper>\r\n                        <TableContainer style={{ padding: \"0 10px\" }}>\r\n                          <Table\r\n                            className={classes.table}\r\n                            size={\"medium\"}\r\n                            style={{ paddingRight: 10 }}\r\n                          >\r\n                            <TableHeader headCells={headCells} />\r\n\r\n                            <TableBody>\r\n                              {accounts.map((row) => {\r\n                                return (\r\n                                  <TableRow\r\n                                    hover\r\n                                    tabIndex={-1}\r\n                                    key={row.id}\r\n                                    style={{ paddingRight: 10 }}\r\n                                  >\r\n                                    <TableCell padding=\"none\">\r\n                                      <div\r\n                                        style={{\r\n                                          display: \"flex\",\r\n                                          alignItems: \"center\",\r\n                                        }}\r\n                                      >\r\n                                        <img\r\n                                          src={`${Constant.API_ADDRESS}/${row.bank.logo}`}\r\n                                          alt={row.bank.label}\r\n                                          style={{\r\n                                            width: 25,\r\n                                            height: 25,\r\n                                            borderRadius: \"50%\",\r\n                                            marginLeft: 5,\r\n                                          }}\r\n                                        />\r\n                                        {row.bank.name || row.bank.label}\r\n                                      </div>\r\n                                    </TableCell>\r\n                                    <TableCell padding=\"none\">\r\n                                      {row.accountNumber}\r\n                                    </TableCell>\r\n                                    <TableCell padding=\"none\">\r\n                                      {row.accountCardNumber}\r\n                                    </TableCell>\r\n\r\n                                    <TableCell\r\n                                      padding=\"none\"\r\n                                      style={{ textAlign: \"left\" }}\r\n                                    >\r\n                                      <IconButton\r\n                                        onClick={() => handleEditAccount(row)}\r\n                                      >\r\n                                        <EditIcon />\r\n                                      </IconButton>\r\n\r\n                                      <IconButton\r\n                                        onClick={() => handleDeleteAccount(row)}\r\n                                      >\r\n                                        <DeleteIcon />\r\n                                      </IconButton>\r\n                                    </TableCell>\r\n                                  </TableRow>\r\n                                );\r\n                              })}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                      </Paper>\r\n                    </Grid>\r\n                  )}\r\n\r\n                  <Grid item xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"آدرس\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.address}\r\n                            helperText={\r\n                              errors.address ? errors.address.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"address\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            label=\"توضیحات\"\r\n                            multiline\r\n                            rows={4}\r\n                            variant=\"outlined\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            fullWidth\r\n                            error={!!errors.description}\r\n                            helperText={\r\n                              errors.description\r\n                                ? errors.description.message\r\n                                : \"\"\r\n                            }\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"description\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                  >\r\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                      تایید\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      onClick={onReject}\r\n                    >\r\n                      بازگشت\r\n                    </Button>\r\n                  </Grid>\r\n                </Fragment>\r\n              </Grid>\r\n            </Paper>\r\n          </Grid>\r\n        ) : (\r\n          <CircularProgress />\r\n        )}\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n}));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { convertParamsToQueryString } from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\nconst headCells = [\r\n  {\r\n    id: \"username\",\r\n    label: \"نام کاربری\",\r\n  },\r\n  {\r\n    id: \"firstName\",\r\n    label: \"نام\",\r\n  },\r\n  { id: \"lastName\", label: \"نام خانوادگی\" },\r\n  {\r\n    id: \"mobile\",\r\n    label: \"موبایل\",\r\n  },\r\n  { id: \"phone\", label: \"تلفن\" },\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function MainList() {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"username\");\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(5);\r\n  const [list, setList] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onAdd = () => {\r\n    history.push(\"/app/user-detail\");\r\n  };\r\n\r\n  const getUserRequest = useApi({\r\n    method: \"get\",\r\n    url: `user?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n    })}`,\r\n  });\r\n\r\n  const deleteUseRequest = useApi({\r\n    method: \"delete\",\r\n    url: `user`,\r\n  });\r\n\r\n  const handleAction = (id, type) => {\r\n    const types = {\r\n      edit: () => {\r\n        history.push(`/app/user-detail?id=${id}`);\r\n      },\r\n      delete: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            await deleteUseRequest.execute(null, id);\r\n            setList(list.filter((item) => item.id !== id));\r\n            DialogActions.hide({ name: \"delete\" });\r\n          },\r\n          name: \"delete\",\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const onClicKRow = (e, row) => {\r\n    if (e.target.tagName === \"TD\") {\r\n      handleAction(row.id, \"edit\");\r\n    }\r\n  };\r\n\r\n  const getData = async () => {\r\n    const userList = await getUserRequest.execute();\r\n    setList(userList.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <TableTop title=\"لیست کاربران\" onAdd={onAdd} />\r\n        <TableContainer style={{ padding: \"0 10px\" }}>\r\n          <Table\r\n            className={classes.table}\r\n            size={\"medium\"}\r\n            style={{ paddingRight: 10 }}\r\n          >\r\n            <TableHeader\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={list.length}\r\n              headCells={headCells}\r\n            />\r\n            <TableBody>\r\n              {stableSort(list, getComparator(order, orderBy))\r\n                .slice(page * pageSize, page * pageSize + pageSize)\r\n                .map((row) => {\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      tabIndex={-1}\r\n                      key={row.id}\r\n                      style={{ paddingRight: 10 }}\r\n                      onClick={(e) => onClicKRow(e, row)}\r\n                    >\r\n                      <TableCell padding=\"none\">{row.username}</TableCell>\r\n                      <TableCell padding=\"none\">{row.firstName}</TableCell>\r\n                      <TableCell padding=\"none\">{row.lastName}</TableCell>\r\n                      <TableCell padding=\"none\">{row.mobile}</TableCell>\r\n                      <TableCell padding=\"none\">{row.phone}</TableCell>\r\n\r\n                      <TableCell padding=\"none\">\r\n                        <TableRowMenu\r\n                          options={[\r\n                            { id: \"edit\", title: \"ویرایش\" },\r\n                            { id: \"delete\", title: \"حذف\" },\r\n                          ]}\r\n                          hadleAction={(type) => handleAction(row.id, type)}\r\n                        />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {!list.length && !getUserRequest.pending && (\r\n                <TableRow style={{ height: 53 }}>\r\n                  <TableCell colSpan={6} style={{ textAlign: \"center\" }}>\r\n                    <Typography variant=\"h6\">\r\n                      داده ای برای نمایش وجود ندارد\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePaging\r\n          count={list.length}\r\n          handleChangePage={handleChangePage}\r\n          handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n          page={page}\r\n          rowsPerPage={pageSize}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"baseline\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      flexDirection: \"column\",\r\n    },\r\n  },\r\n  paper: {\r\n    width: \"30%\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"90%\",\r\n    },\r\n    margin: \"10px 20px\",\r\n  },\r\n  toolbar: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    \"& .MuiTypography-h6\": {\r\n      color: \"white\",\r\n    },\r\n  },\r\n}));\r\n","import React, { useState } from \"react\";\r\nimport { TextField, Button, Grid } from \"@material-ui/core\";\r\n\r\nconst MainDetail = ({ onSubmit, onDismiss, defaultValue }) => {\r\n  const [label, setLabel] = useState(defaultValue.label);\r\n\r\n  const onChangeSelectedCategory = (e) => {\r\n    const { value } = e.target;\r\n    setLabel(value);\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          style={{ width: \"100%\" }}\r\n          value={label}\r\n          size=\"small\"\r\n          label=\"عنوان\"\r\n          variant=\"outlined\"\r\n          onChange={onChangeSelectedCategory}\r\n        />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => onSubmit({ value: defaultValue.value, name: label })}\r\n        >\r\n          تایید\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n          انصراف\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default MainDetail;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport Detail from \"./detail\";\r\n\r\nconst MainList = () => {\r\n  const classes = styles();\r\n  const [customerCategory, setCustomerCategory] = useState([]);\r\n  const [depotCategory, setDepotCategory] = useState([]);\r\n  const [productCategory, setProductCategory] = useState([]);\r\n  const [invoiceCategory, setInvoiceCategory] = useState([]);\r\n  const [driverCategory, setDriverCategory] = useState([]);\r\n  const [action, setAction] = useState();\r\n  const [selectedCategory, setSelectedCategory] = useState({\r\n    value: \"\",\r\n    label: \"\",\r\n  });\r\n  const [selectedType, setSelectedType] = useState();\r\n\r\n  const GetCustomerCategoryRequest = useApi({\r\n    method: \"get\",\r\n    url: \"customer/category\",\r\n  });\r\n\r\n  const EditCustomerCategoryRequest = useApi({\r\n    method: \"put\",\r\n    url: `customer/category/${selectedCategory.value}`,\r\n  });\r\n\r\n  const AddCustomerCategoryRequest = useApi({\r\n    method: \"post\",\r\n    url: \"customer/category\",\r\n  });\r\n\r\n  const GetProductCategoryRequest = useApi({\r\n    method: \"get\",\r\n    url: \"product/category\",\r\n  });\r\n\r\n  const EditProductCategoryRequest = useApi({\r\n    method: \"put\",\r\n    url: `product/category/${selectedCategory.value}`,\r\n  });\r\n\r\n  const AddProductCategoryRequest = useApi({\r\n    method: \"post\",\r\n    url: \"product/category\",\r\n  });\r\n\r\n  const GetDepotCategoryRequest = useApi({\r\n    method: \"get\",\r\n    url: \"depot/category\",\r\n  });\r\n\r\n  const EditDepotCategoryRequest = useApi({\r\n    method: \"put\",\r\n    url: `depot/category/${selectedCategory.value}`,\r\n  });\r\n\r\n  const AddDepotCategoryRequest = useApi({\r\n    method: \"post\",\r\n    url: \"depot/category\",\r\n  });\r\n\r\n  const GetInvoiceCategoryRequest = useApi({\r\n    method: \"get\",\r\n    url: \"invoice/category\",\r\n  });\r\n\r\n  const EditInvoiceCategoryRequest = useApi({\r\n    method: \"put\",\r\n    url: `invoice/category/${selectedCategory.value}`,\r\n  });\r\n\r\n  const AddInvoiceCategoryRequest = useApi({\r\n    method: \"post\",\r\n    url: \"invoice/category\",\r\n  });\r\n\r\n  const GetDriverCategoryRequest = useApi({\r\n    method: \"get\",\r\n    url: \"driver/category\",\r\n  });\r\n\r\n  const EditDriverCategoryRequest = useApi({\r\n    method: \"put\",\r\n    url: `driver/category/${selectedCategory.value}`,\r\n  });\r\n\r\n  const AddDriverCategoryRequest = useApi({\r\n    method: \"post\",\r\n    url: \"driver/category\",\r\n  });\r\n\r\n  const onAction = ({ name, value }) => {\r\n    const types = {\r\n      customer: async () => {\r\n        if (action === \"edit\") {\r\n          await EditCustomerCategoryRequest.execute({\r\n            name,\r\n          });\r\n        } else {\r\n          await AddCustomerCategoryRequest.execute({ name });\r\n        }\r\n        getCustomerCategory();\r\n      },\r\n      depot: async () => {\r\n        if (action === \"edit\") {\r\n          await EditDepotCategoryRequest.execute({\r\n            name,\r\n          });\r\n        } else {\r\n          await AddDepotCategoryRequest.execute({ name });\r\n        }\r\n        getDepotCategory();\r\n      },\r\n      product: async () => {\r\n        if (action === \"edit\") {\r\n          await EditProductCategoryRequest.execute({\r\n            name,\r\n          });\r\n        } else {\r\n          await AddProductCategoryRequest.execute({ name });\r\n        }\r\n        getProductCategory();\r\n      },\r\n      invoice: async () => {\r\n        if (action === \"edit\") {\r\n          await EditInvoiceCategoryRequest.execute({\r\n            name,\r\n          });\r\n        } else {\r\n          await AddInvoiceCategoryRequest.execute({ name });\r\n        }\r\n        getInvoiceCategory();\r\n      },\r\n      driver: async () => {\r\n        if (action === \"edit\") {\r\n          await EditDriverCategoryRequest.execute({\r\n            name,\r\n          });\r\n        } else {\r\n          await AddDriverCategoryRequest.execute({ name });\r\n        }\r\n        getDriverCategory();\r\n      },\r\n    };\r\n    if (types[selectedType]) {\r\n      onDismiss();\r\n      return types[selectedType]();\r\n    }\r\n  };\r\n\r\n  const handleAdd = (type) => {\r\n    setAction(\"add\");\r\n    setSelectedType(type);\r\n  };\r\n\r\n  const handleAction = (type, item) => {\r\n    setAction(\"edit\");\r\n    setSelectedType(type);\r\n    setSelectedCategory(item);\r\n  };\r\n\r\n  const onDismiss = () => {\r\n    DialogActions.hide({ name: \"detail\" });\r\n    setAction();\r\n  };\r\n\r\n  const showEditModal = () => {\r\n    DialogActions.show({\r\n      title: \" دسته بندی\",\r\n      component: (\r\n        <Detail\r\n          onSubmit={onAction}\r\n          onDismiss={onDismiss}\r\n          defaultValue={selectedCategory}\r\n        />\r\n      ),\r\n      name: \"detail\",\r\n      size: \"4\",\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  const getCustomerCategory = async () => {\r\n    const customerCategoryList = await GetCustomerCategoryRequest.execute();\r\n    setCustomerCategory(customerCategoryList.data);\r\n  };\r\n\r\n  const getDepotCategory = async () => {\r\n    const depotCategoryList = await GetDepotCategoryRequest.execute();\r\n    setDepotCategory(depotCategoryList.data);\r\n  };\r\n\r\n  const getProductCategory = async () => {\r\n    const productCategoryList = await GetProductCategoryRequest.execute();\r\n    setProductCategory(productCategoryList.data);\r\n  };\r\n\r\n  const getInvoiceCategory = async () => {\r\n    const invoiceCategoryList = await GetInvoiceCategoryRequest.execute();\r\n    setInvoiceCategory(invoiceCategoryList.data);\r\n  };\r\n\r\n  const getDriverCategory = async () => {\r\n    const driverCategoryList = await GetDriverCategoryRequest.execute();\r\n    setDriverCategory(driverCategoryList.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCustomerCategory();\r\n    getDepotCategory();\r\n    getProductCategory();\r\n    getInvoiceCategory();\r\n    getDriverCategory();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (action) {\r\n      showEditModal();\r\n    }\r\n  }, [action]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <TableTop\r\n          title=\"دسته بندی مشتریان\"\r\n          onAdd={() => handleAdd(\"customer\")}\r\n          toolbarClass={classes.toolbar}\r\n          addButtonClass={classes.addButton}\r\n          minimal\r\n        />\r\n        <TableContainer style={{ padding: \"0 10px\" }}>\r\n          <Table\r\n            className={classes.table}\r\n            size={\"medium\"}\r\n            style={{ paddingRight: 10 }}\r\n          >\r\n            <TableBody>\r\n              {customerCategory.map((row) => {\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    tabIndex={-1}\r\n                    key={row.id}\r\n                    style={{ paddingRight: 10 }}\r\n                  >\r\n                    <TableCell padding=\"none\">{row.label}</TableCell>\r\n\r\n                    <TableCell padding=\"none\" style={{ textAlign: \"left\" }}>\r\n                      <IconButton onClick={() => handleAction(\"customer\", row)}>\r\n                        <i className=\"material-icons-round\">edit</i>\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n              {!customerCategory.length && !getCustomerCategory.pending && (\r\n                <TableRow style={{ height: 53 }}>\r\n                  <TableCell colSpan={6} style={{ textAlign: \"center\" }}>\r\n                    <Typography variant=\"h6\">\r\n                      داده ای برای نمایش وجود ندارد\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n      <Paper className={classes.paper}>\r\n        <TableTop\r\n          title=\"دسته بندی انبار\"\r\n          onAdd={() => handleAdd(\"depot\")}\r\n          toolbarClass={classes.toolbar}\r\n          addButtonClass={classes.addButton}\r\n          minimal\r\n        />\r\n        <TableContainer style={{ padding: \"0 10px\" }}>\r\n          <Table\r\n            className={classes.table}\r\n            size={\"medium\"}\r\n            style={{ paddingRight: 10 }}\r\n          >\r\n            <TableBody>\r\n              {depotCategory.map((row) => {\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    tabIndex={-1}\r\n                    key={row.id}\r\n                    style={{ paddingRight: 10 }}\r\n                  >\r\n                    <TableCell padding=\"none\">{row.label}</TableCell>\r\n\r\n                    <TableCell padding=\"none\" style={{ textAlign: \"left\" }}>\r\n                      <IconButton onClick={() => handleAction(\"depot\", row)}>\r\n                        <i className=\"material-icons-round\">edit</i>\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n              {!depotCategory.length && !getDepotCategory.pending && (\r\n                <TableRow style={{ height: 53 }}>\r\n                  <TableCell colSpan={6} style={{ textAlign: \"center\" }}>\r\n                    <Typography variant=\"h6\">\r\n                      داده ای برای نمایش وجود ندارد\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n      <Paper className={classes.paper}>\r\n        <TableTop\r\n          title=\"دسته بندی کالاها\"\r\n          onAdd={() => handleAdd(\"product\")}\r\n          toolbarClass={classes.toolbar}\r\n          addButtonClass={classes.addButton}\r\n          minimal\r\n        />\r\n        <TableContainer style={{ padding: \"0 10px\" }}>\r\n          <Table\r\n            className={classes.table}\r\n            size={\"medium\"}\r\n            style={{ paddingRight: 10 }}\r\n          >\r\n            <TableBody>\r\n              {productCategory.map((row) => {\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    tabIndex={-1}\r\n                    key={row.id}\r\n                    style={{ paddingRight: 10 }}\r\n                  >\r\n                    <TableCell padding=\"none\">{row.label}</TableCell>\r\n\r\n                    <TableCell padding=\"none\" style={{ textAlign: \"left\" }}>\r\n                      <IconButton onClick={() => handleAction(\"product\", row)}>\r\n                        <i className=\"material-icons-round\">edit</i>\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n              {!productCategory.length && !getProductCategory.pending && (\r\n                <TableRow style={{ height: 53 }}>\r\n                  <TableCell colSpan={6} style={{ textAlign: \"center\" }}>\r\n                    <Typography variant=\"h6\">\r\n                      داده ای برای نمایش وجود ندارد\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n      <Paper className={classes.paper}>\r\n        <TableTop\r\n          title=\"دسته بندی فاکتور ها\"\r\n          onAdd={() => handleAdd(\"invoice\")}\r\n          toolbarClass={classes.toolbar}\r\n          addButtonClass={classes.addButton}\r\n          minimal\r\n        />\r\n        <TableContainer style={{ padding: \"0 10px\" }}>\r\n          <Table\r\n            className={classes.table}\r\n            size={\"medium\"}\r\n            style={{ paddingRight: 10 }}\r\n          >\r\n            <TableBody>\r\n              {invoiceCategory.map((row) => {\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    tabIndex={-1}\r\n                    key={row.id}\r\n                    style={{ paddingRight: 10 }}\r\n                  >\r\n                    <TableCell padding=\"none\">{row.label}</TableCell>\r\n\r\n                    <TableCell padding=\"none\" style={{ textAlign: \"left\" }}>\r\n                      <IconButton onClick={() => handleAction(\"invoice\", row)}>\r\n                        <i className=\"material-icons-round\">edit</i>\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n              {!invoiceCategory.length && !getInvoiceCategory.pending && (\r\n                <TableRow style={{ height: 53 }}>\r\n                  <TableCell colSpan={6} style={{ textAlign: \"center\" }}>\r\n                    <Typography variant=\"h6\">\r\n                      داده ای برای نمایش وجود ندارد\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n      <Paper className={classes.paper}>\r\n        <TableTop\r\n          title=\"دسته بندی رانندگان ها\"\r\n          onAdd={() => handleAdd(\"driver\")}\r\n          toolbarClass={classes.toolbar}\r\n          addButtonClass={classes.addButton}\r\n          minimal\r\n        />\r\n        <TableContainer style={{ padding: \"0 10px\" }}>\r\n          <Table\r\n            className={classes.table}\r\n            size={\"medium\"}\r\n            style={{ paddingRight: 10 }}\r\n          >\r\n            <TableBody>\r\n              {driverCategory.map((row) => {\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    tabIndex={-1}\r\n                    key={row.id}\r\n                    style={{ paddingRight: 10 }}\r\n                  >\r\n                    <TableCell padding=\"none\">{row.label}</TableCell>\r\n\r\n                    <TableCell padding=\"none\" style={{ textAlign: \"left\" }}>\r\n                      <IconButton onClick={() => handleAction(\"driver\", row)}>\r\n                        <i className=\"material-icons-round\">edit</i>\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n              {!driverCategory.length && !getDriverCategory.pending && (\r\n                <TableRow style={{ height: 53 }}>\r\n                  <TableCell colSpan={6} style={{ textAlign: \"center\" }}>\r\n                    <Typography variant=\"h6\">\r\n                      داده ای برای نمایش وجود ندارد\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Grid,\r\n  TextField,\r\n  Chip,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport { TimePicker } from \"@material-ui/pickers\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport {\r\n  getQueryString,\r\n  hasPermission,\r\n  persianNumber,\r\n} from \"../../helpers/utils\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport { convertParamsToQueryString } from \"../../helpers/utils\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport clsx from \"clsx\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport AlertAction from \"../../redux/actions/AlertAction\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n    marginBottom: 10,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n  enter: {\r\n    color: \"#fff\",\r\n    backgroundColor: theme.palette.primary.main,\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n  exit: {\r\n    color: \"#fff\",\r\n    backgroundColor: theme.palette.error.main,\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.error.main,\r\n    },\r\n  },\r\n  logedEnter: {\r\n    color: \"white\",\r\n    fontSize: 16,\r\n    backgroundColor: theme.palette.gray.main,\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.gray.main,\r\n    },\r\n  },\r\n  logedExit: {\r\n    color: \"white\",\r\n    fontSize: 16,\r\n    backgroundColor: theme.palette.gray.main,\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.gray.main,\r\n    },\r\n  },\r\n  register: {\r\n    color: \"#fff\",\r\n    backgroundColor: theme.palette.success.main,\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.success.dark,\r\n    },\r\n  },\r\n  dateTime: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  clockConatiner: {\r\n    background: theme.palette.primary.main,\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n    display: \"flex\",\r\n  },\r\n  tab: {\r\n    borderBottom: `1px solid ${theme.palette.gray.main}`,\r\n  },\r\n}));\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    label: \"نام و نام خانوادگی\",\r\n  },\r\n\r\n  { id: \"enter\", label: \"ورود\" },\r\n  {\r\n    id: \"exit\",\r\n    label: \"خروج\",\r\n  },\r\n  { id: \"enter\", label: \"ورود\" },\r\n  {\r\n    id: \"exit\",\r\n    label: \"خروج\",\r\n  },\r\n];\r\n\r\nexport default function MainDetail() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [search, setSearch] = useState();\r\n  const place = getQueryString(\"type\");\r\n  const [list, setList] = useState([]);\r\n  const [selectedDate, setSelectedDate] = useState(moment());\r\n  const [selectedTime, setSelectedTime] = useState(moment());\r\n  const [isEditTime, setIsEditTime] = useState(false);\r\n  const [editTime, setEditTime] = useState();\r\n  const [type, setType] = useState(place);\r\n\r\n  const registerRequest = useApi({\r\n    method: \"post\",\r\n    url: `attendance`,\r\n  });\r\n\r\n  const getTrafficRequest = useApi({\r\n    method: \"get\",\r\n    url: decodeURIComponent(\r\n      `attendance?${convertParamsToQueryString({\r\n        search,\r\n        filter: `{date:${selectedDate._d.toISOString()}}`,\r\n        type,\r\n      })}`,\r\n    ),\r\n  });\r\n\r\n  const editTrafficRequest = useApi({\r\n    method: \"put\",\r\n    url: `attendance`,\r\n  });\r\n\r\n  const onSubmit = async (row, sort) => {\r\n    if (\r\n      hasPermission(\r\n        type === \"FACTORY1\"\r\n          ? Constant.ALL_PERMISSIONS.ATTENDANCE_FACTORY1_EDIT\r\n          : type === \"FACTORY2\"\r\n          ? Constant.ALL_PERMISSIONS.ATTENDANCE_FACTORY2_EDIT\r\n          : Constant.ALL_PERMISSIONS.ATTENDANCE_DEPOT_EDIT,\r\n      )\r\n    ) {\r\n      if (!checkToday()) {\r\n        await registerRequest.execute({ employeeId: row.id, sort });\r\n        getData();\r\n      } else {\r\n      }\r\n    } else {\r\n      AlertAction.show({\r\n        type: \"error\",\r\n        text: Constant.MESSAGES.ERROR_MESSAGE.ACCESS_DENIED,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onEdit = async (date) => {\r\n    if (hasPermission(Constant.ALL_PERMISSIONS.ATTENDANCE_ADMIN)) {\r\n      const tzOffset = new Date().getTimezoneOffset() * 60000;\r\n      await editTrafficRequest.execute({\r\n        id: editTime.id,\r\n        date: new Date(new Date(date) - tzOffset),\r\n      });\r\n      getData();\r\n    } else {\r\n      AlertAction.show({\r\n        type: \"error\",\r\n        text: Constant.MESSAGES.ERROR_MESSAGE.ACCESS_DENIED,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onChangeSearch = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  const getData = async () => {\r\n    const userList = await getTrafficRequest.execute();\r\n    setList(userList.data);\r\n  };\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date._d);\r\n    setIsEditTime(false);\r\n    setEditTime(null);\r\n    onEdit(date._d);\r\n  };\r\n\r\n  const onEditTime = (time) => {\r\n    if (!checkIsAdmin()) {\r\n      return;\r\n    }\r\n    setSelectedTime(time.dateTime);\r\n    setIsEditTime(true);\r\n    setEditTime({ id: time.id });\r\n  };\r\n\r\n  const checkIsAdmin = () => {\r\n    return hasPermission(Constant.ALL_PERMISSIONS.ATTENDANCE_ADMIN);\r\n  };\r\n\r\n  const checkToday = () => {\r\n    return selectedDate._d.toDateString() !== moment()._d.toDateString();\r\n  };\r\n\r\n  const getTimesElement = (row) => {\r\n    if (row.times.length === 0) {\r\n      return (\r\n        <>\r\n          <TableCell padding=\"none\">\r\n            {isEditTime && row.times[0].id === editTime.id ? (\r\n              <TimePicker\r\n                style={{ width: 50 }}\r\n                ampm={false}\r\n                value={selectedTime}\r\n                onChange={handleTimeChange}\r\n                okLabel=\"تایید\"\r\n                cancelLabel=\"انصراف\"\r\n              />\r\n            ) : (\r\n              <Chip\r\n                label={\"ثبت ورود\"}\r\n                className={clsx(\r\n                  classes.enter,\r\n                  checkToday() && classes.logedEnter,\r\n                )}\r\n                onClick={() => onSubmit(row, \"ENTER\")}\r\n              />\r\n            )}\r\n          </TableCell>\r\n          <TableCell padding=\"none\"></TableCell>\r\n          <TableCell padding=\"none\"></TableCell>\r\n          <TableCell padding=\"none\"></TableCell>\r\n        </>\r\n      );\r\n    }\r\n    if (row.times.length === 1) {\r\n      return (\r\n        <>\r\n          <TableCell padding=\"none\">\r\n            {isEditTime && row.times[0].id === editTime.id ? (\r\n              <TimePicker\r\n                style={{ width: 50 }}\r\n                ampm={false}\r\n                value={selectedTime}\r\n                onChange={handleTimeChange}\r\n                okLabel=\"تایید\"\r\n                cancelLabel=\"انصراف\"\r\n              />\r\n            ) : (\r\n              <Chip\r\n                label={persianNumber(row.times[0].time).substring(0, 5)}\r\n                className={classes.logedEnter}\r\n                onClick={() => onEditTime(row.times[0])}\r\n              />\r\n            )}\r\n          </TableCell>\r\n          <TableCell padding=\"none\">\r\n            <Chip\r\n              label={\"ثبت خروج\"}\r\n              className={clsx(classes.exit, checkToday() && classes.logedExit)}\r\n              onClick={() => onSubmit(row, \"EXIT\")}\r\n            />\r\n          </TableCell>\r\n          <TableCell padding=\"none\"></TableCell>\r\n          <TableCell padding=\"none\"></TableCell>\r\n        </>\r\n      );\r\n    }\r\n    if (row.times.length === 2) {\r\n      return (\r\n        <>\r\n          <TableCell padding=\"none\">\r\n            {isEditTime && row.times[0].id === editTime.id ? (\r\n              <TimePicker\r\n                style={{ width: 50 }}\r\n                ampm={false}\r\n                value={selectedTime}\r\n                onChange={handleTimeChange}\r\n                okLabel=\"تایید\"\r\n                cancelLabel=\"انصراف\"\r\n              />\r\n            ) : (\r\n              <Chip\r\n                label={persianNumber(row.times[0].time).substring(0, 5)}\r\n                className={classes.logedEnter}\r\n                onClick={() => onEditTime(row.times[0])}\r\n              />\r\n            )}\r\n          </TableCell>\r\n          <TableCell padding=\"none\">\r\n            {isEditTime && row.times[1].id === editTime.id ? (\r\n              <TimePicker\r\n                style={{ width: 50 }}\r\n                ampm={false}\r\n                value={selectedTime}\r\n                onChange={handleTimeChange}\r\n                okLabel=\"تایید\"\r\n                cancelLabel=\"انصراف\"\r\n              />\r\n            ) : (\r\n              <Chip\r\n                label={persianNumber(row.times[1].time).substring(0, 5)}\r\n                className={classes.logedExit}\r\n                onClick={() => onEditTime(row.times[1])}\r\n              />\r\n            )}\r\n          </TableCell>\r\n          <TableCell padding=\"none\">\r\n            <Chip\r\n              label={\"ثبت ورود\"}\r\n              className={clsx(\r\n                classes.enter,\r\n                checkToday() && classes.logedEnter,\r\n              )}\r\n              onClick={() => onSubmit(row, \"ENTER\")}\r\n            />\r\n          </TableCell>\r\n          <TableCell padding=\"none\"></TableCell>\r\n        </>\r\n      );\r\n    }\r\n    if (row.times.length === 3) {\r\n      return (\r\n        <>\r\n          <TableCell padding=\"none\">\r\n            {isEditTime && row.times[0].id === editTime.id ? (\r\n              <TimePicker\r\n                style={{ width: 50 }}\r\n                ampm={false}\r\n                value={selectedTime}\r\n                onChange={handleTimeChange}\r\n                okLabel=\"تایید\"\r\n                cancelLabel=\"انصراف\"\r\n              />\r\n            ) : (\r\n              <Chip\r\n                label={persianNumber(row.times[0].time).substring(0, 5)}\r\n                className={classes.logedEnter}\r\n                onClick={() => onEditTime(row.times[0])}\r\n              />\r\n            )}\r\n          </TableCell>\r\n          <TableCell padding=\"none\">\r\n            {isEditTime && row.times[1].id === editTime.id ? (\r\n              <TimePicker\r\n                style={{ width: 50 }}\r\n                ampm={false}\r\n                value={selectedTime}\r\n                onChange={handleTimeChange}\r\n                okLabel=\"تایید\"\r\n                cancelLabel=\"انصراف\"\r\n              />\r\n            ) : (\r\n              <Chip\r\n                label={persianNumber(row.times[1].time).substring(0, 5)}\r\n                className={classes.logedExit}\r\n                onClick={() => onEditTime(row.times[1])}\r\n              />\r\n            )}\r\n          </TableCell>\r\n          <TableCell padding=\"none\">\r\n            {isEditTime && row.times[2].id === editTime.id ? (\r\n              <TimePicker\r\n                style={{ width: 50 }}\r\n                ampm={false}\r\n                value={selectedTime}\r\n                onChange={handleTimeChange}\r\n                okLabel=\"تایید\"\r\n                cancelLabel=\"انصراف\"\r\n              />\r\n            ) : (\r\n              <Chip\r\n                label={persianNumber(row.times[2].time).substring(0, 5)}\r\n                className={classes.logedEnter}\r\n                onClick={() => onEditTime(row.times[2])}\r\n              />\r\n            )}\r\n          </TableCell>\r\n          <TableCell padding=\"none\">\r\n            <Chip\r\n              label={\"ثبت خروج\"}\r\n              className={clsx(classes.exit, checkToday() && classes.logedExit)}\r\n              onClick={() => onSubmit(row, \"EXIT\")}\r\n            />\r\n          </TableCell>\r\n        </>\r\n      );\r\n    }\r\n    if (row.times.length === 4) {\r\n      return (\r\n        <>\r\n          <TableCell padding=\"none\">\r\n            {isEditTime && row.times[0].id === editTime.id ? (\r\n              <TimePicker\r\n                style={{ width: 50 }}\r\n                ampm={false}\r\n                value={selectedTime}\r\n                onChange={handleTimeChange}\r\n                okLabel=\"تایید\"\r\n                cancelLabel=\"انصراف\"\r\n              />\r\n            ) : (\r\n              <Chip\r\n                label={persianNumber(row.times[0].time).substring(0, 5)}\r\n                className={classes.logedEnter}\r\n                onClick={() => onEditTime(row.times[0])}\r\n              />\r\n            )}\r\n          </TableCell>\r\n          <TableCell padding=\"none\">\r\n            {isEditTime && row.times[1].id === editTime.id ? (\r\n              <TimePicker\r\n                style={{ width: 50 }}\r\n                ampm={false}\r\n                value={selectedTime}\r\n                onChange={handleTimeChange}\r\n                okLabel=\"تایید\"\r\n                cancelLabel=\"انصراف\"\r\n              />\r\n            ) : (\r\n              <Chip\r\n                label={persianNumber(row.times[1].time).substring(0, 5)}\r\n                className={classes.logedExit}\r\n                onClick={() => onEditTime(row.times[1])}\r\n              />\r\n            )}\r\n          </TableCell>\r\n          <TableCell padding=\"none\">\r\n            {isEditTime && row.times[2].id === editTime.id ? (\r\n              <TimePicker\r\n                style={{ width: 50 }}\r\n                ampm={false}\r\n                value={selectedTime}\r\n                onChange={handleTimeChange}\r\n                okLabel=\"تایید\"\r\n                cancelLabel=\"انصراف\"\r\n              />\r\n            ) : (\r\n              <Chip\r\n                label={persianNumber(row.times[2].time).substring(0, 5)}\r\n                className={classes.logedEnter}\r\n                onClick={() => onEditTime(row.times[2])}\r\n              />\r\n            )}\r\n          </TableCell>\r\n          <TableCell padding=\"none\">\r\n            {isEditTime && row.times[3].id === editTime.id ? (\r\n              <TimePicker\r\n                style={{ width: 50 }}\r\n                ampm={false}\r\n                value={selectedTime}\r\n                onChange={handleTimeChange}\r\n                okLabel=\"تایید\"\r\n                cancelLabel=\"انصراف\"\r\n              />\r\n            ) : (\r\n              <Chip\r\n                label={persianNumber(row.times[3].time).substring(0, 5)}\r\n                className={classes.logedExit}\r\n                onClick={() => onEditTime(row.times[3])}\r\n              />\r\n            )}\r\n          </TableCell>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   console.log(new Date(selectedTime._d).getHours());\r\n  // }, [selectedTime]);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [search, selectedDate, type]);\r\n\r\n  useEffect(() => {\r\n    setType(place);\r\n  }, [place]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(\r\n        type === \"FACTORY1\"\r\n          ? Constant.ALL_PERMISSIONS.ATTENDANCE_FACTORY1_SHOW\r\n          : type === \"FACTORY2\"\r\n          ? Constant.ALL_PERMISSIONS.ATTENDANCE_FACTORY2_SHOW\r\n          : Constant.ALL_PERMISSIONS.ATTENDANCE_DEPOT_SHOW,\r\n      ) && (\r\n        <Grid container spacing={3} style={{ alignItems: \"baseline\" }}>\r\n          <Grid item lg={3} sm={12} className={classes.dateTime}>\r\n            <DatePicker\r\n              autoOk\r\n              orientation=\"portrait\"\r\n              variant=\"static\"\r\n              openTo=\"date\"\r\n              name=\"date\"\r\n              // label=\"تاریخ شروع قرارداد\"\r\n              inputVariant=\"outlined\"\r\n              okLabel=\"تأیید\"\r\n              cancelLabel=\"لغو\"\r\n              labelFunc={(date) => (date ? date.format(\"jYYYY/jMM/jDD\") : \"\")}\r\n              value={selectedDate}\r\n              onChange={handleDateChange}\r\n              style={{ width: \"100%\" }}\r\n            />\r\n\r\n            {/* {isEditTime && (\r\n          <TimePicker\r\n            autoOk={false}\r\n            variant=\"static\"\r\n            openTo=\"hours\"\r\n            ampm={false}\r\n            value={selectedTime}\r\n            onChange={setSelectedTime}\r\n          />\r\n        )} */}\r\n          </Grid>\r\n          <Grid item lg={8} sm={12} className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n              <Typography\r\n                className={classes.title}\r\n                variant=\"h6\"\r\n                id=\"tableTitle\"\r\n                component=\"div\"\r\n              >\r\n                ثبت حضور و غیاب\r\n              </Typography>\r\n\r\n              <Grid container spacing={3}>\r\n                <Grid item lg={12} xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    label=\" جستجوی پرسنل\"\r\n                    onChange={onChangeSearch}\r\n                    value={search}\r\n                    fullWidth\r\n                    size=\"small\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Paper>\r\n            <div className={classes.root}>\r\n              <Paper className={classes.paper}>\r\n                <TableContainer style={{ padding: \"0 10px\" }}>\r\n                  <Table\r\n                    className={classes.table}\r\n                    size={\"medium\"}\r\n                    style={{ paddingRight: 10 }}\r\n                  >\r\n                    <TableHeader classes={classes} headCells={headCells} />\r\n                    <TableBody>\r\n                      {list.map((row) => {\r\n                        return (\r\n                          <TableRow\r\n                            hover\r\n                            tabIndex={-1}\r\n                            key={row.id}\r\n                            style={{ paddingRight: 10 }}\r\n                          >\r\n                            <TableCell padding=\"none\">{row.employee}</TableCell>\r\n                            {getTimesElement(row)}\r\n                          </TableRow>\r\n                        );\r\n                      })}\r\n                      {!list.length && !getTrafficRequest.pending && (\r\n                        <TableRow style={{ height: 53 }}>\r\n                          <TableCell\r\n                            colSpan={6}\r\n                            style={{ textAlign: \"center\" }}\r\n                          >\r\n                            <Typography variant=\"h6\">\r\n                              داده ای برای نمایش وجود ندارد\r\n                            </Typography>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      )}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Paper>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Grid, Button, Divider } from \"@material-ui/core\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n}));\r\nconst Filter = ({ onFilter }) => {\r\n  const classes = useStyles();\r\n  const [selectedFromDate, handleFromDateChange] = useState(moment());\r\n  const [selectedToDate, handleToDateChange] = useState(moment());\r\n\r\n  const onChnageDate = (e, type) => {\r\n    if (type === \"from\") {\r\n      handleFromDateChange(e);\r\n    } else {\r\n      handleToDateChange(e);\r\n    }\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (typeof onFilter === \"function\") {\r\n      onFilter(\r\n        `{from:${selectedFromDate._d.toISOString()},to:${selectedToDate._d.toISOString()}}`,\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3} alignItems=\"center\" style={{ padding: 10 }}>\r\n      <Grid item lg={3} xs={12} className={classes.datePicker}>\r\n        <DatePicker\r\n          autoOk\r\n          name=\"date\"\r\n          label=\"از تاریخ\"\r\n          inputVariant=\"outlined\"\r\n          okLabel=\"تأیید\"\r\n          cancelLabel=\"لغو\"\r\n          labelFunc={(date) => (date ? date.format(\"jYYYY/jMM/jDD\") : \"\")}\r\n          value={selectedFromDate}\r\n          onChange={(e) => onChnageDate(e, \"from\")}\r\n          style={{ width: \"100%\" }}\r\n        />\r\n      </Grid>\r\n      <Grid item lg={3} xs={12} className={classes.datePicker}>\r\n        <DatePicker\r\n          autoOk\r\n          name=\"date\"\r\n          label=\"تا تاریخ\"\r\n          inputVariant=\"outlined\"\r\n          okLabel=\"تأیید\"\r\n          cancelLabel=\"لغو\"\r\n          labelFunc={(date) => (date ? date.format(\"jYYYY/jMM/jDD\") : \"\")}\r\n          value={selectedToDate}\r\n          onChange={(e) => onChnageDate(e, \"to\")}\r\n          style={{ width: \"100%\" }}\r\n        />\r\n      </Grid>\r\n      <Grid item lg={3} xs={12}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n          تایید\r\n        </Button>\r\n      </Grid>\r\n      <Divider style={{ width: \"100%\" }} />\r\n    </Grid>\r\n  );\r\n};\r\nexport default Filter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Chip,\r\n  TextField,\r\n  Grid,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport {\r\n  convertParamsToQueryString,\r\n  hasPermission,\r\n  getQueryString,\r\n  persianNumber,\r\n} from \"../../helpers/utils\";\r\nimport styles from \"./style\";\r\nimport FilterComponent from \"./logFilter\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\nimport Transction from \"../customers/transaction\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport moment from \"moment-timezone\";\r\nimport jMoment from \"jalali-moment\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"date\",\r\n    label: \"تاریخ\",\r\n  },\r\n\r\n  { id: \"firstEnter\", label: \"ورود اول\" },\r\n  {\r\n    id: \"firstExit\",\r\n    label: \"خروج اول\",\r\n  },\r\n  { id: \"secondEnter\", label: \"ورود دوم\" },\r\n  {\r\n    id: \"secondExit\",\r\n    label: \"خروج دوم\",\r\n  },\r\n  { id: \"fractionTime\", label: \"کسر کار\" },\r\n  {\r\n    id: \"overTime\",\r\n    label: \"اضافه کار\",\r\n  },\r\n  {\r\n    id: \"total\",\r\n    label: \"مجموع کارکرد\",\r\n  },\r\n];\r\n\r\nexport default function EmployeeLog() {\r\n  const classes = styles();\r\n  const id = getQueryString(\"id\");\r\n  const name = getQueryString(\"name\");\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"date\");\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [sum, setSum] = useState();\r\n  const history = useHistory();\r\n  const [filter, setFilter] = useState(\r\n    `{from:${jMoment(moment(), \"YYYY/MM/DD\")\r\n      .locale(\"fa\")\r\n      .startOf(\"month\")\r\n      .toISOString()},to:${moment().toISOString()}}`,\r\n  );\r\n  // const [price, setPrice] = useState();\r\n  // const [description, setDescription] = useState();\r\n  // const [detail, setDetail] = useState({\r\n  //   totalPay: \" \",\r\n  //   totalLogPay: \" \",\r\n  //   totalLog: \" \",\r\n  //   purePay: \" \",\r\n  //   SPH: \" \",\r\n  // });\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onReject = () => {\r\n    history.push(\"/customer-list\");\r\n  };\r\n\r\n  const getEmployeeRequest = useApi({\r\n    method: \"get\",\r\n    url: decodeURIComponent(\r\n      `attendance/employee?${convertParamsToQueryString({\r\n        page,\r\n        order,\r\n        orderBy,\r\n        pageSize,\r\n        filter,\r\n      })}`,\r\n    ),\r\n  });\r\n\r\n  const onFilter = (data) => {\r\n    setFilter(data);\r\n  };\r\n\r\n  const onShowPayments = () => {\r\n    DialogActions.show({\r\n      title: \" حساب بانکی\",\r\n      component: (\r\n        <Transction\r\n        // onSubmit={onSubmitAccount}\r\n        // onDismiss={onDismissAccount}\r\n        // defaultValues={data}\r\n        />\r\n      ),\r\n      name: \"transaction\",\r\n      size: \"4\",\r\n      confirm: false,\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  const getData = async () => {\r\n    const employeeList = await getEmployeeRequest.execute(null, id);\r\n    setList(employeeList.data);\r\n    setTotal(employeeList.total);\r\n    setSum(employeeList.details);\r\n  };\r\n\r\n  const getTitle = () => {\r\n    return `لیست تردد ${name}`;\r\n  };\r\n\r\n  const onSubmitNewPayment = () => {\r\n    //add new payment in today and type =\"outcome\"\r\n  };\r\n\r\n  const onChange = (e, type) => {};\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, pageSize, filter]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.CASH_LIST) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getEmployeeRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <>\r\n                <Grid container spacing={3} className={classes.salary}>\r\n                  {/* <Grid item xs={3}>\r\n                    <Paper className={classes.salaryPaperRight}>\r\n                      <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                          <TextField\r\n                            disabled\r\n                            variant=\"outlined\"\r\n                            label=\"مجموع کارکرد\"\r\n                            name=\"totalLog\"\r\n                            value={detail.totalLog}\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <TextField\r\n                            disabled\r\n                            variant=\"outlined\"\r\n                            label=\"دریافتی در ساعت\"\r\n                            name=\"totalLog\"\r\n                            value={detail.SPH}\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <TextField\r\n                            disabled\r\n                            variant=\"outlined\"\r\n                            label=\"مبلغ قابل پرداخت\"\r\n                            name=\"totalLog\"\r\n                            value={detail.totalLogPay}\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <TextField\r\n                            disabled\r\n                            variant=\"outlined\"\r\n                            label=\"مجموع دریافتی\"\r\n                            name=\"totalLog\"\r\n                            value={detail.totalPay}\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <TextField\r\n                            disabled\r\n                            variant=\"outlined\"\r\n                            label=\"خالص دریافتی\"\r\n                            name=\"totalLog\"\r\n                            value={detail.purePay}\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid\r\n                          item\r\n                          xs={12}\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                          }}\r\n                        >\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={onShowPayments}\r\n                            fullWidth\r\n                          >\r\n                            لیست پرداختی ها\r\n                          </Button>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Paper>\r\n                  </Grid>\r\n                   */}\r\n                  <Grid item xs={12}>\r\n                    <Paper className={classes.salaryPaperLeft}>\r\n                      <TableTop\r\n                        title={getTitle()}\r\n                        FilterComponent={\r\n                          <FilterComponent onFilter={onFilter} />\r\n                        }\r\n                      />\r\n                      <TableContainer style={{ padding: \"0 10px\" }}>\r\n                        <Table\r\n                          className={classes.table}\r\n                          size={\"medium\"}\r\n                          style={{ paddingRight: 10 }}\r\n                        >\r\n                          <TableHeader\r\n                            classes={classes}\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onRequestSort={handleRequestSort}\r\n                            rowCount={list.length}\r\n                            headCells={headCells}\r\n                          />\r\n\r\n                          <TableBody>\r\n                            {list.map((row) => {\r\n                              return (\r\n                                <TableRow\r\n                                  hover\r\n                                  tabIndex={-1}\r\n                                  key={row.id}\r\n                                  style={{ paddingRight: 10 }}\r\n                                >\r\n                                  <TableCell padding=\"none\">\r\n                                    {persianNumber(\r\n                                      new Date(row.date).toLocaleDateString(\r\n                                        \"fa-IR\",\r\n                                      ),\r\n                                    )}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {persianNumber(row.times[0]?.time)}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {persianNumber(row.times[1]?.time)}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {persianNumber(row.times[2]?.time)}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {persianNumber(row.times[3]?.time)}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {persianNumber(row.fractionTime)}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {persianNumber(row.overTime)}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {persianNumber(row.total)}\r\n                                  </TableCell>\r\n                                </TableRow>\r\n                              );\r\n                            })}\r\n                            {!list.length && !getEmployeeRequest.pending && (\r\n                              <TableRow style={{ height: 53 }}>\r\n                                <TableCell\r\n                                  colSpan={headCells.length}\r\n                                  style={{ textAlign: \"center\" }}\r\n                                >\r\n                                  <Typography variant=\"h6\">\r\n                                    داده ای برای نمایش وجود ندارد\r\n                                  </Typography>\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            )}\r\n                          </TableBody>\r\n                        </Table>\r\n                      </TableContainer>\r\n                      <TablePaging\r\n                        count={total}\r\n                        handleChangePage={handleChangePage}\r\n                        handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                        page={page}\r\n                        rowsPerPage={pageSize}\r\n                      />\r\n                    </Paper>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <Paper className={classes.salaryPaperRight}>\r\n                      <Grid container spacing={3}>\r\n                        <Grid item xs={12} sm={4}>\r\n                          <TextField\r\n                            disabled\r\n                            variant=\"outlined\"\r\n                            label=\"مجموع کارکرد\"\r\n                            name=\"totalLog\"\r\n                            value={persianNumber(sum?.totalTime)}\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                          <TextField\r\n                            disabled\r\n                            variant=\"outlined\"\r\n                            label=\"مجموع اضافه کار\"\r\n                            name=\"totalLog\"\r\n                            value={persianNumber(sum?.totalOverTime)}\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                          <TextField\r\n                            disabled\r\n                            variant=\"outlined\"\r\n                            label=\"مجموع کسر کار\"\r\n                            name=\"totalLog\"\r\n                            value={persianNumber(sum?.totalFractionTime)}\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Paper>\r\n                  </Grid>\r\n                </Grid>\r\n                {/* <Grid container spacing={3} className={classes.salary}>\r\n                  <Grid item xs={3}>\r\n                    <Paper className={classes.salaryPaperRight}>\r\n                      <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"مبلغ\"\r\n                            name=\"price\"\r\n                            onChange={(e) => onChange(e, \"price\")}\r\n                            value={price}\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <TextField\r\n                            rows={3}\r\n                            multiline\r\n                            variant=\"outlined\"\r\n                            label=\"بابت\"\r\n                            name=\"description\"\r\n                            onChange={(e) => onChange(e, \"description\")}\r\n                            value={description}\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        item\r\n                        xs={12}\r\n                        style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"space-between\",\r\n                          marginTop: 10,\r\n                          flexDirection: \"column\",\r\n                        }}\r\n                      >\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={onSubmitNewPayment}\r\n                          fullWidth\r\n                        >\r\n                          پرداخت\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"Secondary\"\r\n                          onClick={onReject}\r\n                          style={{ marginTop: 10 }}\r\n                          fullWidth\r\n                        >\r\n                          بازگشت\r\n                        </Button>\r\n                      </Grid>\r\n                    </Paper>\r\n                  </Grid>\r\n                </Grid>\r\n              */}\r\n              </>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n}));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Grid, TextField, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport Constant from \"../../helpers/constant\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  img: {\r\n    width: 35,\r\n    height: 35,\r\n    borderRadius: 50,\r\n    marginLeft: 20,\r\n  },\r\n  icon: {\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: 50,\r\n    cursor: \"pointer\",\r\n  },\r\n  grid: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nexport default function MainDetail({ detail, onDismiss }) {\r\n  const classes = useStyles();\r\n  const [copyState, setCopyState] = useState();\r\n\r\n  const onCopy = (copyField) => {\r\n    setCopyState(copyField);\r\n  };\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12} className={classes.grid}>\r\n        <TextField\r\n          disabled\r\n          label=\"بانک\"\r\n          value={detail.bank.name || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n        <img\r\n          src={`${Constant.API_ADDRESS}/${detail.bank.logo}`}\r\n          alt={detail.bank.logo}\r\n          className={classes.img}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.grid}>\r\n        <TextField\r\n          disabled\r\n          label=\"شماره کارت\"\r\n          value={detail.accountCardNumber || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n        <CopyToClipboard\r\n          onCopy={() => onCopy(\"accountCardNumber\")}\r\n          text={detail.accountCardNumber}\r\n        >\r\n          <i\r\n            className=\"material-icons-round\"\r\n            style={{ marginRight: 20, cursor: \"pointer\" }}\r\n          >\r\n            {copyState === \"accountCardNumber\" ? \"done\" : \"copy\"}\r\n          </i>\r\n        </CopyToClipboard>\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.grid}>\r\n        <TextField\r\n          disabled\r\n          label=\"شماره حساب\"\r\n          value={detail.accountNumber || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n        <CopyToClipboard\r\n          onCopy={() => onCopy(\"accountNumber\")}\r\n          text={detail.accountNumber}\r\n        >\r\n          <i\r\n            className=\"material-icons-round\"\r\n            style={{ marginRight: 20, cursor: \"pointer\" }}\r\n          >\r\n            {copyState === \"accountNumber\" ? \"done\" : \"copy\"}\r\n          </i>\r\n        </CopyToClipboard>\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.grid}>\r\n        <TextField\r\n          disabled\r\n          label=\"شماره شبا\"\r\n          value={detail.accountShaba || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n        <CopyToClipboard\r\n          onCopy={() => onCopy(\"accountShaba\")}\r\n          text={detail.accountShaba}\r\n        >\r\n          <i\r\n            className=\"material-icons-round\"\r\n            style={{ marginRight: 20, cursor: \"pointer\" }}\r\n          >\r\n            {copyState === \"accountShaba\" ? \"done\" : \"copy\"}\r\n          </i>\r\n        </CopyToClipboard>\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          disabled\r\n          label=\"توضیحات\"\r\n          value={detail.description || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n      </Grid>\r\n\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n          بازگشت\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { convertParamsToQueryString, hasPermission } from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport Detail from \"./detail\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    label: \"نام شخص\",\r\n  },\r\n  {\r\n    id: \"type\",\r\n    label: \"نوع\",\r\n  },\r\n  {\r\n    id: \"logo\",\r\n    label: \"بانک\",\r\n  },\r\n  { id: \"cardNumber\", label: \"شماره کارت\" },\r\n  { id: \"action\" },\r\n];\r\nconst PERSON_TYPE = {\r\n  EMPLOYEE: \"پرسنل\",\r\n  CUSTOMER: \"مشتری\",\r\n  DRIVER: \"راننده\",\r\n};\r\n\r\nconst AccountsNumber = () => {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"name\");\r\n  const [search, setSearch] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [person, setPerson] = useState(\"ALL\");\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const getCardRequest = useApi({\r\n    method: \"get\",\r\n    url: `account?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n      personType: person,\r\n    })}`,\r\n  });\r\n\r\n  const onDismissDetail = () => {\r\n    DialogActions.hide({ name: \"personAccount\" });\r\n  };\r\n\r\n  const handleDetail = (row) => {\r\n    DialogActions.show({\r\n      title: `حساب های ${row.personName}`,\r\n      component: <Detail onDismiss={onDismissDetail} detail={row} />,\r\n      name: \"personAccount\",\r\n      size: \"6\",\r\n      confirm: false,\r\n      disableCloseButton: false,\r\n    });\r\n  };\r\n\r\n  const onClicKRow = (e, row) => {\r\n    if (e.target.tagName === \"TD\") {\r\n      handleDetail(row);\r\n    }\r\n  };\r\n\r\n  const getData = async () => {\r\n    const cardList = await getCardRequest.execute();\r\n    setList(cardList.data);\r\n    setTotal(cardList.total);\r\n  };\r\n\r\n  const onChangeTab = (e, value) => {\r\n    setPerson(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize, person]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.CASH_LIST) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getCardRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title=\"لیست حساب های بانکی\"\r\n                    // handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                  />\r\n                  <div className={classes.tab}>\r\n                    <Tabs\r\n                      value={person}\r\n                      onChange={onChangeTab}\r\n                      indicatorColor=\"primary\"\r\n                      textColor=\"primary\"\r\n                      centered\r\n                      variant=\"fullWidth\"\r\n                    >\r\n                      <Tab label=\"کل اشخاص \" value=\"ALL\" />\r\n                      <Tab label=\"مشتریان\" value=\"CUSTOMER\" />\r\n                      <Tab label=\"پرسنل\" value=\"EMPLOYEE\" />\r\n                      <Tab label=\"رانندگان\" value=\"DRIVER\" />\r\n                    </Tabs>\r\n                  </div>\r\n\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                              onClick={(e) => onClicKRow(e, row)}\r\n                            >\r\n                              <TableCell padding=\"none\">\r\n                                {row.personName}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {PERSON_TYPE[row.personType]}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.bank && (\r\n                                  <img\r\n                                    style={{ width: 30, height: 30 }}\r\n                                    alt={row.bank.name}\r\n                                    src={`${Constant.API_ADDRESS}/${row.bank.logo}`}\r\n                                  />\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.accountCardNumber}\r\n                              </TableCell>\r\n\r\n                              <TableCell padding=\"none\">\r\n                                <i\r\n                                  className=\"material-icons-round\"\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                  onClick={() => handleDetail(row)}\r\n                                >\r\n                                  link\r\n                                </i>\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getCardRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AccountsNumber;\r\n","import React from \"react\";\r\nimport { Grid, TextField, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { persianNumber } from \"../../helpers/utils\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  img: {\r\n    width: 35,\r\n    height: 35,\r\n    borderRadius: 50,\r\n    marginLeft: 20,\r\n  },\r\n  icon: {\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: 50,\r\n    cursor: \"pointer\",\r\n  },\r\n  grid: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nexport default function MainDetail({ data, type, onDismiss }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          disabled\r\n          label={`${data.paymentType === \"INOME\" ? \"دریافت از\" : \"پرداخت به\"}`}\r\n          value={data.name || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          disabled\r\n          label=\"تاریخ\"\r\n          value={\r\n            persianNumber(new Date(data.date).toLocaleDateString(\"fa-IR\")) ||\r\n            \" \"\r\n          }\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          disabled\r\n          label=\"مبلغ\"\r\n          value={persianNumber(data.price) || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n      </Grid>\r\n      {(type === \"BANK\" || type === \"CHEQUE\") && (\r\n        <Grid item xs={12} style={{ display: \"flex\" }}>\r\n          <TextField\r\n            disabled\r\n            label=\"بانک\"\r\n            value={data.detail.bank?.name || \" \"}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            size=\"small\"\r\n          />\r\n          <img\r\n            src={`${Constant.API_ADDRESS}/${data.detail.bank.logo}`}\r\n            alt={data.detail.bank?.logo}\r\n            className={classes.img}\r\n          />\r\n        </Grid>\r\n      )}\r\n      {type === \"BANK\" && (\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            disabled\r\n            label=\"نوع تراکنش\"\r\n            value={data.detail.transactionType || \" \"}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            size=\"small\"\r\n          />\r\n        </Grid>\r\n      )}\r\n      {type === \"BANK\" && (\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            disabled\r\n            label=\"شماره پیگیری\"\r\n            value={persianNumber(data.detail.trackingCode) || \" \"}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            size=\"small\"\r\n          />\r\n        </Grid>\r\n      )}\r\n      {type === \"CHEQUE\" && (\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            disabled\r\n            label=\"شماره چک\"\r\n            value={persianNumber(data.detail.chequeNumber) || \" \"}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            size=\"small\"\r\n          />\r\n        </Grid>\r\n      )}\r\n      {type === \"CHEQUE\" && (\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            disabled\r\n            label=\"تاریخ سررسید\"\r\n            value={\r\n              persianNumber(\r\n                new Date(data.detail.chequeDueDate).toLocaleDateString(\"fa-IR\"),\r\n              ) || \" \"\r\n            }\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            size=\"small\"\r\n          />\r\n        </Grid>\r\n      )}\r\n\r\n      {type === \"CHEQUE\" && (\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            disabled\r\n            label=\"در وجه\"\r\n            value={data.detail.chequePayTo || \" \"}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            size=\"small\"\r\n          />\r\n        </Grid>\r\n      )}\r\n\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          disabled\r\n          label=\"توضیحات\"\r\n          value={data.description || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n      </Grid>\r\n\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n          بازگشت\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport {\r\n  getQueryString,\r\n  convertParamsToQueryString,\r\n  hasPermission,\r\n  persianNumber,\r\n} from \"../../helpers/utils\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport PaymentDetail from \"./paymentDetail\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"date\",\r\n    label: \"تاریخ\",\r\n  },\r\n  {\r\n    id: \"name\",\r\n    label: \"نام شخص\",\r\n  },\r\n  {\r\n    id: \"type\",\r\n    label: \"نوع\",\r\n  },\r\n  {\r\n    id: \"price\",\r\n    label: \"مبلغ\",\r\n  },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nconst types = {\r\n  CASH: \"نقد\",\r\n  CHEQUE: \"چک\",\r\n  BANK: \"بانک\",\r\n};\r\n\r\nconst PaymentReport = () => {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"price\");\r\n  const [search, setSearch] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const cashId = getQueryString(\"cashId\");\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const history = useHistory();\r\n  const [type, setPerson] = useState(\"CASH\");\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n  };\r\n\r\n  const getPaymentByCashRequest = useApi({\r\n    method: \"get\",\r\n    url: `payment/cashdesk?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n      type,\r\n    })}`,\r\n  });\r\n\r\n  const onDismissDetail = () => {\r\n    DialogActions.hide({ name: \"detail\" });\r\n  };\r\n\r\n  const handleDetail = (row) => {\r\n    DialogActions.show({\r\n      title: `${\r\n        row.paymentType === \"INCOME\" ? \"جزییات دریافت\" : \"جزییات پرداخت\"\r\n      } `,\r\n      component: (\r\n        <PaymentDetail onDismiss={onDismissDetail} data={row} type={row.type} />\r\n      ),\r\n      name: \"detail\",\r\n      size: \"6\",\r\n      confirm: false,\r\n      disableCloseButton: false,\r\n    });\r\n  };\r\n\r\n  const onClicKRow = (e, row) => {\r\n    if (e.target.tagName === \"TD\") {\r\n      handleDetail(row);\r\n    }\r\n  };\r\n\r\n  const getData = async () => {\r\n    const paymentList = await getPaymentByCashRequest.execute(null, cashId);\r\n    setList(paymentList.data);\r\n    setTotal(paymentList.total);\r\n  };\r\n\r\n  const onChangeTab = (e, value) => {\r\n    setPerson(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize, type]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.CASH_LIST) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getPaymentByCashRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title=\"لیست تراکنش های صندوق \"\r\n                    // handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                  />\r\n                  <div className={classes.tab}>\r\n                    <Tabs\r\n                      value={type}\r\n                      onChange={onChangeTab}\r\n                      indicatorColor=\"primary\"\r\n                      textColor=\"primary\"\r\n                      centered\r\n                      variant=\"fullWidth\"\r\n                    >\r\n                      <Tab label=\"نقدی\" value=\"CASH\" />\r\n                      <Tab label=\"بانکی\" value=\"BANK\" />\r\n                      <Tab label=\"چک\" value=\"CHEQUE\" />\r\n                    </Tabs>\r\n                  </div>\r\n\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                              onClick={(e) => onClicKRow(e, row)}\r\n                            >\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  new Date(row.date).toLocaleDateString(\r\n                                    \"fa-IR\",\r\n                                  ),\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\"> {row.name}</TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {types[row.type]}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  Number(row.price).toLocaleString(),\r\n                                )}\r\n                              </TableCell>\r\n\r\n                              <TableCell padding=\"none\">\r\n                                <i\r\n                                  className=\"material-icons-round\"\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                  onClick={() => handleDetail(row)}\r\n                                >\r\n                                  feed\r\n                                </i>\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getPaymentByCashRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaymentReport;\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n}));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Grid, TextField, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport Constant from \"../../helpers/constant\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  img: {\r\n    width: 35,\r\n    height: 35,\r\n    borderRadius: 50,\r\n    marginLeft: 20,\r\n  },\r\n  icon: {\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: 50,\r\n    cursor: \"pointer\",\r\n  },\r\n  grid: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nexport default function MainDetail({ detail, onDismiss }) {\r\n  const classes = useStyles();\r\n  const [copyState, setCopyState] = useState();\r\n\r\n  const onCopy = (copyField) => {\r\n    setCopyState(copyField);\r\n  };\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12} className={classes.grid}>\r\n        <TextField\r\n          disabled\r\n          label=\"بانک\"\r\n          value={detail.bank.name || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n        <img\r\n          src={`${Constant.API_ADDRESS}/${detail.bank.logo}`}\r\n          alt={detail.bank.logo}\r\n          className={classes.img}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.grid}>\r\n        <TextField\r\n          disabled\r\n          label=\"شماره کارت\"\r\n          value={detail.accountCardNumber || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n        <CopyToClipboard\r\n          onCopy={() => onCopy(\"accountCardNumber\")}\r\n          text={detail.accountCardNumber}\r\n        >\r\n          <i\r\n            className=\"material-icons-round\"\r\n            style={{ marginRight: 20, cursor: \"pointer\" }}\r\n          >\r\n            {copyState === \"accountCardNumber\" ? \"done\" : \"copy\"}\r\n          </i>\r\n        </CopyToClipboard>\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.grid}>\r\n        <TextField\r\n          disabled\r\n          label=\"شماره حساب\"\r\n          value={detail.accountNumber || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n        <CopyToClipboard\r\n          onCopy={() => onCopy(\"accountNumber\")}\r\n          text={detail.accountNumber}\r\n        >\r\n          <i\r\n            className=\"material-icons-round\"\r\n            style={{ marginRight: 20, cursor: \"pointer\" }}\r\n          >\r\n            {copyState === \"accountNumber\" ? \"done\" : \"copy\"}\r\n          </i>\r\n        </CopyToClipboard>\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.grid}>\r\n        <TextField\r\n          disabled\r\n          label=\"شماره شبا\"\r\n          value={detail.accountShaba || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n        <CopyToClipboard\r\n          onCopy={() => onCopy(\"accountShaba\")}\r\n          text={detail.accountShaba}\r\n        >\r\n          <i\r\n            className=\"material-icons-round\"\r\n            style={{ marginRight: 20, cursor: \"pointer\" }}\r\n          >\r\n            {copyState === \"accountShaba\" ? \"done\" : \"copy\"}\r\n          </i>\r\n        </CopyToClipboard>\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          disabled\r\n          label=\"توضیحات\"\r\n          value={detail.description || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n      </Grid>\r\n\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n          بازگشت\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport {\r\n  convertParamsToQueryString,\r\n  hasPermission,\r\n  persianNumber,\r\n} from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport Detail from \"./detail\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    label: \"نام شخص\",\r\n  },\r\n  {\r\n    id: \"Date\",\r\n    label: \"تاریخ\",\r\n  },\r\n  {\r\n    id: \"price\",\r\n    label: \"مانده وام\",\r\n  },\r\n  { id: \"personType\", label: \"نوع شخص\" },\r\n  // { id: \"action\" },\r\n];\r\nconst PERSON_TYPE = {\r\n  EMPLOYEE: \"پرسنل\",\r\n  CUSTOMER: \"مشتری\",\r\n  DRIVER: \"راننده\",\r\n};\r\n\r\nconst MainList = () => {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"date\");\r\n  const [search, setSearch] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const history = useHistory();\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onAdd = () => {\r\n    history.push(`/app/payment-detail?type=OUTCOME&loan=true`);\r\n  };\r\n\r\n  const getLoanRequest = useApi({\r\n    method: \"get\",\r\n    url: `loan?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n    })}`,\r\n  });\r\n\r\n  const onDismissDetail = () => {\r\n    DialogActions.hide({ name: \"detail\" });\r\n  };\r\n\r\n  const handleDetail = (row) => {\r\n    // DialogActions.show({\r\n    //   title: `حساب های ${row.personName}`,\r\n    //   component: <Detail onDismiss={onDismissDetail} detail={row} />,\r\n    // name:\"detail\",\r\n    //   size: \"6\",\r\n    //   confirm: false,\r\n    //   disableCloseButton: false,\r\n    // });\r\n  };\r\n\r\n  const getData = async () => {\r\n    const cardList = await getLoanRequest.execute();\r\n    setList(cardList.data);\r\n    setTotal(cardList.total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.CASH_LIST) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getLoanRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title=\"لیست وام ها\"\r\n                    onAdd={onAdd}\r\n                    // handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                  />\r\n\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                            >\r\n                              <TableCell padding=\"none\">\r\n                                {row.personName}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  new Date(row.date).toLocaleDateString(\r\n                                    \"fa-IR\",\r\n                                  ),\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  Number(row.price).toLocaleString(),\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {PERSON_TYPE[row.personType]}\r\n                              </TableCell>\r\n\r\n                              {/* <TableCell padding=\"none\">\r\n                                <i\r\n                                  className=\"material-icons-round\"\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                  onClick={() => handleDetail(row)}\r\n                                >\r\n                                  link\r\n                                </i>\r\n                              </TableCell> */}\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getLoanRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainList;\r\n","import React, { useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\n\r\nimport useStyles from \"./styles\";\r\nimport Header from \"../Header/Header\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport Dashboard from \"../../pages/dashboard/Dashboard\";\r\nimport UserList from \"../../pages/users\";\r\nimport UserDetail from \"../../pages/users/detail\";\r\nimport CustomerList from \"../../pages/customers\";\r\nimport CustomerDetail from \"../../pages/customers/detail\";\r\nimport CustomerTransaction from \"../../pages/customers/transaction\";\r\nimport EmployeeList from \"../../pages/employee\";\r\nimport EmployeeDetail from \"../../pages/employee/detail\";\r\nimport InvoiceList from \"../../pages/invoice\";\r\nimport InvoiceDetail from \"../../pages/invoice/detail\";\r\nimport FastInvoice from \"../../pages/invoice/fastInvoice\";\r\nimport ChequeList from \"../../pages/cheque\";\r\nimport ChequeDetail from \"../../pages/cheque/detail\";\r\nimport PaymentList from \"../../pages/payment\";\r\nimport PaymentDetail from \"../../pages/payment/detail\";\r\nimport ProductList from \"../../pages/product\";\r\nimport ProductDetail from \"../../pages/product/detail\";\r\nimport DepotList from \"../../pages/depot\";\r\nimport DepotDetail from \"../../pages/depot/detail\";\r\nimport CashList from \"../../pages/cash\";\r\nimport CashDetail from \"../../pages/cash/detail\";\r\nimport DriverList from \"../../pages/driver\";\r\nimport DriverDetail from \"../../pages/driver/detail\";\r\nimport Setting from \"../../pages/setting\";\r\nimport Category from \"../../pages/category\";\r\nimport Traffic from \"../../pages/traffic\";\r\nimport TrafficDetail from \"../../pages/traffic/register\";\r\nimport { useLayoutState } from \"../../context/LayoutContext\";\r\nimport EmployeeLog from \"../../pages/employee/log\";\r\nimport AccountsNumber from \"../../pages/accountNumber/list\";\r\nimport CashPaymentReport from \"../../pages/cash/paymentReport\";\r\nimport LoanList from \"../../pages/loan\";\r\nimport LoanDetail from \"../../pages/loan/detail\";\r\nimport ProductTransfer from \"../../pages/product/transfer\";\r\n\r\nfunction Layout(props) {\r\n  var classes = useStyles();\r\n\r\n  var layoutState = useLayoutState();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <>\r\n        <Header history={props.history} />\r\n        <Sidebar />\r\n        <div\r\n          className={classnames(classes.content, {\r\n            [classes.contentShift]: layoutState.isSidebarOpened,\r\n          })}\r\n        >\r\n          <div className={classes.fakeToolbar} />\r\n          <Switch>\r\n            <Route path=\"/app/dashboard\" component={Dashboard} />\r\n\r\n            <Route path=\"/app/user-list\" component={UserList} />\r\n            <Route path=\"/app/user-detail\" component={UserDetail} />\r\n\r\n            <Route path=\"/app/customer-list\" component={CustomerList} />\r\n            <Route path=\"/app/customer-detail\" component={CustomerDetail} />\r\n            <Route\r\n              path=\"/app/person-transaction\"\r\n              component={CustomerTransaction}\r\n            />\r\n\r\n            <Route path=\"/app/employee-list\" component={EmployeeList} />\r\n            <Route path=\"/app/employee-detail\" component={EmployeeDetail} />\r\n            <Route path=\"/app/employee-log\" component={EmployeeLog} />\r\n\r\n            <Route path=\"/app/driver-list\" component={DriverList} />\r\n            <Route path=\"/app/driver-detail\" component={DriverDetail} />\r\n\r\n            <Route path=\"/app/cash-list\" component={CashList} />\r\n            <Route path=\"/app/cash-detail\" component={CashDetail} />\r\n            <Route path=\"/app/cash-transaction\" component={CashPaymentReport} />\r\n\r\n            <Route path=\"/app/cheque-list\" component={ChequeList} />\r\n            <Route path=\"/app/cheque-detail\" component={ChequeDetail} />\r\n\r\n            <Route path=\"/app/cheque-list\" component={ChequeList} />\r\n            <Route path=\"/app/cheque-detail\" component={ChequeDetail} />\r\n\r\n            <Route path=\"/app/loan-list\" component={LoanList} />\r\n            <Route path=\"/app/loan-detail\" component={LoanDetail} />\r\n\r\n            <Route path=\"/app/invoice-list\" component={InvoiceList} />\r\n            <Route path=\"/app/invoice-detail\" component={InvoiceDetail} />\r\n            <Route path=\"/app/fast_invoice\" component={FastInvoice} />\r\n\r\n            <Route path=\"/app/payment-list\" component={PaymentList} />\r\n            <Route path=\"/app/payment-detail\" component={PaymentDetail} />\r\n\r\n            <Route path=\"/app/product-list\" component={ProductList} />\r\n            <Route path=\"/app/product-detail\" component={ProductDetail} />\r\n            <Route path=\"/app/product-transfer\" component={ProductTransfer} />\r\n\r\n            <Route path=\"/app/depot-list\" component={DepotList} />\r\n            <Route path=\"/app/depot-detail\" component={DepotDetail} />\r\n\r\n            <Route path=\"/app/setting\" component={Setting} />\r\n            <Route path=\"/app/category\" component={Category} />\r\n\r\n            <Route path=\"/app/traffic\" component={Traffic} />\r\n            <Route path=\"/app/traffic-detail\" component={TrafficDetail} />\r\n            <Route path=\"/app/accountNumber\" component={AccountsNumber} />\r\n          </Switch>\r\n        </div>\r\n      </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles(theme => ({\r\n  container: {\r\n    height: \"100vh\",\r\n    width: \"100vw\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: theme.palette.primary.main,\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n  },\r\n  logotype: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginBottom: theme.spacing(12),\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  logotypeText: {\r\n    fontWeight: 500,\r\n    color: \"white\",\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  logotypeIcon: {\r\n    width: 70,\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  paperRoot: {\r\n    boxShadow: theme.customShadows.widgetDark,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n    paddingLeft: theme.spacing(6),\r\n    paddingRight: theme.spacing(6),\r\n    maxWidth: 404,\r\n  },\r\n  textRow: {\r\n    marginBottom: theme.spacing(10),\r\n    textAlign: \"center\",\r\n  },\r\n  errorCode: {\r\n    fontSize: 148,\r\n    fontWeight: 600,\r\n  },\r\n  safetyText: {\r\n    fontWeight: 300,\r\n    color: theme.palette.text.hint,\r\n  },\r\n  backButton: {\r\n    boxShadow: theme.customShadows.widget,\r\n    textTransform: \"none\",\r\n    fontSize: 22,\r\n  },\r\n}));\r\n","export default __webpack_public_path__ + \"static/media/logo.d0e27845.svg\";","import React from \"react\";\r\nimport { Grid, Paper, Typography, Button } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// logo\r\nimport logo from \"./logo.svg\";\r\n\r\nexport default function Error() {\r\n  var classes = useStyles();\r\n\r\n  return (\r\n    <Grid container className={classes.container}>\r\n      <div className={classes.logotype}>\r\n        <img className={classes.logotypeIcon} src={logo} alt=\"logo\" />\r\n        <Typography variant=\"h3\" color=\"white\" className={classes.logotypeText}>\r\n          Material Admin\r\n        </Typography>\r\n      </div>\r\n      <Paper classes={{ root: classes.paperRoot }}>\r\n        <Typography\r\n          variant=\"h1\"\r\n          color=\"primary\"\r\n          className={classnames(classes.textRow, classes.errorCode)}\r\n        >\r\n          404\r\n        </Typography>\r\n        <Typography variant=\"h5\" color=\"primary\" className={classes.textRow}>\r\n          Oops. Looks like the page you're looking for no longer exists\r\n        </Typography>\r\n        <Typography\r\n          variant=\"h6\"\r\n          color=\"text\"\r\n          colorBrightness=\"secondary\"\r\n          className={classnames(classes.textRow, classes.safetyText)}\r\n        >\r\n          But we're here to bring you back to safety\r\n        </Typography>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          component={Link}\r\n          to=\"/\"\r\n          size=\"large\"\r\n          className={classes.backButton}\r\n        >\r\n          Back to Home\r\n        </Button>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  container: {\r\n    height: \"100vh\",\r\n    width: \"100vw\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    overflow: \"hidden\",\r\n  },\r\n  title: {\r\n    display: \"flex\",\r\n    alignItems: \"baseLine\",\r\n    marginBottom: 30,\r\n    \"& h4\": {\r\n      margin: \"0 10px\",\r\n    },\r\n    \"& hr\": {\r\n      flex: 1,\r\n    },\r\n  },\r\n  backgroundImage: {\r\n    position: \"absolute\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    filter: \"brightness(0.5)\",\r\n  },\r\n  logotypeContainer: {\r\n    position: \"relative\",\r\n    width: \"70%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: \"50%\",\r\n    },\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  logotypeImage: {\r\n    width: 165,\r\n    marginBottom: theme.spacing(4),\r\n    position: \"relative\",\r\n  },\r\n  logotypeText: {\r\n    position: \"relative\",\r\n    color: \"white\",\r\n    fontWeight: 500,\r\n    fontSize: 84,\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      fontSize: 48,\r\n    },\r\n  },\r\n  formContainer: {\r\n    width: \"30%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: \"50%\",\r\n    },\r\n  },\r\n  form: {\r\n    width: 320,\r\n  },\r\n  tab: {\r\n    fontWeight: 400,\r\n    fontSize: 18,\r\n  },\r\n  greeting: {\r\n    fontWeight: 500,\r\n    textAlign: \"center\",\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  subGreeting: {\r\n    fontWeight: 500,\r\n    textAlign: \"center\",\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  googleButton: {\r\n    marginTop: theme.spacing(6),\r\n    boxShadow: theme.customShadows.widget,\r\n    backgroundColor: \"white\",\r\n    width: \"100%\",\r\n    textTransform: \"none\",\r\n  },\r\n  googleButtonCreating: {\r\n    marginTop: 0,\r\n  },\r\n  googleIcon: {\r\n    width: 30,\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  creatingButtonContainer: {\r\n    marginTop: theme.spacing(2.5),\r\n    height: 46,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  createAccountButton: {\r\n    height: 46,\r\n    textTransform: \"none\",\r\n  },\r\n  formDividerContainer: {\r\n    marginTop: theme.spacing(4),\r\n    marginBottom: theme.spacing(4),\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  formDividerWord: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  formDivider: {\r\n    flexGrow: 1,\r\n    height: 1,\r\n    backgroundColor: theme.palette.text.hint + \"40\",\r\n  },\r\n  errorMessage: {\r\n    textAlign: \"center\",\r\n  },\r\n  textFieldUnderline: {\r\n    \"&:before\": {\r\n      borderBottomColor: theme.palette.primary.light,\r\n    },\r\n    \"&:after\": {\r\n      borderBottomColor: theme.palette.primary.main,\r\n    },\r\n    \"&:hover:before\": {\r\n      borderBottomColor: `${theme.palette.primary.light} !important`,\r\n    },\r\n  },\r\n  textField: {\r\n    borderBottomColor: theme.palette.background.light,\r\n  },\r\n  formButtons: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(4),\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  forgetButton: {\r\n    textTransform: \"none\",\r\n    fontWeight: 400,\r\n  },\r\n  loginLoader: {\r\n    marginLeft: theme.spacing(4),\r\n  },\r\n  copyright: {\r\n    marginTop: theme.spacing(4),\r\n    whiteSpace: \"nowrap\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      position: \"absolute\",\r\n      bottom: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n","export default __webpack_public_path__ + \"static/media/logo.d0e27845.svg\";","export default __webpack_public_path__ + \"static/media/111.788f87ef.jpg\";","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  CircularProgress,\r\n  Typography,\r\n  Button,\r\n  TextField,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport useStyles from \"./styles\";\r\nimport logo from \"./logo.svg\";\r\nimport back from \"./111.jpg\";\r\nimport { useUserDispatch, loginUser } from \"../../context/UserContext\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport unitAcion from \"../../redux/actions/unitAction\";\r\n\r\nfunction Login(props) {\r\n  const classes = useStyles();\r\n  const userDispatch = useUserDispatch();\r\n  const loginRequest = useApi({\r\n    method: \"post\",\r\n    url: \"auth/login\",\r\n  });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const [usernameValue, setUsernameValue] = useState(\"\");\r\n  const [passwordValue, setPasswordValue] = useState(\"\");\r\n\r\n  const onPressEnter = function (event) {\r\n    if (event.which === 13 && passwordValue && usernameValue) {\r\n      loginUser(\r\n        loginRequest,\r\n        userDispatch,\r\n        usernameValue,\r\n        passwordValue,\r\n        props.history,\r\n        setIsLoading,\r\n        setError,\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    unitAcion.setProdcutUnit();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container className={classes.container}>\r\n      <div className={classes.logotypeContainer}>\r\n        <img src={back} alt=\"logo\" className={classes.backgroundImage} />\r\n        <img src={logo} alt=\"logo\" className={classes.logotypeImage} />\r\n        <Typography className={classes.logotypeText}>\r\n          سیستم یکپارچه مدیریت\r\n        </Typography>\r\n      </div>\r\n      <div className={classes.formContainer}>\r\n        <div className={classes.form}>\r\n          <React.Fragment>\r\n            <div className={classes.title}>\r\n              <Divider />\r\n              <Typography variant=\"h4\" className={classes.greeting}>\r\n                ورود به سیستم\r\n              </Typography>\r\n              <Divider />\r\n            </div>\r\n\r\n            <TextField\r\n              label=\"نام کاربری\"\r\n              variant=\"outlined\"\r\n              id=\"username\"\r\n              InputProps={{\r\n                classes: {\r\n                  input: classes.textField,\r\n                },\r\n              }}\r\n              value={usernameValue}\r\n              onChange={(e) => setUsernameValue(e.target.value)}\r\n              margin=\"normal\"\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              label=\"رمز عبور \"\r\n              variant=\"outlined\"\r\n              id=\"password\"\r\n              InputProps={{\r\n                classes: {\r\n                  input: classes.textField,\r\n                },\r\n              }}\r\n              value={passwordValue}\r\n              onChange={(e) => setPasswordValue(e.target.value)}\r\n              margin=\"normal\"\r\n              type=\"password\"\r\n              fullWidth\r\n              onKeyPress={onPressEnter}\r\n            />\r\n            <div className={classes.formButtons}>\r\n              {isLoading ? (\r\n                <CircularProgress size={26} className={classes.loginLoader} />\r\n              ) : (\r\n                <Button\r\n                  fullWidth\r\n                  disabled={\r\n                    usernameValue.length === 0 || passwordValue.length === 0\r\n                  }\r\n                  onClick={() =>\r\n                    loginUser(\r\n                      loginRequest,\r\n                      userDispatch,\r\n                      usernameValue,\r\n                      passwordValue,\r\n                      props.history,\r\n                      setIsLoading,\r\n                      setError,\r\n                    )\r\n                  }\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  size=\"large\"\r\n                >\r\n                  ورود به سیستم\r\n                </Button>\r\n              )}\r\n              {/* <Button\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                className={classes.forgetButton}\r\n              >\r\n                بازیابی رمز عبور\r\n              </Button> */}\r\n            </div>\r\n          </React.Fragment>\r\n        </div>\r\n        <Typography\r\n          color=\"primary\"\r\n          className={classes.copyright}\r\n          variant=\"caption\"\r\n        >\r\n          تمامی حقوق مادی و معنوی این اثر متعلق به شرکت المان می باشد\r\n        </Typography>\r\n      </div>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default withRouter(Login);\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  HashRouter,\r\n} from \"react-router-dom\";\r\n\r\nimport Layout from \"./Layout\";\r\nimport Error from \"../pages/error\";\r\nimport Login from \"../pages/login\";\r\nimport { useUserState } from \"../context/UserContext\";\r\nexport default function App() {\r\n  var { isAuthenticated } = useUserState();\r\n\r\n  return (\r\n    <HashRouter>\r\n      <Switch>\r\n        <Route exact path=\"/\" render={() => <Redirect to=\"/app/dashboard\" />} />\r\n        <Route\r\n          exact\r\n          path=\"/app\"\r\n          render={() => <Redirect to=\"/app/dashboard\" />}\r\n        />\r\n\r\n        <PrivateRoute path=\"/app\" component={Layout} />\r\n        <PublicRoute path=\"/login\" component={Login} />\r\n        <Route component={Error} />\r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n\r\n  // #######################################################################\r\n\r\n  function PrivateRoute({ component, ...rest }) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={(props) =>\r\n          isAuthenticated ? (\r\n            React.createElement(component, props)\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: {\r\n                  from: props.location,\r\n                },\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  function PublicRoute({ component, ...rest }) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={(props) =>\r\n          isAuthenticated ? (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/\",\r\n              }}\r\n            />\r\n          ) : (\r\n            React.createElement(component, props)\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { create } from \"jss\";\r\nimport rtl from \"jss-rtl\";\r\nimport { StylesProvider, jssPreset } from \"@material-ui/core/styles\";\r\n\r\n// Configure JSS\r\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\r\n\r\nfunction RTL(props) {\r\n  return <StylesProvider jss={jss}>{props.children}</StylesProvider>;\r\n}\r\n\r\nexport default RTL;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./assets/css/font.css\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport { CssBaseline } from \"@material-ui/core\";\r\nimport { Provider } from \"react-redux\";\r\nimport Alert from \"./components/Alert\";\r\nimport Dialog from \"./components/Modal\";\r\nimport Themes from \"./themes\";\r\nimport App from \"./components/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { LayoutProvider } from \"./context/LayoutContext\";\r\nimport { UserProvider } from \"./context/UserContext\";\r\nimport store from \"./redux/store\";\r\nimport RTLProvider from \"./themes/RTL\";\r\nimport jMoment from \"moment-jalaali\";\r\nimport JalaliUtils from \"@date-io/jalaali\";\r\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\n\r\njMoment.loadPersian({ dialect: \"persian-modern\", usePersianDigits: true });\r\n\r\nReactDOM.render(\r\n  <MuiPickersUtilsProvider utils={JalaliUtils} locale=\"fa\">\r\n    <Provider store={store}>\r\n      <LayoutProvider>\r\n        <UserProvider>\r\n          <ThemeProvider theme={Themes.default}>\r\n            <RTLProvider>\r\n              <CssBaseline />\r\n              <App />\r\n              <Alert />\r\n              <Dialog />\r\n            </RTLProvider>\r\n          </ThemeProvider>\r\n        </UserProvider>\r\n      </LayoutProvider>\r\n    </Provider>\r\n  </MuiPickersUtilsProvider>,\r\n  document.getElementById(\"root\"),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}