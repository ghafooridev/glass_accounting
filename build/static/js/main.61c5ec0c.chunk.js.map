{"version":3,"sources":["helpers/constant.js","redux/reducers/AlertReducer.js","redux/reducers/dialogReducer.js","services/storage.js","redux/reducers/unitReducer.js","redux/reducers/index.js","redux/store/index.js","redux/actions/AlertAction.js","components/Alert/index.jsx","redux/actions/dialogAction.jsx","components/Modal/Modal.Style.js","components/Modal/index.jsx","themes/default.js","themes/index.js","components/Layout/styles.js","components/Header/styles.js","components/Wrappers/Wrappers.js","context/LayoutContext.js","context/UserContext.js","configs/axios.js","hooks/useApi.js","helpers/utils.js","components/Header/ChangePassword.js","components/Header/Header.js","components/Sidebar/styles.js","components/Sidebar/components/SidebarLink/styles.js","components/Sidebar/components/Dot.js","components/Sidebar/components/SidebarLink/SidebarLink.js","components/Sidebar/Sidebar.js","pages/dashboard/styles.js","components/Widget/styles.js","components/Widget/Widget.js","components/Paper/index.js","pages/dashboard/Dashboard.js","components/Table/TableRowMenu.js","components/Table/TableTop.js","components/Table/TableHead.js","components/Table/TablePaging.js","pages/users/style.js","components/Skeleton/index.js","pages/users/list.js","components/CircularProgress/index.js","pages/users/permission.js","pages/users/detail.js","pages/customers/style.js","pages/customers/filter.js","pages/customers/list.js","components/icons/index.js","pages/customers/account.js","pages/customers/detail.js","pages/customers/transaction.js","pages/employee/style.js","pages/employee/filter.js","pages/employee/list.js","pages/employee/account.js","pages/employee/detail.js","pages/invoice/style.js","pages/invoice/filter.js","pages/invoice/list.js","pages/payment/style.js","pages/payment/personSelector.js","pages/payment/paymnet.js","pages/payment/prePayment.js","pages/invoice/driverPayment.js","pages/invoice/driver.js","redux/actions/unitAction.js","pages/invoice/product.js","pages/invoice/detail.js","pages/cheque/style.js","pages/cheque/cashSelector.js","pages/cheque/spendCheque.js","pages/cheque/list.js","pages/cheque/detail.js","pages/payment/filter.js","pages/payment/list.js","pages/payment/detail.js","pages/product/style.js","pages/product/amountBrif.js","pages/product/transfer.js","pages/product/list.js","pages/product/amount.js","pages/product/detail.js","pages/depot/style.js","pages/depot/amountBrif.js","pages/depot/list.js","pages/depot/detail.js","pages/cash/style.js","pages/cash/transfer.js","pages/cash/list.js","pages/cash/detail.js","pages/driver/style.js","pages/driver/filter.js","pages/driver/list.js","pages/driver/account.js","pages/driver/detail.js","pages/setting/style.js","pages/setting/list.js","pages/category/style.js","pages/category/detail.js","pages/category/index.js","pages/traffic/register.js","pages/employee/logFilter.js","pages/employee/log.js","pages/accountNumber/style.js","pages/accountNumber/detail.js","pages/accountNumber/list.js","pages/cash/paymentDetail.js","pages/cash/paymentReport.js","pages/loan/style.js","pages/loan/detail.js","pages/loan/list.js","components/Layout/index.js","pages/error/styles.js","pages/error/logo.svg","pages/error/Error.js","pages/login/styles.js","pages/login/logo.svg","pages/login/111.jpg","pages/login/Login.js","components/App.js","serviceWorker.js","themes/RTL.js","index.js"],"names":["Constant","API_ADDRESS","TABLE_PAGE_SIZE","EMPLOYEE_CONTACRT","value","label","TRAFFIC_STATUS","PRESENT","APSET","UNITS_MAP","KILOGRAM","GRAM","TON","BOX","SHEL","CUBICMETERS","PALLET","ACTION_TYPES","SHOW_ALERT","HIDE_ALERT","SHOW_DIALOG","HIDE_DIALOG","LOG_IN_USER","LOG_OUT_USER","GET_UNITS","PERSON_TYPE","EMPLOYEE","CUSTOMER","USER","DRIVER","PERSON","STORAGE","CURRENT_USER","TOKEN","MODE","CURRENT_LINK","PRODUCT_UNITS","VALIDATION","REQUIRED","MOBILE_NUMBER","PASSWORD","CARD_NUMBER","POSITIVE_NUMBER","MESSAGES","ERROR_MESSAGE","BAD_CREDENTIAL","PERSON_STATUS","DEBTOR","NODEBT","CREDITOR","PAYMENT_TYPE","INCOME","OUTCOME","ALL","INVOICE_TYPE","SELL","BUY","ALL_PERMISSIONS","USER_SHOW","USER_EDIT","CUSTOMER_SHOW","CUSTOMER_EDIT","DRIVER_SHOW","DRIVER_EDIT","PRODUCT_SHOW","PRODUCT_EDIT","DEPOT_SHOW","DEPOT_EDIT","ACCOUNT_SHOW","ACCOUNT_EDIT","PAYMENT_SHOW","PAYMENT_EDIT","INVOICE_SHOW","INVOICE_EDIT","CASH_DESK_SHOW","CASH_DESK_EDIT","CHEQUE_SHOW","CHEQUE_EDIT","PERMISSIONS","BANK_TRANSACTION_TYPE","initialState","show","text","component","title","size","disableCloseButton","confirm","names","onAction","Storage","setItem","key","data","JSON","stringify","localStorage","getItem","parse","removeItem","unitReducer","state","action","type","payload","appReducer","combineReducers","alert","option","dialog","filter","item","name","unit","rootReducer","store","createStore","applyMiddleware","thunk","dispatch","Alert","useSelector","handleClose","event","reason","AlertAction","Snackbar","open","autoHideDuration","onClose","elevation","variant","severity","styles","makeStyles","theme","container","padding","overflowX","display","justifyContent","alignItems","borderBottom","palette","grey","light","Modal","classes","map","Grow","in","Grid","xs","sm","Number","style","boxShadow","borderRadius","position","zIndex","top","backgroundColor","left","transform","className","Typography","Button","color","onClick","primary","secondary","warning","success","info","gray","defaultTheme","direction","main","dark","contrastText","danger","hint","background","default","customShadows","widget","widgetDark","widgetWide","overrides","MuiBackdrop","root","MuiMenu","paper","MuiSelect","icon","MuiListItem","button","MuiTouchRipple","child","MuiTableRow","height","MuiTableCell","paddingLeft","head","fontSize","body","PrivateSwitchBase","marginLeft","themes","createMuiTheme","typography","fontFamily","h1","h2","h3","h4","h5","h6","maxWidth","content","flexGrow","spacing","width","minHeight","contentShift","transition","transitions","create","easing","sharp","duration","enteringScreen","fakeToolbar","mixins","toolbar","link","logotype","marginRight","fontWeight","whiteSpace","breakpoints","down","appBar","drawer","leavingScreen","paddingRight","hide","grow","search","fade","common","black","cursor","searchFocused","up","searchIcon","right","searchIconOpened","inputRoot","inputInput","messageContent","flexDirection","headerMenu","marginTop","headerMenuList","headerMenuItem","headerMenuButton","headerMenuButtonSandwich","headerMenuButtonCollapse","headerIcon","headerIconCollapse","profileMenu","minWidth","profileMenuUser","profileMenuItem","profileMenuIcon","profileMenuLink","textDecoration","messageNotification","messageNotificationSide","messageNotificationBodySide","sendMessageButton","margin","marginBottom","textTransform","sendButtonIcon","purchaseBtn","chip","allIcon","incomeIcon","useStyles","badge","Badge","children","colorBrightness","props","Styled","createStyled","getColor","useTheme","styledProps","classnames","weight","getFontWeight","getFontSize","brigtness","multiplier","defaultSize","options","withStyles","LayoutStateContext","React","createContext","LayoutDispatchContext","layoutReducer","isSidebarOpened","Error","LayoutProvider","useReducer","Provider","useLayoutState","context","useContext","undefined","useLayoutDispatch","toggleSidebar","UserStateContext","UserDispatchContext","userReducer","isAuthenticated","currentUser","UserProvider","useUserState","useUserDispatch","loginUser","loginRequest","username","password","history","setIsLoading","setError","a","execute","result","storageService","token","push","http","axios","baseURL","constants","headers","interceptors","response","use","config","method","url","error","code","message","Promise","reject","getProperUrl","urlParams","substring","indexOf","length","useApi","args","useState","pending","setPending","setResult","includes","convertParamsToQueryString","params","URLSearchParams","pickBy","identity","toString","getQueryString","param","URL","window","location","href","replace","searchParams","get","getRandomColorFromTheme","colors","Math","floor","random","getRandomNumber","min","max","persianNumber","en","number","t","substr","hasPermission","permit","FREE","permissions","MainDetail","onSubmit","onDismiss","useForm","control","handleSubmit","errors","reset","isPassword","setIsPassword","passwordRef","useRef","changePasswordRequest","onChangeViewClick","id","oldPassword","prePassword","newPassword","render","onChange","TextField","helperText","fullWidth","rules","required","minLength","inputRef","InputProps","endAdornment","InputAdornment","clsx","repassword","validate","current","Header","date","useHistory","layoutState","layoutDispatch","userDispatch","useLocation","mailMenu","setMailMenu","setProfileMenu","cheques","setCheques","getDashboardRequest","getChequeNotify","notify","onSubmitChangePassword","onDismissChangePassword","dialogAction","useEffect","AppBar","Toolbar","IconButton","classNames","ArrowForward","Date","getDay","toLocaleDateString","format","ticking","timezone","aria-haspopup","aria-controls","e","currentTarget","badgeContent","Menu","Boolean","anchorEl","MenuListProps","disableAutoFocusItem","Divider","MenuItem","chequeDueDate","person","price","Chip","ChangePassword","signOut","menuButton","flexShrink","drawerOpen","drawerClose","mobileBackButton","only","externalLink","linkActive","linkNested","linkIcon","linkIconActive","linkText","linkTextActive","linkTextHidden","opacity","nestedList","sectionTitle","divider","dotBase","dotSmall","dotLarge","Dot","SidebarLink","nested","permission","isOpen","setIsOpen","isLinkActive","pathname","ListItem","linkRoot","disableRipple","ListItemIcon","ListItemText","Link","preventDefault","to","Inbox","Collapse","timeout","unmountOnExit","List","disablePadding","childrenLink","innerWidth","values","md","structure","Constants","PRODCUT_SHOW","EMPLOYEE_SHOW","withRouter","isPermanent","setPermanent","addEventListener","handleWindowWidthChange","removeEventListener","Drawer","sidebarList","isSmallScreen","datePicker","paperTitle","card","visitsNumberContainer","paddingBottom","progressSection","progressTitle","progress","pieChartLegendWrapper","legendItemContainer","fullHeightBody","tableWidget","progressBarPrimary","progressBarSecondary","performanceLegendWrapper","legendElement","legendElementText","serverOverviewElement","serverOverviewElementText","serverOverviewElementChartWrapper","mainChartBody","mainChartHeader","flexWrap","mainChartHeaderLabels","order","mainChartHeaderLabel","mainChartSelectRoot","borderColor","mainChartSelect","mainChartLegentElement","widgetWrapper","widgetHeader","widgetRoot","widgetBody","noPadding","overflow","moreButton","noWidgetShadow","Widget","noBodyPadding","bodyClass","header","disableWidgetMenu","noHeaderPadding","headerClass","moreButtonRef","isMoreMenuOpen","setMoreMenuOpen","Paper","Fragment","noWrap","bottom","SimplePaper","RADIAN","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","radius","index","x","cos","y","sin","fill","textAnchor","dominantBaseline","toFixed","empoyeeTrafficChart","subject","A","trafficDayliChart","Dashboard","pieChart","setPieChart","paymentChart","setPaymentChart","factorChart","setFactorChart","showFilterBoxPayment","setShowFilterBoxPayment","showFilterBoxFactor","setShowFilterBoxFactor","moment","selectedFromDateFactor","handleFromDateChangeFactor","selectedToDateFactor","handleToDateChangeFactor","selectedFromDatePayment","handleFromDateChangePayment","selectedToDatePayment","handleToDateChangePayment","getPaymentRequest","_d","toISOString","getFactorRequest","onClickPaper","onChnageDateFactor","onChnageDatePayment","getPieChartData","dashboardChart","cashDesks","newCashDesks","getPaymentChart","chart","payments","getFactorChart","invoices","lg","upperTitle","ResponsiveContainer","AreaChart","getRandomData","Area","dataKey","stroke","strokeWidth","fillOpacity","PieChart","Pie","startAngle","endAngle","paddingAngle","entry","Cell","RadarChart","PolarGrid","PolarAngleAxis","PolarRadiusAxis","Radar","labelLine","amount","DatePicker","autoOk","inputVariant","okLabel","cancelLabel","labelFunc","class","LineChart","CartesianGrid","strokeDasharray","XAxis","YAxis","Line","activeDot","r","BarChart","Bar","lastValue","maxDiff","array","Array","randomValue","TableRowMenu","hadleAction","setAnchorEl","aria-label","keepMounted","PaperProps","maxHeight","ITEM_HEIGHT","useToolbarStyles","highlight","lighten","box","TableTop","onAdd","FilterComponent","handleSearch","toolbarClass","addButtonClass","minimal","defaultSearch","showSearchText","setShowSearchText","showFilterBox","setShowFilterBox","searchText","setSearchText","target","onKeyDown","Tooltip","TableHeader","orderBy","onRequestSort","headCells","TableHead","TableRow","headCell","TableCell","textAlign","sortDirection","TableSortLabel","active","property","TablePaging","handleChangePage","count","handleChangeRowsPerPage","page","rowsPerPage","TablePagination","rowsPerPageOptions","onChangePage","onChangeRowsPerPage","labelRowsPerPage","backIconButtonText","nextIconButtonText","labelDisplayedRows","from","table","CustomSkeleton","headCount","Skeleton","MainList","setOrder","setOrderBy","setSearch","setPage","pageSize","setPageSize","list","setList","total","setTotal","getUserRequest","deleteUseRequest","getData","userList","CASH_LIST","Slide","TableContainer","Table","rowCount","TableBody","row","isAdmin","hover","tabIndex","firstName","lastName","mobile","phone","types","edit","delete","DialogActions","handleAction","colSpan","newPage","parseInt","Circular","flex","heght","CircularProgress","Permission","defaultPermissions","userAccess","setUserAccess","overflowY","FormControlLabel","Checkbox","checked","i","handleChange","detail","setDetail","addUserRequest","editUserRequest","detailUserRequest","onSubmitPermission","onDismissPermission","getDetail","onShowPermissionDialog","maxLength","address","status","rootSelect","personType","DEBTIOR","Filter","onFilter","filterData","setFilterData","prop","select","setFilter","getCustomerRequest","customerList","accountRemaining","transaction","DeleteIcon","EditIcon","Account","defaultValues","banks","setBanks","bank","selectedBank","setSelectedBank","getBankRequest","getBanks","SelectProps","src","logo","alt","accountCardNumber","accountNumber","accountShaba","multiline","rows","description","newId","uuid","find","isUpdate","accounts","setAccounts","category","setCategory","customerCategory","setCustomerCategory","addCustomerRequest","editCustomerRequest","detailCustomerRequest","customerCategoryRequest","deleteAccountRequest","newAccounts","newData","bankId","allData","setTimeout","onReject","getCustomerCategory","onSubmitAccount","findIndex","accounstTmp","onDismissAccount","onShowDialog","handleDeleteAccount","customerId","PAYMENT_LIST","getTableTitle","toLocaleString","salary","salaryPaperLeft","salaryPaperRight","ABSET","CONTERACT_TYPE","DEPOT","FACTORY","getEmployeeRequest","employeeList","contractType","traffic","paddingTop","selectedGender","setSelectedGender","selectedContract","setSelectedContract","addEmployeeRequest","editEmployeeRequest","detailEmployeeRequest","gender","RadioGroup","Radio","tab","outgoIcon","selectedButton","selectedPerson","setSelectedPerson","selectedFromDate","handleFromDateChange","selectedToDate","handleToDateChange","customers","setCustomers","getCustomersRequest","onChnageDate","getCustomers","Autocomplete","getOptionLabel","renderInput","invoiceType","setType","getInvoiceRequest","decodeURIComponent","invoiceList","Tabs","indicatorColor","textColor","centered","Tab","globalCustomer","customer","headCellsCustomer","headCellsPerson","onSelect","Payment","paymentType","handleChequeDueDateChange","transactionType","selectedTransaction","setSelectedTransaction","cashes","setCashes","cashDeskId","selectedCash","setSelectedCash","getCashRequest","getCashes","getSelectedBank","getSelectedCash","onDone","cashDesk","onChangeBank","onChangeCash","trackingCode","chequeNumber","bankBranch","chequePayTo","naghdPayHeadCells","cardPayHeadCells","checkPayHeadCells","PrePayment","forwardRef","ref","setPayments","useImperativeHandle","onSubmitPaymentActions","isEdit","handleSubmitEditPayment","handleSubmitAddPayment","newPayments","NAGHD","update","$push","CARD","CHECK","$set","handleDeletePayment","$splice","onDismissPayment","onClickPayment","getButtonTitle","ButtonGroup","startIcon","Accordion","expanded","disabled","AccordionSummary","accordionSummary","expandIcon","heading","AccordionDetails","ProductList","driverId","paymentRef","selectedDrivers","setSelectedDrivers","getDriverRequest","driverList","carName","endIcon","perUnit","showPerUnit","setShowPerUnit","units","unitAction","selectedProduct","setSelectedProduct","depotPicker","setDepotPicker","selectedDepot","setSelectedDepot","fee","productFee","setProductFee","getDepotProductRequest","getProductFeeRequest","getDepotRequest","onChangeSelectedProduct","targetUnit","unitBaseId","productList","onSelectProduct","productId","feeProduct","isEmpty","getDepotPicker","allUnits","getProductUnitPicker","depotId","totalFee","categories","join","totalStock","unitBase","driverHeadCell","selectedDate","handleDateChange","invoiceCategory","setInvoiceCategory","drivers","setDrivers","products","setProducts","invoicePerson","setInvoicePerson","setTotalFee","totalPayment","setTotalPayment","discount","setDiscount","pureFee","setPureFee","totalRemaining","setTotalRemaining","addInvoiceRequest","editInvoiceRequest","detailInvoiceRequest","invoiceCategoryRequest","addInvoicePaymentRequest","getPaymentInvoiceRequest","addPaymentDriverRequest","getInvoiceCategory","onSelectPerson","onDismissPerson","getProperProducts","newProducts","categoryId","invoicePayment","invoiceId","personId","paymentsArray","totalPrice","onSubmitDrivers","onDismissDrivers","onDismissDriverPayments","onSubmitDriverPayments","driverPayments","newDriver","selected","onSubmitProduct","product","ProductsTmp","onDismissProduct","onShowProductDialog","onTotalDriverPayments","reduce","n","factorPay","Hidden","smDown","origin","destination","inventory_2","console","log","carPlaque","handlePaymentDriver","handleDeleteDriver","handleDeleteProduct","cashesPrice","chequesPrice","banksPrice","CashSelector","chequeId","cashList","SpendCheque","persons","setPersons","setDescription","getPersonsRequest","getPersons","personList","setPaymentType","getChequeRequest","spendRequest","sleepRequest","onSelectCash","cashdeskId","onSubmitSpend","sleep","spend","revert","chequeList","cashDeskName","selectedType","setSelectedType","addCashRequest","editCashRequest","detailCashRequest","paymentList","paymentname","loan","isLoan","setIsLoan","setSelectedDate","addPaymentRequest","editPaymentRequest","detailPaymentRequest","stock","depot","deleteIcon","formControl","productName","setUnits","selectedUnit","setSelectedUnit","selectedSource","setSelectedSource","selectedDestination","setSelectedDestination","setAmount","selectedDriver","setSelectedDriver","driverPicker","setDriverPicker","isAddDriver","setIsAddDriver","setNewDriver","setPerUnit","getDriversRequest","categoryIdRequest","transferRequest","addDriverRequest","addTransferPaymentRequest","getDriverCategory","onSubmitTransfer","sourceDepotId","destinationDepotId","newAddedDriver","transferPayments","getDrivers","source","getUnits","getProductRequest","defaultUnit","stocks","transfer","seletedUnit","seletedDepot","amounts","setAmounts","selectedCategory","setSelectedCategory","addProductRequest","editProductRequest","detailProductRequest","getProductCategoryRequest","onSubmitAmount","amountTmp","onDismissAmount","filterAmounts","filteredAmount","newObject","perunit","getProductCategory","FormControl","InputLabel","htmlFor","Select","multiple","inputProps","handleDeleteAmount","setData","getAmountRequest","getAmount","depotList","depotCategory","setDepotCategory","addDepotRequest","editDepotRequest","detailDepotRequest","depotCategoryRequest","depotCategoryId","getDepotCategory","filterdCashes","sourceId","destinationId","deleteCashRequest","transferCashDesk","onDismissTransfer","driverCategory","setDriverCategory","driverCategoryRequest","editDriverRequest","detailDriverRequest","descendingComparator","b","getComparator","stableSort","comparator","stabilizedThis","el","sort","slice","defaultValue","setLabel","productCategory","setProductCategory","setAction","GetCustomerCategoryRequest","EditCustomerCategoryRequest","AddCustomerCategoryRequest","GetProductCategoryRequest","EditProductCategoryRequest","AddProductCategoryRequest","GetDepotCategoryRequest","EditDepotCategoryRequest","AddDepotCategoryRequest","GetInvoiceCategoryRequest","EditInvoiceCategoryRequest","AddInvoiceCategoryRequest","GetDriverCategoryRequest","EditDriverCategoryRequest","AddDriverCategoryRequest","invoice","driver","handleAdd","customerCategoryList","depotCategoryList","productCategoryList","invoiceCategoryList","driverCategoryList","addButton","enter","exit","logedEnter","logedExit","register","dateTime","clockConatiner","selectedTime","setSelectedTime","isEditTime","setIsEditTime","editTime","setEditTime","registerRequest","getTrafficRequest","editTrafficRequest","checkToday","employeeId","onEdit","tzOffset","getTimezoneOffset","handleTimeChange","onEditTime","time","toDateString","getTimesElement","times","TimePicker","ampm","orientation","openTo","employee","EmployeeLog","sum","setSum","jMoment","locale","startOf","details","fractionTime","overTime","totalTime","totalOverTime","totalFractionTime","img","grid","copyState","setCopyState","onCopy","copyField","AccountsNumber","setPerson","getCardRequest","onDismissDetail","cardList","personName","handleDetail","CASH","CHEQUE","BANK","PaymentReport","cashId","getPaymentByCashRequest","getLoanRequest","Layout","path","UserList","UserDetail","CustomerList","CustomerDetail","CustomerTransaction","EmployeeList","EmployeeDetail","DriverList","DriverDetail","CashList","CashDetail","CashPaymentReport","ChequeList","ChequeDetail","LoanList","LoanDetail","InvoiceList","InvoiceDetail","PaymentList","PaymentDetail","ProductDetail","ProductTransfer","DepotList","DepotDetail","Setting","Category","Traffic","TrafficDetail","logotypeText","logotypeIcon","paperRoot","textRow","errorCode","safetyText","backButton","backgroundImage","logotypeContainer","logotypeImage","formContainer","form","greeting","subGreeting","googleButton","googleButtonCreating","googleIcon","creatingButtonContainer","createAccountButton","formDividerContainer","formDividerWord","formDivider","errorMessage","textFieldUnderline","borderBottomColor","textField","formButtons","forgetButton","loginLoader","copyright","isLoading","usernameValue","setUsernameValue","passwordValue","setPasswordValue","unitAcion","back","input","onKeyPress","which","App","exact","PrivateRoute","PublicRoute","Login","rest","createElement","hostname","match","jss","plugins","jssPreset","rtl","RTL","StylesProvider","loadPersian","dialect","usePersianDigits","ReactDOM","utils","JalaliUtils","ThemeProvider","Themes","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.61c5ec0c.chunk.js","sourcesContent":["const Constant = {\r\n  // API_ADDRESS: \"http://185.204.197.95:5000/\",\r\n  API_ADDRESS: \"http://account.toosbloor.ir\",\r\n  TABLE_PAGE_SIZE: 10,\r\n  EMPLOYEE_CONTACRT: [\r\n    { value: \"FACTORY\", label: \"کارخانه\" },\r\n    { value: \"DEPOT\", label: \"انبار\" },\r\n  ],\r\n  TRAFFIC_STATUS: {\r\n    PRESENT: \"حاضر\",\r\n    APSET: \"غایب\",\r\n  },\r\n  UNITS_MAP: {\r\n    KILOGRAM: \"کیلوگرم\",\r\n    GRAM: \"گرم\",\r\n    TON: \"تن\",\r\n    BOX: \"کارتن\",\r\n    SHEL: \"شل\",\r\n    CUBICMETERS: \"مترمکعب\",\r\n    PALLET: \"پالت\",\r\n  },\r\n  ACTION_TYPES: {\r\n    SHOW_ALERT: \"SHOW_ALERT\",\r\n    HIDE_ALERT: \"HIDE_ALERT\",\r\n    SHOW_DIALOG: \"SHOW_DIALOG\",\r\n    HIDE_DIALOG: \"HIDE_DIALOG\",\r\n    LOG_IN_USER: \"LOG_IN_USER\",\r\n    LOG_OUT_USER: \"LOG_OUT_USER\",\r\n    GET_UNITS: \"GET_UNITS\",\r\n  },\r\n  PERSON_TYPE: {\r\n    EMPLOYEE: \"employee\",\r\n    CUSTOMER: \"customer\",\r\n    USER: \"user\",\r\n    DRIVER: \"driver\",\r\n    PERSON: \"person\",\r\n  },\r\n  STORAGE: {\r\n    CURRENT_USER: \"CURRENT_USER\",\r\n    TOKEN: \"TOKEN\",\r\n    MODE: \"MODE\",\r\n    CURRENT_LINK: \"CURRENT_LINK\",\r\n    PRODUCT_UNITS: \"PRODUCT_UNITS\",\r\n  },\r\n  VALIDATION: {\r\n    REQUIRED: \"این فیلد الزامی است\",\r\n    MOBILE_NUMBER: \"موبایل باید 11 عدد داشته باشد\",\r\n    PASSWORD: \"رمز عبور باید حداقل 5 حرف یا رقم باشد\",\r\n    CARD_NUMBER: \"شماره کارت باید 16 رقم باشد\",\r\n    POSITIVE_NUMBER: \"این عدد باید مثبت باشد\",\r\n  },\r\n  MESSAGES: {},\r\n  ERROR_MESSAGE: {\r\n    BAD_CREDENTIAL: \"نام کاربری یا رمز عبور اشتباه است\",\r\n  },\r\n  PERSON_STATUS: {\r\n    DEBTOR: \"بدهکار\",\r\n    NODEBT: \"بی حساب\",\r\n    CREDITOR: \"طلبکار\",\r\n  },\r\n  PAYMENT_TYPE: {\r\n    INCOME: \"دریافتی\",\r\n    OUTCOME: \"پرداختی\",\r\n    ALL: \"دریافتی و پرداختی\",\r\n  },\r\n  INVOICE_TYPE: {\r\n    SELL: \"فروش\",\r\n    BUY: \"خرید\",\r\n  },\r\n\r\n  ALL_PERMISSIONS: {\r\n    USER_SHOW: \"USER_SHOW\",\r\n    USER_EDIT: \"USER_EDIT\",\r\n    CUSTOMER_SHOW: \"CUSTOMER_SHOW\",\r\n    CUSTOMER_EDIT: \"CUSTOMER_EDIT\",\r\n    DRIVER_SHOW: \"DRIVER_SHOW\",\r\n    DRIVER_EDIT: \"DRIVER_EDIT\",\r\n    PRODUCT_SHOW: \"PRODUCT_SHOW\",\r\n    PRODUCT_EDIT: \"PRODUCT_EDIT\",\r\n    DEPOT_SHOW: \"DEPOT_SHOW\",\r\n    DEPOT_EDIT: \"DEPOT_EDIT\",\r\n    ACCOUNT_SHOW: \"ACCOUNT_SHOW\",\r\n    ACCOUNT_EDIT: \"ACCOUNT_EDIT\",\r\n    PAYMENT_SHOW: \"PAYMENT_SHOW\",\r\n    PAYMENT_EDIT: \"PAYMENT_EDIT\",\r\n    INVOICE_SHOW: \"INVOICE_SHOW\",\r\n    INVOICE_EDIT: \"INVOICE_EDIT\",\r\n    CASH_DESK_SHOW: \"CASH_DESK_SHOW\",\r\n    CASH_DESK_EDIT: \"CASH_DESK_EDIT\",\r\n    CHEQUE_SHOW: \"CHEQUE_SHOW:\",\r\n    CHEQUE_EDIT: \"CHEQUE_EDIT\",\r\n  },\r\n  PERMISSIONS: [\r\n    { value: \"PAYMENT_SHOW\", label: \"لیست پرداختی و دریافتی\" },\r\n    { value: \"PAYMENT_EDIT\", label: \"ویرایش پرداختی و دریافتی \" },\r\n    { value: \"INVOICE_SHOW\", label: \"لیست فاکتور ها\" },\r\n    { value: \"INVOICE_EDIT\", label: \"ویرایش فاکتور ها\" },\r\n    { value: \"CASH_DESK_SHOW\", label: \"لیست صندوق ها\" },\r\n    { value: \"CASH_DESK_EDIT\", label: \"ویرایش صندوق ها\" },\r\n    { value: \"CHEQUE_SHOW\", label: \"لیست چک ها\" },\r\n    { value: \"CHEQUE_EDIT\", label: \"ویرایش چک ها\" },\r\n    { value: \"USER_SHOW\", label: \"لیست کاربران\" },\r\n    { value: \"USER_EDIT\", label: \"ویرایش کاربران\" },\r\n    { value: \"PRODCUT_SHOW\", label: \"لیست محصولات\" },\r\n    { value: \"PRODCUT_EDIT\", label: \"ویرایش محصولات\" },\r\n    { value: \"CUSTOMER_SHOW\", label: \"لیست مشتریان\" },\r\n    { value: \"CUSTOMER_EDIT\", label: \"ویرایش مشتریان\" },\r\n    { value: \"DRIVER_SHOW\", label: \"لیست رانندگان\" },\r\n    { value: \"DRIVER_EDIT\", label: \"ویرایش رانندگان\" },\r\n    { value: \"DEPOT_SHOW\", label: \"لیست انبارها\" },\r\n    { value: \"DEPOT_EDIT\", label: \"ویرایش انبارها\" },\r\n    { value: \"ACCOUNT_SHOW\", label: \"لیست حساب ها\" },\r\n    { value: \"ACCOUNT_EDIT\", label: \"ویرایش حساب ها\" },\r\n  ],\r\n  BANK_TRANSACTION_TYPE: [\r\n    { value: \"کارت به کارت\", label: \"کارت به کارت\" },\r\n    { value: \"دستگاه پوز\", label: \"دستگاه پوز\" },\r\n    { value: \"پایا/ساتنا\", label: \"پایا/ساتنا\" },\r\n    { value: \"واریز به/از حساب\", label: \"واریز به/از حساب\" },\r\n  ],\r\n};\r\nexport default Constant;\r\n","import Constant from \"../../helpers/constant\";\r\n\r\nconst initialState = {\r\n  show: false,\r\n  text: \"\",\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case Constant.ACTION_TYPES.SHOW_ALERT: {\r\n      return {\r\n        ...state,\r\n        ...action.option,\r\n        show: true,\r\n      };\r\n    }\r\n    case Constant.ACTION_TYPES.HIDE_ALERT: {\r\n      return {\r\n        ...state,\r\n        show: false,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import Constant from \"../../helpers/constant\";\r\nconst initialState = {\r\n  show: false,\r\n  component: null,\r\n  title: \"\",\r\n  size: \"8\",\r\n  disableCloseButton: false,\r\n  confirm: false,\r\n  names: [],\r\n  onAction: () => {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case Constant.ACTION_TYPES.SHOW_DIALOG: {\r\n      return {\r\n        ...state,\r\n        ...action.option,\r\n        names: [...state.names, action.option],\r\n      };\r\n    }\r\n    case Constant.ACTION_TYPES.HIDE_DIALOG: {\r\n      return {\r\n        names: state.names.filter((item) => item.name !== action.option.name),\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const Storage = {\r\n  setItem(key, data) {\r\n    if (typeof data === \"object\") {\r\n      data = JSON.stringify(data);\r\n    }\r\n    localStorage.setItem(key, data);\r\n  },\r\n\r\n  getItem(key) {\r\n    let obj = null;\r\n    const value = localStorage.getItem(key);\r\n    if (typeof value === \"object\") {\r\n      obj = JSON.parse(value);\r\n    } else {\r\n      obj = value;\r\n    }\r\n\r\n    return obj;\r\n  },\r\n\r\n  removeItem(key) {\r\n    localStorage.removeItem(key);\r\n  },\r\n};\r\n\r\nexport default Storage;\r\n","import Constant from \"../../helpers/constant\";\r\nimport Storage from \"../../services/storage\";\r\n\r\nconst initialState = JSON.parse(\r\n  Storage.getItem(Constant.STORAGE.PRODUCT_UNITS),\r\n);\r\n\r\nfunction unitReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case Constant.ACTION_TYPES.GET_UNITS: {\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default unitReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport alert from \"./AlertReducer\";\r\nimport dialog from \"./dialogReducer\";\r\nimport unit from \"./unitReducer\";\r\n\r\nconst appReducer = combineReducers({\r\n  alert,\r\n  dialog,\r\n  unit,\r\n});\r\n\r\nconst rootReducer = (state, action) => {\r\n  return appReducer(state, action);\r\n};\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\n\r\nimport rootReducer from \"../reducers\"\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport default store\r\n","import Constant from \"../../helpers/constant\";\r\nimport store from \"../store\";\r\n\r\nexport default {\r\n  show(option) {\r\n    store.dispatch({ type: Constant.ACTION_TYPES.SHOW_ALERT, option });\r\n  },\r\n\r\n  hide() {\r\n    store.dispatch({ type: Constant.ACTION_TYPES.HIDE_ALERT });\r\n  },\r\n};\r\n","import React from \"react\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nimport AlertAction from \"../../redux/actions/AlertAction\";\r\n\r\nconst Alert = function () {\r\n  const { show, text, type } = useSelector((state) => state.alert);\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    AlertAction.hide();\r\n  };\r\n\r\n  return (\r\n    <Snackbar open={show} autoHideDuration={6000} onClose={handleClose}>\r\n      <MuiAlert\r\n        elevation={6}\r\n        variant=\"filled\"\r\n        onClose={handleClose}\r\n        severity={type}\r\n      >\r\n        {text}\r\n      </MuiAlert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import Constant from \"../../helpers/constant\";\r\nimport store from \"../store\";\r\n\r\nexport default {\r\n  show(option) {\r\n    store.dispatch({ type: Constant.ACTION_TYPES.SHOW_DIALOG, option });\r\n  },\r\n\r\n  hide(option) {\r\n    store.dispatch({ type: Constant.ACTION_TYPES.HIDE_DIALOG, option });\r\n  },\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const styles = makeStyles((theme) => ({\r\n  container: {\r\n    padding: \"20px\",\r\n    overflowX: \"hidden\",\r\n  },\r\n  title: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    borderBottom: `1px solid ${theme.palette.grey.light}`,\r\n    padding: \"20px\",\r\n  },\r\n  confirm: {\r\n    padding: \"0px 20px 20px\",\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport dialogAction from \"../../redux/actions/dialogAction\";\r\nimport { Grid, Grow, Typography, Button } from \"@material-ui/core\";\r\nimport { styles } from \"./Modal.Style\";\r\n\r\nconst Modal = function () {\r\n  const classes = styles();\r\n  const { names } = useSelector((state) => state.dialog);\r\n\r\n  const onClose = function (item) {\r\n    dialogAction.hide(item.name);\r\n  };\r\n\r\n  return (\r\n    // <Dialog\r\n    //   fullWidth\r\n    //   maxWidth={size}\r\n    //   onClose={onClose}\r\n    //   aria-labelledby=\"simple-dialog-title\"\r\n    //   open={x()}\r\n    //   disableBackdropClick\r\n    // >\r\n    names.map((item) => (\r\n      <Grow in={true}>\r\n        <Grid\r\n          xs={12}\r\n          sm={Number(item.size)}\r\n          container\r\n          style={{\r\n            boxShadow: \"0 3px 10px rgb(0 0 0 / 0.2)\",\r\n            borderRadius: 5,\r\n            padding: 20,\r\n            position: \"fixed\",\r\n            zIndex: 1000,\r\n            top: \"50%\",\r\n            backgroundColor: \"#fff\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%,-50%)\",\r\n          }}\r\n        >\r\n          <Grid item xs={12} className={classes.title}>\r\n            <Typography variant=\"h6\">{item.title}</Typography>\r\n            {/* {!item.disableCloseButton && (\r\n              <i\r\n                className=\"material-icons\"\r\n                onClick={() => onClose(item)}\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                clear\r\n              </i>\r\n            )} */}\r\n          </Grid>\r\n          {!item.confirm && (\r\n            <Grid item xs={12} className={classes.container}>\r\n              {item.component}\r\n            </Grid>\r\n          )}\r\n          {item.confirm && (\r\n            <Grid item xs={12} className={classes.confirm}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={item.onAction}\r\n              >\r\n                تایید\r\n              </Button>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </Grow>\r\n    ))\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","export const primary = \"#00989D\";\r\nexport const secondary = \"#FF5C93\";\r\nexport const warning = \"#FFC260\";\r\nexport const success = \"#3CD4A0\";\r\nexport const info = \"#9013FE\";\r\nexport const gray = \"#B9B9B9\";\r\nexport const orange = \"#F95700FF\";\r\nexport const purple = \"#E69A8DFF\";\r\n\r\nconst defaultTheme = {\r\n  direction: \"rtl\",\r\n\r\n  palette: {\r\n    primary: {\r\n      main: primary,\r\n      light: \"#dcf0fa\",\r\n      dark: primary,\r\n    },\r\n    secondary: {\r\n      main: secondary,\r\n      light: secondary,\r\n      dark: secondary,\r\n      contrastText: \"#FFFFFF\",\r\n    },\r\n    danger: {\r\n      main: secondary,\r\n      light: secondary,\r\n      dark: secondary,\r\n      contrastText: \"#FFFFFF\",\r\n    },\r\n    warning: {\r\n      main: warning,\r\n      light: warning,\r\n      dark: warning,\r\n    },\r\n    success: {\r\n      main: success,\r\n      light: success,\r\n      dark: \"#388e3c\",\r\n    },\r\n    info: {\r\n      main: info,\r\n      light: info,\r\n      dark: info,\r\n    },\r\n    gray: {\r\n      main: gray,\r\n      light: gray,\r\n      dark: gray,\r\n    },\r\n    text: {\r\n      primary: \"#6E6E6E\",\r\n      secondary: \"#6E6E6E\",\r\n      hint: \"#B9B9B9\",\r\n    },\r\n    background: {\r\n      default: \"#F6F7FF\",\r\n      light: \"#F3F5FF\",\r\n    },\r\n  },\r\n  customShadows: {\r\n    widget:\r\n      \"0px 3px 11px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\r\n    widgetDark:\r\n      \"0px 3px 18px 0px #4558A3B3, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\r\n    widgetWide:\r\n      \"0px 12px 33px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\r\n  },\r\n  overrides: {\r\n    MuiBackdrop: {\r\n      root: {\r\n        backgroundColor: \"#4A4A4A1A\",\r\n      },\r\n    },\r\n    MuiMenu: {\r\n      paper: {\r\n        boxShadow:\r\n          \"0px 3px 11px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\r\n      },\r\n    },\r\n    MuiSelect: {\r\n      icon: {\r\n        color: \"#B9B9B9\",\r\n      },\r\n    },\r\n    MuiListItem: {\r\n      root: {\r\n        \"&$selected\": {\r\n          backgroundColor: \"#F3F5FF !important\",\r\n          \"&:focus\": {\r\n            backgroundColor: \"#F3F5FF\",\r\n          },\r\n        },\r\n      },\r\n      button: {\r\n        \"&:hover, &:focus\": {\r\n          backgroundColor: \"#F3F5FF\",\r\n        },\r\n      },\r\n    },\r\n    MuiTouchRipple: {\r\n      child: {\r\n        backgroundColor: \"white\",\r\n      },\r\n    },\r\n    MuiTableRow: {\r\n      root: {\r\n        height: 45,\r\n      },\r\n    },\r\n    MuiTableCell: {\r\n      root: {\r\n        borderBottom: \"1px solid rgba(224, 224, 224, .5)\",\r\n        paddingLeft: 24,\r\n      },\r\n      head: {\r\n        fontSize: \"0.95rem\",\r\n      },\r\n      body: {\r\n        fontSize: \"0.95rem\",\r\n      },\r\n    },\r\n    PrivateSwitchBase: {\r\n      root: {\r\n        marginLeft: 10,\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nexport default defaultTheme;\r\n","import defaultTheme from \"./default\";\r\n\r\nimport { createMuiTheme } from \"@material-ui/core\";\r\n\r\nconst overrides = {\r\n  typography: {\r\n    fontFamily: \"IRANSans\",\r\n    h1: {\r\n      fontSize: \"3rem\",\r\n    },\r\n    h2: {\r\n      fontSize: \"2rem\",\r\n    },\r\n    h3: {\r\n      fontSize: \"1.64rem\",\r\n    },\r\n    h4: {\r\n      fontSize: \"1.5rem\",\r\n    },\r\n    h5: {\r\n      fontSize: \"1.285rem\",\r\n    },\r\n    h6: {\r\n      fontSize: \"1.142rem\",\r\n    },\r\n  },\r\n};\r\n\r\nconst themes = {\r\n  default: createMuiTheme({ ...defaultTheme, ...overrides }),\r\n};\r\n\r\nexport default themes;\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    maxWidth: \"100vw\",\r\n    overflowX: \"hidden\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    width: `calc(100vw - 240px)`,\r\n    minHeight: \"100vh\",\r\n  },\r\n  contentShift: {\r\n    width: `calc(100vw - ${240 + theme.spacing(6)}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  fakeToolbar: {\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  link: {\r\n    '&:not(:first-child)': {\r\n      paddingLeft: 15\r\n    }\r\n  }\r\n}));\r\n","import { makeStyles } from \"@material-ui/styles\";\r\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  logotype: {\r\n    color: \"white\",\r\n    marginLeft: theme.spacing(2.5),\r\n    marginRight: theme.spacing(2.5),\r\n    fontWeight: 500,\r\n    fontSize: 18,\r\n    whiteSpace: \"nowrap\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  appBar: {\r\n    width: \"100vw\",\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  toolbar: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: 25,\r\n    paddingLeft: theme.spacing(2.5),\r\n    width: 36,\r\n    backgroundColor: fade(theme.palette.common.black, 0),\r\n    transition: theme.transitions.create([\"background-color\", \"width\"]),\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n      backgroundColor: fade(theme.palette.common.black, 0.08),\r\n    },\r\n  },\r\n  searchFocused: {\r\n    backgroundColor: fade(theme.palette.common.black, 0.08),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: 250,\r\n    },\r\n  },\r\n  searchIcon: {\r\n    width: 36,\r\n    right: 0,\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    transition: theme.transitions.create(\"right\"),\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n  searchIconOpened: {\r\n    right: theme.spacing(1.25),\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n  },\r\n  inputInput: {\r\n    height: 36,\r\n    padding: 0,\r\n    paddingRight: 36 + theme.spacing(1.25),\r\n    width: \"100%\",\r\n  },\r\n  messageContent: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  headerMenu: {\r\n    marginTop: theme.spacing(7),\r\n  },\r\n  headerMenuList: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  headerMenuItem: {\r\n    \"&:hover, &:focus\": {\r\n      backgroundColor: theme.palette.background.light,\r\n      // color: \"white\",\r\n    },\r\n  },\r\n  headerMenuButton: {\r\n    marginLeft: theme.spacing(2),\r\n    padding: theme.spacing(0.5),\r\n  },\r\n  headerMenuButtonSandwich: {\r\n    marginLeft: 9,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginLeft: 0,\r\n    },\r\n    padding: theme.spacing(0.5),\r\n  },\r\n  headerMenuButtonCollapse: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  headerIcon: {\r\n    fontSize: 28,\r\n    color: \"rgba(255, 255, 255, 0.35)\",\r\n  },\r\n  headerIconCollapse: {\r\n    color: \"white\",\r\n  },\r\n  profileMenu: {\r\n    minWidth: 165,\r\n  },\r\n  profileMenuUser: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    padding: theme.spacing(2),\r\n  },\r\n  profileMenuItem: {\r\n    color: theme.palette.text.hint,\r\n  },\r\n  profileMenuIcon: {\r\n    marginRight: theme.spacing(2),\r\n    color: theme.palette.text.hint,\r\n    \"&:hover\": {\r\n      color: theme.palette.primary.main,\r\n    },\r\n  },\r\n  profileMenuLink: {\r\n    fontSize: 16,\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n  messageNotification: {\r\n    width: \"500px\",\r\n    justifyContent: \"space-between\",\r\n    height: \"auto\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    \"&:hover, &:focus\": {\r\n      backgroundColor: theme.palette.background.light,\r\n    },\r\n  },\r\n  messageNotificationSide: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  messageNotificationBodySide: {\r\n    alignItems: \"flex-start\",\r\n    marginRight: 0,\r\n  },\r\n  sendMessageButton: {\r\n    margin: theme.spacing(4),\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n    textTransform: \"none\",\r\n  },\r\n  sendButtonIcon: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  purchaseBtn: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n    marginRight: theme.spacing(3),\r\n  },\r\n\r\n  chip: {\r\n    color: \"#fff\",\r\n  },\r\n  allIcon: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  INCOME: {\r\n    backgroundColor: theme.palette.success.main,\r\n  },\r\n  incomeIcon: {\r\n    color: theme.palette.success.main,\r\n  },\r\n  OUTCOME: {\r\n    backgroundColor: theme.palette.danger.main,\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport {\r\n  withStyles,\r\n  Badge as BadgeBase,\r\n  Typography as TypographyBase,\r\n  Button as ButtonBase,\r\n} from \"@material-ui/core\";\r\nimport { useTheme, makeStyles } from \"@material-ui/styles\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nvar useStyles = makeStyles(theme => ({\r\n  badge: {\r\n    fontWeight: 600,\r\n    height: 16,\r\n    minWidth: 16,\r\n  },\r\n}));\r\n\r\nfunction Badge({ children, colorBrightness, color, ...props }) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n  var Styled = createStyled({\r\n    badge: {\r\n      backgroundColor: getColor(color, theme, colorBrightness),\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Styled>\r\n      {styledProps => (\r\n        <BadgeBase\r\n          classes={{\r\n            badge: classnames(classes.badge, styledProps.classes.badge),\r\n          }}\r\n          {...props}\r\n        >\r\n          {children}\r\n        </BadgeBase>\r\n      )}\r\n    </Styled>\r\n  );\r\n}\r\n\r\nfunction Typography({\r\n  children,\r\n  weight,\r\n  size,\r\n  colorBrightness,\r\n  color,\r\n  ...props\r\n}) {\r\n  var theme = useTheme();\r\n\r\n  return (\r\n    <TypographyBase\r\n      style={{\r\n        color: getColor(color, theme, colorBrightness),\r\n        fontWeight: getFontWeight(weight),\r\n        fontSize: getFontSize(size, props.variant, theme),\r\n      }}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </TypographyBase>\r\n  );\r\n}\r\n\r\nfunction Button({ children, color, className, ...props }) {\r\n  var theme = useTheme();\r\n\r\n  var Styled = createStyled({\r\n    root: {\r\n      color: getColor(color, theme),\r\n    },\r\n    contained: {\r\n      backgroundColor: getColor(color, theme),\r\n      boxShadow: theme.customShadows.widget,\r\n      color: `${color ? \"white\" : theme.palette.text.primary} !important`,\r\n      \"&:hover\": {\r\n        backgroundColor: getColor(color, theme, \"light\"),\r\n        boxShadow: theme.customShadows.widgetWide,\r\n      },\r\n      \"&:active\": {\r\n        boxShadow: theme.customShadows.widgetWide,\r\n      },\r\n    },\r\n    outlined: {\r\n      color: getColor(color, theme),\r\n      borderColor: getColor(color, theme),\r\n    },\r\n    select: {\r\n      backgroundColor: theme.palette.primary.main,\r\n      color: \"#fff\",\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Styled>\r\n      {({ classes }) => (\r\n        <ButtonBase\r\n          classes={{\r\n            contained: classes.contained,\r\n            root: classes.root,\r\n            outlined: classes.outlined,\r\n          }}\r\n          {...props}\r\n          className={classnames(\r\n            {\r\n              [classes.select]: props.select,\r\n            },\r\n            className,\r\n          )}\r\n        >\r\n          {children}\r\n        </ButtonBase>\r\n      )}\r\n    </Styled>\r\n  );\r\n}\r\n\r\nexport { Badge, Typography, Button };\r\n\r\n// ########################################################################\r\n\r\nfunction getColor(color, theme, brigtness = \"main\") {\r\n  if (color && theme.palette[color] && theme.palette[color][brigtness]) {\r\n    return theme.palette[color][brigtness];\r\n  }\r\n}\r\n\r\nfunction getFontWeight(style) {\r\n  switch (style) {\r\n    case \"light\":\r\n      return 300;\r\n    case \"medium\":\r\n      return 500;\r\n    case \"bold\":\r\n      return 600;\r\n    default:\r\n      return 400;\r\n  }\r\n}\r\n\r\nfunction getFontSize(size, variant = \"\", theme) {\r\n  var multiplier;\r\n\r\n  switch (size) {\r\n    case \"sm\":\r\n      multiplier = 0.8;\r\n      break;\r\n    case \"md\":\r\n      multiplier = 1.5;\r\n      break;\r\n    case \"xl\":\r\n      multiplier = 2;\r\n      break;\r\n    case \"xxl\":\r\n      multiplier = 3;\r\n      break;\r\n    default:\r\n      multiplier = 1;\r\n      break;\r\n  }\r\n\r\n  var defaultSize =\r\n    variant && theme.typography[variant]\r\n      ? theme.typography[variant].fontSize\r\n      : theme.typography.fontSize + \"px\";\r\n\r\n  return `calc(${defaultSize} * ${multiplier})`;\r\n}\r\n\r\nfunction createStyled(styles, options) {\r\n  var Styled = function(props) {\r\n    const { children, ...other } = props;\r\n    return children(other);\r\n  };\r\n\r\n  return withStyles(styles, options)(Styled);\r\n}\r\n","import React from \"react\";\r\n\r\nvar LayoutStateContext = React.createContext();\r\nvar LayoutDispatchContext = React.createContext();\r\n\r\nfunction layoutReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"TOGGLE_SIDEBAR\":\r\n      return { ...state, isSidebarOpened: !state.isSidebarOpened };\r\n    default: {\r\n      throw new Error(`Unhandled action type: ${action.type}`);\r\n    }\r\n  }\r\n}\r\n\r\nfunction LayoutProvider({ children }) {\r\n  var [state, dispatch] = React.useReducer(layoutReducer, {\r\n    isSidebarOpened: true,\r\n  });\r\n  return (\r\n    <LayoutStateContext.Provider value={state}>\r\n      <LayoutDispatchContext.Provider value={dispatch}>\r\n        {children}\r\n      </LayoutDispatchContext.Provider>\r\n    </LayoutStateContext.Provider>\r\n  );\r\n}\r\n\r\nfunction useLayoutState() {\r\n  var context = React.useContext(LayoutStateContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useLayoutState must be used within a LayoutProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\nfunction useLayoutDispatch() {\r\n  var context = React.useContext(LayoutDispatchContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useLayoutDispatch must be used within a LayoutProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\nexport { LayoutProvider, useLayoutState, useLayoutDispatch, toggleSidebar };\r\n\r\n// ###########################################################\r\nfunction toggleSidebar(dispatch) {\r\n  dispatch({\r\n    type: \"TOGGLE_SIDEBAR\",\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport Constant from \"../helpers/constant\";\r\nimport storageService from \"../services/storage\";\r\n\r\nvar UserStateContext = React.createContext();\r\nvar UserDispatchContext = React.createContext();\r\n\r\nfunction userReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"LOGIN_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        currentUser: action.payload,\r\n      };\r\n    case \"SIGN_OUT_SUCCESS\":\r\n      return { ...state, isAuthenticated: false, currentUser: {} };\r\n    default: {\r\n      throw new Error(`Unhandled action type: ${action.type}`);\r\n    }\r\n  }\r\n}\r\n\r\nfunction UserProvider({ children }) {\r\n  var [state, dispatch] = React.useReducer(userReducer, {\r\n    isAuthenticated: !!localStorage.getItem(Constant.STORAGE.TOKEN),\r\n    currentUser: JSON.parse(\r\n      localStorage.getItem(Constant.STORAGE.CURRENT_USER),\r\n    ),\r\n  });\r\n\r\n  return (\r\n    <UserStateContext.Provider value={state}>\r\n      <UserDispatchContext.Provider value={dispatch}>\r\n        {children}\r\n      </UserDispatchContext.Provider>\r\n    </UserStateContext.Provider>\r\n  );\r\n}\r\n\r\nfunction useUserState() {\r\n  var context = React.useContext(UserStateContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useUserState must be used within a UserProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\nfunction useUserDispatch() {\r\n  var context = React.useContext(UserDispatchContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useUserDispatch must be used within a UserProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\nexport { UserProvider, useUserState, useUserDispatch, loginUser, signOut };\r\n\r\n// ###########################################################\r\n\r\nasync function loginUser(\r\n  loginRequest,\r\n  dispatch,\r\n  username,\r\n  password,\r\n  history,\r\n  setIsLoading,\r\n  setError,\r\n) {\r\n  setError(false);\r\n  setIsLoading(true);\r\n  const result = await loginRequest.execute({ username, password });\r\n\r\n  if (result) {\r\n    storageService.setItem(Constant.STORAGE.TOKEN, result.data.token);\r\n    storageService.setItem(Constant.STORAGE.CURRENT_USER, result.data);\r\n    setError(null);\r\n    setIsLoading(false);\r\n    dispatch({ type: \"LOGIN_SUCCESS\", payload: result.data });\r\n\r\n    history.push(\"/app/dashboard\");\r\n  } else {\r\n    setError(true);\r\n    setIsLoading(false);\r\n  }\r\n}\r\n\r\nfunction signOut(dispatch, history) {\r\n  localStorage.removeItem(Constant.STORAGE.TOKEN);\r\n  localStorage.removeItem(Constant.STORAGE.CURRENT_USER);\r\n  dispatch({ type: \"SIGN_OUT_SUCCESS\" });\r\n  history.push(\"/login\");\r\n}\r\n","import axios from \"axios\";\r\nimport { cacheAdapterEnhancer } from \"axios-extensions\";\r\nimport constants from \"../helpers/constant\";\r\nimport storageService from \"../services/storage\";\r\nimport AlertAction from \"../redux/actions/AlertAction\";\r\n\r\nconst http = axios.create({\r\n  baseURL: constants.API_ADDRESS,\r\n  headers: {\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n    \"Access-Control-Allow-Credentials\": \"true\",\r\n  },\r\n  // adapter: cacheAdapterEnhancer(axios.defaults.adapter),\r\n});\r\n\r\n// http.interceptors.request.use(\r\n//   async (config) => {\r\n//     // const accessToken = storageService.getItem(constants.ACCESS_TOKEN);\r\n//     // config.headers = {\r\n//     //   Authorization: `Bearer ${accessToken}`,\r\n//     //   \"Cache-Control\": \"no-cache\",\r\n//     //   Accept: \"application/json\",\r\n//     // };\r\n//     // return config;\r\n//   },\r\n//   (error) => {\r\n//     Promise.reject(error);\r\n//   },\r\n// );\r\n\r\nhttp.interceptors.response.use(\r\n  (result) => {\r\n    // Do something before request is sent\r\n    const { method, url } = result.config;\r\n    if (method !== \"get\") {\r\n      if (url !== \"user/login\") {\r\n        AlertAction.show({\r\n          type: \"success\",\r\n          text: \"اطلاعات با موفقیت ثبت شد\",\r\n        });\r\n      }\r\n    }\r\n    return result;\r\n  },\r\n  async (error) => {\r\n    const { code, message } = error.response.data.error;\r\n    if (code === \"UNHANDLED_DATABASE_EXCEPTION\") {\r\n      AlertAction.show({\r\n        type: \"error\",\r\n        text: \"خطایی رخ داده است\",\r\n      });\r\n    } else {\r\n      AlertAction.show({\r\n        type: \"error\",\r\n        text: message,\r\n      });\r\n    }\r\n\r\n    // TODO : handle 4xx error here and calling refresh token\r\n    // const originalRequest = error.config;\r\n    // if (error.response.status === 403 && !originalRequest._retry) {\r\n    // const access_token = await refreshAccessToken();\r\n    // axios.defaults.headers.common['Authorization'] = 'Bearer ' + access_token;\r\n    // return axiosApiInstance(originalRequest);\r\n    // }\r\n\r\n    return Promise.reject(error);\r\n  },\r\n);\r\n\r\nexport default http;\r\n","/* eslint-disable */\r\nimport { useState } from \"react\";\r\n\r\nimport http from \"../configs/axios\";\r\n\r\nconst getProperUrl = (url, urlParams) => {\r\n  return `${url.substring(0, url.indexOf(\"?\"))}/${urlParams}?${url.substring(\r\n    url.indexOf(\"?\") + 1,\r\n    url.length,\r\n  )}`;\r\n};\r\n\r\nexport const useApi = (args) => {\r\n  const [pending, setPending] = useState(false);\r\n  const [result, setResult] = useState();\r\n  const [error, setError] = useState();\r\n\r\n  const execute = async function (data, urlParams) {\r\n    setPending(true);\r\n    try {\r\n      let response;\r\n\r\n      if (urlParams) {\r\n        if (args.url.includes(\"?\")) {\r\n          const url = getProperUrl(args.url, urlParams);\r\n          response = await http({ ...args, url, data });\r\n        } else {\r\n          const url = `${args.url}/${urlParams}`;\r\n          response = await http({ ...args, url, data });\r\n        }\r\n      } else {\r\n        response = await http({ ...args, data });\r\n      }\r\n\r\n      setResult(response);\r\n      return response.data;\r\n    } catch (e) {\r\n      setResult(null);\r\n      setError(e);\r\n      throw new Error(e);\r\n    } finally {\r\n      setPending(false);\r\n    }\r\n  };\r\n\r\n  return {\r\n    pending,\r\n    result,\r\n    error,\r\n    execute,\r\n  };\r\n};\r\n","import pickBy from \"lodash/pickBy\";\r\nimport identity from \"lodash/identity\";\r\nimport queryString from \"query-string\";\r\nimport storageService from \"../services/storage\";\r\nimport Constant from \"./constant\";\r\nimport {\r\n  primary,\r\n  secondary,\r\n  success,\r\n  warning,\r\n  info,\r\n  gray,\r\n  purple,\r\n  orange,\r\n} from \"../themes/default\";\r\nimport { number } from \"yup\";\r\n\r\nexport const convertParamsToQueryString = (params) => {\r\n  return new URLSearchParams(pickBy(params, identity)).toString();\r\n};\r\n\r\nexport const getQueryString = (param) => {\r\n  var myUrl = new URL(window.location.href.replace(/#/g, \"\"));\r\n  var param_value = myUrl.searchParams.get(param);\r\n  return param_value;\r\n  // return queryString.parse(window.location.search)[param];\r\n};\r\n\r\nexport const getRandomColor = () => {\r\n  return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\r\n};\r\n\r\nexport const getRandomColorFromTheme = () => {\r\n  const colors = [\r\n    primary,\r\n    secondary,\r\n    success,\r\n    warning,\r\n    orange,\r\n    purple,\r\n    info,\r\n    gray,\r\n  ];\r\n  var color = colors[Math.floor(Math.random() * colors.length)];\r\n\r\n  return color;\r\n};\r\n\r\nexport const getRandomNumber = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nexport const persianNumber = (en) => {\r\n  if ((en || en === 0) && typeof en !== number) {\r\n    return (\"\" + en).replace(/[0-9]/g, function (t) {\r\n      return \"۰۱۲۳۴۵۶۷۸۹\".substr(+t, 1);\r\n    });\r\n  }\r\n};\r\n\r\nexport const getDayOfWeek = (date) => {\r\n  const days = [\r\n    \"یکشنبه\",\r\n    \"دوشنبه\",\r\n    \"سه شنبه\",\r\n    \"چهارشنبه\",\r\n    \"پنج شنبه\",\r\n    \"جمعه\",\r\n    \"شنبه\",\r\n  ];\r\n  return days[date.getDay()];\r\n};\r\n\r\nexport const hasPermission = (permit) => {\r\n  if (permit === Constant.ALL_PERMISSIONS.FREE) {\r\n    return true;\r\n  }\r\n  const { permissions } = JSON.parse(\r\n    storageService.getItem(Constant.STORAGE.CURRENT_USER),\r\n  );\r\n  return permissions.includes(permit);\r\n};\r\n","import React, { useState, useRef } from \"react\";\r\nimport { Grid, TextField, Button, InputAdornment } from \"@material-ui/core\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport clsx from \"clsx\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport storageService from \"../../services/storage\";\r\n\r\nconst MainDetail = ({ onSubmit, onDismiss }) => {\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n  const [isPassword, setIsPassword] = useState(true);\r\n  const passwordRef = useRef(null);\r\n\r\n  const changePasswordRequest = useApi({\r\n    method: \"put\",\r\n    url: `user/password/change`,\r\n  });\r\n\r\n  const onChangeViewClick = function () {\r\n    setIsPassword(!isPassword);\r\n  };\r\n\r\n  const onDone = (data) => {\r\n    const { id } = JSON.parse(\r\n      storageService.getItem(Constant.STORAGE.CURRENT_USER),\r\n    );\r\n    changePasswordRequest.execute({\r\n      id,\r\n      oldPassword: data.prePassword,\r\n      newPassword: data.password,\r\n    });\r\n    onSubmit(data);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onDone)}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Controller\r\n            control={control}\r\n            render={({ onChange, value, name }) => {\r\n              return (\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\" رمز عبور قبلی\"\r\n                  name={name}\r\n                  onChange={onChange}\r\n                  value={value}\r\n                  error={!!errors.prePassword}\r\n                  helperText={\r\n                    errors.prePassword ? errors.prePassword.message : \"\"\r\n                  }\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  type={\"password\"}\r\n                />\r\n              );\r\n            }}\r\n            rules={{\r\n              required: Constant.VALIDATION.REQUIRED,\r\n              minLength: {\r\n                value: 5,\r\n                message: Constant.VALIDATION.PASSWORD,\r\n              },\r\n            }}\r\n            name=\"prePassword\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Controller\r\n            control={control}\r\n            render={({ onChange, value, name }) => {\r\n              return (\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"رمز عبور\"\r\n                  name={name}\r\n                  onChange={onChange}\r\n                  value={value}\r\n                  error={!!errors.password}\r\n                  helperText={errors.password ? errors.password.message : \"\"}\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  type={isPassword ? \"password\" : \"text\"}\r\n                  inputRef={passwordRef}\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <i\r\n                          style={{ cursor: \"pointer\" }}\r\n                          className={clsx(\"material-icons-round\")}\r\n                          onClick={onChangeViewClick}\r\n                        >\r\n                          {isPassword ? \"visibility_off\" : \"visibility\"}\r\n                        </i>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n              );\r\n            }}\r\n            rules={{\r\n              required: Constant.VALIDATION.REQUIRED,\r\n              minLength: {\r\n                value: 5,\r\n                message: Constant.VALIDATION.PASSWORD,\r\n              },\r\n            }}\r\n            name=\"password\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Controller\r\n            control={control}\r\n            render={({ onChange, value, name }) => {\r\n              return (\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"تکرار رمز عبور \"\r\n                  name={name}\r\n                  onChange={onChange}\r\n                  value={value}\r\n                  error={!!errors.repassword}\r\n                  helperText={\r\n                    errors.repassword && \"تکرار رمز عبور با رمز عبور برابر نیست\"\r\n                  }\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  type={\"password\"}\r\n                />\r\n              );\r\n            }}\r\n            rules={{\r\n              validate: (value) => value === passwordRef.current.value,\r\n            }}\r\n            name=\"repassword\"\r\n          />\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n        >\r\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n            تایید\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={onDismiss}>\r\n            انصراف\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MainDetail;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  Chip,\r\n  Divider,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nimport {\r\n  Menu as MenuIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  Person as AccountIcon,\r\n  ArrowForward as ArrowForwardIcon,\r\n} from \"@material-ui/icons\";\r\nimport classNames from \"classnames\";\r\nimport useStyles from \"./styles\";\r\nimport { Badge, Typography } from \"../Wrappers\";\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\nimport { useUserState } from \"../../context/UserContext\";\r\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { persianNumber, getDayOfWeek } from \"../../helpers/utils\";\r\nimport clsx from \"clsx\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport dialogAction from \"../../redux/actions/dialogAction\";\r\nimport ChangePassword from \"./ChangePassword\";\r\nimport Clock from \"react-live-clock\";\r\n\r\nexport default function Header(props) {\r\n  var classes = useStyles();\r\n  const history = useHistory();\r\n  var layoutState = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n  var userDispatch = useUserDispatch();\r\n  const location = useLocation();\r\n  var [mailMenu, setMailMenu] = useState(null);\r\n  var [profileMenu, setProfileMenu] = useState(null);\r\n  var { currentUser } = useUserState();\r\n  const [cheques, setCheques] = useState([]);\r\n\r\n  const getDashboardRequest = useApi({\r\n    method: \"get\",\r\n    url: `notify/cheque`,\r\n  });\r\n\r\n  const getChequeNotify = async () => {\r\n    const notify = await getDashboardRequest.execute();\r\n\r\n    setCheques(notify.data);\r\n  };\r\n\r\n  const onShowAllCheque = () => {\r\n    history.push(\"/app/cheque-list\");\r\n  };\r\n\r\n  const onSubmitChangePassword = () => {\r\n    onDismissChangePassword();\r\n  };\r\n\r\n  const onDismissChangePassword = () => {\r\n    dialogAction.hide({ name: \"password\" });\r\n  };\r\n\r\n  const onChangePassword = () => {\r\n    dialogAction.show({\r\n      title: \"تغییر پسورد\",\r\n      component: (\r\n        <ChangePassword\r\n          onSubmit={onSubmitChangePassword}\r\n          onDismiss={onDismissChangePassword}\r\n        />\r\n      ),\r\n      name: \"password\",\r\n      size: \"4\",\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getChequeNotify();\r\n  }, [location]);\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          onClick={() => toggleSidebar(layoutDispatch)}\r\n          className={classNames(\r\n            classes.headerMenuButtonSandwich,\r\n            classes.headerMenuButtonCollapse,\r\n          )}\r\n        >\r\n          {layoutState.isSidebarOpened ? (\r\n            <ArrowForwardIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          ) : (\r\n            <MenuIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n        </IconButton>\r\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\r\n          سیستم یکپارچه مدیریت\r\n        </Typography>\r\n\r\n        <div className={classes.grow} />\r\n        <div style={{ display: \"flex\" }}>\r\n          <Typography variant=\"h6\" style={{ margin: \"0 10px\" }}>\r\n            {getDayOfWeek(new Date())}\r\n          </Typography>\r\n          <Typography variant=\"h6\">\r\n            {persianNumber(new Date().toLocaleDateString(\"fa-IR\"))}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"h6\"\r\n            style={{\r\n              margin: \"0 10px\",\r\n              width: 70,\r\n              display: \"flex\",\r\n              justifyContent: \"flex-end\",\r\n            }}\r\n          >\r\n            <Clock\r\n              format={\"HH:mm:ss\"}\r\n              ticking={true}\r\n              timezone={\"Asia/Tehran\"}\r\n            />\r\n          </Typography>\r\n        </div>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={(e) => {\r\n            setMailMenu(e.currentTarget);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge badgeContent={cheques?.length} color=\"secondary\">\r\n            <NotificationsIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className={classes.headerMenuButton}\r\n          aria-controls=\"profile-menu\"\r\n          onClick={(e) => setProfileMenu(e.currentTarget)}\r\n        >\r\n          <AccountIcon classes={{ root: classes.headerIcon }} />\r\n        </IconButton>\r\n        <Menu\r\n          id=\"mail-menu\"\r\n          open={Boolean(mailMenu)}\r\n          anchorEl={mailMenu}\r\n          onClose={() => setMailMenu(null)}\r\n          MenuListProps={{ className: classes.headerMenuList }}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h6\" weight=\"medium\">\r\n              یادآوری چک ها\r\n            </Typography>\r\n            <Button color=\"primary\" onClick={onShowAllCheque}>\r\n              نمایش همه چک ها\r\n            </Button>\r\n          </div>\r\n          <Divider />\r\n          {cheques?.map((message) => (\r\n            <MenuItem key={message.id} className={classes.messageNotification}>\r\n              <Typography variant=\"h6\">\r\n                {persianNumber(\r\n                  new Date(message.chequeDueDate).toLocaleDateString(\"fa-IR\"),\r\n                )}\r\n              </Typography>\r\n              <Typography variant=\"h6\">{message.person}</Typography>\r\n              <Typography variant=\"h6\">\r\n                {persianNumber(message.price)}\r\n              </Typography>\r\n              <Typography variant=\"h6\">\r\n                <Chip\r\n                  label={Constant.PAYMENT_TYPE[message.type]}\r\n                  className={clsx(classes.chip, classes[message.type])}\r\n                />\r\n              </Typography>\r\n            </MenuItem>\r\n          ))}\r\n        </Menu>\r\n        <Menu\r\n          id=\"profile-menu\"\r\n          open={Boolean(profileMenu)}\r\n          anchorEl={profileMenu}\r\n          onClose={() => setProfileMenu(null)}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              {currentUser.username}\r\n            </Typography>\r\n          </div>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              color=\"primary\"\r\n              onClick={onChangePassword}\r\n            >\r\n              تغییر پسورد\r\n            </Typography>\r\n          </MenuItem>\r\n\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              color=\"primary\"\r\n              onClick={() => signOut(userDispatch, props.history)}\r\n            >\r\n              خروج از سیستم\r\n            </Typography>\r\n          </MenuItem>\r\n        </Menu>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport default makeStyles(theme => ({\r\n  menuButton: {\r\n    marginLeft: 12,\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 40,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: drawerWidth,\r\n    },\r\n  },\r\n  toolbar: {\r\n    ...theme.mixins.toolbar,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  /* sidebarList: {\r\n    marginTop: theme.spacing(6),\r\n  }, */\r\n  mobileBackButton: {\r\n    marginTop: theme.spacing(0.5),\r\n    marginLeft: 18,\r\n    [theme.breakpoints.only(\"sm\")]: {\r\n      marginTop: theme.spacing(0.625),\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n}));\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  link: {\r\n    textDecoration: \"none\",\r\n    \"&:hover, &:focus\": {\r\n      backgroundColor: theme.palette.background.light,\r\n    },\r\n  },\r\n  externalLink: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    textDecoration: \"none\",\r\n  },\r\n  linkActive: {\r\n    backgroundColor: theme.palette.background.light,\r\n  },\r\n  linkNested: {\r\n    paddingLeft: 0,\r\n    \"&:hover, &:focus\": {\r\n      backgroundColor: \"#FFFFFF\",\r\n    },\r\n  },\r\n  linkIcon: {\r\n    marginRight: theme.spacing(1),\r\n    color: theme.palette.text.secondary + \"99\",\r\n    transition: theme.transitions.create(\"color\"),\r\n    width: 24,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  linkIconActive: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  linkText: {\r\n    padding: 0,\r\n    color: theme.palette.text.secondary + \"CC\",\r\n    transition: theme.transitions.create([\"opacity\", \"color\"]),\r\n    fontSize: 16,\r\n  },\r\n  linkTextActive: {\r\n    color: theme.palette.text.primary,\r\n  },\r\n  linkTextHidden: {\r\n    opacity: 0,\r\n  },\r\n  nestedList: {\r\n    paddingLeft: theme.spacing(2) + 10,\r\n  },\r\n  sectionTitle: {\r\n    marginLeft: theme.spacing(4.5),\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  divider: {\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n    height: 1,\r\n    backgroundColor: \"#D8D8D880\",\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nvar useStyles = makeStyles((theme) => ({\r\n  dotBase: {\r\n    width: 8,\r\n    height: 8,\r\n    backgroundColor: theme.palette.text.hint,\r\n    borderRadius: \"50%\",\r\n    transition: theme.transitions.create(\"background-color\"),\r\n  },\r\n  dotSmall: {\r\n    width: 5,\r\n    height: 5,\r\n  },\r\n  dotLarge: {\r\n    width: 11,\r\n    height: 11,\r\n  },\r\n}));\r\n\r\nexport default function Dot({ size, color }) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  return (\r\n    <div\r\n      className={classnames(classes.dotBase, {\r\n        [classes.dotLarge]: size === \"large\",\r\n        [classes.dotSmall]: size === \"small\",\r\n      })}\r\n      style={{\r\n        backgroundColor:\r\n          color && theme.palette[color] ? theme.palette[color].main : color,\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Inbox as InboxIcon } from \"@material-ui/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useStyles from \"./styles\";\r\nimport Dot from \"../Dot\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport {\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../../../context/LayoutContext\";\r\nimport { hasPermission } from \"../../../../helpers/utils\";\r\n\r\nexport default function SidebarLink({\r\n  link,\r\n  icon,\r\n  label,\r\n  children,\r\n  location,\r\n  isSidebarOpened,\r\n  nested,\r\n  type,\r\n  permission,\r\n}) {\r\n  var classes = useStyles();\r\n  const history = useHistory();\r\n  var layoutDispatch = useLayoutDispatch();\r\n  var theme = useTheme();\r\n\r\n  const onClick = (link) => {\r\n    history.push(link);\r\n    var windowWidth = window.innerWidth;\r\n    var breakpointWidth = theme.breakpoints.values.md;\r\n    var isSmallScreen = windowWidth < breakpointWidth;\r\n\r\n    if (isSmallScreen) {\r\n      toggleSidebar(layoutDispatch);\r\n    }\r\n  };\r\n\r\n  var [isOpen, setIsOpen] = useState(false);\r\n  var isLinkActive =\r\n    link &&\r\n    (location.pathname === link || location.pathname.indexOf(link) !== -1);\r\n\r\n  if (type === \"title\")\r\n    return (\r\n      <Typography\r\n        className={classnames(classes.linkText, classes.sectionTitle, {\r\n          [classes.linkTextHidden]: !isSidebarOpened,\r\n        })}\r\n      >\r\n        {label}\r\n      </Typography>\r\n    );\r\n\r\n  if (type === \"divider\")\r\n    return (\r\n      <>\r\n        {hasPermission(permission) && <Divider className={classes.divider} />}\r\n      </>\r\n    );\r\n  if (link && link.includes(\"http\")) {\r\n    return (\r\n      <ListItem\r\n        button\r\n        className={classes.link}\r\n        classes={{\r\n          root: classnames(classes.linkRoot, {\r\n            [classes.linkActive]: isLinkActive && !nested,\r\n            [classes.linkNested]: nested,\r\n          }),\r\n        }}\r\n        disableRipple\r\n      >\r\n        <div className={classes.externalLink} href={link}>\r\n          <ListItemIcon\r\n            className={classnames(classes.linkIcon, {\r\n              [classes.linkIconActive]: isLinkActive,\r\n            })}\r\n          >\r\n            {nested ? <Dot color={isLinkActive && \"primary\"} /> : icon}\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            classes={{\r\n              primary: classnames(classes.linkText, {\r\n                [classes.linkTextActive]: isLinkActive,\r\n                [classes.linkTextHidden]: !isSidebarOpened,\r\n              }),\r\n            }}\r\n            primary={label}\r\n          />\r\n        </div>\r\n      </ListItem>\r\n    );\r\n  }\r\n  if (!children)\r\n    return (\r\n      <>\r\n        {hasPermission(permission) && (\r\n          <ListItem\r\n            button\r\n            className={classes.link}\r\n            classes={{\r\n              root: classnames(classes.linkRoot, {\r\n                [classes.linkActive]: isLinkActive && !nested,\r\n                [classes.linkNested]: nested,\r\n              }),\r\n            }}\r\n            disableRipple\r\n            onClick={() => {\r\n              onClick(link);\r\n            }}\r\n          >\r\n            <span className={classes.externalLink}>\r\n              <ListItemIcon\r\n                className={classnames(classes.linkIcon, {\r\n                  [classes.linkIconActive]: isLinkActive,\r\n                })}\r\n              >\r\n                {nested ? <Dot color={isLinkActive && \"primary\"} /> : icon}\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                classes={{\r\n                  primary: classnames(classes.linkText, {\r\n                    [classes.linkTextActive]: isLinkActive,\r\n                    [classes.linkTextHidden]: !isSidebarOpened,\r\n                  }),\r\n                }}\r\n                primary={label}\r\n              />\r\n            </span>\r\n          </ListItem>\r\n        )}\r\n      </>\r\n    );\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(permission) && (\r\n        <>\r\n          <ListItem\r\n            button\r\n            component={link && Link}\r\n            onClick={toggleCollapse}\r\n            className={classes.link}\r\n            to={link}\r\n            disableRipple\r\n          >\r\n            <span className={classes.externalLink}>\r\n              <ListItemIcon\r\n                className={classnames(classes.linkIcon, {\r\n                  [classes.linkIconActive]: isLinkActive,\r\n                })}\r\n              >\r\n                {icon ? icon : <InboxIcon />}\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                classes={{\r\n                  primary: classnames(classes.linkText, {\r\n                    [classes.linkTextActive]: isLinkActive,\r\n                    [classes.linkTextHidden]: !isSidebarOpened,\r\n                  }),\r\n                }}\r\n                primary={label}\r\n              />\r\n            </span>\r\n          </ListItem>\r\n          {children && (\r\n            <Collapse\r\n              in={isOpen && isSidebarOpened}\r\n              timeout=\"auto\"\r\n              unmountOnExit\r\n              className={classes.nestedList}\r\n            >\r\n              <List component=\"div\" disablePadding>\r\n                {children.map((childrenLink) => (\r\n                  <SidebarLink\r\n                    key={childrenLink && childrenLink.link}\r\n                    location={location}\r\n                    isSidebarOpened={isSidebarOpened}\r\n                    nested\r\n                    {...childrenLink}\r\n                  />\r\n                ))}\r\n              </List>\r\n            </Collapse>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  // ###########################################################\r\n\r\n  function toggleCollapse(e) {\r\n    if (isSidebarOpened) {\r\n      e.preventDefault();\r\n      setIsOpen(!isOpen);\r\n    }\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\r\nimport { ArrowForward as ArrowForwardIcon } from \"@material-ui/icons\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\nimport useStyles from \"./styles\";\r\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\r\nimport Constants from \"../../helpers/constant\";\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\n\r\nconst structure = [\r\n  {\r\n    id: 0,\r\n    label: \"داشبورد\",\r\n    link: \"/app/dashboard\",\r\n    icon: <i className=\"material-icons-round\">home</i>,\r\n    permission: Constants.ALL_PERMISSIONS.FREE,\r\n  },\r\n  {\r\n    id: 1,\r\n    label: \"کالاها\",\r\n    link: \"/app/product-list\",\r\n    icon: <i className=\"material-icons-round\">inventory_2</i>,\r\n    permission: Constants.ALL_PERMISSIONS.PRODCUT_SHOW,\r\n  },\r\n  {\r\n    id: 2,\r\n    label: \"انبار ها\",\r\n    link: \"/app/depot-list\",\r\n    icon: <i className=\"material-icons-round\">storefront</i>,\r\n    permission: Constants.ALL_PERMISSIONS.DEPOT_SHOW,\r\n  },\r\n  {\r\n    id: 3,\r\n    label: \"صندوق ها\",\r\n    link: \"/app/cash-list\",\r\n    icon: <i className=\"material-icons-round\">account_balance_wallet</i>,\r\n    permission: Constants.ALL_PERMISSIONS.CASH_DESK_SHOW,\r\n  },\r\n  {\r\n    id: 4,\r\n    type: \"divider\",\r\n    permission: Constants.ALL_PERMISSIONS.INVOICE_SHOW,\r\n  },\r\n  {\r\n    id: 5,\r\n    label: \"فاکتور ها\",\r\n    icon: <i className=\"material-icons-round\">receipt</i>,\r\n    permission: Constants.ALL_PERMISSIONS.INVOICE_SHOW,\r\n    children: [\r\n      { label: \"کل فاکتور ها\", link: \"/app/invoice-list?type=ALL\" },\r\n      { label: \"فاکتور خرید\", link: \"/app/invoice-list?type=BUY\" },\r\n      { label: \"فاکتور فروش\", link: \"/app/invoice-list?type=SELL\" },\r\n    ],\r\n  },\r\n  {\r\n    id: 6,\r\n    type: \"divider\",\r\n    permission:\r\n      Constants.ALL_PERMISSIONS.PAYMENT_SHOW ||\r\n      Constants.ALL_PERMISSIONS.CHEQUE_SHOW,\r\n  },\r\n  {\r\n    id: 7,\r\n    label: \"گزارشات مالی\",\r\n    icon: <i className=\"material-icons-round\">monetization_on</i>,\r\n    permission:\r\n      Constants.ALL_PERMISSIONS.PAYMENT_SHOW ||\r\n      Constants.ALL_PERMISSIONS.CHEQUE_SHOW,\r\n    children: [\r\n      { label: \"گردش کل\", link: \"/app/payment-list?type=ALL\" },\r\n      { label: \"لیست دریافتی ها\", link: \"/app/payment-list?type=INCOME\" },\r\n      { label: \"لیست پرداختی ها\", link: \"/app/payment-list?type=OUTCOME\" },\r\n      {\r\n        label: \"لیست چک ها\",\r\n        link: \"/app/cheque-list\",\r\n        permission: Constants.ALL_PERMISSIONS.PAYMENT_SHOW,\r\n      },\r\n      {\r\n        label: \"لیست شماره حساب ها\",\r\n        link: \"/app/accountNumber\",\r\n        permission: Constants.ALL_PERMISSIONS.FREE,\r\n      },\r\n      {\r\n        label: \"لیست وام ها\",\r\n        link: \"/app/loan-list\",\r\n        permission: Constants.ALL_PERMISSIONS.FREE,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 8,\r\n    type: \"divider\",\r\n    permission:\r\n      Constants.ALL_PERMISSIONS.CUSTOMER_SHOW ||\r\n      Constants.ALL_PERMISSIONS.USER_SHOW ||\r\n      Constants.ALL_PERMISSIONS.EMPLOYEE_SHOW ||\r\n      Constants.ALL_PERMISSIONS.DRIVER_EDIT,\r\n  },\r\n  {\r\n    id: 9,\r\n    label: \"اشخاص\",\r\n    icon: <i className=\"material-icons-round\">account_circle</i>,\r\n    // permission:\r\n    //   Constants.ALL_PERMISSIONS.CUSTOMER_SHOW ||\r\n    //   Constants.ALL_PERMISSIONS.USER_SHOW ||\r\n    //   Constants.ALL_PERMISSIONS.EMPLOYEE_SHOW ||\r\n    //   Constants.ALL_PERMISSIONS.DRIVER_EDIT,\r\n    children: [\r\n      {\r\n        label: \"کاربران\",\r\n        link: \"/app/user-list\",\r\n        permission: Constants.ALL_PERMISSIONS.FREE,\r\n      },\r\n      {\r\n        label: \"مشتریان\",\r\n        link: \"/app/customer-list\",\r\n        permission: Constants.ALL_PERMISSIONS.CUSTOMER_SHOW,\r\n      },\r\n      {\r\n        label: \"پرسنل\",\r\n        link: \"/app/employee-list\",\r\n        permission: Constants.ALL_PERMISSIONS.EMPLOYEE_SHOW,\r\n      },\r\n      {\r\n        label: \"رانندگان\",\r\n        link: \"/app/driver-list\",\r\n        permission: Constants.ALL_PERMISSIONS.DRIVER_EDIT,\r\n      },\r\n    ],\r\n  },\r\n\r\n  { id: 13, type: \"divider\", permission: Constants.ALL_PERMISSIONS.FREE },\r\n  {\r\n    id: 14,\r\n    label: \" حضور و غیاب\",\r\n    link: \"/app/traffic\",\r\n    icon: <i className=\"material-icons-round\">transfer_within_a_station</i>,\r\n    permission: Constants.ALL_PERMISSIONS.FREE,\r\n  },\r\n\r\n  {\r\n    id: 14,\r\n    label: \"دسته بندی ها \",\r\n    link: \"/app/Category\",\r\n    icon: <i className=\"material-icons-round\">category</i>,\r\n    permission: Constants.ALL_PERMISSIONS.FREE,\r\n  },\r\n  // {\r\n  //   id: 15,\r\n  //   label: \"تنظیمات \",\r\n  //   link: \"/app/Settings\",\r\n  //   icon: <i className=\"material-icons-round\">settings</i>,\r\n  //   permission: Constants.ALL_PERMISSIONS.FREE,\r\n  // },\r\n];\r\n\r\nfunction Sidebar({ location }) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // global\r\n  var { isSidebarOpened } = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n\r\n  // local\r\n  var [isPermanent, setPermanent] = useState(true);\r\n\r\n  useEffect(function () {\r\n    window.addEventListener(\"resize\", handleWindowWidthChange);\r\n    handleWindowWidthChange();\r\n    return function cleanup() {\r\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Drawer\r\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\r\n      className={classNames(classes.drawer, {\r\n        [classes.drawerOpen]: isSidebarOpened,\r\n        [classes.drawerClose]: !isSidebarOpened,\r\n      })}\r\n      classes={{\r\n        paper: classNames({\r\n          [classes.drawerOpen]: isSidebarOpened,\r\n          [classes.drawerClose]: !isSidebarOpened,\r\n        }),\r\n      }}\r\n      open={isSidebarOpened}\r\n    >\r\n      <div className={classes.toolbar} />\r\n      <div className={classes.mobileBackButton}>\r\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\r\n          <ArrowForwardIcon\r\n            classes={{\r\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\r\n            }}\r\n          />\r\n        </IconButton>\r\n      </div>\r\n      <List className={classes.sidebarList}>\r\n        {structure.map((link) => (\r\n          <SidebarLink\r\n            key={link.id}\r\n            location={location}\r\n            isSidebarOpened={isSidebarOpened}\r\n            {...link}\r\n          />\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n\r\n  // ##################################################################\r\n  function handleWindowWidthChange() {\r\n    var windowWidth = window.innerWidth;\r\n    var breakpointWidth = theme.breakpoints.values.md;\r\n    var isSmallScreen = windowWidth < breakpointWidth;\r\n\r\n    if (isSmallScreen && isPermanent) {\r\n      setPermanent(false);\r\n      toggleSidebar(layoutDispatch);\r\n    } else if (!isSmallScreen && !isPermanent) {\r\n      setPermanent(true);\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(Sidebar);\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  datePicker: {\r\n    [theme.breakpoints.only(\"xs\")]: {\r\n      margin: \"10px 0\",\r\n    },\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n  paperTitle: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    position: \"relative\",\r\n  },\r\n  card: {\r\n    minHeight: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  visitsNumberContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexGrow: 1,\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n  progressSection: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  progressTitle: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  progress: {\r\n    marginBottom: theme.spacing(1),\r\n    backgroundColor: \"rgb(236, 236, 236)\",\r\n  },\r\n  pieChartLegendWrapper: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"flex-end\",\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  legendItemContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  fullHeightBody: {\r\n    display: \"flex\",\r\n    flexGrow: 1,\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  tableWidget: {\r\n    overflowX: \"auto\",\r\n  },\r\n  progressBarPrimary: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  progressBarSecondary: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  performanceLegendWrapper: {\r\n    display: \"flex\",\r\n    flexGrow: 1,\r\n    alignItems: \"center\",\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  legendElement: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  legendElementText: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  serverOverviewElement: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    maxWidth: \"100%\",\r\n  },\r\n  serverOverviewElementText: {\r\n    minWidth: 145,\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  serverOverviewElementChartWrapper: {\r\n    width: \"100%\",\r\n  },\r\n  mainChartBody: {\r\n    overflowX: \"auto\",\r\n  },\r\n  mainChartHeader: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    [theme.breakpoints.only(\"xs\")]: {\r\n      flexWrap: \"wrap\",\r\n    },\r\n  },\r\n  mainChartHeaderLabels: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    [theme.breakpoints.only(\"xs\")]: {\r\n      order: 3,\r\n      width: \"100%\",\r\n      justifyContent: \"center\",\r\n      marginTop: theme.spacing(3),\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n  },\r\n  mainChartHeaderLabel: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginLeft: theme.spacing(3),\r\n  },\r\n  mainChartSelectRoot: {\r\n    borderColor: theme.palette.text.hint + \"80 !important\",\r\n  },\r\n  mainChartSelect: {\r\n    padding: 10,\r\n    paddingRight: 25,\r\n  },\r\n  mainChartLegentElement: {\r\n    fontSize: \"18px !important\",\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  success: {\r\n    backgroundColor: theme.palette.success.main,\r\n    color: \"#fff\",\r\n  },\r\n  warning: {\r\n    backgroundColor: theme.palette.warning.main,\r\n    color: \"#fff\",\r\n  },\r\n  secondary: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles(theme => ({\r\n  widgetWrapper: {\r\n    display: \"flex\",\r\n    minHeight: \"100%\",\r\n  },\r\n  widgetHeader: {\r\n    padding: theme.spacing(3),\r\n    paddingBottom: theme.spacing(1),\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  widgetRoot: {\r\n    boxShadow: theme.customShadows.widget,\r\n  },\r\n  widgetBody: {\r\n    paddingBottom: theme.spacing(3),\r\n    paddingRight: theme.spacing(3),\r\n    paddingLeft: theme.spacing(3),\r\n  },\r\n  noPadding: {\r\n    padding: 0,\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    flexGrow: 1,\r\n    overflow: \"auto\",\r\n  },\r\n  moreButton: {\r\n    margin: -theme.spacing(1),\r\n    padding: 0,\r\n    width: 40,\r\n    height: 40,\r\n    color: theme.palette.text.hint,\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.primary.main,\r\n      color: \"rgba(255, 255, 255, 0.35)\",\r\n    },\r\n  },\r\n  noWidgetShadow: {\r\n    boxShadow: 'none'\r\n  }\r\n}));\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Paper,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert as MoreIcon } from \"@material-ui/icons\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\nexport default function Widget({\r\n  children,\r\n  title,\r\n  noBodyPadding,\r\n  bodyClass,\r\n  disableWidgetMenu,\r\n  header,\r\n  noHeaderPadding,\r\n  headerClass,\r\n  style,\r\n  noWidgetShadow,\r\n  ...props\r\n}) {\r\n  var classes = useStyles();\r\n\r\n  // local\r\n  var [moreButtonRef, setMoreButtonRef] = useState(null);\r\n  var [isMoreMenuOpen, setMoreMenuOpen] = useState(false);\r\n\r\n  return (\r\n    <div className={classes.widgetWrapper} style={style && { ...style }}>\r\n      <Paper\r\n        className={classes.paper}\r\n        classes={{\r\n          root: classnames(classes.widgetRoot, {\r\n            [classes.noWidgetShadow]: noWidgetShadow,\r\n          }),\r\n        }}\r\n      >\r\n        <div\r\n          className={classnames(classes.widgetHeader, {\r\n            [classes.noPadding]: noHeaderPadding,\r\n            [headerClass]: headerClass,\r\n          })}\r\n        >\r\n          {header ? (\r\n            header\r\n          ) : (\r\n            <React.Fragment>\r\n              <Typography variant=\"h5\" color=\"textSecondary\" noWrap>\r\n                {title}\r\n              </Typography>\r\n              {!true && (\r\n                <IconButton\r\n                  color=\"primary\"\r\n                  classes={{ root: classes.moreButton }}\r\n                  aria-owns=\"widget-menu\"\r\n                  aria-haspopup=\"true\"\r\n                  onClick={() => setMoreMenuOpen(true)}\r\n                  buttonRef={setMoreButtonRef}\r\n                >\r\n                  <MoreIcon />\r\n                </IconButton>\r\n              )}\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n        <div\r\n          className={classnames(classes.widgetBody, {\r\n            [classes.noPadding]: noBodyPadding,\r\n            [bodyClass]: bodyClass,\r\n          })}\r\n        >\r\n          {children}\r\n        </div>\r\n      </Paper>\r\n      <Menu\r\n        id=\"widget-menu\"\r\n        open={isMoreMenuOpen}\r\n        anchorEl={moreButtonRef}\r\n        onClose={() => setMoreMenuOpen(false)}\r\n        disableAutoFocusItem\r\n      >\r\n        <MenuItem>\r\n          <Typography>Edit</Typography>\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <Typography>Copy</Typography>\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <Typography>Delete</Typography>\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <Typography>Print</Typography>\r\n        </MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport classNames from \"classnames\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"relative\",\r\n    overflow: \"hidden\",\r\n    height: \"100%\",\r\n    padding: 20,\r\n    minHeight: 150,\r\n    cursor: \"pointer\",\r\n    transition: \"all 0.5s\",\r\n    backgroundColor: (props) => props.color,\r\n  },\r\n  icon: {\r\n    position: \"absolute\",\r\n    bottom: -20,\r\n    left: -20,\r\n    fontSize: 180,\r\n    color: theme.palette.grey[100],\r\n  },\r\n}));\r\n\r\nexport default function SimplePaper(props) {\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <Paper className={classes.root} onClick={props.onClick}>\r\n      <i className={classNames(\"material-icons-round\", classes.icon)}>\r\n        {props.icon}\r\n      </i>\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Grid, IconButton } from \"@material-ui/core\";\r\nimport MUIToolTip from \"@material-ui/core/Tooltip\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport {\r\n  ResponsiveContainer,\r\n  AreaChart,\r\n  LineChart,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Line,\r\n  Area,\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  YAxis,\r\n  XAxis,\r\n  Bar,\r\n  BarChart,\r\n  PolarRadiusAxis,\r\n  Radar,\r\n  PolarGrid,\r\n  PolarAngleAxis,\r\n  RadarChart,\r\n} from \"recharts\";\r\n\r\nimport useStyles from \"./styles\";\r\nimport Widget from \"../../components/Widget\";\r\nimport { Typography } from \"../../components/Wrappers\";\r\nimport Dot from \"../../components/Sidebar/components/Dot\";\r\n\r\nimport Paper from \"../../components/Paper\";\r\nimport { persianNumber, getRandomColorFromTheme } from \"../../helpers/utils\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { useEffect } from \"react\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\n\r\nconst RADIAN = Math.PI / 180;\r\nconst renderCustomizedLabel = ({\r\n  cx,\r\n  cy,\r\n  midAngle,\r\n  innerRadius,\r\n  outerRadius,\r\n  percent,\r\n  index,\r\n}) => {\r\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n  return (\r\n    <text\r\n      x={x}\r\n      y={y}\r\n      fill=\"white\"\r\n      textAnchor={x > cx ? \"start\" : \"end\"}\r\n      dominantBaseline=\"central\"\r\n    >\r\n      {`${persianNumber((percent * 100).toFixed(0))}%`}\r\n    </text>\r\n  );\r\n};\r\nconst incomeOutcomeChart = [\r\n  {\r\n    date: \"Page A\",\r\n    income: 4000,\r\n    outcome: 2400,\r\n  },\r\n  {\r\n    date: \"Page B\",\r\n    income: 3000,\r\n    outcome: 1398,\r\n  },\r\n];\r\nconst factorPriceChart = [\r\n  {\r\n    date: \"Page A\",\r\n    buy: 4000,\r\n    sell: 2400,\r\n  },\r\n  {\r\n    date: \"Page B\",\r\n    buy: 3000,\r\n    sell: 1398,\r\n  },\r\n];\r\nconst empoyeeTrafficChart = [\r\n  {\r\n    subject: \"فروردین\",\r\n    A: 100,\r\n  },\r\n  {\r\n    subject: \"ادریبهشت\",\r\n    A: 60,\r\n  },\r\n  {\r\n    subject: \"خرداد\",\r\n    A: 69,\r\n  },\r\n  {\r\n    subject: \"تیر\",\r\n    A: 75,\r\n  },\r\n  {\r\n    subject: \"مرداد\",\r\n    A: 95,\r\n  },\r\n  {\r\n    subject: \"شهریور\",\r\n    A: 90,\r\n  },\r\n  {\r\n    subject: \"مهر\",\r\n    A: 62,\r\n  },\r\n  {\r\n    subject: \"آبان\",\r\n    A: 100,\r\n  },\r\n  {\r\n    subject: \"آذر\",\r\n    A: 85,\r\n  },\r\n  {\r\n    subject: \"دی\",\r\n    A: 43,\r\n  },\r\n  {\r\n    subject: \"بهمن\",\r\n    A: 72,\r\n  },\r\n  {\r\n    subject: \"اسفند\",\r\n    A: 86,\r\n  },\r\n];\r\n\r\nconst trafficDayliChart = [\r\n  { name: \"حاضرین\", value: 15, color: \"#00989D\" },\r\n  { name: \"غائبین\", value: 5, color: \"#FF5C93\" },\r\n];\r\n\r\nexport default function Dashboard(props) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n  const history = useHistory();\r\n  const [pieChart, setPieChart] = useState([]);\r\n  const [paymentChart, setPaymentChart] = useState([]);\r\n  const [factorChart, setFactorChart] = useState([]);\r\n  const [showFilterBoxPayment, setShowFilterBoxPayment] = useState(false);\r\n  const [showFilterBoxFactor, setShowFilterBoxFactor] = useState(false);\r\n  const [selectedFromDateFactor, handleFromDateChangeFactor] = useState(\r\n    moment(),\r\n  );\r\n  const [selectedToDateFactor, handleToDateChangeFactor] = useState(moment());\r\n  const [selectedFromDatePayment, handleFromDateChangePayment] = useState(\r\n    moment(),\r\n  );\r\n  const [selectedToDatePayment, handleToDateChangePayment] = useState(moment());\r\n\r\n  const getDashboardRequest = useApi({\r\n    method: \"get\",\r\n    url: `dashboard/cashes`,\r\n  });\r\n\r\n  const getPaymentRequest = useApi({\r\n    method: \"get\",\r\n    url: showFilterBoxPayment\r\n      ? `dashboard/payments?{from:${selectedFromDatePayment._d.toISOString()},to:${selectedToDatePayment._d.toISOString()}}`\r\n      : \"dashboard/payments\",\r\n  });\r\n\r\n  const getFactorRequest = useApi({\r\n    method: \"get\",\r\n    url: showFilterBoxFactor\r\n      ? `dashboard/invoices?{from:${selectedFromDateFactor._d.toISOString()},to:${selectedToDateFactor._d.toISOString()}}`\r\n      : \"dashboard/invoices\",\r\n  });\r\n\r\n  const onClickPaper = (type) => {\r\n    history.push(`/app/${type}`);\r\n  };\r\n\r\n  const onChnageDateFactor = (e, type) => {\r\n    if (type === \"from\") {\r\n      handleFromDateChangeFactor(e);\r\n    } else {\r\n      handleToDateChangeFactor(e);\r\n    }\r\n  };\r\n\r\n  const onChnageDatePayment = (e, type) => {\r\n    if (type === \"from\") {\r\n      handleFromDateChangePayment(e);\r\n    } else {\r\n      handleToDateChangePayment(e);\r\n    }\r\n  };\r\n\r\n  const getPieChartData = async () => {\r\n    const dashboardChart = await getDashboardRequest.execute();\r\n    const { cashDesks } = dashboardChart;\r\n    const newCashDesks = [];\r\n    cashDesks?.map((item) => {\r\n      newCashDesks.push({ ...item, color: getRandomColorFromTheme() });\r\n    });\r\n    setPieChart(newCashDesks);\r\n  };\r\n\r\n  const getPaymentChart = async () => {\r\n    const chart = await getPaymentRequest.execute();\r\n    const { payments } = chart;\r\n    setPaymentChart(payments);\r\n  };\r\n\r\n  const getFactorChart = async () => {\r\n    const chart = await getFactorRequest.execute();\r\n    const { invoices } = chart;\r\n    setFactorChart(invoices);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPieChartData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getPaymentChart();\r\n  }, [selectedFromDatePayment, selectedToDatePayment]);\r\n\r\n  useEffect(() => {\r\n    getFactorChart();\r\n  }, [selectedFromDateFactor, selectedToDateFactor]);\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={4} style={{ marginBottom: 20 }}>\r\n        <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          <Paper\r\n            icon=\"shopping_basket\"\r\n            onClick={() => {\r\n              onClickPaper(\"invoice-detail?type=BUY\");\r\n            }}\r\n          >\r\n            <div className={classes.paperTitle}>\r\n              <Typography variant=\"h3\">ثبت خرید</Typography>\r\n            </div>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          <Paper\r\n            icon=\"sell\"\r\n            onClick={() => {\r\n              onClickPaper(\"invoice-detail?type=SELL\");\r\n            }}\r\n          >\r\n            <div className={classes.paperTitle}>\r\n              <Typography variant=\"h3\">ثبت فروش</Typography>\r\n            </div>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          <Paper\r\n            icon=\"move_to_inbox\"\r\n            onClick={() => {\r\n              onClickPaper(\"payment-detail?type=INCOME\");\r\n            }}\r\n          >\r\n            <div className={classes.paperTitle}>\r\n              <Typography variant=\"h3\">ثبت دریافت</Typography>\r\n            </div>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          <Paper\r\n            icon=\"unarchive\"\r\n            onClick={() => {\r\n              onClickPaper(\"payment-detail?type=OUTCOME\");\r\n            }}\r\n          >\r\n            <div className={classes.paperTitle}>\r\n              <Typography variant=\"h3\">ثبت پرداخت</Typography>\r\n            </div>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={4}>\r\n        <Grid item lg={6} xs={12}>\r\n          <Widget\r\n            title=\"موجودی ده روز اخیر صندوق ها\"\r\n            upperTitle\r\n            className={classes.card}\r\n            bodyClass={classes.fullHeightBody}\r\n          >\r\n            <div className={classes.serverOverviewElement}>\r\n              <Typography\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.serverOverviewElementText}\r\n                noWrap\r\n              >\r\n                صندوق 1\r\n              </Typography>\r\n              <div className={classes.serverOverviewElementChartWrapper}>\r\n                <ResponsiveContainer height={50} width=\"99%\">\r\n                  <AreaChart data={getRandomData(10)}>\r\n                    <Area\r\n                      type=\"natural\"\r\n                      dataKey=\"value\"\r\n                      stroke={theme.palette.secondary.main}\r\n                      fill={theme.palette.secondary.light}\r\n                      strokeWidth={2}\r\n                      fillOpacity=\"0.25\"\r\n                    />\r\n                  </AreaChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n            <div className={classes.serverOverviewElement}>\r\n              <Typography\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.serverOverviewElementText}\r\n                noWrap\r\n              >\r\n                صندوق 2\r\n              </Typography>\r\n              <div className={classes.serverOverviewElementChartWrapper}>\r\n                <ResponsiveContainer height={50} width=\"99%\">\r\n                  <AreaChart data={getRandomData(10)}>\r\n                    <Area\r\n                      type=\"natural\"\r\n                      dataKey=\"value\"\r\n                      stroke={theme.palette.primary.main}\r\n                      fill={theme.palette.primary.light}\r\n                      strokeWidth={2}\r\n                      fillOpacity=\"0.25\"\r\n                    />\r\n                  </AreaChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n            <div className={classes.serverOverviewElement}>\r\n              <Typography\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.serverOverviewElementText}\r\n                noWrap\r\n              >\r\n                صندوق 3\r\n              </Typography>\r\n              <div className={classes.serverOverviewElementChartWrapper}>\r\n                <ResponsiveContainer height={50} width=\"99%\">\r\n                  <AreaChart data={getRandomData(10)}>\r\n                    <Area\r\n                      type=\"natural\"\r\n                      dataKey=\"value\"\r\n                      stroke={theme.palette.warning.main}\r\n                      fill={theme.palette.warning.light}\r\n                      strokeWidth={2}\r\n                      fillOpacity=\"0.25\"\r\n                    />\r\n                  </AreaChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item lg={6} xs={12}>\r\n          <Paper\r\n            icon=\"transfer_within_a_station\"\r\n            onClick={() => {\r\n              onClickPaper(\"traffic\");\r\n            }}\r\n          >\r\n            <div\r\n              className={classes.paperTitle}\r\n              style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}\r\n            >\r\n              <div>\r\n                <Typography color=\"text-s\" variant=\"h3\">\r\n                  حضور و غیاب\r\n                </Typography>\r\n                <div\r\n                  className={classes.performanceLegendWrapper}\r\n                  style={{ marginTop: 20 }}\r\n                >\r\n                  <div className={classes.legendElement}>\r\n                    <Dot color=\"secondary\" />\r\n                    <Typography\r\n                      color=\"text\"\r\n                      colorBrightness=\"secondary\"\r\n                      className={classes.legendElementText}\r\n                    >\r\n                      غائبین\r\n                    </Typography>\r\n                  </div>\r\n                  <div className={classes.legendElement}>\r\n                    <Dot color=\"primary\" />\r\n                    <Typography\r\n                      color=\"text\"\r\n                      colorBrightness=\"secondary\"\r\n                      className={classes.legendElementText}\r\n                    >\r\n                      حاضرین\r\n                    </Typography>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <PieChart width={250} height={100}>\r\n                <Pie\r\n                  data={trafficDayliChart}\r\n                  cx={120}\r\n                  cy={100}\r\n                  startAngle={180}\r\n                  endAngle={0}\r\n                  innerRadius={60}\r\n                  outerRadius={80}\r\n                  fill=\"#8884d8\"\r\n                  paddingAngle={5}\r\n                  dataKey=\"value\"\r\n                >\r\n                  {trafficDayliChart.map((entry, index) => (\r\n                    <Cell key={`cell-${index}`} fill={entry.color} />\r\n                  ))}\r\n                </Pie>\r\n                <Tooltip />\r\n              </PieChart>\r\n            </div>\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid style={{ height: 500 }} item lg={6} xs={12}>\r\n          <Widget\r\n            title=\"میزان حضور پرسنل\"\r\n            upperTitle\r\n            bodyClass={classes.fullHeightBody}\r\n            className={classes.card}\r\n          >\r\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n              <RadarChart\r\n                cx=\"50%\"\r\n                cy=\"50%\"\r\n                outerRadius=\"80%\"\r\n                data={empoyeeTrafficChart}\r\n              >\r\n                <PolarGrid />\r\n                <PolarAngleAxis dataKey=\"subject\" />\r\n                <PolarRadiusAxis />\r\n                <Radar\r\n                  name=\"Mike\"\r\n                  dataKey=\"A\"\r\n                  stroke=\"#8884d8\"\r\n                  fill=\"#8884d8\"\r\n                  fillOpacity={0.6}\r\n                />\r\n              </RadarChart>\r\n            </ResponsiveContainer>\r\n          </Widget>\r\n        </Grid>\r\n\r\n        <Grid item lg={6} xs={12}>\r\n          <Widget title=\"موجودی صندوق ها\" upperTitle className={classes.card}>\r\n            <Grid container spacing={2}>\r\n              {pieChart.length && (\r\n                <Grid item sm={6} xs={12}>\r\n                  <div style={{ width: \"100%\", height: \"330px\" }}>\r\n                    <div style={{ width: \"100%\", height: \"100%\" }}>\r\n                      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                        <PieChart width=\"300\" height=\"400\">\r\n                          <Pie\r\n                            data={pieChart}\r\n                            cx=\"50%\"\r\n                            cy=\"50%\"\r\n                            labelLine={false}\r\n                            label={renderCustomizedLabel}\r\n                            outerRadius={120}\r\n                            fill=\"#8884d8\"\r\n                            dataKey=\"amount\"\r\n                          >\r\n                            {pieChart.map((entry, index) => (\r\n                              <Cell key={`cell-${index}`} fill={entry.color} />\r\n                            ))}\r\n                          </Pie>\r\n                        </PieChart>\r\n                      </ResponsiveContainer>\r\n                    </div>\r\n                  </div>\r\n                </Grid>\r\n              )}\r\n              <Grid item sm={6} xs={12}>\r\n                <div className={classes.pieChartLegendWrapper}>\r\n                  {pieChart.map(({ name, amount, color }, index) => (\r\n                    <div key={color} className={classes.legendItemContainer}>\r\n                      <Dot color={color} />\r\n                      <Typography variant=\"h6\" style={{ whiteSpace: \"nowrap\" }}>\r\n                        &nbsp;{name}&nbsp;\r\n                      </Typography>\r\n                      <Typography\r\n                        color=\"text\"\r\n                        variant=\"h4\"\r\n                        colorBrightness=\"secondary\"\r\n                      >\r\n                        &nbsp;{persianNumber(amount)}\r\n                      </Typography>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </Widget>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Widget\r\n            bodyClass={classes.mainChartBody}\r\n            header={\r\n              <div className={classes.mainChartHeader}>\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                >\r\n                  دریافتی و پرداختی ها\r\n                </Typography>\r\n\r\n                {showFilterBoxPayment && (\r\n                  <>\r\n                    <Grid item lg={3} xs={12} className={classes.datePicker}>\r\n                      <DatePicker\r\n                        autoOk\r\n                        name=\"date\"\r\n                        label=\"از تاریخ\"\r\n                        inputVariant=\"outlined\"\r\n                        okLabel=\"تأیید\"\r\n                        cancelLabel=\"لغو\"\r\n                        labelFunc={(date) =>\r\n                          date ? date.format(\"jYYYY/jMM/jDD\") : \"\"\r\n                        }\r\n                        value={selectedFromDatePayment}\r\n                        onChange={(e) => onChnageDatePayment(e, \"from\")}\r\n                        style={{ width: \"100%\" }}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item lg={3} xs={12} className={classes.datePicker}>\r\n                      <DatePicker\r\n                        autoOk\r\n                        name=\"date\"\r\n                        label=\"تا تاریخ\"\r\n                        inputVariant=\"outlined\"\r\n                        okLabel=\"تأیید\"\r\n                        cancelLabel=\"لغو\"\r\n                        labelFunc={(date) =>\r\n                          date ? date.format(\"jYYYY/jMM/jDD\") : \"\"\r\n                        }\r\n                        value={selectedToDatePayment}\r\n                        onChange={(e) => onChnageDatePayment(e, \"to\")}\r\n                        style={{ width: \"100%\" }}\r\n                      />\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n                <div className={classes.mainChartHeaderLabels}>\r\n                  <div className={classes.mainChartHeaderLabel}>\r\n                    <Dot color=\"primary\" />\r\n                    <Typography className={classes.mainChartLegentElement}>\r\n                      دریافتی\r\n                    </Typography>\r\n                  </div>\r\n                  <div className={classes.mainChartHeaderLabel}>\r\n                    <Dot color=\"secondary\" />\r\n                    <Typography className={classes.mainChartLegentElement}>\r\n                      پرداختی\r\n                    </Typography>\r\n                  </div>\r\n                  <MUIToolTip title=\"فیلتر\">\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setShowFilterBoxPayment(!showFilterBoxPayment)\r\n                      }\r\n                    >\r\n                      <i class=\"material-icons-round\">filter_alt</i>\r\n                    </IconButton>\r\n                  </MUIToolTip>\r\n                </div>\r\n              </div>\r\n            }\r\n          >\r\n            <ResponsiveContainer width=\"100%\" height={350}>\r\n              <LineChart\r\n                width={500}\r\n                height={300}\r\n                data={paymentChart}\r\n                margin={{\r\n                  top: 5,\r\n                  right: 30,\r\n                  left: 20,\r\n                  bottom: 5,\r\n                }}\r\n              >\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"date\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Line\r\n                  type=\"monotone\"\r\n                  dataKey=\"income\"\r\n                  stroke={theme.palette.primary.main}\r\n                  activeDot={{ r: 8 }}\r\n                />\r\n                <Line\r\n                  type=\"monotone\"\r\n                  dataKey=\"outcome\"\r\n                  stroke={theme.palette.secondary.main}\r\n                />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          </Widget>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Widget\r\n            bodyClass={classes.mainChartBody}\r\n            header={\r\n              <div className={classes.mainChartHeader}>\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                >\r\n                  مبلغ فاکتور ها\r\n                </Typography>\r\n                {showFilterBoxFactor && (\r\n                  <>\r\n                    <Grid item lg={3} xs={12} className={classes.datePicker}>\r\n                      <DatePicker\r\n                        autoOk\r\n                        name=\"date\"\r\n                        label=\"از تاریخ\"\r\n                        inputVariant=\"outlined\"\r\n                        okLabel=\"تأیید\"\r\n                        cancelLabel=\"لغو\"\r\n                        labelFunc={(date) =>\r\n                          date ? date.format(\"jYYYY/jMM/jDD\") : \"\"\r\n                        }\r\n                        value={selectedFromDateFactor}\r\n                        onChange={(e) => onChnageDateFactor(e, \"from\")}\r\n                        style={{ width: \"100%\" }}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item lg={3} xs={12} className={classes.datePicker}>\r\n                      <DatePicker\r\n                        autoOk\r\n                        name=\"date\"\r\n                        label=\"تا تاریخ\"\r\n                        inputVariant=\"outlined\"\r\n                        okLabel=\"تأیید\"\r\n                        cancelLabel=\"لغو\"\r\n                        labelFunc={(date) =>\r\n                          date ? date.format(\"jYYYY/jMM/jDD\") : \"\"\r\n                        }\r\n                        value={selectedToDateFactor}\r\n                        onChange={(e) => onChnageDateFactor(e, \"to\")}\r\n                        style={{ width: \"100%\" }}\r\n                      />\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n                <div className={classes.mainChartHeaderLabels}>\r\n                  <div className={classes.mainChartHeaderLabel}>\r\n                    <Dot color=\"primary\" />\r\n                    <Typography className={classes.mainChartLegentElement}>\r\n                      فاکتور فروش\r\n                    </Typography>\r\n                  </div>\r\n                  <div className={classes.mainChartHeaderLabel}>\r\n                    <Dot color=\"secondary\" />\r\n                    <Typography className={classes.mainChartLegentElement}>\r\n                      فاکتور خرید\r\n                    </Typography>\r\n                  </div>\r\n                  <MUIToolTip title=\"فیلتر\">\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setShowFilterBoxFactor(!showFilterBoxFactor)\r\n                      }\r\n                    >\r\n                      <i class=\"material-icons-round\">filter_alt</i>\r\n                    </IconButton>\r\n                  </MUIToolTip>\r\n                </div>\r\n              </div>\r\n            }\r\n          >\r\n            {factorChart.length && (\r\n              <div style={{ width: \"100%\", height: \"450px\" }}>\r\n                <div style={{ width: \"100%\", height: \"100%\" }}>\r\n                  <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                    <BarChart\r\n                      width={100}\r\n                      height={300}\r\n                      data={factorChart}\r\n                      margin={{\r\n                        top: 5,\r\n                        right: 30,\r\n                        left: 20,\r\n                        bottom: 5,\r\n                      }}\r\n                    >\r\n                      <CartesianGrid strokeDasharray=\"3 3\" />\r\n                      <XAxis dataKey=\"date\" />\r\n                      <YAxis />\r\n                      <Tooltip />\r\n                      <Bar dataKey=\"buy\" fill=\"#3CD4A0\" />\r\n                      <Bar dataKey=\"sell\" fill=\"#FF5C93\" />\r\n                    </BarChart>\r\n                  </ResponsiveContainer>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </Widget>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\n// #######################################################################\r\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\r\n  var array = new Array(length).fill();\r\n  let lastValue;\r\n\r\n  return array.map((item, index) => {\r\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\r\n\r\n    while (\r\n      randomValue <= min ||\r\n      randomValue >= max ||\r\n      (lastValue && randomValue - lastValue > maxDiff)\r\n    ) {\r\n      randomValue = Math.floor(Math.random() * multiplier + 1);\r\n    }\r\n\r\n    lastValue = randomValue;\r\n\r\n    return { value: randomValue };\r\n  });\r\n}\r\n\r\nfunction getMainChartData() {\r\n  var resultArray = [];\r\n  var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\r\n  var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\r\n  var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\r\n\r\n  for (let i = 0; i < tablet.length; i++) {\r\n    resultArray.push({\r\n      tablet: tablet[i].value,\r\n      desktop: desktop[i].value,\r\n      mobile: mobile[i].value,\r\n    });\r\n  }\r\n\r\n  return resultArray;\r\n}\r\n","import React from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\n\r\nconst ITEM_HEIGHT = 48;\r\n\r\nexport default function TableRowMenu(props) {\r\n  const { options, hadleAction } = props;\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleSelect = (type) => {\r\n    hadleAction(type);\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <IconButton\r\n        aria-label=\"more\"\r\n        aria-controls=\"long-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n      >\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5,\r\n          },\r\n        }}\r\n      >\r\n        {options.map((option) => (\r\n          <MenuItem key={option.id} onClick={() => handleSelect(option.id)}>\r\n            {option.title}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Toolbar,\r\n  Typography,\r\n  IconButton,\r\n  Tooltip,\r\n  TextField,\r\n  Button,\r\n  Collapse,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/SearchRounded\";\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  box: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst TableTop = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const {\r\n    title,\r\n    onAdd,\r\n    FilterComponent,\r\n    handleSearch,\r\n    toolbarClass,\r\n    addButtonClass,\r\n    minimal,\r\n    defaultSearch,\r\n  } = props;\r\n  const [showSearchText, setShowSearchText] = useState(!!defaultSearch);\r\n  const [showFilterBox, setShowFilterBox] = useState(false);\r\n  const [searchText, setSearchText] = useState(defaultSearch);\r\n\r\n  const onChangeSearch = (event) => {\r\n    const { value } = event.target;\r\n    setSearchText(value);\r\n  };\r\n\r\n  const OnSearchKeyPress = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      handleSearch(searchText);\r\n    }\r\n  };\r\n\r\n  const onRemoveSearch = () => {\r\n    setSearchText(\"\");\r\n    handleSearch(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Toolbar className={clsx(classes.root, toolbarClass)}>\r\n        <Typography variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          {title}\r\n        </Typography>\r\n        <div className={classes.box}>\r\n          {showSearchText && (\r\n            <TextField\r\n              value={searchText}\r\n              size=\"small\"\r\n              label=\"جستجو\"\r\n              variant=\"outlined\"\r\n              onChange={onChangeSearch}\r\n              onKeyDown={OnSearchKeyPress}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <i\r\n                      className=\"material-icons-round\"\r\n                      style={{ cursor: \"pointer\" }}\r\n                      onClick={onRemoveSearch}\r\n                    >\r\n                      clear\r\n                    </i>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n          {handleSearch && (\r\n            <Tooltip title=\"جستجو در جدول\">\r\n              <IconButton\r\n                aria-label=\"filter list\"\r\n                onClick={() => setShowSearchText(!showSearchText)}\r\n              >\r\n                <SearchIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          )}\r\n          {FilterComponent && (\r\n            <Tooltip title=\"فیلتر\">\r\n              <IconButton onClick={() => setShowFilterBox(!showFilterBox)}>\r\n                <i class=\"material-icons-round\">filter_alt</i>\r\n              </IconButton>\r\n            </Tooltip>\r\n          )}\r\n\r\n          {typeof onAdd === \"function\" && (\r\n            <Button\r\n              variant={minimal ? \"\" : \"contained\"}\r\n              color={minimal ? \"\" : \"primary\"}\r\n              className={addButtonClass}\r\n              onClick={onAdd}\r\n            >\r\n              {minimal ? \"\" : \"افزودن\"}\r\n              <span class=\"material-icons-round\" style={{ color: \"white\" }}>\r\n                add\r\n              </span>\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </Toolbar>\r\n      <Collapse in={showFilterBox}>{FilterComponent}</Collapse>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TableTop;\r\n","import React from \"react\";\r\n\r\nimport {\r\n  Typography,\r\n  TableSortLabel,\r\n  TableRow,\r\n  TableCell,\r\n  TableHead,\r\n} from \"@material-ui/core\";\r\n\r\nfunction TableHeader(props) {\r\n  const { order, orderBy, onRequestSort, headCells } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            style={{ textAlign: \"right\" }}\r\n            key={headCell.id}\r\n            padding={\"none\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              className={{ display: \"flex\" }}\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              <Typography variant=\"h6\">{headCell.label}</Typography>\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nexport default TableHeader;\r\n","import React from \"react\";\r\n\r\nimport { TablePagination } from \"@material-ui/core\";\r\n\r\nfunction TablePaging(props) {\r\n  const {\r\n    handleChangePage,\r\n    count,\r\n    handleChangeRowsPerPage,\r\n    page,\r\n    rowsPerPage,\r\n  } = props;\r\n  return (\r\n    <TablePagination\r\n      style={{ display: \"flex\" }}\r\n      rowsPerPageOptions={[10, 25, 50]}\r\n      component=\"div\"\r\n      count={count}\r\n      rowsPerPage={rowsPerPage}\r\n      page={page}\r\n      onChangePage={handleChangePage}\r\n      onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      labelRowsPerPage=\"تعداد ردیف \"\r\n      backIconButtonText=\"صفحه قبل\"\r\n      nextIconButtonText=\"صفحه بعد\"\r\n      labelDisplayedRows={({ from, to, count }) =>\r\n        `${from}-${to} از ${count !== -1 ? count : 0}`\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default TablePaging;\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Grid,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport { getRandomNumber } from \"../../helpers/utils\";\r\n\r\nexport default function CustomSkeleton({ headCount }) {\r\n  return (\r\n    <Paper style={{ padding: 10 }}>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        style={{\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          padding: \"20px 0\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <Grid item style={{ width: `20%` }}>\r\n          <Skeleton variant=\"rect\" />\r\n        </Grid>\r\n        <Grid item style={{ width: `15%` }}>\r\n          <Skeleton variant=\"rect\" />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        style={{ width: \"100%\", display: \"flex\", padding: \"20px 0\" }}\r\n      >\r\n        {headCount.map((item) => {\r\n          return (\r\n            <Grid item style={{ width: `${100 / headCount.length}%` }}>\r\n              <Skeleton variant=\"text\" />\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n      <Divider />\r\n      <div>\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n          style={{ width: \"100%\", display: \"flex\", padding: \"10px 0\" }}\r\n        >\r\n          {headCount.map((item) => {\r\n            return (\r\n              <Grid item style={{ width: `${100 / headCount.length}%` }}>\r\n                <Skeleton\r\n                  variant=\"text\"\r\n                  width={`${getRandomNumber(60, 100)}%`}\r\n                />\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n        <Divider />\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n          style={{ width: \"100%\", display: \"flex\", padding: \"10px 0\" }}\r\n        >\r\n          {headCount.map((item) => {\r\n            return (\r\n              <Grid item style={{ width: `${100 / headCount.length}%` }}>\r\n                <Skeleton\r\n                  variant=\"text\"\r\n                  width={`${getRandomNumber(60, 100)}%`}\r\n                />\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n        <Divider />\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n          style={{ width: \"100%\", display: \"flex\", padding: \"10px 0\" }}\r\n        >\r\n          {headCount.map((item) => {\r\n            return (\r\n              <Grid item style={{ width: `${100 / headCount.length}%` }}>\r\n                <Skeleton\r\n                  variant=\"text\"\r\n                  width={`${getRandomNumber(60, 100)}%`}\r\n                />\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n        <Divider />\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n          style={{ width: \"100%\", display: \"flex\", padding: \"10px 0\" }}\r\n        >\r\n          {headCount.map((item) => {\r\n            return (\r\n              <Grid item style={{ width: `${100 / headCount.length}%` }}>\r\n                <Skeleton\r\n                  variant=\"text\"\r\n                  width={`${getRandomNumber(60, 100)}%`}\r\n                />\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n      </div>\r\n      <Divider />\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        style={{ width: \"100%\", display: \"flex\", padding: \"20px 0\" }}\r\n      >\r\n        <Grid item style={{ width: `10%` }}>\r\n          <Skeleton variant=\"rect\" />\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { convertParamsToQueryString, hasPermission } from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"username\",\r\n    label: \"نام کاربری\",\r\n  },\r\n  {\r\n    id: \"firstName\",\r\n    label: \"نام\",\r\n  },\r\n  { id: \"lastName\", label: \"نام خانوادگی\" },\r\n  {\r\n    id: \"mobile\",\r\n    label: \"موبایل\",\r\n  },\r\n  { id: \"phone\", label: \"تلفن\" },\r\n  { id: \"action\" },\r\n];\r\n\r\nconst MainList = () => {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"username\");\r\n  const [search, setSearch] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const history = useHistory();\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onAdd = () => {\r\n    history.push(\"/app/user-detail?action=add\");\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const getUserRequest = useApi({\r\n    method: \"get\",\r\n    url: `user?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n    })}`,\r\n  });\r\n\r\n  const deleteUseRequest = useApi({\r\n    method: \"delete\",\r\n    url: `user`,\r\n  });\r\n\r\n  const handleAction = (id, type) => {\r\n    const types = {\r\n      edit: () => {\r\n        history.push(`/app/user-detail?action=edit&id=${id}`);\r\n      },\r\n      delete: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            await deleteUseRequest.execute(null, id);\r\n            setList(list.filter((item) => item.id !== id));\r\n            DialogActions.hide({ name: \"delete\" });\r\n          },\r\n          name: \"delete\",\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const getData = async () => {\r\n    const userList = await getUserRequest.execute();\r\n    setList(userList.data);\r\n    setTotal(userList.total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.CASH_LIST) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getUserRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title=\"لیست کاربران\"\r\n                    onAdd={onAdd}\r\n                    handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                  />\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          if (!row.isAdmin) {\r\n                            return (\r\n                              <TableRow\r\n                                hover\r\n                                tabIndex={-1}\r\n                                key={row.id}\r\n                                style={{ paddingRight: 10 }}\r\n                              >\r\n                                <TableCell padding=\"none\">\r\n                                  {row.username}\r\n                                </TableCell>\r\n                                <TableCell padding=\"none\">\r\n                                  {row.firstName}\r\n                                </TableCell>\r\n                                <TableCell padding=\"none\">\r\n                                  {row.lastName}\r\n                                </TableCell>\r\n                                <TableCell padding=\"none\">\r\n                                  {row.mobile}\r\n                                </TableCell>\r\n                                <TableCell padding=\"none\">\r\n                                  {row.phone}\r\n                                </TableCell>\r\n\r\n                                <TableCell padding=\"none\">\r\n                                  <TableRowMenu\r\n                                    options={[\r\n                                      { id: \"edit\", title: \"ویرایش\" },\r\n                                      // { id: \"delete\", title: \"حذف\" },\r\n                                    ]}\r\n                                    hadleAction={(type) =>\r\n                                      handleAction(row.id, type)\r\n                                    }\r\n                                  />\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            );\r\n                          }\r\n                        })}\r\n                        {!list.length && !getUserRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default MainList;\r\n","import { CircularProgress } from \"@material-ui/core\";\r\n\r\nconst Circular = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flex: 1,\r\n        heght: \"100vh\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <CircularProgress />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Circular;\r\n","import React, { useState } from \"react\";\r\nimport { Grid, Button, FormControlLabel, Checkbox } from \"@material-ui/core\";\r\n\r\nimport Constant from \"../../helpers/constant\";\r\n\r\nexport default function Permission({ onSubmit, defaultPermissions }) {\r\n  const permissions = Constant.PERMISSIONS;\r\n  const [userAccess, setUserAccess] = useState(defaultPermissions || []);\r\n\r\n  const handleChange = (item) => {\r\n    if (userAccess.includes(item)) {\r\n      return setUserAccess(userAccess.filter((i) => i !== item));\r\n    }\r\n    setUserAccess([...userAccess, item]);\r\n  };\r\n\r\n  return (\r\n    <Grid item sm={12}>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        style={{\r\n          maxHeight: 200,\r\n          overflowY: \"auto\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          flexWrap: \"wrap\",\r\n          marginBottom: 20,\r\n        }}\r\n      >\r\n        {permissions.map((item) => {\r\n          return (\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={userAccess.includes(item.value)}\r\n                  onChange={() => handleChange(item.value)}\r\n                  name={item.value}\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label={item.label}\r\n            />\r\n          );\r\n        })}\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          onClick={() => onSubmit(userAccess)}\r\n        >\r\n          تایید\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport clsx from \"clsx\";\r\nimport { getQueryString } from \"../../helpers/utils\";\r\nimport CircularProgress from \"../../components/CircularProgress\";\r\nimport Permission from \"./permission\";\r\nimport dialogAction from \"../../redux/actions/dialogAction\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n}));\r\n\r\nexport default function MainDetail() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const id = getQueryString(\"id\");\r\n  const action = getQueryString(\"action\");\r\n  const [detail, setDetail] = useState({});\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n  const [isPassword, setIsPassword] = useState(true);\r\n  const addUserRequest = useApi({\r\n    method: \"post\",\r\n    url: `user`,\r\n  });\r\n  const editUserRequest = useApi({\r\n    method: \"put\",\r\n    url: `user/${id}`,\r\n  });\r\n  const detailUserRequest = useApi({\r\n    method: \"get\",\r\n    url: `user/${id}`,\r\n  });\r\n\r\n  const onChangeViewClick = function () {\r\n    setIsPassword(!isPassword);\r\n  };\r\n\r\n  const onSubmitPermission = async (data, permissions) => {\r\n    const value = { ...data, permissions };\r\n    if (id) {\r\n      await editUserRequest.execute(value);\r\n    } else {\r\n      await addUserRequest.execute(value);\r\n    }\r\n    onDismissPermission();\r\n  };\r\n\r\n  const onDismissPermission = () => {\r\n    dialogAction.hide({ name: \"permission\" });\r\n  };\r\n\r\n  const onShowPermissionDialog = (data) => {\r\n    dialogAction.show({\r\n      title: \"دسترسی ها\",\r\n      component: (\r\n        <Permission\r\n          defaultPermissions={detail?.permissions}\r\n          onSubmit={(value) => onSubmitPermission(data, value)}\r\n          onDismiss={onDismissPermission}\r\n        />\r\n      ),\r\n      name: \"permission\",\r\n      size: \"8\",\r\n      confirm: false,\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    onShowPermissionDialog(data);\r\n  };\r\n\r\n  const onReject = () => {\r\n    history.push(\"/app/user-list\");\r\n  };\r\n\r\n  const getDetail = async () => {\r\n    const detail = await detailUserRequest.execute();\r\n    setDetail(detail.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      getDetail();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(detail);\r\n  }, [reset, detail]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      {!detailUserRequest.pending ? (\r\n        <Grid item lg={6} sm={12} className={classes.root}>\r\n          <Paper className={classes.paper}>\r\n            <Typography\r\n              className={classes.title}\r\n              variant=\"h6\"\r\n              id=\"tableTitle\"\r\n              component=\"div\"\r\n            >\r\n              {id ? \"ویرایش کاربر\" : \"افزودن کاربر\"}\r\n            </Typography>\r\n\r\n            <Grid container spacing={3}>\r\n              <Fragment>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"نام\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.firstName}\r\n                          helperText={\r\n                            errors.firstName ? errors.firstName.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                    name=\"firstName\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"نام خانوادگی\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.lastName}\r\n                          helperText={\r\n                            errors.lastName ? errors.lastName.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                    name=\"lastName\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"نام کاربری\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.username}\r\n                          helperText={\r\n                            errors.username ? errors.username.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                    name=\"username\"\r\n                  />\r\n                </Grid>\r\n                {action === \"add\" && (\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"رمز عبور\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.password}\r\n                            helperText={\r\n                              errors.password ? errors.password.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            type={isPassword ? \"password\" : \"text\"}\r\n                            InputProps={{\r\n                              endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                  <i\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    className={clsx(\r\n                                      \"material-icons-round\",\r\n                                      classes.icon,\r\n                                    )}\r\n                                    onClick={onChangeViewClick}\r\n                                  >\r\n                                    {isPassword\r\n                                      ? \"visibility_off\"\r\n                                      : \"visibility\"}\r\n                                  </i>\r\n                                </InputAdornment>\r\n                              ),\r\n                            }}\r\n                          />\r\n                        );\r\n                      }}\r\n                      rules={{\r\n                        required: Constant.VALIDATION.REQUIRED,\r\n                        minLength: {\r\n                          value: 5,\r\n                          message: Constant.VALIDATION.PASSWORD,\r\n                        },\r\n                      }}\r\n                      name=\"password\"\r\n                    />\r\n                  </Grid>\r\n                )}\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"موبایل\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.mobile}\r\n                          helperText={\r\n                            errors.mobile ? errors.mobile.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    rules={{\r\n                      minLength: {\r\n                        value: 11,\r\n                        message: Constant.VALIDATION.MOBILE_NUMBER,\r\n                      },\r\n                      maxLength: {\r\n                        value: 11,\r\n                        message: Constant.VALIDATION.MOBILE_NUMBER,\r\n                      },\r\n                    }}\r\n                    name=\"mobile\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"تلفن\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.phone}\r\n                          helperText={errors.phone ? errors.phone.message : \"\"}\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    name=\"phone\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"آدرس\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.address}\r\n                          helperText={\r\n                            errors.address ? errors.address.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    name=\"address\"\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                    تایید\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={onReject}\r\n                  >\r\n                    بازگشت\r\n                  </Button>\r\n                </Grid>\r\n              </Fragment>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      ) : (\r\n        <CircularProgress />\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  status: {\r\n    color: \"#fff\",\r\n  },\r\n  CREDITOR: {\r\n    backgroundColor: theme.palette.success.main,\r\n  },\r\n  NODEBT: {\r\n    backgroundColor: theme.palette.gray.main,\r\n  },\r\n  DEBTOR: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: 7,\r\n  },\r\n}));\r\n","import React, { useState } from \"react\";\r\nimport { Grid, TextField, MenuItem, Button, Divider } from \"@material-ui/core\";\r\nimport Constant from \"../../helpers/constant\";\r\n\r\nconst personType = [\r\n  {\r\n    label: \"بدهکار\",\r\n    value: Constant.PERSON_STATUS.DEBTIOR,\r\n  },\r\n  { label: \"بی حساب\", value: Constant.PERSON_STATUS.NODEBT },\r\n  { label: \"طلبکار\", value: Constant.PERSON_STATUS.CREDITOR },\r\n];\r\n\r\nconst Filter = ({ onFilter }) => {\r\n  const [filterData, setFilterData] = useState({ name: \"\", status: \"\" });\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setFilterData({ ...filterData, [prop]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (typeof onFilter === \"function\") {\r\n      onFilter(filterData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3} alignItems=\"center\" style={{ padding: 10 }}>\r\n      <Grid item lg={3} xs={12}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          label=\"نام\"\r\n          onChange={handleChange(\"name\")}\r\n          value={filterData.name}\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n      </Grid>\r\n      <Grid item lg={3} xs={12}>\r\n        <TextField\r\n          select\r\n          label=\"وضعیت\"\r\n          onChange={handleChange(\"status\")}\r\n          value={filterData.status}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        >\r\n          {personType.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Grid>\r\n      <Grid item lg={3} xs={12}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n          تایید\r\n        </Button>\r\n      </Grid>\r\n      <Divider style={{ width: \"100%\" }} />\r\n    </Grid>\r\n  );\r\n};\r\nexport default Filter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Chip,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport {\r\n  convertParamsToQueryString,\r\n  hasPermission,\r\n  persianNumber,\r\n} from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport FilterComponent from \"./filter\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"firstName\",\r\n    label: \"نام\",\r\n  },\r\n  { id: \"lastName\", label: \"نام خانوادگی\" },\r\n  {\r\n    id: \"mobile\",\r\n    label: \"موبایل\",\r\n  },\r\n  { id: \"phone\", label: \"تلفن\" },\r\n  { id: \"remaining\", label: \"مانده حساب\" },\r\n  { id: \"status\", label: \"وضعیت\" },\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function MainList() {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [search, setSearch] = useState();\r\n  const [orderBy, setOrderBy] = useState(\"firstName\");\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [filter, setFilter] = useState();\r\n  const history = useHistory();\r\n  const [total, setTotal] = useState(0);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onAdd = () => {\r\n    history.push(\"/app/customer-detail\");\r\n  };\r\n\r\n  const getCustomerRequest = useApi({\r\n    method: \"get\",\r\n    url: `customer?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n      filter,\r\n    })}`,\r\n  });\r\n\r\n  const deleteUseRequest = useApi({\r\n    method: \"delete\",\r\n    url: `customer`,\r\n  });\r\n\r\n  const handleAction = (row, type) => {\r\n    const types = {\r\n      edit: () => {\r\n        history.push(`/app/customer-detail?id=${row.id}`);\r\n      },\r\n      delete: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            await deleteUseRequest.execute(null, row.id);\r\n            setList(list.filter((item) => item.id !== row.id));\r\n            DialogActions.hide({ name: \"delete\" });\r\n          },\r\n          name: \"delete\",\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n      transaction: () => {\r\n        history.push(`/app/customer-transaction?id=${row.id}`);\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onFilter = (data) => {\r\n    setFilter(data);\r\n    setPage(0);\r\n  };\r\n\r\n  const getData = async () => {\r\n    const customerList = await getCustomerRequest.execute();\r\n    setList(customerList.data);\r\n    setTotal(customerList.total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize, filter]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.CASH_LIST) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getCustomerRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title=\"لیست مشتریان\"\r\n                    onAdd={onAdd}\r\n                    FilterComponent={<FilterComponent onFilter={onFilter} />}\r\n                    handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                  />\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                            >\r\n                              <TableCell padding=\"none\">\r\n                                {row.firstName}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.lastName}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(row.mobile)}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(row.phone)}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(row.accountRemaining)?.replace(\r\n                                  \"-\",\r\n                                  \"\",\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                <Chip\r\n                                  label={Constant.PERSON_STATUS[row.status]}\r\n                                  className={clsx(\r\n                                    classes.status,\r\n                                    classes[row.status],\r\n                                  )}\r\n                                />\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                <TableRowMenu\r\n                                  options={[\r\n                                    { id: \"transaction\", title: \"تراکنش ها\" },\r\n                                    { id: \"edit\", title: \"ویرایش\" },\r\n                                    // { id: \"delete\", title: \"حذف\" },\r\n                                  ]}\r\n                                  hadleAction={(type) =>\r\n                                    handleAction(row, type)\r\n                                  }\r\n                                />\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getCustomerRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import clsx from \"clsx\";\r\nimport theme from \"../../themes/default\";\r\n\r\nexport const DeleteIcon = () => {\r\n  return (\r\n    <i\r\n      className={clsx(\"material-icons-round\")}\r\n      style={{ color: theme.palette.danger.main }}\r\n    >\r\n      clear\r\n    </i>\r\n  );\r\n};\r\n\r\nexport const EditIcon = () => {\r\n  return (\r\n    <i\r\n      className={clsx(\"material-icons-round\")}\r\n      style={{ color: theme.palette.primary.main }}\r\n    >\r\n      edit\r\n    </i>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Grid, MenuItem } from \"@material-ui/core\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport styles from \"./style\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nconst Account = ({ onSubmit, onDismiss, defaultValues }) => {\r\n  const [banks, setBanks] = useState([]);\r\n  const [selectedBank, setSelectedBank] = useState(\r\n    defaultValues?.bank.value || 1,\r\n  );\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n  const classes = styles();\r\n\r\n  const getBankRequest = useApi({\r\n    method: \"get\",\r\n    url: `bank`,\r\n  });\r\n\r\n  const getBanks = async () => {\r\n    const result = await getBankRequest.execute();\r\n    setBanks(result.data);\r\n  };\r\n\r\n  const getSelectedBank = () => {\r\n    return banks.find((item) => item.value === selectedBank);\r\n  };\r\n\r\n  const onDone = (data) => {\r\n    const newId = uuid();\r\n    const value = {\r\n      ...data,\r\n      bank: getSelectedBank(),\r\n      id: defaultValues ? defaultValues.id : newId,\r\n      isUpdate: !!defaultValues,\r\n    };\r\n    onSubmit(value);\r\n  };\r\n\r\n  const onChangeBank = (e) => {\r\n    setSelectedBank(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBanks();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(defaultValues);\r\n  }, [reset, defaultValues]);\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          select\r\n          label=\"بانک\"\r\n          onChange={onChangeBank}\r\n          value={selectedBank}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n          name=\"bank\"\r\n          SelectProps={{\r\n            classes: {\r\n              select: classes.rootSelect,\r\n            },\r\n          }}\r\n        >\r\n          {banks.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              <img\r\n                src={`${Constant.API_ADDRESS}/${option.logo}`}\r\n                alt={option.label}\r\n                style={{\r\n                  width: 25,\r\n                  height: 25,\r\n                  borderRadius: \"50%\",\r\n                  marginLeft: 10,\r\n                }}\r\n              />\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                fullWidth\r\n                value={value}\r\n                size=\"small\"\r\n                name={name}\r\n                label=\"شماره کارت\"\r\n                variant=\"outlined\"\r\n                onChange={onChange}\r\n                error={!!errors.accountCardNumber}\r\n                helperText={\r\n                  errors.accountCardNumber\r\n                    ? errors.accountCardNumber.message\r\n                    : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          rules={{\r\n            minLength: {\r\n              value: 16,\r\n              message: Constant.VALIDATION.CARD_NUMBER,\r\n            },\r\n            maxLength: {\r\n              value: 16,\r\n              message: Constant.VALIDATION.CARD_NUMBER,\r\n            },\r\n          }}\r\n          name=\"accountCardNumber\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                fullWidth\r\n                value={value}\r\n                size=\"small\"\r\n                name={name}\r\n                label=\"شماره حساب\"\r\n                variant=\"outlined\"\r\n                onChange={onChange}\r\n                error={!!errors.accountNumber}\r\n                helperText={\r\n                  errors.accountNumber ? errors.accountNumber.message : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          name=\"accountNumber\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                fullWidth\r\n                value={value}\r\n                size=\"small\"\r\n                name={name}\r\n                label=\"شماره شبا\"\r\n                variant=\"outlined\"\r\n                onChange={onChange}\r\n                error={!!errors.accountShaba}\r\n                helperText={\r\n                  errors.accountShaba ? errors.accountShaba.message : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          name=\"accountShaba\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                label=\"توضیحات\"\r\n                multiline\r\n                rows={4}\r\n                variant=\"outlined\"\r\n                name={name}\r\n                onChange={onChange}\r\n                value={value}\r\n                fullWidth\r\n                error={!!errors.description}\r\n                helperText={\r\n                  errors.description ? errors.description.message : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          name=\"description\"\r\n        />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          onClick={handleSubmit(onDone)}\r\n        >\r\n          تایید\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onDismiss}>\r\n          انصراف\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport { DeleteIcon, EditIcon } from \"../../components/icons\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { getQueryString } from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport Account from \"./account\";\r\nimport CircularProgress from \"../../components/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n}));\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"Name\",\r\n    label: \"نام بانک\",\r\n  },\r\n  { id: \"accountNumber\", label: \"شماره حساب \" },\r\n  {\r\n    id: \"CardNumber\",\r\n    label: \"شماره کارت\",\r\n  },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function MainDetail() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const id = getQueryString(\"id\");\r\n  const [detail, setDetail] = useState({});\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [category, setCategory] = useState([]);\r\n  const [customerCategory, setCustomerCategory] = useState(1);\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n\r\n  const addCustomerRequest = useApi({\r\n    method: \"post\",\r\n    url: `customer`,\r\n  });\r\n  const editCustomerRequest = useApi({\r\n    method: \"put\",\r\n    url: `customer/${id}`,\r\n  });\r\n  const detailCustomerRequest = useApi({\r\n    method: \"get\",\r\n    url: `customer/${id}`,\r\n  });\r\n\r\n  const customerCategoryRequest = useApi({\r\n    method: \"get\",\r\n    url: `customer/category`,\r\n  });\r\n\r\n  const deleteAccountRequest = useApi({\r\n    method: \"delete\",\r\n    url: `account`,\r\n  });\r\n\r\n  const onSubmit = async (data) => {\r\n    const newAccounts = [];\r\n    accounts.map((item) => {\r\n      const newData = {\r\n        bankId: item.bank.value || item.bank.id,\r\n        accountCardNumber: item.accountCardNumber,\r\n        accountNumber: item.accountNumber,\r\n        accountShaba: item.accountShaba,\r\n        description: item.description,\r\n        id: item.id.toString().includes(\"-\") ? null : item.id,\r\n      };\r\n      newAccounts.push(newData);\r\n    });\r\n\r\n    const allData = { ...data, accounts: newAccounts, customerCategory };\r\n    if (id) {\r\n      return await editCustomerRequest.execute(allData);\r\n    }\r\n    await addCustomerRequest.execute(allData);\r\n    setTimeout(() => {\r\n      onReject();\r\n    }, 1000);\r\n  };\r\n\r\n  const onReject = () => {\r\n    history.push(\"/app/customer-list\");\r\n  };\r\n\r\n  const getDetail = async () => {\r\n    const detail = await detailCustomerRequest.execute();\r\n    setDetail(detail.data);\r\n    setCustomerCategory(detail.data.customerCategory);\r\n    setAccounts(detail.data.accounts);\r\n  };\r\n\r\n  const getCustomerCategory = async () => {\r\n    const detail = await customerCategoryRequest.execute();\r\n    setCategory(detail.data);\r\n  };\r\n\r\n  const onSubmitAccount = (data) => {\r\n    if (data.isUpdate) {\r\n      const index = accounts.findIndex((item) => item.id === data.id);\r\n      const accounstTmp = [...accounts];\r\n      accounstTmp[index] = data;\r\n      setAccounts(accounstTmp);\r\n    } else {\r\n      setAccounts([...accounts, data]);\r\n    }\r\n    onDismissAccount();\r\n  };\r\n\r\n  const onDismissAccount = () => {\r\n    DialogActions.hide({ name: \"account\" });\r\n  };\r\n\r\n  const onShowDialog = (data) => {\r\n    DialogActions.show({\r\n      title: \" حساب بانکی\",\r\n      component: (\r\n        <Account\r\n          onSubmit={onSubmitAccount}\r\n          onDismiss={onDismissAccount}\r\n          defaultValues={data}\r\n        />\r\n      ),\r\n      name: \"account\",\r\n      size: \"4\",\r\n      confirm: false,\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  const onAddAccount = () => {\r\n    onShowDialog();\r\n  };\r\n\r\n  const handleEditAccount = (data) => {\r\n    onShowDialog(data);\r\n  };\r\n\r\n  const handleDeleteAccount = (row) => {\r\n    debugger;\r\n    DialogActions.show({\r\n      confirm: true,\r\n      title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n      onAction: async () => {\r\n        if (id) {\r\n          await deleteAccountRequest.execute(null, row.id);\r\n        }\r\n        setAccounts(accounts.filter((item) => item.id !== row.id));\r\n        DialogActions.hide({ name: \"delete\" });\r\n      },\r\n      name: \"delete\",\r\n      size: \"6\",\r\n      disableCloseButton: false,\r\n    });\r\n  };\r\n\r\n  const onChangeCategory = (e) => {\r\n    setCustomerCategory(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCustomerCategory();\r\n    if (id) {\r\n      getDetail();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(detail);\r\n  }, [reset, detail]);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        {!detailCustomerRequest.pending ? (\r\n          <Grid item lg={6} sm={12} className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n              <Typography\r\n                className={classes.title}\r\n                variant=\"h6\"\r\n                id=\"tableTitle\"\r\n                component=\"div\"\r\n              >\r\n                {id ? \"ویرایش مشتری\" : \"افزودن مشتری\"}\r\n              </Typography>\r\n\r\n              <Grid container spacing={3}>\r\n                <Fragment>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"نام\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.firstName}\r\n                            helperText={\r\n                              errors.firstName ? errors.firstName.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                      name=\"firstName\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"نام خانوادگی\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.lastName}\r\n                            helperText={\r\n                              errors.lastName ? errors.lastName.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                      name=\"lastName\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"تلفن\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.phone}\r\n                            helperText={\r\n                              errors.phone ? errors.phone.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"phone\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"موبایل\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.mobile}\r\n                            helperText={\r\n                              errors.mobile ? errors.mobile.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      rules={{\r\n                        minLength: {\r\n                          value: 11,\r\n                          message: Constant.VALIDATION.MOBILE_NUMBER,\r\n                        },\r\n                        maxLength: {\r\n                          value: 11,\r\n                          message: Constant.VALIDATION.MOBILE_NUMBER,\r\n                        },\r\n                      }}\r\n                      name=\"mobile\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            type=\"number\"\r\n                            variant=\"outlined\"\r\n                            label=\"مانده از قبل\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.accountRemaining}\r\n                            helperText={\r\n                              errors.accountRemaining\r\n                                ? errors.accountRemaining.message\r\n                                : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"accountRemaining\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    {!!category.length && customerCategory && (\r\n                      <TextField\r\n                        select\r\n                        label=\"دسته بندی\"\r\n                        value={customerCategory}\r\n                        onChange={onChangeCategory}\r\n                        variant=\"outlined\"\r\n                        error={!!errors.customerCategory}\r\n                        helperText={\r\n                          errors.customerCategory\r\n                            ? errors.customerCategory.message\r\n                            : \"\"\r\n                        }\r\n                        fullWidth\r\n                        size=\"small\"\r\n                      >\r\n                        {category.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </TextField>\r\n                    )}\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={onAddAccount}\r\n                    >\r\n                      افزودن حساب بانکی\r\n                    </Button>\r\n                  </Grid>\r\n                  {!!accounts.length && (\r\n                    <Grid item xs={12}>\r\n                      <Paper>\r\n                        <TableContainer style={{ padding: \"0 10px\" }}>\r\n                          <Table\r\n                            className={classes.table}\r\n                            size={\"medium\"}\r\n                            style={{ paddingRight: 10 }}\r\n                          >\r\n                            <TableHeader headCells={headCells} />\r\n\r\n                            <TableBody>\r\n                              {accounts.map((row) => {\r\n                                return (\r\n                                  <TableRow\r\n                                    hover\r\n                                    tabIndex={-1}\r\n                                    key={row.id}\r\n                                    style={{ paddingRight: 10 }}\r\n                                  >\r\n                                    <TableCell padding=\"none\">\r\n                                      <div\r\n                                        style={{\r\n                                          display: \"flex\",\r\n                                          alignItems: \"center\",\r\n                                        }}\r\n                                      >\r\n                                        <img\r\n                                          src={`${Constant.API_ADDRESS}/${row.bank.logo}`}\r\n                                          alt={row.bank.label}\r\n                                          style={{\r\n                                            width: 25,\r\n                                            height: 25,\r\n                                            borderRadius: \"50%\",\r\n                                            marginLeft: 5,\r\n                                          }}\r\n                                        />\r\n                                        {row.bank.name || row.bank.label}\r\n                                      </div>\r\n                                    </TableCell>\r\n                                    <TableCell padding=\"none\">\r\n                                      {row.accountNumber}\r\n                                    </TableCell>\r\n                                    <TableCell padding=\"none\">\r\n                                      {row.accountCardNumber}\r\n                                    </TableCell>\r\n\r\n                                    <TableCell\r\n                                      padding=\"none\"\r\n                                      style={{ textAlign: \"left\" }}\r\n                                    >\r\n                                      <IconButton\r\n                                        onClick={() => handleEditAccount(row)}\r\n                                      >\r\n                                        <EditIcon />\r\n                                      </IconButton>\r\n\r\n                                      <IconButton\r\n                                        onClick={() => handleDeleteAccount(row)}\r\n                                      >\r\n                                        <DeleteIcon />\r\n                                      </IconButton>\r\n                                    </TableCell>\r\n                                  </TableRow>\r\n                                );\r\n                              })}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                      </Paper>\r\n                    </Grid>\r\n                  )}\r\n\r\n                  <Grid item xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"آدرس\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.address}\r\n                            helperText={\r\n                              errors.address ? errors.address.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"address\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            label=\"توضیحات\"\r\n                            multiline\r\n                            rows={4}\r\n                            variant=\"outlined\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            fullWidth\r\n                            error={!!errors.description}\r\n                            helperText={\r\n                              errors.description\r\n                                ? errors.description.message\r\n                                : \"\"\r\n                            }\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"description\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                  >\r\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                      تایید\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      onClick={onReject}\r\n                    >\r\n                      بازگشت\r\n                    </Button>\r\n                  </Grid>\r\n                </Fragment>\r\n              </Grid>\r\n            </Paper>\r\n          </Grid>\r\n        ) : (\r\n          <CircularProgress />\r\n        )}\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Tabs,\r\n  Tab,\r\n  Chip,\r\n} from \"@material-ui/core\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport {\r\n  convertParamsToQueryString,\r\n  persianNumber,\r\n  hasPermission,\r\n} from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport clsx from \"clsx\";\r\nimport { getQueryString } from \"../../helpers/utils\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"date\",\r\n    label: \"تاریخ\",\r\n  },\r\n  { id: \"price\", label: \"مبلغ\" },\r\n  {\r\n    id: \"type\",\r\n    label: \"نوع\",\r\n  },\r\n  {\r\n    id: \"Desc\",\r\n    label: \"بابت\",\r\n  },\r\n  { id: \"action\" },\r\n];\r\n\r\nconst MainList = () => {\r\n  const customerId = getQueryString(\"id\");\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"date\");\r\n  const [search, setSearch] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const history = useHistory();\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n  };\r\n\r\n  const getPaymentRequest = useApi({\r\n    method: \"get\",\r\n    url: `payment/person/customer?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n    })}`,\r\n  });\r\n\r\n  const deleteUseRequest = useApi({\r\n    method: \"delete\",\r\n    url: `payment`,\r\n  });\r\n\r\n  const handleAction = (row, type) => {\r\n    const types = {\r\n      edit: () => {\r\n        history.push(\r\n          `/app/payment-detail?type=${row.type}&id=${row.id}&customerId=${customerId}`,\r\n        );\r\n      },\r\n      delete: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            await deleteUseRequest.execute(null, row.id);\r\n            setList(list.filter((item) => item.id !== row.id));\r\n            DialogActions.hide({ name: \"delete\" });\r\n          },\r\n          name: \"delete\",\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const getTableTitle = () => {\r\n    if (list.length)\r\n      return (\r\n        <div>\r\n          لیست تراکنش های{\" \"}\r\n          <b style={{ fontWeight: \"bolder\" }}>{list[0].person}</b>\r\n        </div>\r\n      );\r\n  };\r\n\r\n  const getData = async () => {\r\n    const list = await getPaymentRequest.execute(null, customerId);\r\n    setList(list.data);\r\n    setTotal(list.total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.PAYMENT_LIST) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getPaymentRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title={getTableTitle()}\r\n                    handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                  />\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{\r\n                                paddingRight: 10,\r\n                                backgroundColor:\r\n                                  row.type === \"OUTCOME\"\r\n                                    ? \"#ffe8e8\"\r\n                                    : \"#b1eed9\",\r\n                              }}\r\n                            >\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  new Date(row.date).toLocaleDateString(\r\n                                    \"fa-IR\",\r\n                                  ),\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  Number(row.price).toLocaleString(),\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {Constant.PAYMENT_TYPE[row.type]}\r\n                              </TableCell>\r\n\r\n                              <TableCell padding=\"none\">\r\n                                {row.description}\r\n                              </TableCell>\r\n\r\n                              <TableCell padding=\"none\">\r\n                                <TableRowMenu\r\n                                  options={[\r\n                                    { id: \"edit\", title: \"ویرایش\" },\r\n                                    // { id: \"delete\", title: \"حذف\" },\r\n                                  ]}\r\n                                  hadleAction={(type) =>\r\n                                    handleAction(row, type)\r\n                                  }\r\n                                />\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getPaymentRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default MainList;\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  salary: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  salaryPaperLeft: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  salaryPaperRight: {\r\n    marginBottom: theme.spacing(2),\r\n    padding: 20,\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  status: {\r\n    color: \"#fff\",\r\n  },\r\n  CREDITOR: {\r\n    backgroundColor: theme.palette.success.main,\r\n  },\r\n  NODEBT: {\r\n    backgroundColor: theme.palette.gray.main,\r\n  },\r\n  DEBTIOR: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  PRESENT: {\r\n    backgroundColor: theme.palette.success.main,\r\n  },\r\n  ABSET: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: 7,\r\n  },\r\n}));\r\n","import React, { useState } from \"react\";\r\nimport { Grid, TextField, MenuItem, Button, Divider } from \"@material-ui/core\";\r\nimport Constant from \"../../helpers/constant\";\r\n\r\nconst personType = [\r\n  {\r\n    label: \"بدهکار\",\r\n    value: Constant.PERSON_STATUS.DEBTIOR,\r\n  },\r\n  { label: \"بی حساب\", value: Constant.PERSON_STATUS.NODEBT },\r\n  { label: \"طلبکار\", value: Constant.PERSON_STATUS.CREDITOR },\r\n];\r\n\r\nconst Filter = ({ onFilter }) => {\r\n  const [filterData, setFilterData] = useState({ name: \"\", status: \"\" });\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setFilterData({ ...filterData, [prop]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (typeof onFilter === \"function\") {\r\n      onFilter(filterData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3} alignItems=\"center\" style={{ padding: 10 }}>\r\n      <Grid item lg={3} xs={12}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          label=\"نام\"\r\n          onChange={handleChange(\"name\")}\r\n          value={filterData.name}\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n      </Grid>\r\n      <Grid item lg={3} xs={12}>\r\n        <TextField\r\n          select\r\n          label=\"وضعیت\"\r\n          onChange={handleChange(\"status\")}\r\n          value={filterData.status}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        >\r\n          {personType.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Grid>\r\n      <Grid item lg={3} xs={12}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n          تایید\r\n        </Button>\r\n      </Grid>\r\n      <Divider style={{ width: \"100%\" }} />\r\n    </Grid>\r\n  );\r\n};\r\nexport default Filter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Chip,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { convertParamsToQueryString, hasPermission } from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport FilterComponent from \"./filter\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"firstName\",\r\n    label: \"نام\",\r\n  },\r\n  { id: \"lastName\", label: \"نام خانوادگی\" },\r\n  {\r\n    id: \"محل خدمت\",\r\n    label: \"محل خدمت\",\r\n  },\r\n  {\r\n    id: \"mobile\",\r\n    label: \"موبایل\",\r\n  },\r\n  { id: \"status\", label: \"وضعیت\" },\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function MainList() {\r\n  const CONTERACT_TYPE = {\r\n    DEPOT: \"انبار\",\r\n    FACTORY: \"کارخانه\",\r\n  };\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [search, setSearch] = useState();\r\n  const [orderBy, setOrderBy] = useState(\"firstName\");\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [filter, setFilter] = useState();\r\n  const [total, setTotal] = useState(0);\r\n  const history = useHistory();\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onAdd = () => {\r\n    history.push(\"/app/employee-detail\");\r\n  };\r\n\r\n  const getEmployeeRequest = useApi({\r\n    method: \"get\",\r\n    url: `employee?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n      filter,\r\n    })}`,\r\n  });\r\n\r\n  const deleteUseRequest = useApi({\r\n    method: \"delete\",\r\n    url: `employee`,\r\n  });\r\n\r\n  const handleAction = (row, type) => {\r\n    const { id, firstName, lastName } = row;\r\n    const types = {\r\n      edit: () => {\r\n        history.push(`/app/employee-detail?id=${id}`);\r\n      },\r\n      delete: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            await deleteUseRequest.execute(null, id);\r\n            setList(list.filter((item) => item.id !== id));\r\n            DialogActions.hide({ name: \"delete\" });\r\n          },\r\n          name: \"delete\",\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n      traffic: () => {\r\n        history.push(\r\n          `/app/employee-log?id=${id}&name=${firstName} ${lastName}`,\r\n        );\r\n      },\r\n      transaction: () => {\r\n        history.push(`/app/employee-transaction?id=${id}`);\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onFilter = (data) => {\r\n    setFilter(data);\r\n    setPage(0);\r\n  };\r\n\r\n  const getData = async () => {\r\n    const employeeList = await getEmployeeRequest.execute();\r\n    setList(employeeList.data);\r\n    setTotal(employeeList.total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize, filter]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.CASH_LIST) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getEmployeeRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title=\"لیست پرسنل\"\r\n                    onAdd={onAdd}\r\n                    FilterComponent={<FilterComponent onFilter={onFilter} />}\r\n                    handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                  />\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                            >\r\n                              <TableCell padding=\"none\">\r\n                                {row.firstName}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.lastName}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {CONTERACT_TYPE[row.contractType]}\r\n                              </TableCell>\r\n\r\n                              <TableCell padding=\"none\">{row.mobile}</TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                <Chip\r\n                                  label={Constant.PERSON_STATUS[row.status]}\r\n                                  className={clsx(\r\n                                    classes.status,\r\n                                    classes[row.status],\r\n                                  )}\r\n                                />\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                <TableRowMenu\r\n                                  options={[\r\n                                    { id: \"transaction\", title: \"تراکنش ها\" },\r\n                                    { id: \"traffic\", title: \"گزارش تردد\" },\r\n                                    { id: \"edit\", title: \"ویرایش\" },\r\n                                    // { id: \"delete\", title: \"حذف\" },\r\n                                  ]}\r\n                                  hadleAction={(type) =>\r\n                                    handleAction(row, type)\r\n                                  }\r\n                                />\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getEmployeeRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Grid, MenuItem } from \"@material-ui/core\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport styles from \"./style\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nconst Account = ({ onSubmit, onDismiss, defaultValues }) => {\r\n  const [banks, setBanks] = useState([]);\r\n  const [selectedBank, setSelectedBank] = useState(\r\n    defaultValues?.bank.value || 1,\r\n  );\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n  const classes = styles();\r\n\r\n  const getBankRequest = useApi({\r\n    method: \"get\",\r\n    url: `bank`,\r\n  });\r\n\r\n  const getBanks = async () => {\r\n    const result = await getBankRequest.execute();\r\n    setBanks(result.data);\r\n  };\r\n\r\n  const getSelectedBank = () => {\r\n    return banks.find((item) => item.value === selectedBank);\r\n  };\r\n\r\n  const onDone = (data) => {\r\n    const newId = uuid();\r\n    const value = {\r\n      ...data,\r\n      bank: getSelectedBank(),\r\n      id: defaultValues ? defaultValues.id : newId,\r\n      isUpdate: !!defaultValues,\r\n    };\r\n    onSubmit(value);\r\n  };\r\n\r\n  const onChangeBank = (e) => {\r\n    setSelectedBank(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBanks();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(defaultValues);\r\n  }, [reset, defaultValues]);\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          select\r\n          label=\"بانک\"\r\n          onChange={onChangeBank}\r\n          value={selectedBank}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n          name=\"bank\"\r\n          SelectProps={{\r\n            classes: {\r\n              select: classes.rootSelect,\r\n            },\r\n          }}\r\n        >\r\n          {banks.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              <img\r\n                src={`${Constant.API_ADDRESS}/${option.logo}`}\r\n                alt={option.label}\r\n                style={{\r\n                  width: 25,\r\n                  height: 25,\r\n                  borderRadius: \"50%\",\r\n                  marginLeft: 10,\r\n                }}\r\n              />\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                fullWidth\r\n                value={value}\r\n                size=\"small\"\r\n                name={name}\r\n                label=\"شماره کارت\"\r\n                variant=\"outlined\"\r\n                onChange={onChange}\r\n                error={!!errors.accountCardNumber}\r\n                helperText={\r\n                  errors.accountCardNumber\r\n                    ? errors.accountCardNumber.message\r\n                    : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          rules={{\r\n            minLength: {\r\n              value: 16,\r\n              message: Constant.VALIDATION.CARD_NUMBER,\r\n            },\r\n            maxLength: {\r\n              value: 16,\r\n              message: Constant.VALIDATION.CARD_NUMBER,\r\n            },\r\n          }}\r\n          name=\"accountCardNumber\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                fullWidth\r\n                value={value}\r\n                size=\"small\"\r\n                name={name}\r\n                label=\"شماره حساب\"\r\n                variant=\"outlined\"\r\n                onChange={onChange}\r\n                error={!!errors.accountNumber}\r\n                helperText={\r\n                  errors.accountNumber ? errors.accountNumber.message : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          name=\"accountNumber\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                fullWidth\r\n                value={value}\r\n                size=\"small\"\r\n                name={name}\r\n                label=\"شماره شبا\"\r\n                variant=\"outlined\"\r\n                onChange={onChange}\r\n                error={!!errors.accountShaba}\r\n                helperText={\r\n                  errors.accountShaba ? errors.accountShaba.message : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          name=\"accountShaba\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                label=\"توضیحات\"\r\n                multiline\r\n                rows={4}\r\n                variant=\"outlined\"\r\n                name={name}\r\n                onChange={onChange}\r\n                value={value}\r\n                fullWidth\r\n                error={!!errors.description}\r\n                helperText={\r\n                  errors.description ? errors.description.message : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          name=\"description\"\r\n        />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          onClick={handleSubmit(onDone)}\r\n        >\r\n          تایید\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onDismiss}>\r\n          انصراف\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  IconButton,\r\n  RadioGroup,\r\n  Radio,\r\n  FormControlLabel,\r\n} from \"@material-ui/core\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport { DeleteIcon, EditIcon } from \"../../components/icons\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { getQueryString } from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport Account from \"./account\";\r\nimport CircularProgress from \"../../components/CircularProgress\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingBottom: 7,\r\n    paddingTop: 7,\r\n  },\r\n}));\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"Name\",\r\n    label: \"نام بانک\",\r\n  },\r\n  { id: \"accountNumber\", label: \"شماره حساب \" },\r\n  {\r\n    id: \"CardNumber\",\r\n    label: \"شماره کارت\",\r\n  },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function MainDetail() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const id = getQueryString(\"id\");\r\n  const [detail, setDetail] = useState({});\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [selectedGender, setSelectedGender] = useState(\"M\");\r\n  const [selectedContract, setSelectedContract] = useState(\"FACTORY\");\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n\r\n  const addEmployeeRequest = useApi({\r\n    method: \"post\",\r\n    url: `employee`,\r\n  });\r\n\r\n  const editEmployeeRequest = useApi({\r\n    method: \"put\",\r\n    url: `employee/${id}`,\r\n  });\r\n\r\n  const detailEmployeeRequest = useApi({\r\n    method: \"get\",\r\n    url: `employee/${id}`,\r\n  });\r\n\r\n  const deleteAccountRequest = useApi({\r\n    method: \"delete\",\r\n    url: `account`,\r\n  });\r\n\r\n  const onSubmit = async (data) => {\r\n    const newAccounts = [];\r\n    accounts.map((item) => {\r\n      const newData = {\r\n        bankId: item.bank.value || item.bank.id,\r\n        accountCardNumber: item.accountCardNumber,\r\n        accountNumber: item.accountNumber,\r\n        accountShaba: item.accountShaba,\r\n        description: item.description,\r\n        id: item.id.toString().includes(\"-\") ? null : item.id,\r\n      };\r\n      newAccounts.push(newData);\r\n    });\r\n\r\n    const allData = {\r\n      ...data,\r\n      accounts: newAccounts,\r\n      contractType: selectedContract,\r\n      gender: selectedGender,\r\n    };\r\n    if (id) {\r\n      return await editEmployeeRequest.execute(allData);\r\n    }\r\n    await addEmployeeRequest.execute(allData);\r\n    setTimeout(() => {\r\n      onReject();\r\n    }, 1000);\r\n  };\r\n\r\n  const onReject = () => {\r\n    history.push(\"/app/employee-list\");\r\n  };\r\n\r\n  const getDetail = async () => {\r\n    const detail = await detailEmployeeRequest.execute();\r\n    setDetail(detail.data);\r\n    setAccounts(detail.data.accounts);\r\n    setSelectedGender(detail.data.gender);\r\n    setSelectedContract(detail.data.contractType);\r\n  };\r\n\r\n  const onSubmitAccount = (data) => {\r\n    if (data.isUpdate) {\r\n      const index = accounts.findIndex((item) => item.id === data.id);\r\n      const accounstTmp = [...accounts];\r\n      accounstTmp[index] = data;\r\n      setAccounts(accounstTmp);\r\n    } else {\r\n      setAccounts([...accounts, data]);\r\n    }\r\n    onDismissAccount();\r\n  };\r\n\r\n  const onDismissAccount = () => {\r\n    DialogActions.hide({ name: \"account\" });\r\n  };\r\n\r\n  const onShowDialog = (data) => {\r\n    DialogActions.show({\r\n      title: \" حساب بانکی\",\r\n      component: (\r\n        <Account\r\n          onSubmit={onSubmitAccount}\r\n          onDismiss={onDismissAccount}\r\n          defaultValues={data}\r\n        />\r\n      ),\r\n      name: \"account\",\r\n      size: \"4\",\r\n      confirm: false,\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  const onAddAccount = () => {\r\n    onShowDialog();\r\n  };\r\n\r\n  const handleEditAccount = (data) => {\r\n    onShowDialog(data);\r\n  };\r\n\r\n  const handleDeleteAccount = (row) => {\r\n    DialogActions.show({\r\n      confirm: true,\r\n      title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n      onAction: async () => {\r\n        if (id) {\r\n          await deleteAccountRequest.execute(null, row.id);\r\n        }\r\n        setAccounts(accounts.filter((item) => item.id !== row.id));\r\n        DialogActions.hide({ name: \"delete\" });\r\n      },\r\n      name: \"delete\",\r\n      size: \"6\",\r\n      disableCloseButton: false,\r\n    });\r\n  };\r\n\r\n  const handleChangeGender = (e) => {\r\n    setSelectedGender(e.target.value);\r\n  };\r\n\r\n  const onChangeContract = (e) => {\r\n    setSelectedContract(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      getDetail();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(detail);\r\n  }, [reset, detail]);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        {!detailEmployeeRequest.pending ? (\r\n          <Grid item lg={6} sm={12} className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n              <Typography\r\n                className={classes.title}\r\n                variant=\"h6\"\r\n                id=\"tableTitle\"\r\n                component=\"div\"\r\n              >\r\n                {id ? \"ویرایش پرسنل\" : \"افزودن پرسنل\"}\r\n              </Typography>\r\n\r\n              <Grid container spacing={3}>\r\n                <Fragment>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"نام\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.firstName}\r\n                            helperText={\r\n                              errors.firstName ? errors.firstName.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                      name=\"firstName\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"نام خانوادگی\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.lastName}\r\n                            helperText={\r\n                              errors.lastName ? errors.lastName.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                      name=\"lastName\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"موبایل\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.mobile}\r\n                            helperText={\r\n                              errors.mobile ? errors.mobile.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      rules={{\r\n                        minLength: {\r\n                          value: 11,\r\n                          message: Constant.VALIDATION.MOBILE_NUMBER,\r\n                        },\r\n                        maxLength: {\r\n                          value: 11,\r\n                          message: Constant.VALIDATION.MOBILE_NUMBER,\r\n                        },\r\n                      }}\r\n                      name=\"mobile\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <RadioGroup\r\n                      aria-label=\"gender\"\r\n                      name=\"gender1\"\r\n                      value={selectedGender}\r\n                      onChange={handleChangeGender}\r\n                      style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"row\",\r\n                        justifyContent: \"space-around\",\r\n                      }}\r\n                    >\r\n                      <FormControlLabel\r\n                        color=\"primary\"\r\n                        value=\"M\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"مرد\"\r\n                      />\r\n                      <FormControlLabel\r\n                        color=\"primary\"\r\n                        value=\"F\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"زن\"\r\n                      />\r\n                    </RadioGroup>\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            type=\"number\"\r\n                            variant=\"outlined\"\r\n                            label=\"مانده از قبل\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.accountRemaining}\r\n                            helperText={\r\n                              errors.accountRemaining\r\n                                ? errors.accountRemaining.message\r\n                                : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"accountRemaining\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item lg={6} xs={12}>\r\n                    <TextField\r\n                      select\r\n                      label=\"نوع قرارداد\"\r\n                      value={selectedContract}\r\n                      onChange={onChangeContract}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      size=\"small\"\r\n                    >\r\n                      {Constant.EMPLOYEE_CONTACRT.map((option) => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </TextField>\r\n                  </Grid>\r\n\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={onAddAccount}\r\n                    >\r\n                      افزودن حساب بانکی\r\n                    </Button>\r\n                  </Grid>\r\n                  {!!accounts.length && (\r\n                    <Grid item xs={12}>\r\n                      <Paper>\r\n                        <TableContainer style={{ padding: \"0 10px\" }}>\r\n                          <Table\r\n                            className={classes.table}\r\n                            size={\"medium\"}\r\n                            style={{ paddingRight: 10 }}\r\n                          >\r\n                            <TableHeader headCells={headCells} />\r\n\r\n                            <TableBody>\r\n                              {accounts.map((row) => {\r\n                                return (\r\n                                  <TableRow\r\n                                    hover\r\n                                    tabIndex={-1}\r\n                                    key={row.id}\r\n                                    style={{ paddingRight: 10 }}\r\n                                  >\r\n                                    <TableCell padding=\"none\">\r\n                                      <div\r\n                                        style={{\r\n                                          display: \"flex\",\r\n                                          alignItems: \"center\",\r\n                                        }}\r\n                                      >\r\n                                        <img\r\n                                          src={`${Constant.API_ADDRESS}/${row.bank.logo}`}\r\n                                          alt={row.bank.label}\r\n                                          style={{\r\n                                            width: 25,\r\n                                            height: 25,\r\n                                            borderRadius: \"50%\",\r\n                                            marginLeft: 5,\r\n                                          }}\r\n                                        />\r\n                                        {row.bank.label || row.bank.name}\r\n                                      </div>\r\n                                    </TableCell>\r\n                                    <TableCell padding=\"none\">\r\n                                      {row.accountNumber}\r\n                                    </TableCell>\r\n                                    <TableCell padding=\"none\">\r\n                                      {row.accountCardNumber}\r\n                                    </TableCell>\r\n\r\n                                    <TableCell\r\n                                      padding=\"none\"\r\n                                      style={{ textAlign: \"left\" }}\r\n                                    >\r\n                                      <IconButton\r\n                                        onClick={() => handleEditAccount(row)}\r\n                                      >\r\n                                        <EditIcon />\r\n                                      </IconButton>\r\n\r\n                                      <IconButton\r\n                                        onClick={() => handleDeleteAccount(row)}\r\n                                      >\r\n                                        <DeleteIcon />\r\n                                      </IconButton>\r\n                                    </TableCell>\r\n                                  </TableRow>\r\n                                );\r\n                              })}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                      </Paper>\r\n                    </Grid>\r\n                  )}\r\n\r\n                  <Grid item xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"آدرس\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.address}\r\n                            helperText={\r\n                              errors.address ? errors.address.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"address\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            label=\"توضیحات\"\r\n                            multiline\r\n                            rows={4}\r\n                            variant=\"outlined\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            fullWidth\r\n                            error={!!errors.description}\r\n                            helperText={\r\n                              errors.description\r\n                                ? errors.description.message\r\n                                : \"\"\r\n                            }\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"description\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                  >\r\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                      تایید\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      onClick={onReject}\r\n                    >\r\n                      بازگشت\r\n                    </Button>\r\n                  </Grid>\r\n                </Fragment>\r\n              </Grid>\r\n            </Paper>\r\n          </Grid>\r\n        ) : (\r\n          <CircularProgress />\r\n        )}\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  tab: {\r\n    borderBottom: `1px solid ${theme.palette.gray.main}`,\r\n  },\r\n  type: {\r\n    color: \"#fff\",\r\n  },\r\n  allIcon: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  SELL: {\r\n    backgroundColor: theme.palette.success.main,\r\n  },\r\n  incomeIcon: {\r\n    color: theme.palette.success.main,\r\n  },\r\n  BUY: {\r\n    backgroundColor: theme.palette.danger.main,\r\n  },\r\n  outgoIcon: {\r\n    color: theme.palette.danger.main,\r\n  },\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingBottom: 7,\r\n    paddingTop: 7,\r\n  },\r\n  selectedButton: {\r\n    backgroundColor: theme.palette.success.main,\r\n    color: \"#fff\",\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.success.main,\r\n    },\r\n  },\r\n}));\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, TextField, MenuItem, Button, Divider } from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n}));\r\nconst Filter = ({ onFilter }) => {\r\n  const classes = useStyles();\r\n  const [selectedPerson, setSelectedPerson] = useState();\r\n  const [selectedFromDate, handleFromDateChange] = useState(moment());\r\n  const [selectedToDate, handleToDateChange] = useState(moment());\r\n  const [customers, setCustomers] = useState([]);\r\n\r\n  const getCustomersRequest = useApi({\r\n    method: \"get\",\r\n    url: \"customer\",\r\n  });\r\n\r\n  const onChangePerson = (e, value) => {\r\n    setSelectedPerson(value);\r\n  };\r\n\r\n  const onChnageDate = (e, type) => {\r\n    if (type === \"from\") {\r\n      handleFromDateChange(e);\r\n    } else {\r\n      handleToDateChange(e);\r\n    }\r\n  };\r\n\r\n  const getCustomers = async () => {\r\n    const customerList = await getCustomersRequest.execute();\r\n    setCustomers(customerList.data);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (typeof onFilter === \"function\") {\r\n      onFilter(\r\n        `{customerId:${\r\n          selectedPerson ? selectedPerson.id : null\r\n        },from:${selectedFromDate._d.toISOString()},to:${selectedToDate._d.toISOString()}}`,\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCustomers();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container spacing={3} alignItems=\"center\" style={{ padding: 10 }}>\r\n      <Grid item lg={3} xs={12} style={{ display: \"flex\" }}>\r\n        <Autocomplete\r\n          id=\"combo-box-demo\"\r\n          onChange={onChangePerson}\r\n          options={customers}\r\n          getOptionLabel={(option) => `${option.firstName} ${option.lastName}`}\r\n          fullWidth\r\n          size=\"small\"\r\n          renderInput={(params) => (\r\n            <TextField {...params} label=\"انتخاب شخص\" variant=\"outlined\" />\r\n          )}\r\n        />\r\n      </Grid>\r\n      <Grid item lg={3} xs={12} className={classes.datePicker}>\r\n        <DatePicker\r\n          autoOk\r\n          name=\"date\"\r\n          label=\"از تاریخ\"\r\n          inputVariant=\"outlined\"\r\n          okLabel=\"تأیید\"\r\n          cancelLabel=\"لغو\"\r\n          labelFunc={(date) => (date ? date.format(\"jYYYY/jMM/jDD\") : \"\")}\r\n          value={selectedFromDate}\r\n          onChange={(e) => onChnageDate(e, \"from\")}\r\n          style={{ width: \"100%\" }}\r\n        />\r\n      </Grid>\r\n      <Grid item lg={3} xs={12} className={classes.datePicker}>\r\n        <DatePicker\r\n          autoOk\r\n          name=\"date\"\r\n          label=\"تا تاریخ\"\r\n          inputVariant=\"outlined\"\r\n          okLabel=\"تأیید\"\r\n          cancelLabel=\"لغو\"\r\n          labelFunc={(date) => (date ? date.format(\"jYYYY/jMM/jDD\") : \"\")}\r\n          value={selectedToDate}\r\n          onChange={(e) => onChnageDate(e, \"to\")}\r\n          style={{ width: \"100%\" }}\r\n        />\r\n      </Grid>\r\n      <Grid item lg={3} xs={12}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n          تایید\r\n        </Button>\r\n      </Grid>\r\n      <Divider style={{ width: \"100%\" }} />\r\n    </Grid>\r\n  );\r\n};\r\nexport default Filter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Tabs,\r\n  Tab,\r\n  Chip,\r\n} from \"@material-ui/core\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport {\r\n  convertParamsToQueryString,\r\n  persianNumber,\r\n  hasPermission,\r\n} from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport clsx from \"clsx\";\r\nimport { getQueryString } from \"../../helpers/utils\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\nimport FilterComponent from \"./filter\";\r\n\r\nconst headCells = [\r\n  { id: \"id\", label: \"شماره فاکتور\" },\r\n  {\r\n    id: \"person\",\r\n    label: \"مشتری\",\r\n  },\r\n  {\r\n    id: \"date\",\r\n    label: \"تاریخ\",\r\n  },\r\n  { id: \"price\", label: \"مبلغ\" },\r\n  {\r\n    id: \"category\",\r\n    label: \"دسته بندی\",\r\n  },\r\n  {\r\n    id: \"type\",\r\n    label: \"نوع\",\r\n  },\r\n\r\n  // { id: \"action\" },\r\n];\r\n\r\nconst MainList = () => {\r\n  const invoiceType = getQueryString(\"type\");\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"date\");\r\n  const [search, setSearch] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [filter, setFilter] = useState();\r\n  const [total, setTotal] = useState(0);\r\n  const [type, setType] = useState(invoiceType);\r\n  const history = useHistory();\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onAdd = () => {\r\n    history.push(`/app/invoice-detail?type=${type}`);\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const getInvoiceRequest = useApi({\r\n    method: \"get\",\r\n    url: decodeURIComponent(\r\n      `invoice?${convertParamsToQueryString({\r\n        page,\r\n        order,\r\n        orderBy,\r\n        pageSize,\r\n        search,\r\n        type,\r\n        filter,\r\n      })}`,\r\n    ),\r\n  });\r\n\r\n  const deleteUseRequest = useApi({\r\n    method: \"delete\",\r\n    url: `invoice`,\r\n  });\r\n\r\n  const handleAction = (id, type) => {\r\n    const types = {\r\n      edit: () => {\r\n        history.push(`/app/invoice-detail?type=${type}&id=${id}`);\r\n      },\r\n      delete: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            await deleteUseRequest.execute(null, id);\r\n            setList(list.filter((item) => item.id !== id));\r\n            DialogActions.hide({ name: \"delete\" });\r\n          },\r\n          name: \"delete\",\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const onChangeType = (e, value) => {\r\n    setType(value);\r\n  };\r\n\r\n  const getTableTitle = () => {\r\n    if (type === \"SELL\") {\r\n      return \"لیست فاکتورهای فروش \";\r\n    } else if (type === \"BUY\") {\r\n      return \"لیست فاکتورهای خرید\";\r\n    }\r\n    return \"لیست تمامی فاکتور ها\";\r\n  };\r\n\r\n  const getData = async () => {\r\n    const invoiceList = await getInvoiceRequest.execute();\r\n    setList(invoiceList.data);\r\n    setTotal(invoiceList.total);\r\n  };\r\n\r\n  const onFilter = (data) => {\r\n    setFilter(data);\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize, type, filter]);\r\n\r\n  useEffect(() => {\r\n    setType(invoiceType);\r\n  }, [invoiceType]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.CASH_LIST) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getInvoiceRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title={getTableTitle()}\r\n                    onAdd={type !== \"ALL\" && onAdd}\r\n                    handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                    FilterComponent={<FilterComponent onFilter={onFilter} />}\r\n                  />\r\n                  <div className={classes.tab}>\r\n                    <Tabs\r\n                      variant=\"fullWidth\"\r\n                      value={type}\r\n                      onChange={onChangeType}\r\n                      indicatorColor=\"primary\"\r\n                      textColor=\"primary\"\r\n                      centered\r\n                    >\r\n                      <Tab\r\n                        icon={\r\n                          <i\r\n                            className={clsx(\r\n                              \"material-icons-round\",\r\n                              classes.allIcon,\r\n                            )}\r\n                          >\r\n                            sync\r\n                          </i>\r\n                        }\r\n                        label=\"کل تراکنش ها\"\r\n                        value=\"ALL\"\r\n                      />\r\n                      <Tab\r\n                        icon={\r\n                          <i\r\n                            className={clsx(\r\n                              \"material-icons-round\",\r\n                              classes.incomeIcon,\r\n                            )}\r\n                          >\r\n                            sell\r\n                          </i>\r\n                        }\r\n                        label=\"فاکتور های فروش\"\r\n                        value=\"SELL\"\r\n                      />\r\n                      <Tab\r\n                        icon={\r\n                          <i\r\n                            className={clsx(\r\n                              \"material-icons-round\",\r\n                              classes.outgoIcon,\r\n                            )}\r\n                          >\r\n                            shopping_basket\r\n                          </i>\r\n                        }\r\n                        label=\"فاکتور های خرید\"\r\n                        value=\"BUY\"\r\n                      />\r\n                    </Tabs>\r\n                  </div>\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                            >\r\n                              <TableCell padding=\"none\">{row.id}</TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.globalCustomer\r\n                                  ? `${row.globalCustomer}(${row.customer})`\r\n                                  : row.customer}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  new Date(row.date).toLocaleDateString(\r\n                                    \"fa-IR\",\r\n                                  ),\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  Number(row.price).toLocaleString(),\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.category}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                <Chip\r\n                                  label={Constant.INVOICE_TYPE[row.type]}\r\n                                  className={clsx(\r\n                                    classes.type,\r\n                                    classes[row.type],\r\n                                  )}\r\n                                />\r\n                              </TableCell>\r\n\r\n                              {/* <TableCell padding=\"none\">\r\n                                <TableRowMenu\r\n                                  options={[\r\n                                    { id: \"edit\", title: \"ویرایش\" },\r\n                                    { id: \"delete\", title: \"حذف\" },\r\n                                  ]}\r\n                                  hadleAction={(type) =>\r\n                                    handleAction(row.id, type)\r\n                                  }\r\n                                />\r\n                              </TableCell> */}\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getInvoiceRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default MainList;\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  tab: {\r\n    borderBottom: `1px solid ${theme.palette.gray.main}`,\r\n  },\r\n  type: {\r\n    color: \"#fff\",\r\n  },\r\n  allIcon: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  INCOME: {\r\n    backgroundColor: theme.palette.success.main,\r\n  },\r\n  incomeIcon: {\r\n    color: theme.palette.success.main,\r\n  },\r\n  OUTCOME: {\r\n    backgroundColor: theme.palette.danger.main,\r\n  },\r\n  outgoIcon: {\r\n    color: theme.palette.danger.main,\r\n  },\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingBottom: 7,\r\n    paddingTop: 7,\r\n  },\r\n}));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Typography,\r\n  Chip,\r\n  Button,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { convertParamsToQueryString } from \"../../helpers/utils\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\n\r\nconst headCellsCustomer = [\r\n  {\r\n    id: \"firstName\",\r\n    label: \"نام\",\r\n  },\r\n  { id: \"lastName\", label: \"نام خانوادگی\" },\r\n\r\n  { id: \"status\", label: \"وضعیت\" },\r\n  { id: \"action\" },\r\n];\r\nconst headCellsPerson = [\r\n  { id: \"lastName\", label: \"نام و نام خانوادگی\" },\r\n  { id: \"type\", label: \"نوع شخص\" },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nconst PERSON_TYPE = {\r\n  EMPLOYEE: \"پرسنل\",\r\n  CUSTOMER: \"مشتری\",\r\n  DRIVER: \"راننده\",\r\n};\r\n\r\nexport default function MainList({ onSelect, onDismiss, filter }) {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [search, setSearch] = useState();\r\n  const [orderBy, setOrderBy] = useState(\"firstName\");\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onSelectPerson = (data) => {\r\n    onSelect(data);\r\n  };\r\n\r\n  const getCustomerRequest = useApi({\r\n    method: \"get\",\r\n    url: `${filter}?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n    })}`,\r\n  });\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n  };\r\n\r\n  const getData = async () => {\r\n    const customerList = await getCustomerRequest.execute();\r\n    setList(customerList.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize]);\r\n\r\n  return (\r\n    <div style={{ marginTop: -20 }}>\r\n      <TableTop handleSearch={onSearch} />\r\n      <TableContainer>\r\n        <Table className={classes.table} size={\"medium\"}>\r\n          <TableHeader\r\n            classes={classes}\r\n            order={order}\r\n            orderBy={orderBy}\r\n            onRequestSort={handleRequestSort}\r\n            rowCount={list.length}\r\n            headCells={\r\n              filter === \"person\" ? headCellsPerson : headCellsCustomer\r\n            }\r\n          />\r\n\r\n          <TableBody>\r\n            {list.map((row) => {\r\n              return (\r\n                <TableRow\r\n                  hover\r\n                  tabIndex={-1}\r\n                  key={filter === \"customer\" ? row.id : row.value}\r\n                  style={{ paddingRight: 10 }}\r\n                >\r\n                  {filter === \"person\" && (\r\n                    <TableCell padding=\"none\">{row.label}</TableCell>\r\n                  )}\r\n                  {filter === \"person\" && (\r\n                    <TableCell padding=\"none\">\r\n                      {PERSON_TYPE[row.personType]}\r\n                    </TableCell>\r\n                  )}\r\n\r\n                  {filter === \"customer\" && (\r\n                    <TableCell padding=\"none\">{row.firstName}</TableCell>\r\n                  )}\r\n                  {filter === \"customer\" && (\r\n                    <TableCell padding=\"none\">{row.lastName}</TableCell>\r\n                  )}\r\n\r\n                  {filter === \"customer\" && (\r\n                    <TableCell padding=\"none\">\r\n                      <Chip\r\n                        label={Constant.PERSON_STATUS[row.status]}\r\n                        className={clsx(classes.status, classes[row.status])}\r\n                      />\r\n                    </TableCell>\r\n                  )}\r\n\r\n                  <TableCell padding=\"none\">\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={() => onSelectPerson(row)}\r\n                    >\r\n                      انتخاب شخص\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n            {!list.length && !getCustomerRequest.pending && (\r\n              <TableRow style={{ height: 53 }}>\r\n                <TableCell colSpan={6} style={{ textAlign: \"center\" }}>\r\n                  <Typography variant=\"h6\">\r\n                    داده ای برای نمایش وجود ندارد\r\n                  </Typography>\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePaging\r\n        count={list.length}\r\n        handleChangePage={handleChangePage}\r\n        handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n        page={page}\r\n        rowsPerPage={pageSize}\r\n      />\r\n\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n      >\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n          انصراف\r\n        </Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Grid, MenuItem } from \"@material-ui/core\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport moment from \"moment\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport styles from \"./style\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nconst Payment = ({ onSubmit, onDismiss, defaultValues, paymentType, type }) => {\r\n  const [banks, setBanks] = useState([]);\r\n  const [chequeDueDate, handleChequeDueDateChange] = useState(moment());\r\n  const [selectedTransaction, setSelectedTransaction] = useState(\r\n    defaultValues?.transactionType,\r\n  );\r\n  const [selectedBank, setSelectedBank] = useState(defaultValues?.bankId || 1);\r\n  const [cashes, setCashes] = useState([]);\r\n  const [selectedCash, setSelectedCash] = useState(\r\n    defaultValues?.cashDeskId || 5,\r\n  );\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n  const classes = styles();\r\n\r\n  const getBankRequest = useApi({\r\n    method: \"get\",\r\n    url: `bank`,\r\n  });\r\n\r\n  const getCashRequest = useApi({\r\n    method: \"get\",\r\n    url: `cashdesk/picker`,\r\n  });\r\n\r\n  const getBanks = async () => {\r\n    const result = await getBankRequest.execute();\r\n    setBanks(result.data);\r\n  };\r\n\r\n  const getCashes = async () => {\r\n    const result = await getCashRequest.execute();\r\n    setCashes(result.data);\r\n  };\r\n\r\n  const getSelectedBank = () => {\r\n    return banks.find((item) => item.value === selectedBank);\r\n  };\r\n\r\n  const getSelectedCash = () => {\r\n    return cashes.find((item) => item.value === selectedCash);\r\n  };\r\n\r\n  const onDone = (data) => {\r\n    const newId = uuid();\r\n    let value;\r\n    if (type === \"NAGHD\") {\r\n      value = {\r\n        ...data,\r\n        id: defaultValues ? defaultValues.id : newId,\r\n        cashDeskId: selectedCash,\r\n        cashDesk: getSelectedCash(),\r\n        isUpdate: !!defaultValues,\r\n      };\r\n    } else if (type === \"CARD\") {\r\n      value = {\r\n        ...data,\r\n        id: defaultValues ? defaultValues.id : newId,\r\n        cashDeskId: selectedCash,\r\n        bankId: selectedBank,\r\n        cashDesk: getSelectedCash(),\r\n        bank: getSelectedBank(),\r\n        transactionType: selectedTransaction,\r\n        isUpdate: !!defaultValues,\r\n      };\r\n    } else {\r\n      value = {\r\n        ...data,\r\n        id: defaultValues ? defaultValues.id : newId,\r\n        cashDeskId: selectedCash,\r\n        bankId: selectedBank,\r\n        cashDesk: getSelectedCash(),\r\n        bank: getSelectedBank(),\r\n        chequeDueDate: chequeDueDate._d,\r\n        isUpdate: !!defaultValues,\r\n      };\r\n    }\r\n    return onSubmit(value, type, !!defaultValues);\r\n  };\r\n\r\n  const onChangeBank = (e) => {\r\n    setSelectedBank(e.target.value);\r\n  };\r\n\r\n  const onChangeTransaction = (e) => {\r\n    setSelectedTransaction(e.target.value);\r\n  };\r\n\r\n  const onChangeCash = (e) => {\r\n    setSelectedCash(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBanks();\r\n    getCashes();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(defaultValues);\r\n  }, [reset, defaultValues]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onDone)}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          {type === \"NAGHD\" && (\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  select\r\n                  label=\"صندوق\"\r\n                  onChange={onChangeCash}\r\n                  value={selectedCash}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  name=\"cash\"\r\n                >\r\n                  {cashes.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Controller\r\n                  control={control}\r\n                  render={({ onChange, value, name }) => {\r\n                    return (\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        label=\"مبلغ نقدی\"\r\n                        type=\"number\"\r\n                        name={name}\r\n                        onChange={onChange}\r\n                        value={value}\r\n                        error={!!errors.price}\r\n                        helperText={errors.price ? errors.price.message : \"\"}\r\n                        fullWidth\r\n                        size=\"small\"\r\n                      />\r\n                    );\r\n                  }}\r\n                  name=\"price\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n          {type === \"CARD\" && (\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  select\r\n                  label=\"صندوق\"\r\n                  onChange={onChangeCash}\r\n                  value={selectedCash}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  name=\"cash\"\r\n                >\r\n                  {cashes.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  select\r\n                  label=\"نوع تراکنش\"\r\n                  onChange={onChangeTransaction}\r\n                  value={selectedTransaction}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  name=\"cash\"\r\n                >\r\n                  {Constant.BANK_TRANSACTION_TYPE.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Controller\r\n                  control={control}\r\n                  render={({ onChange, value, name }) => {\r\n                    return (\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        label=\"مبلغ \"\r\n                        type=\"number\"\r\n                        name={name}\r\n                        onChange={onChange}\r\n                        value={value}\r\n                        error={!!errors.price}\r\n                        helperText={errors.price ? errors.price.message : \"\"}\r\n                        fullWidth\r\n                        size=\"small\"\r\n                      />\r\n                    );\r\n                  }}\r\n                  rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                  name=\"price\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Controller\r\n                  control={control}\r\n                  render={({ onChange, value, name }) => {\r\n                    return (\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        label=\"شماره رهگیری\"\r\n                        number\r\n                        name={name}\r\n                        onChange={onChange}\r\n                        value={value}\r\n                        error={!!errors.trackingCode}\r\n                        helperText={\r\n                          errors.trackingCode ? errors.trackingCode.message : \"\"\r\n                        }\r\n                        fullWidth\r\n                        size=\"small\"\r\n                      />\r\n                    );\r\n                  }}\r\n                  name=\"trackingCode\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  select\r\n                  label=\"بانک\"\r\n                  onChange={onChangeBank}\r\n                  value={selectedBank}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  name=\"bank\"\r\n                  SelectProps={{\r\n                    classes: {\r\n                      select: classes.rootSelect,\r\n                    },\r\n                  }}\r\n                >\r\n                  {banks.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      <img\r\n                        src={`${Constant.API_ADDRESS}/${option.logo}`}\r\n                        alt={option.label}\r\n                        style={{\r\n                          width: 25,\r\n                          height: 25,\r\n                          borderRadius: \"50%\",\r\n                          marginLeft: 10,\r\n                        }}\r\n                      />\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n          {type === \"CHECK\" && (\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  select\r\n                  label=\"صندوق\"\r\n                  onChange={onChangeCash}\r\n                  value={selectedCash}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  name=\"cash\"\r\n                >\r\n                  {cashes.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Controller\r\n                  control={control}\r\n                  render={({ onChange, value, name }) => {\r\n                    return (\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        label=\"مبلغ چک\"\r\n                        type=\"number\"\r\n                        name={name}\r\n                        onChange={onChange}\r\n                        value={value}\r\n                        error={!!errors.price}\r\n                        helperText={errors.price ? errors.price.message : \"\"}\r\n                        fullWidth\r\n                        size=\"small\"\r\n                      />\r\n                    );\r\n                  }}\r\n                  rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                  name=\"price\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Controller\r\n                  control={control}\r\n                  render={({ onChange, value, name }) => {\r\n                    return (\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        label=\"شماره چک\"\r\n                        number\r\n                        name={name}\r\n                        onChange={onChange}\r\n                        value={value}\r\n                        error={!!errors.chequeNumber}\r\n                        helperText={\r\n                          errors.chequeNumber ? errors.chequeNumber.message : \"\"\r\n                        }\r\n                        fullWidth\r\n                        size=\"small\"\r\n                      />\r\n                    );\r\n                  }}\r\n                  name=\"chequeNumber\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  select\r\n                  label=\"بانک\"\r\n                  onChange={onChangeBank}\r\n                  value={selectedBank}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  name=\"bank\"\r\n                  SelectProps={{\r\n                    classes: {\r\n                      select: classes.rootSelect,\r\n                    },\r\n                  }}\r\n                >\r\n                  {banks.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      <img\r\n                        src={`${Constant.API_ADDRESS}/${option.logo}`}\r\n                        alt={option.label}\r\n                        style={{\r\n                          width: 25,\r\n                          height: 25,\r\n                          borderRadius: \"50%\",\r\n                          marginLeft: 10,\r\n                        }}\r\n                      />\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Controller\r\n                  control={control}\r\n                  render={({ onChange, value, name }) => {\r\n                    return (\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        label=\"شعبه\"\r\n                        number\r\n                        name={name}\r\n                        onChange={onChange}\r\n                        value={value}\r\n                        error={!!errors.bankBranch}\r\n                        helperText={\r\n                          errors.bankBranch ? errors.bankBranch.message : \"\"\r\n                        }\r\n                        fullWidth\r\n                        size=\"small\"\r\n                      />\r\n                    );\r\n                  }}\r\n                  name=\"bankBranch\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} className={classes.datePicker}>\r\n                <DatePicker\r\n                  name=\"date\"\r\n                  label=\"تاریخ سررسید\"\r\n                  inputVariant=\"outlined\"\r\n                  okLabel=\"تأیید\"\r\n                  cancelLabel=\"لغو\"\r\n                  labelFunc={(date) =>\r\n                    date ? date.format(\"jYYYY/jMM/jDD\") : \"\"\r\n                  }\r\n                  value={chequeDueDate}\r\n                  onChange={handleChequeDueDateChange}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Controller\r\n                  control={control}\r\n                  render={({ onChange, value, name }) => {\r\n                    return (\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        label=\"در وجه\"\r\n                        number\r\n                        name={name}\r\n                        onChange={onChange}\r\n                        value={value}\r\n                        error={!!errors.chequePayTo}\r\n                        helperText={\r\n                          errors.chequePayTo ? errors.chequePayTo.message : \"\"\r\n                        }\r\n                        fullWidth\r\n                        size=\"small\"\r\n                      />\r\n                    );\r\n                  }}\r\n                  name=\"chequePayTo\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            onClick={handleSubmit(onDone)}\r\n          >\r\n            تایید\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n            انصراف\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Payment;\r\n","import React, { useEffect, useState, useImperativeHandle } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  Button,\r\n  ButtonGroup,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Accordion,\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport { DeleteIcon, EditIcon } from \"../../components/icons\";\r\nimport { getQueryString, persianNumber } from \"../../helpers/utils\";\r\nimport dialogAction from \"../../redux/actions/dialogAction\";\r\nimport Payment from \"./paymnet\";\r\nimport update from \"immutability-helper\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingBottom: 7,\r\n    paddingTop: 7,\r\n  },\r\n}));\r\n\r\nconst naghdPayHeadCells = [\r\n  { id: \"cash\", label: \"صندوق\" },\r\n  {\r\n    id: \"amount\",\r\n    label: \"مبلغ \",\r\n  },\r\n  { id: \"action\" },\r\n];\r\nconst cardPayHeadCells = [\r\n  { id: \"cash\", label: \"صندوق\" },\r\n  {\r\n    id: \"amount\",\r\n    label: \"مبلغ \",\r\n  },\r\n  {\r\n    id: \"type\",\r\n    label: \"نوع تراکنش \",\r\n  },\r\n  {\r\n    id: \"bank\",\r\n    label: \"بانک \",\r\n  },\r\n  {\r\n    id: \"code\",\r\n    label: \"شماره رهگیری \",\r\n  },\r\n  { id: \"action\" },\r\n];\r\nconst checkPayHeadCells = [\r\n  { id: \"cash\", label: \"صندوق\" },\r\n  {\r\n    id: \"amount\",\r\n    label: \"مبلغ \",\r\n  },\r\n  { id: \"dueDate\", label: \"تاریخ سررسید\" },\r\n  {\r\n    id: \"bank\",\r\n    label: \"بانک \",\r\n  },\r\n  { id: \"action\" },\r\n];\r\n\r\nconst PrePayment = React.forwardRef((props, ref) => {\r\n  const { defaultValues } = props;\r\n  const classes = useStyles();\r\n  const paymentType = getQueryString(\"type\");\r\n  const [payments, setPayments] = useState();\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return payments;\r\n  });\r\n\r\n  const onSubmitPaymentActions = (value, type, isEdit) => {\r\n    if (isEdit) {\r\n      return handleSubmitEditPayment(value, type);\r\n    }\r\n    return handleSubmitAddPayment(value, type);\r\n  };\r\n\r\n  const handleSubmitAddPayment = (value, type) => {\r\n    let newPayments;\r\n    const types = {\r\n      NAGHD: () => {\r\n        newPayments = update(payments, {\r\n          cashes: { $push: [value] },\r\n        });\r\n      },\r\n      CARD: () => {\r\n        newPayments = update(payments, {\r\n          banks: { $push: [value] },\r\n        });\r\n      },\r\n      CHECK: () => {\r\n        newPayments = update(payments, {\r\n          cheques: { $push: [value] },\r\n        });\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n      setPayments(newPayments);\r\n      dialogAction.hide({ name: \"prePayment\" });\r\n    }\r\n  };\r\n\r\n  const handleSubmitEditPayment = (value, type) => {\r\n    let newPayments;\r\n    const types = {\r\n      NAGHD: () => {\r\n        const index = payments.cashes.findIndex((item) => item.id === value.id);\r\n        newPayments = update(payments, {\r\n          cashes: {\r\n            [index]: { $set: value },\r\n          },\r\n        });\r\n      },\r\n      CARD: () => {\r\n        const index = payments.banks.findIndex((item) => item.id === value.id);\r\n        newPayments = update(payments, {\r\n          banks: {\r\n            [index]: { $set: value },\r\n          },\r\n        });\r\n      },\r\n      CHECK: () => {\r\n        const index = payments.cheques.findIndex(\r\n          (item) => item.id === value.id,\r\n        );\r\n        newPayments = update(payments, {\r\n          cheques: {\r\n            [index]: { $set: value },\r\n          },\r\n        });\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n      setPayments(newPayments);\r\n      dialogAction.hide({ name: \"prePayment\" });\r\n    }\r\n  };\r\n\r\n  const handleDeletePayment = (value, type) => {\r\n    dialogAction.show({\r\n      confirm: true,\r\n      title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n      onAction: () => {\r\n        let newPayments;\r\n        const types = {\r\n          NAGHD: () => {\r\n            const index = payments.cashes.findIndex(\r\n              (item) => item.id === value.id,\r\n            );\r\n            newPayments = update(payments, {\r\n              cashes: { $splice: [[index, 1]] },\r\n            });\r\n          },\r\n          CARD: () => {\r\n            const index = payments.banks.findIndex(\r\n              (item) => item.id === value.id,\r\n            );\r\n            newPayments = update(payments, {\r\n              banks: { $splice: [[index, 1]] },\r\n            });\r\n          },\r\n          CHECK: () => {\r\n            const index = payments.cheques.findIndex(\r\n              (item) => item.id === value.id,\r\n            );\r\n            newPayments = update(payments, {\r\n              cheques: { $splice: [[index, 1]] },\r\n            });\r\n          },\r\n        };\r\n        if (types[type]) {\r\n          types[type]();\r\n          setPayments(newPayments);\r\n          dialogAction.hide({ name: \"prePayment\" });\r\n        }\r\n      },\r\n      size: \"6\",\r\n      disableCloseButton: false,\r\n    });\r\n  };\r\n\r\n  const onDismissPayment = () => {\r\n    dialogAction.hide({ name: \"prePayment\" });\r\n  };\r\n\r\n  const onClickPayment = (type, data) => {\r\n    dialogAction.show({\r\n      title: `${paymentType === \"INCOME\" ? \"دریافت\" : \"پرداخت\"} ${\r\n        type === \"NAGHD\" ? \"نقدی\" : type === \"CARD\" ? \"کارتی\" : \"چکی\"\r\n      }`,\r\n      component: (\r\n        <Payment\r\n          onSubmit={onSubmitPaymentActions}\r\n          onDismiss={onDismissPayment}\r\n          defaultValues={data}\r\n          paymentType={paymentType}\r\n          type={type}\r\n        />\r\n      ),\r\n      name: \"prePayment\",\r\n      size: \"4\",\r\n      confirm: false,\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  const getButtonTitle = (type) => {\r\n    const types = {\r\n      NAGHD: () => {\r\n        return (\r\n          <Typography variant=\"button\">\r\n            {paymentType === \"INCOME\" ? \"دریافت نقدی\" : \"پرداخت نقدی\"}(\r\n            {payments?.cashes.length})\r\n          </Typography>\r\n        );\r\n      },\r\n      CARD: () => {\r\n        return (\r\n          <Typography variant=\"button\">\r\n            {paymentType === \"INCOME\" ? \"دریافت کارتی\" : \"پرداخت کارتی\"}(\r\n            {payments?.banks.length})\r\n          </Typography>\r\n        );\r\n      },\r\n      CHECK: () => {\r\n        return (\r\n          <Typography variant=\"button\">\r\n            {paymentType === \"INCOME\" ? \"دریافت چکی\" : \"پرداخت چکی\"}(\r\n            {payments?.cheques.length})\r\n          </Typography>\r\n        );\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      return types[type]();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setPayments(defaultValues);\r\n  }, [defaultValues]);\r\n\r\n  useEffect(() => {\r\n    if (typeof props.onSubmit === \"function\") {\r\n      props.onSubmit(payments);\r\n    }\r\n  }, [payments]);\r\n\r\n  return (\r\n    <>\r\n      <Grid item xs={12} style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <ButtonGroup color=\"primary\">\r\n          <Button\r\n            startIcon={<i className=\"material-icons-round\">local_atm</i>}\r\n            onClick={() => onClickPayment(\"NAGHD\")}\r\n          >\r\n            {getButtonTitle(\"NAGHD\")}\r\n          </Button>\r\n          <Button\r\n            startIcon={<i className=\"material-icons-round\">payment</i>}\r\n            onClick={() => onClickPayment(\"CARD\")}\r\n          >\r\n            {getButtonTitle(\"CARD\")}\r\n          </Button>\r\n          <Button\r\n            startIcon={<i className=\"material-icons-round\">payments</i>}\r\n            onClick={() => onClickPayment(\"CHECK\")}\r\n          >\r\n            {getButtonTitle(\"CHECK\")}\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Grid>\r\n\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Accordion\r\n            expanded={payments?.cashes.length}\r\n            disabled={!payments?.cashes.length}\r\n          >\r\n            <AccordionSummary\r\n              className={classes.accordionSummary}\r\n              expandIcon={<i className=\"material-icons-round\">expand_more</i>}\r\n              aria-controls=\"panel1a-content\"\r\n              id=\"panel1a-header\"\r\n            >\r\n              <Typography className={classes.heading}>نقدی ها</Typography>\r\n            </AccordionSummary>\r\n            {!!payments?.cashes.length && (\r\n              <AccordionDetails>\r\n                <Grid item xs={12}>\r\n                  <Paper>\r\n                    <TableContainer style={{ padding: \"0 10px\" }}>\r\n                      <Table\r\n                        className={classes.table}\r\n                        size={\"medium\"}\r\n                        style={{ paddingRight: 10 }}\r\n                      >\r\n                        <TableHeader headCells={naghdPayHeadCells} />\r\n\r\n                        <TableBody>\r\n                          {payments?.cashes.map((row) => {\r\n                            return (\r\n                              <TableRow\r\n                                hover\r\n                                tabIndex={-1}\r\n                                key={row.id}\r\n                                style={{ paddingRight: 10 }}\r\n                              >\r\n                                <TableCell padding=\"none\">\r\n                                  <div\r\n                                    style={{\r\n                                      display: \"flex\",\r\n                                      alignItems: \"center\",\r\n                                    }}\r\n                                  >\r\n                                    {row.cashDesk?.label}\r\n                                  </div>\r\n                                </TableCell>\r\n                                <TableCell padding=\"none\">\r\n                                  {persianNumber(\r\n                                    Number(row.price).toLocaleString(),\r\n                                  )}\r\n                                </TableCell>\r\n\r\n                                <TableCell\r\n                                  padding=\"none\"\r\n                                  style={{ textAlign: \"left\" }}\r\n                                >\r\n                                  <IconButton\r\n                                    onClick={() => onClickPayment(\"NAGHD\", row)}\r\n                                  >\r\n                                    <EditIcon />\r\n                                  </IconButton>\r\n\r\n                                  <IconButton\r\n                                    onClick={() =>\r\n                                      handleDeletePayment(row, \"NAGHD\")\r\n                                    }\r\n                                  >\r\n                                    <DeleteIcon />\r\n                                  </IconButton>\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            );\r\n                          })}\r\n                        </TableBody>\r\n                      </Table>\r\n                    </TableContainer>\r\n                  </Paper>\r\n                </Grid>\r\n              </AccordionDetails>\r\n            )}\r\n          </Accordion>\r\n          <Accordion\r\n            expanded={payments?.banks.length}\r\n            disabled={!payments?.banks.length}\r\n          >\r\n            <AccordionSummary\r\n              className={classes.accordionSummary}\r\n              expandIcon={<i className=\"material-icons-round\">expand_more</i>}\r\n              aria-controls=\"panel2a-content\"\r\n              id=\"panel2a-header\"\r\n            >\r\n              <Typography className={classes.heading}>کارتی ها</Typography>\r\n            </AccordionSummary>\r\n            {!!payments?.banks.length && (\r\n              <AccordionDetails>\r\n                <Grid item xs={12}>\r\n                  <Paper>\r\n                    <TableContainer style={{ padding: \"0 10px\" }}>\r\n                      <Table\r\n                        className={classes.table}\r\n                        size={\"medium\"}\r\n                        style={{ paddingRight: 10 }}\r\n                      >\r\n                        <TableHeader headCells={cardPayHeadCells} />\r\n\r\n                        <TableBody>\r\n                          {payments?.banks.map((row) => {\r\n                            return (\r\n                              <TableRow\r\n                                hover\r\n                                tabIndex={-1}\r\n                                key={row.id}\r\n                                style={{ paddingRight: 10 }}\r\n                              >\r\n                                <TableCell padding=\"none\">\r\n                                  <div\r\n                                    style={{\r\n                                      display: \"flex\",\r\n                                      alignItems: \"center\",\r\n                                    }}\r\n                                  >\r\n                                    {row.cashDesk?.label}\r\n                                  </div>\r\n                                </TableCell>\r\n                                <TableCell padding=\"none\">\r\n                                  {persianNumber(\r\n                                    Number(row.price).toLocaleString(),\r\n                                  )}\r\n                                </TableCell>\r\n                                <TableCell padding=\"none\">\r\n                                  {row.transactionType}\r\n                                </TableCell>\r\n                                <TableCell padding=\"none\">\r\n                                  {row.bank?.label}\r\n                                </TableCell>\r\n                                <TableCell padding=\"none\">\r\n                                  {row.trackingCode}\r\n                                </TableCell>\r\n\r\n                                <TableCell\r\n                                  padding=\"none\"\r\n                                  style={{ textAlign: \"left\" }}\r\n                                >\r\n                                  <IconButton\r\n                                    onClick={() => onClickPayment(\"CARD\", row)}\r\n                                  >\r\n                                    <EditIcon />\r\n                                  </IconButton>\r\n\r\n                                  <IconButton\r\n                                    onClick={() =>\r\n                                      handleDeletePayment(row, \"CARD\")\r\n                                    }\r\n                                  >\r\n                                    <DeleteIcon />\r\n                                  </IconButton>\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            );\r\n                          })}\r\n                        </TableBody>\r\n                      </Table>\r\n                    </TableContainer>\r\n                  </Paper>\r\n                </Grid>\r\n              </AccordionDetails>\r\n            )}\r\n          </Accordion>\r\n          <Accordion\r\n            expanded={payments?.cheques.length}\r\n            disabled={!payments?.cheques.length}\r\n          >\r\n            <AccordionSummary\r\n              className={classes.accordionSummary}\r\n              expandIcon={<i className=\"material-icons-round\">expand_more</i>}\r\n              aria-controls=\"panel3a-content\"\r\n              id=\"panel3a-header\"\r\n            >\r\n              <Typography className={classes.heading}>چک ها</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              {!!payments?.cheques.length && (\r\n                <Grid item xs={12}>\r\n                  <Paper>\r\n                    <TableContainer style={{ padding: \"0 10px\" }}>\r\n                      <Table\r\n                        className={classes.table}\r\n                        size={\"medium\"}\r\n                        style={{ paddingRight: 10 }}\r\n                      >\r\n                        <TableHeader headCells={checkPayHeadCells} />\r\n\r\n                        <TableBody>\r\n                          {payments?.cheques.map((row) => {\r\n                            return (\r\n                              <TableRow\r\n                                hover\r\n                                tabIndex={-1}\r\n                                key={row.id}\r\n                                style={{ paddingRight: 10 }}\r\n                              >\r\n                                <TableCell padding=\"none\">\r\n                                  <div\r\n                                    style={{\r\n                                      display: \"flex\",\r\n                                      alignItems: \"center\",\r\n                                    }}\r\n                                  >\r\n                                    {row.cashDesk?.label}\r\n                                  </div>\r\n                                </TableCell>\r\n                                <TableCell padding=\"none\">\r\n                                  {persianNumber(\r\n                                    Number(row.price).toLocaleString(),\r\n                                  )}\r\n                                </TableCell>\r\n\r\n                                <TableCell padding=\"none\">\r\n                                  {row.chequeDueDate.toLocaleDateString(\r\n                                    \"fa-IR\",\r\n                                  )}\r\n                                </TableCell>\r\n                                <TableCell padding=\"none\">\r\n                                  {row.bank?.label}\r\n                                </TableCell>\r\n                                <TableCell\r\n                                  padding=\"none\"\r\n                                  style={{ textAlign: \"left\" }}\r\n                                >\r\n                                  <IconButton\r\n                                    onClick={() => onClickPayment(\"CHECK\", row)}\r\n                                  >\r\n                                    <EditIcon />\r\n                                  </IconButton>\r\n\r\n                                  <IconButton\r\n                                    onClick={() =>\r\n                                      handleDeletePayment(row, \"CHECK\")\r\n                                    }\r\n                                  >\r\n                                    <DeleteIcon />\r\n                                  </IconButton>\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            );\r\n                          })}\r\n                        </TableBody>\r\n                      </Table>\r\n                    </TableContainer>\r\n                  </Paper>\r\n                </Grid>\r\n              )}\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n});\r\nexport default PrePayment;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Typography,\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  MenuItem,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\n\r\nimport PrePayment from \"../payment/prePayment\";\r\n\r\nexport default function ProductList({ onDismiss, onSubmit, driverId }) {\r\n  const paymentRef = useRef(null);\r\n  const [payments, setPayments] = useState({\r\n    cashes: [],\r\n    banks: [],\r\n    cheques: [],\r\n  });\r\n\r\n  const onDone = () => {\r\n    onSubmit({ ...paymentRef.current }, driverId);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form>\r\n        <Grid container spacing={3}>\r\n          <PrePayment\r\n            defaultValues={payments}\r\n            type={\"OUTCOME\"}\r\n            ref={paymentRef}\r\n          />\r\n        </Grid>\r\n      </form>\r\n\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          marginTop: 20,\r\n        }}\r\n      >\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onDone}>\r\n          تایید\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n          انصراف\r\n        </Button>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Typography,\r\n  Chip,\r\n  Button,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { convertParamsToQueryString } from \"../../helpers/utils\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"firstName\",\r\n    label: \"نام\",\r\n  },\r\n  { id: \"lastName\", label: \"نام خانوادگی\" },\r\n  {\r\n    id: \"category\",\r\n    label: \"دسته بندی\",\r\n  },\r\n  { id: \"mobile\", label: \"موبایل\" },\r\n  { id: \"carName\", label: \"ماشین\" },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function MainList({ onSelect, onDismiss }) {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [search, setSearch] = useState();\r\n  const [orderBy, setOrderBy] = useState(\"firstName\");\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [selectedDrivers, setSelectedDrivers] = useState([]);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const getDriverRequest = useApi({\r\n    method: \"get\",\r\n    url: `driver?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n    })}`,\r\n  });\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n  };\r\n\r\n  const onSelectDriver = (item) => {\r\n    setSelectedDrivers([...selectedDrivers, item]);\r\n  };\r\n\r\n  const onDeselectDriver = (data) => {\r\n    setSelectedDrivers(selectedDrivers.filter((item) => item.id !== data.id));\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    onSelect(selectedDrivers);\r\n  };\r\n\r\n  const getData = async () => {\r\n    const driverList = await getDriverRequest.execute();\r\n    setList(driverList.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize]);\r\n\r\n  return (\r\n    <div style={{ marginTop: -20 }}>\r\n      <TableTop handleSearch={onSearch} />\r\n      <TableContainer>\r\n        <Table className={classes.table} size={\"medium\"}>\r\n          <TableHeader\r\n            classes={classes}\r\n            order={order}\r\n            orderBy={orderBy}\r\n            onRequestSort={handleRequestSort}\r\n            rowCount={list.length}\r\n            headCells={headCells}\r\n          />\r\n\r\n          <TableBody>\r\n            {list.map((row) => {\r\n              return (\r\n                <TableRow\r\n                  hover\r\n                  tabIndex={-1}\r\n                  key={row.id}\r\n                  style={{ paddingRight: 10 }}\r\n                >\r\n                  <TableCell padding=\"none\">{row.firstName}</TableCell>\r\n                  <TableCell padding=\"none\">{row.lastName}</TableCell>\r\n                  <TableCell padding=\"none\">{row.category.name}</TableCell>\r\n                  <TableCell padding=\"none\">{row.mobile}</TableCell>\r\n                  <TableCell padding=\"none\">{row.carName}</TableCell>\r\n                  <TableCell padding=\"none\">\r\n                    {selectedDrivers.includes(row) ? (\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        className={classes.selectedButton}\r\n                        onClick={() => onDeselectDriver(row)}\r\n                        endIcon={<i className=\"material-icons-round\">done</i>}\r\n                      >\r\n                        انتخاب شده\r\n                      </Button>\r\n                    ) : (\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => onSelectDriver(row)}\r\n                      >\r\n                        انتخاب راننده\r\n                      </Button>\r\n                    )}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n            {!list.length && !getDriverRequest.pending && (\r\n              <TableRow style={{ height: 53 }}>\r\n                <TableCell colSpan={6} style={{ textAlign: \"center\" }}>\r\n                  <Typography variant=\"h6\">\r\n                    داده ای برای نمایش وجود ندارد\r\n                  </Typography>\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePaging\r\n        count={list.length}\r\n        handleChangePage={handleChangePage}\r\n        handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n        page={page}\r\n        rowsPerPage={pageSize}\r\n      />\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n          تایید\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n          بازگشت\r\n        </Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import http from \"../../configs/axios\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport store from \"../store\";\r\nimport Storage from \"../../services/storage\";\r\n\r\nexport default {\r\n  async setProdcutUnit() {\r\n    const result = await http.get(\"/product/unit\");\r\n    if (result) {\r\n      Storage.setItem(\r\n        Constant.STORAGE.PRODUCT_UNITS,\r\n        JSON.stringify(result.data),\r\n      );\r\n      store.dispatch({\r\n        type: Constant.ACTION_TYPES.GET_UNITS,\r\n        payload: result.data,\r\n      });\r\n    }\r\n  },\r\n\r\n  getProductUnit() {\r\n    return JSON.parse(Storage.getItem(Constant.STORAGE.PRODUCT_UNITS));\r\n  },\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Typography,\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  MenuItem,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { convertParamsToQueryString } from \"../../helpers/utils\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport unitAction from \"../../redux/actions/unitAction\";\r\nimport isEmpty from \"lodash.isempty\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    label: \"نام کالا\",\r\n  },\r\n  {\r\n    id: \"category\",\r\n    label: \"دسته بندی\",\r\n  },\r\n  {\r\n    id: \"amount\",\r\n    label: \"موجودی کل\",\r\n  },\r\n  { id: \"unit\", label: \" واحد شمارشی\" },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function ProductList({\r\n  onSubmit,\r\n  onDismiss,\r\n  customerId,\r\n  defaultValues,\r\n  action,\r\n}) {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [search, setSearch] = useState();\r\n  const [orderBy, setOrderBy] = useState(\"name\");\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [showPerUnit, setShowPerUnit] = useState(\r\n    defaultValues ? !!defaultValues.perUnit : false,\r\n  );\r\n  const units = unitAction.getProductUnit();\r\n  const [selectedProduct, setSelectedProduct] = useState(defaultValues);\r\n  const [depotPicker, setDepotPicker] = useState([]);\r\n  const [selectedDepot, setSelectedDepot] = useState(1);\r\n  const [productFee, setProductFee] = useState(\r\n    defaultValues || {\r\n      name: \" \",\r\n      fee: \"\",\r\n      amount: \"\",\r\n    },\r\n  );\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const getDepotProductRequest = useApi({\r\n    method: \"get\",\r\n    url: `product/depot?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n    })}`,\r\n  });\r\n\r\n  const getProductFeeRequest = useApi({\r\n    method: \"get\",\r\n    url: \"invoice/fee\",\r\n  });\r\n\r\n  const getDepotRequest = useApi({\r\n    method: \"get\",\r\n    url: `depot/picker`,\r\n  });\r\n\r\n  const onChangeSelectedProduct = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name === \"unit\") {\r\n      const allUnits = units.filter(\r\n        (item) => item.value === selectedProduct?.unitBaseId,\r\n      )[0].children;\r\n      const targetUnit = allUnits.filter((item) => item.value === value)[0];\r\n      setShowPerUnit(targetUnit.perUnit);\r\n    }\r\n    setProductFee({\r\n      ...productFee,\r\n      [name]: value,\r\n      unitBaseId: selectedProduct?.unitBaseId,\r\n    });\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n  };\r\n\r\n  const getData = async () => {\r\n    const productList = await getDepotProductRequest.execute(\r\n      null,\r\n      selectedDepot,\r\n    );\r\n    setList(productList.data);\r\n  };\r\n\r\n  const getProductUnitPicker = () => {\r\n    if (!isEmpty(selectedProduct)) {\r\n      const allUnits = units.filter(\r\n        (item) => item.value === selectedProduct.unitBaseId,\r\n      )[0];\r\n\r\n      if (allUnits) {\r\n        return allUnits.children;\r\n      }\r\n      return [];\r\n    }\r\n    return [];\r\n  };\r\n\r\n  const onSelectProduct = async (data) => {\r\n    setSelectedProduct(data);\r\n    if (customerId === 1) {\r\n      setProductFee({\r\n        productId: data.id,\r\n        name: data.name,\r\n        fee: \"\",\r\n        amount: \"\",\r\n      });\r\n    } else {\r\n      const fee = await getProductFeeRequest.execute(\r\n        null,\r\n        `${customerId}/${data.id}`,\r\n      );\r\n\r\n      const feeProduct = fee.data;\r\n      if (isEmpty(feeProduct)) {\r\n        setProductFee({\r\n          productId: data.id,\r\n          name: data.name,\r\n          fee: \"\",\r\n          amount: \"\",\r\n        });\r\n      } else {\r\n        setProductFee({ ...feeProduct, productId: data.id, name: data.name });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onDeselectProduct = () => {\r\n    setSelectedProduct();\r\n  };\r\n\r\n  const onDone = () => {\r\n    const newId = uuid();\r\n    const data = {\r\n      id: defaultValues ? defaultValues.id : newId,\r\n      ...productFee,\r\n      depotId: selectedDepot,\r\n      totalFee: Number(productFee.fee) * Number(productFee.amount),\r\n    };\r\n\r\n    onSubmit(data, action);\r\n  };\r\n\r\n  const getDepotPicker = async () => {\r\n    const result = await getDepotRequest.execute();\r\n    setDepotPicker(result.data);\r\n  };\r\n\r\n  const onChangeDepot = (e) => {\r\n    setSelectedDepot(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize, selectedDepot]);\r\n\r\n  useEffect(() => {\r\n    getDepotPicker();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <form>\r\n        <Grid container spacing={3}>\r\n          <Grid item lg={6} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"نام کالا\"\r\n              name={\"name\"}\r\n              onChange={onChangeSelectedProduct}\r\n              value={productFee.name}\r\n              fullWidth\r\n              size=\"small\"\r\n              disabled\r\n            />\r\n          </Grid>\r\n          <Grid item lg={6} xs={12}>\r\n            <TextField\r\n              select\r\n              label=\"واحد شمارش\"\r\n              value={productFee?.unit}\r\n              onChange={onChangeSelectedProduct}\r\n              variant=\"outlined\"\r\n              name=\"unit\"\r\n              fullWidth\r\n              size=\"small\"\r\n            >\r\n              {getProductUnitPicker().map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n          {showPerUnit && (\r\n            <Grid item lg={6} xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                label=\"مقدار در واحد\"\r\n                name={\"perUnit\"}\r\n                onChange={onChangeSelectedProduct}\r\n                value={productFee?.perUnit}\r\n                fullWidth\r\n                size=\"small\"\r\n                type=\"number\"\r\n              />\r\n            </Grid>\r\n          )}\r\n          <Grid item lg={6} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"مقدار\"\r\n              name={\"amount\"}\r\n              onChange={onChangeSelectedProduct}\r\n              value={productFee?.amount}\r\n              fullWidth\r\n              size=\"small\"\r\n              type=\"number\"\r\n            />\r\n          </Grid>\r\n          <Grid item lg={6} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"قیمت\"\r\n              name={\"fee\"}\r\n              onChange={onChangeSelectedProduct}\r\n              value={productFee?.fee}\r\n              fullWidth\r\n              size=\"small\"\r\n              type=\"number\"\r\n            />\r\n          </Grid>\r\n\r\n          {!!selectedProduct && (\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n            >\r\n              <Button variant=\"contained\" color=\"primary\" onClick={onDone}>\r\n                تایید\r\n              </Button>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </form>\r\n      <Divider style={{ margin: \"20px 10px\" }} />\r\n      <Grid container spacing={3}>\r\n        <Grid item lg={12} xs={12}>\r\n          <TextField\r\n            select\r\n            label=\"انبار\"\r\n            value={selectedDepot}\r\n            onChange={onChangeDepot}\r\n            variant=\"outlined\"\r\n            name=\"depot\"\r\n            fullWidth\r\n            size=\"small\"\r\n          >\r\n            {depotPicker.map((option) => (\r\n              <MenuItem key={option.value} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n      </Grid>\r\n      <TableContainer>\r\n        <TableTop handleSearch={onSearch} defaultSearch={search} />\r\n\r\n        <Table className={classes.table} size={\"medium\"}>\r\n          <TableHeader\r\n            classes={classes}\r\n            order={order}\r\n            orderBy={orderBy}\r\n            onRequestSort={handleRequestSort}\r\n            rowCount={list.length}\r\n            headCells={headCells}\r\n          />\r\n\r\n          <TableBody>\r\n            {list.map((row) => {\r\n              return (\r\n                <TableRow\r\n                  hover\r\n                  tabIndex={-1}\r\n                  key={row.id}\r\n                  style={{ paddingRight: 10 }}\r\n                >\r\n                  <TableCell padding=\"none\">{row.name}</TableCell>\r\n                  <TableCell padding=\"none\">\r\n                    {row.categories.join(\",\")}\r\n                  </TableCell>\r\n                  <TableCell padding=\"none\">{row.totalStock}</TableCell>\r\n                  <TableCell padding=\"none\">{row.unitBase}</TableCell>\r\n                  <TableCell padding=\"none\">\r\n                    {selectedProduct?.id === row.id ? (\r\n                      <Button\r\n                        disabled={!!defaultValues}\r\n                        variant=\"contained\"\r\n                        className={classes.selectedButton}\r\n                        onClick={() => onDeselectProduct(row)}\r\n                        endIcon={<i className=\"material-icons-round\">done</i>}\r\n                      >\r\n                        انتخاب شده\r\n                      </Button>\r\n                    ) : (\r\n                      <Button\r\n                        disabled={!!defaultValues}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => onSelectProduct(row)}\r\n                      >\r\n                        انتخاب کالا\r\n                      </Button>\r\n                    )}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n            {!list.length && !getDepotProductRequest.pending && (\r\n              <TableRow style={{ height: 53 }}>\r\n                <TableCell colSpan={6} style={{ textAlign: \"center\" }}>\r\n                  <Typography variant=\"h6\">\r\n                    داده ای برای نمایش وجود ندارد\r\n                  </Typography>\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePaging\r\n        count={list.length}\r\n        handleChangePage={handleChangePage}\r\n        handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n        page={page}\r\n        rowsPerPage={pageSize}\r\n      />\r\n\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n      >\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n          انصراف\r\n        </Button>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import React, { Fragment, useEffect, useState, useRef } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  IconButton,\r\n  Chip,\r\n  MenuItem,\r\n  Hidden,\r\n} from \"@material-ui/core\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport { DeleteIcon, EditIcon } from \"../../components/icons\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { getQueryString, persianNumber } from \"../../helpers/utils\";\r\nimport CircularProgress from \"../../components/CircularProgress\";\r\nimport PersonSelector from \"../payment/personSelector\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport dialogAction from \"../../redux/actions/dialogAction\";\r\nimport DriverPayment from \"./driverPayment\";\r\nimport PrePayment from \"../payment/prePayment\";\r\nimport Drivers from \"./driver\";\r\nimport Product from \"./product\";\r\nimport Constant from \"../../helpers/constant\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingBottom: 7,\r\n    paddingTop: 7,\r\n  },\r\n}));\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    label: \"نام کالا\",\r\n  },\r\n  { id: \"unit\", label: \"واحد\" },\r\n  {\r\n    id: \"amount\",\r\n    label: \"مقدار\",\r\n  },\r\n  {\r\n    id: \"fee\",\r\n    label: \"قیمت\",\r\n  },\r\n  {\r\n    id: \"total\",\r\n    label: \"مجموع\",\r\n  },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nconst driverHeadCell = [\r\n  {\r\n    id: \"first\",\r\n    label: \"نام راننده\",\r\n  },\r\n  { id: \"last\", label: \"نام خانوادگی راننده\" },\r\n  {\r\n    id: \"car\",\r\n    label: \"نام ماشین\",\r\n  },\r\n  {\r\n    id: \"pelak\",\r\n    label: \"پلاک\",\r\n  },\r\n  {\r\n    id: \"pay\",\r\n    label: \"پرداختی\",\r\n  },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function MainDetail({ defaultValues }) {\r\n  const paymentRef = useRef(null);\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const id = getQueryString(\"id\");\r\n  const invoiceType = getQueryString(\"type\");\r\n  const [detail, setDetail] = useState({});\r\n  const [selectedPerson, setSelectedPerson] = useState();\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n  const [selectedDate, handleDateChange] = useState(moment());\r\n  const [invoiceCategory, setInvoiceCategory] = useState(3);\r\n  const [category, setCategory] = useState([]);\r\n  const [drivers, setDrivers] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n  const [invoicePerson, setInvoicePerson] = useState(\" \");\r\n  const [payments, setPayments] = useState({\r\n    cashes: [],\r\n    banks: [],\r\n    cheques: [],\r\n  });\r\n  const [totalFee, setTotalFee] = useState(0);\r\n  const [totalPayment, setTotalPayment] = useState(0);\r\n  const [discount, setDiscount] = useState(0);\r\n  const [pureFee, setPureFee] = useState(0);\r\n  const [totalRemaining, setTotalRemaining] = useState(0);\r\n\r\n  const addInvoiceRequest = useApi({\r\n    method: \"post\",\r\n    url: `invoice`,\r\n  });\r\n  const editInvoiceRequest = useApi({\r\n    method: \"put\",\r\n    url: `invoice/${id}`,\r\n  });\r\n  const detailInvoiceRequest = useApi({\r\n    method: \"get\",\r\n    url: `invoice/${id}`,\r\n  });\r\n  const invoiceCategoryRequest = useApi({\r\n    method: \"get\",\r\n    url: `invoice/category`,\r\n  });\r\n  const addInvoicePaymentRequest = useApi({\r\n    method: \"post\",\r\n    url: `payment`,\r\n  });\r\n  const getPaymentInvoiceRequest = useApi({\r\n    method: \"get\",\r\n    url: `payment/invoice/${id}`,\r\n  });\r\n\r\n  const addPaymentDriverRequest = useApi({\r\n    method: \"post\",\r\n    url: `payment`,\r\n  });\r\n\r\n  const onChnageDate = (e) => {\r\n    handleDateChange(e);\r\n  };\r\n\r\n  const getInvoiceCategory = async () => {\r\n    const detail = await invoiceCategoryRequest.execute();\r\n    setCategory(detail.data);\r\n  };\r\n\r\n  const onSelectPerson = (person) => {\r\n    setSelectedPerson(person);\r\n    setInvoicePerson(true ? `${person.firstName} ${person.lastName}` : \"\");\r\n    onDismissPerson();\r\n  };\r\n\r\n  const onDismissPerson = () => {\r\n    dialogAction.hide({ name: \"person\" });\r\n  };\r\n\r\n  const onShowDialog = () => {\r\n    dialogAction.show({\r\n      title: \"انتخاب شخص\",\r\n      component: (\r\n        <PersonSelector\r\n          onSelect={onSelectPerson}\r\n          onDismiss={onDismissPerson}\r\n          filter={Constant.PERSON_TYPE.CUSTOMER}\r\n        />\r\n      ),\r\n      name: \"person\",\r\n      size: \"8\",\r\n      confirm: false,\r\n      disableCloseButton: false,\r\n    });\r\n  };\r\n\r\n  const getProperProducts = () => {\r\n    const newProducts = [];\r\n    products.map((item) => {\r\n      delete item.id;\r\n      return newProducts.push(item);\r\n    });\r\n    return newProducts;\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    const value = {\r\n      ...data,\r\n      products: getProperProducts(),\r\n      drivers,\r\n      date: selectedDate._d,\r\n      customerId: selectedPerson ? selectedPerson.id : 1,\r\n      type: invoiceType,\r\n      categoryId: invoiceCategory,\r\n      globalCustomer: invoicePerson,\r\n    };\r\n    if (id) {\r\n      await editInvoiceRequest.execute(value);\r\n    } else {\r\n      const response = await addInvoiceRequest.execute(value);\r\n      const invoicePayment = {\r\n        ...paymentRef.current,\r\n        invoiceId: response.id,\r\n        date: selectedDate._d,\r\n        personId: selectedPerson ? selectedPerson.id : 1,\r\n        personType: \"CUSTOMER\",\r\n        type: invoiceType === \"SELL\" ? \"INCOME\" : \"OUTCOME\",\r\n        description: `بابت فاکتور به شماره  ${response.id}`,\r\n      };\r\n      if (\r\n        invoicePayment.cashes.length > 0 ||\r\n        invoicePayment.cheques.length > 0 ||\r\n        invoicePayment.banks.length > 0\r\n      ) {\r\n        await addInvoicePaymentRequest.execute(invoicePayment);\r\n      }\r\n\r\n      drivers.map(async (item) => {\r\n        const value = {\r\n          type: \"OUTCOME\",\r\n          personType: \"DRIVER\",\r\n          personId: item.id,\r\n          description: `بابت فاکتور به شماره  ${response.id}`,\r\n          date: selectedDate._d,\r\n          ...item.payments,\r\n        };\r\n        if (\r\n          value.cashes.length > 0 ||\r\n          value.cheques.length > 0 ||\r\n          value.banks.length > 0\r\n        ) {\r\n          await addPaymentDriverRequest.execute(value);\r\n        }\r\n      });\r\n\r\n      setTimeout(() => {\r\n        onReject();\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  const onReject = () => {\r\n    history.push(\"/app/invoice-list?type=ALL\");\r\n  };\r\n\r\n  const getDetail = async () => {\r\n    const detail = await detailInvoiceRequest.execute();\r\n    const payments = await getPaymentInvoiceRequest.execute();\r\n    const paymentsArray = {\r\n      cashes: payments.data.cashes,\r\n      banks: payments.data.banks,\r\n      cheques: payments.data.cheques,\r\n    };\r\n\r\n    setDetail(detail.data);\r\n    setSelectedPerson(payments.data.person);\r\n    setPayments(paymentsArray);\r\n    setDrivers(detail.data.drivers);\r\n    setProducts(detail.data.products);\r\n    handleDateChange(detail.data.date);\r\n    setTotalFee(detail.data.totalPrice);\r\n    setDiscount(detail.data.discount);\r\n    setTotalPayment(payments.data.price);\r\n    setTotalRemaining(\r\n      detail.data.totalPrice -\r\n        (detail.data.discount + payments.data.price) +\r\n        Number(payments.data.person.accountRemaining),\r\n    );\r\n    if (detail.data.customerId === 1) {\r\n      setInvoicePerson(detail.data.globalCustomer);\r\n    }\r\n  };\r\n\r\n  const onSubmitDrivers = (drivers) => {\r\n    setDrivers(drivers);\r\n    onDismissDrivers();\r\n  };\r\n\r\n  const onDismissDrivers = () => {\r\n    dialogAction.hide({ name: \"driver\" });\r\n  };\r\n\r\n  const handleDeleteDriver = (id) => {\r\n    setDrivers(drivers.filter((item) => item.id !== id));\r\n  };\r\n\r\n  const onDismissDriverPayments = () => {\r\n    dialogAction.hide({ name: \"pay\" });\r\n  };\r\n\r\n  const onSubmitDriverPayments = (driverPayments, id) => {\r\n    const newDriver = [...drivers];\r\n    const selected = newDriver.find((item) => item.id === id);\r\n    const index = newDriver.findIndex((item) => item.id === id);\r\n    selected.payments = driverPayments;\r\n    newDriver[index] = selected;\r\n    setDrivers(newDriver);\r\n    // setDrivers({ ...drivers, drivers: { payments: driverPayments } });\r\n    onDismissDriverPayments();\r\n\r\n    // if (data.isUpdate) {\r\n    //   const index = accounts.findIndex((item) => item.id === data.id);\r\n    //   const accounstTmp = [...accounts];\r\n    //   accounstTmp[index] = data;\r\n    //   setAccounts(accounstTmp);\r\n    // } else {\r\n    //   setAccounts([...accounts, data]);\r\n    // }\r\n  };\r\n\r\n  const handlePaymentDriver = (row) => {\r\n    dialogAction.show({\r\n      title: \"پرداخت به راننده\",\r\n      component: (\r\n        <DriverPayment\r\n          onSubmit={onSubmitDriverPayments}\r\n          onDismiss={onDismissDriverPayments}\r\n          driverId={row.id}\r\n        />\r\n      ),\r\n      name: \"pay\",\r\n      size: \"6\",\r\n      confirm: false,\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  const onShowDriverDialog = () => {\r\n    dialogAction.show({\r\n      title: \"انتخاب راننده\",\r\n      component: (\r\n        <Drivers\r\n          onSelect={onSubmitDrivers}\r\n          onDismiss={onDismissDrivers}\r\n          defaultValues={drivers}\r\n        />\r\n      ),\r\n      name: \"driver\",\r\n      size: \"8\",\r\n      confirm: false,\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  const onSubmitProduct = (product, type) => {\r\n    if (type === \"edit\") {\r\n      const index = products.findIndex((item) => item.id === product.id);\r\n      const ProductsTmp = [...products];\r\n      ProductsTmp[index] = product;\r\n      setProducts(ProductsTmp);\r\n    } else {\r\n      setProducts([...products, product]);\r\n    }\r\n    onDismissProduct();\r\n  };\r\n\r\n  const onDismissProduct = () => {\r\n    dialogAction.hide({ name: \"product\" });\r\n  };\r\n\r\n  const handleDeleteProduct = (id) => {\r\n    setProducts(products.filter((item) => item.id !== id));\r\n  };\r\n\r\n  const handleEditProduct = (item) => {\r\n    onShowProductDialog(\"edit\", item);\r\n  };\r\n\r\n  const onShowProductDialog = (type, data) => {\r\n    dialogAction.show({\r\n      title: \"انتخاب کالا\",\r\n      component: (\r\n        <Product\r\n          onSubmit={onSubmitProduct}\r\n          onDismiss={onDismissProduct}\r\n          customerId={selectedPerson ? selectedPerson.id : 1}\r\n          defaultValues={data}\r\n          action={type}\r\n        />\r\n      ),\r\n      name: \"product\",\r\n      size: \"6\",\r\n      confirm: false,\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  const getDetailTitle = () => {\r\n    if (id) {\r\n      if (invoiceType === \"BUY\") {\r\n        return \"ویرایش فاکتور خرید\";\r\n      }\r\n      return \"ویرایش فاکتور فروش\";\r\n    } else {\r\n      if (invoiceType === \"SELL\") {\r\n        return \"افزودن فاکتور فروش\";\r\n      }\r\n      return \"افزودن فاکتور خرید\";\r\n    }\r\n  };\r\n\r\n  const onTotalDriverPayments = (data) => {\r\n    if (data) {\r\n      const cashesPrice = data.cashes.reduce(\r\n        (n, { price }) => n + Number(price),\r\n        0,\r\n      );\r\n      const chequesPrice = data.cheques.reduce(\r\n        (n, { price }) => n + Number(price),\r\n        0,\r\n      );\r\n      const banksPrice = data.banks.reduce(\r\n        (n, { price }) => n + Number(price),\r\n        0,\r\n      );\r\n      return cashesPrice + chequesPrice + banksPrice;\r\n    }\r\n  };\r\n\r\n  const onSubmitPayment = (data) => {\r\n    if (data) {\r\n      const cashesPrice = data.cashes.reduce(\r\n        (n, { price }) => n + Number(price),\r\n        0,\r\n      );\r\n      const chequesPrice = data.cheques.reduce(\r\n        (n, { price }) => n + Number(price),\r\n        0,\r\n      );\r\n      const banksPrice = data.banks.reduce(\r\n        (n, { price }) => n + Number(price),\r\n        0,\r\n      );\r\n      setTotalPayment(cashesPrice + chequesPrice + banksPrice);\r\n    }\r\n  };\r\n\r\n  const onDiscountChange = (e) => {\r\n    setDiscount(e.target.value);\r\n  };\r\n\r\n  const onChangeCategory = (e) => {\r\n    setInvoiceCategory(e.target.value);\r\n  };\r\n\r\n  const onChangeInvoicePerson = (e) => {\r\n    setInvoicePerson(e.target.value);\r\n    setSelectedPerson();\r\n  };\r\n\r\n  useEffect(() => {\r\n    getInvoiceCategory();\r\n    if (id) {\r\n      getDetail();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setTotalFee(products.reduce((n, { totalFee }) => n + totalFee, 0));\r\n  }, [products]);\r\n\r\n  useEffect(() => {\r\n    const factorPay = totalFee - (Number(discount) + totalPayment);\r\n\r\n    setPureFee(factorPay);\r\n    if (selectedPerson) {\r\n      setTotalRemaining(factorPay + Number(selectedPerson?.accountRemaining));\r\n    }\r\n  }, [totalFee, discount, totalPayment]);\r\n\r\n  useEffect(() => {\r\n    reset(detail);\r\n  }, [reset, detail]);\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      {!detailInvoiceRequest.pending ? (\r\n        <Grid item lg={8} sm={12} className={classes.root}>\r\n          <Paper className={classes.paper}>\r\n            <Typography\r\n              className={classes.title}\r\n              variant=\"h6\"\r\n              id=\"tableTitle\"\r\n              component=\"div\"\r\n            >\r\n              {getDetailTitle()}\r\n            </Typography>\r\n\r\n            <Grid container spacing={3}>\r\n              <Fragment>\r\n                <Grid item lg={6} xs={12} style={{ display: \"flex\" }}>\r\n                  <Button\r\n                    style={{ marginLeft: 10, width: \"30%\" }}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={onShowDialog}\r\n                  >\r\n                    انتخاب مشتری\r\n                  </Button>\r\n\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    name={\"personName\"}\r\n                    onChange={onChangeInvoicePerson}\r\n                    value={invoicePerson}\r\n                    style={{ width: \"70%\" }}\r\n                    size=\"small\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12} className={classes.datePicker}>\r\n                  <DatePicker\r\n                    autoOk\r\n                    name=\"date\"\r\n                    label=\"تاریخ ثبت\"\r\n                    inputVariant=\"outlined\"\r\n                    okLabel=\"تأیید\"\r\n                    cancelLabel=\"لغو\"\r\n                    labelFunc={(date) =>\r\n                      date ? date.format(\"jYYYY/jMM/jDD\") : \"\"\r\n                    }\r\n                    value={selectedDate}\r\n                    onChange={onChnageDate}\r\n                    style={{ width: \"100%\" }}\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  {!!category.length && invoiceCategory && (\r\n                    <TextField\r\n                      select\r\n                      label=\"دسته بندی\"\r\n                      value={invoiceCategory}\r\n                      onChange={onChangeCategory}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      size=\"small\"\r\n                    >\r\n                      {category.map((option) => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </TextField>\r\n                  )}\r\n                </Grid>\r\n                <Hidden smDown>\r\n                  <Grid item lg={6} xs={12} />\r\n                </Hidden>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"مبدا\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value || \" \"}\r\n                          error={!!errors.origin}\r\n                          helperText={\r\n                            errors.origin ? errors.origin.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    name=\"origin\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"مقصد\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value || \" \"}\r\n                          error={!!errors.destination}\r\n                          helperText={\r\n                            errors.destination ? errors.destination.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    name=\"destination\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12} style={{ display: \"flex\" }}>\r\n                  <Button\r\n                    style={{ marginLeft: 10, width: \"30%\" }}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={onShowDriverDialog}\r\n                    endIcon={\r\n                      <i className=\"material-icons-round\">local_shipping</i>\r\n                    }\r\n                    inventory_2\r\n                  >\r\n                    انتخاب راننده\r\n                  </Button>\r\n                </Grid>\r\n                {!!drivers.length && (\r\n                  <Grid item xs={12}>\r\n                    <Paper>\r\n                      <TableContainer style={{ padding: \"0 10px\" }}>\r\n                        <Table\r\n                          className={classes.table}\r\n                          size={\"medium\"}\r\n                          style={{ paddingRight: 10 }}\r\n                        >\r\n                          <TableHeader headCells={driverHeadCell} />\r\n\r\n                          <TableBody>\r\n                            {drivers.map((row) => {\r\n                              console.log(row);\r\n                              return (\r\n                                <TableRow\r\n                                  hover\r\n                                  tabIndex={-1}\r\n                                  key={row.id}\r\n                                  style={{ paddingRight: 10 }}\r\n                                >\r\n                                  <TableCell padding=\"none\">\r\n                                    {row.firstName}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {row.lastName}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {row.carName}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {row.carPlaque}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {onTotalDriverPayments(row.payments)}\r\n                                  </TableCell>\r\n                                  <TableCell\r\n                                    padding=\"none\"\r\n                                    style={{ textAlign: \"left\" }}\r\n                                  >\r\n                                    <IconButton\r\n                                      onClick={() => handlePaymentDriver(row)}\r\n                                    >\r\n                                      <span\r\n                                        class=\"material-icons-round\"\r\n                                        style={{ color: \"green\" }}\r\n                                      >\r\n                                        paid\r\n                                      </span>\r\n                                    </IconButton>\r\n\r\n                                    <IconButton\r\n                                      onClick={() => handleDeleteDriver(row.id)}\r\n                                    >\r\n                                      <DeleteIcon />\r\n                                    </IconButton>\r\n                                  </TableCell>\r\n                                </TableRow>\r\n                              );\r\n                            })}\r\n                          </TableBody>\r\n                        </Table>\r\n                      </TableContainer>\r\n                    </Paper>\r\n                  </Grid>\r\n                )}\r\n                <Grid item lg={6} xs={12} style={{ display: \"flex\" }}>\r\n                  <Button\r\n                    // disabled={isEmpty(selectedPerson)}\r\n                    style={{ marginLeft: 10, width: \"30%\" }}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => onShowProductDialog(\"add\")}\r\n                    endIcon={\r\n                      <i className=\"material-icons-round\">inventory_2</i>\r\n                    }\r\n                  >\r\n                    انتخاب کالا\r\n                  </Button>\r\n                </Grid>\r\n                {!!products.length && (\r\n                  <Grid item xs={12}>\r\n                    <Paper>\r\n                      <TableContainer style={{ padding: \"0 10px\" }}>\r\n                        <Table\r\n                          className={classes.table}\r\n                          size={\"medium\"}\r\n                          style={{ paddingRight: 10 }}\r\n                        >\r\n                          <TableHeader headCells={headCells} />\r\n\r\n                          <TableBody>\r\n                            {products.map((row) => {\r\n                              return (\r\n                                <TableRow\r\n                                  hover\r\n                                  tabIndex={-1}\r\n                                  key={row.id}\r\n                                  style={{ paddingRight: 10 }}\r\n                                >\r\n                                  <TableCell padding=\"none\">\r\n                                    {row.name}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {Constant.UNITS_MAP[row.unit]}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {row.perUnit\r\n                                      ? `${persianNumber(\r\n                                          row.amount,\r\n                                        )}*${persianNumber(row.perUnit)}`\r\n                                      : persianNumber(row.amount)}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {persianNumber(row.fee)}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {persianNumber(row.fee * row.amount)}\r\n                                  </TableCell>\r\n                                  <TableCell\r\n                                    padding=\"none\"\r\n                                    style={{ textAlign: \"left\" }}\r\n                                  >\r\n                                    <IconButton\r\n                                      onClick={() => handleEditProduct(row)}\r\n                                    >\r\n                                      <EditIcon />\r\n                                    </IconButton>\r\n\r\n                                    <IconButton\r\n                                      onClick={() =>\r\n                                        handleDeleteProduct(row.id)\r\n                                      }\r\n                                    >\r\n                                      <DeleteIcon />\r\n                                    </IconButton>\r\n                                  </TableCell>\r\n                                </TableRow>\r\n                              );\r\n                            })}\r\n                          </TableBody>\r\n                        </Table>\r\n                      </TableContainer>\r\n                    </Paper>\r\n                  </Grid>\r\n                )}\r\n                <Grid item xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"توضیحات\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value || \" \"}\r\n                          error={!!errors.description}\r\n                          helperText={\r\n                            errors.description ? errors.description.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          multiline\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    name=\"description\"\r\n                  />\r\n                </Grid>\r\n                <PrePayment\r\n                  type={invoiceType === \"BUY\" ? \"OUTCOME\" : \"INCOME\"}\r\n                  defaultValues={payments}\r\n                  ref={paymentRef}\r\n                  onSubmit={onSubmitPayment}\r\n                />\r\n                <Grid container spacing={3} style={{ marginTop: 20 }}>\r\n                  <Grid item lg={3} xs={6}>\r\n                    <TextField\r\n                      disabled\r\n                      variant=\"outlined\"\r\n                      label=\"مبلغ کل\"\r\n                      value={totalFee}\r\n                      fullWidth\r\n                      size=\"small\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={3} xs={6}>\r\n                    <TextField\r\n                      disabled\r\n                      variant=\"outlined\"\r\n                      label={`${\r\n                        invoiceType === \"SELL\" ? \"جمع دریافتی\" : \"جمع پرداختی\"\r\n                      }`}\r\n                      value={totalPayment}\r\n                      fullWidth\r\n                      size=\"small\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={3} xs={6}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      onChange={onDiscountChange}\r\n                      label=\"تخفیف\"\r\n                      value={discount || \" \"}\r\n                      fullWidth\r\n                      size=\"small\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={3} xs={6}>\r\n                    <TextField\r\n                      disabled\r\n                      variant=\"outlined\"\r\n                      label=\"مبلغ خالص\"\r\n                      value={pureFee}\r\n                      fullWidth\r\n                      size=\"small\"\r\n                    />\r\n                  </Grid>\r\n                  {selectedPerson && (\r\n                    <Grid item lg={3} xs={6}>\r\n                      <TextField\r\n                        disabled\r\n                        variant=\"outlined\"\r\n                        label=\"مانده قبلی\"\r\n                        value={\r\n                          selectedPerson ? selectedPerson.accountRemaining : 0\r\n                        }\r\n                        fullWidth\r\n                        size=\"small\"\r\n                      />\r\n                    </Grid>\r\n                  )}\r\n                  <Grid item lg={3} xs={6}>\r\n                    <TextField\r\n                      disabled\r\n                      variant=\"outlined\"\r\n                      label=\"مانده نهایی\"\r\n                      value={totalRemaining}\r\n                      fullWidth\r\n                      size=\"small\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                    تایید\r\n                  </Button>\r\n\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={onReject}\r\n                  >\r\n                    بازگشت\r\n                  </Button>\r\n                </Grid>\r\n              </Fragment>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      ) : (\r\n        <CircularProgress />\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  chip: {\r\n    color: \"#fff\",\r\n  },\r\n  allIcon: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  INCOME: {\r\n    backgroundColor: theme.palette.success.main,\r\n  },\r\n  incomeIcon: {\r\n    color: theme.palette.success.main,\r\n  },\r\n  OUTCOME: {\r\n    backgroundColor: theme.palette.danger.main,\r\n  },\r\n  outgoIcon: {\r\n    color: theme.palette.danger.main,\r\n  },\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingBottom: 7,\r\n    paddingTop: 7,\r\n  },\r\n}));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Typography,\r\n  Chip,\r\n  Button,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { convertParamsToQueryString } from \"../../helpers/utils\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    label: \"نام صندوق\",\r\n  },\r\n\r\n  {\r\n    id: \"logo\",\r\n    label: \"بانک\",\r\n  },\r\n  { id: \"amount\", label: \"موجودی\" },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function CashSelector({ onSelect, onDismiss, chequeId }) {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"name\");\r\n  const [search, setSearch] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n  };\r\n\r\n  const getCashRequest = useApi({\r\n    method: \"get\",\r\n    url: `cashdesk?type=BANK&${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n    })}`,\r\n  });\r\n\r\n  const handleAction = (id) => {\r\n    onSelect(id, chequeId);\r\n  };\r\n\r\n  const getData = async () => {\r\n    const cashList = await getCashRequest.execute();\r\n    setList(cashList.data);\r\n    setTotal(cashList.total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize]);\r\n\r\n  return (\r\n    <div style={{ marginTop: -50 }}>\r\n      <TableTop handleSearch={onSearch} />\r\n      <TableContainer style={{ padding: \"0 10px\" }}>\r\n        <Table\r\n          className={classes.table}\r\n          size={\"medium\"}\r\n          style={{ paddingRight: 10 }}\r\n        >\r\n          <TableHeader\r\n            classes={classes}\r\n            order={order}\r\n            orderBy={orderBy}\r\n            onRequestSort={handleRequestSort}\r\n            rowCount={list.length}\r\n            headCells={headCells}\r\n          />\r\n          <TableBody>\r\n            {list.map((row) => {\r\n              return (\r\n                <TableRow\r\n                  hover\r\n                  tabIndex={-1}\r\n                  key={row.id}\r\n                  style={{ paddingRight: 10 }}\r\n                >\r\n                  <TableCell padding=\"none\">{row.name}</TableCell>\r\n\r\n                  <TableCell padding=\"none\">\r\n                    {row.bank && (\r\n                      <img\r\n                        style={{ width: 40, height: 40 }}\r\n                        alt={row.bank.name}\r\n                        src={`${Constant.API_ADDRESS}/${row.bank.logo}`}\r\n                      />\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell padding=\"none\">{row.amount}</TableCell>\r\n\r\n                  <TableCell padding=\"none\">\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={() => handleAction(row.id)}\r\n                    >\r\n                      انتخاب حساب\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n            {!list.length && !getCashRequest.pending && (\r\n              <TableRow style={{ height: 53 }}>\r\n                <TableCell colSpan={6} style={{ textAlign: \"center\" }}>\r\n                  <Typography variant=\"h6\">\r\n                    داده ای برای نمایش وجود ندارد\r\n                  </Typography>\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePaging\r\n        count={total}\r\n        handleChangePage={handleChangePage}\r\n        handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n        page={page}\r\n        rowsPerPage={pageSize}\r\n      />\r\n\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n      >\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n          انصراف\r\n        </Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, Paper, TextField, Button } from \"@material-ui/core\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingBottom: 7,\r\n    paddingTop: 7,\r\n  },\r\n}));\r\n\r\nexport default function SpendCheque({ chequeId, onDismiss, onSubmit }) {\r\n  const classes = useStyles();\r\n  const [selectedPerson, setSelectedPerson] = useState();\r\n  const [selectedDate, handleDateChange] = useState(moment());\r\n  const [persons, setPersons] = useState([]);\r\n  const [description, setDescription] = useState();\r\n\r\n  const getPersonsRequest = useApi({\r\n    method: \"get\",\r\n    url: \"customer\",\r\n  });\r\n\r\n  const getPersons = async () => {\r\n    const personList = await getPersonsRequest.execute();\r\n    setPersons(personList.data);\r\n  };\r\n\r\n  const onDone = () => {\r\n    onSubmit({\r\n      chequeId,\r\n      personId: selectedPerson.id,\r\n      personType: selectedPerson.type,\r\n      date: selectedDate._d,\r\n      description,\r\n    });\r\n  };\r\n\r\n  const onChangePerson = (e, value) => {\r\n    setSelectedPerson(value);\r\n  };\r\n\r\n  const onChangeDescription = (e) => {\r\n    setDescription(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPersons();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Fragment>\r\n        <Grid item xs={12} style={{ display: \"flex\" }}>\r\n          <Autocomplete\r\n            id=\"combo-box-demo\"\r\n            onChange={onChangePerson}\r\n            options={persons}\r\n            getOptionLabel={(option) =>\r\n              `${option.firstName} ${option.lastName}`\r\n            }\r\n            fullWidth\r\n            size=\"small\"\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"انتخاب شخص\" variant=\"outlined\" />\r\n            )}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.datePicker}>\r\n          <DatePicker\r\n            autoOk\r\n            name=\"date\"\r\n            label=\"تاریخ ثبت\"\r\n            inputVariant=\"outlined\"\r\n            okLabel=\"تأیید\"\r\n            cancelLabel=\"لغو\"\r\n            labelFunc={(date) => (date ? date.format(\"jYYYY/jMM/jDD\") : \"\")}\r\n            value={selectedDate}\r\n            onChange={handleDateChange}\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            label=\"بابت\"\r\n            name={\"description\"}\r\n            onChange={onChangeDescription}\r\n            value={description}\r\n            fullWidth\r\n            size=\"small\"\r\n          />\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n        >\r\n          <Button variant=\"contained\" color=\"primary\" onClick={onDone}>\r\n            تایید\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n            بازگشت\r\n          </Button>\r\n        </Grid>\r\n      </Fragment>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Tabs,\r\n  Tab,\r\n  Chip,\r\n} from \"@material-ui/core\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport {\r\n  convertParamsToQueryString,\r\n  persianNumber,\r\n  hasPermission,\r\n} from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport clsx from \"clsx\";\r\nimport dialogAction from \"../../redux/actions/dialogAction\";\r\nimport CashSelector from \"./cashSelector\";\r\nimport SpendCheque from \"./spendCheque\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \" date\",\r\n    label: \"تاریخ سررسید\",\r\n  },\r\n  {\r\n    id: \"number\",\r\n    label: \"شماره چک\",\r\n  },\r\n  {\r\n    id: \"bank\",\r\n    label: \"بانک\",\r\n  },\r\n  { id: \"amount\", label: \"مبلغ\" },\r\n  { id: \"person\", label: \"طرف حساب\" },\r\n  { id: \"cashdesk\", label: \"محل چک\" },\r\n  { id: \"type\", label: \"نوع تراکنش\" },\r\n  { id: \"action\" },\r\n];\r\n\r\nconst MainList = () => {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"chequeDueDate\");\r\n  const [search, setSearch] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [paymentType, setPaymentType] = useState(\"ALL\");\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const getChequeRequest = useApi({\r\n    method: \"get\",\r\n    url: `cheque?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n      paymentType,\r\n    })}`,\r\n  });\r\n\r\n  const spendRequest = useApi({\r\n    method: \"post\",\r\n    url: `cheque/spend`,\r\n  });\r\n\r\n  const sleepRequest = useApi({\r\n    method: \"post\",\r\n    url: `cheque/sleep`,\r\n  });\r\n\r\n  const onSelectCash = async (cashdeskId, chequeId) => {\r\n    await sleepRequest.execute({ chequeId, cashdeskId });\r\n    getData();\r\n    DialogActions.hide({ name: \"cash\" });\r\n  };\r\n\r\n  const onSubmitSpend = async (data) => {\r\n    await spendRequest.execute(data);\r\n    getData();\r\n    DialogActions.hide({ name: \"spend\" });\r\n  };\r\n\r\n  const handleAction = (row, type) => {\r\n    const types = {\r\n      sleep: () => {\r\n        dialogAction.show({\r\n          title: \"انتخاب صندوق\",\r\n          component: (\r\n            <CashSelector\r\n              chequeId={row.id}\r\n              onSelect={onSelectCash}\r\n              onDismiss={() => DialogActions.hide({ name: \"cash\" })}\r\n            />\r\n          ),\r\n          name: \"cash\",\r\n          size: \"8\",\r\n          confirm: false,\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n      spend: () => {\r\n        dialogAction.show({\r\n          title: \"خرج چک\",\r\n          component: (\r\n            <SpendCheque\r\n              chequeId={row.id}\r\n              onSubmit={onSubmitSpend}\r\n              onDismiss={() => DialogActions.hide({ name: \"spend\" })}\r\n            />\r\n          ),\r\n          name: \"spend\",\r\n          size: \"6\",\r\n          confirm: false,\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n      revert: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از برداشتن این چک مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            onSelectCash({ cashdeskId: 1, chequeId: row.id });\r\n            DialogActions.hide({ name: \"revert\" });\r\n          },\r\n          name: \"revert\",\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n    };\r\n\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const onChangeType = (data, e) => {\r\n    setPaymentType(e);\r\n  };\r\n\r\n  const getActionOptions = (data) => {\r\n    if (data.type === \"INCOME\" && data.status === \"PENDING\") {\r\n      return (\r\n        <TableCell padding=\"none\">\r\n          <TableRowMenu\r\n            options={[\r\n              { id: \"sleep\", title: \"خواباندن به حساب\" },\r\n              { id: \"spend\", title: \"خرج کردن چک\" },\r\n            ]}\r\n            hadleAction={(type) => handleAction(data, type)}\r\n          />\r\n        </TableCell>\r\n      );\r\n    } else if (data.type === \"INCOME\" && data.status === \"SLEEP\") {\r\n      return (\r\n        <TableCell padding=\"none\">\r\n          <TableRowMenu\r\n            options={[{ id: \"revert\", title: \"برداشتن از حساب\" }]}\r\n            hadleAction={(type) => handleAction(data, type)}\r\n          />\r\n        </TableCell>\r\n      );\r\n    } else {\r\n      return <TableCell padding=\"none\" />;\r\n    }\r\n  };\r\n\r\n  const getData = async () => {\r\n    const chequeList = await getChequeRequest.execute();\r\n    setList(chequeList.data);\r\n    setTotal(chequeList.total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize, paymentType]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.CASH_LIST) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getChequeRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title=\"لیست چک ها\"\r\n                    handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                  />\r\n                  <div className={classes.tab}>\r\n                    <Tabs\r\n                      variant=\"fullWidth\"\r\n                      value={paymentType}\r\n                      onChange={onChangeType}\r\n                      indicatorColor=\"primary\"\r\n                      textColor=\"primary\"\r\n                      centered\r\n                    >\r\n                      <Tab\r\n                        icon={\r\n                          <i\r\n                            className={clsx(\r\n                              \"material-icons-round\",\r\n                              classes.allIcon,\r\n                            )}\r\n                          >\r\n                            sync\r\n                          </i>\r\n                        }\r\n                        label=\"کل چک ها\"\r\n                        value=\"ALL\"\r\n                      />\r\n                      <Tab\r\n                        icon={\r\n                          <i\r\n                            className={clsx(\r\n                              \"material-icons-round\",\r\n                              classes.incomeIcon,\r\n                            )}\r\n                          >\r\n                            trending_up\r\n                          </i>\r\n                        }\r\n                        label=\"چک های دریافتی\"\r\n                        value=\"INCOME\"\r\n                      />\r\n                      <Tab\r\n                        icon={\r\n                          <i\r\n                            className={clsx(\r\n                              \"material-icons-round\",\r\n                              classes.outgoIcon,\r\n                            )}\r\n                          >\r\n                            trending_down\r\n                          </i>\r\n                        }\r\n                        label=\"چک های پرداختی\"\r\n                        value=\"OUTCOME\"\r\n                      />\r\n                    </Tabs>\r\n                  </div>\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                            >\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  new Date(\r\n                                    row.chequeDueDate,\r\n                                  ).toLocaleDateString(\"fa-IR\"),\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(row.chequeNumber)}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.bank && (\r\n                                  <img\r\n                                    style={{ width: 40, height: 40 }}\r\n                                    alt={row.bank.name}\r\n                                    src={`${Constant.API_ADDRESS}/${row.bank.logo}`}\r\n                                  />\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  Number(row.price).toLocaleString(),\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">{row.person}</TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.cashDeskName}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                <Chip\r\n                                  label={Constant.PAYMENT_TYPE[row.type]}\r\n                                  className={clsx(\r\n                                    classes.chip,\r\n                                    classes[row.type],\r\n                                  )}\r\n                                />\r\n                              </TableCell>\r\n\r\n                              {getActionOptions(row)}\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getChequeRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={10}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainList;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  RadioGroup,\r\n  Radio,\r\n  FormControlLabel,\r\n} from \"@material-ui/core\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { getQueryString } from \"../../helpers/utils\";\r\nimport CircularProgress from \"../../components/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: 7,\r\n  },\r\n}));\r\n\r\nexport default function MainDetail({ defaultValues }) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const id = getQueryString(\"id\");\r\n  const [detail, setDetail] = useState({});\r\n  const [banks, setBanks] = useState([]);\r\n  const [selectedType, setSelectedType] = React.useState(\"CASH\");\r\n  const [selectedBank, setSelectedBank] = useState(\r\n    defaultValues?.bank.value || 1,\r\n  );\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n\r\n  const addCashRequest = useApi({\r\n    method: \"post\",\r\n    url: `cashdesk`,\r\n  });\r\n  const editCashRequest = useApi({\r\n    method: \"put\",\r\n    url: `cashdesk/${id}`,\r\n  });\r\n  const detailCashRequest = useApi({\r\n    method: \"get\",\r\n    url: `cashdesk/${id}`,\r\n  });\r\n  const getBankRequest = useApi({\r\n    method: \"get\",\r\n    url: `bank`,\r\n  });\r\n\r\n  const handleChangeType = (event) => {\r\n    setSelectedType(event.target.value);\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    if (id) {\r\n      await editCashRequest.execute(data);\r\n    } else {\r\n      await addCashRequest.execute(data);\r\n    }\r\n    setTimeout(() => {\r\n      onReject();\r\n    }, 1000);\r\n  };\r\n\r\n  const onReject = () => {\r\n    history.push(\"/app/cash-list\");\r\n  };\r\n\r\n  const getDetail = async () => {\r\n    const detail = await detailCashRequest.execute();\r\n    setDetail(detail.data);\r\n    setSelectedBank(detail.data.bankId);\r\n    setSelectedType(detail.data.type);\r\n  };\r\n\r\n  const onChangeBank = (e) => {\r\n    setSelectedBank(e.target.value);\r\n  };\r\n\r\n  const getBanks = async () => {\r\n    const result = await getBankRequest.execute();\r\n    setBanks(result.data);\r\n  };\r\n\r\n  const onDone = (data) => {\r\n    const value = {\r\n      ...data,\r\n      bankId: selectedBank,\r\n      type: selectedType,\r\n      isUpdate: !!defaultValues,\r\n    };\r\n    onSubmit(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      getDetail();\r\n    }\r\n    getBanks();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(detail);\r\n  }, [reset, detail]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onDone)}>\r\n      {!detailCashRequest.pending ? (\r\n        <Grid item lg={6} sm={12} className={classes.root}>\r\n          <Paper className={classes.paper}>\r\n            <Typography\r\n              className={classes.title}\r\n              variant=\"h6\"\r\n              id=\"tableTitle\"\r\n              component=\"div\"\r\n            >\r\n              {id ? \"ویرایش صندوق\" : \"افزودن صندوق\"}\r\n            </Typography>\r\n\r\n            <Grid container spacing={3}>\r\n              <Fragment>\r\n                <Grid item lg={12} xs={12}>\r\n                  <RadioGroup\r\n                    aria-label=\"gender\"\r\n                    name=\"gender1\"\r\n                    value={selectedType}\r\n                    onChange={handleChangeType}\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-around\",\r\n                    }}\r\n                  >\r\n                    <FormControlLabel\r\n                      value=\"CASH\"\r\n                      control={<Radio />}\r\n                      label=\"نقدی\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"BANK\"\r\n                      control={<Radio />}\r\n                      label=\"بانکی\"\r\n                    />\r\n                  </RadioGroup>\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"نام\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.name}\r\n                          helperText={errors.name ? errors.name.message : \"\"}\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                    name=\"name\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"موجودی \"\r\n                          type=\"number\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.amount}\r\n                          helperText={\r\n                            errors.amount ? errors.amount.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                    name=\"amount\"\r\n                  />\r\n                </Grid>\r\n                {selectedType === \"BANK\" && (\r\n                  <>\r\n                    <Grid item lg={6} xs={12}>\r\n                      <TextField\r\n                        select\r\n                        label=\"بانک\"\r\n                        onChange={onChangeBank}\r\n                        value={selectedBank}\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        name=\"bank\"\r\n                        SelectProps={{\r\n                          classes: {\r\n                            select: classes.rootSelect,\r\n                          },\r\n                        }}\r\n                      >\r\n                        {banks.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            <img\r\n                              src={`${Constant.API_ADDRESS}/${option.logo}`}\r\n                              alt={option.label}\r\n                              style={{\r\n                                width: 25,\r\n                                height: 25,\r\n                                borderRadius: \"50%\",\r\n                                marginLeft: 10,\r\n                              }}\r\n                            />\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </TextField>\r\n                    </Grid>\r\n                    <Grid item lg={6} xs={12}>\r\n                      <Controller\r\n                        control={control}\r\n                        render={({ onChange, value, name }) => {\r\n                          return (\r\n                            <TextField\r\n                              fullWidth\r\n                              value={value}\r\n                              size=\"small\"\r\n                              name={name}\r\n                              label=\"شماره کارت\"\r\n                              variant=\"outlined\"\r\n                              onChange={onChange}\r\n                              error={!!errors.accountCardNumber}\r\n                              helperText={\r\n                                errors.accountCardNumber\r\n                                  ? errors.accountCardNumber.message\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          );\r\n                        }}\r\n                        rules={{\r\n                          minLength: {\r\n                            value: 16,\r\n                            message: Constant.VALIDATION.CARD_NUMBER,\r\n                          },\r\n                          maxLength: {\r\n                            value: 16,\r\n                            message: Constant.VALIDATION.CARD_NUMBER,\r\n                          },\r\n                        }}\r\n                        name=\"accountCardNumber\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item lg={6} xs={12}>\r\n                      <Controller\r\n                        control={control}\r\n                        render={({ onChange, value, name }) => {\r\n                          return (\r\n                            <TextField\r\n                              fullWidth\r\n                              value={value}\r\n                              size=\"small\"\r\n                              name={name}\r\n                              label=\"شماره حساب\"\r\n                              variant=\"outlined\"\r\n                              onChange={onChange}\r\n                              error={!!errors.accountNumber}\r\n                              helperText={\r\n                                errors.accountNumber\r\n                                  ? errors.accountNumber.message\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          );\r\n                        }}\r\n                        name=\"accountNumber\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item lg={6} xs={12}>\r\n                      <Controller\r\n                        control={control}\r\n                        render={({ onChange, value, name }) => {\r\n                          return (\r\n                            <TextField\r\n                              fullWidth\r\n                              value={value}\r\n                              size=\"small\"\r\n                              name={name}\r\n                              label=\"شماره شبا\"\r\n                              variant=\"outlined\"\r\n                              onChange={onChange}\r\n                              error={!!errors.accountShaba}\r\n                              helperText={\r\n                                errors.accountShaba\r\n                                  ? errors.accountShaba.message\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          );\r\n                        }}\r\n                        name=\"accountShaba\"\r\n                      />\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n                <Grid item xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          multiline\r\n                          variant=\"outlined\"\r\n                          label=\"توضیحات\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.description}\r\n                          helperText={\r\n                            errors.description ? errors.description.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    name=\"description\"\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                    تایید\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={onReject}\r\n                  >\r\n                    بازگشت\r\n                  </Button>\r\n                </Grid>\r\n              </Fragment>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      ) : (\r\n        <CircularProgress />\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, TextField, MenuItem, Button, Divider } from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n}));\r\nconst Filter = ({ onFilter }) => {\r\n  const classes = useStyles();\r\n  const [selectedPerson, setSelectedPerson] = useState();\r\n  const [selectedFromDate, handleFromDateChange] = useState(moment());\r\n  const [selectedToDate, handleToDateChange] = useState(moment());\r\n  const [customers, setCustomers] = useState([]);\r\n\r\n  const getCustomersRequest = useApi({\r\n    method: \"get\",\r\n    url: \"customer\",\r\n  });\r\n\r\n  const onChangePerson = (e, value) => {\r\n    setSelectedPerson(value);\r\n  };\r\n\r\n  const onChnageDate = (e, type) => {\r\n    if (type === \"from\") {\r\n      handleFromDateChange(e);\r\n    } else {\r\n      handleToDateChange(e);\r\n    }\r\n  };\r\n\r\n  const getCustomers = async () => {\r\n    const customerList = await getCustomersRequest.execute();\r\n    setCustomers(customerList.data);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (typeof onFilter === \"function\") {\r\n      onFilter(\r\n        `{customerId:${\r\n          selectedPerson ? selectedPerson.id : null\r\n        },from:${selectedFromDate._d.toISOString()},to:${selectedToDate._d.toISOString()}}`,\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCustomers();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container spacing={3} alignItems=\"center\" style={{ padding: 10 }}>\r\n      <Grid item lg={3} xs={12} style={{ display: \"flex\" }}>\r\n        <Autocomplete\r\n          id=\"combo-box-demo\"\r\n          onChange={onChangePerson}\r\n          options={customers}\r\n          getOptionLabel={(option) => `${option.firstName} ${option.lastName}`}\r\n          fullWidth\r\n          size=\"small\"\r\n          renderInput={(params) => (\r\n            <TextField {...params} label=\"انتخاب شخص\" variant=\"outlined\" />\r\n          )}\r\n        />\r\n      </Grid>\r\n      <Grid item lg={3} xs={12} className={classes.datePicker}>\r\n        <DatePicker\r\n          autoOk\r\n          name=\"date\"\r\n          label=\"از تاریخ\"\r\n          inputVariant=\"outlined\"\r\n          okLabel=\"تأیید\"\r\n          cancelLabel=\"لغو\"\r\n          labelFunc={(date) => (date ? date.format(\"jYYYY/jMM/jDD\") : \"\")}\r\n          value={selectedFromDate}\r\n          onChange={(e) => onChnageDate(e, \"from\")}\r\n          style={{ width: \"100%\" }}\r\n        />\r\n      </Grid>\r\n      <Grid item lg={3} xs={12} className={classes.datePicker}>\r\n        <DatePicker\r\n          autoOk\r\n          name=\"date\"\r\n          label=\"تا تاریخ\"\r\n          inputVariant=\"outlined\"\r\n          okLabel=\"تأیید\"\r\n          cancelLabel=\"لغو\"\r\n          labelFunc={(date) => (date ? date.format(\"jYYYY/jMM/jDD\") : \"\")}\r\n          value={selectedToDate}\r\n          onChange={(e) => onChnageDate(e, \"to\")}\r\n          style={{ width: \"100%\" }}\r\n        />\r\n      </Grid>\r\n      <Grid item lg={3} xs={12}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n          تایید\r\n        </Button>\r\n      </Grid>\r\n      <Divider style={{ width: \"100%\" }} />\r\n    </Grid>\r\n  );\r\n};\r\nexport default Filter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Tabs,\r\n  Tab,\r\n  Chip,\r\n} from \"@material-ui/core\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport {\r\n  convertParamsToQueryString,\r\n  persianNumber,\r\n  hasPermission,\r\n} from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport clsx from \"clsx\";\r\nimport { getQueryString } from \"../../helpers/utils\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\nimport FilterComponent from \"./filter\";\r\n\r\nconst headCells = [\r\n  { id: \"personType\" },\r\n  {\r\n    id: \"person\",\r\n    label: \"نام شخص\",\r\n  },\r\n  {\r\n    id: \"date\",\r\n    label: \"تاریخ\",\r\n  },\r\n  { id: \"price\", label: \"مبلغ\" },\r\n  {\r\n    id: \"typr\",\r\n    label: \"نوع\",\r\n  },\r\n\r\n  // { id: \"action\" },\r\n];\r\n\r\nconst MainList = () => {\r\n  const paymentType = getQueryString(\"type\");\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"date\");\r\n  const [search, setSearch] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [type, setType] = useState(paymentType);\r\n  const [filter, setFilter] = useState();\r\n  const history = useHistory();\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onAdd = () => {\r\n    history.push(`/app/payment-detail?type=${type}`);\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n  };\r\n\r\n  const getPaymentRequest = useApi({\r\n    method: \"get\",\r\n    url: decodeURIComponent(\r\n      `payment?${convertParamsToQueryString({\r\n        page,\r\n        order,\r\n        orderBy,\r\n        pageSize,\r\n        search,\r\n        type,\r\n        filter,\r\n      })}`,\r\n    ),\r\n  });\r\n\r\n  const deleteUseRequest = useApi({\r\n    method: \"delete\",\r\n    url: `payment`,\r\n  });\r\n\r\n  const handleAction = (row, type) => {\r\n    const types = {\r\n      edit: () => {\r\n        history.push(`/app/payment-detail?type=${row.type}&id=${row.id}`);\r\n      },\r\n      delete: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            await deleteUseRequest.execute(null, row.id);\r\n            setList(list.filter((item) => item.id !== row.id));\r\n            DialogActions.hide();\r\n          },\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const onChangeType = (e, value) => {\r\n    setType(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onFilter = (data) => {\r\n    setFilter(data);\r\n    setPage(0);\r\n  };\r\n\r\n  const getTableTitle = () => {\r\n    if (type === \"INCOME\") {\r\n      return \"لیست دریافتی ها\";\r\n    } else if (type === \"OUTCOME\") {\r\n      return \"لیست پرداختی ها\";\r\n    }\r\n    return \"لیست دریافتی ها و پرداختی ها\";\r\n  };\r\n\r\n  const getData = async () => {\r\n    const paymentList = await getPaymentRequest.execute();\r\n    setList(paymentList.data);\r\n    setTotal(paymentList.total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize, type, filter]);\r\n\r\n  useEffect(() => {\r\n    setType(paymentType);\r\n  }, [paymentType]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.CASH_LIST) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getPaymentRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title={getTableTitle()}\r\n                    onAdd={type !== \"ALL\" && onAdd}\r\n                    handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                    FilterComponent={<FilterComponent onFilter={onFilter} />}\r\n                  />\r\n                  <div className={classes.tab}>\r\n                    <Tabs\r\n                      value={type}\r\n                      onChange={onChangeType}\r\n                      indicatorColor=\"primary\"\r\n                      textColor=\"primary\"\r\n                      centered\r\n                      variant=\"fullWidth\"\r\n                    >\r\n                      <Tab\r\n                        icon={\r\n                          <i\r\n                            className={clsx(\r\n                              \"material-icons-round\",\r\n                              classes.allIcon,\r\n                            )}\r\n                          >\r\n                            sync\r\n                          </i>\r\n                        }\r\n                        label=\"کل تراکنش ها\"\r\n                        value=\"ALL\"\r\n                      />\r\n                      <Tab\r\n                        icon={\r\n                          <i\r\n                            className={clsx(\r\n                              \"material-icons-round\",\r\n                              classes.incomeIcon,\r\n                            )}\r\n                          >\r\n                            trending_up\r\n                          </i>\r\n                        }\r\n                        label=\"دریافتی ها\"\r\n                        value=\"INCOME\"\r\n                      />\r\n                      <Tab\r\n                        icon={\r\n                          <i\r\n                            className={clsx(\r\n                              \"material-icons-round\",\r\n                              classes.outgoIcon,\r\n                            )}\r\n                          >\r\n                            trending_down\r\n                          </i>\r\n                        }\r\n                        label=\"پرداختی ها\"\r\n                        value=\"OUTCOME\"\r\n                      />\r\n                    </Tabs>\r\n                  </div>\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                            >\r\n                              <TableCell padding=\"none\">\r\n                                {row.paymentname}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">{row.person}</TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  new Date(row.date).toLocaleDateString(\r\n                                    \"fa-IR\",\r\n                                  ),\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  Number(row.price).toLocaleString(),\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                <Chip\r\n                                  label={Constant.PAYMENT_TYPE[row.type]}\r\n                                  className={clsx(\r\n                                    classes.type,\r\n                                    classes[row.type],\r\n                                  )}\r\n                                />\r\n                              </TableCell>\r\n\r\n                              {/* <TableCell padding=\"none\">\r\n                                <TableRowMenu\r\n                                  options={[\r\n                                    { id: \"edit\", title: \"ویرایش\" },\r\n                                    { id: \"delete\", title: \"حذف\" },\r\n                                  ]}\r\n                                  hadleAction={(type) =>\r\n                                    handleAction(row, type)\r\n                                  }\r\n                                />\r\n                              </TableCell> */}\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getPaymentRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default MainList;\r\n","import React, { Fragment, useEffect, useRef, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  FormControlLabel,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { getQueryString } from \"../../helpers/utils\";\r\nimport CircularProgress from \"../../components/CircularProgress\";\r\nimport PersonSelector from \"./personSelector\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport dialogAction from \"../../redux/actions/dialogAction\";\r\nimport PrePayment from \"./prePayment\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingBottom: 7,\r\n    paddingTop: 7,\r\n  },\r\n}));\r\n\r\nexport default function MainDetail({ defaultValues }) {\r\n  const paymentRef = useRef(null);\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const id = getQueryString(\"id\");\r\n\r\n  const paymentType = getQueryString(\"type\");\r\n  const loan = getQueryString(\"loan\");\r\n  const customerId = getQueryString(\"customerId\");\r\n  const [detail, setDetail] = useState({});\r\n  const [isLoan, setIsLoan] = useState(loan);\r\n  const [selectedPerson, setSelectedPerson] = useState();\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n  const [selectedDate, setSelectedDate] = useState(moment());\r\n  const [payments, setPayments] = useState({\r\n    cashes: [],\r\n    banks: [],\r\n    cheques: [],\r\n  });\r\n  const addPaymentRequest = useApi({\r\n    method: \"post\",\r\n    url: `payment`,\r\n  });\r\n  const editPaymentRequest = useApi({\r\n    method: \"put\",\r\n    url: `payment/${id}`,\r\n  });\r\n  const detailPaymentRequest = useApi({\r\n    method: \"get\",\r\n    url: `payment/${id}`,\r\n  });\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const onSelectPerson = (person) => {\r\n    setSelectedPerson(person);\r\n    onDismissPerson();\r\n  };\r\n\r\n  const onDismissPerson = () => {\r\n    dialogAction.hide({ name: \"person\" });\r\n  };\r\n\r\n  const onShowDialog = () => {\r\n    dialogAction.show({\r\n      title: \"انتخاب شخص\",\r\n      component: (\r\n        <PersonSelector\r\n          onSelect={onSelectPerson}\r\n          onDismiss={onDismissPerson}\r\n          filter={Constant.PERSON_TYPE.PERSON}\r\n        />\r\n      ),\r\n      name: \"person\",\r\n      size: \"8\",\r\n      confirm: false,\r\n      disableCloseButton: false,\r\n    });\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    console.log(data);\r\n    const value = {\r\n      type: paymentType,\r\n      personType: selectedPerson.personType,\r\n      personId: selectedPerson.value,\r\n      description: data.description,\r\n      date: selectedDate._d,\r\n      isLoan,\r\n      ...paymentRef.current,\r\n    };\r\n    if (id) {\r\n      await editPaymentRequest.execute(value);\r\n    } else {\r\n      await addPaymentRequest.execute(value);\r\n    }\r\n    setTimeout(() => {\r\n      onReject();\r\n    }, 1000);\r\n  };\r\n\r\n  const onReject = () => {\r\n    if (customerId) {\r\n      return history.push(`/app/customer-transaction?id=${customerId}`);\r\n    }\r\n    history.push(\"/app/payment-list?type=ALL\");\r\n  };\r\n\r\n  const getDetail = async () => {\r\n    const detail = await detailPaymentRequest.execute();\r\n    setDetail(detail.data);\r\n    const { person, date, banks, cashes, cheques } = detail.data;\r\n    setSelectedPerson(person);\r\n    setSelectedDate(date);\r\n    setPayments({ banks, cashes, cheques });\r\n    setIsLoan(detail.data.isLoan);\r\n  };\r\n\r\n  const getDetailTitle = () => {\r\n    if (id) {\r\n      if (paymentType === \"INCOME\") {\r\n        return \"ویرایش دریافتی\";\r\n      }\r\n      return \"ویرایش پرداختی\";\r\n    } else {\r\n      if (paymentType === \"INCOME\") {\r\n        return \"افزودن دریافتی\";\r\n      }\r\n      return \"افزودن پرداختی\";\r\n    }\r\n  };\r\n\r\n  const getPersonName = () => {\r\n    if (selectedPerson) {\r\n      if (selectedPerson.label) {\r\n        return `${selectedPerson.label}`;\r\n      }\r\n      return `${selectedPerson.firstName} ${selectedPerson.lastName}`;\r\n    }\r\n    return \"\";\r\n  };\r\n  const handleChangeIsloan = (e) => {\r\n    setIsLoan(e.target.checked);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      getDetail();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(detail);\r\n  }, [reset, detail]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      {!detailPaymentRequest.pending ? (\r\n        <Grid item lg={8} sm={12} className={classes.root}>\r\n          <Paper className={classes.paper}>\r\n            <Typography\r\n              className={classes.title}\r\n              variant=\"h6\"\r\n              id=\"tableTitle\"\r\n              component=\"div\"\r\n            >\r\n              {getDetailTitle()}\r\n            </Typography>\r\n\r\n            <Grid container spacing={3}>\r\n              <Fragment>\r\n                <Grid item lg={6} xs={12} style={{ display: \"flex\" }}>\r\n                  <Button\r\n                    style={{ marginLeft: 10, width: \"30%\" }}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={onShowDialog}\r\n                  >\r\n                    انتخاب شخص\r\n                  </Button>\r\n\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    name={\"personName\"}\r\n                    value={getPersonName()}\r\n                    disabled\r\n                    style={{ width: \"70%\" }}\r\n                    size=\"small\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12} className={classes.datePicker}>\r\n                  <DatePicker\r\n                    autoOk\r\n                    name=\"date\"\r\n                    label=\"تاریخ ثبت\"\r\n                    inputVariant=\"outlined\"\r\n                    okLabel=\"تأیید\"\r\n                    cancelLabel=\"لغو\"\r\n                    labelFunc={(date) =>\r\n                      date ? date.format(\"jYYYY/jMM/jDD\") : \"\"\r\n                    }\r\n                    value={selectedDate}\r\n                    onChange={handleDateChange}\r\n                    style={{ width: \"100%\" }}\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        checked={isLoan}\r\n                        onChange={handleChangeIsloan}\r\n                        // name={item.value}\r\n                        color=\"primary\"\r\n                      />\r\n                    }\r\n                    label={\r\n                      paymentType === \"INCOME\" ? \"پرداخت قسط\" : \"اعطای وام\"\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"بابت\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.description}\r\n                          helperText={\r\n                            errors.description ? errors.description.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    name=\"description\"\r\n                  />\r\n                </Grid>\r\n                {((id && payments) || !id) && (\r\n                  <PrePayment\r\n                    defaultValues={payments}\r\n                    type={paymentType}\r\n                    ref={paymentRef}\r\n                  />\r\n                )}\r\n\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                    تایید\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={onReject}\r\n                  >\r\n                    بازگشت\r\n                  </Button>\r\n                </Grid>\r\n              </Fragment>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      ) : (\r\n        <CircularProgress />\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n}));\r\n","import React from \"react\";\r\n\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"amount\",\r\n    label: \"موجودی\",\r\n  },\r\n  { id: \"unit\", label: \"واحد\" },\r\n  {\r\n    id: \"depot\",\r\n    label: \"انبار\",\r\n  },\r\n];\r\n\r\nexport default function MainDetail({ data, onSubmit }) {\r\n  return (\r\n    <Grid container spacing={3} alignItems=\"center\">\r\n      {!!data.length && (\r\n        <Grid item xs={12}>\r\n          <TableContainer style={{ padding: \"0 10px\" }}>\r\n            <Table size={\"medium\"} style={{ paddingRight: 10 }}>\r\n              <TableHeader headCells={headCells} />\r\n\r\n              <TableBody>\r\n                {data.map((row) => {\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      tabIndex={-1}\r\n                      key={row.id}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableCell padding=\"none\">{row.stock}</TableCell>\r\n                      <TableCell padding=\"none\">{row.unit}</TableCell>\r\n                      <TableCell padding=\"none\">{row.depot}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Grid>\r\n      )}\r\n      <Grid item xs={12}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n          بازگشت\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  IconButton,\r\n  Collapse,\r\n  Typography,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport PrePayment from \"../payment/prePayment\";\r\nimport unitAction from \"../../redux/actions/unitAction\";\r\nimport { getQueryString, persianNumber } from \"../../helpers/utils\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n  deleteIcon: {\r\n    color: theme.palette.error.main,\r\n  },\r\n  formControl: {\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nexport default function MainDetail() {\r\n  const productId = getQueryString(\"id\");\r\n  const productName = getQueryString(\"productName\");\r\n  const unitBaseId = getQueryString(\"unitBaseId\");\r\n  const paymentRef = useRef(null);\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [units, setUnits] = useState([]);\r\n  const [selectedUnit, setSelectedUnit] = useState(units[0]?.value);\r\n  const [selectedSource, setSelectedSource] = useState(5);\r\n  const [selectedDestination, setSelectedDestination] = useState(5);\r\n  const [amount, setAmount] = useState();\r\n  const [selectedDriver, setSelectedDriver] = useState();\r\n  const [description, setDescription] = useState();\r\n  const [depotPicker, setDepotPicker] = useState([]);\r\n  const [driverPicker, setDriverPicker] = useState([]);\r\n  const [isAddDriver, setIsAddDriver] = useState(false);\r\n  const [category, setCategory] = useState([]);\r\n  const [categoryId, setDriverCategory] = useState(1);\r\n  const [newDriver, setNewDriver] = useState();\r\n  const [showPerUnit, setShowPerUnit] = useState(false);\r\n  const [perUnit, setPerUnit] = useState();\r\n  const [payments, setPayments] = useState({\r\n    cashes: [],\r\n    banks: [],\r\n    cheques: [],\r\n  });\r\n\r\n  const getDepotRequest = useApi({\r\n    method: \"get\",\r\n    url: `depot/picker`,\r\n  });\r\n\r\n  const getDriversRequest = useApi({\r\n    method: \"get\",\r\n    url: \"driver\",\r\n  });\r\n\r\n  const categoryIdRequest = useApi({\r\n    method: \"get\",\r\n    url: `driver/category`,\r\n  });\r\n\r\n  const transferRequest = useApi({\r\n    method: \"post\",\r\n    url: `depot/transfer`,\r\n  });\r\n\r\n  const addDriverRequest = useApi({\r\n    method: \"post\",\r\n    url: `driver`,\r\n  });\r\n\r\n  const addTransferPaymentRequest = useApi({\r\n    method: \"post\",\r\n    url: `payment`,\r\n  });\r\n\r\n  const getDriverCategory = async () => {\r\n    const detail = await categoryIdRequest.execute();\r\n    setCategory(detail.data);\r\n  };\r\n\r\n  const onSubmitTransfer = async () => {\r\n    const data = {\r\n      sourceDepotId: selectedSource,\r\n      destinationDepotId: selectedDestination,\r\n      productId,\r\n      amount,\r\n      perUnit,\r\n      unit: selectedUnit,\r\n      description,\r\n      isAddDriver,\r\n      newDriver,\r\n    };\r\n    let newAddedDriver;\r\n    if (!selectedDriver) {\r\n      newAddedDriver = await addDriverRequest.execute(data.newDriver);\r\n      data.driverId = newAddedDriver.id;\r\n      await transferRequest.execute(data);\r\n    } else {\r\n      data.driverId = selectedDriver.id;\r\n      await transferRequest.execute(data);\r\n    }\r\n\r\n    const transferPayments = {\r\n      ...paymentRef.current,\r\n      date: new Date(),\r\n      personId: selectedDriver ? selectedDriver.id : newAddedDriver.id,\r\n      personType: \"DRIVER\",\r\n      type: \"OUTCOME\",\r\n      description: `بابت انتقال بین انبارها`,\r\n    };\r\n    await addTransferPaymentRequest.execute(transferPayments);\r\n    setTimeout(() => {\r\n      onDismiss();\r\n    }, 1000);\r\n  };\r\n\r\n  const getDrivers = async () => {\r\n    const customerList = await getDriversRequest.execute();\r\n    setDriverPicker(customerList.data);\r\n  };\r\n\r\n  const onChange = (e, type) => {\r\n    const types = {\r\n      source: () => {\r\n        setSelectedSource(e.target.value);\r\n      },\r\n      destination: () => {\r\n        setSelectedDestination(e.target.value);\r\n      },\r\n      amount: () => {\r\n        setAmount(e.target.value);\r\n      },\r\n      description: () => {\r\n        setDescription(e.target.value);\r\n      },\r\n      unit: () => {\r\n        setSelectedUnit(e.target.value);\r\n        const targetUnit = units.filter(\r\n          (item) => item.value === e.target.value,\r\n        )[0];\r\n        setShowPerUnit(targetUnit.perUnit);\r\n      },\r\n      firstName: () => {\r\n        setNewDriver({ ...newDriver, firstName: e.target.value });\r\n      },\r\n      lastName: () => {\r\n        setNewDriver({ ...newDriver, lastName: e.target.value });\r\n      },\r\n      carName: () => {\r\n        setNewDriver({ ...newDriver, carName: e.target.value });\r\n      },\r\n      carPlaque: () => {\r\n        setNewDriver({ ...newDriver, carPlaque: e.target.value });\r\n      },\r\n      categoryId: () => {\r\n        setNewDriver({ ...newDriver, categoryId: e.target.value });\r\n      },\r\n      perUnit: () => {\r\n        setPerUnit(e.target.value);\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      return types[type]();\r\n    }\r\n  };\r\n\r\n  const onDismiss = () => {\r\n    history.push(\"/app/product-list\");\r\n  };\r\n\r\n  const onChangeDriver = (e, value) => {\r\n    setSelectedDriver(value);\r\n  };\r\n\r\n  const getDepotPicker = async () => {\r\n    const result = await getDepotRequest.execute();\r\n    setDepotPicker(result.data);\r\n  };\r\n\r\n  const onAddDriver = () => {\r\n    setIsAddDriver(!isAddDriver);\r\n  };\r\n\r\n  const getUnits = () => {\r\n    const allUnits = unitAction\r\n      .getProductUnit()\r\n      .filter((item) => item.value === unitBaseId)[0];\r\n    if (allUnits) {\r\n      setUnits(allUnits.children);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUnits();\r\n    getDriverCategory();\r\n    getDrivers();\r\n    getDepotPicker();\r\n  }, []);\r\n\r\n  return (\r\n    <form>\r\n      <Grid item lg={6} sm={12} className={classes.root}>\r\n        <Paper className={classes.paper}>\r\n          <Typography\r\n            className={classes.title}\r\n            variant=\"h6\"\r\n            id=\"tableTitle\"\r\n            component=\"div\"\r\n          >\r\n            {`انتقال ${productName} بین انبار ها`}\r\n          </Typography>\r\n          <Grid container spacing={3}>\r\n            <Grid item sm={6} xs={12}>\r\n              <TextField\r\n                select\r\n                label=\"انبار مبدا\"\r\n                value={selectedSource}\r\n                onChange={(e) => onChange(e, \"source\")}\r\n                variant=\"outlined\"\r\n                name=\"depot\"\r\n                fullWidth\r\n                size=\"small\"\r\n              >\r\n                {depotPicker.map((option) => (\r\n                  <MenuItem key={option.value} value={option.value}>\r\n                    {option.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n            <Grid item sm={6} xs={12}>\r\n              <TextField\r\n                select\r\n                label=\"انبار مقصد\"\r\n                value={selectedDestination}\r\n                onChange={(e) => onChange(e, \"destination\")}\r\n                variant=\"outlined\"\r\n                name=\"depot\"\r\n                fullWidth\r\n                size=\"small\"\r\n              >\r\n                {depotPicker.map((option) => (\r\n                  <MenuItem key={option.value} value={option.value}>\r\n                    {option.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n\r\n            <Grid item sm={6} xs={12}>\r\n              <TextField\r\n                select\r\n                label=\"واحد\"\r\n                value={selectedUnit}\r\n                onChange={(e) => onChange(e, \"unit\")}\r\n                variant=\"outlined\"\r\n                name=\"unit\"\r\n                fullWidth\r\n                size=\"small\"\r\n              >\r\n                {units.map((option) => (\r\n                  <MenuItem key={option.value} value={option.value}>\r\n                    {option.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n\r\n            <Grid item sm={6} xs={12}>\r\n              <TextField\r\n                type=\"number\"\r\n                variant=\"outlined\"\r\n                label=\"مقدار\"\r\n                name={\"amount\"}\r\n                onChange={(e) => onChange(e, \"amount\")}\r\n                value={amount}\r\n                fullWidth\r\n                size=\"small\"\r\n              />\r\n            </Grid>\r\n            {showPerUnit && (\r\n              <Grid item sm={6} xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"مقدار در واحد\"\r\n                  name={\"perUnit\"}\r\n                  onChange={(e) => onChange(e, \"perUnit\")}\r\n                  value={perUnit}\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  type=\"number\"\r\n                />\r\n              </Grid>\r\n            )}\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                multiline\r\n                variant=\"outlined\"\r\n                label=\"توضیحات\"\r\n                name={\"description\"}\r\n                onChange={(e) => onChange(e, \"description\")}\r\n                value={description}\r\n                fullWidth\r\n                size=\"small\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              sm={6}\r\n              xs={12}\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                marginBottom: 20,\r\n              }}\r\n            >\r\n              <Autocomplete\r\n                id=\"combo-box-demo\"\r\n                onChange={onChangeDriver}\r\n                options={driverPicker}\r\n                getOptionLabel={(option) =>\r\n                  `${option.firstName} ${option.lastName}`\r\n                }\r\n                fullWidth\r\n                size=\"small\"\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"انتخاب راننده\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                )}\r\n              />\r\n              <IconButton\r\n                color=\"primary\"\r\n                style={{ marginRight: 10 }}\r\n                onClick={onAddDriver}\r\n              >\r\n                <i className=\"material-icons-round\">\r\n                  {isAddDriver ? \"clear\" : \"add\"}\r\n                </i>\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n          <Collapse in={isAddDriver}>\r\n            <Grid container spacing={3}>\r\n              <Grid item sm={6} xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"نام راننده\"\r\n                  onChange={(e) => onChange(e, \"firstName\")}\r\n                  value={newDriver?.firstName}\r\n                  fullWidth\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n              <Grid item sm={6} xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"نام خانوادگی راننده\"\r\n                  onChange={(e) => onChange(e, \"lastName\")}\r\n                  value={newDriver?.lastName}\r\n                  fullWidth\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item sm={6} xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"نام ماشین\"\r\n                  onChange={(e) => onChange(e, \"carName\")}\r\n                  value={newDriver?.carName}\r\n                  fullWidth\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item sm={6} xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"پلاک\"\r\n                  onChange={(e) => onChange(e, \"carPlaque\")}\r\n                  value={newDriver?.carPlaque}\r\n                  fullWidth\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item sm={6} xs={12}>\r\n                {!!category.length && categoryId && (\r\n                  <TextField\r\n                    select\r\n                    label=\"دسته بندی\"\r\n                    value={categoryId}\r\n                    onChange={(e) => onChange(e, \"categoryId\")}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    size=\"small\"\r\n                  >\r\n                    {category.map((option) => (\r\n                      <MenuItem key={option.value} value={option.value}>\r\n                        {option.label}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </TextField>\r\n                )}\r\n              </Grid>\r\n\r\n              <PrePayment\r\n                type={\"OUTCOME\"}\r\n                defaultValues={payments}\r\n                ref={paymentRef}\r\n              />\r\n            </Grid>\r\n          </Collapse>\r\n\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              marginTop: 30,\r\n            }}\r\n          >\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={onSubmitTransfer}\r\n            >\r\n              تایید\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n              بازگشت\r\n            </Button>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n    </form>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { convertParamsToQueryString, hasPermission } from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport AmountBrif from \"./amountBrif\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\nimport Transform from \"./transfer\";\r\nimport unitAction from \"../../redux/actions/unitAction\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    label: \"نام کالا\",\r\n  },\r\n  {\r\n    id: \"category\",\r\n    label: \"دسته بندی\",\r\n  },\r\n\r\n  {\r\n    id: \"DefaultUnit\",\r\n    label: \"واحد پیش فرض\",\r\n  },\r\n  { id: \"unit\", label: \" واحد شمارشی\" },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function MainList() {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"name\");\r\n  const [search, setSearch] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const history = useHistory();\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onAdd = () => {\r\n    history.push(\"/app/product-detail\");\r\n  };\r\n\r\n  const getProductRequest = useApi({\r\n    method: \"get\",\r\n    url: `product?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n    })}`,\r\n  });\r\n\r\n  const deleteUseRequest = useApi({\r\n    method: \"delete\",\r\n    url: `product`,\r\n  });\r\n\r\n  const transferRequest = useApi({\r\n    method: \"post\",\r\n    url: `depot/transfer`,\r\n  });\r\n\r\n  const addDriverRequest = useApi({\r\n    method: \"post\",\r\n    url: `driver`,\r\n  });\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onSubmitTransfer = async (data) => {\r\n    if (data.isAddDriver) {\r\n      await addDriverRequest.execute(data.newDriver);\r\n      await transferRequest.execute(data);\r\n    } else {\r\n      await transferRequest.execute(data);\r\n    }\r\n\r\n    // const transferPayments = {\r\n    //   ...paymentRef.current,\r\n    //   invoiceId: response.id,\r\n    //   date: selectedDate._d,\r\n    //   personId: selectedPerson ? selectedPerson.id : 1,\r\n    //   personType: \"CUSTOMER\",\r\n    //   type: invoiceType === \"SELL\" ? \"INCOME\" : \"OUTCOME\",\r\n    //   description: `بابت فاکتور به شماره  ${response.id}`,\r\n    // };\r\n    // addPaymentRequest.execute(transferPayments);\r\n\r\n    await getData();\r\n    // DialogActions.hide({});\r\n  };\r\n\r\n  const handleAction = (row, type) => {\r\n    const { id } = row;\r\n    const types = {\r\n      edit: () => {\r\n        history.push(`/app/product-detail?id=${id}`);\r\n      },\r\n      delete: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            await deleteUseRequest.execute(null, id);\r\n            setList(list.filter((item) => item.id !== id));\r\n            DialogActions.hide({ name: \"delete\" });\r\n          },\r\n          name: \"delete\",\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n      amount: () => {\r\n        DialogActions.show({\r\n          title: \"موجودی در انبار ها\",\r\n          component: (\r\n            <AmountBrif\r\n              onSubmit={() => {\r\n                DialogActions.hide({ name: \"amount\" });\r\n              }}\r\n              data={row.stocks}\r\n            />\r\n          ),\r\n          name: \"amount\",\r\n          size: \"4\",\r\n          confirm: false,\r\n          disableCloseButton: true,\r\n        });\r\n      },\r\n      transaction: () => {},\r\n\r\n      transfer: () => {\r\n        history.push(\r\n          `/app/product-transfer?id=${id}&productName=${row.name}&unitBaseId=${row.unitBaseId}`,\r\n        );\r\n\r\n        //   let units;\r\n        //   const allUnits = unitAction\r\n        //     .getProductUnit()\r\n        //     .filter((item) => item.value === row.unitBaseId)[0];\r\n        //   if (allUnits) {\r\n        //     units = allUnits.children;\r\n        //   }\r\n        //   DialogActions.show({\r\n        //     title: \"انتقال بین انبار ها\",\r\n        //     component: (\r\n        //       <Transform\r\n        //         onDismiss={() => {\r\n        //           DialogActions.hide();\r\n        //         }}\r\n        //         onSubmit={onSubmitTransfer}\r\n        //         productId={row.id}\r\n        //         units={units}\r\n        //       />\r\n        //     ),\r\n        //     size: \"4\",\r\n        //     confirm: false,\r\n        //     disableCloseButton: true,\r\n        //   });\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const getData = async () => {\r\n    const productList = await getProductRequest.execute();\r\n    setList(productList.data);\r\n    setTotal(productList.total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, pageSize, search]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.CASH_LIST) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getProductRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title=\"لیست کالا ها\"\r\n                    onAdd={onAdd}\r\n                    handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                  />\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                            >\r\n                              <TableCell padding=\"none\">{row.name}</TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.categories.join(\",\")}\r\n                              </TableCell>\r\n\r\n                              <TableCell padding=\"none\">\r\n                                {row.defaultUnit}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.unitBase}\r\n                              </TableCell>\r\n\r\n                              <TableCell padding=\"none\">\r\n                                <TableRowMenu\r\n                                  options={[\r\n                                    { id: \"amount\", title: \"موجودی ها\" },\r\n                                    // { id: \"transaction\", title: \"تراکنش ها\" },\r\n                                    {\r\n                                      id: \"transfer\",\r\n                                      title: \"انتقال بین انبار\",\r\n                                    },\r\n                                    { id: \"edit\", title: \"ویرایش\" },\r\n                                    // { id: \"delete\", title: \"حذف\" },\r\n                                  ]}\r\n                                  hadleAction={(type) =>\r\n                                    handleAction(row, type)\r\n                                  }\r\n                                />\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getProductRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Grid, MenuItem } from \"@material-ui/core\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport Constant from \"../../helpers/constant\";\r\n\r\nconst Account = ({ onSubmit, onDismiss, defaultValues, units }) => {\r\n  const [depotPicker, setDepotPicker] = useState([]);\r\n  const [seletedUnit, setSelectedUnit] = useState(\r\n    defaultValues ? defaultValues.unit.value : units[0].value,\r\n  );\r\n  const [seletedDepot, setSelectedDepot] = useState(1);\r\n  const [showPerUnit, setShowPerUnit] = useState(\r\n    defaultValues ? !!defaultValues.perUnit : false,\r\n  );\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n\r\n  const getDepotRequest = useApi({\r\n    method: \"get\",\r\n    url: `depot/picker`,\r\n  });\r\n\r\n  const getDepotPicker = async () => {\r\n    const result = await getDepotRequest.execute();\r\n    setDepotPicker(result.data);\r\n  };\r\n\r\n  //   const onChange = (e) => {\r\n  //     setValues({ ...values, [e.target.name]: e.target.value });\r\n  //   };\r\n\r\n  const onChangeDepot = (e) => {\r\n    setSelectedDepot(e.target.value);\r\n  };\r\n\r\n  const onChangeUnit = (e) => {\r\n    setSelectedUnit(e.target.value);\r\n\r\n    const { value } = e.target;\r\n\r\n    const targetUnit = units.filter((item) => item.value === value)[0];\r\n    setShowPerUnit(targetUnit.perUnit);\r\n\r\n    setSelectedUnit(e.target.value);\r\n  };\r\n\r\n  const getSelectedDepot = () => {\r\n    return depotPicker.find((item) => item.value === seletedDepot);\r\n  };\r\n\r\n  const getSelectedUnit = () => {\r\n    return units.find((item) => item.value === seletedUnit);\r\n  };\r\n\r\n  const onDone = (data) => {\r\n    const newId = uuid();\r\n\r\n    const value = {\r\n      ...data,\r\n      unit: getSelectedUnit(),\r\n      depot: getSelectedDepot(),\r\n      id: defaultValues ? defaultValues.id : newId,\r\n      isUpdate: !!defaultValues,\r\n    };\r\n    onSubmit(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDepotPicker();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(defaultValues);\r\n  }, [reset, defaultValues]);\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                variant=\"outlined\"\r\n                label=\"موجودی اول دوره\"\r\n                name={name}\r\n                onChange={onChange}\r\n                value={value}\r\n                error={!!errors.stock}\r\n                helperText={errors.stock ? errors.stock.message : \"\"}\r\n                fullWidth\r\n                size=\"small\"\r\n                type=\"number\"\r\n              />\r\n            );\r\n          }}\r\n          rules={{\r\n            required: Constant.VALIDATION.REQUIRED,\r\n            min: {\r\n              value: 0,\r\n              message: Constant.VALIDATION.POSITIVE_NUMBER,\r\n            },\r\n          }}\r\n          name=\"stock\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          select\r\n          label=\"واحد\"\r\n          value={seletedUnit}\r\n          onChange={onChangeUnit}\r\n          variant=\"outlined\"\r\n          name=\"unit\"\r\n          fullWidth\r\n          size=\"small\"\r\n        >\r\n          {units.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Grid>\r\n      {showPerUnit && (\r\n        <Grid item xs={12}>\r\n          <Controller\r\n            control={control}\r\n            render={({ onChange, value, name }) => {\r\n              return (\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"مقدار در واحد\"\r\n                  name={name}\r\n                  onChange={onChange}\r\n                  value={value}\r\n                  error={!!errors.perUnit}\r\n                  helperText={errors.perUnit ? errors.perUnit.message : \"\"}\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  type=\"number\"\r\n                />\r\n              );\r\n            }}\r\n            rules={{\r\n              required: Constant.VALIDATION.REQUIRED,\r\n              min: {\r\n                value: 0,\r\n                message: Constant.VALIDATION.POSITIVE_NUMBER,\r\n              },\r\n            }}\r\n            name=\"perUnit\"\r\n          />\r\n        </Grid>\r\n      )}\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          select\r\n          label=\"انبار\"\r\n          value={seletedDepot}\r\n          onChange={onChangeDepot}\r\n          variant=\"outlined\"\r\n          name=\"depot\"\r\n          fullWidth\r\n          size=\"small\"\r\n        >\r\n          {depotPicker.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Grid>\r\n\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          onClick={handleSubmit(onDone)}\r\n        >\r\n          تایید\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onDismiss}>\r\n          انصراف\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  IconButton,\r\n  Select,\r\n  FormControl,\r\n  InputLabel,\r\n} from \"@material-ui/core\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport { DeleteIcon, EditIcon } from \"../../components/icons\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { getQueryString, persianNumber } from \"../../helpers/utils\";\r\nimport CircularProgress from \"../../components/CircularProgress\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport Amount from \"./amount\";\r\nimport unitAction from \"../../redux/actions/unitAction\";\r\nimport { isEmpty } from \"lodash\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n  deleteIcon: {\r\n    color: theme.palette.error.main,\r\n  },\r\n  formControl: {\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"amount\",\r\n    label: \"موجودی\",\r\n  },\r\n  { id: \"unit\", label: \"واحد\" },\r\n  {\r\n    id: \"depot\",\r\n    label: \"انبار\",\r\n  },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function MainDetail() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const id = getQueryString(\"id\");\r\n  const [detail, setDetail] = useState({});\r\n  const [amounts, setAmounts] = useState([]);\r\n  const [category, setCategory] = useState([]);\r\n  const [selectedUnit, setSelectedUnit] = useState(\"MASS\");\r\n  const [selectedCategory, setSelectedCategory] = useState([1]);\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n  const units = unitAction.getProductUnit();\r\n\r\n  const addProductRequest = useApi({\r\n    method: \"post\",\r\n    url: `product`,\r\n  });\r\n  const editProductRequest = useApi({\r\n    method: \"put\",\r\n    url: `product/${id}`,\r\n  });\r\n  const detailProductRequest = useApi({\r\n    method: \"get\",\r\n    url: `product/${id}`,\r\n  });\r\n  const getProductCategoryRequest = useApi({\r\n    method: \"get\",\r\n    url: `product/category`,\r\n  });\r\n\r\n  const onSubmitAmount = (data) => {\r\n    if (data.isUpdate) {\r\n      const index = amounts.findIndex((item) => item.id === data.id);\r\n      const amountTmp = [...amounts];\r\n      amountTmp[index] = data;\r\n      setAmounts(amountTmp);\r\n    } else {\r\n      setAmounts([...amounts, data]);\r\n    }\r\n    onDismissAmount();\r\n  };\r\n\r\n  const onDismissAmount = () => {\r\n    DialogActions.hide({ name: \"amount\" });\r\n  };\r\n\r\n  const onShowDialog = (data) => {\r\n    let units;\r\n    const allUnits = unitAction\r\n      .getProductUnit()\r\n      .filter((item) => item.value === selectedUnit)[0];\r\n    if (allUnits) {\r\n      units = allUnits.children;\r\n    }\r\n    DialogActions.show({\r\n      title: \"موجودی اول دوره\",\r\n      component: (\r\n        <Amount\r\n          onSubmit={onSubmitAmount}\r\n          onDismiss={onDismissAmount}\r\n          defaultValues={data}\r\n          units={units}\r\n        />\r\n      ),\r\n      name: \"amount\",\r\n      size: \"4\",\r\n      confirm: false,\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  const onAddAmount = () => {\r\n    onShowDialog();\r\n  };\r\n\r\n  const filterAmounts = (amounts) => {\r\n    const filteredAmount = [];\r\n    amounts.map((item) => {\r\n      const newObject = {\r\n        stock: item.stock,\r\n        depotId: item.depot.value,\r\n        unit: item.unit.value,\r\n        perunit: item.perUnit,\r\n      };\r\n      filteredAmount.push(newObject);\r\n    });\r\n    return filteredAmount;\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    const result = {\r\n      ...data,\r\n      categories: selectedCategory,\r\n      unitBase: selectedUnit,\r\n      stocks: id ? amounts : filterAmounts(amounts),\r\n    };\r\n    if (id) {\r\n      return await editProductRequest.execute(result);\r\n    }\r\n    await addProductRequest.execute(result);\r\n    setTimeout(() => {\r\n      onReject();\r\n    }, 1000);\r\n  };\r\n\r\n  const onReject = () => {\r\n    history.push(\"/app/product-list\");\r\n  };\r\n\r\n  const getDetail = async () => {\r\n    const detail = await detailProductRequest.execute();\r\n    setDetail(detail.data);\r\n    setSelectedCategory(detail.data.categories);\r\n    setSelectedUnit(detail.data.unitBase);\r\n    setAmounts(detail.data.stocks);\r\n  };\r\n\r\n  const handleEditAmount = (data) => {\r\n    onShowDialog(data);\r\n  };\r\n\r\n  const handleDeleteAmount = (id) => {\r\n    DialogActions.show({\r\n      confirm: true,\r\n      title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n      onAction: () => {\r\n        setAmounts(amounts.filter((item) => item.id !== id));\r\n        DialogActions.hide({ name: \"delete\" });\r\n      },\r\n      name: \"delete\",\r\n      size: \"6\",\r\n      disableCloseButton: false,\r\n    });\r\n  };\r\n\r\n  const getProductCategory = async () => {\r\n    const result = await getProductCategoryRequest.execute();\r\n    setCategory(result.data);\r\n  };\r\n\r\n  const onChangeUnit = (e) => {\r\n    setSelectedUnit(e.target.value);\r\n  };\r\n\r\n  const onChangeCategory = (e) => {\r\n    setSelectedCategory(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProductCategory();\r\n    if (id) {\r\n      getDetail();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(detail);\r\n  }, [reset, detail]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      {!detailProductRequest.pending ? (\r\n        <Grid item lg={6} sm={12} className={classes.root}>\r\n          <Paper className={classes.paper}>\r\n            <Typography\r\n              className={classes.title}\r\n              variant=\"h6\"\r\n              id=\"tableTitle\"\r\n              component=\"div\"\r\n            >\r\n              {id ? \"ویرایش کالا\" : \"افزودن کالا\"}\r\n            </Typography>\r\n\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Fragment>\r\n                <Grid item lg={6} xs={12} className={classes.datePicker}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"نام \"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.name}\r\n                          helperText={errors.name ? errors.name.message : \"\"}\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                    name=\"name\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <TextField\r\n                    disabled={id}\r\n                    select\r\n                    label=\"واحد شمارش\"\r\n                    value={selectedUnit}\r\n                    onChange={onChangeUnit}\r\n                    variant=\"outlined\"\r\n                    name=\"unitBase\"\r\n                    fullWidth\r\n                    size=\"small\"\r\n                  >\r\n                    {units.map((option) => (\r\n                      <MenuItem key={option.value} value={option.value}>\r\n                        {option.label}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </TextField>\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <FormControl\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                    className={classes.formControl}\r\n                  >\r\n                    <InputLabel htmlFor=\"outlined-age-native-simple\">\r\n                      دسته بندی\r\n                    </InputLabel>\r\n                    <Select\r\n                      multiple\r\n                      label=\"  دسته بندی\"\r\n                      inputProps={{\r\n                        name: \"age\",\r\n                        id: \"outlined-age-native-simple\",\r\n                      }}\r\n                      value={selectedCategory}\r\n                      onChange={onChangeCategory}\r\n                    >\r\n                      {category.map((option) => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Button\r\n                    disabled={isEmpty(selectedUnit)}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={onAddAmount}\r\n                  >\r\n                    افزودن موجودی اول دوره\r\n                  </Button>\r\n                </Grid>\r\n                {!!amounts.length && (\r\n                  <Grid item xs={12}>\r\n                    <Paper>\r\n                      <TableContainer style={{ padding: \"0 10px\" }}>\r\n                        <Table\r\n                          className={classes.table}\r\n                          size={\"medium\"}\r\n                          style={{ paddingRight: 10 }}\r\n                        >\r\n                          <TableHeader headCells={headCells} />\r\n\r\n                          <TableBody>\r\n                            {amounts.map((row) => {\r\n                              return (\r\n                                <TableRow\r\n                                  hover\r\n                                  tabIndex={-1}\r\n                                  key={row.id}\r\n                                  style={{ paddingRight: 10 }}\r\n                                >\r\n                                  <TableCell padding=\"none\">\r\n                                    {row.perUnit\r\n                                      ? `${persianNumber(\r\n                                          row.stock,\r\n                                        )}*${persianNumber(row.perUnit)}`\r\n                                      : persianNumber(row.stock)}\r\n                                  </TableCell>\r\n\r\n                                  <TableCell padding=\"none\">\r\n                                    {row.unit.label}\r\n                                  </TableCell>\r\n\r\n                                  <TableCell padding=\"none\">\r\n                                    {row.depot.label}\r\n                                  </TableCell>\r\n                                  <TableCell\r\n                                    padding=\"none\"\r\n                                    style={{ textAlign: \"left\" }}\r\n                                  >\r\n                                    <IconButton\r\n                                      onClick={() => handleEditAmount(row)}\r\n                                    >\r\n                                      <EditIcon />\r\n                                    </IconButton>\r\n\r\n                                    <IconButton\r\n                                      onClick={() => handleDeleteAmount(row.id)}\r\n                                    >\r\n                                      <DeleteIcon />\r\n                                    </IconButton>\r\n                                  </TableCell>\r\n                                </TableRow>\r\n                              );\r\n                            })}\r\n                          </TableBody>\r\n                        </Table>\r\n                      </TableContainer>\r\n                    </Paper>\r\n                  </Grid>\r\n                )}\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                    تایید\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={onReject}\r\n                  >\r\n                    بازگشت\r\n                  </Button>\r\n                </Grid>\r\n              </Fragment>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      ) : (\r\n        <CircularProgress />\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n}));\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  Grid,\r\n  CircularProgress,\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { persianNumber } from \"../../helpers/utils\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    label: \"نام کالا\",\r\n  },\r\n  { id: \"amounts\", label: \"موجودی ها\" },\r\n];\r\n\r\nexport default function MainDetail({ depotId, onSubmit }) {\r\n  const [data, setData] = useState([]);\r\n  const getAmountRequest = useApi({\r\n    method: \"get\",\r\n    url: `product/depot/${depotId}`,\r\n  });\r\n\r\n  const getAmount = async () => {\r\n    const result = await getAmountRequest.execute();\r\n    setData(result.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAmount();\r\n  }, []);\r\n  return getAmountRequest.pending ? (\r\n    <CircularProgress style={{ position: \"absolute\", top: 20, left: 20 }} />\r\n  ) : (\r\n    <Grid container spacing={3} alignItems=\"center\">\r\n      {!!data.length && (\r\n        <Grid item xs={12}>\r\n          <TableContainer style={{ padding: \"0 10px\" }}>\r\n            <Table size={\"medium\"} style={{ paddingRight: 10 }}>\r\n              <TableHeader headCells={headCells} />\r\n\r\n              <TableBody>\r\n                {data.map((row) => {\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      tabIndex={-1}\r\n                      key={row.id}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableCell padding=\"none\">{row.name}</TableCell>\r\n                      <TableCell padding=\"none\">\r\n                        <ul>\r\n                          {row.stocks.map((item) => {\r\n                            return (\r\n                              <li>\r\n                                <span style={{ margin: \"0 -5px 0 5px\" }}>\r\n                                  {persianNumber(item.stock)}\r\n                                </span>\r\n\r\n                                <span>{item.unit}</span>\r\n                              </li>\r\n                            );\r\n                          })}\r\n                        </ul>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Grid>\r\n      )}\r\n      <Grid item xs={12}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n          بازگشت\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { convertParamsToQueryString, hasPermission } from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\nimport AmountBrif from \"./amountBrif\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    label: \"نام انبار\",\r\n  },\r\n  {\r\n    id: \"category\",\r\n    label: \"دسته بندی انبار\",\r\n  },\r\n  { id: \"phone\", label: \"تلفن\" },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nconst MainList = () => {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"name\");\r\n  const [page, setPage] = useState(0);\r\n  const [search, setSearch] = useState();\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const history = useHistory();\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onAdd = () => {\r\n    history.push(\"/app/depot-detail\");\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const getDepotRequest = useApi({\r\n    method: \"get\",\r\n    url: `depot?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n    })}`,\r\n  });\r\n\r\n  const deleteUseRequest = useApi({\r\n    method: \"delete\",\r\n    url: `depot`,\r\n  });\r\n\r\n  const handleAction = (row, type) => {\r\n    const types = {\r\n      amount: () => {\r\n        DialogActions.show({\r\n          title: \"موجودی در انبار ها\",\r\n          component: (\r\n            <AmountBrif\r\n              onSubmit={() => {\r\n                DialogActions.hide({ name: \"amount\" });\r\n              }}\r\n              depotId={row.id}\r\n            />\r\n          ),\r\n          name: \"amount\",\r\n          size: \"4\",\r\n          confirm: false,\r\n          disableCloseButton: true,\r\n        });\r\n      },\r\n\r\n      edit: () => {\r\n        history.push(`/app/depot-detail?id=${row.id}`);\r\n      },\r\n      delete: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            await deleteUseRequest.execute(null, row.id);\r\n            setList(list.filter((item) => item.id !== row.id));\r\n            DialogActions.hide({ name: \"delete\" });\r\n          },\r\n          name: \"delete\",\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const getData = async () => {\r\n    const depotList = await getDepotRequest.execute();\r\n    setList(depotList.data);\r\n    setTotal(depotList.total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, pageSize, search]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.CASH_LIST) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getDepotRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title=\"لیست انبار ها\"\r\n                    onAdd={onAdd}\r\n                    handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                  />\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                            >\r\n                              <TableCell padding=\"none\">{row.name}</TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.depotCategory}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">{row.phone}</TableCell>\r\n\r\n                              <TableCell padding=\"none\">\r\n                                <TableRowMenu\r\n                                  options={[\r\n                                    { id: \"amount\", title: \"موجودی\" },\r\n                                    { id: \"edit\", title: \"ویرایش\" },\r\n                                    // { id: \"delete\", title: \"حذف\" },\r\n                                  ]}\r\n                                  hadleAction={(type) =>\r\n                                    handleAction(row, type)\r\n                                  }\r\n                                />\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getDepotRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default MainList;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { getQueryString } from \"../../helpers/utils\";\r\nimport CircularProgress from \"../../components/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n}));\r\n\r\nexport default function MainDetail() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const id = getQueryString(\"id\");\r\n  const [detail, setDetail] = useState({});\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n  const [category, setCategory] = useState([]);\r\n  const [depotCategory, setDepotCategory] = useState(1);\r\n\r\n  const addDepotRequest = useApi({\r\n    method: \"post\",\r\n    url: `depot`,\r\n  });\r\n  const editDepotRequest = useApi({\r\n    method: \"put\",\r\n    url: `depot/${id}`,\r\n  });\r\n  const detailDepotRequest = useApi({\r\n    method: \"get\",\r\n    url: `depot/${id}`,\r\n  });\r\n  const depotCategoryRequest = useApi({\r\n    method: \"get\",\r\n    url: `depot/category`,\r\n  });\r\n\r\n  const onSubmit = async (data) => {\r\n    const value = { ...data, depotCategoryId: depotCategory };\r\n\r\n    if (id) {\r\n      return await editDepotRequest.execute(value);\r\n    }\r\n    await addDepotRequest.execute(value);\r\n    setTimeout(() => {\r\n      onReject();\r\n    }, 1000);\r\n  };\r\n\r\n  const onReject = () => {\r\n    history.push(\"/app/depot-list\");\r\n  };\r\n\r\n  const getDetail = async () => {\r\n    const detail = await detailDepotRequest.execute();\r\n    setDetail(detail.data);\r\n    setDepotCategory(detail.data.depotCategory);\r\n  };\r\n\r\n  const getDepotCategory = async () => {\r\n    const detail = await depotCategoryRequest.execute();\r\n    setCategory(detail.data);\r\n  };\r\n\r\n  const onChangeCategory = (e) => {\r\n    setDepotCategory(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDepotCategory();\r\n    if (id) {\r\n      getDetail();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(detail);\r\n  }, [reset, detail]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      {!detailDepotRequest.pending ? (\r\n        <Grid item lg={6} sm={12} className={classes.root}>\r\n          <Paper className={classes.paper}>\r\n            <Typography\r\n              className={classes.title}\r\n              variant=\"h6\"\r\n              id=\"tableTitle\"\r\n              component=\"div\"\r\n            >\r\n              {id ? \"ویرایش انبار\" : \"افزودن انبار\"}\r\n            </Typography>\r\n\r\n            <Grid container spacing={3}>\r\n              <Fragment>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"نام\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.name}\r\n                          helperText={errors.name ? errors.name.message : \"\"}\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                    name=\"name\"\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item lg={6} xs={12}>\r\n                  {!!category.length && depotCategory && (\r\n                    <TextField\r\n                      select\r\n                      label=\"دسته بندی\"\r\n                      value={depotCategory}\r\n                      onChange={onChangeCategory}\r\n                      variant=\"outlined\"\r\n                      error={!!errors.depotCategory}\r\n                      helperText={\r\n                        errors.depotCategory ? errors.depotCategory.message : \"\"\r\n                      }\r\n                      fullWidth\r\n                      size=\"small\"\r\n                    >\r\n                      {category.map((option) => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </TextField>\r\n                  )}\r\n                </Grid>\r\n\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"تلفن\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.phone}\r\n                          helperText={errors.phone ? errors.phone.message : \"\"}\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    name=\"phone\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"آدرس\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.address}\r\n                          helperText={\r\n                            errors.address ? errors.address.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    name=\"address\"\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                    تایید\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={onReject}\r\n                  >\r\n                    بازگشت\r\n                  </Button>\r\n                </Grid>\r\n              </Fragment>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      ) : (\r\n        <CircularProgress />\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n}));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Grid, TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\n\r\nexport default function MainDetail({ source, onSubmit, onDismiss }) {\r\n  const [cashes, setCashes] = useState([]);\r\n  const [selectedDestination, setSelectedDestination] = useState(5);\r\n  const [amount, setAmount] = useState();\r\n\r\n  const getCashRequest = useApi({\r\n    method: \"get\",\r\n    url: `cashdesk/picker`,\r\n  });\r\n\r\n  const onDone = () => {\r\n    onSubmit({\r\n      sourceId: source,\r\n      destinationId: selectedDestination,\r\n      amount,\r\n    });\r\n  };\r\n\r\n  const onChange = (e, type) => {\r\n    if (type === \"destination\") {\r\n      setSelectedDestination(e.target.value);\r\n    } else {\r\n      setAmount(e.target.value);\r\n    }\r\n  };\r\n\r\n  const getCashes = async () => {\r\n    const result = await getCashRequest.execute();\r\n    const filterdCashes = result.data.filter((item) => item.value !== source);\r\n    setCashes(filterdCashes);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCashes();\r\n  }, []);\r\n\r\n  return (\r\n    <form>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            select\r\n            label=\"صندوق مقصد\"\r\n            onChange={(e) => onChange(e, \"destination\")}\r\n            value={selectedDestination}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            size=\"small\"\r\n            name=\"cash\"\r\n          >\r\n            {cashes.map((option) => (\r\n              <MenuItem key={option.value} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            type=\"number\"\r\n            variant=\"outlined\"\r\n            label=\"مبلغ\"\r\n            name={\"amount\"}\r\n            onChange={(e) => onChange(e, \"amount\")}\r\n            value={amount}\r\n            fullWidth\r\n            size=\"small\"\r\n          />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n        >\r\n          <Button variant=\"contained\" color=\"primary\" onClick={onDone}>\r\n            تایید\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n            بازگشت\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport {\r\n  convertParamsToQueryString,\r\n  hasPermission,\r\n  persianNumber,\r\n} from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport Transfer from \"./transfer\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    label: \"نام صندوق\",\r\n  },\r\n  {\r\n    id: \"type\",\r\n    label: \"نوع\",\r\n  },\r\n  {\r\n    id: \"logo\",\r\n    label: \"بانک\",\r\n  },\r\n  { id: \"amount\", label: \"موجودی\" },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nconst MainList = () => {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"name\");\r\n  const [search, setSearch] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const history = useHistory();\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onAdd = () => {\r\n    history.push(\"/app/cash-detail\");\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const getCashRequest = useApi({\r\n    method: \"get\",\r\n    url: `cashdesk?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n    })}`,\r\n  });\r\n\r\n  const deleteCashRequest = useApi({\r\n    method: \"delete\",\r\n    url: `cashdesk`,\r\n  });\r\n\r\n  const transferCashDesk = useApi({\r\n    method: \"post\",\r\n    url: \"cashdesk/transfer\",\r\n  });\r\n\r\n  const onDismissTransfer = () => {\r\n    DialogActions.hide({ name: \"transfer\" });\r\n  };\r\n\r\n  const onSubmitTransfer = async (data) => {\r\n    await transferCashDesk.execute(data);\r\n    getData();\r\n    onDismissTransfer();\r\n  };\r\n\r\n  const handleAction = (row, type) => {\r\n    const types = {\r\n      transaction: () => {\r\n        history.push(`/app/cash-transaction?cashId=${row.id}`);\r\n      },\r\n      edit: () => {\r\n        history.push(`/app/cash-detail?id=${row.id}`);\r\n      },\r\n      delete: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            await deleteCashRequest.execute(null, row.id);\r\n            setList(list.filter((item) => item.id !== row.id));\r\n            DialogActions.hide({ name: \"delete\" });\r\n          },\r\n          name: \"delete\",\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n      transfer: () => {\r\n        DialogActions.show({\r\n          title: \"انتقال بین صندوق ها\",\r\n          component: (\r\n            <Transfer\r\n              onSubmit={onSubmitTransfer}\r\n              onDismiss={onDismissTransfer}\r\n              source={row.id}\r\n            />\r\n          ),\r\n          name: \"transfer\",\r\n          size: \"4\",\r\n          confirm: false,\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const getData = async () => {\r\n    const cashList = await getCashRequest.execute();\r\n    setList(cashList.data);\r\n    setTotal(cashList.total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.CASH_LIST) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getCashRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title=\"لیست صندوق ها\"\r\n                    onAdd={onAdd}\r\n                    handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                  />\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                            >\r\n                              <TableCell padding=\"none\">{row.name}</TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.type === \"CASH\" ? \"نقدی\" : \"بانکی\"}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.bank && (\r\n                                  <img\r\n                                    style={{ width: 40, height: 40 }}\r\n                                    alt={row.bank.name}\r\n                                    src={`${Constant.API_ADDRESS}/${row.bank.logo}`}\r\n                                  />\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  Number(row.amount).toLocaleString(),\r\n                                )}\r\n                              </TableCell>\r\n\r\n                              <TableCell padding=\"none\">\r\n                                <TableRowMenu\r\n                                  options={[\r\n                                    { id: \"transaction\", title: \"تراکنش\" },\r\n                                    { id: \"transfer\", title: \"انتقال\" },\r\n                                    { id: \"edit\", title: \"ویرایش\" },\r\n                                    // { id: \"delete\", title: \"حذف\" },\r\n                                  ]}\r\n                                  hadleAction={(type) =>\r\n                                    handleAction(row, type)\r\n                                  }\r\n                                />\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getCashRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainList;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  RadioGroup,\r\n  Radio,\r\n  FormControlLabel,\r\n} from \"@material-ui/core\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { getQueryString } from \"../../helpers/utils\";\r\nimport CircularProgress from \"../../components/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: 7,\r\n  },\r\n}));\r\n\r\nexport default function MainDetail({ defaultValues }) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const id = getQueryString(\"id\");\r\n  const [detail, setDetail] = useState({});\r\n  const [banks, setBanks] = useState([]);\r\n  const [selectedType, setSelectedType] = React.useState(\"CASH\");\r\n  const [selectedBank, setSelectedBank] = useState(\r\n    defaultValues?.bank.value || 1,\r\n  );\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n\r\n  const addCashRequest = useApi({\r\n    method: \"post\",\r\n    url: `cashdesk`,\r\n  });\r\n  const editCashRequest = useApi({\r\n    method: \"put\",\r\n    url: `cashdesk/${id}`,\r\n  });\r\n  const detailCashRequest = useApi({\r\n    method: \"get\",\r\n    url: `cashdesk/${id}`,\r\n  });\r\n  const getBankRequest = useApi({\r\n    method: \"get\",\r\n    url: `bank`,\r\n  });\r\n\r\n  const handleChangeType = (event) => {\r\n    setSelectedType(event.target.value);\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    if (id) {\r\n      await editCashRequest.execute(data);\r\n    } else {\r\n      await addCashRequest.execute(data);\r\n    }\r\n    setTimeout(() => {\r\n      onReject();\r\n    }, 1000);\r\n  };\r\n\r\n  const onReject = () => {\r\n    history.push(\"/app/cash-list\");\r\n  };\r\n\r\n  const getDetail = async () => {\r\n    const detail = await detailCashRequest.execute();\r\n    setDetail(detail.data);\r\n    setSelectedBank(detail.data.bankId);\r\n    setSelectedType(detail.data.type);\r\n  };\r\n\r\n  const onChangeBank = (e) => {\r\n    setSelectedBank(e.target.value);\r\n  };\r\n\r\n  const getBanks = async () => {\r\n    const result = await getBankRequest.execute();\r\n    setBanks(result.data);\r\n  };\r\n\r\n  const onDone = (data) => {\r\n    const value = {\r\n      ...data,\r\n      bankId: selectedBank,\r\n      type: selectedType,\r\n      isUpdate: !!defaultValues,\r\n    };\r\n    onSubmit(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      getDetail();\r\n    }\r\n    getBanks();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(detail);\r\n  }, [reset, detail]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onDone)}>\r\n      {!detailCashRequest.pending ? (\r\n        <Grid item lg={6} sm={12} className={classes.root}>\r\n          <Paper className={classes.paper}>\r\n            <Typography\r\n              className={classes.title}\r\n              variant=\"h6\"\r\n              id=\"tableTitle\"\r\n              component=\"div\"\r\n            >\r\n              {id ? \"ویرایش صندوق\" : \"افزودن صندوق\"}\r\n            </Typography>\r\n\r\n            <Grid container spacing={3}>\r\n              <Fragment>\r\n                <Grid item lg={12} xs={12}>\r\n                  <RadioGroup\r\n                    aria-label=\"gender\"\r\n                    name=\"gender1\"\r\n                    value={selectedType}\r\n                    onChange={handleChangeType}\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-around\",\r\n                    }}\r\n                  >\r\n                    <FormControlLabel\r\n                      disabled={!!id}\r\n                      value=\"CASH\"\r\n                      control={<Radio />}\r\n                      label=\"نقدی\"\r\n                    />\r\n                    <FormControlLabel\r\n                      disabled={!!id}\r\n                      value=\"BANK\"\r\n                      control={<Radio />}\r\n                      label=\"بانکی\"\r\n                    />\r\n                  </RadioGroup>\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          label=\"نام\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.name}\r\n                          helperText={errors.name ? errors.name.message : \"\"}\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                    name=\"name\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          disabled={!!id}\r\n                          variant=\"outlined\"\r\n                          label=\"موجودی \"\r\n                          type=\"number\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.amount}\r\n                          helperText={\r\n                            errors.amount ? errors.amount.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                    name=\"amount\"\r\n                  />\r\n                </Grid>\r\n                {selectedType === \"BANK\" && (\r\n                  <>\r\n                    <Grid item lg={6} xs={12}>\r\n                      <TextField\r\n                        select\r\n                        label=\"بانک\"\r\n                        onChange={onChangeBank}\r\n                        value={selectedBank}\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        name=\"bank\"\r\n                        SelectProps={{\r\n                          classes: {\r\n                            select: classes.rootSelect,\r\n                          },\r\n                        }}\r\n                      >\r\n                        {banks.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            <img\r\n                              src={`${Constant.API_ADDRESS}/${option.logo}`}\r\n                              alt={option.label}\r\n                              style={{\r\n                                width: 25,\r\n                                height: 25,\r\n                                borderRadius: \"50%\",\r\n                                marginLeft: 10,\r\n                              }}\r\n                            />\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </TextField>\r\n                    </Grid>\r\n                    <Grid item lg={6} xs={12}>\r\n                      <Controller\r\n                        control={control}\r\n                        render={({ onChange, value, name }) => {\r\n                          return (\r\n                            <TextField\r\n                              fullWidth\r\n                              value={value}\r\n                              size=\"small\"\r\n                              name={name}\r\n                              label=\"شماره کارت\"\r\n                              variant=\"outlined\"\r\n                              onChange={onChange}\r\n                              error={!!errors.accountCardNumber}\r\n                              helperText={\r\n                                errors.accountCardNumber\r\n                                  ? errors.accountCardNumber.message\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          );\r\n                        }}\r\n                        rules={{\r\n                          minLength: {\r\n                            value: 16,\r\n                            message: Constant.VALIDATION.CARD_NUMBER,\r\n                          },\r\n                          maxLength: {\r\n                            value: 16,\r\n                            message: Constant.VALIDATION.CARD_NUMBER,\r\n                          },\r\n                        }}\r\n                        name=\"accountCardNumber\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item lg={6} xs={12}>\r\n                      <Controller\r\n                        control={control}\r\n                        render={({ onChange, value, name }) => {\r\n                          return (\r\n                            <TextField\r\n                              fullWidth\r\n                              value={value}\r\n                              size=\"small\"\r\n                              name={name}\r\n                              label=\"شماره حساب\"\r\n                              variant=\"outlined\"\r\n                              onChange={onChange}\r\n                              error={!!errors.accountNumber}\r\n                              helperText={\r\n                                errors.accountNumber\r\n                                  ? errors.accountNumber.message\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          );\r\n                        }}\r\n                        name=\"accountNumber\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item lg={6} xs={12}>\r\n                      <Controller\r\n                        control={control}\r\n                        render={({ onChange, value, name }) => {\r\n                          return (\r\n                            <TextField\r\n                              fullWidth\r\n                              value={value}\r\n                              size=\"small\"\r\n                              name={name}\r\n                              label=\"شماره شبا\"\r\n                              variant=\"outlined\"\r\n                              onChange={onChange}\r\n                              error={!!errors.accountShaba}\r\n                              helperText={\r\n                                errors.accountShaba\r\n                                  ? errors.accountShaba.message\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          );\r\n                        }}\r\n                        name=\"accountShaba\"\r\n                      />\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n                <Grid item xs={12}>\r\n                  <Controller\r\n                    control={control}\r\n                    render={({ onChange, value, name }) => {\r\n                      return (\r\n                        <TextField\r\n                          multiline\r\n                          variant=\"outlined\"\r\n                          label=\"توضیحات\"\r\n                          name={name}\r\n                          onChange={onChange}\r\n                          value={value}\r\n                          error={!!errors.description}\r\n                          helperText={\r\n                            errors.description ? errors.description.message : \"\"\r\n                          }\r\n                          fullWidth\r\n                          size=\"small\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    name=\"description\"\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                    تایید\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={onReject}\r\n                  >\r\n                    بازگشت\r\n                  </Button>\r\n                </Grid>\r\n              </Fragment>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      ) : (\r\n        <CircularProgress />\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  status: {\r\n    color: \"#fff\",\r\n  },\r\n\r\n  rootSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Grid, TextField, MenuItem, Button, Divider } from \"@material-ui/core\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\n\r\nconst Filter = ({ onFilter }) => {\r\n  const [filterData, setFilterData] = useState();\r\n  const [category, setCategory] = useState([]);\r\n  const [driverCategory, setDriverCategory] = useState(1);\r\n\r\n  const driverCategoryRequest = useApi({\r\n    method: \"get\",\r\n    url: `driver/category`,\r\n  });\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setFilterData(event.target.value);\r\n  };\r\n\r\n  const getDriverCategory = async () => {\r\n    const detail = await driverCategoryRequest.execute();\r\n    setCategory(detail.data);\r\n  };\r\n\r\n  const onChangeCategory = (e) => {\r\n    setDriverCategory(e.target.value);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (typeof onFilter === \"function\") {\r\n      onFilter(`{ name: ${filterData}, category: ${driverCategory} }`);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDriverCategory();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container spacing={3} alignItems=\"center\" style={{ padding: 10 }}>\r\n      <Grid item lg={3} xs={12}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          label=\"نام\"\r\n          onChange={handleChange(\"name\")}\r\n          value={filterData}\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n      </Grid>\r\n      <Grid item lg={3} xs={12}>\r\n        {!!category.length && driverCategory && (\r\n          <TextField\r\n            select\r\n            label=\"دسته بندی\"\r\n            value={driverCategory}\r\n            onChange={onChangeCategory}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            size=\"small\"\r\n          >\r\n            {category.map((option) => (\r\n              <MenuItem key={option.value} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        )}\r\n      </Grid>\r\n\r\n      <Grid item lg={3} xs={12}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n          تایید\r\n        </Button>\r\n      </Grid>\r\n      <Divider style={{ width: \"100%\" }} />\r\n    </Grid>\r\n  );\r\n};\r\nexport default Filter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport {\r\n  convertParamsToQueryString,\r\n  hasPermission,\r\n  persianNumber,\r\n} from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport FilterComponent from \"./filter\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"firstName\",\r\n    label: \"نام\",\r\n  },\r\n  { id: \"lastName\", label: \"نام خانوادگی\" },\r\n  {\r\n    id: \"firstName\",\r\n    label: \"نام\",\r\n  },\r\n  {\r\n    id: \"mobile\",\r\n    label: \"موبایل\",\r\n  },\r\n  { id: \"car\", label: \"خودرو\" },\r\n  { id: \"pelak\", label: \"پلاک\" },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function MainList() {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [search, setSearch] = useState();\r\n  const [filter, setFilter] = useState();\r\n  const [orderBy, setOrderBy] = useState(\"firstName\");\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const history = useHistory();\r\n  const [total, setTotal] = useState(0);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onAdd = () => {\r\n    history.push(\"/app/driver-detail\");\r\n  };\r\n\r\n  const getDriverRequest = useApi({\r\n    method: \"get\",\r\n    url: decodeURIComponent(\r\n      `driver?${convertParamsToQueryString({\r\n        page,\r\n        order,\r\n        orderBy,\r\n        pageSize,\r\n        search,\r\n        filter,\r\n      })}`,\r\n    ),\r\n  });\r\n\r\n  const deleteUseRequest = useApi({\r\n    method: \"delete\",\r\n    url: `driver`,\r\n  });\r\n\r\n  const handleAction = (id, type) => {\r\n    const types = {\r\n      edit: () => {\r\n        history.push(`/app/driver-detail?id=${id}`);\r\n      },\r\n      delete: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            await deleteUseRequest.execute(null, id);\r\n            setList(list.filter((item) => item.id !== id));\r\n            DialogActions.hide({ name: \"delete\" });\r\n          },\r\n          name: \"delete\",\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n      transaction: () => {\r\n        history.push(`/app/driver-transaction?id=${id}`);\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onFilter = (data) => {\r\n    setFilter(data);\r\n    setPage(0);\r\n  };\r\n\r\n  const getData = async () => {\r\n    const driverList = await getDriverRequest.execute();\r\n    setList(driverList.data);\r\n    setTotal(driverList.total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize, filter]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.CASH_LIST) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getDriverRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title=\"لیست رانندگان\"\r\n                    onAdd={onAdd}\r\n                    FilterComponent={<FilterComponent onFilter={onFilter} />}\r\n                    handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                  />\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                            >\r\n                              <TableCell padding=\"none\">\r\n                                {row.firstName}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.lastName}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.category.name}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(Number(row.mobile))}\r\n                              </TableCell>\r\n\r\n                              <TableCell padding=\"none\">\r\n                                {row.carName}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.carPlaque}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                <TableRowMenu\r\n                                  options={[\r\n                                    { id: \"transaction\", title: \"تراکنش ها\" },\r\n                                    { id: \"edit\", title: \"ویرایش\" },\r\n                                    // { id: \"delete\", title: \"حذف\" },\r\n                                  ]}\r\n                                  hadleAction={(type) =>\r\n                                    handleAction(row.id, type)\r\n                                  }\r\n                                />\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getDriverRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Grid, MenuItem } from \"@material-ui/core\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport styles from \"./style\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nconst Account = ({ onSubmit, onDismiss, defaultValues }) => {\r\n  const [banks, setBanks] = useState([]);\r\n  const [selectedBank, setSelectedBank] = useState(\r\n    defaultValues?.bank.value || 1,\r\n  );\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n  const classes = styles();\r\n\r\n  const getBankRequest = useApi({\r\n    method: \"get\",\r\n    url: `bank`,\r\n  });\r\n\r\n  const getBanks = async () => {\r\n    const result = await getBankRequest.execute();\r\n    setBanks(result.data);\r\n  };\r\n\r\n  const getSelectedBank = () => {\r\n    return banks.find((item) => item.value === selectedBank);\r\n  };\r\n\r\n  const onDone = (data) => {\r\n    const newId = uuid();\r\n    const value = {\r\n      ...data,\r\n      bank: getSelectedBank(),\r\n      id: defaultValues ? defaultValues.id : newId,\r\n      isUpdate: !!defaultValues,\r\n    };\r\n    onSubmit(value);\r\n  };\r\n\r\n  const onChangeBank = (e) => {\r\n    setSelectedBank(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBanks();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(defaultValues);\r\n  }, [reset, defaultValues]);\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          select\r\n          label=\"بانک\"\r\n          onChange={onChangeBank}\r\n          value={selectedBank}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n          name=\"bank\"\r\n          SelectProps={{\r\n            classes: {\r\n              select: classes.rootSelect,\r\n            },\r\n          }}\r\n        >\r\n          {banks.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              <img\r\n                src={`${Constant.API_ADDRESS}/${option.logo}`}\r\n                alt={option.label}\r\n                style={{\r\n                  width: 25,\r\n                  height: 25,\r\n                  borderRadius: \"50%\",\r\n                  marginLeft: 10,\r\n                }}\r\n              />\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                fullWidth\r\n                value={value}\r\n                size=\"small\"\r\n                name={name}\r\n                label=\"شماره کارت\"\r\n                variant=\"outlined\"\r\n                onChange={onChange}\r\n                error={!!errors.accountCardNumber}\r\n                helperText={\r\n                  errors.accountCardNumber\r\n                    ? errors.accountCardNumber.message\r\n                    : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          rules={{\r\n            minLength: {\r\n              value: 16,\r\n              message: Constant.VALIDATION.CARD_NUMBER,\r\n            },\r\n            maxLength: {\r\n              value: 16,\r\n              message: Constant.VALIDATION.CARD_NUMBER,\r\n            },\r\n          }}\r\n          name=\"accountCardNumber\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                fullWidth\r\n                value={value}\r\n                size=\"small\"\r\n                name={name}\r\n                label=\"شماره حساب\"\r\n                variant=\"outlined\"\r\n                onChange={onChange}\r\n                error={!!errors.accountNumber}\r\n                helperText={\r\n                  errors.accountNumber ? errors.accountNumber.message : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          name=\"accountNumber\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                fullWidth\r\n                value={value}\r\n                size=\"small\"\r\n                name={name}\r\n                label=\"شماره شبا\"\r\n                variant=\"outlined\"\r\n                onChange={onChange}\r\n                error={!!errors.accountShaba}\r\n                helperText={\r\n                  errors.accountShaba ? errors.accountShaba.message : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          name=\"accountShaba\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value, name }) => {\r\n            return (\r\n              <TextField\r\n                label=\"توضیحات\"\r\n                multiline\r\n                rows={4}\r\n                variant=\"outlined\"\r\n                name={name}\r\n                onChange={onChange}\r\n                value={value}\r\n                fullWidth\r\n                error={!!errors.description}\r\n                helperText={\r\n                  errors.description ? errors.description.message : \"\"\r\n                }\r\n              />\r\n            );\r\n          }}\r\n          name=\"description\"\r\n        />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          onClick={handleSubmit(onDone)}\r\n        >\r\n          تایید\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onDismiss}>\r\n          انصراف\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  IconButton,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport { DeleteIcon, EditIcon } from \"../../components/icons\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { getQueryString } from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport Account from \"./account\";\r\nimport CircularProgress from \"../../components/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n}));\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"Name\",\r\n    label: \"نام بانک\",\r\n  },\r\n  { id: \"accountNumber\", label: \"شماره حساب \" },\r\n  {\r\n    id: \"CardNumber\",\r\n    label: \"شماره کارت\",\r\n  },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function MainDetail() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const id = getQueryString(\"id\");\r\n  const [detail, setDetail] = useState({});\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [category, setCategory] = useState([]);\r\n  const [driverCategory, setDriverCategory] = useState(1);\r\n  const { control, handleSubmit, errors, reset } = useForm();\r\n\r\n  const addDriverRequest = useApi({\r\n    method: \"post\",\r\n    url: `driver`,\r\n  });\r\n  const editDriverRequest = useApi({\r\n    method: \"put\",\r\n    url: `driver/${id}`,\r\n  });\r\n  const detailDriverRequest = useApi({\r\n    method: \"get\",\r\n    url: `driver/${id}`,\r\n  });\r\n\r\n  const driverCategoryRequest = useApi({\r\n    method: \"get\",\r\n    url: `driver/category`,\r\n  });\r\n\r\n  const deleteAccountRequest = useApi({\r\n    method: \"delete\",\r\n    url: `account`,\r\n  });\r\n\r\n  const onSubmit = async (data) => {\r\n    const newAccounts = [];\r\n    accounts.map((item) => {\r\n      const newData = {\r\n        bankId: item.bank.value || item.bank.id,\r\n        accountCardNumber: item.accountCardNumber,\r\n        accountNumber: item.accountNumber,\r\n        accountShaba: item.accountShaba,\r\n        description: item.description,\r\n        id: item.id.toString().includes(\"-\") ? null : item.id,\r\n      };\r\n      newAccounts.push(newData);\r\n    });\r\n\r\n    const allData = {\r\n      ...data,\r\n      accounts: newAccounts,\r\n      categoryId: driverCategory,\r\n    };\r\n    if (id) {\r\n      return await editDriverRequest.execute(allData);\r\n    }\r\n    await addDriverRequest.execute(allData);\r\n    setTimeout(() => {\r\n      onReject();\r\n    }, 1000);\r\n  };\r\n\r\n  const onReject = () => {\r\n    history.push(\"/app/driver-list\");\r\n  };\r\n\r\n  const getDetail = async () => {\r\n    const detail = await detailDriverRequest.execute();\r\n    setDetail(detail.data);\r\n    setDriverCategory(detail.data.driverCategory);\r\n    setAccounts(detail.data?.accounts || []);\r\n  };\r\n\r\n  const getDriverCategory = async () => {\r\n    const detail = await driverCategoryRequest.execute();\r\n    setCategory(detail.data);\r\n  };\r\n\r\n  const onSubmitAccount = (data) => {\r\n    if (data.isUpdate) {\r\n      const index = accounts.findIndex((item) => item.id === data.id);\r\n      const accounstTmp = [...accounts];\r\n      accounstTmp[index] = data;\r\n      setAccounts(accounstTmp);\r\n    } else {\r\n      setAccounts([...accounts, data]);\r\n    }\r\n    onDismissAccount();\r\n  };\r\n\r\n  const onDismissAccount = () => {\r\n    DialogActions.hide({ name: \"account\" });\r\n  };\r\n\r\n  const onShowDialog = (data) => {\r\n    DialogActions.show({\r\n      title: \" حساب بانکی\",\r\n      component: (\r\n        <Account\r\n          onSubmit={onSubmitAccount}\r\n          onDismiss={onDismissAccount}\r\n          defaultValues={data}\r\n        />\r\n      ),\r\n      name: \"account\",\r\n      size: \"4\",\r\n      confirm: false,\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  const onAddAccount = () => {\r\n    onShowDialog();\r\n  };\r\n\r\n  const handleEditAccount = (data) => {\r\n    onShowDialog(data);\r\n  };\r\n\r\n  const handleDeleteAccount = (row) => {\r\n    DialogActions.show({\r\n      confirm: true,\r\n      title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n      onAction: async () => {\r\n        if (id) {\r\n          await deleteAccountRequest.execute(null, row.id);\r\n        }\r\n        setAccounts(accounts.filter((item) => item.id !== row.id));\r\n        DialogActions.hide({ name: \"delete\" });\r\n      },\r\n      name: \"delete\",\r\n      size: \"6\",\r\n      disableCloseButton: false,\r\n    });\r\n  };\r\n\r\n  const onChangeCategory = (e) => {\r\n    setDriverCategory(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDriverCategory();\r\n    if (id) {\r\n      getDetail();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset(detail);\r\n  }, [reset, detail]);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        {!detailDriverRequest.pending ? (\r\n          <Grid item lg={6} sm={12} className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n              <Typography\r\n                className={classes.title}\r\n                variant=\"h6\"\r\n                id=\"tableTitle\"\r\n                component=\"div\"\r\n              >\r\n                {id ? \"ویرایش راننده\" : \"افزودن راننده\"}\r\n              </Typography>\r\n\r\n              <Grid container spacing={3}>\r\n                <Fragment>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"نام\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.firstName}\r\n                            helperText={\r\n                              errors.firstName ? errors.firstName.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                      name=\"firstName\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"نام خانوادگی\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.lastName}\r\n                            helperText={\r\n                              errors.lastName ? errors.lastName.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      rules={{ required: Constant.VALIDATION.REQUIRED }}\r\n                      name=\"lastName\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"تلفن\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.phone}\r\n                            helperText={\r\n                              errors.phone ? errors.phone.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"phone\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"موبایل\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.mobile}\r\n                            helperText={\r\n                              errors.mobile ? errors.mobile.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      rules={{\r\n                        minLength: {\r\n                          value: 11,\r\n                          message: Constant.VALIDATION.MOBILE_NUMBER,\r\n                        },\r\n                        maxLength: {\r\n                          value: 11,\r\n                          message: Constant.VALIDATION.MOBILE_NUMBER,\r\n                        },\r\n                      }}\r\n                      name=\"mobile\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            type=\"number\"\r\n                            variant=\"outlined\"\r\n                            label=\"مانده از قبل\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.accountRemaining}\r\n                            helperText={\r\n                              errors.accountRemaining\r\n                                ? errors.accountRemaining.message\r\n                                : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"accountRemaining\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    {!!category.length && driverCategory && (\r\n                      <TextField\r\n                        select\r\n                        label=\"دسته بندی\"\r\n                        value={driverCategory}\r\n                        onChange={onChangeCategory}\r\n                        variant=\"outlined\"\r\n                        error={!!errors.driverCategory}\r\n                        helperText={\r\n                          errors.driverCategory\r\n                            ? errors.driverCategory.message\r\n                            : \"\"\r\n                        }\r\n                        fullWidth\r\n                        size=\"small\"\r\n                      >\r\n                        {category.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </TextField>\r\n                    )}\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"نام خودرو\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.carName}\r\n                            helperText={\r\n                              errors.carName ? errors.carName.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"carName\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"پلاک خودرو\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.carPlaque}\r\n                            helperText={\r\n                              errors.carPlaque ? errors.carPlaque.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"carPlaque\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={onAddAccount}\r\n                    >\r\n                      افزودن حساب بانکی\r\n                    </Button>\r\n                  </Grid>\r\n                  {!!accounts.length && (\r\n                    <Grid item xs={12}>\r\n                      <Paper>\r\n                        <TableContainer style={{ padding: \"0 10px\" }}>\r\n                          <Table\r\n                            className={classes.table}\r\n                            size={\"medium\"}\r\n                            style={{ paddingRight: 10 }}\r\n                          >\r\n                            <TableHeader headCells={headCells} />\r\n\r\n                            <TableBody>\r\n                              {accounts.map((row) => {\r\n                                return (\r\n                                  <TableRow\r\n                                    hover\r\n                                    tabIndex={-1}\r\n                                    key={row.id}\r\n                                    style={{ paddingRight: 10 }}\r\n                                  >\r\n                                    <TableCell padding=\"none\">\r\n                                      <div\r\n                                        style={{\r\n                                          display: \"flex\",\r\n                                          alignItems: \"center\",\r\n                                        }}\r\n                                      >\r\n                                        <img\r\n                                          src={`${Constant.API_ADDRESS}/${row.bank.logo}`}\r\n                                          alt={row.bank.label}\r\n                                          style={{\r\n                                            width: 25,\r\n                                            height: 25,\r\n                                            borderRadius: \"50%\",\r\n                                            marginLeft: 5,\r\n                                          }}\r\n                                        />\r\n                                        {row.bank.name || row.bank.label}\r\n                                      </div>\r\n                                    </TableCell>\r\n                                    <TableCell padding=\"none\">\r\n                                      {row.accountNumber}\r\n                                    </TableCell>\r\n                                    <TableCell padding=\"none\">\r\n                                      {row.accountCardNumber}\r\n                                    </TableCell>\r\n\r\n                                    <TableCell\r\n                                      padding=\"none\"\r\n                                      style={{ textAlign: \"left\" }}\r\n                                    >\r\n                                      <IconButton\r\n                                        onClick={() => handleEditAccount(row)}\r\n                                      >\r\n                                        <EditIcon />\r\n                                      </IconButton>\r\n\r\n                                      <IconButton\r\n                                        onClick={() => handleDeleteAccount(row)}\r\n                                      >\r\n                                        <DeleteIcon />\r\n                                      </IconButton>\r\n                                    </TableCell>\r\n                                  </TableRow>\r\n                                );\r\n                              })}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                      </Paper>\r\n                    </Grid>\r\n                  )}\r\n\r\n                  <Grid item xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"آدرس\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            error={!!errors.address}\r\n                            helperText={\r\n                              errors.address ? errors.address.message : \"\"\r\n                            }\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"address\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Controller\r\n                      control={control}\r\n                      render={({ onChange, value, name }) => {\r\n                        return (\r\n                          <TextField\r\n                            label=\"توضیحات\"\r\n                            multiline\r\n                            rows={4}\r\n                            variant=\"outlined\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            fullWidth\r\n                            error={!!errors.description}\r\n                            helperText={\r\n                              errors.description\r\n                                ? errors.description.message\r\n                                : \"\"\r\n                            }\r\n                          />\r\n                        );\r\n                      }}\r\n                      name=\"description\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                  >\r\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                      تایید\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      onClick={onReject}\r\n                    >\r\n                      بازگشت\r\n                    </Button>\r\n                  </Grid>\r\n                </Fragment>\r\n              </Grid>\r\n            </Paper>\r\n          </Grid>\r\n        ) : (\r\n          <CircularProgress />\r\n        )}\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n}));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { convertParamsToQueryString } from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\nconst headCells = [\r\n  {\r\n    id: \"username\",\r\n    label: \"نام کاربری\",\r\n  },\r\n  {\r\n    id: \"firstName\",\r\n    label: \"نام\",\r\n  },\r\n  { id: \"lastName\", label: \"نام خانوادگی\" },\r\n  {\r\n    id: \"mobile\",\r\n    label: \"موبایل\",\r\n  },\r\n  { id: \"phone\", label: \"تلفن\" },\r\n  { id: \"action\" },\r\n];\r\n\r\nexport default function MainList() {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"username\");\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(5);\r\n  const [list, setList] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const onAdd = () => {\r\n    history.push(\"/app/user-detail\");\r\n  };\r\n\r\n  const getUserRequest = useApi({\r\n    method: \"get\",\r\n    url: `user?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n    })}`,\r\n  });\r\n\r\n  const deleteUseRequest = useApi({\r\n    method: \"delete\",\r\n    url: `user`,\r\n  });\r\n\r\n  const handleAction = (id, type) => {\r\n    const types = {\r\n      edit: () => {\r\n        history.push(`/app/user-detail?id=${id}`);\r\n      },\r\n      delete: () => {\r\n        DialogActions.show({\r\n          confirm: true,\r\n          title: \"ایا از حذف این رکورد مطمئن هستید ؟\",\r\n          onAction: async () => {\r\n            await deleteUseRequest.execute(null, id);\r\n            setList(list.filter((item) => item.id !== id));\r\n            DialogActions.hide({ name: \"delete\" });\r\n          },\r\n          name: \"delete\",\r\n          size: \"6\",\r\n          disableCloseButton: false,\r\n        });\r\n      },\r\n    };\r\n    if (types[type]) {\r\n      types[type]();\r\n    }\r\n  };\r\n\r\n  const getData = async () => {\r\n    const userList = await getUserRequest.execute();\r\n    setList(userList.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <TableTop title=\"لیست کاربران\" onAdd={onAdd} />\r\n        <TableContainer style={{ padding: \"0 10px\" }}>\r\n          <Table\r\n            className={classes.table}\r\n            size={\"medium\"}\r\n            style={{ paddingRight: 10 }}\r\n          >\r\n            <TableHeader\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={list.length}\r\n              headCells={headCells}\r\n            />\r\n            <TableBody>\r\n              {stableSort(list, getComparator(order, orderBy))\r\n                .slice(page * pageSize, page * pageSize + pageSize)\r\n                .map((row) => {\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      tabIndex={-1}\r\n                      key={row.id}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableCell padding=\"none\">{row.username}</TableCell>\r\n                      <TableCell padding=\"none\">{row.firstName}</TableCell>\r\n                      <TableCell padding=\"none\">{row.lastName}</TableCell>\r\n                      <TableCell padding=\"none\">{row.mobile}</TableCell>\r\n                      <TableCell padding=\"none\">{row.phone}</TableCell>\r\n\r\n                      <TableCell padding=\"none\">\r\n                        <TableRowMenu\r\n                          options={[\r\n                            // { id: \"delete\", title: \"حذف\" },\r\n                            { id: \"edit\", title: \"ویرایش\" },\r\n                          ]}\r\n                          hadleAction={(type) => handleAction(row.id, type)}\r\n                        />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {!list.length && !getUserRequest.pending && (\r\n                <TableRow style={{ height: 53 }}>\r\n                  <TableCell colSpan={6} style={{ textAlign: \"center\" }}>\r\n                    <Typography variant=\"h6\">\r\n                      داده ای برای نمایش وجود ندارد\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePaging\r\n          count={list.length}\r\n          handleChangePage={handleChangePage}\r\n          handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n          page={page}\r\n          rowsPerPage={pageSize}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"baseline\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      flexDirection: \"column\",\r\n    },\r\n  },\r\n  paper: {\r\n    width: \"30%\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"90%\",\r\n    },\r\n    margin: \"10px 20px\",\r\n  },\r\n  toolbar: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    \"& .MuiTypography-h6\": {\r\n      color: \"white\",\r\n    },\r\n  },\r\n}));\r\n","import React, { useState } from \"react\";\r\nimport { TextField, Button, Grid } from \"@material-ui/core\";\r\n\r\nconst MainDetail = ({ onSubmit, onDismiss, defaultValue }) => {\r\n  const [label, setLabel] = useState(defaultValue.label);\r\n\r\n  const onChangeSelectedCategory = (e) => {\r\n    const { value } = e.target;\r\n    setLabel(value);\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          style={{ width: \"100%\" }}\r\n          value={label}\r\n          size=\"small\"\r\n          label=\"عنوان\"\r\n          variant=\"outlined\"\r\n          onChange={onChangeSelectedCategory}\r\n        />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => onSubmit({ value: defaultValue.value, name: label })}\r\n        >\r\n          تایید\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onDismiss}>\r\n          انصراف\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default MainDetail;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport Detail from \"./detail\";\r\n\r\nconst MainList = () => {\r\n  const classes = styles();\r\n  const [customerCategory, setCustomerCategory] = useState([]);\r\n  const [depotCategory, setDepotCategory] = useState([]);\r\n  const [productCategory, setProductCategory] = useState([]);\r\n  const [invoiceCategory, setInvoiceCategory] = useState([]);\r\n  const [driverCategory, setDriverCategory] = useState([]);\r\n  const [action, setAction] = useState();\r\n  const [selectedCategory, setSelectedCategory] = useState({\r\n    value: \"\",\r\n    label: \"\",\r\n  });\r\n  const [selectedType, setSelectedType] = useState();\r\n\r\n  const GetCustomerCategoryRequest = useApi({\r\n    method: \"get\",\r\n    url: \"customer/category\",\r\n  });\r\n\r\n  const EditCustomerCategoryRequest = useApi({\r\n    method: \"put\",\r\n    url: `customer/category/${selectedCategory.value}`,\r\n  });\r\n\r\n  const AddCustomerCategoryRequest = useApi({\r\n    method: \"post\",\r\n    url: \"customer/category\",\r\n  });\r\n\r\n  const GetProductCategoryRequest = useApi({\r\n    method: \"get\",\r\n    url: \"product/category\",\r\n  });\r\n\r\n  const EditProductCategoryRequest = useApi({\r\n    method: \"put\",\r\n    url: `product/category/${selectedCategory.value}`,\r\n  });\r\n\r\n  const AddProductCategoryRequest = useApi({\r\n    method: \"post\",\r\n    url: \"product/category\",\r\n  });\r\n\r\n  const GetDepotCategoryRequest = useApi({\r\n    method: \"get\",\r\n    url: \"depot/category\",\r\n  });\r\n\r\n  const EditDepotCategoryRequest = useApi({\r\n    method: \"put\",\r\n    url: `depot/category/${selectedCategory.value}`,\r\n  });\r\n\r\n  const AddDepotCategoryRequest = useApi({\r\n    method: \"post\",\r\n    url: \"depot/category\",\r\n  });\r\n\r\n  const GetInvoiceCategoryRequest = useApi({\r\n    method: \"get\",\r\n    url: \"invoice/category\",\r\n  });\r\n\r\n  const EditInvoiceCategoryRequest = useApi({\r\n    method: \"put\",\r\n    url: `invoice/category/${selectedCategory.value}`,\r\n  });\r\n\r\n  const AddInvoiceCategoryRequest = useApi({\r\n    method: \"post\",\r\n    url: \"invoice/category\",\r\n  });\r\n\r\n  const GetDriverCategoryRequest = useApi({\r\n    method: \"get\",\r\n    url: \"driver/category\",\r\n  });\r\n\r\n  const EditDriverCategoryRequest = useApi({\r\n    method: \"put\",\r\n    url: `driver/category/${selectedCategory.value}`,\r\n  });\r\n\r\n  const AddDriverCategoryRequest = useApi({\r\n    method: \"post\",\r\n    url: \"driver/category\",\r\n  });\r\n\r\n  const onAction = ({ name, value }) => {\r\n    const types = {\r\n      customer: async () => {\r\n        if (action === \"edit\") {\r\n          await EditCustomerCategoryRequest.execute({\r\n            name,\r\n          });\r\n        } else {\r\n          await AddCustomerCategoryRequest.execute({ name });\r\n        }\r\n        getCustomerCategory();\r\n      },\r\n      depot: async () => {\r\n        if (action === \"edit\") {\r\n          await EditDepotCategoryRequest.execute({\r\n            name,\r\n          });\r\n        } else {\r\n          await AddDepotCategoryRequest.execute({ name });\r\n        }\r\n        getDepotCategory();\r\n      },\r\n      product: async () => {\r\n        if (action === \"edit\") {\r\n          await EditProductCategoryRequest.execute({\r\n            name,\r\n          });\r\n        } else {\r\n          await AddProductCategoryRequest.execute({ name });\r\n        }\r\n        getProductCategory();\r\n      },\r\n      invoice: async () => {\r\n        if (action === \"edit\") {\r\n          await EditInvoiceCategoryRequest.execute({\r\n            name,\r\n          });\r\n        } else {\r\n          await AddInvoiceCategoryRequest.execute({ name });\r\n        }\r\n        getInvoiceCategory();\r\n      },\r\n      driver: async () => {\r\n        if (action === \"edit\") {\r\n          await EditDriverCategoryRequest.execute({\r\n            name,\r\n          });\r\n        } else {\r\n          await AddDriverCategoryRequest.execute({ name });\r\n        }\r\n        getDriverCategory();\r\n      },\r\n    };\r\n    if (types[selectedType]) {\r\n      onDismiss();\r\n      return types[selectedType]();\r\n    }\r\n  };\r\n\r\n  const handleAdd = (type) => {\r\n    setAction(\"add\");\r\n    setSelectedType(type);\r\n  };\r\n\r\n  const handleAction = (type, item) => {\r\n    setAction(\"edit\");\r\n    setSelectedType(type);\r\n    setSelectedCategory(item);\r\n  };\r\n\r\n  const onDismiss = () => {\r\n    DialogActions.hide({ name: \"category\" });\r\n    setAction();\r\n  };\r\n\r\n  const showEditModal = () => {\r\n    DialogActions.show({\r\n      title: \" دسته بندی\",\r\n      component: (\r\n        <Detail\r\n          onSubmit={onAction}\r\n          onDismiss={onDismiss}\r\n          defaultValue={selectedCategory}\r\n        />\r\n      ),\r\n      name: \"detail\",\r\n      size: \"4\",\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  const getCustomerCategory = async () => {\r\n    const customerCategoryList = await GetCustomerCategoryRequest.execute();\r\n    setCustomerCategory(customerCategoryList.data);\r\n  };\r\n\r\n  const getDepotCategory = async () => {\r\n    const depotCategoryList = await GetDepotCategoryRequest.execute();\r\n    setDepotCategory(depotCategoryList.data);\r\n  };\r\n\r\n  const getProductCategory = async () => {\r\n    const productCategoryList = await GetProductCategoryRequest.execute();\r\n    setProductCategory(productCategoryList.data);\r\n  };\r\n\r\n  const getInvoiceCategory = async () => {\r\n    const invoiceCategoryList = await GetInvoiceCategoryRequest.execute();\r\n    setInvoiceCategory(invoiceCategoryList.data);\r\n  };\r\n\r\n  const getDriverCategory = async () => {\r\n    const driverCategoryList = await GetDriverCategoryRequest.execute();\r\n    setDriverCategory(driverCategoryList.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCustomerCategory();\r\n    getDepotCategory();\r\n    getProductCategory();\r\n    getInvoiceCategory();\r\n    getDriverCategory();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (action) {\r\n      showEditModal();\r\n    }\r\n  }, [action]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <TableTop\r\n          title=\"دسته بندی مشتریان\"\r\n          onAdd={() => handleAdd(\"customer\")}\r\n          toolbarClass={classes.toolbar}\r\n          addButtonClass={classes.addButton}\r\n          minimal\r\n        />\r\n        <TableContainer style={{ padding: \"0 10px\" }}>\r\n          <Table\r\n            className={classes.table}\r\n            size={\"medium\"}\r\n            style={{ paddingRight: 10 }}\r\n          >\r\n            <TableBody>\r\n              {customerCategory.map((row) => {\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    tabIndex={-1}\r\n                    key={row.id}\r\n                    style={{ paddingRight: 10 }}\r\n                  >\r\n                    <TableCell padding=\"none\">{row.label}</TableCell>\r\n\r\n                    <TableCell padding=\"none\" style={{ textAlign: \"left\" }}>\r\n                      <IconButton onClick={() => handleAction(\"customer\", row)}>\r\n                        <i className=\"material-icons-round\">edit</i>\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n              {!customerCategory.length && !getCustomerCategory.pending && (\r\n                <TableRow style={{ height: 53 }}>\r\n                  <TableCell colSpan={6} style={{ textAlign: \"center\" }}>\r\n                    <Typography variant=\"h6\">\r\n                      داده ای برای نمایش وجود ندارد\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n      <Paper className={classes.paper}>\r\n        <TableTop\r\n          title=\"دسته بندی انبار\"\r\n          onAdd={() => handleAdd(\"depot\")}\r\n          toolbarClass={classes.toolbar}\r\n          addButtonClass={classes.addButton}\r\n          minimal\r\n        />\r\n        <TableContainer style={{ padding: \"0 10px\" }}>\r\n          <Table\r\n            className={classes.table}\r\n            size={\"medium\"}\r\n            style={{ paddingRight: 10 }}\r\n          >\r\n            <TableBody>\r\n              {depotCategory.map((row) => {\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    tabIndex={-1}\r\n                    key={row.id}\r\n                    style={{ paddingRight: 10 }}\r\n                  >\r\n                    <TableCell padding=\"none\">{row.label}</TableCell>\r\n\r\n                    <TableCell padding=\"none\" style={{ textAlign: \"left\" }}>\r\n                      <IconButton onClick={() => handleAction(\"depot\", row)}>\r\n                        <i className=\"material-icons-round\">edit</i>\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n              {!depotCategory.length && !getDepotCategory.pending && (\r\n                <TableRow style={{ height: 53 }}>\r\n                  <TableCell colSpan={6} style={{ textAlign: \"center\" }}>\r\n                    <Typography variant=\"h6\">\r\n                      داده ای برای نمایش وجود ندارد\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n      <Paper className={classes.paper}>\r\n        <TableTop\r\n          title=\"دسته بندی کالاها\"\r\n          onAdd={() => handleAdd(\"product\")}\r\n          toolbarClass={classes.toolbar}\r\n          addButtonClass={classes.addButton}\r\n          minimal\r\n        />\r\n        <TableContainer style={{ padding: \"0 10px\" }}>\r\n          <Table\r\n            className={classes.table}\r\n            size={\"medium\"}\r\n            style={{ paddingRight: 10 }}\r\n          >\r\n            <TableBody>\r\n              {productCategory.map((row) => {\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    tabIndex={-1}\r\n                    key={row.id}\r\n                    style={{ paddingRight: 10 }}\r\n                  >\r\n                    <TableCell padding=\"none\">{row.label}</TableCell>\r\n\r\n                    <TableCell padding=\"none\" style={{ textAlign: \"left\" }}>\r\n                      <IconButton onClick={() => handleAction(\"product\", row)}>\r\n                        <i className=\"material-icons-round\">edit</i>\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n              {!productCategory.length && !getProductCategory.pending && (\r\n                <TableRow style={{ height: 53 }}>\r\n                  <TableCell colSpan={6} style={{ textAlign: \"center\" }}>\r\n                    <Typography variant=\"h6\">\r\n                      داده ای برای نمایش وجود ندارد\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n      <Paper className={classes.paper}>\r\n        <TableTop\r\n          title=\"دسته بندی فاکتور ها\"\r\n          onAdd={() => handleAdd(\"invoice\")}\r\n          toolbarClass={classes.toolbar}\r\n          addButtonClass={classes.addButton}\r\n          minimal\r\n        />\r\n        <TableContainer style={{ padding: \"0 10px\" }}>\r\n          <Table\r\n            className={classes.table}\r\n            size={\"medium\"}\r\n            style={{ paddingRight: 10 }}\r\n          >\r\n            <TableBody>\r\n              {invoiceCategory.map((row) => {\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    tabIndex={-1}\r\n                    key={row.id}\r\n                    style={{ paddingRight: 10 }}\r\n                  >\r\n                    <TableCell padding=\"none\">{row.label}</TableCell>\r\n\r\n                    <TableCell padding=\"none\" style={{ textAlign: \"left\" }}>\r\n                      <IconButton onClick={() => handleAction(\"invoice\", row)}>\r\n                        <i className=\"material-icons-round\">edit</i>\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n              {!invoiceCategory.length && !getInvoiceCategory.pending && (\r\n                <TableRow style={{ height: 53 }}>\r\n                  <TableCell colSpan={6} style={{ textAlign: \"center\" }}>\r\n                    <Typography variant=\"h6\">\r\n                      داده ای برای نمایش وجود ندارد\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n      <Paper className={classes.paper}>\r\n        <TableTop\r\n          title=\"دسته بندی رانندگان ها\"\r\n          onAdd={() => handleAdd(\"driver\")}\r\n          toolbarClass={classes.toolbar}\r\n          addButtonClass={classes.addButton}\r\n          minimal\r\n        />\r\n        <TableContainer style={{ padding: \"0 10px\" }}>\r\n          <Table\r\n            className={classes.table}\r\n            size={\"medium\"}\r\n            style={{ paddingRight: 10 }}\r\n          >\r\n            <TableBody>\r\n              {driverCategory.map((row) => {\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    tabIndex={-1}\r\n                    key={row.id}\r\n                    style={{ paddingRight: 10 }}\r\n                  >\r\n                    <TableCell padding=\"none\">{row.label}</TableCell>\r\n\r\n                    <TableCell padding=\"none\" style={{ textAlign: \"left\" }}>\r\n                      <IconButton onClick={() => handleAction(\"driver\", row)}>\r\n                        <i className=\"material-icons-round\">edit</i>\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n              {!driverCategory.length && !getDriverCategory.pending && (\r\n                <TableRow style={{ height: 53 }}>\r\n                  <TableCell colSpan={6} style={{ textAlign: \"center\" }}>\r\n                    <Typography variant=\"h6\">\r\n                      داده ای برای نمایش وجود ندارد\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Grid,\r\n  TextField,\r\n  Chip,\r\n} from \"@material-ui/core\";\r\nimport { TimePicker } from \"@material-ui/pickers\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { getQueryString, persianNumber } from \"../../helpers/utils\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport { convertParamsToQueryString } from \"../../helpers/utils\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport clsx from \"clsx\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n    marginBottom: 10,\r\n  },\r\n  title: {\r\n    paddingBottom: 20,\r\n  },\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n  enter: {\r\n    color: \"#fff\",\r\n    backgroundColor: theme.palette.primary.main,\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n  exit: {\r\n    color: \"#fff\",\r\n    backgroundColor: theme.palette.error.main,\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.error.main,\r\n    },\r\n  },\r\n  logedEnter: {\r\n    color: \"white\",\r\n    fontSize: 16,\r\n    backgroundColor: theme.palette.gray.main,\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.gray.main,\r\n    },\r\n  },\r\n  logedExit: {\r\n    color: \"white\",\r\n    fontSize: 16,\r\n    backgroundColor: theme.palette.gray.main,\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.gray.main,\r\n    },\r\n  },\r\n  register: {\r\n    color: \"#fff\",\r\n    backgroundColor: theme.palette.success.main,\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.success.dark,\r\n    },\r\n  },\r\n  dateTime: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  clockConatiner: {\r\n    background: theme.palette.primary.main,\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n    display: \"flex\",\r\n  },\r\n}));\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    label: \"نام و نام خانوادگی\",\r\n  },\r\n\r\n  { id: \"enter\", label: \"ورود\" },\r\n  {\r\n    id: \"exit\",\r\n    label: \"خروج\",\r\n  },\r\n  { id: \"enter\", label: \"ورود\" },\r\n  {\r\n    id: \"exit\",\r\n    label: \"خروج\",\r\n  },\r\n];\r\n\r\nexport default function MainDetail() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [search, setSearch] = useState();\r\n  const [list, setList] = useState([]);\r\n  const [selectedDate, setSelectedDate] = useState(moment());\r\n  const [selectedTime, setSelectedTime] = useState(moment());\r\n  const [isEditTime, setIsEditTime] = useState(false);\r\n  const [editTime, setEditTime] = useState();\r\n\r\n  const registerRequest = useApi({\r\n    method: \"post\",\r\n    url: `attendance`,\r\n  });\r\n\r\n  const getTrafficRequest = useApi({\r\n    method: \"get\",\r\n    url: decodeURIComponent(\r\n      `attendance?${convertParamsToQueryString({\r\n        search,\r\n        filter: `{date:${selectedDate._d.toISOString()}}`,\r\n      })}`,\r\n    ),\r\n  });\r\n\r\n  const editTrafficRequest = useApi({\r\n    method: \"put\",\r\n    url: `attendance`,\r\n  });\r\n\r\n  const onSubmit = async (row, type) => {\r\n    if (!checkToday()) {\r\n      await registerRequest.execute({ employeeId: row.id, type });\r\n      getData();\r\n    }\r\n  };\r\n\r\n  const onEdit = async (date) => {\r\n    const tzOffset = new Date().getTimezoneOffset() * 60000;\r\n    await editTrafficRequest.execute({\r\n      id: editTime.id,\r\n      date: new Date(new Date(date) - tzOffset),\r\n    });\r\n    getData();\r\n  };\r\n\r\n  const onChangeSearch = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  const getData = async () => {\r\n    const userList = await getTrafficRequest.execute();\r\n    setList(userList.data);\r\n  };\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date._d);\r\n    setIsEditTime(false);\r\n    setEditTime(null);\r\n    onEdit(date._d);\r\n  };\r\n\r\n  const onEditTime = (time) => {\r\n    setSelectedTime(time.dateTime);\r\n    setIsEditTime(true);\r\n    setEditTime({ id: time.id });\r\n  };\r\n\r\n  const checkToday = () => {\r\n    return selectedDate._d.toDateString() !== moment()._d.toDateString();\r\n  };\r\n\r\n  const getTimesElement = (row) => {\r\n    if (row.times.length === 0) {\r\n      return (\r\n        <>\r\n          <TableCell padding=\"none\">\r\n            <Chip\r\n              label={\"ثبت ورود\"}\r\n              className={clsx(\r\n                classes.enter,\r\n                checkToday() && classes.logedEnter,\r\n              )}\r\n              onClick={() => onSubmit(row, \"ENTER\")}\r\n            />\r\n          </TableCell>\r\n          <TableCell padding=\"none\"></TableCell>\r\n          <TableCell padding=\"none\"></TableCell>\r\n          <TableCell padding=\"none\"></TableCell>\r\n        </>\r\n      );\r\n    }\r\n    if (row.times.length === 1) {\r\n      return (\r\n        <>\r\n          <TableCell padding=\"none\">\r\n            {isEditTime && row.times[0].id === editTime.id ? (\r\n              <TimePicker\r\n                style={{ width: 50 }}\r\n                ampm={false}\r\n                value={selectedTime}\r\n                onChange={handleTimeChange}\r\n                okLabel=\"تایید\"\r\n                cancelLabel=\"انصراف\"\r\n              />\r\n            ) : (\r\n              <Chip\r\n                label={persianNumber(row.times[0].time).substring(0, 5)}\r\n                className={classes.logedEnter}\r\n                onClick={() => onEditTime(row.times[0])}\r\n              />\r\n            )}\r\n          </TableCell>\r\n          <TableCell padding=\"none\">\r\n            <Chip\r\n              label={\"ثبت خروج\"}\r\n              className={clsx(classes.exit, checkToday() && classes.logedExit)}\r\n              onClick={() => onSubmit(row, \"EXIT\")}\r\n            />\r\n          </TableCell>\r\n          <TableCell padding=\"none\"></TableCell>\r\n          <TableCell padding=\"none\"></TableCell>\r\n        </>\r\n      );\r\n    }\r\n    if (row.times.length === 2) {\r\n      return (\r\n        <>\r\n          <TableCell padding=\"none\">\r\n            {isEditTime && row.times[0].id === editTime.id ? (\r\n              <TimePicker\r\n                style={{ width: 50 }}\r\n                ampm={false}\r\n                value={selectedTime}\r\n                onChange={handleTimeChange}\r\n                okLabel=\"تایید\"\r\n                cancelLabel=\"انصراف\"\r\n              />\r\n            ) : (\r\n              <Chip\r\n                label={persianNumber(row.times[0].time).substring(0, 5)}\r\n                className={classes.logedEnter}\r\n                onClick={() => onEditTime(row.times[0])}\r\n              />\r\n            )}\r\n          </TableCell>\r\n          <TableCell padding=\"none\">\r\n            {isEditTime && row.times[1].id === editTime.id ? (\r\n              <TimePicker\r\n                style={{ width: 50 }}\r\n                ampm={false}\r\n                value={selectedTime}\r\n                onChange={handleTimeChange}\r\n                okLabel=\"تایید\"\r\n                cancelLabel=\"انصراف\"\r\n              />\r\n            ) : (\r\n              <Chip\r\n                label={persianNumber(row.times[1].time).substring(0, 5)}\r\n                className={classes.logedExit}\r\n                onClick={() => onEditTime(row.times[1])}\r\n              />\r\n            )}\r\n          </TableCell>\r\n          <TableCell padding=\"none\">\r\n            <Chip\r\n              label={\"ثبت ورود\"}\r\n              className={clsx(\r\n                classes.enter,\r\n                checkToday() && classes.logedEnter,\r\n              )}\r\n              onClick={() => onSubmit(row, \"ENTER\")}\r\n            />\r\n          </TableCell>\r\n          <TableCell padding=\"none\"></TableCell>\r\n        </>\r\n      );\r\n    }\r\n    if (row.times.length === 3) {\r\n      return (\r\n        <>\r\n          <TableCell padding=\"none\">\r\n            {isEditTime && row.times[0].id === editTime.id ? (\r\n              <TimePicker\r\n                style={{ width: 50 }}\r\n                ampm={false}\r\n                value={selectedTime}\r\n                onChange={handleTimeChange}\r\n                okLabel=\"تایید\"\r\n                cancelLabel=\"انصراف\"\r\n              />\r\n            ) : (\r\n              <Chip\r\n                label={persianNumber(row.times[0].time).substring(0, 5)}\r\n                className={classes.logedEnter}\r\n                onClick={() => onEditTime(row.times[0])}\r\n              />\r\n            )}\r\n          </TableCell>\r\n          <TableCell padding=\"none\">\r\n            {isEditTime && row.times[1].id === editTime.id ? (\r\n              <TimePicker\r\n                style={{ width: 50 }}\r\n                ampm={false}\r\n                value={selectedTime}\r\n                onChange={handleTimeChange}\r\n                okLabel=\"تایید\"\r\n                cancelLabel=\"انصراف\"\r\n              />\r\n            ) : (\r\n              <Chip\r\n                label={persianNumber(row.times[1].time).substring(0, 5)}\r\n                className={classes.logedExit}\r\n                onClick={() => onEditTime(row.times[1])}\r\n              />\r\n            )}\r\n          </TableCell>\r\n          <TableCell padding=\"none\">\r\n            {isEditTime && row.times[2].id === editTime.id ? (\r\n              <TimePicker\r\n                style={{ width: 50 }}\r\n                ampm={false}\r\n                value={selectedTime}\r\n                onChange={handleTimeChange}\r\n                okLabel=\"تایید\"\r\n                cancelLabel=\"انصراف\"\r\n              />\r\n            ) : (\r\n              <Chip\r\n                label={persianNumber(row.times[2].time).substring(0, 5)}\r\n                className={classes.logedEnter}\r\n                onClick={() => onEditTime(row.times[2])}\r\n              />\r\n            )}\r\n          </TableCell>\r\n          <TableCell padding=\"none\">\r\n            <Chip\r\n              label={\"ثبت خروج\"}\r\n              className={clsx(classes.exit, checkToday() && classes.logedExit)}\r\n              onClick={() => onSubmit(row, \"EXIT\")}\r\n            />\r\n          </TableCell>\r\n        </>\r\n      );\r\n    }\r\n    if (row.times.length === 4) {\r\n      return (\r\n        <>\r\n          <TableCell padding=\"none\">\r\n            {isEditTime && row.times[0].id === editTime.id ? (\r\n              <TimePicker\r\n                style={{ width: 50 }}\r\n                ampm={false}\r\n                value={selectedTime}\r\n                onChange={handleTimeChange}\r\n                okLabel=\"تایید\"\r\n                cancelLabel=\"انصراف\"\r\n              />\r\n            ) : (\r\n              <Chip\r\n                label={persianNumber(row.times[0].time).substring(0, 5)}\r\n                className={classes.logedEnter}\r\n                onClick={() => onEditTime(row.times[0])}\r\n              />\r\n            )}\r\n          </TableCell>\r\n          <TableCell padding=\"none\">\r\n            {isEditTime && row.times[1].id === editTime.id ? (\r\n              <TimePicker\r\n                style={{ width: 50 }}\r\n                ampm={false}\r\n                value={selectedTime}\r\n                onChange={handleTimeChange}\r\n                okLabel=\"تایید\"\r\n                cancelLabel=\"انصراف\"\r\n              />\r\n            ) : (\r\n              <Chip\r\n                label={persianNumber(row.times[1].time).substring(0, 5)}\r\n                className={classes.logedExit}\r\n                onClick={() => onEditTime(row.times[1])}\r\n              />\r\n            )}\r\n          </TableCell>\r\n          <TableCell padding=\"none\">\r\n            {isEditTime && row.times[2].id === editTime.id ? (\r\n              <TimePicker\r\n                style={{ width: 50 }}\r\n                ampm={false}\r\n                value={selectedTime}\r\n                onChange={handleTimeChange}\r\n                okLabel=\"تایید\"\r\n                cancelLabel=\"انصراف\"\r\n              />\r\n            ) : (\r\n              <Chip\r\n                label={persianNumber(row.times[2].time).substring(0, 5)}\r\n                className={classes.logedEnter}\r\n                onClick={() => onEditTime(row.times[2])}\r\n              />\r\n            )}\r\n          </TableCell>\r\n          <TableCell padding=\"none\">\r\n            {isEditTime && row.times[3].id === editTime.id ? (\r\n              <TimePicker\r\n                style={{ width: 50 }}\r\n                ampm={false}\r\n                value={selectedTime}\r\n                onChange={handleTimeChange}\r\n                okLabel=\"تایید\"\r\n                cancelLabel=\"انصراف\"\r\n              />\r\n            ) : (\r\n              <Chip\r\n                label={persianNumber(row.times[3].time).substring(0, 5)}\r\n                className={classes.logedExit}\r\n                onClick={() => onEditTime(row.times[3])}\r\n              />\r\n            )}\r\n          </TableCell>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   console.log(new Date(selectedTime._d).getHours());\r\n  // }, [selectedTime]);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [search, selectedDate]);\r\n\r\n  return (\r\n    <Grid container spacing={3} style={{ alignItems: \"baseline\" }}>\r\n      <Grid item lg={3} sm={12} className={classes.dateTime}>\r\n        <DatePicker\r\n          autoOk\r\n          orientation=\"portrait\"\r\n          variant=\"static\"\r\n          openTo=\"date\"\r\n          name=\"date\"\r\n          label=\"تاریخ شروع قرارداد\"\r\n          inputVariant=\"outlined\"\r\n          okLabel=\"تأیید\"\r\n          cancelLabel=\"لغو\"\r\n          labelFunc={(date) => (date ? date.format(\"jYYYY/jMM/jDD\") : \"\")}\r\n          value={selectedDate}\r\n          onChange={handleDateChange}\r\n          style={{ width: \"100%\" }}\r\n        />\r\n\r\n        {/* {isEditTime && (\r\n          <TimePicker\r\n            autoOk={false}\r\n            variant=\"static\"\r\n            openTo=\"hours\"\r\n            ampm={false}\r\n            value={selectedTime}\r\n            onChange={setSelectedTime}\r\n          />\r\n        )} */}\r\n      </Grid>\r\n      <Grid item lg={8} sm={12} className={classes.root}>\r\n        <Paper className={classes.paper}>\r\n          <Typography\r\n            className={classes.title}\r\n            variant=\"h6\"\r\n            id=\"tableTitle\"\r\n            component=\"div\"\r\n          >\r\n            ثبت حضور و غیاب\r\n          </Typography>\r\n\r\n          <Grid container spacing={3}>\r\n            <Grid item lg={12} xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                label=\" جستجوی پرسنل\"\r\n                onChange={onChangeSearch}\r\n                value={search}\r\n                fullWidth\r\n                size=\"small\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n        <div className={classes.root}>\r\n          <Paper className={classes.paper}>\r\n            <TableContainer style={{ padding: \"0 10px\" }}>\r\n              <Table\r\n                className={classes.table}\r\n                size={\"medium\"}\r\n                style={{ paddingRight: 10 }}\r\n              >\r\n                <TableHeader classes={classes} headCells={headCells} />\r\n                <TableBody>\r\n                  {list.map((row) => {\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        tabIndex={-1}\r\n                        key={row.id}\r\n                        style={{ paddingRight: 10 }}\r\n                      >\r\n                        <TableCell padding=\"none\">{row.employee}</TableCell>\r\n                        {getTimesElement(row)}\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                  {!list.length && !getTrafficRequest.pending && (\r\n                    <TableRow style={{ height: 53 }}>\r\n                      <TableCell colSpan={6} style={{ textAlign: \"center\" }}>\r\n                        <Typography variant=\"h6\">\r\n                          داده ای برای نمایش وجود ندارد\r\n                        </Typography>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Paper>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Grid, Button, Divider } from \"@material-ui/core\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  datePicker: {\r\n    \"& input\": {\r\n      padding: \"10px 14px\",\r\n    },\r\n  },\r\n}));\r\nconst Filter = ({ onFilter }) => {\r\n  const classes = useStyles();\r\n  const [selectedFromDate, handleFromDateChange] = useState(moment());\r\n  const [selectedToDate, handleToDateChange] = useState(moment());\r\n\r\n  const onChnageDate = (e, type) => {\r\n    if (type === \"from\") {\r\n      handleFromDateChange(e);\r\n    } else {\r\n      handleToDateChange(e);\r\n    }\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (typeof onFilter === \"function\") {\r\n      onFilter(\r\n        `{from:${selectedFromDate._d.toISOString()},to:${selectedToDate._d.toISOString()}}`,\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3} alignItems=\"center\" style={{ padding: 10 }}>\r\n      <Grid item lg={3} xs={12} className={classes.datePicker}>\r\n        <DatePicker\r\n          autoOk\r\n          name=\"date\"\r\n          label=\"از تاریخ\"\r\n          inputVariant=\"outlined\"\r\n          okLabel=\"تأیید\"\r\n          cancelLabel=\"لغو\"\r\n          labelFunc={(date) => (date ? date.format(\"jYYYY/jMM/jDD\") : \"\")}\r\n          value={selectedFromDate}\r\n          onChange={(e) => onChnageDate(e, \"from\")}\r\n          style={{ width: \"100%\" }}\r\n        />\r\n      </Grid>\r\n      <Grid item lg={3} xs={12} className={classes.datePicker}>\r\n        <DatePicker\r\n          autoOk\r\n          name=\"date\"\r\n          label=\"تا تاریخ\"\r\n          inputVariant=\"outlined\"\r\n          okLabel=\"تأیید\"\r\n          cancelLabel=\"لغو\"\r\n          labelFunc={(date) => (date ? date.format(\"jYYYY/jMM/jDD\") : \"\")}\r\n          value={selectedToDate}\r\n          onChange={(e) => onChnageDate(e, \"to\")}\r\n          style={{ width: \"100%\" }}\r\n        />\r\n      </Grid>\r\n      <Grid item lg={3} xs={12}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n          تایید\r\n        </Button>\r\n      </Grid>\r\n      <Divider style={{ width: \"100%\" }} />\r\n    </Grid>\r\n  );\r\n};\r\nexport default Filter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Chip,\r\n  TextField,\r\n  Grid,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport {\r\n  convertParamsToQueryString,\r\n  hasPermission,\r\n  getQueryString,\r\n  persianNumber,\r\n} from \"../../helpers/utils\";\r\nimport styles from \"./style\";\r\nimport FilterComponent from \"./logFilter\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\nimport Transction from \"../customers/transaction\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport moment from \"moment-timezone\";\r\nimport jMoment from \"jalali-moment\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"date\",\r\n    label: \"تاریخ\",\r\n  },\r\n\r\n  { id: \"firstEnter\", label: \"ورود اول\" },\r\n  {\r\n    id: \"firstExit\",\r\n    label: \"خروج اول\",\r\n  },\r\n  { id: \"secondEnter\", label: \"ورود دوم\" },\r\n  {\r\n    id: \"secondExit\",\r\n    label: \"خروج دوم\",\r\n  },\r\n  { id: \"fractionTime\", label: \"کسر کار\" },\r\n  {\r\n    id: \"overTime\",\r\n    label: \"اضافه کار\",\r\n  },\r\n  {\r\n    id: \"total\",\r\n    label: \"مجموع کارکرد\",\r\n  },\r\n];\r\n\r\nexport default function EmployeeLog() {\r\n  const classes = styles();\r\n  const id = getQueryString(\"id\");\r\n  const name = getQueryString(\"name\");\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"date\");\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [sum, setSum] = useState();\r\n  const history = useHistory();\r\n  const [filter, setFilter] = useState(\r\n    `{from:${jMoment(moment(), \"YYYY/MM/DD\")\r\n      .locale(\"fa\")\r\n      .startOf(\"month\")\r\n      .toISOString()},to:${moment().toISOString()}}`,\r\n  );\r\n  // const [price, setPrice] = useState();\r\n  // const [description, setDescription] = useState();\r\n  // const [detail, setDetail] = useState({\r\n  //   totalPay: \" \",\r\n  //   totalLogPay: \" \",\r\n  //   totalLog: \" \",\r\n  //   purePay: \" \",\r\n  //   SPH: \" \",\r\n  // });\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onReject = () => {\r\n    history.push(\"/customer-list\");\r\n  };\r\n\r\n  const getEmployeeRequest = useApi({\r\n    method: \"get\",\r\n    url: decodeURIComponent(\r\n      `attendance/employee?${convertParamsToQueryString({\r\n        page,\r\n        order,\r\n        orderBy,\r\n        pageSize,\r\n        filter,\r\n      })}`,\r\n    ),\r\n  });\r\n\r\n  const onFilter = (data) => {\r\n    setFilter(data);\r\n  };\r\n\r\n  const onShowPayments = () => {\r\n    DialogActions.show({\r\n      title: \" حساب بانکی\",\r\n      component: (\r\n        <Transction\r\n        // onSubmit={onSubmitAccount}\r\n        // onDismiss={onDismissAccount}\r\n        // defaultValues={data}\r\n        />\r\n      ),\r\n      name: \"transaction\",\r\n      size: \"4\",\r\n      confirm: false,\r\n      disableCloseButton: true,\r\n    });\r\n  };\r\n\r\n  const getData = async () => {\r\n    const employeeList = await getEmployeeRequest.execute(null, id);\r\n    setList(employeeList.data);\r\n    setTotal(employeeList.total);\r\n    setSum(employeeList.details);\r\n  };\r\n\r\n  const getTitle = () => {\r\n    return `لیست تردد ${name}`;\r\n  };\r\n\r\n  const onSubmitNewPayment = () => {\r\n    //add new payment in today and type =\"outcome\"\r\n  };\r\n\r\n  const onChange = (e, type) => {};\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, pageSize, filter]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.CASH_LIST) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getEmployeeRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <>\r\n                <Grid container spacing={3} className={classes.salary}>\r\n                  {/* <Grid item xs={3}>\r\n                    <Paper className={classes.salaryPaperRight}>\r\n                      <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                          <TextField\r\n                            disabled\r\n                            variant=\"outlined\"\r\n                            label=\"مجموع کارکرد\"\r\n                            name=\"totalLog\"\r\n                            value={detail.totalLog}\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <TextField\r\n                            disabled\r\n                            variant=\"outlined\"\r\n                            label=\"دریافتی در ساعت\"\r\n                            name=\"totalLog\"\r\n                            value={detail.SPH}\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <TextField\r\n                            disabled\r\n                            variant=\"outlined\"\r\n                            label=\"مبلغ قابل پرداخت\"\r\n                            name=\"totalLog\"\r\n                            value={detail.totalLogPay}\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <TextField\r\n                            disabled\r\n                            variant=\"outlined\"\r\n                            label=\"مجموع دریافتی\"\r\n                            name=\"totalLog\"\r\n                            value={detail.totalPay}\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <TextField\r\n                            disabled\r\n                            variant=\"outlined\"\r\n                            label=\"خالص دریافتی\"\r\n                            name=\"totalLog\"\r\n                            value={detail.purePay}\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid\r\n                          item\r\n                          xs={12}\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                          }}\r\n                        >\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={onShowPayments}\r\n                            fullWidth\r\n                          >\r\n                            لیست پرداختی ها\r\n                          </Button>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Paper>\r\n                  </Grid>\r\n                   */}\r\n                  <Grid item xs={12}>\r\n                    <Paper className={classes.salaryPaperLeft}>\r\n                      <TableTop\r\n                        title={getTitle()}\r\n                        FilterComponent={\r\n                          <FilterComponent onFilter={onFilter} />\r\n                        }\r\n                      />\r\n                      <TableContainer style={{ padding: \"0 10px\" }}>\r\n                        <Table\r\n                          className={classes.table}\r\n                          size={\"medium\"}\r\n                          style={{ paddingRight: 10 }}\r\n                        >\r\n                          <TableHeader\r\n                            classes={classes}\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onRequestSort={handleRequestSort}\r\n                            rowCount={list.length}\r\n                            headCells={headCells}\r\n                          />\r\n\r\n                          <TableBody>\r\n                            {list.map((row) => {\r\n                              return (\r\n                                <TableRow\r\n                                  hover\r\n                                  tabIndex={-1}\r\n                                  key={row.id}\r\n                                  style={{ paddingRight: 10 }}\r\n                                >\r\n                                  <TableCell padding=\"none\">\r\n                                    {persianNumber(\r\n                                      new Date(row.date).toLocaleDateString(\r\n                                        \"fa-IR\",\r\n                                      ),\r\n                                    )}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {persianNumber(row.times[0]?.time)}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {persianNumber(row.times[1]?.time)}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {persianNumber(row.times[2]?.time)}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {persianNumber(row.times[3]?.time)}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {persianNumber(row.fractionTime)}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {persianNumber(row.overTime)}\r\n                                  </TableCell>\r\n                                  <TableCell padding=\"none\">\r\n                                    {persianNumber(row.total)}\r\n                                  </TableCell>\r\n                                </TableRow>\r\n                              );\r\n                            })}\r\n                            {!list.length && !getEmployeeRequest.pending && (\r\n                              <TableRow style={{ height: 53 }}>\r\n                                <TableCell\r\n                                  colSpan={headCells.length}\r\n                                  style={{ textAlign: \"center\" }}\r\n                                >\r\n                                  <Typography variant=\"h6\">\r\n                                    داده ای برای نمایش وجود ندارد\r\n                                  </Typography>\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            )}\r\n                          </TableBody>\r\n                        </Table>\r\n                      </TableContainer>\r\n                      <TablePaging\r\n                        count={total}\r\n                        handleChangePage={handleChangePage}\r\n                        handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                        page={page}\r\n                        rowsPerPage={pageSize}\r\n                      />\r\n                    </Paper>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <Paper className={classes.salaryPaperRight}>\r\n                      <Grid container spacing={3}>\r\n                        <Grid item xs={12} sm={4}>\r\n                          <TextField\r\n                            disabled\r\n                            variant=\"outlined\"\r\n                            label=\"مجموع کارکرد\"\r\n                            name=\"totalLog\"\r\n                            value={persianNumber(sum?.totalTime)}\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                          <TextField\r\n                            disabled\r\n                            variant=\"outlined\"\r\n                            label=\"مجموع اضافه کار\"\r\n                            name=\"totalLog\"\r\n                            value={persianNumber(sum?.totalOverTime)}\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                          <TextField\r\n                            disabled\r\n                            variant=\"outlined\"\r\n                            label=\"مجموع کسر کار\"\r\n                            name=\"totalLog\"\r\n                            value={persianNumber(sum?.totalFractionTime)}\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Paper>\r\n                  </Grid>\r\n                </Grid>\r\n                {/* <Grid container spacing={3} className={classes.salary}>\r\n                  <Grid item xs={3}>\r\n                    <Paper className={classes.salaryPaperRight}>\r\n                      <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"مبلغ\"\r\n                            name=\"price\"\r\n                            onChange={(e) => onChange(e, \"price\")}\r\n                            value={price}\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <TextField\r\n                            rows={3}\r\n                            multiline\r\n                            variant=\"outlined\"\r\n                            label=\"بابت\"\r\n                            name=\"description\"\r\n                            onChange={(e) => onChange(e, \"description\")}\r\n                            value={description}\r\n                            fullWidth\r\n                            size=\"small\"\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        item\r\n                        xs={12}\r\n                        style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"space-between\",\r\n                          marginTop: 10,\r\n                          flexDirection: \"column\",\r\n                        }}\r\n                      >\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={onSubmitNewPayment}\r\n                          fullWidth\r\n                        >\r\n                          پرداخت\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"Secondary\"\r\n                          onClick={onReject}\r\n                          style={{ marginTop: 10 }}\r\n                          fullWidth\r\n                        >\r\n                          بازگشت\r\n                        </Button>\r\n                      </Grid>\r\n                    </Paper>\r\n                  </Grid>\r\n                </Grid>\r\n              */}\r\n              </>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n}));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Grid, TextField, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport Constant from \"../../helpers/constant\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  img: {\r\n    width: 35,\r\n    height: 35,\r\n    borderRadius: 50,\r\n    marginLeft: 20,\r\n  },\r\n  icon: {\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: 50,\r\n    cursor: \"pointer\",\r\n  },\r\n  grid: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nexport default function MainDetail({ detail, onDismiss }) {\r\n  const classes = useStyles();\r\n  const [copyState, setCopyState] = useState();\r\n\r\n  const onCopy = (copyField) => {\r\n    setCopyState(copyField);\r\n  };\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12} className={classes.grid}>\r\n        <TextField\r\n          disabled\r\n          label=\"بانک\"\r\n          value={detail.bank.name || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n        <img\r\n          src={`${Constant.API_ADDRESS}/${detail.bank.logo}`}\r\n          alt={detail.bank.logo}\r\n          className={classes.img}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.grid}>\r\n        <TextField\r\n          disabled\r\n          label=\"شماره کارت\"\r\n          value={detail.accountCardNumber || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n        <CopyToClipboard\r\n          onCopy={() => onCopy(\"accountCardNumber\")}\r\n          text={detail.accountCardNumber}\r\n        >\r\n          <i\r\n            className=\"material-icons-round\"\r\n            style={{ marginRight: 20, cursor: \"pointer\" }}\r\n          >\r\n            {copyState === \"accountCardNumber\" ? \"done\" : \"copy\"}\r\n          </i>\r\n        </CopyToClipboard>\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.grid}>\r\n        <TextField\r\n          disabled\r\n          label=\"شماره حساب\"\r\n          value={detail.accountNumber || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n        <CopyToClipboard\r\n          onCopy={() => onCopy(\"accountNumber\")}\r\n          text={detail.accountNumber}\r\n        >\r\n          <i\r\n            className=\"material-icons-round\"\r\n            style={{ marginRight: 20, cursor: \"pointer\" }}\r\n          >\r\n            {copyState === \"accountNumber\" ? \"done\" : \"copy\"}\r\n          </i>\r\n        </CopyToClipboard>\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.grid}>\r\n        <TextField\r\n          disabled\r\n          label=\"شماره شبا\"\r\n          value={detail.accountShaba || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n        <CopyToClipboard\r\n          onCopy={() => onCopy(\"accountShaba\")}\r\n          text={detail.accountShaba}\r\n        >\r\n          <i\r\n            className=\"material-icons-round\"\r\n            style={{ marginRight: 20, cursor: \"pointer\" }}\r\n          >\r\n            {copyState === \"accountShaba\" ? \"done\" : \"copy\"}\r\n          </i>\r\n        </CopyToClipboard>\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          disabled\r\n          label=\"توضیحات\"\r\n          value={detail.description || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n      </Grid>\r\n\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n          بازگشت\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport TableRowMenu from \"../../components/Table/TableRowMenu\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { convertParamsToQueryString, hasPermission } from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport Detail from \"./detail\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    label: \"نام شخص\",\r\n  },\r\n  {\r\n    id: \"type\",\r\n    label: \"نوع\",\r\n  },\r\n  {\r\n    id: \"logo\",\r\n    label: \"بانک\",\r\n  },\r\n  { id: \"cardNumber\", label: \"شماره کارت\" },\r\n  { id: \"action\" },\r\n];\r\nconst PERSON_TYPE = {\r\n  EMPLOYEE: \"پرسنل\",\r\n  CUSTOMER: \"مشتری\",\r\n  DRIVER: \"راننده\",\r\n};\r\n\r\nconst AccountsNumber = () => {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"name\");\r\n  const [search, setSearch] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [person, setPerson] = useState(\"ALL\");\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const getCardRequest = useApi({\r\n    method: \"get\",\r\n    url: `account?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n      personType: person,\r\n    })}`,\r\n  });\r\n\r\n  const onDismissDetail = () => {\r\n    DialogActions.hide({ name: \"personAccount\" });\r\n  };\r\n\r\n  const handleDetail = (row) => {\r\n    DialogActions.show({\r\n      title: `حساب های ${row.personName}`,\r\n      component: <Detail onDismiss={onDismissDetail} detail={row} />,\r\n      name: \"personAccount\",\r\n      size: \"6\",\r\n      confirm: false,\r\n      disableCloseButton: false,\r\n    });\r\n  };\r\n\r\n  const getData = async () => {\r\n    const cardList = await getCardRequest.execute();\r\n    setList(cardList.data);\r\n    setTotal(cardList.total);\r\n  };\r\n\r\n  const onChangeTab = (e, value) => {\r\n    setPerson(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize, person]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.CASH_LIST) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getCardRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title=\"لیست حساب های بانکی\"\r\n                    handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                  />\r\n                  <div className={classes.tab}>\r\n                    <Tabs\r\n                      value={person}\r\n                      onChange={onChangeTab}\r\n                      indicatorColor=\"primary\"\r\n                      textColor=\"primary\"\r\n                      centered\r\n                      variant=\"fullWidth\"\r\n                    >\r\n                      <Tab label=\"کل اشخاص \" value=\"ALL\" />\r\n                      <Tab label=\"مشتریان\" value=\"CUSTOMER\" />\r\n                      <Tab label=\"پرسنل\" value=\"EMPLOYEE\" />\r\n                      <Tab label=\"رانندگان\" value=\"DRIVER\" />\r\n                    </Tabs>\r\n                  </div>\r\n\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                            >\r\n                              <TableCell padding=\"none\">\r\n                                {row.personName}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {PERSON_TYPE[row.personType]}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.bank && (\r\n                                  <img\r\n                                    style={{ width: 30, height: 30 }}\r\n                                    alt={row.bank.name}\r\n                                    src={`${Constant.API_ADDRESS}/${row.bank.logo}`}\r\n                                  />\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {row.accountCardNumber}\r\n                              </TableCell>\r\n\r\n                              <TableCell padding=\"none\">\r\n                                <i\r\n                                  className=\"material-icons-round\"\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                  onClick={() => handleDetail(row)}\r\n                                >\r\n                                  link\r\n                                </i>\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getCardRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AccountsNumber;\r\n","import React from \"react\";\r\nimport { Grid, TextField, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport { persianNumber } from \"../../helpers/utils\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  img: {\r\n    width: 35,\r\n    height: 35,\r\n    borderRadius: 50,\r\n    marginLeft: 20,\r\n  },\r\n  icon: {\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: 50,\r\n    cursor: \"pointer\",\r\n  },\r\n  grid: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nexport default function MainDetail({ data, type, onDismiss }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          disabled\r\n          label={`${data.paymentType === \"INOME\" ? \"دریافت از\" : \"پرداخت به\"}`}\r\n          value={data.name || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          disabled\r\n          label=\"تاریخ\"\r\n          value={\r\n            persianNumber(new Date(data.date).toLocaleDateString(\"fa-IR\")) ||\r\n            \" \"\r\n          }\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          disabled\r\n          label=\"مبلغ\"\r\n          value={persianNumber(data.price) || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n      </Grid>\r\n      {(type === \"BANK\" || type === \"CHEQUE\") && (\r\n        <Grid item xs={12} style={{ display: \"flex\" }}>\r\n          <TextField\r\n            disabled\r\n            label=\"بانک\"\r\n            value={data.detail.bank?.name || \" \"}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            size=\"small\"\r\n          />\r\n          <img\r\n            src={`${Constant.API_ADDRESS}/${data.detail.bank.logo}`}\r\n            alt={data.detail.bank?.logo}\r\n            className={classes.img}\r\n          />\r\n        </Grid>\r\n      )}\r\n      {type === \"BANK\" && (\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            disabled\r\n            label=\"نوع تراکنش\"\r\n            value={data.detail.transactionType || \" \"}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            size=\"small\"\r\n          />\r\n        </Grid>\r\n      )}\r\n      {type === \"BANK\" && (\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            disabled\r\n            label=\"شماره پیگیری\"\r\n            value={persianNumber(data.detail.trackingCode) || \" \"}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            size=\"small\"\r\n          />\r\n        </Grid>\r\n      )}\r\n      {type === \"CHEQUE\" && (\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            disabled\r\n            label=\"شماره چک\"\r\n            value={persianNumber(data.detail.chequeNumber) || \" \"}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            size=\"small\"\r\n          />\r\n        </Grid>\r\n      )}\r\n      {type === \"CHEQUE\" && (\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            disabled\r\n            label=\"تاریخ سررسید\"\r\n            value={\r\n              persianNumber(\r\n                new Date(data.detail.chequeDueDate).toLocaleDateString(\"fa-IR\"),\r\n              ) || \" \"\r\n            }\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            size=\"small\"\r\n          />\r\n        </Grid>\r\n      )}\r\n\r\n      {type === \"CHEQUE\" && (\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            disabled\r\n            label=\"در وجه\"\r\n            value={data.detail.chequePayTo || \" \"}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            size=\"small\"\r\n          />\r\n        </Grid>\r\n      )}\r\n\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          disabled\r\n          label=\"توضیحات\"\r\n          value={data.description || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n      </Grid>\r\n\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n          بازگشت\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport {\r\n  getQueryString,\r\n  convertParamsToQueryString,\r\n  hasPermission,\r\n  persianNumber,\r\n} from \"../../helpers/utils\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport PaymentDetail from \"./paymentDetail\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"date\",\r\n    label: \"تاریخ\",\r\n  },\r\n  {\r\n    id: \"name\",\r\n    label: \"نام شخص\",\r\n  },\r\n  {\r\n    id: \"type\",\r\n    label: \"نوع\",\r\n  },\r\n  {\r\n    id: \"price\",\r\n    label: \"مبلغ\",\r\n  },\r\n\r\n  { id: \"action\" },\r\n];\r\n\r\nconst types = {\r\n  CASH: \"نقد\",\r\n  CHEQUE: \"چک\",\r\n  BANK: \"بانک\",\r\n};\r\n\r\nconst PaymentReport = () => {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"price\");\r\n  const [search, setSearch] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const cashId = getQueryString(\"cashId\");\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const history = useHistory();\r\n  const [type, setPerson] = useState(\"CASH\");\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n  };\r\n\r\n  const getPaymentByCashRequest = useApi({\r\n    method: \"get\",\r\n    url: `payment/cashdesk?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n      type,\r\n    })}`,\r\n  });\r\n\r\n  const onDismissDetail = () => {\r\n    DialogActions.hide({ name: \"detail\" });\r\n  };\r\n\r\n  const handleDetail = (row) => {\r\n    DialogActions.show({\r\n      title: `${\r\n        row.paymentType === \"INCOME\" ? \"جزییات دریافت\" : \"جزییات پرداخت\"\r\n      } `,\r\n      component: (\r\n        <PaymentDetail onDismiss={onDismissDetail} data={row} type={row.type} />\r\n      ),\r\n      name: \"detail\",\r\n      size: \"6\",\r\n      confirm: false,\r\n      disableCloseButton: false,\r\n    });\r\n  };\r\n\r\n  const getData = async () => {\r\n    const paymentList = await getPaymentByCashRequest.execute(null, cashId);\r\n    setList(paymentList.data);\r\n    setTotal(paymentList.total);\r\n  };\r\n\r\n  const onChangeTab = (e, value) => {\r\n    setPerson(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize, type]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.CASH_LIST) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getPaymentByCashRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title=\"لیست تراکنش های صندوق \"\r\n                    handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                  />\r\n                  <div className={classes.tab}>\r\n                    <Tabs\r\n                      value={type}\r\n                      onChange={onChangeTab}\r\n                      indicatorColor=\"primary\"\r\n                      textColor=\"primary\"\r\n                      centered\r\n                      variant=\"fullWidth\"\r\n                    >\r\n                      <Tab label=\"نقدی\" value=\"CASH\" />\r\n                      <Tab label=\"بانکی\" value=\"BANK\" />\r\n                      <Tab label=\"چک\" value=\"CHEQUE\" />\r\n                    </Tabs>\r\n                  </div>\r\n\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                            >\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  new Date(row.date).toLocaleDateString(\r\n                                    \"fa-IR\",\r\n                                  ),\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\"> {row.name}</TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {types[row.type]}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  Number(row.price).toLocaleString(),\r\n                                )}\r\n                              </TableCell>\r\n\r\n                              <TableCell padding=\"none\">\r\n                                <i\r\n                                  className=\"material-icons-round\"\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                  onClick={() => handleDetail(row)}\r\n                                >\r\n                                  feed\r\n                                </i>\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getPaymentByCashRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaymentReport;\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n}));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Grid, TextField, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport Constant from \"../../helpers/constant\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  img: {\r\n    width: 35,\r\n    height: 35,\r\n    borderRadius: 50,\r\n    marginLeft: 20,\r\n  },\r\n  icon: {\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: 50,\r\n    cursor: \"pointer\",\r\n  },\r\n  grid: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nexport default function MainDetail({ detail, onDismiss }) {\r\n  const classes = useStyles();\r\n  const [copyState, setCopyState] = useState();\r\n\r\n  const onCopy = (copyField) => {\r\n    setCopyState(copyField);\r\n  };\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12} className={classes.grid}>\r\n        <TextField\r\n          disabled\r\n          label=\"بانک\"\r\n          value={detail.bank.name || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n        <img\r\n          src={`${Constant.API_ADDRESS}/${detail.bank.logo}`}\r\n          alt={detail.bank.logo}\r\n          className={classes.img}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.grid}>\r\n        <TextField\r\n          disabled\r\n          label=\"شماره کارت\"\r\n          value={detail.accountCardNumber || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n        <CopyToClipboard\r\n          onCopy={() => onCopy(\"accountCardNumber\")}\r\n          text={detail.accountCardNumber}\r\n        >\r\n          <i\r\n            className=\"material-icons-round\"\r\n            style={{ marginRight: 20, cursor: \"pointer\" }}\r\n          >\r\n            {copyState === \"accountCardNumber\" ? \"done\" : \"copy\"}\r\n          </i>\r\n        </CopyToClipboard>\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.grid}>\r\n        <TextField\r\n          disabled\r\n          label=\"شماره حساب\"\r\n          value={detail.accountNumber || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n        <CopyToClipboard\r\n          onCopy={() => onCopy(\"accountNumber\")}\r\n          text={detail.accountNumber}\r\n        >\r\n          <i\r\n            className=\"material-icons-round\"\r\n            style={{ marginRight: 20, cursor: \"pointer\" }}\r\n          >\r\n            {copyState === \"accountNumber\" ? \"done\" : \"copy\"}\r\n          </i>\r\n        </CopyToClipboard>\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.grid}>\r\n        <TextField\r\n          disabled\r\n          label=\"شماره شبا\"\r\n          value={detail.accountShaba || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n        <CopyToClipboard\r\n          onCopy={() => onCopy(\"accountShaba\")}\r\n          text={detail.accountShaba}\r\n        >\r\n          <i\r\n            className=\"material-icons-round\"\r\n            style={{ marginRight: 20, cursor: \"pointer\" }}\r\n          >\r\n            {copyState === \"accountShaba\" ? \"done\" : \"copy\"}\r\n          </i>\r\n        </CopyToClipboard>\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          disabled\r\n          label=\"توضیحات\"\r\n          value={detail.description || \" \"}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n      </Grid>\r\n\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={onDismiss}>\r\n          بازگشت\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport TableTop from \"../../components/Table/TableTop\";\r\nimport TableHeader from \"../../components/Table/TableHead\";\r\nimport TablePaging from \"../../components/Table/TablePaging\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport {\r\n  convertParamsToQueryString,\r\n  hasPermission,\r\n  persianNumber,\r\n} from \"../../helpers/utils\";\r\nimport DialogActions from \"../../redux/actions/dialogAction\";\r\nimport styles from \"./style\";\r\nimport Constant from \"../../helpers/constant\";\r\nimport Detail from \"./detail\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport TableSkeleton from \"../../components/Skeleton\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    label: \"نام شخص\",\r\n  },\r\n  {\r\n    id: \"Date\",\r\n    label: \"تاریخ\",\r\n  },\r\n  {\r\n    id: \"price\",\r\n    label: \"مانده وام\",\r\n  },\r\n  { id: \"personType\", label: \"نوع شخص\" },\r\n  { id: \"action\" },\r\n];\r\nconst PERSON_TYPE = {\r\n  EMPLOYEE: \"پرسنل\",\r\n  CUSTOMER: \"مشتری\",\r\n  DRIVER: \"راننده\",\r\n};\r\n\r\nconst MainList = () => {\r\n  const classes = styles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"date\");\r\n  const [search, setSearch] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(Constant.TABLE_PAGE_SIZE);\r\n  const [list, setList] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const history = useHistory();\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(parseInt(event.target.value, Constant.TABLE_PAGE_SIZE));\r\n    setPage(0);\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onAdd = () => {\r\n    history.push(`/app/payment-detail?type=OUTCOME&loan=true`);\r\n  };\r\n\r\n  const getLoanRequest = useApi({\r\n    method: \"get\",\r\n    url: `loan?${convertParamsToQueryString({\r\n      page,\r\n      order,\r\n      orderBy,\r\n      pageSize,\r\n      search,\r\n    })}`,\r\n  });\r\n\r\n  const onDismissDetail = () => {\r\n    DialogActions.hide({ name: \"detail\" });\r\n  };\r\n\r\n  const handleDetail = (row) => {\r\n    // DialogActions.show({\r\n    //   title: `حساب های ${row.personName}`,\r\n    //   component: <Detail onDismiss={onDismissDetail} detail={row} />,\r\n    // name:\"detail\",\r\n    //   size: \"6\",\r\n    //   confirm: false,\r\n    //   disableCloseButton: false,\r\n    // });\r\n  };\r\n\r\n  const getData = async () => {\r\n    const cardList = await getLoanRequest.execute();\r\n    setList(cardList.data);\r\n    setTotal(cardList.total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [page, order, search, pageSize]);\r\n\r\n  return (\r\n    <>\r\n      {hasPermission(Constant.ALL_PERMISSIONS.CASH_LIST) && (\r\n        <Slide direction=\"down\" in={true}>\r\n          <div>\r\n            {getLoanRequest.pending ? (\r\n              <TableSkeleton headCount={headCells} />\r\n            ) : (\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                  <TableTop\r\n                    title=\"لیست وام ها\"\r\n                    onAdd={onAdd}\r\n                    handleSearch={onSearch}\r\n                    defaultSearch={search}\r\n                  />\r\n\r\n                  <TableContainer style={{ padding: \"0 10px\" }}>\r\n                    <Table\r\n                      className={classes.table}\r\n                      size={\"medium\"}\r\n                      style={{ paddingRight: 10 }}\r\n                    >\r\n                      <TableHeader\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={list.length}\r\n                        headCells={headCells}\r\n                      />\r\n                      <TableBody>\r\n                        {list.map((row) => {\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={row.id}\r\n                              style={{ paddingRight: 10 }}\r\n                            >\r\n                              <TableCell padding=\"none\">\r\n                                {row.personName}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  new Date(row.date).toLocaleDateString(\r\n                                    \"fa-IR\",\r\n                                  ),\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {persianNumber(\r\n                                  Number(row.price).toLocaleString(),\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell padding=\"none\">\r\n                                {PERSON_TYPE[row.personType]}\r\n                              </TableCell>\r\n\r\n                              <TableCell padding=\"none\">\r\n                                <i\r\n                                  className=\"material-icons-round\"\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                  onClick={() => handleDetail(row)}\r\n                                >\r\n                                  link\r\n                                </i>\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {!list.length && !getLoanRequest.pending && (\r\n                          <TableRow style={{ height: 53 }}>\r\n                            <TableCell\r\n                              colSpan={6}\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <Typography variant=\"h6\">\r\n                                داده ای برای نمایش وجود ندارد\r\n                              </Typography>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePaging\r\n                    count={total}\r\n                    handleChangePage={handleChangePage}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    page={page}\r\n                    rowsPerPage={pageSize}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainList;\r\n","import React, { useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\n\r\nimport useStyles from \"./styles\";\r\nimport Header from \"../Header/Header\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport Dashboard from \"../../pages/dashboard/Dashboard\";\r\nimport UserList from \"../../pages/users\";\r\nimport UserDetail from \"../../pages/users/detail\";\r\nimport CustomerList from \"../../pages/customers\";\r\nimport CustomerDetail from \"../../pages/customers/detail\";\r\nimport CustomerTransaction from \"../../pages/customers/transaction\";\r\nimport EmployeeList from \"../../pages/employee\";\r\nimport EmployeeDetail from \"../../pages/employee/detail\";\r\nimport InvoiceList from \"../../pages/invoice\";\r\nimport InvoiceDetail from \"../../pages/invoice/detail\";\r\nimport ChequeList from \"../../pages/cheque\";\r\nimport ChequeDetail from \"../../pages/cheque/detail\";\r\nimport PaymentList from \"../../pages/payment\";\r\nimport PaymentDetail from \"../../pages/payment/detail\";\r\nimport ProductList from \"../../pages/product\";\r\nimport ProductDetail from \"../../pages/product/detail\";\r\nimport DepotList from \"../../pages/depot\";\r\nimport DepotDetail from \"../../pages/depot/detail\";\r\nimport CashList from \"../../pages/cash\";\r\nimport CashDetail from \"../../pages/cash/detail\";\r\nimport DriverList from \"../../pages/driver\";\r\nimport DriverDetail from \"../../pages/driver/detail\";\r\nimport Setting from \"../../pages/setting\";\r\nimport Category from \"../../pages/category\";\r\nimport Traffic from \"../../pages/traffic\";\r\nimport TrafficDetail from \"../../pages/traffic/register\";\r\nimport { useLayoutState } from \"../../context/LayoutContext\";\r\nimport EmployeeLog from \"../../pages/employee/log\";\r\nimport AccountsNumber from \"../../pages/accountNumber/list\";\r\nimport CashPaymentReport from \"../../pages/cash/paymentReport\";\r\nimport LoanList from \"../../pages/loan\";\r\nimport LoanDetail from \"../../pages/loan/detail\";\r\nimport ProductTransfer from \"../../pages/product/transfer\";\r\n\r\nfunction Layout(props) {\r\n  var classes = useStyles();\r\n\r\n  var layoutState = useLayoutState();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <>\r\n        <Header history={props.history} />\r\n        <Sidebar />\r\n        <div\r\n          className={classnames(classes.content, {\r\n            [classes.contentShift]: layoutState.isSidebarOpened,\r\n          })}\r\n        >\r\n          <div className={classes.fakeToolbar} />\r\n          <Switch>\r\n            <Route path=\"/app/dashboard\" component={Dashboard} />\r\n\r\n            <Route path=\"/app/user-list\" component={UserList} />\r\n            <Route path=\"/app/user-detail\" component={UserDetail} />\r\n\r\n            <Route path=\"/app/customer-list\" component={CustomerList} />\r\n            <Route path=\"/app/customer-detail\" component={CustomerDetail} />\r\n            <Route\r\n              path=\"/app/customer-transaction\"\r\n              component={CustomerTransaction}\r\n            />\r\n\r\n            <Route path=\"/app/employee-list\" component={EmployeeList} />\r\n            <Route path=\"/app/employee-detail\" component={EmployeeDetail} />\r\n            <Route path=\"/app/employee-log\" component={EmployeeLog} />\r\n\r\n            <Route path=\"/app/driver-list\" component={DriverList} />\r\n            <Route path=\"/app/driver-detail\" component={DriverDetail} />\r\n\r\n            <Route path=\"/app/cash-list\" component={CashList} />\r\n            <Route path=\"/app/cash-detail\" component={CashDetail} />\r\n            <Route path=\"/app/cash-transaction\" component={CashPaymentReport} />\r\n\r\n            <Route path=\"/app/cheque-list\" component={ChequeList} />\r\n            <Route path=\"/app/cheque-detail\" component={ChequeDetail} />\r\n\r\n            <Route path=\"/app/cheque-list\" component={ChequeList} />\r\n            <Route path=\"/app/cheque-detail\" component={ChequeDetail} />\r\n\r\n            <Route path=\"/app/loan-list\" component={LoanList} />\r\n            <Route path=\"/app/loan-detail\" component={LoanDetail} />\r\n\r\n            <Route path=\"/app/invoice-list\" component={InvoiceList} />\r\n            <Route path=\"/app/invoice-detail\" component={InvoiceDetail} />\r\n\r\n            <Route path=\"/app/payment-list\" component={PaymentList} />\r\n            <Route path=\"/app/payment-detail\" component={PaymentDetail} />\r\n\r\n            <Route path=\"/app/product-list\" component={ProductList} />\r\n            <Route path=\"/app/product-detail\" component={ProductDetail} />\r\n            <Route path=\"/app/product-transfer\" component={ProductTransfer} />\r\n\r\n            <Route path=\"/app/depot-list\" component={DepotList} />\r\n            <Route path=\"/app/depot-detail\" component={DepotDetail} />\r\n\r\n            <Route path=\"/app/setting\" component={Setting} />\r\n            <Route path=\"/app/category\" component={Category} />\r\n\r\n            <Route path=\"/app/traffic\" component={Traffic} />\r\n            <Route path=\"/app/traffic-detail\" component={TrafficDetail} />\r\n            <Route path=\"/app/accountNumber\" component={AccountsNumber} />\r\n          </Switch>\r\n        </div>\r\n      </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles(theme => ({\r\n  container: {\r\n    height: \"100vh\",\r\n    width: \"100vw\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: theme.palette.primary.main,\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n  },\r\n  logotype: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginBottom: theme.spacing(12),\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  logotypeText: {\r\n    fontWeight: 500,\r\n    color: \"white\",\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  logotypeIcon: {\r\n    width: 70,\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  paperRoot: {\r\n    boxShadow: theme.customShadows.widgetDark,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n    paddingLeft: theme.spacing(6),\r\n    paddingRight: theme.spacing(6),\r\n    maxWidth: 404,\r\n  },\r\n  textRow: {\r\n    marginBottom: theme.spacing(10),\r\n    textAlign: \"center\",\r\n  },\r\n  errorCode: {\r\n    fontSize: 148,\r\n    fontWeight: 600,\r\n  },\r\n  safetyText: {\r\n    fontWeight: 300,\r\n    color: theme.palette.text.hint,\r\n  },\r\n  backButton: {\r\n    boxShadow: theme.customShadows.widget,\r\n    textTransform: \"none\",\r\n    fontSize: 22,\r\n  },\r\n}));\r\n","export default __webpack_public_path__ + \"static/media/logo.d0e27845.svg\";","import React from \"react\";\r\nimport { Grid, Paper, Typography, Button } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// logo\r\nimport logo from \"./logo.svg\";\r\n\r\nexport default function Error() {\r\n  var classes = useStyles();\r\n\r\n  return (\r\n    <Grid container className={classes.container}>\r\n      <div className={classes.logotype}>\r\n        <img className={classes.logotypeIcon} src={logo} alt=\"logo\" />\r\n        <Typography variant=\"h3\" color=\"white\" className={classes.logotypeText}>\r\n          Material Admin\r\n        </Typography>\r\n      </div>\r\n      <Paper classes={{ root: classes.paperRoot }}>\r\n        <Typography\r\n          variant=\"h1\"\r\n          color=\"primary\"\r\n          className={classnames(classes.textRow, classes.errorCode)}\r\n        >\r\n          404\r\n        </Typography>\r\n        <Typography variant=\"h5\" color=\"primary\" className={classes.textRow}>\r\n          Oops. Looks like the page you're looking for no longer exists\r\n        </Typography>\r\n        <Typography\r\n          variant=\"h6\"\r\n          color=\"text\"\r\n          colorBrightness=\"secondary\"\r\n          className={classnames(classes.textRow, classes.safetyText)}\r\n        >\r\n          But we're here to bring you back to safety\r\n        </Typography>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          component={Link}\r\n          to=\"/\"\r\n          size=\"large\"\r\n          className={classes.backButton}\r\n        >\r\n          Back to Home\r\n        </Button>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  container: {\r\n    height: \"100vh\",\r\n    width: \"100vw\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    overflow: \"hidden\",\r\n  },\r\n  title: {\r\n    display: \"flex\",\r\n    alignItems: \"baseLine\",\r\n    marginBottom: 30,\r\n    \"& h4\": {\r\n      margin: \"0 10px\",\r\n    },\r\n    \"& hr\": {\r\n      flex: 1,\r\n    },\r\n  },\r\n  backgroundImage: {\r\n    position: \"absolute\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    filter: \"brightness(0.5)\",\r\n  },\r\n  logotypeContainer: {\r\n    position: \"relative\",\r\n    width: \"70%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: \"50%\",\r\n    },\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  logotypeImage: {\r\n    width: 165,\r\n    marginBottom: theme.spacing(4),\r\n    position: \"relative\",\r\n  },\r\n  logotypeText: {\r\n    position: \"relative\",\r\n    color: \"white\",\r\n    fontWeight: 500,\r\n    fontSize: 84,\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      fontSize: 48,\r\n    },\r\n  },\r\n  formContainer: {\r\n    width: \"30%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: \"50%\",\r\n    },\r\n  },\r\n  form: {\r\n    width: 320,\r\n  },\r\n  tab: {\r\n    fontWeight: 400,\r\n    fontSize: 18,\r\n  },\r\n  greeting: {\r\n    fontWeight: 500,\r\n    textAlign: \"center\",\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  subGreeting: {\r\n    fontWeight: 500,\r\n    textAlign: \"center\",\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  googleButton: {\r\n    marginTop: theme.spacing(6),\r\n    boxShadow: theme.customShadows.widget,\r\n    backgroundColor: \"white\",\r\n    width: \"100%\",\r\n    textTransform: \"none\",\r\n  },\r\n  googleButtonCreating: {\r\n    marginTop: 0,\r\n  },\r\n  googleIcon: {\r\n    width: 30,\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  creatingButtonContainer: {\r\n    marginTop: theme.spacing(2.5),\r\n    height: 46,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  createAccountButton: {\r\n    height: 46,\r\n    textTransform: \"none\",\r\n  },\r\n  formDividerContainer: {\r\n    marginTop: theme.spacing(4),\r\n    marginBottom: theme.spacing(4),\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  formDividerWord: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  formDivider: {\r\n    flexGrow: 1,\r\n    height: 1,\r\n    backgroundColor: theme.palette.text.hint + \"40\",\r\n  },\r\n  errorMessage: {\r\n    textAlign: \"center\",\r\n  },\r\n  textFieldUnderline: {\r\n    \"&:before\": {\r\n      borderBottomColor: theme.palette.primary.light,\r\n    },\r\n    \"&:after\": {\r\n      borderBottomColor: theme.palette.primary.main,\r\n    },\r\n    \"&:hover:before\": {\r\n      borderBottomColor: `${theme.palette.primary.light} !important`,\r\n    },\r\n  },\r\n  textField: {\r\n    borderBottomColor: theme.palette.background.light,\r\n  },\r\n  formButtons: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(4),\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  forgetButton: {\r\n    textTransform: \"none\",\r\n    fontWeight: 400,\r\n  },\r\n  loginLoader: {\r\n    marginLeft: theme.spacing(4),\r\n  },\r\n  copyright: {\r\n    marginTop: theme.spacing(4),\r\n    whiteSpace: \"nowrap\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      position: \"absolute\",\r\n      bottom: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n","export default __webpack_public_path__ + \"static/media/logo.d0e27845.svg\";","export default __webpack_public_path__ + \"static/media/111.788f87ef.jpg\";","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  CircularProgress,\r\n  Typography,\r\n  Button,\r\n  TextField,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport useStyles from \"./styles\";\r\nimport logo from \"./logo.svg\";\r\nimport back from \"./111.jpg\";\r\nimport { useUserDispatch, loginUser } from \"../../context/UserContext\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport unitAcion from \"../../redux/actions/unitAction\";\r\n\r\nfunction Login(props) {\r\n  const classes = useStyles();\r\n  const userDispatch = useUserDispatch();\r\n  const loginRequest = useApi({\r\n    method: \"post\",\r\n    url: \"auth/login\",\r\n  });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const [usernameValue, setUsernameValue] = useState(\"\");\r\n  const [passwordValue, setPasswordValue] = useState(\"\");\r\n\r\n  const onPressEnter = function (event) {\r\n    if (event.which === 13 && passwordValue && usernameValue) {\r\n      loginUser(\r\n        loginRequest,\r\n        userDispatch,\r\n        usernameValue,\r\n        passwordValue,\r\n        props.history,\r\n        setIsLoading,\r\n        setError,\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    unitAcion.setProdcutUnit();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container className={classes.container}>\r\n      <div className={classes.logotypeContainer}>\r\n        <img src={back} alt=\"logo\" className={classes.backgroundImage} />\r\n        <img src={logo} alt=\"logo\" className={classes.logotypeImage} />\r\n        <Typography className={classes.logotypeText}>\r\n          سیستم یکپارچه مدیریت\r\n        </Typography>\r\n      </div>\r\n      <div className={classes.formContainer}>\r\n        <div className={classes.form}>\r\n          <React.Fragment>\r\n            <div className={classes.title}>\r\n              <Divider />\r\n              <Typography variant=\"h4\" className={classes.greeting}>\r\n                ورود به سیستم\r\n              </Typography>\r\n              <Divider />\r\n            </div>\r\n\r\n            <TextField\r\n              label=\"نام کاربری\"\r\n              variant=\"outlined\"\r\n              id=\"username\"\r\n              InputProps={{\r\n                classes: {\r\n                  input: classes.textField,\r\n                },\r\n              }}\r\n              value={usernameValue}\r\n              onChange={(e) => setUsernameValue(e.target.value)}\r\n              margin=\"normal\"\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              label=\"رمز عبور \"\r\n              variant=\"outlined\"\r\n              id=\"password\"\r\n              InputProps={{\r\n                classes: {\r\n                  input: classes.textField,\r\n                },\r\n              }}\r\n              value={passwordValue}\r\n              onChange={(e) => setPasswordValue(e.target.value)}\r\n              margin=\"normal\"\r\n              type=\"password\"\r\n              fullWidth\r\n              onKeyPress={onPressEnter}\r\n            />\r\n            <div className={classes.formButtons}>\r\n              {isLoading ? (\r\n                <CircularProgress size={26} className={classes.loginLoader} />\r\n              ) : (\r\n                <Button\r\n                  fullWidth\r\n                  disabled={\r\n                    usernameValue.length === 0 || passwordValue.length === 0\r\n                  }\r\n                  onClick={() =>\r\n                    loginUser(\r\n                      loginRequest,\r\n                      userDispatch,\r\n                      usernameValue,\r\n                      passwordValue,\r\n                      props.history,\r\n                      setIsLoading,\r\n                      setError,\r\n                    )\r\n                  }\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  size=\"large\"\r\n                >\r\n                  ورود به سیستم\r\n                </Button>\r\n              )}\r\n              {/* <Button\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                className={classes.forgetButton}\r\n              >\r\n                بازیابی رمز عبور\r\n              </Button> */}\r\n            </div>\r\n          </React.Fragment>\r\n        </div>\r\n        <Typography\r\n          color=\"primary\"\r\n          className={classes.copyright}\r\n          variant=\"caption\"\r\n        >\r\n          تمامی حقوق مادی و معنوی این اثر متعلق به شرکت المان می باشد\r\n        </Typography>\r\n      </div>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default withRouter(Login);\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  HashRouter,\r\n} from \"react-router-dom\";\r\n\r\nimport Layout from \"./Layout\";\r\nimport Error from \"../pages/error\";\r\nimport Login from \"../pages/login\";\r\nimport { useUserState } from \"../context/UserContext\";\r\nexport default function App() {\r\n  var { isAuthenticated } = useUserState();\r\n\r\n  return (\r\n    <HashRouter>\r\n      <Switch>\r\n        <Route exact path=\"/\" render={() => <Redirect to=\"/app/dashboard\" />} />\r\n        <Route\r\n          exact\r\n          path=\"/app\"\r\n          render={() => <Redirect to=\"/app/dashboard\" />}\r\n        />\r\n\r\n        <PrivateRoute path=\"/app\" component={Layout} />\r\n        <PublicRoute path=\"/login\" component={Login} />\r\n        <Route component={Error} />\r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n\r\n  // #######################################################################\r\n\r\n  function PrivateRoute({ component, ...rest }) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={(props) =>\r\n          isAuthenticated ? (\r\n            React.createElement(component, props)\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: {\r\n                  from: props.location,\r\n                },\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  function PublicRoute({ component, ...rest }) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={(props) =>\r\n          isAuthenticated ? (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/\",\r\n              }}\r\n            />\r\n          ) : (\r\n            React.createElement(component, props)\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { create } from \"jss\";\r\nimport rtl from \"jss-rtl\";\r\nimport { StylesProvider, jssPreset } from \"@material-ui/core/styles\";\r\n\r\n// Configure JSS\r\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\r\n\r\nfunction RTL(props) {\r\n  return <StylesProvider jss={jss}>{props.children}</StylesProvider>;\r\n}\r\n\r\nexport default RTL;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./assets/css/font.css\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport { CssBaseline } from \"@material-ui/core\";\r\nimport { Provider } from \"react-redux\";\r\nimport Alert from \"./components/Alert\";\r\nimport Dialog from \"./components/Modal\";\r\nimport Themes from \"./themes\";\r\nimport App from \"./components/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { LayoutProvider } from \"./context/LayoutContext\";\r\nimport { UserProvider } from \"./context/UserContext\";\r\nimport store from \"./redux/store\";\r\nimport RTLProvider from \"./themes/RTL\";\r\nimport jMoment from \"moment-jalaali\";\r\nimport JalaliUtils from \"@date-io/jalaali\";\r\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\n\r\njMoment.loadPersian({ dialect: \"persian-modern\", usePersianDigits: true });\r\n\r\nReactDOM.render(\r\n  <MuiPickersUtilsProvider utils={JalaliUtils} locale=\"fa\">\r\n    <Provider store={store}>\r\n      <LayoutProvider>\r\n        <UserProvider>\r\n          <ThemeProvider theme={Themes.default}>\r\n            <RTLProvider>\r\n              <CssBaseline />\r\n              <App />\r\n              <Alert />\r\n              <Dialog />\r\n            </RTLProvider>\r\n          </ThemeProvider>\r\n        </UserProvider>\r\n      </LayoutProvider>\r\n    </Provider>\r\n  </MuiPickersUtilsProvider>,\r\n  document.getElementById(\"root\"),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}